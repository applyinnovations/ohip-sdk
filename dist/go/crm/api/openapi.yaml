openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Customer Relationship Management (profile) functionality\
    \ in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including\
    \ Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile\
    \ can store and display a wide range of information about the guest, company,\
    \ travel agent etc., depending upon the type of profile.  For example, a guest\
    \ profile can store the guest name, address, contact information, details on billing,\
    \ membership benefits, preferences and much more.  All profiles in OPERA when\
    \ created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br\
    \ /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document\
    \ and all content within is available under the Universal Permissive License v\
    \ 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or\
    \ its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Customer Relationship Management API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /crm/v1
tags:
- description: "The Profile APIs allow you to view, create, update, and delete profiles\
    \ in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID\
    \ is assigned.  Use this profileID to retrieve and update details relating to\
    \ that profile.   The resource 'Companies' includes group, source, company and\
    \ travel agent profile types.   The resource 'Guests' includes individual and\
    \ contact profile types."
  name: Profile
- description: The Profile External module allows you to retrieve and manage profiles
    from an external system.
  name: ProfileExternal
- description: "Profiles have many Lists of Values, storing the available options\
    \ a user can select when updating a profile.  This module allows you to get available\
    \ ListOfValues for Profile Preferences and AR Addresses on a profile."
  name: ProfileLOV
- description: "This will allow you to create a guest profile enrollment in OPERA\
    \ Cloud. Enrollment relates to a membership program, so as an example you can\
    \ enrol the guest Mr Tom Smith into a Membership / loyalty program."
  name: ProfileMembership
- description: These APIs will allow you to retrieve statistical data for a specified
    profile.
  name: ProfileStatistics
- description: "These APIs will allow you to view, create, update, and delete profiles\
    \ in OPERA Cloud."
  name: SuspendedStay
paths:
  /address:
    get:
      description: This API will get city and states. <p><strong>OperationId:</strong>getAddress</p>
      operationId: getAddress
      parameters:
      - description: When true indicates that only profiles with city will be fetched.
        in: query
        name: excludeNoCity
        schema:
          type: boolean
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: code
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cityState'
          description: "Response object for fetching City and State based on search\
            \ criteria. This object contains address information,Success,Warnings\
            \ and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Address not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get city states
      tags:
      - Profile
  /airline/transactions:
    get:
      deprecated: true
      description: Request for fetching membership transactions processed by the airline.
        <p><strong>OperationId:</strong>getAirlineTransactionsStatus</p> <p>The maximum
        allowable limit for this API is <strong>200</strong>.</p>
      operationId: getAirlineTransactionsStatus
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: batchId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: batchIdType
        schema:
          type: string
      - description: The date when this batch was imported into OPERA
        in: query
        name: importDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/airlineTransactionsStatus'
          description: Request object for fetching membership transactions processed
            by the airline.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AirlineTransactionsStatus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get airline transactions status
      tags:
      - ProfileMembership
  /availableAwardsBasedOnType:
    get:
      description: "Get available awards based on type of award selected like Rates,\
        \ products or services, room type upgrades, and other gifts. <p><strong>OperationId:</strong>getAvailableAwardsBasedOnType</p>\
        \ <p>This API allows a time span of <strong>90</strong> days.</p>"
      operationId: getAvailableAwardsBasedOnType
      parameters:
      - description: This award allows a guest to apply available membership points
          towards the balance of his or her bill.
        in: query
        name: awardBasedOn
        schema:
          enum:
          - Rate
          - Product
          - Upgrade
          - Other
          - Ft
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: rateCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: arrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: departureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: bookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: pointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: pointsAbove
        schema:
          type: integer
      - description: Indicates rate code for the room type.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: Number of rooms that the member will be using.
        in: query
        name: rooms
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: awardType
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: productCriteriaMembershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: productCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: productCriteriaArrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: productCriteriaDepartureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: productCriteriaBookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: productCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: productCriteriaPointsAbove
        schema:
          type: integer
      - description: Package/Product code for the award to check availability.
        in: query
        name: packageCode
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: upgradeCriteriaMembershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: upgradeCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaArrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaDepartureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaBookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: upgradeCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: upgradeCriteriaPointsAbove
        schema:
          type: integer
      - description: Indicates availability of upgrade awards based on the room type(range
          of room types )
        in: query
        name: fromRoomCategory
        schema:
          type: string
      - description: Indicates availability of upgrade awards based on the room type(range
          of room types )
        in: query
        name: toRoomCategory
        schema:
          type: string
      - description: Number of rooms that the member will be using.
        in: query
        name: upgradeCriteriaRooms
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: upgradeCriteriaAwardType
        schema:
          type: string
      - description: Unique code identifying the Award.
        in: query
        name: awardCode
        schema:
          type: string
      - description: Total amount for the bill.
        in: query
        name: totalBillingAmount
        schema:
          type: number
      - description: The currency code for the member.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: fTPaymentCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: fTPaymentCriteriaPointsAbove
        schema:
          type: integer
      - description: Unique code identifying the award.
        in: query
        name: otherCriteriaAwardCode
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: otherCriteriaMembershipType
        schema:
          type: string
      - description: Level of this Membership Type.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Name or code identifying the award.
        in: query
        name: shortDescription
        schema:
          type: string
      - description: "Amount of currency of the worth of the other award,below or\
          \ actual value."
        in: query
        name: valueBelow
        schema:
          type: number
      - description: "Amount of currency of the worth of the other award,above or\
          \ actual value."
        in: query
        name: valueAbove
        schema:
          type: number
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: otherCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: otherCriteriaPointsAbove
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availableAwardsBasedOnType'
          description: Response object to fetch member available awards based on the
            type being passed.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableAwardsBasedOnType not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Available Awards
      tags:
      - ProfileMembership
  /awards:
    delete:
      description: Operation to cancel an award already been granted to a member.
        <p><strong>OperationId:</strong>deleteAwards</p>
      operationId: deleteAwards
      parameters:
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: awardNumber
        required: true
        schema:
          type: number
      - description: Identifies reservation cancellation number.
        in: query
        name: reservationCancellationNumber
        schema:
          type: string
      - description: "The amount of points that will be deducted for cancelling the\
          \ award, from the total guest award points."
        in: query
        name: actualCancelPoints
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Awards
      tags:
      - ProfileMembership
  /awardsToGrant:
    get:
      description: Fetch awards list to be able to grant the award to a member <p><strong>OperationId:</strong>getAwardsToGrant</p>
      operationId: getAwardsToGrant
      parameters:
      - description: This award allows a guest to apply available membership points
          towards the balance of his or her bill.
        in: query
        name: awardBasedOn
        schema:
          enum:
          - Rate
          - Product
          - Upgrade
          - Other
          - Ft
          type: string
      - description: The number of points that must be redeemed for this award.
        in: query
        name: totalPointsRequired
        schema:
          type: number
      - description: Number of rooms that the member will be using.
        in: query
        name: rooms
        schema:
          type: string
      - description: Unique Membership ID to get award info.
        in: query
        name: membershipId
        schema:
          type: number
      - description: Membership type for which awards are defined.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: awardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: grantAwardInfoHotelId
        schema:
          type: string
      - description: Rate code associated with the award.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoom
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoom
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/awardsToGrant'
          description: Response object to fetch award details to grant an award.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AwardsToGrant not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Awards to Grant
      tags:
      - ProfileMembership
  /certificates:
    delete:
      description: This API will allow you to delete a certificate. <p><strong>OperationId:</strong>deleteCertificate</p>
      operationId: deleteCertificate
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete certificate
      tags:
      - Profile
  /companies:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postCompanyProfile</p>"
      operationId: postCompanyProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/company'
        description: Request object for creation of company profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates creation of a company/agent/group/source profile
        in OPERA.
      tags:
      - Profile
      x-codegen-request-body-name: company
  /companies/{corporateID}:
    get:
      description: "Use this to retrieve a specific Company, Travel Agent, Group or\
        \ Source profile. You must know the corporate ID of the profile for the request\
        \ API. <p><strong>OperationId:</strong>getCompanyProfile</p>"
      operationId: getCompanyProfile
      parameters:
      - description: Unique OPERA Corporate ID used to find company/agent/group/source
          profile in OPERA.
        in: path
        name: corporateID
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/company'
            application/json:
              example:
                companyIdList:
                - id: "329620"
                  type: Profile
                - id: "222572"
                  type: CorporateId
                companyDetails:
                  company:
                    companyName: "Example Corporation, Ltd."
                    iATAInfo: {}
                  profileAccessType:
                    hotelId: HOTEL1
                    sharedLevel: Property
                  profileRestrictions:
                    restricted: false
                  profileType: Company
                  statusCode: Active
                  registeredProperty: HOTEL1
                  createDateTime: 2019-06-26 16:14:41.0
                  creatorId: BEN@HOTEL1
                  lastModifyDateTime: 2019-06-26 16:14:41.0
                  lastModifierId: BEN@HOTEL1
                  markForHistory: false
          description: Response object for fetching unique company profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompanyProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get company profile by corporate ID
      tags:
      - Profile
  /duplicateExternalSubscriptions:
    get:
      description: "Fetch profile subscriptions where the same OPERA Cloud profile\
        \ is linked to multiple external profiles, within the same external system.\
        \ <p><strong>OperationId:</strong>getDuplicateExternalSubscriptions</p> <p>The\
        \ maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getDuplicateExternalSubscriptions
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Code identifying the external database record which is linked
          to external systems.
        in: query
        name: databaseId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/duplicateExternalSubscriptions'
          description: Response object for fetching subscriptions where the same OPERA
            profile is linked to multiple external profiles within the same external
            system.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DuplicateExternalSubscriptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get profiles with duplicate external subscriptions '
      tags:
      - Profile
  /duplicateOPERASubscriptions:
    get:
      description: Fetch subscriptions where an external profile within a particular
        external system is linked to multiple OPERA Cloud profiles. <p><strong>OperationId:</strong>getDuplicateOPERASubscriptions</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getDuplicateOPERASubscriptions
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Code identifying the external database record which is linked
          to external systems.
        in: query
        name: databaseId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/duplicateOPERASubscriptions'
          description: Response object for fetching subscriptions where an external
            profile within a particular external system is linked to multiple OPERA
            profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DuplicateOPERASubscriptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profiles with duplicate OPERA Cloud subscriptions
      tags:
      - Profile
  /ecertificates:
    get:
      description: This API allows you to retrieve eCertificates which exist on a
        profile in OPERA Cloud. <p><strong>OperationId:</strong>getECertificates</p>
      operationId: getECertificates
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Property for which preferences are to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Ecertificates search criteria
        in: query
        name: code
        schema:
          type: string
      - description: Ecertificates search criteria
        in: query
        name: groupCode
        schema:
          type: string
      - description: Indicates that OPERA E-Certificate is reserved.
        explode: true
        in: query
        name: status
        schema:
          items:
            enum:
            - Cancelled
            - Consumed
            - Deleted
            - Expired
            - Issued
            - Reserved
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Include or not include inactive E-certificate.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: System generated unique voucher number.
        in: query
        name: voucherNo
        schema:
          type: string
      - description: List of System generated unique voucher numbers to be excluded.
        explode: true
        in: query
        name: excludeVoucherNumbers
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search criteria to limit Ecertificates that are available for
          reservation consumption.
        in: query
        name: availableECertificates
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eCertificates'
          description: "Response object for fetch ECertificates. This object contains\
            \ collection of ECertificates,Success,Warnings and Errors related to this\
            \ operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ECertificates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get e-certificate
      tags:
      - Profile
    post:
      description: This API allows you to create a new eCertificates onto a profile
        in OPERA Cloud. <p><strong>OperationId:</strong>postECertificate</p>
      operationId: postECertificate
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateGeneration'
        description: Request object to issue E-Certificate.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create e-certificate
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateGeneration
  /ecertificates/{certificateId}:
    delete:
      description: This API allows you to delete an eCertificates which exist on a
        profile in OPERA Cloud. <p><strong>OperationId:</strong>deleteECertificate</p>
      operationId: deleteECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete e-certificate
      tags:
      - Profile
    put:
      description: Use this API to consume (use) an E-Certificate.  <p><strong>OperationId:</strong>consumeECertificate</p>
      operationId: consumeECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToConsume'
        description: Request object to Consume an E-Certificate.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Consume an E-Certificate
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToConsume
  /ecertificates/{certificateId}/action/validate:
    put:
      description: Use this API to verify an ng E-Certificate Number. <p><strong>OperationId:</strong>verifyECertificate</p>
      operationId: verifyECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToVerify'
        description: Request object to Verify an E-Certificate Number.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/verifiedECertificate'
          description: Response object to Verify E-Certificate and will return the
            profile information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Verify E-Certificate Number
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToVerify
  /ecertificates/{certificateId}/extensions:
    post:
      description: Use this API to extend the date of an existing E-Certificate. <p><strong>OperationId:</strong>extendECertificate</p>
      operationId: extendECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToExtend'
        description: Request object to Consume an E-Certificate.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend E-Certificate Expiry date
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToExtend
  /enrollments:
    post:
      description: Use this API when you have a guest profile and you want to enroll
        that guest profile into a membership program in an external system. <p><strong>OperationId:</strong>postEnrollment</p>
      operationId: postEnrollment
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/enrollment'
        description: Request object to create profile enrollment.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Enrollment
      tags:
      - ProfileMembership
      x-codegen-request-body-name: enrollment
  /externalSystems/{extSystemCode}/profiles/{profileExternalId}:
    get:
      description: "When a reservation is booked via an external system, you would\
        \ use this API to retrieve a reservation using the external ID in the request\
        \ <p><strong>OperationId:</strong>getProfileByExtId</p>"
      operationId: getProfileByExtId
      parameters:
      - description: External System's ID used to get the profile.
        in: path
        name: profileExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileByExtId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by external ID
      tags:
      - Profile
    put:
      description: Use this API to update guests details on profile.  You will need
        to know the External Profile ID and external system code to use this API.
        <p><strong>OperationId:</strong>putProfileByExtId</p>
      operationId: putProfileByExtId
      parameters:
      - description: External System's ID used to get the profile.
        in: path
        name: profileExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileByExtId_request'
        description: Request object for change/modification of profile details. This
          object contains modified profile details with unique identifiers for each
          profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
          description: "Response object for change/modification of profile details.\
            \ This object contains the profile details with unique identifiers for\
            \ each profile. Also Success,Warnings and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update by external ID
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /guests:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postGuestProfile</p>"
      operationId: postGuestProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/guest'
        description: Request object for creation of guest profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "Create a guest, contact or employee profile in OPERA"
      tags:
      - Profile
      x-codegen-request-body-name: guest
  /guests/{guestId}:
    get:
      description: "Use this API to retrieve all data stored for a guest Profile,\
        \ such as their address, phone number, preferences. You must already know\
        \ the guests Profile ID. If you don't know the profile ID, first use the API\
        \ getGuests to find the profile ID. <p><strong>OperationId:</strong>getGuestProfile</p>"
      operationId: getGuestProfile
      parameters:
      - description: Unique OPERA internal ID used to find guest/contact/employee
          profile in OPERA.
        in: path
        name: guestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guest'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching unique guest profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GuestProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get guest profile by guest ID
      tags:
      - Profile
  /hotels/{hotelId}/memberships/{membershipId}:
    get:
      description: Get a memberships issued awards points per property. <p><strong>OperationId:</strong>getMembershipAwardPointsByHotel</p>
      operationId: getMembershipAwardPointsByHotel
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipAwardPointsByHotel'
          description: Response object for fetching member award points by Hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipAwardPointsByHotel not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Membership Issued awards points '
      tags:
      - ProfileMembership
  /hotels/{hotelId}/profiles/{profileId}/commissionAccount:
    put:
      description: You can use this API to copy the commission account on a profile
        <p><strong>OperationId:</strong>copyProfileCommissionAccount</p>
      operationId: copyProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccountCopy'
        description: Request object for copying transaction groups configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy profile commission account
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccountCopy
  /hotels/{hotelId}/profiles/{profileId}/flexFieldCode/{flexFieldCode}:
    delete:
      description: Operation to delete a flex field Value. <p><strong>OperationId:</strong>deleteFlexFieldValue</p>
      operationId: deleteProfileFlexFieldValue
      parameters:
      - description: Flex field code
        in: path
        name: flexFieldCode
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete a flex field.
      tags:
      - Profile
  /hotels/{hotelId}/profiles/{profileId}/flexFieldValues:
    get:
      description: API to fetch flex field values. <p><strong>OperationId:</strong>getFlexFieldValue</p>
      operationId: getProfileFlexFieldValue
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flex field ID
        in: query
        name: flexFieldId
        schema:
          type: number
      - description: Flex field code
        in: query
        name: flexFieldCode
        schema:
          type: string
      - description: Flex field Value
        in: query
        name: flexFieldValue
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
          Default is 50
        in: query
        name: limit
        schema:
          default: 50
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/flexFieldsResponse'
          description: Response object for fetching flex field Values.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Flex field details not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch flex field values.
      tags:
      - Profile
    post:
      description: Operation to create a flex field Value. <p><strong>OperationId:</strong>postFlexFieldValue</p>
      operationId: postProfileFlexFieldValue
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/flexFieldValues'
        description: Request object to create a new flex field
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create a flex field with value for a module.
      tags:
      - Profile
      x-codegen-request-body-name: flexFieldValueInfo
    put:
      description: Operation to update flex field value. <p><strong>OperationId:</strong>putFlexFieldValue</p>
      operationId: putProfileFlexFieldValue
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/flexFieldValues'
        description: Request object for updating the configuration of flex fields.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to update flex field value.
      tags:
      - Profile
      x-codegen-request-body-name: flexFieldValueInfo
  /issueOtherAwards:
    post:
      description: This API will allow you to issue OTHER type award based on membership
        id or membership type and membership card number <p><strong>OperationId:</strong>issueOtherAwards</p>
      operationId: issueOtherAwards
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/otherAwardsIssueCriteria'
        description: Request object to issue an OTHER type award to a member's profile.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/issuedAward'
          description: Response object for issue awards.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Issue an OTHER type award '
      tags:
      - ProfileMembership
      x-codegen-request-body-name: otherAwardsIssueCriteria
  /membershipClaims:
    get:
      description: Retrieve available membership claims without specifying the membership
        ID. <p><strong>OperationId:</strong>getAllMembershipClaims</p> <p>This API
        allows a time span of <strong>90</strong> days.</p>
      operationId: getAllMembershipClaims
      parameters:
      - description: Id to get the claims.
        in: query
        name: membershipId
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: Membership Type code.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of user-definable claim to be searched.
        in: query
        name: claimType
        schema:
          type: string
      - description: Source of the membership claim.
        in: query
        name: source
        schema:
          enum:
          - Ocis
          - Opms
          - Web
          type: string
      - description: Unique application user ID of the person responsible for handling
          the claim.
        in: query
        name: owner
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: claimNumber
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: claimNoContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: claimNoType
        schema:
          type: string
      - description: Property where the stay took place.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Reservation confirmation or booking reference number.
        in: query
        name: confirmationNo
        schema:
          type: string
      - description: Application user ID of the user who entered the claim.
        in: query
        name: submitter
        schema:
          type: string
      - description: "Status of the claim.(Open, Waiting for Manager, etc.)"
        in: query
        name: claimStatus
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: closeDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: closeDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: claimDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: claimDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: replyByEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: replyByStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - description: Claim approve or reject status.
        in: query
        name: approvalStatus
        schema:
          enum:
          - Approved
          - Rejected
          - Pending
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaims'
          description: Response object for fetching membership claims.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaims not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership claims
      tags:
      - ProfileMembership
    post:
      description: This will create membership claim details based on the claim number
        and instructions provided in the request. <p><strong>OperationId:</strong>postMembershipClaim</p>
      operationId: postMembershipClaim
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipClaim'
        description: Request object for creating membership claim.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create membership Claim
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipClaim
  /membershipClaims/{claimId}:
    get:
      description: Get membership claim details based on the claim number and instructions
        provided in the request. <p><strong>OperationId:</strong>getMembershipClaim</p>
      operationId: getMembershipClaim
      parameters:
      - in: path
        name: claimId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Simple type for membership claim instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ClaimDetail
            - ClaimActivityLog
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaim'
          description: Response object for fetching membership claim.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaim not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get membership claim '
      tags:
      - ProfileMembership
    put:
      description: Change membership claim details based on the claim number and instructions
        provided in the request. <p><strong>OperationId:</strong>changeMembershipClaim</p>
      operationId: changeMembershipClaim
      parameters:
      - in: path
        name: claimId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipClaim'
        description: Request object for changing membership claim information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change membership Claim
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipClaim
  /membershipPoints/calculations:
    post:
      description: Start Membership Points Calculation process <p><strong>OperationId:</strong>calculateMembershipPoints</p>
      operationId: calculateMembershipPoints
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipPointsToCalculate'
        description: Request to run membership points calculation job.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Calculate Membership Points
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipPointsToCalculate
  /membershipPointsExceptions:
    get:
      description: Use this API to get membership points exceptions.<p><strong>OperationId:</strong>getMembershipPointsExceptions</p><br>The
        maximum date Range supported between arrival and departure date is 90 days.
      operationId: getMembershipPointsExceptions
      parameters:
      - description: Membership transaction belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Profile Id of the guest.
        in: query
        name: profileId
        schema:
          type: number
      - description: Arrival From Date to fetch the reservations flagged for Membership
          Points Exception
        in: query
        name: arrivalFrom
        schema:
          format: date
          type: string
      - description: Departure To Date to fetch the reservation flagged for Membership
          Points Exception
        in: query
        name: departureTo
        schema:
          format: date
          type: string
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: The current level of the membership.
        in: query
        name: membershipLevel
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipCardNo
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: "Indicates the type of Exception like Exception not resolved,Points\
          \ Rejected on Exception etc.,"
        in: query
        name: exceptionStatus
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberPointsExceptions'
          description: Response object for fetching membership points exceptions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipPointsExceptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership points exception details
      tags:
      - ProfileMembership
    put:
      description: Use this API to update membership points exceptions.<p><strong>OperationId:</strong>putMembershipPointsExceptions</p>
      operationId: putMembershipPointsExceptions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipPointsExceptions'
        description: Request object for updating membership points exceptions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update membership points exceptions
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipPointsExceptions
  /membershipReservationActivity:
    get:
      description: "This API is useful to retrieve membership reservation activity\
        \ for the day(ExpectedArrival, ExpectedDepartures, InHouse, Projected Room\
        \ Revenue) <p><strong>OperationId:</strong>getMembershipReservationActivity</p>"
      operationId: getMembershipReservationActivity
      parameters:
      - description: Unique ID of the hotels to fetch the membership reservation activity.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Business Date of the property selected.
        in: query
        name: propertyDate
        schema:
          format: date
          type: string
      - description: Room Classes required to fetch the membership reservation activity.
        explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership Type required to fetch the membership reservation
          activity.
        in: query
        name: membershipType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipReservationDetails'
          description: Response element for membership Reservation Details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Statistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Reservation Activity
      tags:
      - ProfileMembership
  /membershipTierProjections:
    get:
      description: Retrieve a list of membership Tier Projection such as upgrades
        and downgrades. <p><strong>OperationId:</strong>getMembershipTierProjections</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getMembershipTierProjections
      parameters:
      - description: Membership Card Number.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Type of the Membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Date for which Tier projections is fetched.
        in: query
        name: projectionDate
        schema:
          format: date
          type: string
      - description: Upgrade And Downgrade
        in: query
        name: projectionType
        schema:
          enum:
          - Upgrade
          - Downgrade
          - UpgradeAndDowngrade
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTierProjections'
          description: Response object for fetching Membership Tier Process Text.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTierProjections not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Tier Projection
      tags:
      - Profile
  /membershipTransactions/{membershipTransactionId}:
    get:
      description: Retrieve membership transactions. <p><strong>OperationId:</strong>getMembershipTransaction</p>
      operationId: getMembershipTransaction
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransaction'
          description: Response object for fetching a membership transaction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransaction not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a membership transaction
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}/awardPoints:
    get:
      description: "Retrieves the validated rule used to generate award points, the\
        \ type of points, number of points, cost per point, rule code for the award\
        \ points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionAwardPoints</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getMembershipTransactionAwardPoints
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPoints'
          description: Response object for fetching membership transaction points
            information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionAwardPoints not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the Award Points Accrued for the current points transaction.
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}/pointRejectionReasons:
    get:
      description: "Retrieves the rule used to generate points and the reason the\
        \ points were not awarded (validation failure, for e.g.'Membership level requirements\
        \ not met'). <p><strong>OperationId:</strong>getMembershipTransactionPointsRejectionReasons</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getMembershipTransactionPointsRejectionReasons
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/pointsRejectionReasons'
          description: Response object for fetching member transactions points rejection
            reasons information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionPointsRejectionReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the reason points were not awarded for a given points transaction.
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}/rates:
    get:
      description: "Retrieves the dates of the stay, the rate code, the PMS rate amount,\
        \ the central rate amount, the central currency and the market code associated\
        \ with the stay. <p><strong>OperationId:</strong>getMembershipTransactionRates</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getMembershipTransactionRates
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/rates'
          description: Response object for fetching Membership Transaction Rates information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the rate details associated to current points transaction.
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}/revenue:
    get:
      description: "Retrieves the date the revenue was recognized, the revenue type\
        \ (PMS revenue buckets are seen as revenue types in ORS), PMS revenue and\
        \ central <p><strong>OperationId:</strong>getMembershipTransactionRevenue</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getMembershipTransactionRevenue
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenues'
          description: Response object for fetching Membership Transaction Revenue.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionRevenue not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the revenue details for the stay associated with current point
        transaction.
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}/tierPoints:
    get:
      description: "Retrieves the validated rule used to generate tier points, the\
        \ type of points, number of points, cost per point, rule code for the award\
        \ points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionTierPoints</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getMembershipTransactionTierPoints
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPoints'
          description: Response object for fetching membership transaction points
            information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionTierPoints not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the Tier Points Accrued for the current points transaction
      tags:
      - ProfileMembership
  /memberships/{membershipId}/award:
    get:
      description: Export members information for Fulfillment house processing <p><strong>OperationId:</strong>exportMembershipAward</p>
        <p>This API allows a time span of <strong>90</strong> days.</p>
      operationId: exportMembershipAward
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: rateInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: totalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: pointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: cancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: cancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: cancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: cancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: rawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: awardNumber
        schema:
          type: number
      - description: Rate code associated with the award.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Rate code description associated with the award.
        in: query
        name: rateDescription
        schema:
          type: string
      - description: Code for the room type in which the award was issued.
        in: query
        name: roomLabel
        schema:
          type: string
      - description: Description of the Room.
        in: query
        name: roomDescription
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: The date of the reservation associated with the award. There
          may be more than one date (multiple nights) associated with award.
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: awardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: productInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: productInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: productInfoPointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: productInfoCancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: productInfoCancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: productInfoCancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: productInfoCancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: productInfoRawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: productInfoAwardNumber
        schema:
          type: number
      - description: Package/Product code for the award .
        in: query
        name: packageCode
        schema:
          type: string
      - description: Description of the product.
        in: query
        name: packageDescription
        schema:
          type: string
      - description: The valid time period from when the award can be issued.
        in: query
        name: awardValidFrom
        schema:
          format: date
          type: string
      - description: The valid time to an issued award.
        in: query
        name: awardValidTo
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: upgradeInfoAwardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: upgradeInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: upgradeInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: upgradeInfoPointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: upgradeInfoCancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: upgradeInfoCancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: upgradeInfoCancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: upgradeInfoCancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: upgradeInfoRawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: upgradeInfoAwardNumber
        schema:
          type: number
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoomCategory
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoomCategory
        schema:
          type: string
      - description: Indicates room type Description for the room prior to the upgrade.
        in: query
        name: fromRoomDescription
        schema:
          type: string
      - description: Indicates room type Description of the upgrade room.
        in: query
        name: toRoomDescription
        schema:
          type: string
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoom
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoom
        schema:
          type: string
      - description: The date of the reservation associated with the award. There
          may be more than one date (multiple nights) associated with award.
        in: query
        name: upgradeInfoStayDate
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: otherInfoAwardType
        schema:
          type: string
      - description: Beginning date of the award.
        in: query
        name: sellBeginDate
        schema:
          format: date
          type: string
      - description: End date that the award will be available.
        in: query
        name: sellEndDate
        schema:
          format: date
          type: string
      - description: Descriptive name of the award.
        in: query
        name: shortDescription
        schema:
          type: string
      - description: "The actual value of the award, in the amount of currency."
        in: query
        name: awardValue
        schema:
          type: number
      - description: Total award points available for redemption.
        in: query
        name: otherInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: otherInfoPointsRequired
        schema:
          type: number
      - description: Detail description of the award.
        in: query
        name: longDescription
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: otherInfoAwardNumber
        schema:
          type: number
      - description: HotelCode where the award will be consumed.
        in: query
        name: issueAwardsHotelId
        schema:
          type: string
      - description: PMS Reservation number.
        in: query
        name: externalReservationNumber
        schema:
          type: string
      - description: ORS Booking number.
        in: query
        name: confirmationBookingNumber
        schema:
          type: string
      - description: The source for the reservation associated with the award.
        in: query
        name: awardSource
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: arrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: departureDate
        schema:
          format: date
          type: string
      - description: Award Number to identify member's information.
        in: query
        name: exportInfoAwardNumber
        schema:
          type: number
      - description: Person's name in an external system.
        in: query
        name: nameType
        schema:
          enum:
          - Primary
          - Alternate
          - Incognito
          - External
          - Phonetic
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: Full display Name.
        in: query
        name: fullName
        schema:
          type: string
      - description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
        in: query
        name: namePrefix
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: The middle name of the person name.
        in: query
        name: middleName
        schema:
          type: string
      - description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
          \ Ret., Esq.)"
        in: query
        name: nameSuffix
        schema:
          type: string
      - description: "Degree or honors (e.g., Ph.D., M.D.)"
        in: query
        name: nameTitle
        schema:
          type: string
      - description: Phone number
        in: query
        name: phoneNumber
        schema:
          type: string
      - description: "It returns a Company Name,If the member is associated with a\
          \ company."
        in: query
        name: companyName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: The postal barcode for the address.
        in: query
        name: barCode
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          format: date-time
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          format: date-time
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the type of address (e.g. home, business, other)."
        in: query
        name: type
        schema:
          type: string
      - description: Describes the type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: "Indicates whether to update the reservations or not. If true\
          \ and the address is primary, then all associated active reservations will\
          \ be updated with the new primary address."
        in: query
        name: updateReservations
        schema:
          type: boolean
      - description: "When the address is unformatted (FormattedInd=\"false\") these\
          \ lines will contain free form address details. When the address is formatted\
          \ and street number and street name must be sent independently, the street\
          \ number will be sent using StreetNmbr, and the street name will be sent\
          \ in the first AddressLine occurrence."
        explode: true
        in: query
        name: addressLine
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: Post Office City Extension Code number. City Extension mainly
          used for UK addresses.
        in: query
        name: cityExtension
        schema:
          type: string
      - description: "County or District Name (e.g., Fairfax). Currently this attribute\
          \ is not used."
        in: query
        name: county
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: code
        schema:
          type: string
      - description: Language code associated with the address
        in: query
        name: language
        schema:
          type: string
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: characterUDFsAltName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to hold user defined field of Character Type. It is highly\
          \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
          \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
          \ using enumeration, to provide flexibility of different name usage if required."
        explode: true
        in: query
        name: characterUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: characterUDFsValue
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: NumericUDFsAltName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Name of user defined field.
        explode: true
        in: query
        name: NumericUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: NumericUDFsValue
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: DateUDFsAltname
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to hold user defined field of Date Type. It is highly recommended\
          \ to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
          \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
          \ to provide flexibility of different name usage if required."
        explode: true
        in: query
        name: DateUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: DateUDFsValue
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: exportMembershipAward not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Export Membership Award
      tags:
      - ProfileMembership
  /memberships/{membershipId}/awardExports:
    get:
      description: Get members information for Fulfillment house processing <p><strong>OperationId:</strong>getMembershipAwardExportInfo</p>
      operationId: getMembershipAwardExportInfo
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Award Number to identify member's information.
        in: query
        name: awardNumber
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipAwardExportInfo'
          description: Response object to fetch members information for Fulfillment
            house processing.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipAwardExportInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Award Export Information
      tags:
      - ProfileMembership
  /memberships/{membershipId}/awards:
    get:
      description: Retrieve a list of member issued awards. <p><strong>OperationId:</strong>getMembershipIssueAwardsList</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getMembershipIssueAwardsList
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: membershipType
        schema:
          type: string
      - description: 'Confirmation Number attached '
        in: query
        name: hotelBookingNumber
        schema:
          type: string
      - description: Award Code belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Unique code identifying the award.
        explode: true
        in: query
        name: awardCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Award Id for identifying the award.
        in: query
        name: awardNumber
        schema:
          type: number
      - description: Award Type for identifying the award.
        in: query
        name: awardBasedOn
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipIssueAwards'
          description: Response object for fetching member issued award list.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipIssueAwardsList not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Award list
      tags:
      - ProfileMembership
  /memberships/{membershipId}/claims:
    get:
      description: Retrieve available membership claims by specifying the membership
        ID. <p><strong>OperationId:</strong>getMembershipClaims</p> <p>This API allows
        a time span of <strong>90</strong> days.</p>
      operationId: getMembershipClaims
      parameters:
      - description: Id to get the claims.
        in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: Membership Type code.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of user-definable claim to be searched.
        in: query
        name: claimType
        schema:
          type: string
      - description: Source of the membership claim.
        in: query
        name: source
        schema:
          enum:
          - Ocis
          - Opms
          - Web
          type: string
      - description: Unique application user ID of the person responsible for handling
          the claim.
        in: query
        name: owner
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: claimNumber
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: claimNoContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: claimNoType
        schema:
          type: string
      - description: Property where the stay took place.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Reservation confirmation or booking reference number.
        in: query
        name: confirmationNo
        schema:
          type: string
      - description: Application user ID of the user who entered the claim.
        in: query
        name: submitter
        schema:
          type: string
      - description: "Status of the claim.(Open, Waiting for Manager, etc.)"
        in: query
        name: claimStatus
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: closeDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: closeDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: claimDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: claimDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: replyByEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: replyByStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - description: Claim approve or reject status.
        in: query
        name: approvalStatus
        schema:
          enum:
          - Approved
          - Rejected
          - Pending
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaims'
          description: Response object for fetching membership claims.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaims not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership claims
      tags:
      - ProfileMembership
  /memberships/{membershipId}/fullfillmentExportLogs:
    get:
      description: Use this API to Get Fulfillment Export Logs. <p><strong>OperationId:</strong>getFulfillmentExportLogs</p>
      operationId: getFulfillmentExportLogs
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: membershipType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fulfillmentExportedLogs'
          description: Response object which has list of membership fulfillment export
            logs and membership extract information(Exclude Extract -Y/N).
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FulfillmentExportLogs not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fulfillment Export Logs
      tags:
      - Profile
  /memberships/{membershipId}/pointsToExpire:
    get:
      description: Use this API to retrieve your Points To Expire by membershipId.
        <p><strong>OperationId:</strong>getMemberPointsToExpire</p>
      operationId: getMemberPointsToExpire
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberPointsToExpire'
          description: Response object for fetching member points to expire information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MemberPointsToExpire not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get  membership points to expire '
      tags:
      - ProfileMembership
    put:
      description: This will allow you to extend the expiration date based on the
        rule defined in the Grace Period in months. <p><strong>OperationId:</strong>extendMemberPointsToExpire</p>
      operationId: extendMemberPointsToExpire
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/extendMemberPointsToExpire'
        description: Request object to extend a member points to expire.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend Member Points set to Expire
      tags:
      - ProfileMembership
      x-codegen-request-body-name: extendMemberPointsToExpire
  /memberships/{membershipId}/promotions:
    get:
      description: Use this API to retrieve your available promotions by membershipId.
        <p><strong>OperationId:</strong>getMembershipPromotions</p>
      operationId: getMembershipPromotions
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Search criteria for fetching inactive membership promotions.\
          \ When set to true, inactive records will be included."
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipPromotionsDetails'
          description: Response object for fetching membership promotion information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipPromotions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch membership promotions of a guest
      tags:
      - ProfileMembership
    post:
      description: Create a new membership promotion . <p><strong>OperationId:</strong>postMembershipPromotion</p>
      operationId: postMembershipPromotion
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipPromotionDetails'
        description: Request object for creating a membership promotion.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create membership promotion of a guest
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipPromotion
  /memberships/{membershipId}/promotions/{promotionCode}:
    delete:
      description: Delete a Membership promotion for a guest. This will inactivate
        the membership promotion.<p><strong>OperationId:</strong>deleteMembershipPromotion</p>
      operationId: deleteMembershipPromotion
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: An alphanumeric code for the promotion.
        in: path
        name: promotionCode
        required: true
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: The ID of a promotion owned by a membership.
        in: query
        name: membershipPromotionId
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete membership promotion of a guest
      tags:
      - ProfileMembership
    put:
      description: Update an existing membership promotion code in the database. <p><strong>OperationId:</strong>putMembershipPromotion</p>
      operationId: putMembershipPromotion
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: An alphanumeric code for the promotion.
        in: path
        name: promotionCode
        required: true
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipPromotionDetails'
        description: The request element used to update an existing membership promotion
          in the database.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change membership promotion of a guest
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipPromotion
  /memberships/{membershipId}/transactions:
    get:
      description: Get membership transactions summary information by specifying membership
        ID <p><strong>OperationId:</strong>getMembershipTransactionsSummary</p>
      operationId: getMembershipTransactionsSummary
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransactionsSummary'
          description: Response object for fetching member point totals information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get membership transactions '
      tags:
      - ProfileMembership
    post:
      description: Create a new membership transaction . <p><strong>OperationId:</strong>postMembershipTransaction</p>
      operationId: postMembershipTransaction
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipTransaction'
        description: Request object for creating a membership transaction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post a membership transaction
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipTransaction
  /memberships/{membershipType}/membershipNumbers:
    post:
      description: This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>
      operationId: postMembershipNumber
      parameters:
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipNumber'
        description: Request object for generating membership number.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Generate membership number
      tags:
      - Profile
      x-codegen-request-body-name: membershipNumber
  /membershipsCard/{membershipCardNo}/membershipType/{membershipCardType}/pointsToExpire:
    get:
      description: Use this API to retrieve your Points To Expire by by specifying
        membership card number and membership card type. This operation can return
        more than one membership points to expire if duplicate card numbers are allowed
        in the configuration. <p><strong>OperationId:</strong>getMemberPointsToExpireByCardNo</p>
      operationId: getMemberPointsToExpireByCardNo
      parameters:
      - description: The card number associated to the membership
        in: path
        name: membershipCardNo
        required: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - description: The type of card the membership belongs to
        in: path
        name: membershipCardType
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberPointsToExpireCollection'
          description: Response object for fetching member points to expire information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MemberPointsToExpire not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get  membership points to expire '
      tags:
      - ProfileMembership
  /membershipsCard/{membershipCardNo}/membershipType/{membershipCardType}/transactions:
    get:
      description: "Get membership transactions summary information by specifying\
        \ membership card number and membership card type, this operation can return\
        \ more than one membership transactions if duplicate card numbers allowed\
        \ in the configuration. <p><strong>OperationId:</strong>getMembershipTransactionsSummaryByCardNo</p>"
      operationId: getMembershipTransactionsSummaryByCardNo
      parameters:
      - in: path
        name: membershipCardNo
        required: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - in: path
        name: membershipCardType
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransactionsSummaryCollection'
          description: Response object for fetching member point totals information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get membership transactions '
      tags:
      - ProfileMembership
  /processStagedProfile:
    put:
      description: Use this API to process one profile that has been staged. <p><strong>OperationId:</strong>processStagedProfile</p>
      operationId: processStagedProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/stagedProfileCriteria'
        description: Request object for processing the staged profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/processedStagedProfile'
          description: Response object for the staged profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process a staged profile
      tags:
      - Profile
      x-codegen-request-body-name: stagedProfileCriteria
  /processSuspendedStays:
    put:
      description: This API processes Suspended Stay. If no Suspended Stay Record
        IDs are sent in the body all suspended stays will be processed. <p><strong>OperationId:</strong>putProcessSuspendedStays</p>
      operationId: putProcessSuspendedStays
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/suspendedStayDetails'
        description: "Request object for change/modification of Suspended Stay, including\
          \ Revenue, Rate and Membership details. If no Suspended Stay Record IDs\
          \ are sent in the body all suspended stays will be processed."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedStayErrorsType'
          description: Response object for process Suspended Stays.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process Suspended Stays
      tags:
      - SuspendedStay
      x-codegen-request-body-name: suspendedStayRecordId
  /profileForEnrollment:
    get:
      description: Get detailed information regarding match profiles <p><strong>OperationId:</strong>getEnrollmentMatchProfiles</p>
      operationId: getEnrollmentMatchProfiles
      parameters:
      - description: Enrollment details will be fetched from this External database.
        in: query
        name: externalDatabaseID
        schema:
          type: string
      - description: The types of Profile handled by the web service.
        in: query
        name: matchedProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: Language code associated with an alternate name.
        in: query
        name: language
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: "Family name, last name. May also be used for full name if the\
          \ sending system does not have the ability to separate a full name into\
          \ its parts, e.g. the surname element may be used to pass the full name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Degree or honors (e.g., Ph.D., M.D.)"
        in: query
        name: nameTitle
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: addressId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: addressIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: addressIdType
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Defines the type of address (e.g. home, business, other)."
        in: query
        name: type
        schema:
          type: string
      - description: "When the address is unformatted (FormattedInd=\"false\") these\
          \ lines will contain free form address details. When the address is formatted\
          \ and street number and street name must be sent independently, the street\
          \ number will be sent using StreetNmbr, and the street name will be sent\
          \ in the first AddressLine occurrence."
        explode: true
        in: query
        name: addressLine
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "County or District Name (e.g., Fairfax). Currently this attribute\
          \ is not used."
        in: query
        name: county
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Language code associated with the address
        in: query
        name: languageCode
        schema:
          type: string
      - description: Business/Market Segment associated to the profile.
        explode: true
        in: query
        name: businessSegment
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Territory associated to the profile.
        in: query
        name: territory
        schema:
          type: string
      - description: Trace Code associated to the profile.
        in: query
        name: traceCode
        schema:
          type: string
      - description: Owner Code associated to the profile.
        in: query
        name: ownerCode
        schema:
          type: string
      - description: Influence Code associated to the profile.
        in: query
        name: influenceCode
        schema:
          type: string
      - description: Indicates whether all the records are included in the response
          or not. Absence of the attribute values should be consider as all rows fetched
          in the response.
        in: query
        name: hasMore
        schema:
          type: boolean
      - description: Total number of rows queried
        in: query
        name: totalResults
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: telephoneId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: telephoneIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: telephoneIdType
        schema:
          type: string
      - description: Telephone number assigned to a single location.
        in: query
        name: phoneNumber
        schema:
          type: string
      - description: "Indicates type of technology associated with this telephone\
          \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
        in: query
        name: phoneTechType
        schema:
          type: string
      - description: "Describes the type of telephone number, in the context of its\
          \ general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
          \ Day, Evening)."
        in: query
        name: phoneUseType
        schema:
          type: string
      - description: Description of the PhoneUseType code
        in: query
        name: phoneUseTypeDescription
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: telephonePrimaryInd
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: emailInfoId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: emailInfoIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: emailInfoIdType
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: emailPrimaryInd
        schema:
          type: boolean
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: urlId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: urlIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: urlIdType
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: urlPrimaryInd
        schema:
          type: boolean
      - description: "Defines the purpose of the URL address, such as personal, business,\
          \ public, etc."
        in: query
        name: urlType
        schema:
          type: string
      - description: Card Number of the membership.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Name to be displayed on the membership card.
        in: query
        name: nameOnCard
        schema:
          type: string
      - description: Indicates the membership level.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Code.
        in: query
        name: paymentMethodCode
        schema:
          type: string
      - description: Amount/Fee to enroll to membership Program.
        in: query
        name: amount
        schema:
          type: number
      - description: Code.
        in: query
        name: amountCode
        schema:
          type: string
      - description: Payment Comments.
        in: query
        name: comments
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/enrollmentMatchProfiles'
          description: Response object to fetch match profiles for enrollment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EnrollmentMatchProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profiles for Enrollment
      tags:
      - ProfileMembership
  /profileListOfValues/availableARAddresses:
    get:
      description: Use this API to fetch the available AR Addresses List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailableARAddresses</p>
      operationId: getAvailableARAddresses
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The property where the AR Account exists or is being created.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: The Account Number of the AR Account of the Profile.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availableARAddresses'
          description: Response to the request to fetch the available Accounts Receivables(AR)
            Addresses for a Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableARAddresses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get available AR Addresses '
      tags:
      - ProfileLOV
  /profileListOfValues/availablePreferences:
    get:
      description: Use this API to fetch the available preferences List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailablePreferences</p>
      operationId: getAvailablePreferences
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: Property for which preferences are to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Maximum records to be fetched.
        in: query
        name: maxFetchSize
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availablePreferences'
          description: A collection of preferences
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailablePreferences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get available preferences
      tags:
      - ProfileLOV
  /profileMatch:
    get:
      description: "Use this operation to fetch guest profile (profile Id). This operation\
        \ can be integrated with createReservation API, to prevent creation of duplicate\
        \ profiles.<p><strong>OperationId:</strong>getProfileMatch</p>"
      operationId: getProfileMatch
      parameters:
      - description: Last Name for the profile that needs to be matched.
        in: query
        name: lastName
        required: true
        schema:
          maxLength: 40
          minLength: 1
          type: string
      - description: First Name for the profile that needs to be matched.
        in: query
        name: firstName
        schema:
          maxLength: 40
          minLength: 1
          type: string
      - description: Membership Type for the profile that needs to be matched.
        in: query
        name: membershipType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Membership Card Number for the profile that needs to be matched.
        in: query
        name: membershipCardNumber
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - description: Identification Type for the profile that needs to be matched.
        in: query
        name: identificationType
        schema:
          maxLength: 40
          minLength: 1
          type: string
      - description: Identification Number for the profile that needs to be matched.
        in: query
        name: identificationNumber
        schema:
          maxLength: 80
          minLength: 1
          type: string
      - description: Email for the profile that needs to be matched.
        in: query
        name: email
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Subscription Type for the profile that needs to be matched.
        in: query
        name: subscriptionType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Subscription Id for the profile that needs to be matched.
        in: query
        name: subscriptionId
        schema:
          maxLength: 80
          minLength: 1
          type: string
      - description: Client Id for the profile that needs to be matched.
        in: query
        name: clientId
        schema:
          maxLength: 80
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileMatch'
          description: Response object for fetching profile match.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: No unique match found for the search criteria.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the profile Id if a unique guest profile Exists
      tags:
      - Profile
  /profileMembershipStatistics:
    get:
      description: "Retrieve the summary statistics and/or the details of each of\
        \ the membership transactions and its points.  You can filter by membership\
        \ Type, or Membership Number. <p><strong>OperationId:</strong>getProfileMembershipStatistics</p>\
        \ <p>This API allows a time span of <strong>90</strong> days.</p>"
      operationId: getProfileMembershipStatistics
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Number of the membership card.
        in: query
        name: membershipCardNo
        required: true
        schema:
          type: string
      - description: Type of membership.
        in: query
        name: membershipType
        required: true
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: transactionDate
        schema:
          format: date
          type: string
      - description: Membership transaction belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Confirmation Number of the membership transaction.
        in: query
        name: confirmationNumber
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - in: query
        name: duration
        schema:
          type: string
      - description: Flag indicating whether to fetch detailed membership points information
          or just a summary of the total of the points.
        in: query
        name: transactionDetail
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileMembershipStatistics'
          description: Response of the WS operation FetchProfileMembershipPoints.
            It contains the summary statistics and/or the details of each of the membership
            transactions and its points.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileMembershipStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Membership statistics '
      tags:
      - ProfileStatistics
  /profileStatistics:
    get:
      description: This API provides summary/detail/revenue statistics information
        <p><strong>OperationId:</strong>getProfileStatistics</p> <p>This API allows
        a time span of <strong>90</strong> days.</p>
      operationId: getProfileStatistics
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicate to get revenue of Stay Records.
        in: query
        name: reportType
        required: true
        schema:
          enum:
          - Reservation
          - Revenue
          - ProfileStayRecords
          - DetailStayRecordsRevenue
          type: string
      - description: Stay from date for report
        in: query
        name: stayFrom
        schema:
          format: date
          type: string
      - description: Stay to date for report
        in: query
        name: stayTo
        schema:
          format: date
          type: string
      - description: Flag to indicate whether summary/detail report is requested.
        in: query
        name: summary
        schema:
          type: boolean
      - description: Flag to include passerBy records.
        in: query
        name: passerBy
        schema:
          type: boolean
      - description: Profile Role Type All.
        in: query
        name: contactProfileRoleType
        schema:
          enum:
          - AccountContact
          - AgentContact
          - ReservationContact
          - ReservationBillingContact
          - All
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: stayRecordId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: stayRecordIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: stayRecordIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileStatistics'
          description: "Response object for fetching profile stay/reservation/revenue\
            \ statistics. This object contains collection of summary or detail,Success,Warnings\
            \ and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profile Statistics
      tags:
      - ProfileStatistics
  /profileTransactions/{profileId}:
    get:
      description: Retrieve the Transactions associated to a profile related to Stay
        Records or Membership Adjustments.<p><strong>OperationId:</strong>getProfileTransactions</p>
        <p>This API allows a time span of <strong>90</strong> days.</p>
      operationId: getProfileTransactions
      parameters:
      - description: Profile Id for which we want to fetch transactions
        in: path
        name: profileId
        required: true
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: transactionDate
        schema:
          format: date
          type: string
      - description: Stay Record or Membership transaction belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Confirmation Number of the stay Record or Membership Transaction.
        in: query
        name: confirmationNumber
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileTransactions'
          description: Response of the WS operation FetchProfileTransactions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileTransactions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Profile Transactions '
      tags:
      - Profile
  /profiles:
    get:
      description: "Use this API when you want to search for a profile as part of\
        \ a booking process or to manage a profile data. The response will include\
        \ a list of profiles that exist in OPERA, based on your search criteria. \
        \ For example, you want to see if a profile for Mr David Smith exists - you\
        \ can search by various criteria, such as first name, last name, email.  The\
        \ response will include a list of any profiles that exist for Mr David Smith.\
        \  If a profile matches the criteria, and you want to get more details of\
        \ that profile, proceed to use getProfile with the profileId in the request.\
        \ Maximum response data limit is 1000 records, so use more query parameters\
        \ to narrow your results. This API is not designed to support sync between\
        \ two systems or initial upload of data.<p><strong>OperationId:</strong>getProfiles</p>"
      operationId: getProfiles
      parameters:
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: excludeInactive
        schema:
          type: boolean
      - description: "Hotel Code, It is used to filter hotel specific children to\
          \ this specific hotel code."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: includeHasHierarchyOnly
        schema:
          type: boolean
      - description: Include primary owners in the search.
        in: query
        name: includePrimaryOwnersOnly
        schema:
          type: boolean
      - description: Include purged profiles in the search.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: "When search type is PatronTrackingSystemMemberProfiles, the\
          \ FetchProfiles will return the Membership Number of the searched Membership\
          \ Type regardless of primary flag or sequence of the profile memberships."
        in: query
        name: searchType
        schema:
          enum:
          - PurgeableProfiles
          - Any
          - PatronTrackingSystemMemberProfiles
          type: string
      - description: When true response will return summary information otherwise
          detailed information.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - description: Search string to be used for super search.
        in: query
        name: searchString
        schema:
          type: string
      - description: Indicates whether to include Anonymized Profiles.
        in: query
        name: includeAnonymized
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        explode: true
        in: query
        name: profileType
        schema:
          items:
            enum:
            - Guest
            - Agent
            - Company
            - Group
            - Source
            - Employee
            - Hotel
            - Vendor
            - Contact
            - Purge
            - BusinessHeader
            - BillingAccount
            - Activity
            - Potential
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: corporateIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name or Company Name."
        in: query
        name: profileName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: incognitoName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: incognitoGivenName
        schema:
          type: string
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: city
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Keyword associated to the profile.
        in: query
        name: keyword
        schema:
          type: string
      - description: "Any communication method associated to the profile such as phone,\
          \ fax, eMail id."
        in: query
        name: communication
        schema:
          type: string
      - description: Membership number associated to the profile.
        in: query
        name: membership
        schema:
          type: string
      - description: Member Type of searching profile.
        in: query
        name: membershipType
        schema:
          type: string
      - explode: true
        in: query
        name: ownerCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership level associated to the profile.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Account Receivable associated to the profile.
        in: query
        name: aRNumber
        schema:
          type: string
      - description: Tax ID associated to the profile
        in: query
        name: taxID
        schema:
          type: string
      - description: Business/Market Segment associated to the profile.
        explode: true
        in: query
        name: businessSegment
        schema:
          items:
            type: string
          type: array
        style: form
      - description: When true indicates that only profiles with AR account fetched.
        in: query
        name: accountsReceivables
        schema:
          type: boolean
      - description: When true indicates that only profiles with client id are searched
          for.
        in: query
        name: corporateProfiles
        schema:
          type: boolean
      - description: When true indicates that only profiles with an Address Line 1
          and Country or at least one Communications Type will be displayed.
        in: query
        name: excludeIncompleteProfiles
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: negotiatedRates
        schema:
          type: boolean
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: relatedProfileExcludeInactive
        schema:
          type: boolean
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: realtedProfileIncludeHasHierarchyOnly
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: relatedProfileNegotiatedRates
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        in: query
        name: relatedProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: relatedProfileName
        schema:
          type: string
      - description: Indicates whether to exclude Protected Profiles.
        in: query
        name: protectedProfiles
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludedProfilesId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: excludedProfilesIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: excludedProfilesIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Any identification number associated with the profile such as\
          \ Passport Number, StateID."
        in: query
        name: identificationNo
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - NegotiatedRate
            - GdsNegotiatedRate
            - Comment
            - Membership
            - Preference
            - Keyword
            - HistoryReservation
            - FutureReservation
            - Relationship
            - Correspondence
            - Routing
            - Indicators
            - Profile
            - WebUserAccount
            - SalesInfo
            - ECertificate
            - Subscriptions
            - PrimaryAccountInfo
            - DeliveryMethods
            - RoomOwnership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: prioritieCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileSummaries'
          description: "Response object for fetching profiles. This object contains\
            \ profile primary details,profile summary details,master info list containing\
            \ code and description used as lookup for description."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Search for profile(s)
      tags:
      - Profile
    post:
      description: "When a profile doesn&apos;t already exist in OPERA, use this to\
        \ create a new profile. The response will provide the newly created profile&apos;s\
        \ OPERA ID in the Location header. There are many fields in postProfile defined\
        \ by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully\
        \ to use postProfile.<p><strong>OperationId:</strong>postProfile</p>"
      operationId: postProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfile_request'
        description: Request object for creation of profiles. This object contains
          profile details with unique identifiers for each profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a profile
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/action/validate:
    get:
      description: "This API validates/checks allowed actions, the existence of attached\
        \ records and/or indicators of a profile. <p><strong>OperationId:</strong>checkProfileType</p>"
      operationId: checkProfileType
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: Simple type that corresponds to check profile instructions.
        in: query
        name: checkProfileInstruction
        schema:
          enum:
          - HasWebAccounts
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkedProfiles'
          description: "Response for checking allowed actions, existence of attached\
            \ records, or indicators of a profile."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: checkProfileType not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate and check profiles
      tags:
      - Profile
  /profiles/activityLog:
    get:
      description: Use this API to fetch the activity log for a specific profile.  This
        will allow you to see the changes that have occurred on this profile. <p><strong>OperationId:</strong>getProfileActivityLog</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getProfileActivityLog
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Hotel code.
        in: query
        name: activityParamsHotelId
        schema:
          type: string
      - description: Activity module.
        in: query
        name: module
        schema:
          enum:
          - Reservation
          - Contract
          - Allotment
          - Outlookview
          - Profile
          - Accountreceivables
          - GdsConvRateCodes
          - RateCode
          - Billing
          - Activity
          type: string
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - in: query
        name: activityType
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileActivityLog'
          description: "Response object for fetching profile activity log. This object\
            \ contains collection of user activity log for the profile,Success,Warnings\
            \ and Errors related to this operation"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch profile activity log
      tags:
      - Profile
  /profiles/{profileId}:
    delete:
      description: "Use deleteProfile to inactivate and remove a profile from OPERA.\
        \ The profile will stay in the Database, until a nightly purge process is\
        \ run to remove profile details from the OPERA database. <p><strong>OperationId:</strong>deleteProfile</p>"
      operationId: deleteProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Forget or delete a profile by ID
      tags:
      - Profile
    get:
      description: "Use this API to retrieve a specific profile&apos;s detail information\
        \ using OPERA&apos;s profileId. You can retrieve any type of profile including\
        \ guest, travel agent, company, source, group, or contact. If you do not know\
        \ OPERA profileID, use getProfiles or getProfileByExtId API first to get OPERA\
        \ profileId.<p><strong>OperationId:</strong>getProfile</p>"
      operationId: getProfile
      parameters:
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: This element will be used to store external database.
        in: query
        name: systemCode
        schema:
          type: string
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by ID
      tags:
      - Profile
    put:
      description: "Use this to update a guests details on their profile.  You will\
        \ need to know the OPERA Profile ID to use this API, and you will also need\
        \ to know the List of Values for profile fields, such as AddressType, PhoneType,\
        \ Title.  <p><strong>OperationId:</strong>putProfile</p>"
      operationId: putProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileByExtId_request'
        description: Request object for change/modification of profile details. This
          object contains modified profile details with unique identifiers for each
          profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
          description: "Response object for change/modification of profile details.\
            \ This object contains the profile details with unique identifiers for\
            \ each profile. Also Success,Warnings and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a profile by ID
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/{profileId}/accounts:
    get:
      description: You can find the accounts that are listed on a profile with this
        API. <p><strong>OperationId:</strong>getProfileAccounts</p>
      operationId: getProfileAccounts
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileAccounts'
          description: Response of profile accounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileAccounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile accounts
      tags:
      - Profile
  /profiles/{profileId}/attachments:
    get:
      description: This API will provide the attachments on a profile in OPERA Cloud.
        <p><strong>OperationId:</strong>getProfileAttachments</p>
      operationId: getProfileAttachments
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: "File name used to filter final list of attachments. For example,\
          \ Document.txt."
        in: query
        name: attachedFileName
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Description used to filter final list of attachments. For example,\
          \ Offical guest ID. (This parameter does not require wildcard characters\
          \ like * or % )."
        in: query
        name: description
        schema:
          maxLength: 100
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileAttachments'
          description: Response object with the details of the attachments of a profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileAttachments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile attachments
      tags:
      - Profile
  /profiles/{profileId}/attachments/{attachmentId}:
    delete:
      description: This API will delete an attachment on a profile in OPERA Cloud.
        <p><strong>OperationId:</strong>deleteProfileAttachment</p>
      operationId: deleteProfileAttachment
      parameters:
      - in: path
        name: attachmentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          default: "[\"Profile\"]"
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: uniqueIdIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: uniqueIdIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: uniqueIdType
        schema:
          default: "[\"Attachment\"]"
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete profile attachment
      tags:
      - Profile
  /profiles/{profileId}/awards/redeem:
    put:
      description: Redeem an award that exists on a profile. <p><strong>OperationId:</strong>redeemAward</p>
      operationId: redeemAward
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/award'
        description: Request object to redeem award.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/award'
          description: Response object for redeem award.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Redeem an award
      tags:
      - ProfileMembership
      x-codegen-request-body-name: award
  /profiles/{profileId}/awardsAndCertificates:
    get:
      description: Get Profile awards and certificates that exist on a profile. <p><strong>OperationId:</strong>getAwards</p>
      operationId: getAwards
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Hotel Code for which the routing instructions are provided for
          a profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/awardDetails'
          description: Response of fetch awards request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Awards not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profile awards and certificates
      tags:
      - Profile
  /profiles/{profileId}/cashieringDetails:
    get:
      description: Retrieve any profile Financial details that exists on a profile
        (typically Company or Travel Agent profiles).  This includes Routing Instructions
        on the profile. <p><strong>OperationId:</strong>getCashieringDetails</p>
      operationId: getCashieringDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Boolean flag that indicates whether the payment method has to
          be fetched or not.
        in: query
        name: fetchPaymentMethod
        schema:
          type: boolean
      - description: Boolean flag that indicates whether the routing instruction has
          to be fetched or not.
        in: query
        name: fetchRoutingInstruction
        schema:
          type: boolean
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: List of Hotel Codes.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileCashieringDetailsInfo'
          description: Response object containing profile routing instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashieringDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get cashiering details for a profile
      tags:
      - Profile
    put:
      description: "Update a profiles Financial details, such as billing, routing\
        \ instructions. <p><strong>OperationId:</strong>changeProfileCashieringDetails</p>"
      operationId: changeProfileCashieringDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCashieringDetails'
        description: Request object for changing the profile cashiering details.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change cashiering details for a profile
      tags:
      - Profile
      x-codegen-request-body-name: profileCashieringDetails
  /profiles/{profileId}/commissionAccount:
    delete:
      description: Delete a Commission Account from a specified profile. <p><strong>OperationId:</strong>deleteProfileCommissionAccount</p>
      operationId: deleteProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used in CRUD operations. When set to true, proceed validating\
          \ pending commissions"
        in: query
        name: validatePending
        schema:
          type: boolean
      - description: Hotel code from which the profile bank account and code belongs
          to
        in: query
        name: hotelId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: profileIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: bankAccountId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: bankAccountIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: bankAccountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: bankAccountIdType
        schema:
          type: string
      - description: Code.
        in: query
        name: commissionCode
        schema:
          type: string
      - description: description.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a commission account from a profile
      tags:
      - Profile
    get:
      description: Retrieve Commission Account details from a specified profile. <p><strong>OperationId:</strong>getProfileCommissionAccount</p>
      operationId: getProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileCommissionAccountInfo'
          description: Response object for fetching profile commission detail.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileCommissionAccount not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get commission account on a profile
      tags:
      - Profile
    post:
      description: Add a commission account on a profile.  You can only add commission
        accounts onto a Travel Agent or Source Profile type in OPERA Cloud. <p><strong>OperationId:</strong>postProfileCommissionAccount</p>
      operationId: postProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccount'
        description: Request object for creating profile commission detail.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add a commission account on a profile
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccount
    put:
      description: Apply a commission account to an existing profile. You can add
        commission accounts to Travel Agent profile types. <p><strong>OperationId:</strong>setProfileCommissionAccount</p>
      operationId: setProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccount'
        description: Request object for updating profile commission detail.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Set profile commission account
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccount
  /profiles/{profileId}/emails:
    post:
      description: Use this API to create a new Email in OPERA.  You would need to
        know the Profile Id such as Contact or Account. <p><strong>OperationId:</strong>storeEmail</p>
      operationId: storeEmail
      parameters:
      - description: Profile ID linked to an Email.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/storeEmail_request'
        description: Request object for storing an email.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Email.
      tags:
      - Profile
      x-codegen-request-body-name: emailMessageType
  /profiles/{profileId}/flexFieldValues:
    get:
      description: API to fetch flex field values. <p><strong>OperationId:</strong>getAllFlexFieldValues</p>
      operationId: getAllProfileFlexFieldValues
      parameters:
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flex field ID
        in: query
        name: flexFieldId
        schema:
          type: number
      - description: Flex field code
        in: query
        name: flexFieldCode
        schema:
          type: string
      - description: Flex field Value
        in: query
        name: flexFieldValue
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
          Default is 50
        in: query
        name: limit
        schema:
          default: 50
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/flexFieldsResponse'
          description: Response object for fetching flex field Values.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Flex field details not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch flex field values.
      tags:
      - Profile
  /profiles/{profileId}/hotels/{hotelId}/forecasts:
    delete:
      description: Use this API to delete multiple account forecasts. <p><strong>OperationId:</strong>deleteMultipleAccountForecasts</p>
      operationId: deleteMultipleAccountForecasts
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: periodCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete multiple account forecasts
      tags:
      - Profile
    get:
      description: You can use this API to retrieve account forecasts for a hotel
        <p><strong>OperationId:</strong>getAccountForecasts</p> <p>The maximum allowable
        limit for this API is <strong>200</strong>.</p>
      operationId: getAccountForecasts
      parameters:
      - description: Hotel Code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Specifies the From Fiscal or Calendar Period Code
        in: query
        name: fromPeriodCode
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/accountForecasts'
          description: Response object for fetching forecasts of an account profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AccountForecasts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Account Forecasts by hotel
      tags:
      - Profile
    post:
      description: Use postAccountForecast to create a new account forecast for a
        hotel.  <p><strong>OperationId:</strong>postAccountForecast</p>
      operationId: postAccountForecast
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forecastsInformation'
        description: Request object for creating forecast(s) of an account profile.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create account forecast in a hotel
      tags:
      - Profile
      x-codegen-request-body-name: forecastsInformation
  /profiles/{profileId}/hotels/{hotelId}/forecasts/periodCodes/{periodCode}:
    delete:
      description: Use this to delete an existing account Forecast for a hotel.  You
        must know the period code for this API. <p><strong>OperationId:</strong>deleteAccountForecast</p>
      operationId: deleteAccountForecast
      parameters:
      - description: Period Code.
        in: path
        name: periodCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Account Profile ID.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: periodCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete account forecast in a hotel by period code
      tags:
      - Profile
    put:
      description: Use this to update an existing account Forecast for a hotel.  You
        must know the period code for this API. <p><strong>OperationId:</strong>putAccountForecast</p>
      operationId: putAccountForecast
      parameters:
      - description: Period Code
        in: path
        name: periodCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Account Profile ID.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forecastsInformation'
        description: Request object for changing forecast(s) of an account profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeAccountForecastsRS'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update account forecast in a hotel by period code
      tags:
      - Profile
      x-codegen-request-body-name: forecastsInformation
  /profiles/{profileId}/hotels/{hotelId}/preferenceType/{preferenceType}/preferences/{preferenceCode}:
    delete:
      description: "This will allow you to delete a preference code from a profile.\
        \  For example the guest no longer has a preference for High Floor Room, so\
        \ you would go ahead and delete this preference from their profile. <p><strong>OperationId:</strong>deletePreference</p>"
      operationId: deletePreference
      parameters:
      - in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: preferenceType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Profiles Registered Property
        in: query
        name: registeredProperty
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a preference from a profile
      tags:
      - Profile
  /profiles/{profileId}/hotels/{hotelId}/stagedProfile:
    delete:
      description: This API can be used to delete a staged profile. <p><strong>OperationId:</strong>deleteStagedProfile</p>
      operationId: deleteStagedProfile
      parameters:
      - description: Profile id of staged profile.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel id of staged profile.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a staged profile
      tags:
      - Profile
  /profiles/{profileId}/links:
    get:
      description: Retrieve profiles that are linked to an existing profile in OPERA
        Cloud. <p><strong>OperationId:</strong>getLinkedProfiles</p>
      operationId: getLinkedProfiles
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: The types of Profile handled by the web service.
        explode: true
        in: query
        name: profileTypes
        schema:
          items:
            enum:
            - Guest
            - Agent
            - Company
            - Group
            - Source
            - Employee
            - Hotel
            - Vendor
            - Contact
            - Purge
            - BusinessHeader
            - BillingAccount
            - Activity
            - Potential
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: When true indicates that only profiles with AR account fetched.
        in: query
        name: accountsReceivables
        schema:
          type: boolean
      - description: When true indicates that only profiles with client id are searched
          for.
        in: query
        name: corporateProfiles
        schema:
          type: boolean
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: excludeInactive
        schema:
          type: boolean
      - description: When true indicates that only profiles with an Address Line 1
          and Country or at least one Communications Type will be displayed.
        in: query
        name: excludeIncompleteProfiles
        schema:
          type: boolean
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: includeHasHierarchyOnly
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: negotiatedRates
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        in: query
        name: linkedProfileAdditionalCriteriaProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: linkedProfileid
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: linkedProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: linkedProfileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: When true indicates that only profiles with city will be fetched.
        in: query
        name: excludeNoCity
        schema:
          type: boolean
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - explode: false
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Account Receivable associated to the profile.
        in: query
        name: aRNumber
        schema:
          type: string
      - explode: false
        in: query
        name: prioritiesCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedProfiles'
          description: Response of fetch set of linked Profiles to the requested Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LinkedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get linked profiles
      tags:
      - Profile
  /profiles/{profileId}/matches:
    get:
      description: Retrieve profiles that match another profile. <p><strong>OperationId:</strong>getMatchProfiles</p>
      operationId: getMatchProfiles
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code for the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/matchedProfiles'
          description: Response object for the match profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MatchProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile matches
      tags:
      - Profile
  /profiles/{profileId}/membershipTransactionExceptions:
    get:
      deprecated: true
      description: Use this API to get membership transaction exceptions on a profile.
        <p><strong>OperationId:</strong>getMembershipTransactionExceptions</p> <p>This
        API allows a time span of <strong>90</strong> days.</p>
      operationId: getMembershipTransactionExceptions
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Membership belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: The current level of the membership.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipCardNo
        schema:
          type: string
      - description: Indicates to Include External Processing Exception
        in: query
        name: includeEPE
        schema:
          type: boolean
      - description: "Indicates the type of Exception like Exception not resolved,Points\
          \ Rejected on Exception etc.,"
        in: query
        name: exceptionType
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransactionExceptions'
          description: Response object for fetching membership transaction exceptions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionExceptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership transaction exception details
      tags:
      - ProfileMembership
  /profiles/{profileId}/membershipType/{membershipType}/membershipId/{membershipId}:
    delete:
      description: Use this API to delete membership details on a profile. <p><strong>OperationId:</strong>deleteMembership</p>
      operationId: deleteMembership
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete membership information from a profile
      tags:
      - Profile
    put:
      description: Use this API to update membership details on a profile. <p><strong>OperationId:</strong>changeMembership</p>
      operationId: changeMembership
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membership'
        description: Request object for change/update membership. This object contains
          unique identifiers for each profile and list of membership details to be
          updated/changed. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedMembership'
          description: "Response object for change/update membership. This object\
            \ contains collection of memberships,Success,Warnings and Errors related\
            \ to this operation"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change membership information on a profile
      tags:
      - Profile
      x-codegen-request-body-name: membership
  /profiles/{profileId}/memberships:
    post:
      description: A guest might be a member of your hotel loyalty program and/or
        a member of multiple airline frequent flier programs. Use this API to add
        membership details onto a guests profile. <p><strong>OperationId:</strong>postMembership</p>
      operationId: postMembership
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membership'
        description: Request object for create membership. This object contains unique
          identifiers for each profile and list of membership details to be created.
          The standard optional Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create membership on a profile
      tags:
      - Profile
      x-codegen-request-body-name: membership
  /profiles/{profileId}/memberships/history:
    get:
      description: Use this API to retrieve membership card history on a profile.
        <p><strong>OperationId:</strong>getMembershipCardHistory</p>
      operationId: getMembershipCardHistory
      parameters:
      - description: Profile Id of the guest.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberCardHistoryList'
          description: Response object for list of membership card number changes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: memberCardHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership card history information on a profile
      tags:
      - ProfileMembership
  /profiles/{profileId}/memberships/info:
    get:
      description: Use this API to retrieve membership details on a profile. <p><strong>OperationId:</strong>getMembershipDetails</p>
        <p>This API allows a time span of <strong>90</strong> days.</p>
      operationId: getMembershipDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: idType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Property from which the membership stay information was received.
        in: query
        name: hotelId
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Whether member info search will pertain to transaction dates/
          stay dates/ points credit dates.
        in: query
        name: mode
        schema:
          enum:
          - TransactionDate
          - StayBeginDate
          - StayEndDate
          - PointsCreditDate
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberInformation'
          description: Response object for member info.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership information on a profile
      tags:
      - ProfileMembership
  /profiles/{profileId}/owners:
    get:
      description: Retrieve the Owners listed on a profile. <p><strong>OperationId:</strong>getProfileOwners</p>
      operationId: getProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileOwnersDetail'
          description: Response object to fetch the owners of a profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileOwners not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile owners
      tags:
      - Profile
    post:
      description: Assign an Owner to a profile. <p><strong>OperationId:</strong>postProfileOwners</p>
      operationId: postProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileOwners'
        description: Request object to assign profile owners.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Assign profile owners
      tags:
      - Profile
      x-codegen-request-body-name: profileOwners
    put:
      description: Update an Owner on a profile  <p><strong>OperationId:</strong>changeProfileOwners</p>
      operationId: changeProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeProfileOwners_request'
        description: Request object to change profile owners.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change profile owners
      tags:
      - Profile
      x-codegen-request-body-name: profileOwners
  /profiles/{profileId}/preferenceType/{preferenceType}/preferences/{preferenceCode}:
    delete:
      description: "This will allow you to delete a global preference code from a\
        \ profile.  For example the guest no longer has a preference for High Floor\
        \ Room, so you would go ahead and delete this preference from their profile.\
        \ <p><strong>OperationId:</strong>deleteGlobalPreference</p>"
      operationId: deleteGlobalPreference
      parameters:
      - in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: preferenceType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Profiles Registered Property
        in: query
        name: registeredProperty
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a global preference from a profile
      tags:
      - Profile
  /profiles/{profileId}/preferences:
    get:
      description: "Use this API to retrieve all preferences that a profile has stored\
        \ on it.  Preferences are configured codes by a property, examples are usually\
        \ High Floor, Non smoking room, Room with a View, soft pillow etc.  <p><strong>OperationId:</strong>getPreferenceForProfile</p>"
      operationId: getPreferenceForProfile
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/preference'
          description: "Response object for fetch preference. This object contains\
            \ collection of preferences,Success,Warnings and Errors related to this\
            \ operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PreferenceForProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get preferences on a profile
      tags:
      - Profile
    post:
      description: "You can add new preferences to a profile to personalize or enhance\
        \ your guest services.  You will need to know the profile ID, and the properties\
        \ pre-configured preference codes. <p><strong>OperationId:</strong>postPreference</p>"
      operationId: postPreference
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/preference'
        description: Request object for Create Preference. This object contains unique
          identifiers for each profile and list of preferences to be associated with
          the profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add preferences to a profile
      tags:
      - Profile
      x-codegen-request-body-name: preference
    put:
      description: With this API you can distribute preferences on a profile. <p><strong>OperationId:</strong>distributePreference</p>
      operationId: distributePreference
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/preference'
        description: Request object for distribute Preference. This object contains
          unique identifiers for each profile and list of preferences to be associated
          with the profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Distribute preferences on a profile
      tags:
      - Profile
      x-codegen-request-body-name: preference
  /profiles/{profileId}/relationships:
    get:
      description: ' <p><strong>OperationId:</strong>getProfileRelationships</p>'
      operationId: getProfileRelationships
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Type of Profile to be fetched from OPERA.
        in: query
        name: relationshipPrimaryProfile
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileRelationships'
            application/json:
              example:
                relationships:
                  relationship:
                  - relationshipProfile:
                      customerName: Smith
                      telephoneNumber: "+10409000000"
                      address:
                        addressLine:
                        - 500 Oracle Parkway
                        city: Redwood Shores
                        postalCode: "94065"
                        state: CA
                        country: US
                      emailAddress: example@test.com
                      ownerCode: ALL
                      profileIdList:
                      - id: "291397"
                        type: Profile
                      - id: "212315"
                        type: CorporateId
                      primary: true
                      profileStatus: Active
                      primaryOwnerCode: true
                      profileType: Guest
                    relationshipID: "144096"
                    sourceRelation: FAMILY MEMBER
                    sourceRelationDescription: FAMILY MEMBER
                    targetRelation: FAMILY HEAD
                    targetRelationDescription: FAMILY HEAD
                links: []
          description: Response object for fetching profile relationships.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileRelationships not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchProfileRelationships method provides the ability to retrieve a
        profile relationships for a profile based on the unique internal profile ID
        specified.
      tags:
      - Profile
  /profiles/{profileId}/reservations/action/validate:
    put:
      description: Validate if a profile has future and past bookings on a specific
        profile. <p><strong>OperationId:</strong>validateReservationsForProfile</p>
      operationId: validateReservationsForProfile
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/futurePastBookingsCriteria'
        description: Request for information regarding existence of profile in future
          and/or past business blocks and/or reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/futurePastBookings'
          description: This is the Response Message to information regarding existence
            of profile in future and/or past business blocks and/or reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check future past bookings
      tags:
      - Profile
      x-codegen-request-body-name: futurePastBookingsCriteria
  /profiles/{profileId}/stayHistory:
    get:
      description: ' <p><strong>OperationId:</strong>getStayHistory</p> <p>The maximum
        allowable limit for this API is <strong>200</strong>.</p>'
      operationId: getStayHistory
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Providing this flag includes purged profiles in the result.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Simple type for instructions that can be used in requests for
          partial operations to fetch past and future reservation.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - HistoryReservation
            - FutureReservation
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileStayHistory'
            application/json:
              example:
                profileStayDetails:
                  reservationInfoList:
                    historyList:
                      reservationInfo:
                      - reservationIdList:
                        - id: "850348"
                          type: Reservation
                        - id: "1258752"
                          type: Confirmation
                        roomStay:
                          arrivalDate: 2020-07-02
                          departureDate: 2020-07-04
                          roomType: DLXQ
                          ratePlanCode: RACK
                          rateAmount:
                            amount: "100"
                          rateSuppressed: false
                        attachedProfiles: []
                        hotelId: HOTEL1
                        reservationStatus: NoShow
                        computedReservationStatus: NoShow
                      hasMore: false
                      totalResults: "1"
                    futureList:
                      hasMore: false
                      totalResults: "0"
                links: []
          description: Response object for showing stay history and future reservations
            of specific profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StayHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchStayHistory method provides stay history and future reservations
        of a profile based on the unique internal ID specified.
      tags:
      - Profile
  /profiles/{sourceProfileId}/relationships/{targetProfileId}:
    delete:
      description: ' <p><strong>OperationId:</strong>removeProfileRelationship</p>'
      operationId: removeProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates the type of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).
        in: query
        name: sourceRelation
        required: true
        schema:
          type: string
      - description: Indicates the type of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelation
        required: true
        schema:
          type: string
      - description: Indicates if this relationship is the primary relationship.
        in: query
        name: primary
        schema:
          type: boolean
      - description: Displays the description of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).This needs to be passed
          if the attribute primary is sent as true.
        in: query
        name: sourceRelationDescription
        schema:
          type: string
      - description: Displays the description of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelationDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "DeleteProfileRelationship method provides the ability to delete profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
    post:
      description: ' <p><strong>OperationId:</strong>postProfileRelationship</p>'
      operationId: postProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfileRelationship_request'
        description: Request object for creating profile relationship.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "CreateProfileRelationship method provides the ability to create profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationship
    put:
      description: ' <p><strong>OperationId:</strong>putProfileRelationship</p>'
      operationId: putProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileRelationship_request'
        description: Request object for changing profile relationship.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "ChangeProfileRelationship method provides the ability to update(delete\
        \ and add) profile relationship based on the request criteria of SourceProfileID\
        \ , TargetProfileID, To Be ChangedProfileID and SourceProfileRelationType\
        \ specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationshipToBeChanged
  /profiles/{survivorProfileId}/merges:
    post:
      description: "When you need to merge 2 guest profiles into 1 profile, use this\
        \ API. <p><strong>OperationId:</strong>mergeProfiles</p>"
      operationId: mergeProfiles
      parameters:
      - description: Original Profile ID to which profiles will be merged in OPERA.
        in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/mergeProfiles_request'
        description: Request object for merging profiles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Merge two profiles by ID
      tags:
      - Profile
      x-codegen-request-body-name: profileToBeMerged
  /profiles/{survivorProfileId}/merges/snapshot:
    get:
      description: "This API will provide you with a snapshot of the to be merged\
        \ profile. In the request you will pass the survivor profile, along with the\
        \ profile ID of the profile which it to be merged into the survivor profile.\
        \  The response will provide you with the combined profile data of both profiles\
        \ which are being merged. <p><strong>OperationId:</strong>getMergeProfilesSnapshot</p>"
      operationId: getMergeProfilesSnapshot
      parameters:
      - in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: originalId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: originalIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: originalIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: toBeMergedId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: toBeMergedIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: toBeMergedIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mergedProfilesSnapshotDetails'
          description: Response object for fetching snapshot of merge profiles result.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MergeProfilesSnapshot not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get merge profiles snapshot
      tags:
      - Profile
  /profiles/{survivorProfileId}/stageProfiles/snapshot:
    get:
      description: This API will provide you with a snapshot of the to be merged profile
        in staging. <p><strong>OperationId:</strong>getMergeStageProfileSnapshot</p>
      operationId: getMergeStageProfileSnapshot
      parameters:
      - in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code for the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: resortProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: resortProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: resortProfileIdType
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mergedStageProfileSnapshot'
          description: Response object to fetch merge profile based on stage and opera
            profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MergeStageProfileSnapshot not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get merge stage profile snapshot
      tags:
      - Profile
  /profilesByIds:
    get:
      description: "Use this API when you want to search for a profile. The response\
        \ will include a list of profiles that exist in OPERA, based on your search\
        \ criteria.  For example, you want to see if  a profile for Mr David Smith\
        \ exists - you can search by various criteria, such as first, last name, email.\
        \  The response will include a list of any profiles that exist for Mr Davis\
        \ Smith.  If a profile matches the criteria, and you want to get more details\
        \ of that profile, proceed to use getProfile with the profileID in the request.\
        \ <p><strong>OperationId:</strong>getProfilesByIds</p> <p>The maximum allowable\
        \ limit for this API is <strong>200</strong>.</p>"
      operationId: getProfilesByIds
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: corporateIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - NegotiatedRate
            - GdsNegotiatedRate
            - Comment
            - Membership
            - Preference
            - Keyword
            - HistoryReservation
            - FutureReservation
            - Relationship
            - Correspondence
            - Routing
            - Indicators
            - Profile
            - WebUserAccount
            - SalesInfo
            - ECertificate
            - Subscriptions
            - PrimaryAccountInfo
            - DeliveryMethods
            - RoomOwnership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: instructionParameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Hotel Code, It is used to filter hotel specific."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileDetails'
          description: Response object for fetching multiple detailed profiles by
            unique identifiers..
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfilesByIds not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Search for profile(s)
      tags:
      - Profile
  /profilesMatchList:
    put:
      description: Use this API to update a list of records of profiles match to skip
        or don't skip profile match
      operationId: putProfilesMatchList
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/matchListType'
        description: Parameter that contains a list of matchIds that will be updated
          to skip or don't skip profile match.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Updates a list of matchIds to skip or don't skip profile match.
      tags:
      - Profile
      x-codegen-request-body-name: matchList
  /profilesMatchList/profileType/{profileType}:
    get:
      description: "This API provides list of matching profiles based on the profile\
        \ match configuration. These profiles are matched based on address, Postal\
        \ codes, Last Name etc.<p><strong>OperationId:getProfilesMatchList</strong></p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getProfilesMatchList
      parameters:
      - description: Profile type of the matched profiles.
        in: path
        name: profileType
        required: true
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: Property this profile is registered with.
        in: query
        name: registeredProperty
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: Specific Date when the weighing points were computed for the
          profiles.
        in: query
        name: computedDate
        schema:
          format: date
          type: string
      - description: "Status of the match. It can be one of these 3 options: Match\
          \ Points Computed, Do Not Merge, Can Not Merge."
        in: query
        name: status
        schema:
          type: string
      - description: Corporate id of the profile.
        in: query
        name: clientID
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: "Family name, last name. May also be used for full name if the\
          \ sending system does not have the ability to separate a full name into\
          \ its parts, e.g. the surname element may be used to pass the full name."
        in: query
        name: surname
        schema:
          maxLength: 40
          minLength: 0
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          maxLength: 40
          minLength: 0
          type: string
      - description: "If this value is true, then the response will return profiles\
          \ that have been selected as Do Not Merge."
        in: query
        name: doNotMerge
        schema:
          type: boolean
      - description: "If this value is true, then the response will return profiles\
          \ with weighing points that are higher than the upper threshold."
        in: query
        name: aboveUpperThreshold
        schema:
          type: boolean
      - description: "If this value is true, then the response will return profiles\
          \ with weighing points that are below the upper threshold."
        in: query
        name: belowUpperThreshold
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profilesMatch'
          description: Response object for fetching the profiles match.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profiles match list.
      tags:
      - Profile
  /recentlyAccessedProfiles:
    get:
      description: Use this API to fetch the profiles that have recently been accessed
        by an application user. <p><strong>OperationId:</strong>getRecentlyAccessedProfiles</p>
      operationId: getRecentlyAccessedProfiles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recentlyAccessedProfiles'
          description: Response with the fetched recently accessed profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RecentlyAccessedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch recently accessed profiles
      tags:
      - Profile
  /service/profileService/cache:
    delete:
      description: ' <p><strong>OperationId:</strong>clearProfileServiceCache</p>'
      operationId: clearProfileServiceCache
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete cache for Profile service
      tags:
      - Profile
  /services/profile/status:
    get:
      description: ' <p><strong>OperationId:</strong>pingProfileService</p>'
      operationId: pingProfileService
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: pingProfileService not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to check the status of profile service
      tags:
      - Profile
  /services/profileExternal/status:
    get:
      description: ' <p><strong>OperationId:</strong>pingProfileExternalService</p>'
      operationId: pingProfileExternalService
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: pingProfileExternalService not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to check status of ProfileExternal service
      tags:
      - ProfileExternal
  /services/profileMembership/status:
    get:
      description: ' <p><strong>OperationId:</strong>pingMembershipService</p>'
      operationId: pingMembershipService
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: pingMembershipService not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to check status of ProfileMembership service
      tags:
      - ProfileMembership
  /services/profileStats/status:
    get:
      description: ' <p><strong>OperationId:</strong>pingProfileStatsService</p>'
      operationId: pingProfileStatsService
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: pingProfileStatsService not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to check the status of ProfileStats service
      tags:
      - ProfileStatistics
  /stagedProfile/{id}:
    get:
      description: "The system suspends / stages a profile with a point value between\
        \ the upper and lower thresholds. When a profile is staged, you must review\
        \ the suspended profile and determine if it should be merged with an internal\
        \ profile or added as a new profile.  This API will get a specific profile\
        \ that has been staged. <p><strong>OperationId:</strong>getStagedProfile</p>"
      operationId: getStagedProfile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The hotel code that the stage profile belongs to.
        in: query
        name: hotelId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If selected, only invalid details of the staged profile will\
          \ be retrieved."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Profile
            - Address
            - Communication
            - NegotiatedRate
            - Membership
            - Preference
            - Keyword
            - Routing
            - UserDefinedField
            - Identifier
            - InvalidDetail
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stagedProfileDetails'
          description: Response object for the staged profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StagedProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a staged profile
      tags:
      - Profile
    put:
      description: This API can be used to update the staged Profile. <p><strong>OperationId:</strong>changeStagedProfile</p>
      operationId: changeStagedProfile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/stagedProfile'
        description: Request object for changing the staged profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a staged profile
      tags:
      - Profile
      x-codegen-request-body-name: stagedProfile
  /stagedProfiles:
    get:
      description: "The system suspends / stages a profile with a point value between\
        \ the upper and lower thresholds. When a profile is staged, you must review\
        \ the suspended profile and determine if it should be merged with an internal\
        \ profile or added as a new profile. <p><strong>OperationId:</strong>getStagedProfiles</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>"
      operationId: getStagedProfiles
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "This can be used to fetch staged profiles based on the reason\
          \ why it got staged Ex : NameChange"
        explode: true
        in: query
        name: stagedReasons
        schema:
          items:
            enum:
            - InvalidEnrollmentCode
            - EmptyEnrollmentCode
            - NameChange
            - InvalidExpirationDate
            - EmptyExpirationDate
            - EmptyMembershipLevel
            - InvalidMembershipLevel
            - DuplicateMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: The profile region for which the staged profiles shall be fetched.
        in: query
        name: region
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Profile type to be included in the search.
        in: query
        name: profileType
        schema:
          type: string
      - description: 'The date on which the staged profiles have been received. This
          parameter is deprecated. '
        in: query
        name: importDate
        schema:
          format: date
          type: string
      - description: The status of the staged profiles.
        in: query
        name: stageStatus
        schema:
          type: string
      - description: Membership filter of staged profiles.
        in: query
        name: applyTo
        schema:
          enum:
          - StagedProfiles
          - MatchingProfiles
          - StagedAndMatchingProfiles
          type: string
      - explode: true
        in: query
        name: membershipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Accepts a date value and retrieves all the suspended profiles
          inserted on or after the provided date.
        in: query
        name: insertDateFrom
        schema:
          format: date
          type: string
      - description: Accepts a date value and retrieves all the suspended profiles
          inserted up to and including the specified date.
        in: query
        name: insertDateTo
        schema:
          format: date
          type: string
      - description: ' Accepts a membership number and retrieves the suspended profile(s)
          associated with the provided code.'
        in: query
        name: membershipNumber
        schema:
          maxLength: 40
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stagedProfiles'
          description: Response object for the staged profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StagedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get staged profiles
      tags:
      - Profile
  /stayMembership:
    post:
      description: A user can add a new membership or substitute an existing membership
        for a stay record by providing the relevant membership information in the
        request.<p><strong>OperationId:</strong>addReplaceStayMembership</p>
      operationId: addReplaceStayMembership
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/stayMembershipDetails'
        description: Request object for Membership details to attach or replace.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource.
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates attaching or replacing a membership to a given
        stayRecord.
      tags:
      - Profile
      x-codegen-request-body-name: stayMembershipDetails
  /stayRecord:
    post:
      description: A user can upload stay record to OPERA by specifying stay record
        column details in the request.<p><strong>OperationId:</strong>postStayRecord</p>
      operationId: postStayRecord
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/stayRecordDetails'
        description: Request object for uploading stage records to LCS.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/links'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created stay record.
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates uploading stage records to LCS.
      tags:
      - Profile
      x-codegen-request-body-name: stayRecordDetails
  /stayRecord/{stayRecordId}:
    get:
      description: "This API is used to retrieve details of a given stay record (including\
        \ UDFs, Daily Rates and Revenue). <p><strong>OperationId:</strong>getStayRecordDetail</p>"
      operationId: getStayRecordDetail
      parameters:
      - description: "A unique identifying value of the stay record, assigned by the\
          \ creating system."
        in: path
        name: stayRecordId
        required: true
        schema:
          maxLength: 40
          minLength: 1
          type: string
      - description: Fetch instructions that can be used to fetch required stay record
          details.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - UDF
            - Revenue
            - Rates
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stayRecordDetail'
          description: Response object for stay record detail.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Stay Record detail not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Stay Record Detail.
      tags:
      - Profile
  /suspendedAddresses:
    get:
      description: Fetch Suspended Profile Addresses <p><strong>OperationId:</strong>getSuspendedAddresses</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getSuspendedAddresses
      parameters:
      - description: Last Name of the Profile against which the Suspended Addresses
          are fetched.
        in: query
        name: name
        schema:
          type: string
      - description: "Hotel Code, It is used to filter hotel specific children to\
          \ this specific hotel code."
        in: query
        name: hotelId
        schema:
          type: string
      - description: First Name of the Profile against which the Suspended Addresses
          are fetched.
        in: query
        name: firstName
        schema:
          type: string
      - description: ProfileT ype of the Profile against which the Suspended Addresses
          are fetched..
        in: query
        name: profileType
        schema:
          type: string
      - description: Match Code of the Address Validation Performed from the batch
          processing
        in: query
        name: matchCode
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Validate Date.
        in: query
        name: validateDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedAddresses'
          description: Response list of suspended addresses based on supplied criteria
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedAddresses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Suspended Profile Addresses
      tags:
      - Profile
  /suspendedProfileErrorSummary:
    get:
      description: Retrieve the suspended profile error summary details <p><strong>OperationId:</strong>getSuspendedProfileErrorSummary</p>
      operationId: getSuspendedProfileErrorSummary
      parameters:
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedProfileErrorSummaryInfo'
          description: Response object for fetch suspended profile Errors summary.
            This object contains collection of profile erros and count of how many
            profiles encountered this error.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedProfileErrorSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get suspended profile error summary details
      tags:
      - Profile
  /suspendedStayRecordId/{suspendedStayRecordId}:
    delete:
      description: "Use this to remove a Suspended Stay from OPERA including all its\
        \ details like Revenue, Rate, Membership, Errors. <p><strong>OperationId:</strong>deleteSuspendedStay</p>"
      operationId: deleteSuspendedStay
      parameters:
      - description: Suspended Stay Record ID.
        in: path
        name: suspendedStayRecordId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a suspended stay by the Suspended Stay Record ID.
      tags:
      - SuspendedStay
    get:
      description: "This API provides Suspended Stay information including Revenue,\
        \ Rate, Membership and Error details. <p><strong>OperationId:</strong>getSuspendedStay</p>"
      operationId: getSuspendedStay
      parameters:
      - description: Suspended Stay Record ID.
        in: path
        name: suspendedStayRecordId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedStayType'
          description: "Response object for fetching Suspended Stay, including Revenue,\
            \ Rate, Membership and Error details."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedStay not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a Suspended Stay by the Suspended Stay Record ID.
      tags:
      - SuspendedStay
    put:
      description: "Use this to update a Suspended Stay information including Revenue,\
        \ Rate and Membership details.  <p><strong>OperationId:</strong>putSuspendedStay</p>"
      operationId: putSuspendedStay
      parameters:
      - description: Suspended Stay Record ID.
        in: path
        name: suspendedStayRecordId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/suspendedStayType'
        description: "Request object for change/modification of Suspended Stay, including\
          \ Revenue, Rate and Membership details."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: "Response object for change/modification of Suspended Stay,\
            \ including Revenue, Rate and Membership details."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a Suspended Stay by the Suspended Stay Record ID.
      tags:
      - SuspendedStay
      x-codegen-request-body-name: suspendedStay
  /suspendedStays:
    get:
      description: "This API provides Suspended Stay information. Suspended stays\
        \ are records that need to be manually processed, as they have been suspended\
        \ during an upload to OPERA Cloud. <p><strong>OperationId:</strong>getSuspendedStays</p>"
      operationId: getSuspendedStays
      parameters:
      - description: Hotel code.
        in: query
        name: hotelId
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Status of reservation.
        in: query
        name: reservationStatus
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Date of creation or import of stay.
        in: query
        name: importDate
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 200
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedStaySummariesType'
          description: Response object for fetching Suspended Stays.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedStays not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Suspended Stays
      tags:
      - SuspendedStay
  /synchronizeProfileSubscriptions:
    put:
      description: Synchronize profile subscriptions <p><strong>OperationId:</strong>synchronizeProfileSubscriptions</p>
      operationId: synchronizeProfileSubscriptions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileSubscriptionsToSynchronize'
        description: Request object for re-subscribing profile subscriptions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Synchronize profile subscriptions
      tags:
      - Profile
      x-codegen-request-body-name: profileSubscriptionsToSynchronize
  /validateForgetProfiles:
    put:
      description: Validate forget profiles. <p><strong>OperationId:</strong>validateForgetProfiles</p>
      operationId: validateForgetProfiles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forgetProfilesCriteria'
        description: Operation to validate profiles for forgetting.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/validatedForgetProfiles'
          description: Response object for validating profiles for forgetting.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate forget profiles
      tags:
      - Profile
      x-codegen-request-body-name: forgetProfilesCriteria
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    cityState:
      description: "Response object for fetching City and State based on search criteria.\
        \ This object contains address information,Success,Warnings and Errors related\
        \ to this operation."
      properties:
        addressType:
          $ref: '#/components/schemas/addressType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). Currently this attribute\
            \ is not used."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    airlineTransactionsStatus:
      description: Request object for fetching membership transactions processed by
        the airline.
      properties:
        transactions:
          description: "Contains details of the membership transaction processing\
            \ status, provided by the airline."
          items:
            $ref: '#/components/schemas/airlineTransactionType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    airlineTransactionsType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      items:
        $ref: '#/components/schemas/airlineTransactionType'
      maxItems: 4000
      type: array
    airlineTransactionType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        transactionId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        hotelId:
          description: Property code that this record corresponds to
          maxLength: 20
          minLength: 0
          type: string
        airlineHotelCode:
          description: Property code provided by the airline
          maxLength: 20
          minLength: 0
          type: string
        memberInfo:
          $ref: '#/components/schemas/memberInfoType'
        airlineStatus:
          $ref: '#/components/schemas/airlineTransactionStatusType'
        importInfo:
          $ref: '#/components/schemas/airlineTransactionImportInfoType'
        miles:
          description: Miles earned through this membership transaction
          type: number
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipTransactionId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 25
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    memberInfoType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        membershipId:
          description: Membership Card Number
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          description: Membership Program Code or Membership Type
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        firstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
      type: object
    surnameType:
      description: "Family name, last name."
      maxLength: 80
      minLength: 0
      type: string
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    airlineTransactionStatusType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        errorCode:
          description: Error Code returned by the airline
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Error Description returned by the airline
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    airlineTransactionImportInfoType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        importDate:
          description: The date when this batch was imported into OPERA
          format: date
          type: string
        status:
          $ref: '#/components/schemas/airlineImportStatusType'
        description:
          description: Description of the error that caused the import to fail
          maxLength: 200
          minLength: 0
          type: string
      type: object
    airlineImportStatusType:
      description: List of possible import statuses of a membership airline processing
        record.
      enum:
      - New
      - Uploaded
      - Error
      type: string
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/characterUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/numericUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/dateUDFType'
          maxItems: 4000
          type: array
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    matchProfileType:
      description: Provides information for match profile.
      properties:
        hotelId:
          description: Hotel Code for the profile.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        statusCode:
          $ref: '#/components/schemas/matchStatusType'
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    matchStatusType:
      description: No Match found based on the Threshold.
      enum:
      - MatchFoundMerge
      - MatchFoundCreate
      - TentativeMatchFound
      - MatchNotFound
      type: string
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    availableAwardsBasedOnType:
      description: Response object to fetch member available awards based on the type
        being passed.
      properties:
        membershipAvailableAwards:
          description: List of available awards information.
          items:
            $ref: '#/components/schemas/membershipAwardAvailabilityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardsAvailabilityType:
      description: List of available awards information.
      items:
        $ref: '#/components/schemas/membershipAwardAvailabilityType'
      maxItems: 4000
      type: array
    membershipAwardAvailabilityType:
      description: Details of Member Award Type. Awards will be available for redemption
        of award points associated with a particular member.
      properties:
        rateInfo:
          $ref: '#/components/schemas/rateAvailabilityType'
        productInfo:
          $ref: '#/components/schemas/productAvailabilityType'
        upgradeInfo:
          $ref: '#/components/schemas/upgradeAvailabilityType'
        otherInfo:
          $ref: '#/components/schemas/otherAvailabilityType'
      type: object
    rateAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        rateCode:
          description: Rate code associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        rateDescription:
          description: Rate code description associated with the award.
          maxLength: 4000
          minLength: 0
          type: string
        roomLabel:
          description: Code for the room type in which the award was issued.
          maxLength: 20
          minLength: 0
          type: string
        roomDescription:
          description: Description of the Room.
          maxLength: 4000
          minLength: 0
          type: string
        roomCategory:
          description: Indicates which room category it belongs.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award.
          format: date
          type: string
      type: object
    productAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        packageCode:
          description: Package/Product code for the award .
          maxLength: 20
          minLength: 0
          type: string
        packageDescription:
          description: Description of the product.
          maxLength: 20
          minLength: 0
          type: string
        awardValidFrom:
          description: The valid time period from when the award can be issued.
          format: date
          type: string
        awardValidTo:
          description: The valid time to an issued award.
          format: date
          type: string
      type: object
    upgradeAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        fromRoomCategory:
          description: Indicates room type code for the room prior to the upgrade.
          maxLength: 4000
          minLength: 0
          type: string
        toRoomCategory:
          description: Indicates room type code of the upgrade room.
          maxLength: 4000
          minLength: 0
          type: string
        fromRoomDescription:
          description: Indicates room type Description for the room prior to the upgrade.
          maxLength: 4000
          minLength: 0
          type: string
        toRoomDescription:
          description: Indicates room type Description of the upgrade room.
          maxLength: 4000
          minLength: 0
          type: string
        fromRoom:
          description: Indicates room type code for the room prior to the upgrade.
          maxLength: 20
          minLength: 0
          type: string
        toRoom:
          description: Indicates room type code of the upgrade room.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award.
          format: date
          type: string
      type: object
    otherAvailabilityType:
      description: Information related to Other Award.
      properties:
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        sellBeginDate:
          description: Beginning date of the award.
          format: date
          type: string
        sellEndDate:
          description: End date that the award will be available.
          format: date
          type: string
        shortDescription:
          description: Descriptive name of the award.
          maxLength: 80
          minLength: 0
          type: string
        awardValue:
          description: "The actual value of the award, in the amount of currency."
          type: number
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        longDescription:
          description: Detail description of the award.
          maxLength: 2000
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
      type: object
    awardsToGrant:
      description: Response object to fetch award details to grant an award.
      properties:
        membershipAwardsList:
          description: List of available awards information.
          items:
            $ref: '#/components/schemas/membershipAwardAvailabilityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    company:
      description: Request object for creation of company/agent/group/source profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        companyIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        companyDetails:
          $ref: '#/components/schemas/companyProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    companyProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/companyProfileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
      type: object
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    iATAInfoType:
      description: IATA Information of the profile.
      properties:
        iATACompany:
          description: IATA Company Detail.
          maxLength: 20
          minLength: 0
          type: string
        iATAConsortia:
          description: IATA Consortia.
          maxLength: 40
          minLength: 0
          type: string
        iATAValidationResult:
          description: IATA Validation Result.
          type: boolean
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        sequenceId:
          description: The image set sequence ID.
          type: integer
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        imageType:
          description: The image set type.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: The image set chain code.
          maxLength: 20
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
        imageOrder:
          description: The image set order.
          type: integer
        website:
          description: The image set website.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        value:
          description: Property Value
          type: string
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    profileMembershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done. This is set at the
            OPERA control level and cannot be overriden.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        autoPopulateFromName:
          default: false
          description: Automatically populate membership number based on profile name.
          type: boolean
      type: object
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
      type: object
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    preferenceTypeType:
      description: Preference details for the profile.
      properties:
        preference:
          description: Collection of Preferences for the profile.
          items:
            $ref: '#/components/schemas/preferenceType'
          maxItems: 4000
          type: array
        preferenceType:
          description: Preference group code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceTypeDescription:
          description: Preference group description.
          type: string
        sequence:
          description: Preference Sequence.
          type: string
        maxQuantity:
          description: Maximum quantity of preferences allowed per preference group.
          type: integer
        availableQuantity:
          description: Available quantity of preferences (maximum quantity - Existing
            preferences)per preference group.
          type: integer
        maxResortUsedQuantity:
          description: Maximum quantity of preferences used by any resort per preference
            group.
          type: integer
        reservationPreference:
          description: Whether this preference is reservation preference or not.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    preferenceType:
      description: Guest Preference details for the profile.
      properties:
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceCode:
          maxLength: 20
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
      type: object
    keywordType:
      properties:
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        type:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    keywordDetailType:
      properties:
        newKeyword:
          description: The new keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    negotiatedType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    negotiatedInfoType:
      description: This provides information for a profile negotiated rate.
      properties:
        corporateAgreementId:
          description: The master identifier for multiple offices/locations under
            the same company profile. This is optional
          maxLength: 80
          minLength: 0
          type: string
        comissionCode:
          description: Informational purposes only in numeric format.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: The sell order.
          type: integer
        inactive:
          description: Negotiated Rate is inactive or not
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    gdsNegotiatedType:
      description: This holds a list of GdsNegotiatedInfoType.
      properties:
        gdsNegotiatedInfoList:
          description: List of channel negotiated rates for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedInfoType'
          maxItems: 4000
          type: array
        bookingChannelCode:
          description: Booking Channel Code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        channelRatePlanCode:
          description: Channel Room Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    gdsNegotiatedInfoType:
      description: This provides information for a channel negotiated rate.
      properties:
        accessCode:
          description: The GDS negotiated rate code.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: The sell order.
          type: integer
        inactive:
          description: The GDS Negotiated Rate is inactive or not
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsType'
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        masterAccountInfo:
          $ref: '#/components/schemas/masterAccountInfoType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsType:
      description: Detailed information regarding the changes made to relationships
        for the profile.
      properties:
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        changeProfileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.).\
            \ Currently this attribute is not used."
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.). Currently this attribute is not used."
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        salutation:
          description: Salutation of the profile
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          format: date-time
          type: string
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    identificationInfoType:
      description: Information on the identification of the customer.
      properties:
        identification:
          $ref: '#/components/schemas/identificationType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    identificationType:
      description: Identification information of the customer.
      properties:
        idType:
          description: "Identification Type. Eg Passport, Driving License etc."
          maxLength: 40
          minLength: 0
          type: string
        idNumber:
          description: Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idNumberMasked:
          description: Masked Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        issuedCountry:
          description: The country where Identification was issued.
          maxLength: 20
          minLength: 0
          type: string
        issuedDate:
          description: Issued date of Identification.
          format: date
          type: string
        issuedPlace:
          description: The place where Identification was issued.
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of Identification.
          format: date
          type: string
        registeredProperty:
          description: Property where the identification belongs to.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    alienInfoType:
      description: immigration/visa information of a foreign person.
      properties:
        alienRegistrationNo:
          description: Alien Registration Number.
          type: string
        immigrationStatus:
          description: Immigration Status on an Alien.
          maxLength: 40
          minLength: 0
          type: string
        visaValidityType:
          description: Visa Type of an Alien.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyInfoType:
      description: Company Information of the Profile.
      properties:
        legalCompany:
          description: Legal Company.
          maxLength: 80
          minLength: 0
          type: string
        department:
          description: Department of the Profile.
          maxLength: 20
          minLength: 0
          type: string
        position:
          description: Business Title or Position of the profile.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    ownerType:
      description: Generic type for information about an owner.
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          $ref: '#/components/schemas/personNameType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    lastStayInfoType:
      description: Contains last stay related details for the profile
      properties:
        lastVisit:
          description: Used to hold last stay information for the profile.
          format: date
          type: string
        lastRoom:
          description: Used to hold last room information for the profile.
          type: string
        lastRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the profile.
          type: integer
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    profileAccessType:
      properties:
        chainCode:
          description: Indicates the Chain code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        croCode:
          description: Indicates the CRO code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Indicates the Hotel code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        sharedLevel:
          $ref: '#/components/schemas/profileSharedLevelType'
      type: object
    profileSharedLevelType:
      description: Simple types for Shared level.
      enum:
      - Global
      - Property
      - Cro
      type: string
    profileRestrictions:
      properties:
        reason:
          description: Restriction reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Description of restriction reason.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
      type: object
    mailingActionsType:
      description: Defines mailing action list for the profile.
      properties:
        mailingAction:
          description: Defines mailing action code and description.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        active:
          description: When true indicates that profile has subscribed to the mailing
            list.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    privacyInfoType:
      description: Defines Privacy related information for the profile.
      properties:
        marketResearchParticipation:
          description: Indicates if the profile participates in market research.
          type: boolean
        lastPrivacyPromptDate:
          description: Indicate the last privacy prompt date of the guest.
          format: date
          type: string
        infoFromThirdParty:
          description: Indicates if the profile is ok getting info from third parties.
          type: boolean
        autoEnrollLoyaltyProgram:
          description: Indicates if the profile wishes to be automatically enrolled
            in the property's loyalty program.
          type: boolean
        allowPhone:
          description: Indicates if the profile wishes to allow phone calls.
          type: boolean
        allowSMS:
          description: Indicates if the profile wishes to allow SMS.
          type: boolean
        allowEmail:
          description: Indicates if the profile wishes to allow Email.
          type: boolean
        optInMailingList:
          description: Indicates if the profile wishes to opt in for Mailing List.
          type: boolean
        optInMarketResearch:
          description: Indicates if the profile wishes to opt in for Market Research.
          type: boolean
        optInThirdParty:
          description: Indicates if the profile wishes to opt in for Third Party.
          type: boolean
        optInAutoEnrollmentMember:
          description: Indicates if the profile wishes to opt in for Auto Enrolment
            Member.
          type: boolean
        optInPhone:
          description: Indicates if the profile wishes to opt in for Phone.
          type: boolean
        optInSms:
          description: Indicates if the profile wishes to opt in for SMS.
          type: boolean
        optInEmail:
          description: Indicates if the profile wishes to opt in for Email.
          type: boolean
      type: object
    profileCashieringType:
      description: Contains cashiering related details for the profile
      properties:
        directBillingList:
          description: Contains the direct billing related information for the profile.
          items:
            $ref: '#/components/schemas/directBillingType'
          maxItems: 4000
          type: array
        autoFolioSettlementType:
          description: Contains the auto folio settlement type for the profile.
          maxLength: 40
          minLength: 0
          type: string
        paymentDueDays:
          description: "Ability to define on the account, the number of days after\
            \ which the invoice should be paid."
          type: integer
        taxPercent1:
          description: Tax1 Percentage for Collecting Agent.
          type: integer
        taxPercent2:
          description: Tax2 Percentage for Collecting Agent.
          type: integer
        taxPercent3:
          description: Tax3 Percentage for Collecting Agent.
          type: integer
        taxPercent4:
          description: Tax4 Percentage for Collecting Agent.
          type: integer
        taxPercent5:
          description: Tax5 Percentage for Collecting Agent.
          type: integer
        arNoCentral:
          description: Account Receivables Central Number.
          maxLength: 20
          minLength: 0
          type: string
        referenceCurrency:
          description: Reference Currency.
          maxLength: 20
          minLength: 0
          type: string
        vATOffsetYN:
          description: VAT Offset Flag.
          maxLength: 1
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    directBillingType:
      description: This is the preconfigured routing instruction type.
      properties:
        hotelId:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        aRNumber:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileCommissionType:
      description: This is the preconfigured routing instruction type.
      properties:
        hotelId:
          description: Hotel Code for the commission being used for a profile.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: commission Code for a profile.
          maxLength: 20
          minLength: 0
          type: string
        bankAccount:
          description: Bank account used for the commission for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethods'
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    commissionPaymentMethods:
      description: Check
      enum:
      - Cent
      - Eft
      - Chk
      type: string
    webUserAccountsType:
      description: Web User Accounts List.
      items:
        $ref: '#/components/schemas/webUserAccountType'
      maxItems: 4000
      type: array
    webUserAccountType:
      description: Web User Account of the guest.
      properties:
        securityQuestion:
          $ref: '#/components/schemas/codeDescriptionType'
        securityAnswer:
          description: Answer to the Security Question.
          maxLength: 4000
          minLength: 0
          type: string
        comments:
          description: Comments.
          maxLength: 4000
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/webUserHistoryType'
        newLoginName:
          description: New Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newPassword:
          description: Login Password.
          maxLength: 2000
          minLength: 0
          type: string
        autoGeneratePassword:
          description: A flag which determines if the password is auto generated.
          type: boolean
        loginName:
          description: Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        domainCode:
          description: Domain code.
          maxLength: 20
          minLength: 0
          type: string
        locked:
          description: Boolean flag that indicates whether the web account is locked
            or not.
          type: boolean
        inactive:
          description: Boolean flag that indicates whether the web account is inactive
            or not.
          type: boolean
      type: object
    webUserHistoryType:
      description: "Creation date time, Creator Id, last modification date time and\
        \ last Modifier Id."
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastLogin:
          description: Last login date.
          format: date
          type: string
        lastPasswordChange:
          description: Last Password change date.
          format: date
          type: string
        inactiveDate:
          description: Inactive date.
          format: date
          type: string
      type: object
    profileTaxInfoType:
      description: Profile information related to tax.
      properties:
        tax1No:
          description: The tax id of this profile. Usually issued by a government
            agency. Used by 1099 printing.
          maxLength: 40
          minLength: 0
          type: string
        tax2No:
          description: Tax 2 id of this profile.
          maxLength: 40
          minLength: 0
          type: string
        taxCategory:
          description: Tax Category to be changed.
          maxLength: 20
          minLength: 0
          type: string
        taxOffice:
          description: Tax Office to be changed.
          maxLength: 30
          minLength: 0
          type: string
        taxType:
          description: Tax type to be changed.
          maxLength: 20
          minLength: 0
          type: string
        businessId:
          description: Business ID. The maximum length of this element should not
            exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        businessRegistration:
          description: Business Registration Code. The maximum length of this element
            should not exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
      type: object
    salesInfoType:
      description: "Provides sales information about the profiles of type company,\
        \ travel agent, source and contact."
      properties:
        scope:
          description: Defines the scope.
          maxLength: 2000
          minLength: 0
          type: string
        scopeCity:
          description: Defines the scope city.
          maxLength: 2000
          minLength: 0
          type: string
        accountType:
          description: Defines the account type.
          maxLength: 20
          minLength: 0
          type: string
        accountSource:
          description: Defines the account source.
          maxLength: 2000
          minLength: 0
          type: string
        industryCode:
          description: Defines the industry code.
          maxLength: 2000
          minLength: 0
          type: string
        businessSegments:
          description: Defines the Business segments.
          maxLength: 2000
          minLength: 0
          type: string
        priority:
          description: Defines the priority.
          maxLength: 4000
          minLength: 0
          type: string
        roomsPotential:
          description: Defines the rooms potential.
          maxLength: 4000
          minLength: 0
          type: string
        actionCode:
          description: Defines the action code.
          maxLength: 4000
          minLength: 0
          type: string
        competitionCode:
          description: Defines the competition code.
          maxLength: 4000
          minLength: 0
          type: string
        influence:
          description: Defines the influence for the contact profile.
          maxLength: 2000
          minLength: 0
          type: string
        preferredRoom:
          description: Defines the Preferred Room for profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code used to filter the sales information.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    eCertificatesType:
      description: List of e-certificates for the profile.
      items:
        $ref: '#/components/schemas/eCertificateType'
      maxItems: 4000
      type: array
    eCertificateType:
      description: E-Certificates details.
      properties:
        certificateId:
          description: System generated unique certificate id.
          type: integer
        voucherNo:
          description: System generated unique voucher number.
          maxLength: 40
          minLength: 0
          type: string
        certificateNo:
          description: Printed certificate no. This has to be unique.
          maxLength: 40
          minLength: 0
          type: string
        eCertificateInfo:
          $ref: '#/components/schemas/eCertificateInfoType'
        expiryDate:
          description: Date of expiry.
          format: date
          type: string
        newExpiryDate:
          description: New Date of expiry to extend e-certificate.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        consumptionDetail:
          $ref: '#/components/schemas/eCertificateConsumptionType'
        status:
          $ref: '#/components/schemas/eCertificateStatusType'
        printed:
          description: Print status of the certificate.
          type: boolean
        inactiveDate:
          description: Date the record was marked as inactive.
          format: date
          type: string
        awardId:
          $ref: '#/components/schemas/awardId'
        databaseId:
          description: External reference from which the record is created.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        issueDate:
          description: Date when certificate was issued.
          format: date
          type: string
        awardPoints:
          description: Award points if any in case of certificate use membership award.
          type: integer
        generationDetail:
          $ref: '#/components/schemas/eCertificateGenerationType'
        originalVoucherNo:
          description: In case of in lieu of certificate this will contain the original
            voucher no.
          maxLength: 40
          minLength: 0
          type: string
        originalCertificateNo:
          description: In case of in lieu of certificate this will contain the original
            certificate no.
          maxLength: 40
          minLength: 0
          type: string
        inLieuSequence:
          description: Seq of the in lieu of certificate. 1..n. original certificate
            will be treated as null = 0.
          type: integer
        cancelRequestDate:
          description: Date on which the cancellation was requested.
          format: date
          type: string
        extensionCount:
          description: Number of times e-certificate is already extended.
          type: integer
      type: object
    eCertificateInfoType:
      description: E-Certificates details.
      properties:
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        awardCode:
          description: Award type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code to which certificate is attached to.
          maxLength: 20
          minLength: 0
          type: string
        voucherBenefitCode:
          description: Voucher benefit code attached to the certificate.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          $ref: '#/components/schemas/eCertificateInfoType_hotels'
        description:
          description: Description about the certificate.
          maxLength: 200
          minLength: 0
          type: string
        longDescription:
          description: Detail description about the certificate.
          maxLength: 4000
          minLength: 0
          type: string
        label:
          description: Label for the certificate.
          maxLength: 40
          minLength: 0
          type: string
        maxExtensionAllowed:
          description: Number of times e-certificate can be extended.
          type: integer
        usageCriteria:
          $ref: '#/components/schemas/eCertificateUsageCriteriaType'
        value:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        benefitSummary:
          description: Summary of Benefits attached to this ECertificate.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    eCertificateScopeType:
      description: Indicates that OPERA E-Certificate is available for a specific
        list of hotels.
      enum:
      - Global
      - Hotel
      - MultiHotel
      type: string
    eCertificateUsageCriteriaType:
      description: E-Certificates details.
      properties:
        reservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        web:
          description: Indicates if web certificate can be consumed in OWS.
          type: boolean
        webAllowed:
          description: Indicates if certificate consumption allowable on the web.
          type: boolean
        benefit:
          description: Indicates to attach a rate code to the e-certificate as a benefit.
          type: boolean
        hotel:
          description: Indicates if web certificate can be consumed in hotel.
          type: boolean
        verifyCertificateNo:
          description: Specify if the certificate number verification is required
            at time of consumption or not.
          type: boolean
        cancelAllowed:
          description: Identify if cancel is allowed or not.
          type: boolean
        generateInLieuCertificate:
          description: Identify if in lieu of certificate can be generated or not.
          type: boolean
      type: object
    eCertificateConsumptionType:
      description: E-Certificates details.
      properties:
        hotelId:
          description: Property where certificate was consumed for.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateConsumeSourceType'
        surname:
          description: Last name of the person who consumed the certificate..
          maxLength: 40
          minLength: 0
          type: string
        firstName:
          description: First name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: Middle name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email of the person who consumed the certificate.
          maxLength: 2000
          minLength: 0
          type: string
        date:
          description: Date the certificate was consumed.
          format: date
          type: string
        userName:
          description: Application user who created the consumption.
          maxLength: 2000
          minLength: 0
          type: string
        userNotes:
          description: Any notes on the certificate entered at time of consumption.
          maxLength: 4000
          minLength: 0
          type: string
        referenceId:
          $ref: '#/components/schemas/uniqueID_Type'
        locationType:
          description: Consumption location type.
          maxLength: 20
          minLength: 0
          type: string
        authorizationCode:
          description: Authorization code for consumption.
          maxLength: 100
          minLength: 0
          type: string
        serviceDate:
          description: Date on which the service is due (arrival date in case of reservation).
          format: date
          type: string
      type: object
    eCertificateConsumeSourceType:
      description: Indicates that OPERA E-Certificate is consumed by hotelPMS.
      enum:
      - Central
      - Web
      - Hotel
      type: string
    eCertificateStatusType:
      description: Indicates that OPERA E-Certificate is reserved.
      enum:
      - Cancelled
      - Consumed
      - Deleted
      - Expired
      - Issued
      - Reserved
      type: string
    awardId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    eCertificateIssueSourceType:
      description: Indicates that OPERA E-Certificate is issued by external system.
      enum:
      - Opera
      - Web
      - Interface
      type: string
    eCertificateIssueType:
      description: Indicates that guest purchased OPERA E-Certificate.
      enum:
      - Assigned
      - OptedIn
      - Purchased
      type: string
    eCertificateGenerationType:
      description: E-Certificates details.
      properties:
        ruleId:
          $ref: '#/components/schemas/uniqueID_Type'
        generationDetail:
          description: Reason for which e-certificate was generated.
          maxLength: 4000
          minLength: 0
          type: string
        referenceValue:
          description: Type of value that is in the certificate.valid values are membership_level.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileSubscriptionListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/profileSubscriptionType'
      maxItems: 4000
      type: array
    profileSubscriptionType:
      description: Contains details of the profile subscription. The subscription
        represents the link between the OPERA profile and the external profile within
        a particular external system
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileInfo:
          $ref: '#/components/schemas/profileSubscriptionType_profileInfo'
        distributed:
          description: Indicates if the profile was distributed to the external system.
          type: boolean
        force:
          description: Indicates if the profile information should be overwritten
            by the external system.
          type: boolean
        subscriptionDate:
          description: Timestamp when the profile was subscribed to.
          format: date-time
          type: string
        lastDistributionDate:
          description: Timestamp of the most recent distribution of this profile to
            the external system.
          format: date-time
          type: string
        lastExternalUpdateDate:
          description: Timestamp of the most recent update of the subscription information
            by the external system.
          format: date-time
          type: string
        inactive:
          description: Indicates whether this subscription is active or inactive.
          type: boolean
        systemCode:
          description: Code of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
        systemType:
          description: Type of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Agent
      - Company
      - Group
      - Source
      type: string
    duplicateExternalSubscriptions:
      description: Response object for fetching subscriptions where the same OPERA
        profile is linked to multiple external profiles within the same external system.
      properties:
        duplicateExternalSubscriptionsList:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/duplicateExternalSubscriptionsType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    duplicateExternalSubscriptionsListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/duplicateExternalSubscriptionsType'
      maxItems: 4000
      type: array
    duplicateExternalSubscriptionsType:
      description: Contains subscription details about an OPERA Profile that is linked
        to multiple external profiles within the same external system.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        databaseId:
          description: Code identifying the external database record which is linked
            to external systems.
          maxLength: 20
          minLength: 0
          type: string
        profileSubscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
      type: object
    duplicateOPERASubscriptions:
      description: Response object for fetching subscriptions where an external profile
        within a particular external system is linked to multiple OPERA profiles.
      properties:
        duplicateOPERASubscriptionsList:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/duplicateOPERASubscriptionsType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    duplicateOPERASubscriptionsListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/duplicateOPERASubscriptionsType'
      maxItems: 4000
      type: array
    duplicateOPERASubscriptionsType:
      description: Contains subscription details about an external profile within
        a particular external system that is linked to multiple OPERA profiles.
      properties:
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileSubscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
      type: object
    eCertificates:
      description: "Response object for fetch ECertificates. This object contains\
        \ collection of ECertificates,Success,Warnings and Errors related to this\
        \ operation."
      properties:
        eCertificatesDetail:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateGeneration:
      description: Request object to issue E-Certificate.
      properties:
        eCertificateGenerationDetails:
          $ref: '#/components/schemas/eCertificateGenerationDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateGenerationDetailsType:
      description: E-Certificates issue API call details.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        hotels:
          description: Hotel to which certificate is attached to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    eCertificateToConsume:
      description: Request object to Consume an E-Certificate.
      properties:
        consumeECertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateToVerify:
      description: Request object to Verify an E-Certificate Number.
      properties:
        certificateId:
          description: System generated unique certificate id.
          type: integer
        certificateNo:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        allowReservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength40:
      description: "Used for Character Strings, length 0 to 40."
      maxLength: 40
      minLength: 0
      type: string
    verifiedECertificate:
      description: Response object to Verify E-Certificate and will return the profile
        information.
      properties:
        profileName:
          $ref: '#/components/schemas/profileNameType'
        profileId:
          $ref: '#/components/schemas/profileId'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileNameType:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    eCertificateToExtend:
      description: Request object to Consume an E-Certificate.
      properties:
        certificateId:
          description: System generated unique certificate id.
          type: integer
        expiryDate:
          description: Indicates E-Certificate extended expiry date.
          format: date
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    enrollment:
      description: Response object for fetching profile enrollment from external system.
      properties:
        enrollmentInfo:
          $ref: '#/components/schemas/profileEnrollmentType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileEnrollmentType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/profileEnrollmentType_telephones'
        emails:
          $ref: '#/components/schemas/profileEnrollmentType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileEnrollmentType_profileDeliveryMethods'
        profileMemberships:
          $ref: '#/components/schemas/profileEnrollmentType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/profileEnrollmentType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileEnrollmentType_relationshipsSummary'
        reservationInfoList:
          $ref: '#/components/schemas/reservationHistoryFutureInfoType'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipsList:
          $ref: '#/components/schemas/profileEnrollmentType_roomOwnershipsList'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        fiscalGuestType:
          description: Fiscal Guest Type is used for Fiscal Folio funcionality
          maxLength: 20
          minLength: 0
          type: string
        previousHotelStays:
          description: Detailed information of the hotel stay.
          items:
            $ref: '#/components/schemas/hotelStayType'
          maxItems: 4000
          type: array
        roomPreferences:
          $ref: '#/components/schemas/roomPreferencesType'
        earningPreferences:
          $ref: '#/components/schemas/earningPreferencesType'
        mailingPreferences:
          $ref: '#/components/schemas/mailingPreferencesType'
        rewardsInfo:
          $ref: '#/components/schemas/rewardsInfoType'
        membershipCardRegistrationCode:
          description: Profile's membership card registration code.
          maxLength: 40
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        enrollmentPaymentDetails:
          $ref: '#/components/schemas/enrollmentPaymentDetailsType'
        enrollmentCode:
          $ref: '#/components/schemas/codeDescriptionType'
        employer:
          maxLength: 36
          minLength: 0
          type: string
        externalDatabaseID:
          description: Enrollment details will be fetched from this External database.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentType:
          $ref: '#/components/schemas/enrollmentTypeType'
        hotelId:
          description: "Hotel Code, It is used to filter hotel specific children to\
            \ this specific hotel code."
          maxLength: 20
          minLength: 0
          type: string
        userId:
          description: UserID/LoginID of the user who is enrolling the Guest.
          maxLength: 200
          minLength: 0
          type: string
        employeeId:
          description: EmployeeID of the user who is enrolling the Guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    reservationHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/historyListType'
        futureList:
          $ref: '#/components/schemas/futureListType'
      type: object
    historyListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        parentReservationId:
          $ref: '#/components/schemas/reservationId'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        fullName:
          description: Full display name
          type: string
        alternateFullName:
          description: Altername full display name
          type: string
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        birthDate:
          description: Date of birth
          format: date
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          $ref: '#/components/schemas/countryNameType'
        vip:
          $ref: '#/components/schemas/vIPType'
        address:
          $ref: '#/components/schemas/addressSearchType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
      type: object
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
      type: object
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
      type: object
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    reservationPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        expirationDateExpired:
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        code:
          description: The authorization rule code.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    payeeInfoType:
      description: Payee information.
      properties:
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentTime:
          description: Time the text was last sent to the user.
          format: date-time
          type: string
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        instructions:
          description: Turndown instructions for the room.
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
      type: object
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
        supplies:
          description: List of the facility codes.
          items:
            $ref: '#/components/schemas/facilityCodeType'
          maxItems: 4000
          type: array
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
      type: object
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
      type: object
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
      type: object
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountRequired:
          description: Deposit Amount Required.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
      type: object
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    interfaceRightsStatusType:
      properties:
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
      type: object
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        telephones:
          $ref: '#/components/schemas/profileEnrollmentType_telephones'
        emails:
          $ref: '#/components/schemas/profileEnrollmentType_emails'
      type: object
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        expectedReturnTime:
          description: Expected Return Time
          format: date-time
          type: string
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    futureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        parentReservationId:
          $ref: '#/components/schemas/reservationId'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    roomOwnershipType:
      description: Define the search criteria for retrieving room ownership records
      properties:
        roomOwnershipId:
          description: Unique Id for Room Owner record.
          type: integer
        contractNumber:
          description: Contract number for room owner.
          type: string
        roomId:
          description: Room Id of room owner.
          type: string
        roomCategory:
          description: Room Category of the room ownership record.
          type: string
        roomType:
          description: Room Type of the room ownership record.
          type: string
        startDate:
          description: Start Date of the room ownership record.
          format: date
          type: string
        endDate:
          description: End Date of the room ownership record.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          description: Status of the room ownership record.
          type: string
      type: object
    hotelStaysType:
      description: Detailed information of the hotel stay.
      items:
        $ref: '#/components/schemas/hotelStayType'
      maxItems: 4000
      type: array
    hotelStayType:
      description: Type provides the hotel stay information.
      properties:
        hotelName:
          description: Hotel Name.
          maxLength: 40
          minLength: 0
          type: string
        pointsMiles:
          description: Points or Miles.
          maxLength: 20
          minLength: 0
          type: string
        pointsMilesEarned:
          description: Guest stay points or miles earned
          maxLength: 20
          minLength: 0
          type: string
        arrivalDate:
          description: Guest arrival date.
          format: date
          type: string
      type: object
    roomPreferencesType:
      description: Indicates the guest's room preferences.
      properties:
        bedType:
          description: Indicates the bed type preference.
          maxLength: 20
          minLength: 0
          type: string
        smoking:
          description: Indicates the smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        precedence:
          description: "Indicates which room preference takes priority, bed type or\
            \ smoking type."
          maxLength: 20
          minLength: 0
          type: string
        floor:
          description: Indicates the floor type preference.
          maxLength: 20
          minLength: 0
          type: string
        newspapers:
          description: Indicates the newspaper preference.
          maxLength: 20
          minLength: 0
          type: string
        snack:
          description: Indicates the snack preference.
          maxLength: 20
          minLength: 0
          type: string
        beverage:
          description: Indicates the beverage preference.
          maxLength: 20
          minLength: 0
          type: string
        pillow:
          description: Indicates the pillow type preference.
          maxLength: 20
          minLength: 0
          type: string
        roomAmenities:
          description: Indicates the room amenities requested.
          maxLength: 80
          minLength: 0
          type: string
        interests:
          description: Indicates guest preferred interests.
          maxLength: 2000
          minLength: 0
          type: string
        accessible:
          description: Indicates if the member requires accessible rooms.
          type: boolean
      type: object
    earningPreferencesType:
      description: Indicates guest's rewards earning preferences.
      properties:
        earningPreference:
          description: "Indicates the earning preference, Points or Miles."
          maxLength: 20
          minLength: 0
          type: string
        airline:
          description: Indicates preferred airline code and name.
          maxLength: 20
          minLength: 0
          type: string
        frequentFlyerNumber:
          description: Indicates frequent flyer's number of the guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    mailingPreferencesType:
      description: Indicates guest's mailing preferences.
      properties:
        eFolio:
          description: Defines if an E-Folio is required.
          type: boolean
        mailings:
          description: Defines mailings only.
          type: boolean
      type: object
    rewardsInfoType:
      description: "Indicates membership base information like CurrentBalance,association\
        \ and Owned card."
      properties:
        mVCIOwner:
          description: Indicates if the member is an MVCI owner.
          maxLength: 3
          minLength: 0
          type: string
        ownsVisaCard:
          description: Indicates if guest owns a visa card.
          type: boolean
        meetingPlanner:
          description: Indicates if meeting planner is requested.
          type: boolean
        association:
          description: Indicates guest association.
          maxLength: 2000
          minLength: 0
          type: string
        currentBalance:
          description: Current membership points.
          type: number
        membershipId:
          description: Indicates membership id of the guest.
          type: number
        membershipNo:
          description: Indicates membership number of the guest
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: Indicates membership level of the guest
          maxLength: 20
          minLength: 0
          type: string
        membershipDate:
          description: Indicates membership date of the guest
          format: date
          type: string
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    enrollmentPaymentDetailsType:
      description: Payment details to enrolll profile to the membership program.
      properties:
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
        amount:
          description: Amount/Fee to enroll to membership Program.
          type: number
        amountCode:
          $ref: '#/components/schemas/codeDescriptionType'
        paymentDate:
          description: The date of Payment for enrollment to membership program.
          format: date
          type: string
        comments:
          description: Payment Comments.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    enrollmentTypeType:
      description: "The type of external system that the guest is enrolling in, such\
        \ as Loyalty, Gaming or Activities."
      enum:
      - Gaming
      - Loyalty
      - Activities
      type: string
    profileSummaryInfoType:
      description: Summary information about a profile and the associated Unique IDs.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileSummaryType'
      type: object
    profileSummaryType:
      description: Type provides the basic information about the profile.
      properties:
        formerName:
          $ref: '#/components/schemas/profileSummaryType_formerName'
        altName:
          $ref: '#/components/schemas/profileNameType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        telephoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        profileMembership:
          $ref: '#/components/schemas/profileMembershipType'
        uRLInfo:
          $ref: '#/components/schemas/uRLInfoType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
        owners:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        primaryCompany:
          description: Primary Company of the profile.
          type: string
        aRAccount:
          $ref: '#/components/schemas/directBillingType'
        commission:
          $ref: '#/components/schemas/codeDescriptionType'
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        allowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        primaryAccountInfo:
          $ref: '#/components/schemas/primaryProfileInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        additionalInfo:
          $ref: '#/components/schemas/profileAdditionalInfoType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        subscription:
          description: This element tells If there is an active subscription for this
            external profile .
          type: boolean
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        protected:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        registeredProperty:
          description: Property this profile is registered with.
          maxLength: 20
          minLength: 0
          type: string
        profileSourceCode:
          description: Original Source Code for profile. It is used as reference to
            identify the source of Profile.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    ownersType:
      description: Generic type for a list of owners.
      items:
        $ref: '#/components/schemas/ownerType'
      maxItems: 4000
      type: array
    profileAllowedActionsType:
      description: Allowed actions for profile operations.
      items:
        $ref: '#/components/schemas/profileAllowedActionType'
      maxItems: 2
      type: array
    profileAllowedActionType:
      description: Flag indicating whether Profile is Enrolled to Primary Membership
        Program.
      enum:
      - NameChange
      - AltNameChange
      - TaxIDChange
      - EnrollToPrimaryMembership
      type: string
    primaryProfileInfoType:
      description: Contains basic information of profile.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        profileName:
          description: Name of the account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileAdditionalInfoType:
      properties:
        primaryOwnerCode:
          description: Primary Owner of the profile
          maxLength: 20
          minLength: 0
          type: string
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        masterAccount:
          description: Indicates if the profile is a Master Account for one or more
            Subsidiary Accounts.
          type: boolean
        subsidiaryAccount:
          description: Indicates if the profile is a Subsidiary Account of a Master/Parent
            Account.
          type: boolean
        businessPosition:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    profile:
      description: Object for creation of profiles. This object contains profile details
        with unique identifiers for each profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        profileAllowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        copyInstructions:
          $ref: '#/components/schemas/copyInstructionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileEnrollmentType_profileDeliveryMethods'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileEnrollmentType_relationshipsSummary'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipsList:
          $ref: '#/components/schemas/profileEnrollmentType_roomOwnershipsList'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        inactiveReason:
          description: Inactive reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        fiscalGuestType:
          description: Fiscal Guest Type is used for Fiscal Folio funcionality
          maxLength: 20
          minLength: 0
          type: string
        internalFolio:
          description: "Flag considered during folio settlement, to select the corresponding\
            \ Folio Type when the value is true. Only used in Poland country mode."
          type: boolean
      type: object
    awardKindType:
      description: Indicates that this is electronic certificate.
      enum:
      - Paper
      - ECertificate
      type: string
    reservationCertificateType:
      description: Certificate is incentive.
      enum:
      - Reward
      - Incentive
      type: string
    rewardCertificateType:
      description: Point Saver reward.
      enum:
      - Regular
      - StayAnytime
      - PointSaver
      type: string
    awardStatusType:
      description: Indicates that certificate is in use.
      enum:
      - Available
      - NotAvailable
      - InUse
      type: string
    fBAInfoType:
      description: FBA ( Flexible Benefits Awards ) related fields.
      properties:
        status:
          $ref: '#/components/schemas/fBAStatusType'
        monetaryValue:
          description: Award's FBA monetary values.
          type: number
        amount:
          description: Award's FBA amount.
          type: number
        postedAmount:
          description: Award's FBA posted amount.
          type: number
        reimbursedAmount:
          description: Award's FBA reimbursed amount.
          type: number
        postingDateTime:
          description: Date and time of the FBA posting.
          format: date
          type: string
        postingBusinessDate:
          description: Business date of the FBA posting.
          format: date
          type: string
        settlementDateTime:
          description: Date and time of the FBA settlement.
          format: date
          type: string
        settlementBusinessDate:
          description: Business date of the FBA settlement.
          format: date
          type: string
        reimbursementDateTime:
          description: Date and time of the FBA reimbursement.
          format: date
          type: string
        reimbursementBusinessDate:
          description: Business date of the FBA reimbursement.
          format: date
          type: string
        fbaBillGenDate:
          description: Business date of the FBA bill generation.
          format: date
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        flexibleBenefitAward:
          description: Indicates if this certificate is a Flexible Benefit Award certificate.
          type: boolean
        posted:
          description: Indicates whether FBA has been posted.
          type: boolean
        settled:
          description: Indicates whether FBA has been settled.
          type: boolean
        reimbursed:
          description: Indicates whether FBA has been reimbursed.
          type: boolean
        resettleAllowed:
          description: Marks if the certificate is eligible for resettlement
          type: boolean
        reimburseAllowed:
          description: Marks if the certificate is eligible for reimbursement.
          type: boolean
        orphanCertificate:
          description: Indicates whether the certificate is Orphan or not.
          type: boolean
      type: object
    fBAStatusType:
      description: Flexible benefit award has been reimbursed.
      enum:
      - Ordered
      - Attached
      - Posted
      - Settled
      - Reimbursed
      type: string
    guest:
      description: Request object for creation of guest/contact/employee profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        guestIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        guestDetails:
          $ref: '#/components/schemas/guestProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    guestProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/guestProfileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
      type: object
    guestProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Employee
      - Contact
      type: string
    membershipAwardPointsByHotel:
      description: Response object for fetching member award points by Hotel.
      properties:
        membershipAwardPoints:
          description: List of available award points information by Hotel.
          items:
            $ref: '#/components/schemas/membershipAwardPointByHotelType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardPointsByHotelType:
      description: List of available award points information by Hotel.
      items:
        $ref: '#/components/schemas/membershipAwardPointByHotelType'
      maxItems: 4000
      type: array
    membershipAwardPointByHotelType:
      description: Award points information group by Hotel.
      properties:
        hotelId:
          description: Award points issued at Property level.
          maxLength: 20
          minLength: 0
          type: string
        totalPoints:
          description: Sum of total positive and negative points.
          type: number
      type: object
    profileCommissionAccountCopy:
      description: Request object for copying transaction groups configuration.
      properties:
        profileCommissionAccountsInfo:
          $ref: '#/components/schemas/copyProfileCommissionInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyProfileCommissionInfoType:
      description: Contains base info to determine profile commission bank account
        and code.
      properties:
        hotelId:
          description: Hotel code from which the profile bank account and code belongs
            to
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
        validatePending:
          description: "Used in CRUD operations. When set to true, proceed validating\
            \ pending commissions"
          type: boolean
        targetHotelCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    membershipClaim:
      description: Request object for creating membership claim.
      properties:
        membershipClaimDetails:
          $ref: '#/components/schemas/membershipClaimDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipClaimDetailsType:
      description: Detailed information of a claim.
      properties:
        claimNo:
          $ref: '#/components/schemas/uniqueID_Type'
        claimDate:
          description: Date the claim was made.
          format: date
          type: string
        closeDate:
          description: "If the status is closed, the date the claim was closed."
          format: date
          type: string
        source:
          $ref: '#/components/schemas/claimSourceType'
        callerName:
          description: Name of the person placing the claim. This name may be different
            from the name on the membership card.
          maxLength: 100
          minLength: 0
          type: string
        owner:
          description: User who is assigned to handle this claim.
          maxLength: 50
          minLength: 0
          type: string
        claimStatus:
          description: "Status of the claim.(Open, Closed, Pending Review, Waiting\
            \ for Manager, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        claimType:
          description: "Type of user-definable claim such as New Card, Stay, etc."
          maxLength: 20
          minLength: 0
          type: string
        origin:
          description: "Origin of the membership claim. User definable values like\
            \ Email, Fax, Phone Call, etc."
          maxLength: 20
          minLength: 0
          type: string
        callerInformation:
          description: More information related to call that help to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        replyBy:
          description: "The date, if any, by which a response to the caller was promised."
          format: date
          type: string
        comments:
          description: Additional comments or steps taken to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        approvalStatus:
          $ref: '#/components/schemas/claimApprovalStatusType'
        recordType:
          $ref: '#/components/schemas/claimRecordType'
        profileId:
          $ref: '#/components/schemas/profileId'
        membership:
          $ref: '#/components/schemas/claimMembershipType'
        reservation:
          $ref: '#/components/schemas/claimReservationInfoType'
        claimPoints:
          $ref: '#/components/schemas/claimAdjustmentPointsType'
        activityLog:
          description: Summary of claim activity log information.
          items:
            $ref: '#/components/schemas/claimActivityLogType'
          maxItems: 4000
          type: array
        submitter:
          description: User who entered this claim.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    claimSourceType:
      description: Source of the membership claim.
      enum:
      - Ocis
      - Opms
      - Web
      type: string
    claimApprovalStatusType:
      description: Claim approve or reject status.
      enum:
      - Approved
      - Rejected
      - Pending
      type: string
    claimRecordType:
      description: Record Type associated with a claim.
      enum:
      - Stay
      - Other
      - LimitedAdjustment
      type: string
    claimMembershipType:
      description: Summary of claim activity log information.
      properties:
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: number
        membershipType:
          description: Membership Type code.
          maxLength: 20
          minLength: 0
          type: string
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
      type: object
    claimReservationInfoType:
      description: Summary of claim activity log information.
      properties:
        hotelId:
          description: Property where the stay associated with this claim.
          maxLength: 20
          minLength: 0
          type: string
        confirmationNo:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        arrival:
          description: Arrival date for the stay associated with this claim.
          format: date
          type: string
        departure:
          description: Departure date for the stay associated with this claim.
          format: date
          type: string
      type: object
    claimAdjustmentPointsType:
      description: Summary of membership claim award points and tier points.
      properties:
        adjustmentCode:
          description: "The selected adjustment code's Award, Stay, Nights, and Revenue\
            \ thresholds will display."
          maxLength: 20
          minLength: 0
          type: string
        totalBasePointsLimits:
          description: Total base points limits for adjustment.
          type: string
        baseStayLimits:
          description: Base stay limits for adjustment.
          type: string
        baseNightsLimits:
          description: Base nights limits for adjustment.
          type: string
        baseRevenueLimits:
          description: Base revenue limits for adjustment.
          type: string
        awardBasePoints:
          description: Base award points for adjustment.
          type: integer
        awardBonusPoints:
          description: Bonus award points for adjustment.
          type: integer
        awardMiscPoints:
          description: Miscellaneous award points for adjustment.
          type: integer
        awardTotalPoints:
          description: Total award points for adjustment.
          type: integer
        tierBaseStayPoints:
          description: Tier base stay points for adjustment.
          type: integer
        tierBonusStayPoints:
          description: Tier bonus stay points for adjustment.
          type: integer
        tierTotalStayPoints:
          description: Tier total stay points for adjustment.
          type: integer
        tierBaseNightsPoints:
          description: Tier base nights points for adjustment.
          type: integer
        tierBonusNightsPoints:
          description: Tier bonus nights points for adjustment.
          type: integer
        tierTotalNightsPoints:
          description: Tier total nights points for adjustment.
          type: integer
        tierBaseRevenuePoints:
          description: Tier Base revenue points for adjustment.
          type: integer
        tierBonusRevenuePoints:
          description: Tier Bonus revenue points for adjustment.
          type: integer
        tierTotalRevenuePoints:
          description: Tier Total tier revenue points for adjustment.
          type: integer
      type: object
    claimActivityLogListType:
      description: Summary of claim activity log information.
      items:
        $ref: '#/components/schemas/claimActivityLogType'
      maxItems: 4000
      type: array
    claimActivityLogType:
      description: Summary of claim activity log information.
      properties:
        sequence:
          description: Sequence number for claim activity.
          type: integer
        type:
          description: "Claim activity type such as Reply, Call Property for Verification,\
            \ Caller Called Back, and Remarks."
          maxLength: 20
          minLength: 0
          type: string
        comments:
          description: Name of the application user who created the activity record.
          maxLength: 2000
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    membershipPointsToCalculate:
      description: Request to run membership points calculation job.
      properties:
        membershipPointsCalculation:
          $ref: '#/components/schemas/membershipPointsCalculationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipPointsCalculationType:
      description: Details needed for calculating membership points.
      properties:
        processType:
          $ref: '#/components/schemas/membershipPointsCalculationProcessType'
        membershipType:
          description: Membership type for which point calculation process is to be
            run.
          maxLength: 20
          minLength: 0
          type: string
        awardCode:
          description: Award Code to be used to generate awards for the membership
            type. Available for Automatic Generation of Awards (Issue Awards) only.
          maxLength: 40
          minLength: 0
          type: string
        calculateUntilDate:
          description: The last date for which calculate or expire points. Available
            for Calculate Points and Expire Award Points only.
          format: date
          type: string
      type: object
    membershipPointsCalculationProcessType:
      description: "Issuing awards for guests belonging to a membership type, with\
        \ a specific award code that is of Other type."
      enum:
      - CalculatePoints
      - ExpirePoints
      - IssueAwards
      type: string
    membershipTierProjections:
      description: Response object for fetching Membership Tier Process Text.
      properties:
        membershipTierProjection:
          $ref: '#/components/schemas/membershipTierProjectionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTierProjectionType:
      description: Membership Upgrade/Downgrade Projection.
      properties:
        upgrade:
          description: Upgrade information which includes member's next tier level
            requirements for next upgrade.
          maxLength: 32000
          minLength: 0
          type: string
        downgrade:
          description: Information regarding member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    calculatedPoints:
      description: Response object for fetching membership transaction points information.
      properties:
        calculatedPoint:
          $ref: '#/components/schemas/calculatedPointsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    calculatedPointsType:
      description: Summary of Points Accrued for current transaction.
      properties:
        calculatedPoint:
          description: Details of Points Accrued for the current points transaction.
          items:
            $ref: '#/components/schemas/calculatedPointType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    calculatedPointType:
      description: Information related to a Calculated Points.
      properties:
        rule:
          description: Indicates rule description for membership rule.
          type: string
        type:
          $ref: '#/components/schemas/rulePointsTypeType'
        points:
          description: Indicates the total award/tier points generated.
          type: number
        costPerNight:
          $ref: '#/components/schemas/currencyAmountType'
        ruleCode:
          description: Indicates rule code for membership rule.
          maxLength: 20
          minLength: 0
          type: string
        billingGroup:
          description: Indicates the billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    rulePointsTypeType:
      description: Possible membership points types.
      enum:
      - Base
      - Bonus
      type: string
    pointsRejectionReasons:
      description: Response object for fetching member transactions points rejection
        reasons information.
      properties:
        pointsRejectionReason:
          $ref: '#/components/schemas/pointsRejectionReasonsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    pointsRejectionReasonsType:
      description: Summary of reason points were not awarded for a given points transaction.
      properties:
        pointsRejectionReason:
          description: Details on rule and reason the points were not awarded for
            a given point transaction.
          items:
            $ref: '#/components/schemas/pointsRejectionReasonType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    pointsRejectionReasonType:
      description: Information related to a Points Rejection Reason summary.
      properties:
        rule:
          description: Indicates rule description for membership rule.
          type: string
        code:
          description: Indicates rule code for membership rule.
          maxLength: 20
          minLength: 0
          type: string
        rejectionReason:
          description: Indicates the reason the points were not awarded (e.g. Membership
            level requirements not met).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    rates:
      description: Response object for fetching Membership Transaction Rates information.
      properties:
        rate:
          $ref: '#/components/schemas/membershipTransactionRatesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionRatesType:
      description: Summary of rate details of current transaction associated with
        the stay.
      properties:
        rate:
          description: Details of rate for the current points transaction.
          items:
            $ref: '#/components/schemas/membershipTransactionRateType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    membershipTransactionRateType:
      description: Information related to a membership transaction rate.
      properties:
        fromDate:
          description: Indicates start date of the reservation.
          format: date
          type: string
        toDate:
          description: Indicates end date of the reservation.
          format: date
          type: string
        rateCode:
          description: Indicates the Rate code used in the reservation.
          maxLength: 20
          minLength: 0
          type: string
        pMSRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        centralRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        currency:
          description: Indicates the Property currency code.
          type: string
        marketCode:
          description: Indicates the Market code linked to rate code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    revenues:
      description: Response object for fetching Membership Transaction Revenue.
      properties:
        revenue:
          $ref: '#/components/schemas/membershipTransactionRevenuesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionRevenuesType:
      description: Summary of stay details for current transaction.
      properties:
        revenue:
          description: Details on stay details for current point transaction.
          items:
            $ref: '#/components/schemas/membershipTransactionRevenueType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    membershipTransactionRevenueType:
      description: Information related to a membership transactions Revenue.
      properties:
        date:
          description: Indicates the Date when the revenue was recognized.
          format: date
          type: string
        revenueType:
          description: Indicates the Revenue type associated to Revenue.
          type: string
        pMSRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        centralRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        qualified:
          description: Indicates if the stay is qualified for points calculation.
          type: boolean
      type: object
    membershipTransaction:
      description: Response object for fetching a membership transaction.
      properties:
        membershipTransactionDetails:
          $ref: '#/components/schemas/membershipTransactionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionType:
      description: Detailed transaction information related to a membership.
      properties:
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        membershipTransactionDetails:
          $ref: '#/components/schemas/membershipTransactionDetailsType'
      type: object
    membershipDetailsType:
      description: "Details of membership transactions summary such as the membership\
        \ details, transactions summary, points summary, etc."
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          description: The profile name associated with this membership.
          maxLength: 128
          minLength: 0
          type: string
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        joinedDate:
          description: Date when the member enrolled for the membership.
          format: date
          type: string
        cardExpirationDate:
          description: Membership card expiration date.
          format: date
          type: string
      type: object
    membershipTransactionDetailsType:
      description: Detailed information related to a membership transaction.
      properties:
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        hotelId:
          description: Property from which the membership stay information was received.
          maxLength: 20
          minLength: 0
          type: string
        transactionType:
          description: The type of membership points transaction.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: The date when the points were calculated.
          format: date
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        currency:
          description: The property currency at the originating PMS.
          maxLength: 20
          minLength: 0
          type: string
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        ratePromotion:
          description: Promotion code assigned on reservation.
          maxLength: 20
          minLength: 0
          type: string
        profilePromotions:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        pointsCreditDate:
          description: "For adjustments, the date when the points are to be credited."
          format: date
          type: string
        averageRateAmount:
          description: The average cost of the room per night.
          type: number
        adjustment:
          description: Indicates if the transaction was created as an adjustment.
          type: boolean
        pointsCalculated:
          description: Indicates if the points have been calculated on this transaction.
          type: boolean
        exceptionRejected:
          description: Indicates if the exception points were rejected.
          type: boolean
        exception:
          description: Indicates if the transaction was flagged as an exception.
          type: boolean
        roomLabel:
          description: The room type for this transaction.
          maxLength: 50
          minLength: 0
          type: string
        bookedRoomLabel:
          description: The booked room type for this transaction.
          maxLength: 50
          minLength: 0
          type: string
        notes:
          description: Notes associated with this transaction.
          maxLength: 4000
          minLength: 0
          type: string
        statementId:
          $ref: '#/components/schemas/uniqueID_Type'
        memberStatementId:
          $ref: '#/components/schemas/uniqueID_Type'
        billingGroup:
          description: Billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        baseBillingGroup:
          description: Base billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        bonusBillingGroup:
          description: Bonus billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        pointsCost:
          description: The total cost associated with points earned by this transaction.
          type: integer
        processingMessages:
          description: Messages generated by the system during points calculation.
          maxLength: 2000
          minLength: 0
          type: string
        awardPoints:
          $ref: '#/components/schemas/membershipAwardPointsType'
        tierPoints:
          $ref: '#/components/schemas/membershipTransactionTierPointsType'
      type: object
    membershipAwardPointsType:
      description: Details associated with award points.
      properties:
        basePoints:
          description: Total number of base award points for a membership points transaction.
          type: integer
        bonusPoints:
          description: "If a membership points transaction involves bonus points,\
            \ the total number of bonus points."
          type: integer
        miscPoints:
          description: "If a membership points transaction involves points imported\
            \ into ORS from a third-party system, the total number of points."
          type: integer
        totalPoints:
          description: The total number of award points.
          type: integer
        pointsExpiryDate:
          description: The date until points are eligible for redemption based on
            membership type configuration.
          format: date
          type: string
        ruleCode:
          description: Rule Code for award points.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTransactionTierPointsType:
      description: Details associated with tier points.
      properties:
        baseStay:
          description: Total number of base stay tier points for a membership points
            transaction.
          type: integer
        baseNights:
          description: Total number of base nights tier points for a membership points
            transaction.
          type: integer
        baseRevenue:
          description: Total number of base revenue tier points for a membership points
            transaction.
          type: integer
        bonusStay:
          description: The total number of bonus stay tier points.
          type: integer
        bonusNights:
          description: The total number of bonus nights tier points.
          type: integer
        bonusRevenue:
          description: The total number of bonus revenue tier points.
          type: integer
      type: object
    membershipAwardExportInfo:
      description: Response object to fetch members information for Fulfillment house
        processing.
      properties:
        exportInfo:
          description: List of member's information.
          items:
            $ref: '#/components/schemas/membershipAwardExportType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardsExportType:
      description: List of member's information.
      items:
        $ref: '#/components/schemas/membershipAwardExportType'
      maxItems: 4000
      type: array
    membershipAwardExportType:
      description: Types holds the details of Member.
      properties:
        awardNumber:
          description: Award Number to identify member's information.
          type: number
        recipientInfo:
          $ref: '#/components/schemas/membershipAwardRecipientInfoType'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
      type: object
    membershipAwardRecipientInfoType:
      description: Type holds details of member.
      properties:
        memberInfo:
          $ref: '#/components/schemas/profileNameType'
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: "It returns a Company Name,If the member is associated with\
            \ a company."
          maxLength: 40
          minLength: 0
          type: string
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
      type: object
    membershipIssueAwards:
      description: Response object for fetching member issued award list.
      properties:
        membershipAwardsList:
          description: List of Member Awards information.
          items:
            $ref: '#/components/schemas/membershipAwardListType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardsListType:
      description: List of Member Awards information.
      items:
        $ref: '#/components/schemas/membershipAwardListType'
      maxItems: 4000
      type: array
    membershipAwardListType:
      description: Information related to Member Award Issue List.
      properties:
        membershipId:
          description: Card number of the membership.
          type: number
        membershipType:
          description: Membership type for which awards are defined.
          maxLength: 20
          minLength: 0
          type: string
        membershipLevel:
          description: Level of this Membership Type.
          maxLength: 20
          minLength: 0
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        joinDate:
          description: Joined date on the Card.
          format: date
          type: string
        expireDate:
          description: Expiry date on the Card.
          format: date
          type: string
        membershipCardNo:
          description: Indicates Membership Card Number.
          maxLength: 50
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
        hotelId:
          description: Property at which the award was issued.
          maxLength: 20
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardPoints:
          description: Number of points required by the award.
          type: number
        thresholdPoints:
          description: Indicates member is below the threshold limit or not to request
            award.
          type: number
        awardCode:
          description: Code assigned to this membership award.
          maxLength: 40
          minLength: 0
          type: string
        cancelDays:
          description: "The cancel days, set up in awards configuration that establishes\
            \ the number of days before arrival when a reservation may be cancelled\
            \ without an award points penalty."
          type: integer
        dateAwarded:
          description: Date when the award was issued
          format: date
          type: string
        bookingNumber:
          description: Reservation confirmation number.
          maxLength: 50
          minLength: 0
          type: string
        hotelBookingNumber:
          description: Property Reservation number.
          maxLength: 30
          minLength: 0
          type: string
        arrivalDate:
          description: The arrival date of the stay for when the award is associated.
          format: date
          type: string
        cancelPenaltyPoints:
          description: "The award points that will be deducted (based on a cancel\
            \ days restriction) if the award is cancelled. (Cancel days, set up in\
            \ awards configuration, and establish the number of days before arrival\
            \ when a reservation may be cancelled without an award points penalty.)"
          type: integer
        awardCancellationNumber:
          description: "If the award was cancelled, the system-generated award cancellation\
            \ number appears here."
          type: integer
        awardCancelDate:
          description: "If the reservation associated with the award was cancelled,\
            \ the reservation cancellation date appears here."
          format: date
          type: string
        actualCancelPoints:
          description: The number of points actually deducted from the member's total
            award points if there is a penalty points restriction associated with
            the award cancellation.
          type: number
        reservationCancellationNumber:
          description: "If the reservation associated with the award was cancelled,\
            \ the reservation cancellation number appears here."
          maxLength: 30
          minLength: 0
          type: string
        statementId:
          description: "If this award was included on a statement, the statement ID\
            \ appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        cancelStatementID:
          description: "If this award was included on a statement, the cancel statement\
            \ ID appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        memberStatementId:
          description: "If this award was included on a statement, the member statement\
            \ ID appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        cancelMemberStatementID:
          description: "If this award was included on a statement, the cancel member\
            \ statement ID appears here. The field is blank if the award has not yet\
            \ been reported on a statement"
          type: integer
        numberOfNights:
          description: Number of nights cancel policy is applicable.
          type: integer
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award
          format: date
          type: string
        departureDate:
          description: The date of the departure of the reservation associated with
            the award. There may be more than one date (multiple nights) associated
            with award
          format: date
          type: string
        cancelPolicyType:
          description: Type of cancel policy.
          maxLength: 20
          minLength: 0
          type: string
        awardSource:
          description: The source for the reservation associated with the award.
          maxLength: 40
          minLength: 0
          type: string
        calculatedCancelPoints:
          description: Total calculated points to cancel an issued award.
          type: number
        awardBasedOn:
          $ref: '#/components/schemas/membershipAwardBasedOnType'
        pmsResvNo:
          description: Indicates PMS Reservation Number.
          maxLength: 50
          minLength: 0
          type: string
        crsBookNo:
          description: Indicates CRS Booking Number.
          maxLength: 50
          minLength: 0
          type: string
        product:
          description: Indicates the Product associated with the award.
          maxLength: 50
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code associated with the award.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipAwardBasedOnType:
      description: This award allows a guest to apply available membership points
        towards the balance of his or her bill.
      enum:
      - Rate
      - Product
      - Upgrade
      - Other
      - Ft
      type: string
    membershipClaims:
      description: Response object for fetching membership claims.
      properties:
        membershipClaimsDetail:
          description: Contains summary information of the claim.
          items:
            $ref: '#/components/schemas/membershipClaimSummaryType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipClaimSummaryListType:
      description: Contains summary information of the claim.
      items:
        $ref: '#/components/schemas/membershipClaimSummaryType'
      maxItems: 4000
      type: array
    membershipClaimSummaryType:
      description: Summary information of a claim.
      properties:
        claimNo:
          $ref: '#/components/schemas/uniqueID_Type'
        claimDate:
          description: Date the claim was made.
          format: date
          type: string
        callerName:
          description: Name of the person placing the claim. This name may be different
            from the name on the membership card.
          maxLength: 100
          minLength: 0
          type: string
        replyBy:
          description: "The date, if any, by which a response to the caller was promised."
          format: date
          type: string
        membershipType:
          description: Membership Type code.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Indicates membership card number of the guest.
          maxLength: 50
          minLength: 0
          type: string
        claimStatus:
          description: "Status of the claim.(Open, Closed, Pending Review, Waiting\
            \ for Manager, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        claimType:
          description: "Type of user-definable claim such as New Card, Stay, etc."
          maxLength: 40
          minLength: 0
          type: string
        closeDate:
          description: "If the status is closed, the date the claim was closed."
          format: date
          type: string
        recordType:
          $ref: '#/components/schemas/claimRecordType'
        hotelId:
          description: Property where the stay took place.
          maxLength: 20
          minLength: 0
          type: string
        confirmationNo:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        arrival:
          description: Arrival date for the stay associated with this claim.
          format: date
          type: string
        departure:
          description: Departure date for the stay associated with this claim.
          format: date
          type: string
        owner:
          description: User who is assigned to handle this claim.
          maxLength: 50
          minLength: 0
          type: string
        submitter:
          description: User who entered this claim.
          maxLength: 50
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/claimSourceType'
        origin:
          description: "Origin of the membership claim. User definable values like\
            \ Email, Fax, Phone Call, etc."
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          $ref: '#/components/schemas/claimApprovalStatusType'
        callerInformation:
          description: More information related to call that help to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        membershipIdNo:
          description: Membership ID Number.
          type: number
        activityLog:
          description: Summary of claim activity log information.
          items:
            $ref: '#/components/schemas/claimActivityLogType'
          maxItems: 4000
          type: array
      type: object
    fulfillmentExportedLogs:
      description: Optional elements whether to update exclude extract or delivery
        status in membership fulfillment
      properties:
        fulfillmentExportLogs:
          description: This type holds the export log information for the membership
            fulfillment record.
          items:
            $ref: '#/components/schemas/fulfillmentExportInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fulfillmentExportLogsType:
      description: This type holds the export log information for the membership fulfillment
        record.
      items:
        $ref: '#/components/schemas/fulfillmentExportInfoType'
      maxItems: 4000
      type: array
    fulfillmentExportInfoType:
      description: This type holds the export log information for the membership fulfillment
        record.
      properties:
        extractLogId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipCard:
          description: The card number for the guest membership.
          maxLength: 50
          minLength: 0
          type: string
        extractCode:
          description: ExtractCode of the membership fulfillment export logs.
          maxLength: 20
          minLength: 0
          type: string
        extractDate:
          description: ExtractDate of the membership fulfillment export logs.
          format: date
          type: string
        deliveryStatus:
          $ref: '#/components/schemas/exportLogsDeliveryStatusType'
        extractId:
          $ref: '#/components/schemas/uniqueID_Type'
        extractBatchId:
          $ref: '#/components/schemas/uniqueID_Type'
        excludeExtract:
          description: "To exclude the extract record from membership exports. Once\
            \ the membership export has run, this check box will be grayed out and\
            \ the extract batch Id will be populated in the Extract Batch Id read-only\
            \ field."
          type: boolean
      type: object
    exportLogsDeliveryStatusType:
      description: Delivery Status for export logs - Not Delivered.
      enum:
      - Unknown
      - Delivered
      - Notdelivered
      type: string
    memberPointsToExpire:
      description: Response object for fetching member points to expire information.
      properties:
        memberPointsToExpireList:
          description: List of of member points to expire.
          items:
            $ref: '#/components/schemas/memberPointToExpireType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberPointsToExpireListType:
      description: List of of member points to expire.
      items:
        $ref: '#/components/schemas/memberPointToExpireType'
      maxItems: 4000
      type: array
    memberPointToExpireType:
      description: Information related to a member point to expire.
      properties:
        pointsExpiryDate:
          description: The date when the member future award points will expire.
          format: date
          type: string
        pointsToExpire:
          description: Displays the total number of points that will expire on the
            expiration date.
          type: integer
        previousPointsToExpire:
          description: Displays the number of points that are relevant for extension.
            Points that were already extended from the previous year are not considered
            for extension.
          type: integer
        extend:
          description: Indicates if the points is extendable.
          type: boolean
        awardGenerationMethod:
          description: The method of award generation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    extendMemberPointsToExpire:
      description: Request object to extend a member points to expire.
      properties:
        membershipId:
          description: Unique Membership ID.
          type: number
        expirationDate:
          description: Expiration date to be extended.
          format: date
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionsSummary:
      description: Response object for fetching member point totals information.
      properties:
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        transactionsSummary:
          $ref: '#/components/schemas/memberTransactionSummaryType'
        recentTransactionsSummary:
          $ref: '#/components/schemas/memberTransactionRecentSummaryType'
        pointsSummary:
          $ref: '#/components/schemas/memberPointsSummaryType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberTransactionSummaryType:
      description: Itemized information related to a membership transactions summary.
      properties:
        awardPoints:
          $ref: '#/components/schemas/memberTransactionSummaryAwardPointsType'
        tierPoints:
          $ref: '#/components/schemas/memberTransactionSummaryTierPointsType'
        guestStays:
          $ref: '#/components/schemas/memberTransactionSummaryGuestStaysType'
      type: object
    memberTransactionSummaryAwardPointsType:
      description: Items summary associated with award points.
      properties:
        basePoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        miscPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    transactionSummaryAttributeType:
      description: Attributes of Summary transactions.
      properties:
        customLabel:
          description: Attribute Label
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Attribute Value
          maxLength: 80
          minLength: 0
          type: string
      type: object
    memberTransactionSummaryTierPointsType:
      description: Items summary associated with Tier points.
      properties:
        bonusRevenue:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusStay:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        baseRevenue:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        baseStay:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        baseNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalStays:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberTransactionSummaryGuestStaysType:
      description: Items summary associated with guest stays.
      properties:
        stays:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        nights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberTransactionRecentSummaryType:
      description: Itemized information related to a membership transactions summary.
      properties:
        awardPoints:
          $ref: '#/components/schemas/memberTransactionSummaryAwardPointsType'
        tierPoints:
          $ref: '#/components/schemas/memberTransactionSummaryTierPointsType'
        guestStays:
          $ref: '#/components/schemas/memberTransactionSummaryGuestStaysType'
        years:
          description: Range in Years.
          type: integer
      type: object
    memberPointsSummaryType:
      description: Member Points Summary.
      properties:
        nextTierPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        availablePoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    membershipNumber:
      description: Request object for generating membership number.
      properties:
        generateMembershipNumberCriteria:
          $ref: '#/components/schemas/generateMembershipNumberCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    generateMembershipNumberCriteriaType:
      description: Auto generate membership number criteria.
      properties:
        membershipType:
          description: Indicates the Membership Type where membership number to be
            generated will be based on.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    enrollmentMatchProfiles:
      description: Response object to fetch match profiles for enrollment.
      properties:
        enrollmentMatchProfilesDetail:
          description: Provide match profile details for enrollment.
          items:
            $ref: '#/components/schemas/profileEnrollmentType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    enrollmentMatchProfilesType:
      description: Provide match profile details for enrollment.
      items:
        $ref: '#/components/schemas/profileEnrollmentType'
      maxItems: 4000
      type: array
    availableARAddresses:
      description: Response to the request to fetch the available Accounts Receivables(AR)
        Addresses for a Profile.
      properties:
        addresses:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    availablePreferences:
      properties:
        preferenceCollection:
          description: A collection of preferences
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileMembershipStatistics:
      description: Response of the WS operation FetchProfileMembershipPoints. It contains
        the summary statistics and/or the details of each of the membership transactions
        and its points.
      properties:
        membershipStatistics:
          $ref: '#/components/schemas/membershipStatisticsType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipStatisticsType:
      description: List of membership transactions and the summary of the different
        total points statistics.
      properties:
        statisticsSummary:
          $ref: '#/components/schemas/membershipStatisticsSummaryType'
        transactions:
          description: Activity or a transaction related to the Membership.
          items:
            $ref: '#/components/schemas/membershipTransactionSummaryType'
          maxItems: 4000
          type: array
        type:
          description: The type of membership.
          maxLength: 20
          minLength: 0
          type: string
        cardNumber:
          description: The membership card number.
          maxLength: 50
          minLength: 0
          type: string
        level:
          description: The level of the membership.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipStatisticsSummaryType:
      description: Totals of the each of the points.
      properties:
        awardPoints:
          description: Total of the award points from all the transactions.
          type: integer
        tierRevenuePoints:
          description: Total of the Tier Revenue points from all the transactions.
          type: integer
        tierNightPoints:
          description: Total of the Tier Night points from all the transactions.
          type: integer
        tierStayPoints:
          description: Total of the Tier Stay points from all the transactions.
          type: integer
        pointsCost:
          description: Total of the Points Cost from all the transactions.
          type: integer
      type: object
    membershipTransactionSummaryType:
      description: Details regarding a transaction of a profile membership.
      properties:
        transactionInfo:
          $ref: '#/components/schemas/membershipTransactionInfoType'
        pointsCalculated:
          description: Flag to indicate if points are calculated.
          type: boolean
        awardPoints:
          description: Award Points.
          type: integer
        tierPoints:
          $ref: '#/components/schemas/membershipTierPointsType'
        userName:
          description: User who inserted or updated the record.
          maxLength: 200
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    membershipTransactionInfoType:
      description: Specific details regarding the transaction.
      properties:
        transactionDate:
          description: Membership Transaction Date.
          format: date
          type: string
        transactionType:
          description: Membership Transaction Type.
          maxLength: 20
          minLength: 0
          type: string
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        stay:
          description: Total stay.
          type: integer
        nights:
          description: Total nights.
          type: integer
        hotelId:
          description: Resort of the transaction.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Code type of the type of currency.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTierPointsType:
      description: Collection of the tier points.
      properties:
        revenuePoints:
          description: Sum of the base revenue and bonus revenue points.
          type: integer
        nightPoints:
          description: Sum of the base night and bonus night points.
          type: integer
        stayPoints:
          description: Sum of the base stay and bonus stay points.
          type: integer
        pointsCost:
          description: Points Cost.
          type: integer
        pointsCreditDate:
          description: Date when points were created.
          format: date
          type: string
      type: object
    profileStatistics:
      description: "Response object for fetching profile stay/reservation/revenue\
        \ statistics. This object contains collection of summary or detail,Success,Warnings\
        \ and Errors related to this operation."
      properties:
        profileStatistic:
          $ref: '#/components/schemas/profileStatisticsType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileStatisticsType:
      description: Contains summary/detail/Revenue statistics information for Profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        stayStatisticsSummaryList:
          $ref: '#/components/schemas/statisticsSummaryListType'
        stayStatisticsDetailList:
          description: Collection of stay statistics detail information
          items:
            $ref: '#/components/schemas/stayStatisticsDetailType'
          maxItems: 4000
          type: array
        revenueStatisticsSummaryList:
          description: List of the detailed and yearly summarized information about
            the profile revenue.
          items:
            $ref: '#/components/schemas/revenueStatisticsSummaryType'
          maxItems: 4000
          type: array
        reportType:
          $ref: '#/components/schemas/statisticsReportType'
      type: object
    statisticsSummaryListType:
      description: Collection of Profile statistics summary information
      properties:
        profileHotelStatisticsbyYearSummary:
          items:
            $ref: '#/components/schemas/profileHotelStatisticsbyYearSummaryType'
          maxItems: 4000
          type: array
        profileStatisticsbyYearSummary:
          items:
            $ref: '#/components/schemas/profileStatisticsbyYearSummaryType'
          maxItems: 4000
          type: array
      type: object
    profileHotelStatisticsbyYearSummaryType:
      description: Contains stay statistics summary information by year
      properties:
        stayDetail:
          items:
            $ref: '#/components/schemas/stayDetailSummaryType'
          maxItems: 2
          type: array
        netRevenue:
          items:
            $ref: '#/components/schemas/stayStatisticsRevenueType'
          maxItems: 2
          type: array
        year:
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stayDetailSummaryType:
      description: "Contains stay related information such as reservation nights,room\
        \ nights,arrival rooms,cancel rooms,etc."
      properties:
        roomNights:
          type: integer
        arrivalRooms:
          type: integer
        cancelRooms:
          type: integer
        noShowRooms:
          type: integer
        dayUseRooms:
          type: integer
        totalBooked:
          description: Total Booked Stays/Reservations for Profile
          type: integer
        totalStays:
          description: Total Stayed Reservations for Profile
          type: integer
        stayReservation:
          $ref: '#/components/schemas/stayReservationType'
      type: object
    stayReservationType:
      description: Enumeration for stay types.
      enum:
      - Transient
      - Block
      type: string
    stayStatisticsRevenueType:
      description: Contains different list of stay statistics revenue information
      properties:
        averageDailyRate:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        totalRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        roomRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        fBRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        extraRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        nonRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        currency:
          type: string
        stayReservation:
          $ref: '#/components/schemas/stayReservationType'
      type: object
    statisticsRevenueTypeType:
      description: Contains Revenue information
      properties:
        revenueAmount:
          type: number
        revenueLabel:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileStatisticsbyYearSummaryType:
      description: Contains stay statistics summary information by year
      properties:
        stayDetail:
          items:
            $ref: '#/components/schemas/stayDetailSummaryType'
          maxItems: 2
          type: array
        netRevenue:
          items:
            $ref: '#/components/schemas/stayStatisticsRevenueType'
          maxItems: 2
          type: array
        year:
          type: string
      type: object
    stayStatisticsDetailListType:
      description: Collection of stay statistics detail information
      items:
        $ref: '#/components/schemas/stayStatisticsDetailType'
      maxItems: 4000
      type: array
    stayStatisticsDetailType:
      description: Contains stay statistics detail information
      properties:
        stayDetail:
          $ref: '#/components/schemas/stayDetailType'
        revenue:
          $ref: '#/components/schemas/stayStatisticsRevenueType'
        year:
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stayDetailType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        complimentaray:
          description: Indicates the profile stay record is complimentaray.
          type: boolean
        reservationSourceCode:
          description: Indicates the profile stay record reservation source code.
          maxLength: 20
          minLength: 0
          type: string
        reservationSourceType:
          description: Indicates the profile stay record reservation source Type.
          maxLength: 50
          minLength: 0
          type: string
        shareNumber:
          description: Indicates the share Number for Stay if reservation was a share.
          maxLength: 20
          minLength: 0
          type: string
        bookingDate:
          description: Booking date of the stay record.
          format: date
          type: string
        bookedArrivalDate:
          description: Booked arrival date of the stay record.
          format: date
          type: string
        bookedDepartureDate:
          description: Booked departure date of the stay record.
          format: date
          type: string
        cancellationDate:
          description: Cancellation date of the stay record.
          format: date
          type: string
        cancelledRoomNights:
          description: Number of cancelled room nights.
          type: integer
        noShowRoomNights:
          description: Number of no show room nights.
          type: integer
        travelAgentReferenceId:
          description: Travel Agent reference number for stay record.
          maxLength: 60
          minLength: 0
          type: string
        allotmentCode:
          description: Allotment Code for stay record.
          maxLength: 20
          minLength: 0
          type: string
        primarySharer:
          description: Indicates whether the guest was the primary sharer or not.
          type: boolean
        exchangeRate:
          description: Exchange Rate.
          type: number
        promotionCode:
          description: Promotion code associated with the stay.
          maxLength: 20
          minLength: 0
          type: string
        bookedRoomType:
          description: Indicate the category of room originally booked.
          maxLength: 20
          minLength: 0
          type: string
        channelCode:
          description: Indicate channel for stay.
          maxLength: 20
          minLength: 0
          type: string
        stayRecordId:
          $ref: '#/components/schemas/uniqueID_Type'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
      type: object
    revenueStatisticsSummaryListType:
      description: List of the detailed and yearly summarized information about the
        profile revenue.
      items:
        $ref: '#/components/schemas/revenueStatisticsSummaryType'
      maxItems: 4000
      type: array
    revenueStatisticsSummaryType:
      description: Summary of the revenue for a year
      properties:
        revenueDetails:
          description: The collection of profile revenue statistics.
          items:
            $ref: '#/components/schemas/revenueStatisticsDetailType'
          maxItems: 4000
          type: array
        revenueBucketsSummary:
          $ref: '#/components/schemas/revenueBucketListType'
        year:
          description: Year of the revenue.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    revenueStatisticsDetailListType:
      description: The collection of profile revenue statistics.
      items:
        $ref: '#/components/schemas/revenueStatisticsDetailType'
      maxItems: 4000
      type: array
    revenueStatisticsDetailType:
      description: The different statistics from the revenue of a profile.
      properties:
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        guestName:
          description: Name Of The Guest.
          maxLength: 200
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        revenueType:
          description: Revenue Type for Stay.
          maxLength: 20
          minLength: 0
          type: string
        revenueBuckets:
          $ref: '#/components/schemas/revenueBucketListType'
        centralRevenue:
          description: Central Revenue Type for Stay.
          type: number
        localRevenue:
          description: Local Revenue Type for Stay.
          type: number
        hotelId:
          description: Hotel of the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    statisticsReportType:
      description: Indicate to get revenue of Stay Records.
      enum:
      - Reservation
      - Revenue
      - ProfileStayRecords
      - DetailStayRecordsRevenue
      - ProfileStayRecordUdfs
      type: string
    profileSummaries:
      description: "Response object for fetching profiles. This object contains profile\
        \ primary details,profile summary details,master info list containing code\
        \ and description used as lookup for description."
      properties:
        profileSummaries:
          $ref: '#/components/schemas/profileSummariesType'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSummariesType:
      description: A complex type containing the collection of Profile objects or
        Unique IDs of Profiles.
      properties:
        profileInfo:
          description: A collection of Profiles or Unique IDs of Profiles.
          items:
            $ref: '#/components/schemas/profileSummaryInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    checkedProfiles:
      description: "Response for checking allowed actions, existence of attached records,\
        \ or indicators of a profile."
      properties:
        checkProfilesDetail:
          description: "Collection of profiles and the status of its allowed actions,\
            \ attached records, and indicators."
          items:
            $ref: '#/components/schemas/checkProfileType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkProfilesType:
      description: "Collection of profiles and the status of its allowed actions,\
        \ attached records, and indicators."
      items:
        $ref: '#/components/schemas/checkProfileType'
      maxItems: 4000
      type: array
    checkProfileType:
      description: "Profile and the status of its allowed actions, attached records,\
        \ and indicators."
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        results:
          description: "Collection of status of allowed actions, attached records,\
            \ and indicators of the profile."
          items:
            $ref: '#/components/schemas/checkProfileResultType'
          maxItems: 4000
          type: array
      type: object
    checkProfileResultsType:
      description: "Collection of status of allowed actions, attached records, and\
        \ indicators of the profile."
      items:
        $ref: '#/components/schemas/checkProfileResultType'
      maxItems: 4000
      type: array
    checkProfileResultType:
      description: "Status of allowed actions, attached records, and indicators of\
        \ the profile."
      properties:
        checkProfileInstruction:
          $ref: '#/components/schemas/checkProfileInstructionType'
        exists:
          description: "Indicates status of allowed actions, total number of attached\
            \ records, or number of occurrences of indicator of a profile."
          type: boolean
      type: object
    checkProfileInstructionType:
      description: Simple type that corresponds to check profile instructions.
      enum:
      - HasWebAccounts
      type: string
    profileActivityLog:
      description: "Response object for fetching profile activity log. This object\
        \ contains collection of user activity log for the profile,Success,Warnings\
        \ and Errors related to this operation"
      properties:
        activityLog:
          $ref: '#/components/schemas/activityLogListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    activityLogType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        module:
          type: string
        logDate:
          format: date-time
          type: string
        refActionId:
          type: number
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        deviceCode:
          description: The selected device code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileAccounts:
      description: Response of profile accounts.
      properties:
        accounts:
          description: Information regarding the AR Account.
          items:
            $ref: '#/components/schemas/aRAccountType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountsType:
      description: Information regarding the AR Account.
      items:
        $ref: '#/components/schemas/aRAccountType'
      maxItems: 4000
      type: array
    aRAccountType:
      description: Accounts Receivabales Account details type.
      properties:
        hotelId:
          description: Property where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        contactName:
          description: The person to contact for this Account.
          maxLength: 200
          minLength: 0
          type: string
        paymentDueDays:
          description: Number of days on which person can make payment.
          maxLength: 20
          minLength: 0
          type: string
        monthEndCalcYN:
          description: Month End Calculation.
          type: boolean
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        telephones:
          description: The Telephone and Fax details attached to the Account.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        lastReminderInfo:
          $ref: '#/components/schemas/aRAccountType_lastReminderInfo'
        lastStatementInfo:
          $ref: '#/components/schemas/aRAccountType_lastStatementInfo'
        notes:
          description: The Note details attached to the Account.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        traces:
          description: The Trace details attached to the Account.
          items:
            $ref: '#/components/schemas/traceType'
          maxItems: 4000
          type: array
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        accountIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        agingInfo:
          $ref: '#/components/schemas/aRAgingInfoType'
        yearViewInfo:
          $ref: '#/components/schemas/aRYearViewInfoType'
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        summary:
          $ref: '#/components/schemas/aRBalanceType'
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
        batchStatement:
          description: Include In Batch Statement
          type: boolean
        printFoliosWithStatement:
          description: Indicates if associated folios should be printed by default
            with the statement.
          type: boolean
        emailStatementsReminders:
          description: Indicates if the Account has opted to send the statements and
            reminders to the Account email address by default.
          type: boolean
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this Account is the Primary Account for this Guest/Company.
          type: boolean
        type:
          description: The type of Account.
          maxLength: 20
          minLength: 0
          type: string
        accountTypeDescription:
          description: The description of the Account Type.
          maxLength: 2000
          minLength: 0
          type: string
        permanent:
          description: Indicates if this is a Permanent Account. Permanent Accounts
            cannot be deleted.
          type: boolean
      type: object
    traceType:
      properties:
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        traceText:
          description: The information this trace contains.
          type: string
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
        enteredBy:
          description: User that entered this trace.
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
      type: object
    traceResolveType:
      properties:
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
        resolvedBy:
          description: User that resolved the trace
          type: string
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          description: Quantity of the product.
          type: integer
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
      type: object
    aRAgingInfoType:
      description: Information regarding the aging balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        aging:
          description: The debit and credit balance per Aging bucket.
          items:
            $ref: '#/components/schemas/aRAgingType'
          maxItems: 4000
          type: array
      type: object
    aRBalanceType:
      description: Balance information for AR.
      properties:
        debit:
          $ref: '#/components/schemas/currencyAmountType'
        credit:
          $ref: '#/components/schemas/currencyAmountType'
        total:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRAgingType:
      description: Aging information for an Aging Bucket.
      properties:
        agingBucketRange:
          description: "The bucket description in terms of days. Example : 0-31 days"
          maxLength: 20
          minLength: 0
          type: string
        agingDate:
          $ref: '#/components/schemas/dateRangeType'
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        agingStartDay:
          description: "The start number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 31."
          type: integer
        agingEndDay:
          description: "The end number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 60."
          type: integer
        sequence:
          description: The sequence for display.
          type: integer
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    aRYearViewInfoType:
      description: Information regarding Year View balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        yearView:
          description: The debit and credit balance per account.
          items:
            $ref: '#/components/schemas/aRYearViewType'
          maxItems: 4000
          type: array
      type: object
    aRYearViewType:
      description: Year information for an Year View.
      properties:
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        runningTotal:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRInvoicesType:
      description: A collection of AR Invoices.
      items:
        $ref: '#/components/schemas/aRInvoiceType'
      maxItems: 4000
      type: array
    aRInvoiceType:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
      type: object
    marketCodeInfoType:
      properties:
        marketCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        marketGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    roomClassCodeInfoType:
      description: Code of the room class type.
      properties:
        roomClassCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceCodeInfoType:
      properties:
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    cashierInfoType:
      description: Cashier information. Contains Id and Name details of the cashier.
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        cashierName:
          description: Cashier Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    profileInfoType:
      description: Provides information about attached profiles to the block.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        name:
          description: Name for the profile attached to the block.
          maxLength: 200
          minLength: 0
          type: string
        city:
          description: City for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        phone:
          description: Phone for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: Defines the type of Linked profiles for a block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    aRInvoiceCategory:
      enum:
      - Normal
      - Credit
      - OldBalance
      - PasserBy
      type: string
    aRPaymentsType:
      description: A collection of AR Payments.
      items:
        $ref: '#/components/schemas/aRPaymentType'
      maxItems: 4000
      type: array
    aRPaymentType:
      description: Details of an AR Payment.
      properties:
        age:
          description: The Aging age of the payment.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountUsed:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique Transaction Identifier of the Payment.
          type: number
        transactionDate:
          description: Date of the Payment.
          format: date
          type: string
        transactionCode:
          description: Transaction code of the Payment.
          maxLength: 20
          minLength: 0
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer of the invoice.
          format: date
          type: string
        sequenceNo:
          description: "When this PostingType is used to return the postings generated\
            \ by a batch request, the sequence number is used to relate to the Request's\
            \ sequence number."
          type: integer
      type: object
    profileAttachments:
      description: Response object with the details of the attachments of a profile.
      properties:
        profileAttachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    attachmentType:
      description: Attached files.
      properties:
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    award:
      description: Request object to redeem award.
      properties:
        memberAward:
          $ref: '#/components/schemas/memberAwardType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberAwardType:
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        membershipType:
          description: The type of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: "To specify where the business came from e.g. radio, newspaper\
            \ ad, etc."
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        adults:
          description: Number of adults associated with the reservation.
          type: integer
        reservationTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        memberPointsBefore:
          description: Member points before award transaction.
          type: integer
        memberPointsAfter:
          description: Member points after award transaction.
          type: integer
        awardPoints:
          description: Points associated with the award.
          type: integer
        cancelPointsReturn:
          description: Number of cancel points returned.
          type: integer
        actualCancelPoints:
          description: Actual number of cancel points.
          type: integer
        expiryPoints:
          description: Points that will expire.
          type: integer
        awardProcessType:
          $ref: '#/components/schemas/memberAwardProcessType'
        memberAwardDetails:
          description: Details related to member award per stay date.
          items:
            $ref: '#/components/schemas/memberAwardDetailType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    memberAwardProcessType:
      description: "Processing type of the award like Actual , Projected or Inactive."
      enum:
      - Actual
      - Projected
      - Inactive
      type: string
    memberAwardDetailsType:
      description: Details related to member award per stay date.
      items:
        $ref: '#/components/schemas/memberAwardDetailType'
      maxItems: 4000
      type: array
    memberAwardDetailType:
      description: "Details related to member award like award type, stay date, rate\
        \ code, etc."
      properties:
        awardType:
          description: The award type or code.
          maxLength: 40
          minLength: 0
          type: string
        actionType:
          $ref: '#/components/schemas/memberAwardActionType'
        awardBasedOn:
          description: "Indicates if award is a Stay, Package Element or other."
          maxLength: 20
          minLength: 0
          type: string
        cancelPenaltyDays:
          description: Number days before arrival to apply penalty for cancellation.
          type: integer
        cancelPenaltyCharge:
          description: Number points deducted if award is cancelled.
          type: integer
        cancelPenaltyType:
          description: "Type of cancel penalty like Points, etc."
          maxLength: 20
          minLength: 0
          type: string
        cancelPenaltyPoints:
          description: Number of penalty points if cancelled.
          type: integer
        numberOfNights:
          description: Number of nights cancel policy is applicable.
          type: integer
        cancelPolicyType:
          description: Type of cancel policy.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: Date of stay.
          format: date
          type: string
        rateCode:
          description: Rate code associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type label associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
        product:
          description: "Product code for which the award was issued, in case of a\
            \ product award."
          maxLength: 80
          minLength: 0
          type: string
        fromRoomType:
          description: Room type label before the upgrade in case of an upgrade award.
          maxLength: 20
          minLength: 0
          type: string
        toRoomType:
          description: Room type label after the upgrade for an upgrade award.
          maxLength: 20
          minLength: 0
          type: string
        totalLocalAmount:
          description: Total Local Amount on bill in Hotel Currency.
          type: number
        redeemedLocalAmount:
          description: Redeemed Local Amount on bill in Hotel Currency.
          type: number
        totalCentralAmount:
          description: Total Central Amount on bill in External System Currency.
          type: number
        redeemedCentralAmount:
          description: Redeemed Central Amount on bill in External System Currency.
          type: number
        transactionCode:
          description: The Payment Transaction Code for which the Surcharge Applies.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        exchangeRateType:
          description: Exchange Rate Type for the Currency Exchange.
          maxLength: 20
          minLength: 0
          type: string
        awardVoucherNo:
          description: Award Voucher Number.
          maxLength: 40
          minLength: 0
          type: string
        awardProductId:
          $ref: '#/components/schemas/uniqueID_Type'
        awardCancellationNo:
          $ref: '#/components/schemas/uniqueID_Type'
        inactive:
          description: If the award detail is inactive.
          type: boolean
        pointsRequired:
          description: Points required for the stay date.
          type: integer
        actualCancelPoints:
          description: Actual number of cancel points.
          type: integer
      type: object
    memberAwardActionType:
      description: "Specify whether award is to issue, cancel or update."
      enum:
      - Issue
      - Cancel
      - InfoUpdate
      - CxlWithoutPenalty
      type: string
    awardDetails:
      description: Response of fetch awards request.
      properties:
        profileAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardsType:
      description: List of awards.
      items:
        $ref: '#/components/schemas/awardType'
      maxItems: 4000
      type: array
    awardType:
      description: Detailed information of the awards.
      properties:
        awardCode:
          description: Award category.
          maxLength: 20
          minLength: 0
          type: string
        awardType:
          $ref: '#/components/schemas/awardKindType'
        description:
          description: Description of the award/certificate.
          type: string
        certificateNo:
          description: Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        masterCertificiateNo:
          description: Master Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        membershipNo:
          description: Membership No.
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelCategory:
          description: Indicates the lowest hotel category for which the certificate
            is valid.
          maxLength: 20
          minLength: 0
          type: string
        externalHotelCode:
          description: Hotel Code of the CRS application that this certificate belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        externalConfirmationNo:
          description: Confirmation Number given by a CRS application for this reservation.
          maxLength: 20
          minLength: 0
          type: string
        categoryValid:
          description: Indicates whether the category of certificate is valid or not
            for this resort.
          type: boolean
        reservationCertificateType:
          $ref: '#/components/schemas/reservationCertificateType'
        rewardCertificateType:
          $ref: '#/components/schemas/rewardCertificateType'
        status:
          $ref: '#/components/schemas/awardStatusType'
        expirationDate:
          description: Expiration Date.
          format: date
          type: string
        gift:
          description: Signifies whether award is gift or not.
          type: boolean
        upgrade:
          description: Signifies whether upgrade award or not.
          type: boolean
        package:
          description: Signifies whether upgrade is package or not.
          type: boolean
        instantlyRedeemable:
          description: Indicates if the award is an Instant Redemption award.
          type: boolean
        paidUpgrade:
          description: Indicates if this certificate was ordered using the "Paid Upgrade"
            option in the E-Certs screen.
          type: boolean
        detailedCertificate:
          description: Indicates if this certificate is detailed or not.
          type: boolean
        nights:
          description: Award Nights.
          type: integer
        sourceType:
          description: "MRW : From MRW MAN:Entered manually."
          type: string
        points:
          description: No. of points used to order this award.
          type: number
        fBAInfo:
          $ref: '#/components/schemas/fBAInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        quantity:
          description: Quantity of such awards needed to be ordered.
          type: integer
        displaySequence:
          description: Indicates the order in which the certificates received from
            MRW.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    profileCashieringDetailsInfo:
      description: Response object containing profile routing instructions.
      properties:
        profileCashieringDetailList:
          description: Cashiering details for the profile.
          items:
            $ref: '#/components/schemas/profileCashieringDetailType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCashieringDetailType:
      description: The type contains routing instructions for the profile.
      properties:
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
        eCommerceId:
          $ref: '#/components/schemas/uniqueID_Type'
        routingInstructions:
          $ref: '#/components/schemas/profileRoutingInstructionsType'
        taxType:
          description: Tax type code.
          maxLength: 20
          minLength: 0
          type: string
        fiscalGuestType:
          description: Guest type code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileRoutingInstructionsType:
      description: The type contains routing instructions for the profile.
      properties:
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        autoPopulateRouting:
          description: A flag which determines whether the instructions has to be
            automatically populated for this profile or not.
          type: boolean
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileCashieringDetails:
      description: Request object for changing the profile cashiering details.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileCashieringDetailList:
          description: Cashiering details for the profile.
          items:
            $ref: '#/components/schemas/profileCashieringDetailType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountInfo:
      description: Response object for fetching profile commission detail.
      properties:
        profileCommissionAccountInfoList:
          description: Profile commission info which contains bank account and commission
            code details.
          items:
            $ref: '#/components/schemas/profileCommissionAccountInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountInfoListType:
      description: Profile commission info which contains bank account and commission
        code details.
      items:
        $ref: '#/components/schemas/profileCommissionAccountInfoType'
      maxItems: 4000
      type: array
    profileCommissionAccountInfoType:
      description: Profile commission info which contains bank account and commission
        code details
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        bankAccount:
          $ref: '#/components/schemas/bankAccountType'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    bankAccountType:
      description: "Bank account information like Account ID, Bank Name, Currency,\
        \ etc."
      properties:
        hotelId:
          description: Property of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        bankAccountNo:
          description: Account number at the bank.
          maxLength: 80
          minLength: 0
          type: string
        bankCode:
          description: Unique code of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        branchCode:
          description: Code for the branch of the bank.
          maxLength: 20
          minLength: 0
          type: string
        bankName:
          description: Name of the bank account.
          maxLength: 2000
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethodType'
        checkFormat:
          description: Type of format for Payment Method.
          maxLength: 80
          minLength: 0
          type: string
        currency:
          $ref: '#/components/schemas/codeDescriptionType'
        currentCheckNo:
          description: Current check no of the bank account.
          type: number
        hotelName:
          description: Property name of the bank account.
          maxLength: 80
          minLength: 0
          type: string
        default:
          description: Whether this bank account is to be the default in case no bank
            account is associated with the travel agent or source.
          type: boolean
        linkedToProfile:
          description: Whether this bank account is associated with the travel agent
            or source.
          type: boolean
      type: object
    commissionPaymentMethodType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
        format:
          description: Payment format if the payment method is EFT.
          maxLength: 3
          minLength: 0
          type: string
      type: object
    profileCommissionAccount:
      description: Request object for creating profile commission detail.
      properties:
        criteria:
          $ref: '#/components/schemas/profileCommissionAccountCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountCriteriaType:
      description: Contains base info to determine profile commission bank account
        and code.
      properties:
        hotelId:
          description: Hotel code from which the profile bank account and code belongs
            to
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
        validatePending:
          description: "Used in CRUD operations. When set to true, proceed validating\
            \ pending commissions"
          type: boolean
      type: object
    emailMessageType:
      description: Request object for storing an email.
      properties:
        blockId:
          description: "Used for Character Strings, length 0 to 80."
          maxLength: 80
          minLength: 0
          type: string
        fromAddress:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        toAddress:
          items:
            $ref: '#/components/schemas/basicEmailType'
          maxItems: 4000
          type: array
        subject:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        emailBody:
          description: Email in base64 binary format.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        messageId:
          description: "Used for Character Strings, length 0 to 100."
          maxLength: 100
          minLength: 0
          type: string
        emailReceiveDate:
          description: The date the email was received.
          format: date-time
          type: string
        hasAttachment:
          description: Indicates whether the email was sent with an attachment (true)
            or not (false).
          type: boolean
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength80:
      description: "Used for Character Strings, length 0 to 80."
      maxLength: 80
      minLength: 0
      type: string
    basicEmailListType:
      items:
        $ref: '#/components/schemas/basicEmailType'
      maxItems: 4000
      type: array
    stringLength200:
      description: "Used for Character Strings, length 0 to 200."
      maxLength: 200
      minLength: 0
      type: string
    stringLength100:
      description: "Used for Character Strings, length 0 to 100."
      maxLength: 100
      minLength: 0
      type: string
    accountForecasts:
      description: Response object for showing forecast information of account profile.
      properties:
        accountForecastDetails:
          description: Detail Information about Account Forecast.
          items:
            $ref: '#/components/schemas/accountForecastType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    accountForecastsType:
      description: Detail Information about Account Forecast.
      items:
        $ref: '#/components/schemas/accountForecastType'
      maxItems: 4000
      type: array
    accountForecastType:
      description: Detail Information about Account Forecast.
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        periodCode:
          description: Specifies the Fiscal or Calendar Period Code for the forecast
          maxLength: 20
          minLength: 0
          type: string
        periodDescription:
          description: Specifies the Fiscal or Calendar Period Description for the
            forecast.
          maxLength: 100
          minLength: 0
          type: string
        periodStartDate:
          description: Specifies the Period Start Date
          format: date
          type: string
        periodEndDate:
          description: Specifies the Period End Date
          format: date
          type: string
        roomNights:
          description: Room Nights for the forecast
          type: integer
        averageRate:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBeverageRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        overrideForecast:
          $ref: '#/components/schemas/overrideForecastTypeType'
      type: object
    overrideForecastTypeType:
      description: Defines values for OverrideForecastType.
      enum:
      - Default
      - Override
      - DoNotOverride
      type: string
    forecastsInformation:
      properties:
        forecastsInformation:
          description: Detail Information about Account Forecast.
          items:
            $ref: '#/components/schemas/accountForecastType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeAccountForecastsRS:
      description: Response Body.
      properties:
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        errors:
          description: An error that occurred during the processing of a message.
          items:
            $ref: '#/components/schemas/errorType'
          maxItems: 99
          type: array
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          format: date-time
          type: string
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    successType:
      description: Returning an empty element of this type indicates the successful
        processing of an message. This is used in conjunction with the Warning Type
        to report any warnings or business errors.
      type: object
    errorsType:
      description: An error that occurred during the processing of a message.
      items:
        $ref: '#/components/schemas/errorType'
      maxItems: 99
      type: array
    errorType:
      description: "Standard way to indicate that an error occurred during the processing\
        \ of an message. If the message successfully processes, but there are business\
        \ errors, those errors should be passed in the warning element."
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nodeList:
          description: "An XPath expression that selects all the nodes whose data\
            \ caused this error. Further, this expression should have an additional\
            \ contraint which contains the data of the node. This will provide the\
            \ offending data back to systems that cannot maintain the original message."
          type: string
      type: object
    linkedProfiles:
      description: Response of fetch set of linked Profiles to the requested Profile.
      properties:
        profileSummaries:
          $ref: '#/components/schemas/profileSummariesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    matchedProfiles:
      description: Response object for the match profiles.
      properties:
        matchProfiles:
          $ref: '#/components/schemas/matchProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionExceptions:
      description: Response object for fetching membership transaction exceptions.
      properties:
        memberTransactionExceptions:
          description: Contains Membership transaction exception information.
          items:
            $ref: '#/components/schemas/membershipTransactionExceptionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionExceptionsType:
      description: Contains Membership transaction exception information.
      items:
        $ref: '#/components/schemas/membershipTransactionExceptionType'
      maxItems: 4000
      type: array
    membershipTransactionExceptionType:
      description: "Details about a membership like ProfileID, Card Number, Type,\
        \ Level, etc."
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          description: The profile name associated with this membership.
          maxLength: 128
          minLength: 0
          type: string
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        joinedDate:
          description: Date when the member enrolled for the membership.
          format: date
          type: string
        cardExpirationDate:
          description: Membership card expiration date.
          format: date
          type: string
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        hotelId:
          description: Hotel code of the membership transaction exceptions.
          maxLength: 20
          minLength: 0
          type: string
        fromToRangeDate:
          $ref: '#/components/schemas/dateRangeType'
        reservationNumber:
          description: Any reference like reservation no etc against which the certificate
            was consumed.
          maxLength: 50
          minLength: 0
          type: string
        roomsBooked:
          description: "If multiple room membership transaction exceptions occurred,\
            \ the number of rooms booked.(MR)"
          type: integer
        backToBack:
          description: Indicates if back to back membership transaction exceptions
            have occurred or not.
          maxLength: 2
          minLength: 0
          type: string
        averageRate:
          description: The average rate of the stay.
          type: number
        tierStays:
          description: Tier stay points associated with this membership points transaction.
          type: number
        totalAwardPoints:
          description: Award points associated with this membership points transaction.
          type: number
        totalNights:
          description: Tier night points associated with this membership points transaction.
          type: number
        totalRevenue:
          description: Tier revenue points associated with this membership points
            transaction.
          type: number
        pointsCalculate:
          description: Points Calculated value(Y/N) for the selected transaction.
          type: boolean
        userNotes:
          description: Notes regarding the resolution of the membership transaction
            exception or for any other reason.
          maxLength: 4000
          minLength: 0
          type: string
        processingMessages:
          description: The systems records and notes identifying the exception criteria.
          maxLength: 2000
          minLength: 0
          type: string
        totalPoints:
          description: The total number of award points associated with this transaction.
          type: number
        awardBasePoints:
          description: The total number of base award points for this membership points
            transaction.
          type: number
        awardBonusPoints:
          description: "Indicates if this transaction involves bonus points, The total\
            \ number of bonus points."
          type: number
        tierPoints:
          $ref: '#/components/schemas/membershipTransactionTierPointsType'
        computedPoints:
          $ref: '#/components/schemas/membershipTransactionExceptionComputePointsType'
        exceptionType:
          description: "Indicates the type of Exception like Exception not resolved,Points\
            \ Rejected on Exception etc.,"
          type: integer
      type: object
    membershipTransactionExceptionComputePointsType:
      description: Options to compute award and tier points for membership transaction
        exception.
      properties:
        awardBasePoints:
          description: Indicates if membership transaction exception should be created
            for base award points.
          type: boolean
        awardBonusPoints:
          description: Indicates if membership transaction exception should be created
            for bonus award points.
          type: boolean
        tierPointsBaseStay:
          description: Indicates if membership transaction exception should be created
            for base tier points for the stay.
          type: boolean
        tierPointsBonusStay:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the stay.
          type: boolean
        tierPointsBaseNights:
          description: Indicates if membership transaction exception should be created
            for base tier points for the night.
          type: boolean
        tierPointsBonusNights:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the night.
          type: boolean
        tierPointsBaseRevenue:
          description: Indicates if membership transaction exception should be created
            for base tier points for the revenue.
          type: boolean
        tierPointsBonusRevenue:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the revenue.
          type: boolean
      type: object
    membership:
      description: Request object for create membership. This object contains unique
        identifiers for each profile and list of membership details to be created.
        The standard optional Opera Context element is also included.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileMemberships:
          description: Detailed information of membership related to the profile
          items:
            $ref: '#/components/schemas/profileMembershipType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedMembership:
      description: "Response object for change/update membership. This object contains\
        \ collection of memberships,Success,Warnings and Errors related to this operation"
      properties:
        profileMemberships:
          description: Detailed information of membership related to the profile
          items:
            $ref: '#/components/schemas/profileMembershipType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberInformation:
      description: Response object for member info.
      properties:
        memberInfo:
          $ref: '#/components/schemas/memberInfoRSType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberInfoRSType:
      properties:
        memberInfoDetails:
          $ref: '#/components/schemas/memberInfoDetailsType'
        memberInfoRangeDetails:
          $ref: '#/components/schemas/memberInfoDetailsType'
        nextTierPoints:
          description: Points required for next tier of membership.
          type: integer
        pointsAvailable:
          description: Points available for the member.
          type: integer
      type: object
    memberInfoDetailsType:
      properties:
        guestTotalNights:
          description: Total nights of the guest.
          type: integer
        guestTotalStay:
          description: STotal stays of the guest.
          type: integer
        tierBaseNights:
          description: Tier Base Nights Points.
          type: integer
        tierBaseRevenue:
          description: Tier Base Revenue Points.
          type: number
        tierBaseStay:
          description: Tier Base Stay Points.
          type: integer
        tierBonusNights:
          description: Tier Bonus Nights Points.
          type: integer
        tierBonusRevenue:
          description: Tier Bonus Revenue Points.
          type: number
        tierBonusStay:
          description: Tier Bonus Stay Points.
          type: integer
        membershipTotalNights:
          description: Total Nights of the membership.
          type: integer
        membershipTotalStay:
          description: Total Stay of the membership.
          type: integer
        awardBasePoints:
          description: Total base points of the award.
          type: integer
        awardBonusPoints:
          description: Total bonus points of the award.
          type: integer
        awardMiscPoints:
          description: Total miscellaneous points of the award.
          type: integer
        totalAwardPoints:
          description: Total points of the award.
          type: integer
      type: object
    profileOwnersDetail:
      description: Response object to fetch the owners of a profile.
      properties:
        profileOwnersList:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileOwners:
      description: Request object to change profile owners.
      properties:
        criteria:
          $ref: '#/components/schemas/setProfileOwnersCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    setProfileOwnersCriteriaType:
      description: Criteria to update the profile owners.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        owners:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
      type: object
    preference:
      description: "Response object for fetch preference. This object contains collection\
        \ of preferences,Success,Warnings and Errors related to this operation."
      properties:
        preferenceCollections:
          description: Detailed information of preferences related to the profile
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileRelationships:
      properties:
        relationships:
          $ref: '#/components/schemas/relationshipsSummary'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    relationshipsSummary:
      description: Contains details relationships related to a profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    futurePastBookingsCriteria:
      description: Request for information regarding existence of profile in future
        and/or past business blocks and/or reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/hasFuturePastBookingsSearchType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hasFuturePastBookingsSearchType:
      description: Search type for verifying whether there are future and/or past
        business blocks and/or reservations exist for a Profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        searchFor:
          description: Search for active or past.
          enum:
          - Active
          - Past
          type: string
        searchIn:
          description: Search in business blocks or reservations.
          enum:
          - Block
          - Reservation
          type: string
        rateCode:
          description: Unique identifier of the rate code of business block or reservation.
          maxLength: 20
          minLength: 0
          type: string
        exclusions:
          $ref: '#/components/schemas/hasFuturePastBookingsExclusionsType'
      type: object
    hasFuturePastBookingsExclusionsType:
      description: Search type for excluding list of business blocks and/or reservations.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    futurePastBookings:
      description: This is the Response Message to information regarding existence
        of profile in future and/or past business blocks and/or reservations.
      properties:
        response:
          description: response - whether there are future and/or past business blocks
            or reservations for the profile.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileStayHistory:
      description: Response object for showing stay history and future reservations
        of specific profile.
      properties:
        profileStayDetails:
          $ref: '#/components/schemas/profileStayDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileStayDetailsType:
      description: Type provides the stay history and future reservations of specific
        profile.
      properties:
        reservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
      type: object
    profileRelationship:
      description: Request object for creating profile relationship.
      properties:
        relationship:
          $ref: '#/components/schemas/relationshipCriteriaType'
        copyInstructions:
          $ref: '#/components/schemas/copyInstructionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    relationshipCriteriaType:
      description: Contains Criteria Information for a profile relationship.
      properties:
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).This needs to be
            passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        targetRelation:
          description: Indicates the type of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileRelationshipToBeChanged:
      description: Request object for changing profile relationship.
      properties:
        relationship:
          $ref: '#/components/schemas/changeRelationshipCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeRelationshipCriteriaType:
      description: Information about the changes in relationship for the profile
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of existing relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of existing relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Indicates the type of existing relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of existing relationship the related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsInfoType:
      description: Detailed information regarding to be changed relationships for
        the profile.
      properties:
        changeProfileID:
          $ref: '#/components/schemas/uniqueID_Type'
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        sourceRelation:
          description: Indicates the type of to be changed relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of to be changed relationship the
            current profile(Source Profile) has with the related profile(Target Profile).This
            needs to be passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Indicates the type of to be changed relationship the Related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of to be changed relationship the
            related profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileToBeMerged:
      description: Profile Resource will be merged.
      properties:
        victimProfileId:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mergedProfilesSnapshotDetails:
      description: Response object for fetching snapshot of merge profiles result.
      properties:
        mergedProfileSnapshot:
          $ref: '#/components/schemas/mergedProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mergedProfileType:
      description: Provides information for merged profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileType'
      type: object
    mergedStageProfileSnapshot:
      description: Response object to fetch merge profile based on stage and opera
        profile.
      properties:
        mergeStageProfile:
          $ref: '#/components/schemas/stagedProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileType:
      description: Detailed information about the staged profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        customer:
          $ref: '#/components/schemas/stagedProfileCustomerType'
        company:
          $ref: '#/components/schemas/stagedProfileCompanyType'
        addresses:
          description: Collection of detailed information about address for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileAddressType'
          maxItems: 4000
          type: array
        telephones:
          description: Collection of detailed information about telephone/fax for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfilePhoneType'
          maxItems: 4000
          type: array
        emails:
          description: Collection of detailed information about email for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileEmailType'
          maxItems: 4000
          type: array
        uRLs:
          description: Collection of detailed information about web url/address for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileURLType'
          maxItems: 4000
          type: array
        memberships:
          description: Collection of detailed information about memberships for the
            staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileMembershipType'
          maxItems: 4000
          type: array
        preferences:
          description: Collection of detailed information about preferences for the
            staged profile.
          items:
            $ref: '#/components/schemas/stagedProfilePreferenceType'
          maxItems: 4000
          type: array
        keywords:
          description: Collection of detailed information about keyword for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileKeywordType'
          maxItems: 4000
          type: array
        negotiatedRates:
          description: Collection of detailed information about negotiated rates for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileNegotiatedRateType'
          maxItems: 4000
          type: array
        identifications:
          description: Collection of detailed information about identification for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileIdentificationsType'
          maxItems: 4000
          type: array
        routingInstructions:
          description: Collection of routing instructions for the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileRoutingInstructionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/stagedProfileUserDefinedFieldsType'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        comments:
          description: List of Notes for the customer.
          items:
            $ref: '#/components/schemas/stagedProfileCommentInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code that the staged profile belongs to.
          maxLength: 20
          minLength: 0
          type: string
        importDate:
          description: The date on which the staged profile has been received.
          format: date
          type: string
        profileType:
          description: Type of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        stageStatus:
          description: The status of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stagedProfileCustomerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        errors:
          description: The error in stage profile.
          items:
            $ref: '#/components/schemas/stagedProfileErrorType'
          maxItems: 4000
          type: array
        alternateLanguage:
          description: ALternate language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    stagedProfileErrorType:
      description: Criteria to fetch the staged profile.
      properties:
        field:
          $ref: '#/components/schemas/stagedProfileErrorField'
        errorDescription:
          description: The error description for the staged profile.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    stagedProfileErrorField:
      description: Simple type for stage profile error filed to specify which filed
        in the stage profile has error.
      enum:
      - PrimaryLanguage
      - AlternateLanguag
      - Gender
      - ProfileType
      - Nationality
      - Prefix
      - VIPStatus
      type: string
    stagedProfileCompanyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        errors:
          description: The error in stage profile.
          items:
            $ref: '#/components/schemas/stagedProfileErrorType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileAddressType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        errorDescription:
          description: The error in address information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        postalCodeExtension:
          description: Postal code extension.
          maxLength: 15
          minLength: 0
          type: string
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cleansStatus:
          $ref: '#/components/schemas/stagedAddressCleansStatus'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedAddressCleansStatus:
      description: Simple type for status of staged address cleansing.
      enum:
      - NotCleansed
      - Cleansed
      - Failure
      type: string
    stagedProfilePhoneType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        errorDescription:
          description: The error in telephone information in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        defaultConfirmation:
          description: Indicates whether the phone is the default confirmation method.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileEmailType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        errorDescription:
          description: The error in email information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        defaultConfirmation:
          description: Indicates whether the email is the default confirmation method.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileURLType:
      description: Web site address.
      properties:
        errorDescription:
          description: The error in URL in a staged profile with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        defaultConfirmation:
          description: Indicates whether the phone is the default confirmation method.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileMembershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        errorDescription:
          description: The error in membership information in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        registrationResort:
          description: Registration resort.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentCode:
          description: Enrollment code.
          maxLength: 20
          minLength: 0
          type: string
        membershipStatus:
          description: Membership status.
          maxLength: 20
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        deviceCode:
          description: Device encoded string.
          maxLength: 200
          minLength: 0
          type: string
        deviceDisabledDate:
          description: Device disabled date.
          format: date
          type: string
        updateExistingMembership:
          description: Indicates if existing information for primary membership should
            be overwritten.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfilePreferenceType:
      description: Guest Preference details for the profile.
      properties:
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceCode:
          maxLength: 20
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
        errorDescription:
          description: The error in Preference information in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        resortPrefernce:
          description: Prefernce resort.
          maxLength: 20
          minLength: 0
          type: string
        valid:
          description: Indicated whether the preference information is valid.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileKeywordType:
      properties:
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        errorDescription:
          description: The error in keyword information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        keywordType:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileNegotiatedRateType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          description: The error in negotiated rate information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileIdentificationsType:
      description: Information on the identification of the customer.
      properties:
        identification:
          $ref: '#/components/schemas/identificationType'
        errorDescription:
          description: The error in negotiated rate information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        documentResort:
          description: Hotel code to which the document belongs.
          maxLength: 20
          minLength: 0
          type: string
        inactiveDate:
          description: The date when the record was inactivated.
          format: date
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileRoutingInstructionType:
      properties:
        transactionInfo:
          $ref: '#/components/schemas/stagedProfileTrxInfoType'
        billingInstruction:
          $ref: '#/components/schemas/stagedProfileBillingInstructionType'
      type: object
    stagedProfileTrxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        errorDescription:
          description: The error in transaction code information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileBillingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          description: The error in billing instruction information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileUserDefinedFieldsType:
      description: Used to hold user defined fields(UDFs) for staged profile.
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/stagedProfileCharacterUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/stagedProfileNumericUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/stagedProfileDateUDFType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileCharacterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/stagedProfileCharacterUDFType'
      maxItems: 4000
      type: array
    stagedProfileCharacterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileNumericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/stagedProfileNumericUDFType'
      maxItems: 4000
      type: array
    stagedProfileNumericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileDateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/stagedProfileDateUDFType'
      maxItems: 4000
      type: array
    stagedProfileDateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileCommentInfosType:
      description: List of Notes for the customer.
      items:
        $ref: '#/components/schemas/stagedProfileCommentInfoType'
      maxItems: 4000
      type: array
    stagedProfileCommentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lineNo:
          description: The line number of the comment.
          type: integer
        inActiveDate:
          description: Indicates comment inactive date.
          format: date
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        valid:
          description: Indicates whether the comment information is valid.
          type: boolean
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileDetails:
      description: Response object for fetching multiple detailed profiles by unique
        identifiers..
      properties:
        profiles:
          $ref: '#/components/schemas/profilesType'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profilesType:
      description: A collection of Profile objects or Unique IDs of Profiles.
      properties:
        profileInfo:
          description: A collection of Profiles or Unique IDs of Profiles.
          items:
            $ref: '#/components/schemas/profilesType_profileInfo_inner'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    recentlyAccessedProfiles:
      description: Response with the fetched recently accessed profiles.
      properties:
        profiles:
          description: List of recently accessed profiles.
          items:
            $ref: '#/components/schemas/recentlyAccessedProfileType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    recentlyAccessedProfileType:
      description: A recently used profile details.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        guestFirstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        accessDate:
          description: The date the record was accessed.
          format: date
          type: string
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    stagedProfileDetails:
      description: Response object for the staged profile.
      properties:
        stagedProfile:
          $ref: '#/components/schemas/stagedProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfile:
      description: Request object for changing the staged profile.
      properties:
        stagedProfile:
          $ref: '#/components/schemas/stagedProfileType'
        changeInstructions:
          $ref: '#/components/schemas/stagedProfileChangeInstructionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileChangeInstructionsType:
      description: Information about instructions to change the staged profile.
      properties:
        fullyOverlay:
          description: If true then delete and recreat the staged profile details.
          type: boolean
      type: object
    suspendedAddresses:
      description: Response object for fetching unique company profile.
      properties:
        suspendedAddressesInfo:
          $ref: '#/components/schemas/suspendedAddressesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    suspendedAddressesType:
      description: "List of suspended addresses returned, based on the entered seach\
        \ criteria."
      properties:
        suspendedAddressesInfo:
          description: A collection of suspended Addresses.
          items:
            $ref: '#/components/schemas/suspendedAddressesInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
      type: object
    suspendedAddressesInfoType:
      properties:
        addressId:
          description: Corporate id of the profile.
          type: integer
        name:
          description: Last Name of the Profile against which the Suspended Addresses
            are fetched.
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        firstName:
          description: First Name of the Profile against which the Suspended Addresses
            are fetched.
          maxLength: 80
          minLength: 0
          type: string
        profileType:
          description: Profile Type of the Profile against which the Suspended Addresses
            are fetched..
          maxLength: 20
          minLength: 0
          type: string
        clientID:
          $ref: '#/components/schemas/uniqueID_Type'
        matchCode:
          description: Match Code of the Address Validation Performed from the batch
            processing
          maxLength: 20
          minLength: 0
          type: string
        validateDate:
          description: Validate Date.
          format: date
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        hotelId:
          description: Resort of the Profile
          maxLength: 20
          minLength: 0
          type: string
      type: object
    suspendedProfileErrorSummaryInfo:
      description: Response object for fetch suspended profile Errors summary. This
        object contains collection of profile erros and count of how many profiles
        encountered this error.
      properties:
        suspendedProfileErrorSummary:
          description: Collection of profile error summary.
          items:
            $ref: '#/components/schemas/suspendedProfileErrorSummaryType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    suspendedProfileErrorsSummaryType:
      description: Collection of profile error summary.
      items:
        $ref: '#/components/schemas/suspendedProfileErrorSummaryType'
      maxItems: 4000
      type: array
    suspendedProfileErrorSummaryType:
      description: Type which represents suspended profile errors information.
      properties:
        errorDescription:
          description: Represents Error summary of the suspended profiles.
          maxLength: 2000
          minLength: 0
          type: string
        errorCount:
          description: Count of how many profiles encountered this error.
          type: number
      type: object
    profileSubscriptionsToSynchronize:
      description: Request object for re-subscribing profile subscriptions.
      properties:
        criteria:
          $ref: '#/components/schemas/synchronizeProfileSubscriptionsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    synchronizeProfileSubscriptionsCriteriaType:
      description: Criteria for searching profile subscriptions.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        databaseIds:
          description: Code identifying the external database record which is linked
            to external systems.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    databaseIDListType:
      description: Code identifying the external database record which is linked to
        external systems.
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    forgetProfilesCriteria:
      description: Operation to validate profiles for forgetting.
      properties:
        validateForgetProfilesCriteria:
          $ref: '#/components/schemas/forgetProfilesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    forgetProfilesCriteriaType:
      description: Criteria to identify the profiles to be forgotten.
      properties:
        profiles:
          description: Unique identifier for a profile.
          items:
            $ref: '#/components/schemas/profileId'
          maxItems: 4000
          type: array
      type: object
    profiles:
      description: Unique identifier for a profile.
      items:
        $ref: '#/components/schemas/profileId'
      maxItems: 4000
      type: array
    validatedForgetProfiles:
      description: Response object for validating profiles for forgetting.
      properties:
        validateForgetProfilesResults:
          description: Result of processing/validation for forgetting a profile.
          items:
            $ref: '#/components/schemas/forgetProfileResultType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    forgetProfileResultListType:
      description: Result of processing/validation for forgetting a profile.
      items:
        $ref: '#/components/schemas/forgetProfileResultType'
      maxItems: 4000
      type: array
    forgetProfileResultType:
      description: Results of Anonymization processing/validation.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        canBeForgotten:
          description: Indicates if the profile is eligible to be anonymized.
          type: boolean
        status:
          $ref: '#/components/schemas/anonymizationStatusType'
        failureReasons:
          description: Reason describing why the profile is not eligible to be forgotten.
          items:
            $ref: '#/components/schemas/forgetProfileFailureReasonType'
          maxItems: 4000
          type: array
      type: object
    forgetProfileFailureReasonListType:
      description: Reason describing why the profile is not eligible to be forgotten.
      items:
        $ref: '#/components/schemas/forgetProfileFailureReasonType'
      maxItems: 4000
      type: array
    forgetProfileFailureReasonType:
      description: Provides information about the reason why the profile is not eligible
        to be forgotten.
      properties:
        reasonCode:
          description: Code representing the reason why the profile is not eligible
            to be forgotten.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Reason describing why the profile is not eligible to be forgotten.
          maxLength: 2000
          minLength: 0
          type: string
        expectedResolutionDate:
          description: Expected resolution date for this reason.
          format: date
          type: string
      type: object
    actionType:
      description: Action types allowed by the event api.
      enum:
      - CREATE
      - UPDATE
      - DELETE
      type: string
    revenueBucketType:
      description: The different revenue buckets of a profile.
      properties:
        code:
          description: Code of revenue type.
          maxLength: 40
          minLength: 0
          type: string
        description:
          description: Description of revenue type.
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Value of revenue.
          type: number
      type: object
    revenueBucketListType:
      description: Details about revenue summary.
      properties:
        bucket:
          items:
            $ref: '#/components/schemas/revenueBucketType'
          maxItems: 4000
          type: array
      type: object
    membershipPromotionDetails:
      description: The request element used to create a membership promotion.
      properties:
        membershipPromotion:
          $ref: '#/components/schemas/membershipPromotionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipPromotionsDetails:
      description: Response object for fetching membership promotions information.
      properties:
        membershipPromotions:
          description: Collection of membership promotions.
          items:
            $ref: '#/components/schemas/membershipPromotionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipPromotionType:
      description: Information related to a membership promotion.
      properties:
        promotionCode:
          description: The promotion code attached with the member.
          maxLength: 20
          minLength: 0
          type: string
        startDate:
          description: The start date of membership promotion.
          format: date
          type: string
        inactive:
          description: Indicates if the membership type is inactive.
          type: boolean
        hotelId:
          description: Indicates Resort of membership promotion
          maxLength: 20
          minLength: 0
          type: string
        endDate:
          description: Indicates the end date of membership promotion.
          format: date
          type: string
        global:
          description: Specifies whether the promotion code attached is global.
          type: boolean
        membershipPromotionId:
          description: The ID of a promotion owned by a membership.
          type: number
      type: object
    copyInstructionsType:
      description: Copy Instructions for a profile
      properties:
        instructions:
          description: List of the profile details to be copied
          items:
            $ref: '#/components/schemas/copyInstructionType'
          type: array
      type: object
    copyInstructionType:
      description: Copy Instruction for a profile
      enum:
      - Keyword
      type: string
    profileMatchStatusType:
      description: "Status of the match. It can be one of these 3 options: Match Points\
        \ Computed, Do Not Merge, Can Not Merge."
      enum:
      - MPC
      - DNM
      - CNM
      type: string
    profilesMatch:
      description: Response object for fetching the profiles match.
      properties:
        profilesMatchList:
          description: List of profiles matches. The values are ordered by default
            using main profile first name.
          items:
            $ref: '#/components/schemas/profilesMatchType'
          maxItems: 200
          type: array
        offset:
          description: Indicates the index of the next applicable set(page).
          type: integer
        limit:
          description: Indicates number of records the API can return as per the API
            request limit sent. A maximum of 200 records can be only returned at a
            time.
          type: integer
        count:
          description: Indicates number of records the API has returned actually as
            per the API request criteria.
          type: integer
        hasMore:
          description: Indicates whether there are more records available to be returned
            as per the API request criteria or not.
          type: boolean
        totalResults:
          description: Indicates total number of records available that can be returned
            as per the API request criteria.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profilesMatchType:
      description: "Type that contains the information of a profile match such as\
        \ main profile, profile to merge, match id, status of the match, date when\
        \ the points where computed for last time, etc."
      properties:
        matchId:
          description: Unique identifier for this particular profile match record.
          maxLength: 80
          minLength: 0
          type: string
        mainProfile:
          $ref: '#/components/schemas/shortInfoProfileType'
        profileToMerge:
          $ref: '#/components/schemas/shortInfoProfileType'
        rule:
          description: Match criteria rule code that was used to create that match.
          maxLength: 400
          minLength: 0
          type: string
        matchCriteria:
          description: Description of the match point for the profile merge.
          maxLength: 4000
          minLength: 0
          type: string
        points:
          description: Total number of weighing match points that was found between
            main profile and profile to merge.
          minimum: 0
          type: number
        status:
          $ref: '#/components/schemas/profileMatchStatusType'
        computedOn:
          description: Date when the weighing points were computed for the profiles
          format: date
          type: string
        doNotMerge:
          description: "If this value is true, then this record is set as do not merge,\
            \ if false, it is set as merge."
          type: boolean
      type: object
    shortInfoProfileType:
      description: This type contains short information of a profile.
      properties:
        nameId:
          description: Unique id for the profile.
          maxLength: 80
          minLength: 0
          type: string
        displayName:
          description: "Name that will be displayed for the profile, it is the combination\
            \ of last name and first name of a profile."
          maxLength: 160
          minLength: 0
          type: string
        clientId:
          description: Corporate id of the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    matchListType:
      description: Type that contains the list of theh matchIds that will be updated
        to skip or don't skip profile match.
      properties:
        matchList:
          description: List of matchIds that will be updated to skip or don't skip
            profile match.
          items:
            $ref: '#/components/schemas/matchType'
          maxItems: 4000
          type: array
      type: object
    matchType:
      description: Type that contains matchId and if this particular matchId is set
        to skip profile match or not.
      properties:
        matchId:
          description: Identifier of the match record.
          maxLength: 80
          minLength: 0
          type: string
        skipProfileMatch:
          description: "If true, it sets the record to skip profile match for this\
            \ particular matchId. if false, it sets the record to not skip profile\
            \ match."
          type: boolean
      type: object
    membershipPointsExceptionsType:
      description: Contains Membership points exception information.
      properties:
        membershipTransactionIds:
          description: Unique identifier associated with the membership transaction.
          items:
            $ref: '#/components/schemas/membershipTransactionId'
          maxItems: 20
          type: array
        acceptPoints:
          description: Indicates if the membership points exception are to be accepted
            or rejected.
          type: boolean
        userNotes:
          description: Notes regarding the resolution of the membership transaction
            exception or for any other reason.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    membershipPointsExceptions:
      description: Response object for fetching membership points exceptions.
      properties:
        membershipPointsExceptions:
          $ref: '#/components/schemas/membershipPointsExceptionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fileType:
      description: File Type of the staging file.
      enum:
      - IMPORT_TAX_PERC
      type: string
    memberPointsExceptionType:
      description: "Details about a membership like ProfileID, Card Number, Type,\
        \ Level, etc."
      properties:
        hotelId:
          description: Hotel code of the membership transaction exceptions.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          description: The profile name associated with this membership.
          type: string
        fromToRangeDate:
          $ref: '#/components/schemas/dateRangeType'
        membershipIdNo:
          description: Unique identifier of this membership.
          type: number
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        roomsBooked:
          description: The number of rooms booked.(MR)
          type: integer
        backToBack:
          description: Indicates if back to back membership transaction exceptions
            have occurred or not.
          type: boolean
        averageRate:
          description: The average rate of the stay.
          type: number
        awardPoints:
          description: Award points associated with this membership points transaction.
          type: number
        tierNightPoints:
          description: Tier night points associated with this membership points transaction.
          type: number
        tierStayPoints:
          description: Tier stay points associated with this membership points transaction.
          type: number
        tierRevenuePoints:
          description: Tier revenue points associated with this membership points
            transaction.
          type: number
        pointsCalculate:
          description: Points Calculated value(Y/N) for the selected transaction.
          type: boolean
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        processingMessages:
          description: The systems records and notes identifying the exception criteria.
          maxLength: 2000
          minLength: 0
          type: string
        exceptionStatus:
          $ref: '#/components/schemas/membershipExceptionStatusType'
      type: object
    memberPointsExceptions:
      description: Response object for fetching membership points exceptions.
      properties:
        memberPointsExceptions:
          description: A collection of membership points exceptions.
          items:
            $ref: '#/components/schemas/memberPointsExceptionType'
          maxItems: 100
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipExceptionStatusType:
      description: List of possible membership exception type.
      enum:
      - AllExceptions
      - PointsAwardedOnException
      - PointsRejectedOnException
      - ExceptionNotResolved
      type: string
    membershipReservationDetails:
      description: Response element for membership reservation activity updated.
      properties:
        calendarDate:
          description: Date for the requested membership reservation details.
          format: date
          type: string
        membershipReservationDetailsList:
          description: List of fetched membership reservation details.
          items:
            $ref: '#/components/schemas/membershipReservationDetailUnitType'
          maxItems: 200
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipReservationDetailUnitType:
      description: The filetered membership reservation information.
      properties:
        value:
          description: Membership reservation detail value.
          type: number
        code:
          $ref: '#/components/schemas/membershipReservationDetailCodeType'
      type: object
    membershipReservationDetailCodeType:
      description: Supported memebership reservation detail code type.
      enum:
      - ArrivalsTotal
      - DeparturesTotal
      - InHouseTotal
      - RoomRevenue
      type: string
    issueAwardsInfoType:
      description: List of awards info.
      items:
        $ref: '#/components/schemas/issueAwardInfoType'
      maxItems: 100
      type: array
    issueAwardInfoType:
      description: Information about issue award.
      properties:
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        packageCode:
          description: Package/Product code for the award.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award.
          format: date
          type: string
      type: object
    issuedAward:
      description: Response object for issue awards.
      properties:
        issueAwards:
          description: List of awards info.
          items:
            $ref: '#/components/schemas/issueAwardInfoType'
          maxItems: 100
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    otherAwardAvailabilityType:
      description: Information related to the Other type Award.
      properties:
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        shortDescription:
          description: Descriptive name of the award.
          maxLength: 80
          minLength: 0
          type: string
        awardValue:
          description: The actual currency value of the award.
          type: number
        pointsRequired:
          description: The number of points requried to redeem this award.
          type: number
      type: object
    membershipOtherAwardInfoType:
      description: Information about the OTHER type Award and profile membership.
        OTHER type awards can be redeemed based on the points available with a particular
        member.
      properties:
        otherInfo:
          $ref: '#/components/schemas/otherAwardAvailabilityType'
        membershipId:
          description: Unique Membership ID.
          type: number
        membershipNumber:
          description: The card number associated with the membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          description: The type of the membership.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    otherAwardsIssueCriteria:
      description: Request object to issue an OTHER type award to a member's profile.
      properties:
        issueAwardsInfo:
          description: List of OTHER type awards information.
          items:
            $ref: '#/components/schemas/membershipOtherAwardInfoType'
          maxItems: 100
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileMatch:
      description: Response object for fetching profile Match.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileSummariesType:
      description: A collection of staged profiles.
      properties:
        profileInfo:
          description: Basic information about staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileSummaryType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stagedProfileSummaryType:
      description: Basic information about staged profile.
      properties:
        hotelId:
          description: Hotel code associated with the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileName:
          $ref: '#/components/schemas/profileNameType'
        internalProfileName:
          $ref: '#/components/schemas/profileNameType'
        primaryMembershipCardNo:
          description: Indicates the primary membership card number of a staged profile
          maxLength: 40
          minLength: 0
          type: string
        membershipEnrollmentCode:
          description: Membership enrollment code of a staged profile.
          maxLength: 40
          type: string
        membershipExpirationDate:
          description: Indicates the expiry date of a staged membership profile.
          format: date
          type: string
        membershipLevel:
          description: Indicates the membership level of a staged membership profile.
          maxLength: 20
          minLength: 0
          type: string
        stagedProfileReasons:
          description: Describes the reasons why a profile got staged.
          items:
            $ref: '#/components/schemas/stagedReasonsType'
          maxItems: 8
          type: array
        importDate:
          description: The date on which the staged profile has been received.
          format: date
          type: string
        profileType:
          description: Type of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        region:
          description: The region of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        stageStatus:
          $ref: '#/components/schemas/stagedProfileStatus'
      type: object
    stagedProfileStatus:
      description: Simple type for status of the staged profiles.
      enum:
      - Valid
      - Invalid
      - MatchFound
      - New
      type: string
    stagedProfileProcessType:
      enum:
      - New
      - Match
      - Reprocess
      - ForceMerge
      type: string
    stagedProfileId:
      description: Unique identifier for a staged profile.
      properties:
        hotelId:
          description: Hotel code for the staged profile to be reprocessed.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    processStagedProfileType:
      description: Information required to process a atged profile.
      properties:
        stagedProfileId:
          $ref: '#/components/schemas/stagedProfileId'
        processType:
          $ref: '#/components/schemas/stagedProfileProcessType'
        sourceType:
          $ref: '#/components/schemas/stagedProfileSourceType'
      type: object
    stagedProfileSourceType:
      enum:
      - Screen
      - Interface
      type: string
    processStagedProfileResultType:
      description: Information about the staged profile after processing.
      properties:
        hotelId:
          description: Hotel Code for the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        stageStatus:
          description: The resulting profile status after processing the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        result:
          description: Processing/Rematching result for the staged profile.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    stagedReasonsType:
      description: This is used to fetch staged profiles based on the reason why it
        got staged.
      properties:
        stagedProfileReasonsType:
          $ref: '#/components/schemas/stagedReasonType'
      type: object
    stagedReasonType:
      description: Reasons why the profile got staged. InvalidExpirationDate indicates
        the membership expiration date is not matching with OPERA system. InvalidEnrollmentCode
        indicates the membership enrollment code is not matching with opera. NameChange
        indicates last name or first name is not matching with OPERA
      enum:
      - InvalidEnrollmentCode
      - EmptyEnrollmentCode
      - NameChange
      - InvalidExpirationDate
      - EmptyExpirationDate
      - EmptyMembershipLevel
      - InvalidMembershipLevel
      - DuplicateMembership
      type: string
    stagedProfiles:
      description: Response object for the staged profiles.
      properties:
        stagedProfiles:
          $ref: '#/components/schemas/stagedProfileSummariesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileCriteria:
      properties:
        stagedProfile:
          $ref: '#/components/schemas/processStagedProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    processedStagedProfile:
      properties:
        processResult:
          $ref: '#/components/schemas/processStagedProfileResultType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileDistributionConditionGroupType:
      properties:
        condition:
          items:
            $ref: '#/components/schemas/profileDistributionConditionType'
          maxItems: 4000
          type: array
        conditionGroup:
          items:
            $ref: '#/components/schemas/profileDistributionConditionGroupType'
          maxItems: 4000
          type: array
        logicalOperator:
          $ref: '#/components/schemas/logicalOperatorType'
      type: object
    logicalOperatorType:
      enum:
      - And
      - Or
      type: string
    profileDistributionConditionType:
      properties:
        leftExpression:
          $ref: '#/components/schemas/profileDistributionExpressionFieldType'
        operator:
          $ref: '#/components/schemas/profileDistributionExpressionOperatorType'
        rightExpression:
          $ref: '#/components/schemas/profileDistributionExpressionParameterType'
        logicalOperator:
          $ref: '#/components/schemas/logicalOperatorType'
      type: object
    profileDistributionExpressionFieldType:
      properties:
        fieldName:
          $ref: '#/components/schemas/profileDistributionFieldNameType'
        fieldDescription:
          maxLength: 2000
          minLength: 0
          type: string
        tableName:
          maxLength: 40
          minLength: 0
          type: string
        virtual:
          type: boolean
        dataType:
          maxLength: 40
          minLength: 0
          type: string
        lovSelected:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileDistributionFieldNameType:
      properties:
        field:
          $ref: '#/components/schemas/fieldType'
      type: object
    fieldType:
      enum:
      - NameId
      type: string
    profileDistributionExpressionParameterType:
      properties:
        parameter:
          items:
            maxLength: 32000
            minLength: 0
            type: string
          maxItems: 3
          type: array
        functionIdOne:
          type: number
        functionIdTwo:
          type: number
      type: object
    profileDistributionExpressionOperatorType:
      properties:
        operatorName:
          maxLength: 240
          minLength: 0
          type: string
        operatorDescription:
          maxLength: 400
          minLength: 0
          type: string
        parameterSize:
          type: number
      type: object
    membershipTransactionsSummaryCollection:
      description: Response object for fetching multiple memberships transactions
        summaries.
      properties:
        membershipTransactionsSummaryCollection:
          description: A collection of membership points exceptions.
          items:
            $ref: '#/components/schemas/membershipTransactionsSummaryType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionsSummaryType:
      description: "Details of membership transaction like Details, Summary, point,\
        \ etc."
      properties:
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        transactionsSummary:
          $ref: '#/components/schemas/memberTransactionSummaryType'
        recentTransactionsSummary:
          $ref: '#/components/schemas/memberTransactionRecentSummaryType'
        pointsSummary:
          $ref: '#/components/schemas/memberPointsSummaryType'
      type: object
    stayDailyRatesType:
      properties:
        transactionDate:
          description: Date on which the transaction was done.
          format: date
          type: string
        bookedRoomType:
          description: Specifies the type of room booked.
          type: string
        currencyCode:
          description: Specifies the code assigned to the currency.
          type: string
        pseudoRoom:
          description: Specifies if the room is a pseudo room.
          type: boolean
        marketCode:
          description: Specifies the market code.
          type: string
        rateCode:
          description: Specifies the rate code.
          type: string
        rateAmount:
          description: Specifies the amount added to a particular rate code.
          type: number
        roomId:
          description: Describes the room id of the room owner.
          type: string
        roomType:
          description: Describes the type of the room.
          type: string
      required:
      - rateCode
      - transactionDate
      type: object
    stayMembershipsType:
      properties:
        membershipNumber:
          description: A unique value given to a membership.
          type: string
        membershipType:
          description: Specifies the type of membership.
          type: string
      type: object
    stayProfilesType:
      properties:
        primary:
          description: Checks if the profile is primary.
          type: boolean
        nameId:
          description: Specifies the unique id that is assigned to a profile.
          type: number
        pmsNameId:
          description: Specifies the pms id that is assigned to a profile.
          type: string
        profileRole:
          description: Describes the role associated with the profile.
          type: string
      required:
      - profileRole
      type: object
    stayRecordsType:
      properties:
        UDFC01:
          description: Describes the user defined field 01
          type: string
        UDFC02:
          description: Describes the user defined field 02
          type: string
        UDFC03:
          description: Describes the user defined field 03
          type: string
        UDFC04:
          description: Describes the user defined field 04
          type: string
        UDFC05:
          description: Describes the user defined field 05
          type: string
        UDFC06:
          description: Describes the user defined field 06
          type: string
        UDFC07:
          description: Describes the user defined field 07
          type: string
        UDFC08:
          description: Describes the user defined field 08
          type: string
        UDFC09:
          description: Describes the user defined field 09
          type: string
        UDFC10:
          description: Describes the user defined field 10
          type: string
        UDFD01:
          description: Describes the user defined field 01
          format: date
          type: string
        UDFD02:
          description: Describes the user defined field 02
          format: date
          type: string
        UDFD03:
          description: Describes the user defined field 03
          format: date
          type: string
        UDFD04:
          description: Describes the user defined field 04
          format: date
          type: string
        UDFD05:
          description: Describes the user defined field 05
          format: date
          type: string
        UDFN01:
          description: Describes the user defined field 10
          type: number
        UDFN02:
          description: Describes the user defined field 10
          type: number
        UDFN03:
          description: Describes the user defined field 10
          type: number
        UDFN04:
          description: Describes the user defined field 10
          type: number
        UDFN05:
          description: Describes the user defined field 10
          type: number
        adults:
          description: Describes the number of adults
          type: number
        arrivalDate:
          description: Specifies the date of arrival
          format: date
          type: string
        baseRateAmount:
          description: Specifies the base rate amount
          type: number
        baseRateCode:
          description: Specifies the base rate code
          type: string
        baseRateCurrencyCode:
          description: Specifies the currency code of the base rate
          type: string
        blockCode:
          description: Specifies the block code
          type: string
        bookedRoomType:
          description: Specifies the type of room booked.
          type: string
        bookingDate:
          description: Specifies the date of booking.
          format: date
          type: string
        cancellationDate:
          description: Specifies the date of cancellation
          format: date
          type: string
        channel:
          description: Specifies the channel
          type: string
        children:
          description: specifies the number of children
          type: number
        companyId:
          description: Specifies the id assigned to the company
          type: string
        confirmationLegNumber:
          description: Specifies the confirmation leg number
          type: number
        confirmationNumber:
          description: Specifies the confirmation number
          type: string
        currencyCode:
          description: Specifies the currency code
          type: string
        departureDate:
          description: Specifies the date of departure
          format: date
          type: string
        exchangeRate:
          description: Specifies the exchange rate
          type: number
        externalReservationId:
          description: Describes the id assigned to an external reservation
          type: string
        groupId:
          description: Specifies the id assigned to a group
          type: string
        guestNameId:
          description: Specifies the id assigned to a guest name
          type: string
        complimentary:
          description: Describes if complimentary or not
          type: boolean
        primaryShare:
          description: Describes if it is a primary share
          type: boolean
        miscellaneousId:
          description: Specifies the miscellaneous id
          type: string
        paymentMethod:
          description: Specifies the payment method used
          type: string
        posCode:
          description: Specifies the postal code
          type: string
        promotionCode:
          description: Specifies the promotion code
          type: string
        reservationStatus:
          description: "Describes the reservation status ie CANCELLED, CHECKED OUT,\
            \ ARRIVAL etc"
          type: string
        reservationExpectedArrivalTime:
          description: Specifies the expected arrival time of the reservation
          format: date
          type: string
        reservationExpectedDepartureTime:
          description: Specifies the expected departure time of the reservation
          format: date
          type: string
        reservationInsertSource:
          description: Specifies the insert source for the reservation
          type: string
        reservationInsertSourceType:
          description: Specifies the insert source type for the reservation
          type: string
        roomId:
          description: Describes the room id of the room owner.
          type: string
        roomRevenue:
          description: Specifies the revenue for the room.
          type: number
        roomType:
          description: Describes the type of the room.
          type: string
        shareId:
          description: Specifies the share id.
          type: string
        sourceCode:
          description: Specifies the source code.
          type: string
        sourceId:
          description: Specifies the source id.
          type: string
        stageStatus:
          description: Specifies the stage status.
          type: string
        stageSuspenseReason:
          description: Specifies the stage suspense reason.
          type: string
        totalRevenue:
          description: Specifies the total revenue.
          type: number
        travelAgentId:
          description: Specifies the travel agent id
          type: string
      type: object
    stayRevenuesDetailsType:
      properties:
        folioView:
          description: ""
          type: string
        revenueAmount:
          description: Specifies the amount of revenue.
          type: number
        stayRevenues:
          items:
            $ref: '#/components/schemas/stayRevenuesType'
          type: array
      type: object
    stayRevenuesType:
      properties:
        revenueAmount:
          description: Specifies the amount of revenue.
          type: number
        revenueBucketCode:
          description: Specifies the bucket code to which the revenue belongs.
          type: string
        transactionDate:
          description: Date on which the transaction was done.
          format: date
          type: string
      required:
      - revenueBucketCode
      - transactionDate
      type: object
    stayRecord:
      properties:
        hotelId:
          description: Specifies the property name
          type: string
        stayDailyRates:
          items:
            $ref: '#/components/schemas/stayDailyRatesType'
          maxItems: 4000
          type: array
        stayMemberships:
          items:
            $ref: '#/components/schemas/stayMembershipsType'
          maxItems: 4000
          type: array
        stayProfiles:
          items:
            $ref: '#/components/schemas/stayProfilesType'
          maxItems: 4000
          type: array
        stayRecordsList:
          items:
            $ref: '#/components/schemas/stayRecordsType'
          maxItems: 4000
          type: array
        stayRevenuesDetails:
          items:
            $ref: '#/components/schemas/stayRevenuesDetailsType'
          maxItems: 4000
          type: array
      type: object
    stayRecordDetails:
      description: Complex type that contains stay record details
      properties:
        stayRecord:
          $ref: '#/components/schemas/stayRecord'
      type: object
    flexFieldValues:
      description: Request object for flex fields values.
      properties:
        flexFieldInfo:
          $ref: '#/components/schemas/flexFieldValueType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    flexFieldValueType:
      description: Provides the details of a flex field values
      properties:
        code:
          description: Flex field code
          maxLength: 20
          minLength: 0
          type: string
        flexFieldValue:
          description: 'value of the Dynamic Field '
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 1
          type: string
      type: object
    flexFieldsResponse:
      description: Response object for flex fields.
      properties:
        flexFieldValues:
          description: List of flex fields.
          items:
            $ref: '#/components/schemas/flexFieldValueType'
          maxItems: 100
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    memberPointsToExpireCollection:
      description: Response object for fetching member points to expire information.
      properties:
        memberPointsToExpireCollection:
          description: List of of member points to expire.
          items:
            $ref: '#/components/schemas/memberPointsToExpireCollectionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberPointsToExpireCollectionType:
      description: Membership points to expire with the membership details to differentiate.
      properties:
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        memberPointsToExpireListType:
          description: List of of member points to expire.
          items:
            $ref: '#/components/schemas/memberPointsToExpireListType'
          maxItems: 4000
          type: array
      type: object
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    operaVersion:
      description: Response for Ping operation.
      properties:
        operaVersion:
          description: Current Opera Version Number
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileTransactionsType:
      description: Transaction related to the Profile.
      properties:
        transactionDate:
          description: Stay Record or Membership Transaction Date.
          format: date
          type: string
        transactionType:
          description: Stay Record or Membership Transaction Type.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Resort of the transaction.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        pointsCalculated:
          description: Flag to indicate if points are calculated.
          type: boolean
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        membershipType:
          description: The type of membership.
          maxLength: 20
          minLength: 0
          type: string
        cardNumber:
          description: The membership card number.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: The level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        awardPoints:
          description: Award points for the transactions.
          type: integer
        tierNightPoints:
          description: Tier Night points for the transactions.
          type: integer
        tierStayPoints:
          description: Tier Stay points for the transactions.
          type: integer
        tierRevenuePoints:
          description: Tier Revenue points for the transactions.
          type: integer
        pointsCreditDate:
          description: Date when points were created.
          format: date
          type: string
        stayRecordId:
          description: Stay Record Id of the transaction.
          type: string
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    profileTransactions:
      description: Response of the WS operation FetchProfileTransactions.
      properties:
        profileTransactions:
          description: Transactions related to the Profile.
          items:
            $ref: '#/components/schemas/profileTransactionsType'
          maxItems: 100
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    suspendedStayRevenueType:
      description: Suspended Stay Revenue information.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Transaction date of the revenue.
          format: date
          type: string
        revenueType:
          description: Indicates the type of revenue.
          maxLength: 20
          minLength: 0
          type: string
        amount:
          description: Revenue amount.
          type: number
      type: object
    suspendedStayErrorType:
      description: Suspended Stay Error information.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
        errorType:
          description: Indicates the error type.
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          description: Indicates the description of the error.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    suspendedStayErrorsType:
      description: Collection of Suspended Stay Error information.
      properties:
        suspendedStays:
          description: Suspended Stay Error information.
          items:
            $ref: '#/components/schemas/suspendedStayErrorType'
          maxItems: 4000
          type: array
      type: object
    suspendedStayDailyRateType:
      description: Suspended Stay Rate information.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Transaction date of the rate.
          format: date
          type: string
        rateCode:
          description: Rate code used for the stay.
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          description: Market Code of the stay.
          maxLength: 20
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    suspendedStayMembershipType:
      description: Suspended Stay Membership information.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership Program Code or Membership Type.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Membership Card Number.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    suspendedStayType:
      description: Suspended Stay information.
      properties:
        hotelId:
          description: Hotel code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        externalConfirmationNo:
          description: External Confirmation number of the reservation on PMS side.
          maxLength: 50
          minLength: 0
          type: string
        reservationStatus:
          description: Reservation status.
          maxLength: 20
          minLength: 0
          type: string
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
        importDate:
          description: Date when the Suspended Stay record was created or imported.
          format: date
          type: string
        confirmationNo:
          description: Confirmation number of the reservation on central side.
          maxLength: 50
          minLength: 0
          type: string
        roomType:
          description: Room type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room Type used for the Rate calculation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        bookingMedium:
          description: Classifies the medium(Channel field on reservation screen)
            through which the reservation is made.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        arrivalDate:
          description: Date of arrival.
          format: date
          type: string
        departureDate:
          description: Date of departure.
          format: date
          type: string
        adults:
          description: Number of adults on the reservation.
          type: number
        children:
          description: Number of children on the reservation.
          type: number
        cancellationDate:
          description: Date of cancellation.
          format: date
          type: string
        rateCode:
          description: Rate Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        rateCurrencyCode:
          description: Currency code of the rate.
          maxLength: 3
          minLength: 3
          type: string
        rateAmount:
          description: Rate amount.
          type: number
        complimentary:
          description: Indicates if the reservation is complimentary.
          type: boolean
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        stayStatus:
          description: Status of the stay.
          maxLength: 20
          minLength: 0
          type: string
        fullGuestName:
          description: Full display Name of guest profile.
          maxLength: 200
          minLength: 0
          type: string
        fullCompanyName:
          description: Full display Name of company profile.
          maxLength: 200
          minLength: 0
          type: string
        fullTAName:
          description: Full display Name of Travel Agent profile.
          maxLength: 200
          minLength: 0
          type: string
        fullSourceName:
          description: Full display Name of Source profile.
          maxLength: 200
          minLength: 0
          type: string
        fullGroupName:
          description: Full display Name of Group profile.
          maxLength: 200
          minLength: 0
          type: string
        posCode:
          description: Point of Sales Code.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          description: Identifier of the Interface.
          maxLength: 80
          minLength: 0
          type: string
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        suspendedStayRevenues:
          items:
            $ref: '#/components/schemas/suspendedStayRevenueType'
          maxItems: 4000
          type: array
        suspendedStayErrors:
          items:
            $ref: '#/components/schemas/suspendedStayErrorType'
          maxItems: 4000
          type: array
        suspendedStayDailyRates:
          items:
            $ref: '#/components/schemas/suspendedStayDailyRateType'
          maxItems: 4000
          type: array
        suspendedStayMemberships:
          items:
            $ref: '#/components/schemas/suspendedStayMembershipType'
          maxItems: 4000
          type: array
      type: object
    suspendedStaySummaryType:
      description: Collection of Suspended Stay information.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          description: Reservation status.
          maxLength: 20
          minLength: 0
          type: string
        externalConfirmationNo:
          description: External Confirmation number of the reservation on PMS side.
          maxLength: 50
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        arrivalDate:
          description: Date of arrival.
          format: date
          type: string
        departureDate:
          description: Date of departure.
          format: date
          type: string
        stayStatus:
          description: Status of the stay.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    suspendedStaySummariesType:
      description: A complex type containing the collection of Suspended Stay Summaries.
      properties:
        suspendedStaySummaries:
          description: A collection of Suspended Stay Summaries.
          items:
            $ref: '#/components/schemas/suspendedStaySummaryType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    suspendedStayDetailType:
      description: Suspended Stay Record ID detail about a Suspended Stay.
      properties:
        suspendedStayRecordId:
          description: Suspended Stay Record ID.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    suspendedStayDetailsType:
      description: Suspended Stay Record ID details about a Suspended Stay.
      properties:
        suspendedStayRecordId:
          description: List of Suspended Stay Record IDs.
          items:
            $ref: '#/components/schemas/suspendedStayDetailType'
          maxItems: 4000
          type: array
      type: object
    suspendedStayDetails:
      description: Request object for process suspended stays.
      properties:
        suspendedStayDetailsInfo:
          $ref: '#/components/schemas/suspendedStayDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipCardHistoryType:
      description: Contains details of the card history of a member.
      properties:
        membershipCardNo:
          description: Membership Card Number
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          description: Membership Program Code or Membership Type
          maxLength: 50
          minLength: 0
          type: string
      type: object
    memberCardHistoryList:
      description: Response object for member card history.
      properties:
        memberCardHistoryList:
          description: Contains list of card history of a member.
          items:
            $ref: '#/components/schemas/membershipCardHistoryType'
          maxItems: 500
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stayRecordDetail:
      description: "Stay Record details for a single stay record including Revenues,\
        \ Daily Rates and UDFs."
      properties:
        stayDetail:
          $ref: '#/components/schemas/stayDetailType'
        revenue:
          description: Revenue Details for the stay record.
          items:
            $ref: '#/components/schemas/membershipTransactionRevenueType'
          maxItems: 200
          type: array
        rate:
          description: Rate Details for the stay record.
          items:
            $ref: '#/components/schemas/membershipTransactionRateType'
          maxItems: 200
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stayMembershipDetails:
      description: Complex type that contains stay membership details and instructions
        to attach or replace.
      properties:
        newMembershipCardNo:
          description: Specifies the Card Number of new membership being attached.
          type: string
        newMembershipType:
          description: Specifies the type of new membership being attached.
          type: string
        oldMembershipCardNo:
          description: Specifies the Card Number of old membership that should be
            replaced.
          type: string
        oldMembershipType:
          description: Specifies the type of old membership that should be replaced.
          type: string
        stayRecordId:
          description: Stay Record ID
          type: number
        attachMode:
          $ref: '#/components/schemas/stayMembershipAttachMode'
      required:
      - attachMode
      type: object
    stayMembershipAttachMode:
      description: Flag that indicates if membership should be attached or existing
        membership should be replaced.
      enum:
      - ADD
      - REPLACE
      type: string
    putProfileByExtId_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          profileIdList:
          - type: Profile
            idContext: OPERA
            id: "3149001"
          profileDetails:
            customer:
              personName:
              - givenName: William
                middleName: D
                surname: Smith
                nameSuffix: "10"
                nameTitle: Mr.....
                envelopeGreeting: Hello Mr. Smith
                salutation: Mr. Smith
                nameType: PRIMARY
                language: E
              citizenCountry:
                value: United States of America
                code: USA
              identifications:
                identificationInfo:
                - identification:
                    idType: PASSPORT
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    expirationDate: 2019-11-29
                    registeredProperty: HOTEL1
                    primaryInd: true
              language: E
              nationality: US
              nationalityDescription: USA
              vipStatus: "006"
              vipDescription: "VVIP: VV important person"
              privateProfile: false
            company:
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              businessTitle: Developer
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              commissionCode: ""
              creditRating: ""
              corporateIdType: ""
              vipStatus: "006"
              vipDescription: Important
              blacklist: false
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  cityName: Redwood Shores
                  postalCode: "94065"
                  cityExtension: a
                  state: CA
                  country:
                    value: USA
                    code: US
                  language: E
                  type: Office
                  typeDescription: This is office address.
                  primaryInd: false
                  barCode: ""
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  lastModifierId: "12883"
            territory: North America
            telephones:
              telephoneInfo:
              - telephone:
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  phoneNumber: +1 415 555 0100
                  extension: x25
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  lastModifierId: "12883"
            emails:
              emailInfo:
              - email:
                  emailAddress: eg@example.com
                  type: EMAIL
                  typeDescription: Email Address
                  emailFormat: EMAIL
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  lastModifierId: "12883"
            comments:
              commentInfo:
              - comment:
                  text:
                    value: Please add comments here.
                    language: E
                  commentTitle: Discount
                  type: GEN
                  typeDescription: Comments for discount.
                  internal: false
                  confidential: false
                  overrideInternal: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            statusCode: ACTIVE
            registeredProperty: HOTEL1
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            lastModifierId: "12883"
            markForHistory: false
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            rel: guestProfile
            templated: false
            method: POST
            operationId: postGuestProfile
        type: object
    postProfile_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          profileIdList:
          - type: Profile
            idContext: OPERA
            id: "3149001"
          profileDetails:
            customer:
              personName:
              - givenName: William
                middleName: D
                surname: Smith
                nameSuffix: "10"
                nameTitle: Mr.....
                envelopeGreeting: Hello Mr. Smith
                salutation: Mr. Smith
                nameType: PRIMARY
                language: E
              citizenCountry:
                value: United States of America
                code: USA
              identifications:
                identificationInfo:
                - identification:
                    idType: PASSPORT
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    expirationDate: 2019-11-29
                    registeredProperty: HOTEL1
                    primaryInd: true
              language: E
              nationality: US
              nationalityDescription: USA
              vipStatus: "006"
              vipDescription: "VVIP: Important person (Corporate office only)"
              privateProfile: false
            company:
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              businessTitle: Developer
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              commissionCode: ""
              creditRating: ""
              corporateIdType: ""
              vipStatus: "006"
              vipDescription: Important
              blacklist: false
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  cityName: Redwood Shores
                  postalCode: "94065"
                  cityExtension: a
                  state: CA
                  country:
                    value: USA
                    code: US
                  language: E
                  type: Office
                  typeDescription: Office address use
                  primaryInd: false
                  barCode: ""
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  lastModifierId: "12000"
            territory: North America
            telephones:
              telephoneInfo:
              - telephone:
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  phoneNumber: +1 415 555 0100
                  extension: x25
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  lastModifierId: "12883"
            emails:
              emailInfo:
              - email:
                  emailAddress: eg@example.com
                  type: EMAIL
                  typeDescription: Email Address
                  emailFormat: EMAIL
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  lastModifierId: "12883"
            comments:
              commentInfo:
              - comment:
                  text:
                    value: Please provide discount.
                    language: E
                  commentTitle: Discount
                  type: GEN
                  typeDescription: Comments for discount.
                  internal: false
                  confidential: false
                  overrideInternal: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            statusCode: ACTIVE
            registeredProperty: HOTEL1
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            lastModifierId: "12883"
            markForHistory: false
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            rel: guestProfile
            templated: false
            method: POST
            operationId: postGuestProfile
        type: object
    storeEmail_request:
      allOf:
      - $ref: '#/components/schemas/emailMessageType'
      - example:
          blockId: "13701"
          fromAddress: eg@example.com
          toAddress:
          - Example1@email.com
          subject: First Email Subject
          emailBody: base 64 encoded email body should be placed here
          messageId: "12345"
          emailReceiveDate: 2020-07-15T17:16:47.617Z
          hasAttachment: true
        type: object
    changeProfileOwners_request:
      allOf:
      - $ref: '#/components/schemas/profileOwners'
      - example:
          criteria:
            profileIdList:
              id: 1017420
              type: Profile
            owners:
            - ownerCode: MLW
              profileId:
                idContext: OPERA
                id: 1017420
                type: Profile
              hotel:
                code: HOTEL1
              primary: false
        type: object
    putProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationshipToBeChanged'
      - example:
          relationship:
            changeRelationship:
              changeProfileID:
                id: "3261507"
                type: Guest
              sourceRelation: FRIEND1
              sourceRelationDescription: Friends
              targetRelation: FRIEND2
              targetRelationDescription: Friends 2
            primary: true
            statusCode: Active
            targetProfileType: Guest
            sourceRelation: EMPLOYEE
            sourceRelationDescription: EMPLOYEE
            targetRelation: EMPLOYER
            targetRelationDescription: EMPLOYER
            relationshipID: "28026"
            profileType: Guest
        type: object
    postProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationship'
      - example:
          relationship:
            primary: "true"
            statusCode: Active
            targetProfileType: Guest
            sourceRelation: FAMILY MEMBER
            sourceRelationDescription: FAMILY MEMBER
            targetRelation: FAMILY HEAD
            targetRelationDescription: FAMILY HEAD
            profileType: Guest
        type: object
    mergeProfiles_request:
      allOf:
      - $ref: '#/components/schemas/profileToBeMerged'
      - example:
          victimProfileId:
            id: "1087330"
        type: object
    companyProfileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_preferenceCollection:
      description: List of customer preferences.
      properties:
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_keywords:
      description: List of customer keywords.
      properties:
        keyword:
          description: Collection of keywords attached to the profile.
          items:
            $ref: '#/components/schemas/keywordType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_negotiatedRates:
      description: List of profile negotiated rates.
      properties:
        negotiatedRate:
          description: Collection of Detailed information on profile negotiated rates.
          items:
            $ref: '#/components/schemas/negotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_gdsNegotiatedRates:
      description: List of channel negotiated rates that this profile has been assigned
        to.
      properties:
        gdsNegotiatedRate:
          description: Collection of Detailed information on channel negotiated rates
            for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    customerType_identifications:
      description: List of identification of the customer.
      properties:
        identificationInfo:
          description: Collection of detailed information on the identification of
            the customer.
          items:
            $ref: '#/components/schemas/identificationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    eCertificateInfoType_hotels:
      description: Hotel to which certificate is attached to.
      properties:
        code:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        scope:
          $ref: '#/components/schemas/eCertificateScopeType'
      type: object
    profileSubscriptionType_profileInfo:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileEnrollmentType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_preferenceCollection:
      description: List of customer preferences.
      properties:
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileEnrollmentType_roomOwnershipsList:
      description: Room Ownership records.
      properties:
        roomOwnershipInfo:
          description: Collection of Detailed information on Room Ownership records.
          items:
            $ref: '#/components/schemas/roomOwnershipType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
      type: object
    folioTextsType_inner:
      properties:
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
        row:
          description: Row number of the additional text.
          type: integer
      type: object
    profileSummaryType_formerName:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    aRAccountType_lastReminderInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
        historyExists:
          description: Indicates that reminders history exists.
          type: boolean
      type: object
    aRAccountType_lastStatementInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        statementNo:
          description: "When using Statement Numbering, a unique number is associated\
            \ to the Statement."
          type: integer
        historyExists:
          description: Indicates that statement history exists.
          type: boolean
      type: object
    profilesType_profileInfo_inner:
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileType'
        chainCode:
          description: Chain code associated with the profile.
          maxLength: 20
          minLength: 0
          type: string
        allowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
      type: object
x-original-swagger-version: "2.0"
