openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Customer Relationship Management (profile) functionality\
    \ in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including\
    \ Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile\
    \ can store and display a wide range of information about the guest, company,\
    \ travel agent etc., depending upon the type of profile.  For example, a guest\
    \ profile can store the guest name, address, contact information, details on billing,\
    \ membership benefits, preferences and much more.  All profiles in OPERA when\
    \ created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br\
    \ /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document\
    \ and all content within is available under the Universal Permissive License v\
    \ 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or\
    \ its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Customer Relationship Management API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /crm/v1
tags:
- description: "The Profile APIs allow you to view, create, update, and delete profiles\
    \ in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID\
    \ is assigned.\_ Use this profileID to retrieve and update details relating to\
    \ that profile.   The resource 'Companies' includes group, source, company and\
    \ travel agent profile types.\_  The resource 'Guests' includes individual and\
    \ contact profile types."
  name: Profile
- description: "Profiles have many Lists of Values, storing the available options\
    \ a user can select when updating a profile.\_ This module allows you to get available\
    \ ListOfValues for Profile Preferences and AR Addresses on a profile."
  name: ProfileLOV
paths:
  /companies:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postCompanyProfile</p>"
      operationId: postCompanyProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCompanyProfile_request'
        description: Request object for creation of company profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates creation of a company/agent/group/source profile
        in OPERA.
      tags:
      - Profile
      x-codegen-request-body-name: company
  /companies/{corporateID}:
    get:
      description: "Use this to retrieve a specific Company, Travel Agent, Group or\
        \ Source profile. You must know the corporate ID of the profile for the request\
        \ API. <p><strong>OperationId:</strong>getCompanyProfile</p>"
      operationId: getCompanyProfile
      parameters:
      - description: Unique OPERA Corporate ID used to find company/agent/group/source
          profile in OPERA.
        in: path
        name: corporateID
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/company'
            application/json:
              example:
                companyIdList:
                - id: "329620"
                  type: Profile
                - id: "222572"
                  type: CorporateId
                companyDetails:
                  company:
                    companyName: "Example Corporation, Ltd."
                    iATAInfo: {}
                  profileAccessType:
                    hotelId: HOTEL1
                    sharedLevel: Property
                  profileRestrictions:
                    restricted: false
                  profileType: Company
                  statusCode: Active
                  registeredProperty: HOTEL1
                  createDateTime: 2019-06-26 16:14:41.0
                  creatorId: BEN@HOTEL1
                  lastModifyDateTime: 2019-06-26 16:14:41.0
                  lastModifierId: BEN@HOTEL1
                  markForHistory: false
          description: Response object for fetching unique company profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompanyProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get company profile by corporate ID
      tags:
      - Profile
  /externalSystems/{extSystemCode}/profiles/{profileExternalId}:
    get:
      description: "When a reservation is booked via an external system, you would\
        \ use this API to retrieve a reservation using the external ID in the request\
        \ <p><strong>OperationId:</strong>getProfileByExtId</p>"
      operationId: getProfileByExtId
      parameters:
      - description: External System's ID used to get the profile.
        in: path
        name: profileExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            county: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileByExtId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by external ID
      tags:
      - Profile
  /guests:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postGuestProfile</p>"
      operationId: postGuestProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postGuestProfile_request'
        description: Request object for creation of guest profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "Create a guest, contact or employee profile in OPERA"
      tags:
      - Profile
      x-codegen-request-body-name: guest
  /guests/{guestId}:
    get:
      description: "Use this API to retrieve all data stored for a guest Profile,\
        \ such as their address, phone number, preferences. You must already know\
        \ the guests Profile ID. If you don’t know the profile ID, first use the API\
        \ getGuests to find the profile ID. <p><strong>OperationId:</strong>getGuestProfile</p>"
      operationId: getGuestProfile
      parameters:
      - description: Unique OPERA internal ID used to find guest/contact/employee
          profile in OPERA.
        in: path
        name: guestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guest'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            county: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching unique guest profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GuestProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get guest profile by guest ID
      tags:
      - Profile
  /profileListOfValues/availableARAddresses:
    get:
      description: Use this API to fetch the available AR Addresses List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailableARAddresses</p>
      operationId: getAvailableARAddresses
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The property where the AR Account exists or is being created.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: The Account Number of the AR Account of the Profile.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availableARAddresses'
          description: Response to the request to fetch the available Accounts Receivables(AR)
            Addresses for a Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableARAddresses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get available AR Addresses '
      tags:
      - ProfileLOV
  /profileListOfValues/availablePreferences:
    get:
      description: Use this API to fetch the available preferences List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailablePreferences</p>
      operationId: getAvailablePreferences
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: Property for which preferences are to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Maximum records to be fetched.
        in: query
        name: maxFetchSize
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availablePreferences'
          description: A collection of preferences
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailablePreferences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get available preferences
      tags:
      - ProfileLOV
  /profiles:
    get:
      description: "Use this API when you want to search for a profile as part of\
        \ a booking process or to manage a profile data. The response will include\
        \ a list of profiles that exist in OPERA, based on your search criteria. \
        \ For example, you want to see if a profile for Mr David Smith exists - you\
        \ can search by various criteria, such as first name, last name, email.  The\
        \ response will include a list of any profiles that exist for Mr David Smith.\
        \  If a profile matches the criteria, and you want to get more details of\
        \ that profile, proceed to use getProfile with the profileId in the request.\
        \ Maximum response data limit is 1000 records, so use more query parameters\
        \ to narrow your results. This API is not designed to support sync between\
        \ two systems or initial upload of data.<p><strong>OperationId:</strong>getProfiles</p>"
      operationId: getProfiles
      parameters:
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: excludeInactive
        schema:
          type: boolean
      - description: "Hotel Code, It is used to filter hotel specific children to\
          \ this specific hotel code."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: includeHasHierarchyOnly
        schema:
          type: boolean
      - description: Include primary owners in the search.
        in: query
        name: includePrimaryOwnersOnly
        schema:
          type: boolean
      - description: Include purged profiles in the search.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: "When search type is PatronTrackingSystemMemberProfiles, the\
          \ FetchProfiles will return the Membership Number of the searched Membership\
          \ Type regardless of primary flag or sequence of the profile memberships."
        in: query
        name: searchType
        schema:
          enum:
          - PurgeableProfiles
          - Any
          - PatronTrackingSystemMemberProfiles
          type: string
      - description: When true response will return summary information otherwise
          detailed information.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - description: Search string to be used for super search.
        in: query
        name: searchString
        schema:
          type: string
      - description: Indicates whether to include Anonymized Profiles.
        in: query
        name: includeAnonymized
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        explode: true
        in: query
        name: profileType
        schema:
          items:
            enum:
            - Guest
            - Agent
            - Company
            - Group
            - Source
            - Employee
            - Hotel
            - Vendor
            - Contact
            - Purge
            - BusinessHeader
            - BillingAccount
            - Activity
            - Potential
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: corporateIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name or Company Name."
        in: query
        name: profileName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: incognitoName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: incognitoGivenName
        schema:
          type: string
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: city
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Keyword associated to the profile.
        in: query
        name: keyword
        schema:
          type: string
      - description: "Any communication method associated to the profile such as phone,\
          \ fax, eMail id."
        in: query
        name: communication
        schema:
          type: string
      - description: Membership number associated to the profile.
        in: query
        name: membership
        schema:
          type: string
      - description: Member Type of searching profile.
        in: query
        name: membershipType
        schema:
          type: string
      - explode: true
        in: query
        name: ownerCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership level associated to the profile.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Account Receivable associated to the profile.
        in: query
        name: aRNumber
        schema:
          type: string
      - description: Tax ID associated to the profile
        in: query
        name: taxID
        schema:
          type: string
      - description: Business/Market Segment associated to the profile.
        explode: true
        in: query
        name: businessSegment
        schema:
          items:
            type: string
          type: array
        style: form
      - description: When true indicates that only profiles with AR account fetched.
        in: query
        name: accountsReceivables
        schema:
          type: boolean
      - description: When true indicates that only profiles with client id are searched
          for.
        in: query
        name: corporateProfiles
        schema:
          type: boolean
      - description: When true indicates that only profiles with an Address Line 1
          and Country or at least one Communications Type will be displayed.
        in: query
        name: excludeIncompleteProfiles
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: negotiatedRates
        schema:
          type: boolean
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: relatedProfileExcludeInactive
        schema:
          type: boolean
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: realtedProfileIncludeHasHierarchyOnly
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: relatedProfileNegotiatedRates
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        in: query
        name: relatedProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: relatedProfileName
        schema:
          type: string
      - description: Indicates whether to exclude Protected Profiles.
        in: query
        name: protectedProfiles
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludedProfilesId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: excludedProfilesIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: excludedProfilesIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Any identification number associated with the profile such as\
          \ Passport Number, StateID."
        in: query
        name: identificationNo
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - NegotiatedRate
            - GdsNegotiatedRate
            - Comment
            - Membership
            - Preference
            - Keyword
            - HistoryReservation
            - FutureReservation
            - Relationship
            - Correspondence
            - Routing
            - Indicators
            - Profile
            - WebUserAccount
            - SalesInfo
            - ECertificate
            - Subscriptions
            - PrimaryAccountInfo
            - DeliveryMethods
            - RoomOwnership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique ID of the Filter used to filter profiles.
        in: query
        name: predefinedFilterId
        schema:
          type: number
      - description: Filter code.
        in: query
        name: predefinedFilterCode
        schema:
          type: string
      - explode: true
        in: query
        name: prioritieCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileSummaries'
          description: "Response object for fetching profiles. This object contains\
            \ profile primary details,profile summary details,master info list containing\
            \ code and description used as lookup for description."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Search for profile(s)
      tags:
      - Profile
    post:
      description: "When a profile doesn&apos;t already exist in OPERA, use this to\
        \ create a new profile. The response will provide the newly created profile&apos;s\
        \ OPERA ID in the Location header. There are many fields in postProfile defined\
        \ by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully\
        \ to use postProfile.<p><strong>OperationId:</strong>postProfile</p>"
      operationId: postProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfile_request'
        description: Request object for creation of profiles. This object contains
          profile details with unique identifiers for each profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a profile
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/{profileId}:
    delete:
      description: "Use deleteProfile to inactivate and remove a profile from OPERA.\
        \ The profile will stay in the Database, until a nightly purge process is\
        \ run to remove profile details from the OPERA database. <p><strong>OperationId:</strong>deleteProfile</p>"
      operationId: deleteProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Forget or delete a profile by ID
      tags:
      - Profile
    get:
      description: "Use this API to retrieve a specific profile&apos;s detail information\
        \ using OPERA&apos;s profileId. You can retrieve any type of profile including\
        \ guest, travel agent, company, source, group, or contact. If you do not know\
        \ OPERA profileID, use getProfiles or getProfileByExtId API first to get OPERA\
        \ profileId.<p><strong>OperationId:</strong>getProfile</p>"
      operationId: getProfile
      parameters:
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                profiles:
                  profileInfo:
                  - profileIdList:
                    - type: ""
                      idContext: a
                      id: a
                    profile:
                      customer:
                        personName:
                        - namePrefix: a
                          givenName: Thomas
                          middleName: B
                          surname: Smith
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          envelopeGreeting: ""
                          salutation: ""
                          nameType: PRIMARY
                          language: E
                        anonymization:
                          anonymizationStatus: REQUESTED
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                        citizenCountry:
                          name: United States of America
                          code: US
                        identifications:
                          identificationInfo:
                          - identification:
                              idType: PASSPORT
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              expirationDate: 2019-11-29
                              registeredProperty: ""
                              primaryInd: false
                              orderSequence: -100000000
                        profession: Engineer
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        birthCountry:
                          name: United States of America
                          code: US
                        businessTitle: Dr
                        gender: MALE
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        customerValue: a
                        creditRating: ""
                        vipStatus: "2"
                        vipDescription: Gold
                        birthPlace: New York
                        privateProfile: false
                        blacklist: false
                      company:
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        alternateName: a
                        alternateLanguage: E
                        businessLocale: a
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        businessTitle: a
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        commissionCode: ""
                        creditRating: ""
                        corporateIdType: ""
                        vipStatus: "2"
                        vipDescription: Gold VIP
                        blacklist: false
                      profileImage:
                        language: ""
                        imageSet: a
                        sequenceId: -100000000
                        imageStyle: FULL
                        imageType: a
                        hotelCode: ""
                        imageURL: a
                        description: a
                        imageOrder: -100000000
                        website: a
                      addresses:
                        addressInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          address:
                            addressLine:
                            - 500 Oracle Parkway
                            cityName: Redwood Shores
                            postalCode: "94065"
                            cityExtension: a
                            county: a
                            state: CA
                            country:
                              name: United States of America
                              code: US
                            language: E
                            type: ""
                            typeDescription: ""
                            primaryInd: false
                            barCode: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            lastModifierId: a
                      telephones:
                        telephoneInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          telephone:
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            phoneNumber: +1 415 555 0100
                            extension: "2"
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            lastModifierId: "1234"
                      emails:
                        emailInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          email:
                            emailAddress: eg@example.com
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                            emailFormat: HTML
                            primaryInd: false
                            orderSequence: -100000000
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            lastModifierId: "1232"
                      comments:
                        commentInfo:
                        - uniqueId:
                            type: ""
                            idContext: a
                            id: a
                          comment:
                            text:
                              value: ""
                              language: ""
                            commentTitle: a
                            notificationLocation: ""
                            type: ""
                            typeDescription: a
                            internal: false
                            confidential: false
                            overrideInternal: false
                            protectDescription: false
                            hotelCode: ""
                            actionType: ""
                            actionDate: 0101-01-01
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            lastModifierId: a
                      profileMemberships:
                        profileMembership:
                        - comment:
                            text:
                              value: ""
                              language: ""
                          newMembershipId: ""
                          nameOnCard: Thomas Smith
                          programDescription: Hotel Plus Membership
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipClass: MEM
                          earningPreference: POINTS
                          inactive: false
                          benefits:
                          - code: ""
                            message: a
                            inactive: false
                          tierAdministration: DISABLED
                          downgrade: GRACE
                          reIssueNewCard: PENDING
                          excludeFromBatch: false
                          upgradeDescription: a
                          downgradeDescription: a
                          rating: ""
                          membershipEnrollmentCode: ""
                          memberStatus: ""
                          currentPoints: -100000000
                          pointsLabel: a
                          enrollmentSource: ""
                          enrollmentResort: ""
                          preferredCard: false
                          membershipId: ""
                          membershipType: ""
                          primaryMembershipYn: a
                          membershipIdNo: -100000000
                          centralSetup: false
                          signupDate: 0101-01-01
                          effectiveDate: 0101-01-01
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          orderSequence: -100000000
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          lastModifierId: a
                      preferenceCollection:
                        preferenceType:
                        - preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          sequence: ""
                          maxQuantity: -100000000
                          availableQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          reservationPreference: false
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          lastModifierId: a
                      keywords:
                        keyword:
                        - keywordDetail:
                            newKeyword: a
                          type: ""
                          keyword: a
                      profileIndicators:
                      - indicatorName: a
                        count: -100000000
                      lastStayInfo:
                        lastVisit: 0101-01-01
                        lastRoom: ""
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        totalStay: -100000000
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      mailingActions:
                        mailingAction:
                        - code: ""
                          description: a
                        active: false
                        totalRows: -100000000
                      privacyInfo:
                        marketResearchParticipation: false
                        lastPrivacyPromptDate: 2000-01-01
                        infoFromThirdParty: false
                        autoEnrollLoyaltyProgram: false
                        allowPhone: false
                        allowSMS: false
                        allowEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInThirdParty: false
                        optInAutoEnrollmentMember: false
                        optInPhone: false
                        optInSms: false
                        optInEmail: false
                      userDefinedFields:
                        characterUDFs:
                        - name: a
                          value: a
                          altname: a
                        numericUDFs:
                        - name: a
                          value: -100000000
                          altname: a
                        dateUDFs:
                        - name: a
                          value: 0101-01-01
                          altname: a
                      localizationGuestType: a
                      profileType: GUEST
                      statusCode: ACTIVE
                      registeredProperty: ""
                      requestForHotel: ""
                      protectedBy: a
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastModifierId: "1200"
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      hasCommission: false
                  totalRows: -100000000
                links:
                - href: ""
                  rel: ""
                  method: GET
                  operationId: ""
                  templated: false
                  targetSchema: ""
                  title: ""
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by ID
      tags:
      - Profile
    put:
      description: "Use this to update a guests details on their profile.  You will\
        \ need to know the OPERA Profile ID to use this API, and you will also need\
        \ to know the List of Values for profile fields, such as AddressType, PhoneType,\
        \ Title.  <p><strong>OperationId:</strong>putProfile</p>"
      operationId: putProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfile_request'
        description: Request object for change/modification of profile details. This
          object contains modified profile details with unique identifiers for each
          profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
          description: "Response object for change/modification of profile details.\
            \ This object contains the profile details with unique identifiers for\
            \ each profile. Also Success,Warnings and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a profile by ID
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/{profileId}/emails:
    post:
      description: Use this API to create a new Email in OPERA.  You would need to
        know the Profile Id such as Contact or Account. <p><strong>OperationId:</strong>storeEmail</p>
      operationId: storeEmail
      parameters:
      - description: Profile ID linked to an Email.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/storeEmail_request'
        description: Request object for storing an email.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Email.
      tags:
      - Profile
      x-codegen-request-body-name: emailMessageType
  /profiles/{profileId}/relationships:
    get:
      description: ' <p><strong>OperationId:</strong>getProfileRelationships</p>'
      operationId: getProfileRelationships
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Type of Profile to be fetched from OPERA.
        in: query
        name: relationshipPrimaryProfile
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileRelationships'
            application/json:
              example:
                relationships:
                  relationship:
                  - relationshipProfile:
                      customerName: Smith
                      telephoneNumber: +10409000000
                      address:
                        addressLine:
                        - 500 Oracle Parkway
                        city: Redwood Shores
                        postalCode: "94065"
                        state: CA
                        country: US
                      emailAddress: example@test.com
                      ownerCode: ALL
                      profileIdList:
                      - id: "291397"
                        type: Profile
                      - id: "212315"
                        type: CorporateId
                      primary: true
                      profileStatus: Active
                      primaryOwnerCode: true
                      profileType: Guest
                    relationshipID: "144096"
                    sourceRelation: FAMILY MEMBER
                    sourceRelationDescription: FAMILY MEMBER
                    targetRelation: FAMILY HEAD
                    targetRelationDescription: FAMILY HEAD
                links: []
          description: Response object for fetching profile relationships.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileRelationships not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchProfileRelationships method provides the ability to retrieve a
        profile relationships for a profile based on the unique internal profile ID
        specified.
      tags:
      - Profile
  /profiles/{profileId}/stayHistory:
    get:
      description: ' <p><strong>OperationId:</strong>getStayHistory</p>'
      operationId: getStayHistory
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Providing this flag includes purged profiles in the result.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Simple type for instructions that can be used in requests for
          partial operations to fetch past and future reservation.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - HistoryReservation
            - FutureReservation
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileStayHistory'
            application/json:
              example:
                profileStayDetails:
                  reservationInfoList:
                    historyList:
                      reservationInfo:
                      - reservationIdList:
                        - id: "850348"
                          type: Reservation
                        - id: "1258752"
                          type: Confirmation
                        roomStay:
                          arrivalDate: 2020-07-02
                          departureDate: 2020-07-04
                          roomType: DLXQ
                          ratePlanCode: RACK
                          rateAmount:
                            amount: "100"
                          rateSuppressed: false
                        attachedProfiles: []
                        hotelId: HOTEL1
                        reservationStatus: NoShow
                        computedReservationStatus: NoShow
                      hasMore: false
                      totalResults: "1"
                    futureList:
                      hasMore: false
                      totalResults: "0"
                links: []
          description: Response object for showing stay history and future reservations
            of specific profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StayHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchStayHistory method provides stay history and future reservations
        of a profile based on the unique internal ID specified.
      tags:
      - Profile
  /profiles/{sourceProfileId}/relationships/{targetProfileId}:
    delete:
      description: ' <p><strong>OperationId:</strong>removeProfileRelationship</p>'
      operationId: removeProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates the type of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).
        in: query
        name: sourceRelation
        required: true
        schema:
          type: string
      - description: Indicates the type of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelation
        required: true
        schema:
          type: string
      - description: Indicates if this relationship is the primary relationship.
        in: query
        name: primary
        schema:
          type: boolean
      - description: Displays the description of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).This needs to be passed
          if the attribute primary is sent as true.
        in: query
        name: sourceRelationDescription
        schema:
          type: string
      - description: Displays the description of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelationDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "DeleteProfileRelationship method provides the ability to delete profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
    post:
      description: ' <p><strong>OperationId:</strong>postProfileRelationship</p>'
      operationId: postProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfileRelationship_request'
        description: Request object for creating profile relationship.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "CreateProfileRelationship method provides the ability to create profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationship
    put:
      description: ' <p><strong>OperationId:</strong>putProfileRelationship</p>'
      operationId: putProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileRelationship_request'
        description: Request object for changing profile relationship.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "ChangeProfileRelationship method provides the ability to update(delete\
        \ and add) profile relationship based on the request criteria of SourceProfileID\
        \ , TargetProfileID, To Be ChangedProfileID and SourceProfileRelationType\
        \ specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationshipToBeChanged
  /profiles/{survivorProfileId}/merges:
    post:
      description: "When you need to merge 2 guest profiles into 1 profile, use this\
        \ API. <p><strong>OperationId:</strong>mergeProfiles</p>"
      operationId: mergeProfiles
      parameters:
      - description: Original Profile ID to which profiles will be merged in OPERA.
        in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/mergeProfiles_request'
        description: Request object for merging profiles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Merge two profiles by ID
      tags:
      - Profile
      x-codegen-request-body-name: profileToBeMerged
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/characterUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/numericUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/dateUDFType'
          maxItems: 4000
          type: array
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    company:
      description: Request object for creation of company/agent/group/source profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        companyIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        companyDetails:
          $ref: '#/components/schemas/companyProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    companyProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/companyProfileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
      type: object
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    iATAInfoType:
      description: IATA Information of the profile.
      properties:
        iATACompany:
          description: IATA Company Detail.
          maxLength: 20
          minLength: 0
          type: string
        iATAConsortia:
          description: IATA Consortia.
          maxLength: 40
          minLength: 0
          type: string
        iATAValidationResult:
          description: IATA Validation Result.
          type: boolean
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        sequenceId:
          description: The image set sequence ID.
          type: integer
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        imageType:
          description: The image set type.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: The image set chain code.
          maxLength: 20
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
        imageOrder:
          description: The image set order.
          type: integer
        website:
          description: The image set website.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        value:
          description: Property Value
          type: string
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    profileMembershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
      type: object
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    preferenceTypeType:
      description: Preference details for the profile.
      properties:
        preference:
          description: Collection of Preferences for the profile.
          items:
            $ref: '#/components/schemas/preferenceType'
          maxItems: 4000
          type: array
        preferenceType:
          description: Preference group code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceTypeDescription:
          description: Preference group description.
          type: string
        sequence:
          description: Preference Sequence.
          type: string
        maxQuantity:
          description: Maximum quantity of preferences allowed per preference group.
          type: integer
        availableQuantity:
          description: Available quantity of preferences (maximum quantity - Existing
            preferences)per preference group.
          type: integer
        maxResortUsedQuantity:
          description: Maximum quantity of preferences used by any resort per preference
            group.
          type: integer
        reservationPreference:
          description: Whether this preference is reservation preference or not.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    preferenceType:
      description: Guest Preference details for the profile.
      properties:
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceCode:
          maxLength: 20
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
      type: object
    keywordType:
      properties:
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        type:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    keywordDetailType:
      properties:
        newKeyword:
          description: The new keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    negotiatedType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    negotiatedInfoType:
      description: This provides information for a profile negotiated rate.
      properties:
        corporateAgreementId:
          description: The master identifier for multiple offices/locations under
            the same company profile. This is optional
          maxLength: 80
          minLength: 0
          type: string
        comissionCode:
          description: Informational purposes only in numeric format.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: The sell order.
          type: integer
        inactive:
          description: Negotiated Rate is inactive or not
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    gdsNegotiatedType:
      description: This holds a list of GdsNegotiatedInfoType.
      properties:
        gdsNegotiatedInfoList:
          description: List of channel negotiated rates for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedInfoType'
          maxItems: 4000
          type: array
        bookingChannelCode:
          description: Booking Channel Code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        channelRatePlanCode:
          description: Channel Room Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    gdsNegotiatedInfoType:
      description: This provides information for a channel negotiated rate.
      properties:
        accessCode:
          description: The GDS negotiated rate code.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: The sell order.
          type: integer
        inactive:
          description: The GDS Negotiated Rate is inactive or not
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsType'
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        masterAccountInfo:
          $ref: '#/components/schemas/masterAccountInfoType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsType:
      description: Detailed information regarding the changes made to relationships
        for the profile.
      properties:
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        changeProfileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        salutation:
          description: Salutation of the profile
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    identificationInfoType:
      description: Information on the identification of the customer.
      properties:
        identification:
          $ref: '#/components/schemas/identificationType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    identificationType:
      description: Identification information of the customer.
      properties:
        idType:
          description: "Identification Type. Eg Passport, Driving License etc."
          maxLength: 40
          minLength: 0
          type: string
        idNumber:
          description: Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idNumberMasked:
          description: Masked Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        issuedCountry:
          description: The country where Identification was issued.
          maxLength: 20
          minLength: 0
          type: string
        issuedDate:
          description: Issued date of Identification.
          format: date
          type: string
        issuedPlace:
          description: The place where Identification was issued.
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of Identification.
          format: date
          type: string
        registeredProperty:
          description: Property where the identification belongs to.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    alienInfoType:
      description: immigration/visa information of a foreign person.
      properties:
        alienRegistrationNo:
          description: Alien Registration Number.
          type: string
        immigrationStatus:
          description: Immigration Status on an Alien.
          maxLength: 40
          minLength: 0
          type: string
        visaValidityType:
          description: Visa Type of an Alien.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyInfoType:
      description: Company Information of the Profile.
      properties:
        legalCompany:
          description: Legal Company.
          maxLength: 20
          minLength: 0
          type: string
        department:
          description: Department of the Profile.
          maxLength: 20
          minLength: 0
          type: string
        position:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    ownerType:
      description: Generic type for information about an owner.
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          $ref: '#/components/schemas/personNameType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    lastStayInfoType:
      description: Contains last stay related details for the profile
      properties:
        lastVisit:
          description: Used to hold last stay information for the profile.
          format: date
          type: string
        lastRoom:
          description: Used to hold last room information for the profile.
          type: string
        lastRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the profile.
          type: integer
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    profileAccessType:
      properties:
        chainCode:
          description: Indicates the Chain code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        croCode:
          description: Indicates the CRO code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Indicates the Hotel code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        sharedLevel:
          $ref: '#/components/schemas/profileSharedLevelType'
      type: object
    profileSharedLevelType:
      description: Simple types for Shared level.
      enum:
      - Global
      - Property
      - Cro
      type: string
    profileRestrictions:
      properties:
        reason:
          description: Restriction reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Description of restriction reason.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
      type: object
    mailingActionsType:
      description: Defines mailing action list for the profile.
      properties:
        mailingAction:
          description: Defines mailing action code and description.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        active:
          description: When true indicates that profile has subscribed to the mailing
            list.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    privacyInfoType:
      description: Defines Privacy related information for the profile.
      properties:
        marketResearchParticipation:
          description: Indicates if the profile participates in market research.
          type: boolean
        lastPrivacyPromptDate:
          description: Indicate the last privacy prompt date of the guest.
          format: date
          type: string
        infoFromThirdParty:
          description: Indicates if the profile is ok getting info from third parties.
          type: boolean
        autoEnrollLoyaltyProgram:
          description: Indicates if the profile wishes to be automatically enrolled
            in the property's loyalty program.
          type: boolean
        allowPhone:
          description: Indicates if the profile wishes to allow phone calls.
          type: boolean
        allowSMS:
          description: Indicates if the profile wishes to allow SMS.
          type: boolean
        allowEmail:
          description: Indicates if the profile wishes to allow Email.
          type: boolean
        optInMailingList:
          description: Indicates if the profile wishes to opt in for Mailing List.
          type: boolean
        optInMarketResearch:
          description: Indicates if the profile wishes to opt in for Market Research.
          type: boolean
        optInThirdParty:
          description: Indicates if the profile wishes to opt in for Third Party.
          type: boolean
        optInAutoEnrollmentMember:
          description: Indicates if the profile wishes to opt in for Auto Enrolment
            Member.
          type: boolean
        optInPhone:
          description: Indicates if the profile wishes to opt in for Phone.
          type: boolean
        optInSms:
          description: Indicates if the profile wishes to opt in for SMS.
          type: boolean
        optInEmail:
          description: Indicates if the profile wishes to opt in for Email.
          type: boolean
      type: object
    profileCashieringType:
      description: Contains cashiering related details for the profile
      properties:
        directBillingList:
          description: Contains the direct billing related information for the profile.
          items:
            $ref: '#/components/schemas/directBillingType'
          maxItems: 4000
          type: array
        autoFolioSettlementType:
          description: Contains the auto folio settlement type for the profile.
          maxLength: 40
          minLength: 0
          type: string
        paymentDueDays:
          description: "Ability to define on the account, the number of days after\
            \ which the invoice should be paid."
          type: integer
        taxPercent1:
          description: Tax1 Percentage for Collecting Agent.
          type: integer
        taxPercent2:
          description: Tax2 Percentage for Collecting Agent.
          type: integer
        taxPercent3:
          description: Tax3 Percentage for Collecting Agent.
          type: integer
        taxPercent4:
          description: Tax4 Percentage for Collecting Agent.
          type: integer
        taxPercent5:
          description: Tax5 Percentage for Collecting Agent.
          type: integer
        arNoCentral:
          description: Account Receivables Central Number.
          maxLength: 20
          minLength: 0
          type: string
        referenceCurrency:
          description: Reference Currency.
          maxLength: 20
          minLength: 0
          type: string
        vATOffsetYN:
          description: VAT Offset Flag.
          maxLength: 1
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    directBillingType:
      description: This is the preconfigured routing instruction type.
      properties:
        hotelId:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        aRNumber:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileCommissionType:
      description: This is the preconfigured routing instruction type.
      properties:
        hotelId:
          description: Hotel Code for the commission being used for a profile.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: commission Code for a profile.
          maxLength: 20
          minLength: 0
          type: string
        bankAccount:
          description: Bank account used for the commission for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethods'
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    commissionPaymentMethods:
      description: Check
      enum:
      - Cent
      - Eft
      - Chk
      type: string
    webUserAccountsType:
      description: Web User Accounts List.
      items:
        $ref: '#/components/schemas/webUserAccountType'
      maxItems: 4000
      type: array
    webUserAccountType:
      description: Web User Account of the guest.
      properties:
        securityQuestion:
          $ref: '#/components/schemas/codeDescriptionType'
        securityAnswer:
          description: Answer to the Security Question.
          maxLength: 4000
          minLength: 0
          type: string
        comments:
          description: Comments.
          maxLength: 4000
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/webUserHistoryType'
        newLoginName:
          description: New Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newPassword:
          description: Login Password.
          maxLength: 2000
          minLength: 0
          type: string
        autoGeneratePassword:
          description: A flag which determines if the password is auto generated.
          type: boolean
        loginName:
          description: Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        domainCode:
          description: Domain code.
          maxLength: 20
          minLength: 0
          type: string
        locked:
          description: Boolean flag that indicates whether the web account is locked
            or not.
          type: boolean
        inactive:
          description: Boolean flag that indicates whether the web account is inactive
            or not.
          type: boolean
      type: object
    webUserHistoryType:
      description: "Creation date time, Creator Id, last modification date time and\
        \ last Modifier Id."
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastLogin:
          description: Last login date.
          format: date
          type: string
        lastPasswordChange:
          description: Last Password change date.
          format: date
          type: string
        inactiveDate:
          description: Inactive date.
          format: date
          type: string
      type: object
    profileTaxInfoType:
      description: Profile information related to tax.
      properties:
        tax1No:
          description: The tax id of this profile. Usually issued by a government
            agency. Used by 1099 printing.
          maxLength: 40
          minLength: 0
          type: string
        tax2No:
          description: Tax 2 id of this profile.
          maxLength: 40
          minLength: 0
          type: string
        taxCategory:
          description: Tax Category to be changed.
          maxLength: 20
          minLength: 0
          type: string
        taxOffice:
          description: Tax Office to be changed.
          maxLength: 30
          minLength: 0
          type: string
        taxType:
          description: Tax type to be changed.
          maxLength: 20
          minLength: 0
          type: string
        businessId:
          description: Business ID. The maximum length of this element should not
            exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        businessRegistration:
          description: Business Registration Code. The maximum length of this element
            should not exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
      type: object
    salesInfoType:
      description: "Provides sales information about the profiles of type company,\
        \ travel agent, source and contact."
      properties:
        scope:
          description: Defines the scope.
          maxLength: 2000
          minLength: 0
          type: string
        scopeCity:
          description: Defines the scope city.
          maxLength: 2000
          minLength: 0
          type: string
        accountType:
          description: Defines the account type.
          maxLength: 20
          minLength: 0
          type: string
        accountSource:
          description: Defines the account source.
          maxLength: 2000
          minLength: 0
          type: string
        industryCode:
          description: Defines the industry code.
          maxLength: 2000
          minLength: 0
          type: string
        businessSegments:
          description: Defines the Business segments.
          maxLength: 2000
          minLength: 0
          type: string
        priority:
          description: Defines the priority.
          maxLength: 4000
          minLength: 0
          type: string
        roomsPotential:
          description: Defines the rooms potential.
          maxLength: 4000
          minLength: 0
          type: string
        actionCode:
          description: Defines the action code.
          maxLength: 4000
          minLength: 0
          type: string
        competitionCode:
          description: Defines the competition code.
          maxLength: 4000
          minLength: 0
          type: string
        influence:
          description: Defines the influence for the contact profile.
          maxLength: 2000
          minLength: 0
          type: string
        preferredRoom:
          description: Defines the Preferred Room for profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code used to filter the sales information.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    eCertificatesType:
      description: List of e-certificates for the profile.
      items:
        $ref: '#/components/schemas/eCertificateType'
      maxItems: 4000
      type: array
    eCertificateType:
      description: E-Certificates details.
      properties:
        certificateId:
          description: System generated unique certificate id.
          type: integer
        voucherNo:
          description: System generated unique voucher number.
          maxLength: 40
          minLength: 0
          type: string
        certificateNo:
          description: Printed certificate no. This has to be unique.
          maxLength: 40
          minLength: 0
          type: string
        eCertificateInfo:
          $ref: '#/components/schemas/eCertificateInfoType'
        expiryDate:
          description: Date of expiry.
          format: date
          type: string
        newExpiryDate:
          description: New Date of expiry to extend e-certificate.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        consumptionDetail:
          $ref: '#/components/schemas/eCertificateConsumptionType'
        status:
          $ref: '#/components/schemas/eCertificateStatusType'
        printed:
          description: Print status of the certificate.
          type: boolean
        inactiveDate:
          description: Date the record was marked as inactive.
          format: date
          type: string
        awardId:
          $ref: '#/components/schemas/awardId'
        databaseId:
          description: External reference from which the record is created.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        issueDate:
          description: Date when certificate was issued.
          format: date
          type: string
        awardPoints:
          description: Award points if any in case of certificate use membership award.
          type: integer
        generationDetail:
          $ref: '#/components/schemas/eCertificateGenerationType'
        originalVoucherNo:
          description: In case of in lieu of certificate this will contain the original
            voucher no.
          maxLength: 40
          minLength: 0
          type: string
        originalCertificateNo:
          description: In case of in lieu of certificate this will contain the original
            certificate no.
          maxLength: 40
          minLength: 0
          type: string
        inLieuSequence:
          description: Seq of the in lieu of certificate. 1..n. original certificate
            will be treated as null = 0.
          type: integer
        cancelRequestDate:
          description: Date on which the cancellation was requested.
          format: date
          type: string
        extensionCount:
          description: Number of times e-certificate is already extended.
          type: integer
      type: object
    eCertificateInfoType:
      description: E-Certificates details.
      properties:
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        awardCode:
          description: Award type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code to which certificate is attached to.
          maxLength: 20
          minLength: 0
          type: string
        voucherBenefitCode:
          description: Voucher benefit code attached to the certificate.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          $ref: '#/components/schemas/eCertificateInfoType_hotels'
        description:
          description: Description about the certificate.
          maxLength: 200
          minLength: 0
          type: string
        longDescription:
          description: Detail description about the certificate.
          maxLength: 4000
          minLength: 0
          type: string
        label:
          description: Label for the certificate.
          maxLength: 40
          minLength: 0
          type: string
        maxExtensionAllowed:
          description: Number of times e-certificate can be extended.
          type: integer
        usageCriteria:
          $ref: '#/components/schemas/eCertificateUsageCriteriaType'
        value:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        benefitSummary:
          description: Summary of Benefits attached to this ECertificate.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    eCertificateScopeType:
      description: Indicates that OPERA E-Certificate is available for a specific
        list of hotels.
      enum:
      - Global
      - Hotel
      - MultiHotel
      type: string
    eCertificateUsageCriteriaType:
      description: E-Certificates details.
      properties:
        reservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        web:
          description: Indicates if web certificate can be consumed in OWS.
          type: boolean
        webAllowed:
          description: Indicates if certificate consumption allowable on the web.
          type: boolean
        benefit:
          description: Indicates to attach a rate code to the e-certificate as a benefit.
          type: boolean
        hotel:
          description: Indicates if web certificate can be consumed in hotel.
          type: boolean
        verifyCertificateNo:
          description: Specify if the certificate number verification is required
            at time of consumption or not.
          type: boolean
        cancelAllowed:
          description: Identify if cancel is allowed or not.
          type: boolean
        generateInLieuCertificate:
          description: Identify if in lieu of certificate can be generated or not.
          type: boolean
      type: object
    eCertificateConsumptionType:
      description: E-Certificates details.
      properties:
        hotelId:
          description: Property where certificate was consumed for.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateConsumeSourceType'
        surname:
          description: Last name of the person who consumed the certificate..
          maxLength: 40
          minLength: 0
          type: string
        firstName:
          description: First name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: Middle name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email of the person who consumed the certificate.
          maxLength: 2000
          minLength: 0
          type: string
        date:
          description: Date the certificate was consumed.
          format: date
          type: string
        userName:
          description: Application user who created the consumption.
          maxLength: 2000
          minLength: 0
          type: string
        userNotes:
          description: Any notes on the certificate entered at time of consumption.
          maxLength: 4000
          minLength: 0
          type: string
        referenceId:
          $ref: '#/components/schemas/uniqueID_Type'
        locationType:
          description: Consumption location type.
          maxLength: 20
          minLength: 0
          type: string
        authorizationCode:
          description: Authorization code for consumption.
          maxLength: 100
          minLength: 0
          type: string
        serviceDate:
          description: Date on which the service is due (arrival date in case of reservation).
          format: date
          type: string
      type: object
    eCertificateConsumeSourceType:
      description: Indicates that OPERA E-Certificate is consumed by hotelPMS.
      enum:
      - Central
      - Web
      - Hotel
      type: string
    eCertificateStatusType:
      description: Indicates that OPERA E-Certificate is reserved.
      enum:
      - Cancelled
      - Consumed
      - Deleted
      - Expired
      - Issued
      - Reserved
      type: string
    awardId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    eCertificateIssueSourceType:
      description: Indicates that OPERA E-Certificate is issued by external system.
      enum:
      - Opera
      - Web
      - Interface
      type: string
    eCertificateIssueType:
      description: Indicates that guest purchased OPERA E-Certificate.
      enum:
      - Assigned
      - OptedIn
      - Purchased
      type: string
    eCertificateGenerationType:
      description: E-Certificates details.
      properties:
        ruleId:
          $ref: '#/components/schemas/uniqueID_Type'
        generationDetail:
          description: Reason for which e-certificate was generated.
          maxLength: 4000
          minLength: 0
          type: string
        referenceValue:
          description: Type of value that is in the certificate.valid values are membership_level.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileSubscriptionListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/profileSubscriptionType'
      maxItems: 4000
      type: array
    profileSubscriptionType:
      description: Contains details of the profile subscription. The subscription
        represents the link between the OPERA profile and the external profile within
        a particular external system
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileInfo:
          $ref: '#/components/schemas/profileSubscriptionType_profileInfo'
        distributed:
          description: Indicates if the profile was distributed to the external system.
          type: boolean
        force:
          description: Indicates if the profile information should be overwritten
            by the external system.
          type: boolean
        subscriptionDate:
          description: Timestamp when the profile was subscribed to.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastDistributionDate:
          description: Timestamp of the most recent distribution of this profile to
            the external system.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastExternalUpdateDate:
          description: Timestamp of the most recent update of the subscription information
            by the external system.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        inactive:
          description: Indicates whether this subscription is active or inactive.
          type: boolean
        systemCode:
          description: Code of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
        systemType:
          description: Type of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Agent
      - Company
      - Group
      - Source
      type: string
    profileNameType:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    roomOwnershipType:
      description: Define the search criteria for retrieving room ownership records
      properties:
        contractId:
          description: Contract ID of the room ownership record.
          type: integer
        contractNumber:
          description: Contract number for room owner.
          type: string
        unit:
          description: Unit for room owner.
          type: string
        roomCategory:
          description: Room Category of the room ownership record.
          type: string
        roomType:
          description: Room Type of the room ownership record.
          type: string
        startDate:
          description: Start Date of the room ownership record.
          format: date
          type: string
        endDate:
          description: End Date of the room ownership record.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          description: Status of the room ownership record.
          type: string
      type: object
    profileSummaryInfoType:
      description: Summary information about a profile and the associated Unique IDs.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileSummaryType'
      type: object
    profileSummaryType:
      description: Type provides the basic information about the profile.
      properties:
        formerName:
          $ref: '#/components/schemas/profileSummaryType_formerName'
        altName:
          $ref: '#/components/schemas/profileNameType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        telephoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        profileMembership:
          $ref: '#/components/schemas/profileMembershipType'
        uRLInfo:
          $ref: '#/components/schemas/uRLInfoType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
        owners:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        primaryCompany:
          description: Primary Company of the profile.
          type: string
        aRAccount:
          $ref: '#/components/schemas/directBillingType'
        commission:
          $ref: '#/components/schemas/codeDescriptionType'
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        allowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        primaryAccountInfo:
          $ref: '#/components/schemas/primaryProfileInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        additionalInfo:
          $ref: '#/components/schemas/profileAdditionalInfoType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        subscription:
          description: This element tells If there is an active subscription for this
            external profile .
          type: boolean
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        protected:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        registeredProperty:
          description: Property this profile is registered with.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    ownersType:
      description: Generic type for a list of owners.
      items:
        $ref: '#/components/schemas/ownerType'
      maxItems: 4000
      type: array
    profileAllowedActionsType:
      description: Allowed actions for profile operations.
      items:
        $ref: '#/components/schemas/profileAllowedActionType'
      maxItems: 2
      type: array
    profileAllowedActionType:
      description: Flag indicating whether Profile is Enrolled to Primary Membership
        Program.
      enum:
      - NameChange
      - TaxIDChange
      - EnrollToPrimaryMembership
      type: string
    primaryProfileInfoType:
      description: Contains basic information of profile.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        profileName:
          description: Name of the account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileAdditionalInfoType:
      properties:
        primaryOwnerCode:
          description: Primary Owner of the profile
          maxLength: 20
          minLength: 0
          type: string
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        masterAccount:
          description: Indicates if the profile is a Master Account for one or more
            Subsidiary Accounts.
          type: boolean
        subsidiaryAccount:
          description: Indicates if the profile is a Subsidiary Account of a Master/Parent
            Account.
          type: boolean
        businessPosition:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    profile:
      description: Object for creation of profiles. This object contains profile details
        with unique identifiers for each profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        profileAllowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileType_profileDeliveryMethods'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipsList:
          $ref: '#/components/schemas/profileType_roomOwnershipsList'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        fiscalGuestType:
          description: Fiscal Guest Type is used for Fiscal Folio funcionality
          maxLength: 20
          minLength: 0
          type: string
      type: object
    guest:
      description: Request object for creation of guest/contact/employee profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        guestIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        guestDetails:
          $ref: '#/components/schemas/guestProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    guestProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/guestProfileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
      type: object
    guestProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Employee
      - Contact
      type: string
    availableARAddresses:
      description: Response to the request to fetch the available Accounts Receivables(AR)
        Addresses for a Profile.
      properties:
        addresses:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    availablePreferences:
      properties:
        preferenceCollection:
          description: A collection of preferences
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSummaries:
      description: "Response object for fetching profiles. This object contains profile\
        \ primary details,profile summary details,master info list containing code\
        \ and description used as lookup for description."
      properties:
        profileSummaries:
          $ref: '#/components/schemas/profileSummariesType'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSummariesType:
      description: A complex type containing the collection of Profile objects or
        Unique IDs of Profiles.
      properties:
        profileInfo:
          description: A collection of Profiles or Unique IDs of Profiles.
          items:
            $ref: '#/components/schemas/profileSummaryInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    emailMessageType:
      description: Request object for storing an email.
      properties:
        blockId:
          description: "Used for Character Strings, length 0 to 80."
          maxLength: 80
          minLength: 0
          type: string
        fromAddress:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        toAddress:
          items:
            $ref: '#/components/schemas/basicEmailType'
          maxItems: 4000
          type: array
        subject:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        emailBody:
          description: Email in base64 binary format.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        messageId:
          description: "Used for Character Strings, length 0 to 100."
          maxLength: 100
          minLength: 0
          type: string
        emailReceiveDate:
          description: The date the email was received.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        hasAttachment:
          description: Indicates whether the email was sent with an attachment (true)
            or not (false).
          type: boolean
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength80:
      description: "Used for Character Strings, length 0 to 80."
      maxLength: 80
      minLength: 0
      type: string
    basicEmailListType:
      items:
        $ref: '#/components/schemas/basicEmailType'
      maxItems: 4000
      type: array
    stringLength200:
      description: "Used for Character Strings, length 0 to 200."
      maxLength: 200
      minLength: 0
      type: string
    stringLength100:
      description: "Used for Character Strings, length 0 to 100."
      maxLength: 100
      minLength: 0
      type: string
    profileRelationships:
      properties:
        relationships:
          $ref: '#/components/schemas/relationshipsSummary'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    relationshipsSummary:
      description: Contains details relationships related to a profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileStayHistory:
      description: Response object for showing stay history and future reservations
        of specific profile.
      properties:
        profileStayDetails:
          $ref: '#/components/schemas/profileStayDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileStayDetailsType:
      description: Type provides the stay history and future reservations of specific
        profile.
      properties:
        reservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
      type: object
    profileRelationship:
      description: Request object for creating profile relationship.
      properties:
        relationship:
          $ref: '#/components/schemas/relationshipCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    relationshipCriteriaType:
      description: Contains Criteria Information for a profile relationship.
      properties:
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).This needs to be
            passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        targetRelation:
          description: Indicates the type of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileRelationshipToBeChanged:
      description: Request object for changing profile relationship.
      properties:
        relationship:
          $ref: '#/components/schemas/changeRelationshipCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeRelationshipCriteriaType:
      description: Information about the changes in relationship for the profile
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of existing relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of existing relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Indicates the type of existing relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of existing relationship the related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsInfoType:
      description: Detailed information regarding to be changed relationships for
        the profile.
      properties:
        changeProfileID:
          $ref: '#/components/schemas/uniqueID_Type'
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        sourceRelation:
          description: Indicates the type of to be changed relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of to be changed relationship the
            current profile(Source Profile) has with the related profile(Target Profile).This
            needs to be passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Indicates the type of to be changed relationship the Related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of to be changed relationship the
            related profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileToBeMerged:
      description: Profile Resource will be merged.
      properties:
        victimProfileId:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postCompanyProfile_request:
      allOf:
      - $ref: '#/components/schemas/company'
    postGuestProfile_request:
      allOf:
      - $ref: '#/components/schemas/guest'
    postProfile_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          profileIdList:
          - type: Profile
            idContext: OPERA
            id: "3149001"
          profileDetails:
            customer:
              personName:
              - givenName: William
                middleName: D
                surname: Smith
                nameSuffix: "10"
                nameTitle: Mr.....
                envelopeGreeting: Hello Mr. Smith
                salutation: Mr. Smith
                nameType: PRIMARY
                language: E
              citizenCountry:
                value: United States of America
                code: USA
              identifications:
                identificationInfo:
                - identification:
                    idType: PASSPORT
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    expirationDate: 2019-11-29
                    registeredProperty: HOTEL1
                    primaryInd: true
              language: E
              nationality: US
              nationalityDescription: USA
              vipStatus: "006"
              vipDescription: "VVIP: Important person (Corporate office only)"
              privateProfile: false
            company:
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              businessTitle: Developer
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              commissionCode: ""
              creditRating: ""
              corporateIdType: ""
              vipStatus: "006"
              vipDescription: Important
              blacklist: false
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  cityName: Redwood Shores
                  postalCode: "94065"
                  cityExtension: a
                  county: a
                  state: CA
                  country:
                    value: USA
                    code: US
                  language: E
                  type: Office
                  typeDescription: Office address use
                  primaryInd: false
                  barCode: ""
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  lastModifierId: "12000"
            territory: North America
            telephones:
              telephoneInfo:
              - telephone:
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  phoneNumber: +1 415 555 0100
                  extension: x25
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  lastModifierId: "12883"
            emails:
              emailInfo:
              - email:
                  emailAddress: eg@example.com
                  type: EMAIL
                  typeDescription: Email Address
                  emailFormat: EMAIL
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  lastModifierId: "12883"
            comments:
              commentInfo:
              - comment:
                  text:
                    value: Please provide discount.
                    language: E
                  commentTitle: Discount
                  type: GEN
                  typeDescription: Comments for discount.
                  internal: false
                  confidential: false
                  overrideInternal: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            statusCode: ACTIVE
            registeredProperty: HOTEL1
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            lastModifierId: "12883"
            markForHistory: false
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            rel: guestProfile
            templated: false
            method: POST
            operationId: postGuestProfile
        type: object
    putProfile_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          profileIdList:
          - type: Profile
            idContext: OPERA
            id: "3149001"
          profileDetails:
            customer:
              personName:
              - givenName: William
                middleName: D
                surname: Smith
                nameSuffix: "10"
                nameTitle: Mr.....
                envelopeGreeting: Hello Mr. Smith
                salutation: Mr. Smith
                nameType: PRIMARY
                language: E
              citizenCountry:
                value: United States of America
                code: USA
              identifications:
                identificationInfo:
                - identification:
                    idType: PASSPORT
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    expirationDate: 2019-11-29
                    registeredProperty: HOTEL1
                    primaryInd: true
              language: E
              nationality: US
              nationalityDescription: USA
              vipStatus: "006"
              vipDescription: "VVIP: VV important person"
              privateProfile: false
            company:
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              businessTitle: Developer
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              commissionCode: ""
              creditRating: ""
              corporateIdType: ""
              vipStatus: "006"
              vipDescription: Important
              blacklist: false
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  cityName: Redwood Shores
                  postalCode: "94065"
                  cityExtension: a
                  county: a
                  state: CA
                  country:
                    value: USA
                    code: US
                  language: E
                  type: Office
                  typeDescription: This is office address.
                  primaryInd: false
                  barCode: ""
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  lastModifierId: "12883"
            territory: North America
            telephones:
              telephoneInfo:
              - telephone:
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  phoneNumber: +1 415 555 0100
                  extension: x25
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  lastModifierId: "12883"
            emails:
              emailInfo:
              - email:
                  emailAddress: eg@example.com
                  type: EMAIL
                  typeDescription: Email Address
                  emailFormat: EMAIL
                  primaryInd: false
                  orderSequence: -100000000
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  lastModifierId: "12883"
            comments:
              commentInfo:
              - comment:
                  text:
                    value: Please add comments here.
                    language: E
                  commentTitle: Discount
                  type: GEN
                  typeDescription: Comments for discount.
                  internal: false
                  confidential: false
                  overrideInternal: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            statusCode: ACTIVE
            registeredProperty: HOTEL1
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            lastModifierId: "12883"
            markForHistory: false
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            rel: guestProfile
            templated: false
            method: POST
            operationId: postGuestProfile
        type: object
    storeEmail_request:
      allOf:
      - $ref: '#/components/schemas/emailMessageType'
      - example:
          blockId: "13701"
          fromAddress: eg@example.com
          toAddress:
          - Example1@email.com
          subject: First Email Subject
          emailBody: base 64 encoded email body should be placed here
          messageId: "12345"
          emailReceiveDate: 2020-07-15T17:16:47.617Z
          hasAttachment: true
        type: object
    putProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationshipToBeChanged'
      - example:
          relationship:
            changeRelationship:
              changeProfileID:
                id: "3261507"
                type: Guest
              sourceRelation: FRIEND1
              sourceRelationDescription: Friends
              targetRelation: FRIEND2
              targetRelationDescription: Friends 2
            primary: true
            statusCode: Active
            targetProfileType: Guest
            sourceRelation: EMPLOYEE
            sourceRelationDescription: EMPLOYEE
            targetRelation: EMPLOYER
            targetRelationDescription: EMPLOYER
            relationshipID: "28026"
            profileType: Guest
        type: object
    postProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationship'
      - example:
          relationship:
            primary: "true"
            statusCode: Active
            targetProfileType: Guest
            sourceRelation: FAMILY MEMBER
            sourceRelationDescription: FAMILY MEMBER
            targetRelation: FAMILY HEAD
            targetRelationDescription: FAMILY HEAD
            profileType: Guest
        type: object
    mergeProfiles_request:
      allOf:
      - $ref: '#/components/schemas/profileToBeMerged'
      - example:
          victimProfileId:
            id: "1087330"
        type: object
    companyProfileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_preferenceCollection:
      description: List of customer preferences.
      properties:
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_keywords:
      description: List of customer keywords.
      properties:
        keyword:
          description: Collection of keywords attached to the profile.
          items:
            $ref: '#/components/schemas/keywordType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_negotiatedRates:
      description: List of profile negotiated rates.
      properties:
        negotiatedRate:
          description: Collection of Detailed information on profile negotiated rates.
          items:
            $ref: '#/components/schemas/negotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_gdsNegotiatedRates:
      description: List of channel negotiated rates that this profile has been assigned
        to.
      properties:
        gdsNegotiatedRate:
          description: Collection of Detailed information on channel negotiated rates
            for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    companyProfileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    customerType_identifications:
      description: List of identification of the customer.
      properties:
        identificationInfo:
          description: Collection of detailed information on the identification of
            the customer.
          items:
            $ref: '#/components/schemas/identificationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    eCertificateInfoType_hotels:
      description: Hotel to which certificate is attached to.
      properties:
        code:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        scope:
          $ref: '#/components/schemas/eCertificateScopeType'
      type: object
    profileSubscriptionType_profileInfo:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileSummaryType_formerName:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_roomOwnershipsList:
      description: Room Ownership records.
      properties:
        roomOwnershipInfo:
          description: Collection of Detailed information on Room Ownership records.
          items:
            $ref: '#/components/schemas/roomOwnershipType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
x-original-swagger-version: "2.0"
