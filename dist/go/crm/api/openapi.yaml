openapi: 3.0.1
info:
  contact:
    email: hospitality-integrations_ww@oracle.com
  description: "APIs to cater for Customer Relationship Management (profile) functionality\
    \ in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including\
    \ Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile\
    \ can store and display a wide range of information about the guest, company,\
    \ travel agent etc., depending upon the type of profile.  For example, a guest\
    \ profile can store the guest name, address, contact information, details on billing,\
    \ membership benefits, preferences and much more.  All profiles in OPERA when\
    \ created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br\
    \ /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document\
    \ and all content within is available under the Universal Permissive License v\
    \ 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or\
    \ its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Customer Relationship Management API
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /crm/v1
tags:
- description: "The Profile APIs allow you to view, create, update, and delete profiles\
    \ in OPERA Cloud. Each time a new profile in created in OPERA Cloud, a profileID\
    \ is assigned.  Use this profileID to retrieve and update details relating to\
    \ that profile.   The resource 'Companies' includes group, source, company and\
    \ travel agent profile types.   The resource 'Guests' includes individual and\
    \ contact profile types."
  name: Profile
- description: The Profile External module allows you to retrieve and manage profiles
    from an external system.
  name: ProfileExternal
- description: "Profiles have many Lists of Values, storing the available options\
    \ a user can select when updating a profile.  This module allows you to get available\
    \ ListOfValues for Profile Preferences and AR Addresses on a profile."
  name: ProfileLOV
- description: "This will allow you to create a guest profile enrollment in OPERA\
    \ Cloud. Enrollment relates to a membership program, so as an example you can\
    \ enrol the guest Mr Tom Smith into a Membership / loyalty program."
  name: ProfileMembership
paths:
  /address:
    get:
      description: This API will get city and states. <p><strong>OperationId:</strong>getAddress</p>
      operationId: getAddress
      parameters:
      - description: When true indicates that only profiles with city will be fetched.
        in: query
        name: excludeNoCity
        schema:
          type: boolean
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: code
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cityState'
          description: "Response object for fetching City and State based on search\
            \ criteria. This object contains address information,Success,Warnings\
            \ and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Address not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get city states
      tags:
      - Profile
  /airline/transactions:
    get:
      description: Request for fetching membership transactions processed by the airline.
        <p><strong>OperationId:</strong>getAirlineTransactionsStatus</p>
      operationId: getAirlineTransactionsStatus
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: batchId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: batchIdType
        schema:
          type: string
      - description: The date when this batch was imported into OPERA
        in: query
        name: importDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/airlineTransactionsStatus'
          description: Request object for fetching membership transactions processed
            by the airline.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AirlineTransactionsStatus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get airline transactions status
      tags:
      - ProfileMembership
  /availableAwardsBasedOnType:
    get:
      description: "Get available awards based on type of award selected like Rates,\
        \ products or services, room type upgrades, and other gifts. <p><strong>OperationId:</strong>getAvailableAwardsBasedOnType</p>"
      operationId: getAvailableAwardsBasedOnType
      parameters:
      - description: This award allows a guest to apply available membership points
          towards the balance of his or her bill.
        in: query
        name: awardBasedOn
        schema:
          enum:
          - Rate
          - Product
          - Upgrade
          - Other
          - Ft
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: rateCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: arrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: departureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: bookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: pointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: pointsAbove
        schema:
          type: integer
      - description: Indicates rate code for the room type.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: Number of rooms that the member will be using.
        in: query
        name: rooms
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: awardType
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: productCriteriaMembershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: productCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: productCriteriaArrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: productCriteriaDepartureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: productCriteriaBookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: productCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: productCriteriaPointsAbove
        schema:
          type: integer
      - description: Package/Product code for the award to check availability.
        in: query
        name: packageCode
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: upgradeCriteriaMembershipType
        schema:
          type: string
      - description: Hotel name where the award will be consumed.
        in: query
        name: upgradeCriteriaHotelId
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaArrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaDepartureDate
        schema:
          format: date
          type: string
      - description: Booking date of the reservation associated with the award.
        in: query
        name: upgradeCriteriaBookingDate
        schema:
          format: date
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: upgradeCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: upgradeCriteriaPointsAbove
        schema:
          type: integer
      - description: Indicates availability of upgrade awards based on the room type(range
          of room types )
        in: query
        name: fromRoomCategory
        schema:
          type: string
      - description: Indicates availability of upgrade awards based on the room type(range
          of room types )
        in: query
        name: toRoomCategory
        schema:
          type: string
      - description: Number of rooms that the member will be using.
        in: query
        name: upgradeCriteriaRooms
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: upgradeCriteriaAwardType
        schema:
          type: string
      - description: Unique code identifying the Award.
        in: query
        name: awardCode
        schema:
          type: string
      - description: Total amount for the bill.
        in: query
        name: totalBillingAmount
        schema:
          type: number
      - description: The currency code for the member.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: fTPaymentCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: fTPaymentCriteriaPointsAbove
        schema:
          type: integer
      - description: Unique code identifying the award.
        in: query
        name: otherCriteriaAwardCode
        schema:
          type: string
      - description: Membership type for which awards are defined.
        in: query
        name: otherCriteriaMembershipType
        schema:
          type: string
      - description: Level of this Membership Type.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Name or code identifying the award.
        in: query
        name: shortDescription
        schema:
          type: string
      - description: "Amount of currency of the worth of the other award,below or\
          \ actual value."
        in: query
        name: valueBelow
        schema:
          type: number
      - description: "Amount of currency of the worth of the other award,above or\
          \ actual value."
        in: query
        name: valueAbove
        schema:
          type: number
      - description: Minimum number of points the member is willing to redeem.
        in: query
        name: otherCriteriaPointsBelow
        schema:
          type: integer
      - description: Maximum number of points the member is willing to redeem.
        in: query
        name: otherCriteriaPointsAbove
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availableAwardsBasedOnType'
          description: Response object to fetch member available awards based on the
            type being passed.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableAwardsBasedOnType not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Available Awards
      tags:
      - ProfileMembership
  /awards:
    delete:
      description: Operation to cancel an award already been granted to a member.
        <p><strong>OperationId:</strong>deleteAwards</p>
      operationId: deleteAwards
      parameters:
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: awardNumber
        required: true
        schema:
          type: number
      - description: Identifies reservation cancellation number.
        in: query
        name: reservationCancellationNumber
        schema:
          type: string
      - description: "The amount of points that will be deducted for cancelling the\
          \ award, from the total guest award points."
        in: query
        name: actualCancelPoints
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Awards
      tags:
      - ProfileMembership
  /awardsToGrant:
    get:
      description: Fetch awards list to be able to grant the award to a member <p><strong>OperationId:</strong>getAwardsToGrant</p>
      operationId: getAwardsToGrant
      parameters:
      - description: This award allows a guest to apply available membership points
          towards the balance of his or her bill.
        in: query
        name: awardBasedOn
        schema:
          enum:
          - Rate
          - Product
          - Upgrade
          - Other
          - Ft
          type: string
      - description: The number of points that must be redeemed for this award.
        in: query
        name: totalPointsRequired
        schema:
          type: number
      - description: Number of rooms that the member will be using.
        in: query
        name: rooms
        schema:
          type: string
      - description: Unique Membership ID to get award info.
        in: query
        name: membershipId
        schema:
          type: number
      - description: Membership type for which awards are defined.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Indicates the award type or code.
        in: query
        name: awardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: grantAwardInfoHotelId
        schema:
          type: string
      - description: Rate code associated with the award.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoom
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoom
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/awardsToGrant'
          description: Response object to fetch award details to grant an award.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AwardsToGrant not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Awards to Grant
      tags:
      - ProfileMembership
  /certificates:
    delete:
      description: This API will allow you to delete a certificate. <p><strong>OperationId:</strong>deleteCertificate</p>
      operationId: deleteCertificate
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete certificate
      tags:
      - Profile
  /companies:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postCompanyProfile</p>"
      operationId: postCompanyProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/company'
        description: Request object for creation of company profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates creation of a company/agent/group/source profile
        in OPERA.
      tags:
      - Profile
      x-codegen-request-body-name: company
  /companies/{corporateID}:
    get:
      description: "Use this to retrieve a specific Company, Travel Agent, Group or\
        \ Source profile. You must know the corporate ID of the profile for the request\
        \ API. <p><strong>OperationId:</strong>getCompanyProfile</p>"
      operationId: getCompanyProfile
      parameters:
      - description: Unique OPERA Corporate ID used to find company/agent/group/source
          profile in OPERA.
        in: path
        name: corporateID
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/company'
            application/json:
              example:
                companyDetails:
                  company:
                    companyName: "Example Corporation, Ltd."
                    iATAInfo: {}
                  createDateTime: 2019-06-26 16:14:41.0
                  creatorId: BEN@HOTEL1
                  lastModifierId: BEN@HOTEL1
                  lastModifyDateTime: 2019-06-26 16:14:41.0
                  markForHistory: false
                  profileAccessType:
                    hotelId: HOTEL1
                    sharedLevel: Property
                  profileRestrictions:
                    restricted: false
                  profileType: Company
                  registeredProperty: HOTEL1
                  statusCode: Active
                companyIdList:
                - id: "329620"
                  type: Profile
                - id: "222572"
                  type: CorporateId
          description: Response object for fetching unique company profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompanyProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get company profile by corporate ID
      tags:
      - Profile
  /duplicateExternalSubscriptions:
    get:
      description: "Fetch profile subscriptions where the same OPERA Cloud profile\
        \ is linked to multiple external profiles, within the same external system.\
        \ <p><strong>OperationId:</strong>getDuplicateExternalSubscriptions</p>"
      operationId: getDuplicateExternalSubscriptions
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Code identifying the external database record which is linked
          to external systems.
        in: query
        name: databaseId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/duplicateExternalSubscriptions'
          description: Response object for fetching subscriptions where the same OPERA
            profile is linked to multiple external profiles within the same external
            system.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DuplicateExternalSubscriptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get profiles with duplicate external subscriptions '
      tags:
      - Profile
  /duplicateOPERASubscriptions:
    get:
      description: Fetch subscriptions where an external profile within a particular
        external system is linked to multiple OPERA Cloud profiles. <p><strong>OperationId:</strong>getDuplicateOPERASubscriptions</p>
      operationId: getDuplicateOPERASubscriptions
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Code identifying the external database record which is linked
          to external systems.
        in: query
        name: databaseId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/duplicateOPERASubscriptions'
          description: Response object for fetching subscriptions where an external
            profile within a particular external system is linked to multiple OPERA
            profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DuplicateOPERASubscriptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profiles with duplicate OPERA Cloud subscriptions
      tags:
      - Profile
  /ecertificates:
    get:
      description: This API allows you to retrieve eCertificates which exist on a
        profile in OPERA Cloud. <p><strong>OperationId:</strong>getECertificates</p>
      operationId: getECertificates
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Property for which preferences are to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Ecertificates search criteria
        in: query
        name: code
        schema:
          type: string
      - description: Ecertificates search criteria
        in: query
        name: groupCode
        schema:
          type: string
      - description: Indicates that OPERA E-Certificate is reserved.
        explode: true
        in: query
        name: status
        schema:
          items:
            enum:
            - Cancelled
            - Consumed
            - Deleted
            - Expired
            - Issued
            - Reserved
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Include or not include inactive E-certificate.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: System generated unique voucher number.
        in: query
        name: voucherNo
        schema:
          type: string
      - description: List of System generated unique voucher numbers to be excluded.
        explode: true
        in: query
        name: excludeVoucherNumbers
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search criteria to limit Ecertificates that are available for
          reservation consumption.
        in: query
        name: availableECertificates
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eCertificates'
          description: "Response object for fetch ECertificates. This object contains\
            \ collection of ECertificates,Success,Warnings and Errors related to this\
            \ operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ECertificates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get e-certificate
      tags:
      - Profile
    post:
      description: This API allows you to create a new eCertificates onto a profile
        in OPERA Cloud. <p><strong>OperationId:</strong>postECertificate</p>
      operationId: postECertificate
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateGeneration'
        description: Request object to issue E-Certificate.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create e-certificate
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateGeneration
  /ecertificates/{certificateId}:
    delete:
      description: This API allows you to delete an eCertificates which exist on a
        profile in OPERA Cloud. <p><strong>OperationId:</strong>deleteECertificate</p>
      operationId: deleteECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete e-certificate
      tags:
      - Profile
    put:
      description: Use this API to consume (use) an E-Certificate.  <p><strong>OperationId:</strong>consumeECertificate</p>
      operationId: consumeECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToConsume'
        description: Request object to Consume an E-Certificate.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Consume an E-Certificate
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToConsume
  /ecertificates/{certificateId}/action/validate:
    put:
      description: Use this API to verify an ng E-Certificate Number. <p><strong>OperationId:</strong>verifyECertificate</p>
      operationId: verifyECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToVerify'
        description: Request object to Verify an E-Certificate Number.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/verifiedECertificate'
          description: Response object to Verify E-Certificate and will return the
            profile information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Verify E-Certificate Number
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToVerify
  /ecertificates/{certificateId}/extensions:
    post:
      description: Use this API to extend the date of an existing E-Certificate. <p><strong>OperationId:</strong>extendECertificate</p>
      operationId: extendECertificate
      parameters:
      - in: path
        name: certificateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCertificateToExtend'
        description: Request object to Consume an E-Certificate.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend E-Certificate Expiry date
      tags:
      - Profile
      x-codegen-request-body-name: eCertificateToExtend
  /enrollments:
    post:
      description: Use this API when you have a guest profile and you want to enroll
        that guest profile into a membership program in an external system. <p><strong>OperationId:</strong>postEnrollment</p>
      operationId: postEnrollment
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/enrollment'
        description: Request object to create profile enrollment.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Enrollment
      tags:
      - ProfileMembership
      x-codegen-request-body-name: enrollment
  /externalSystems/{extSystemCode}/profiles/{profileExternalId}:
    get:
      description: "When a reservation is booked via an external system, you would\
        \ use this API to retrieve a reservation using the external ID in the request\
        \ <p><strong>OperationId:</strong>getProfileByExtId</p>"
      operationId: getProfileByExtId
      parameters:
      - description: External System's ID used to get the profile.
        in: path
        name: profileExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                links:
                - href: ""
                  method: GET
                  operationId: ""
                  rel: ""
                  targetSchema: ""
                  templated: false
                  title: ""
                profiles:
                  profileInfo:
                  - profile:
                      addresses:
                        addressInfo:
                        - address:
                            addressLine:
                            - 500 Oracle Parkway
                            barCode: a
                            cityExtension: a
                            cityName: Redwood Shores
                            country:
                              code: US
                              name: United States of America
                            county: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            language: E
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            postalCode: "94065"
                            primaryInd: false
                            state: CA
                            type: ""
                            typeDescription: ""
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      comments:
                        commentInfo:
                        - comment:
                            actionDate: 0101-01-01
                            actionType: ""
                            commentTitle: a
                            confidential: false
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            hotelCode: ""
                            internal: false
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            notificationLocation: ""
                            overrideInternal: false
                            protectDescription: false
                            text:
                              language: ""
                              value: ""
                            type: ""
                            typeDescription: a
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      company:
                        alternateLanguage: E
                        alternateName: a
                        blacklist: false
                        businessLocale: a
                        businessTitle: a
                        commissionCode: ""
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        corporateIdType: ""
                        creditRating: ""
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        vipDescription: Gold VIP
                        vipStatus: "2"
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      customer:
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        anonymization:
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                          anonymizationStatus: REQUESTED
                        birthCountry:
                          code: US
                          name: United States of America
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        birthPlace: New York
                        blacklist: false
                        businessTitle: Dr
                        citizenCountry:
                          code: US
                          name: United States of America
                        creditRating: ""
                        customerValue: a
                        gender: MALE
                        identifications:
                          identificationInfo:
                          - identification:
                              expirationDate: 2019-11-29
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              idType: PASSPORT
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              orderSequence: -100000000
                              primaryInd: false
                              registeredProperty: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        personName:
                        - envelopeGreeting: ""
                          givenName: Thomas
                          language: E
                          middleName: B
                          namePrefix: a
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          nameType: PRIMARY
                          salutation: ""
                          surname: Smith
                        privateProfile: false
                        profession: Engineer
                        vipDescription: Gold
                        vipStatus: "2"
                      emails:
                        emailInfo:
                        - email:
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            emailAddress: eg@example.com
                            emailFormat: HTML
                            lastModifierId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            orderSequence: -100000000
                            primaryInd: false
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      hasCommission: false
                      keywords:
                        keyword:
                        - keyword: a
                          keywordDetail:
                            newKeyword: a
                          type: ""
                      lastModifierId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastStayInfo:
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        lastRoom: ""
                        lastVisit: 0101-01-01
                        totalStay: -100000000
                      localizationGuestType: a
                      mailingActions:
                        active: false
                        mailingAction:
                        - code: ""
                          description: a
                        totalRows: -100000000
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      preferenceCollection:
                        preferenceType:
                        - availableQuantity: -100000000
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          maxQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          reservationPreference: false
                          sequence: ""
                      privacyInfo:
                        allowEmail: false
                        allowPhone: false
                        allowSMS: false
                        autoEnrollLoyaltyProgram: false
                        infoFromThirdParty: false
                        lastPrivacyPromptDate: 2000-01-01
                        marketResearchParticipation: false
                        optInAutoEnrollmentMember: false
                        optInEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInPhone: false
                        optInSms: false
                        optInThirdParty: false
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileImage:
                        description: a
                        hotelCode: ""
                        imageOrder: -100000000
                        imageSet: a
                        imageStyle: FULL
                        imageType: a
                        imageURL: a
                        language: ""
                        sequenceId: -100000000
                        website: a
                      profileIndicators:
                      - count: -100000000
                        indicatorName: a
                      profileMemberships:
                        profileMembership:
                        - benefits:
                          - code: ""
                            inactive: false
                            message: a
                          centralSetup: false
                          comment:
                            text:
                              language: ""
                              value: ""
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          currentPoints: -100000000
                          downgrade: GRACE
                          downgradeDescription: a
                          earningPreference: POINTS
                          effectiveDate: 0101-01-01
                          enrollmentResort: ""
                          enrollmentSource: ""
                          excludeFromBatch: false
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          inactive: false
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          memberStatus: ""
                          membershipClass: MEM
                          membershipEnrollmentCode: ""
                          membershipId: ""
                          membershipIdNo: -100000000
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipType: ""
                          nameOnCard: Thomas Smith
                          newMembershipId: ""
                          orderSequence: -100000000
                          pointsLabel: a
                          preferredCard: false
                          primaryMembershipYn: a
                          programDescription: Hotel Plus Membership
                          rating: ""
                          reIssueNewCard: PENDING
                          signupDate: 0101-01-01
                          tierAdministration: DISABLED
                          upgradeDescription: a
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      profileType: GUEST
                      protectedBy: a
                      registeredProperty: ""
                      requestForHotel: ""
                      statusCode: ACTIVE
                      telephones:
                        telephoneInfo:
                        - telephone:
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            extension: "2"
                            lastModifierId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            orderSequence: -100000000
                            phoneNumber: +1 415 555 0100
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            primaryInd: false
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      userDefinedFields:
                        characterUDFs:
                        - altname: a
                          name: a
                          value: a
                        dateUDFs:
                        - altname: a
                          name: a
                          value: 0101-01-01
                        numericUDFs:
                        - altname: a
                          name: a
                          value: -100000000
                    profileIdList:
                    - id: a
                      idContext: a
                      type: ""
                  totalRows: -100000000
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileByExtId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by external ID
      tags:
      - Profile
  /guests:
    post:
      description: "When a profile doesn't already exist for a guest, use this to\
        \ create a new profile.  The response will provide the newly created profile's\
        \ OPERA ID. There are many fields in postProfile defined by ListOfValues;\
        \ ensure you have reviewed ListOfValues APIs in order successfully to use\
        \ postProfile. <p><strong>OperationId:</strong>postGuestProfile</p>"
      operationId: postGuestProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/guest'
        description: Request object for creation of guest profile. This object contains
          profile details with unique identifiers of a profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "Create a guest, contact or employee profile in OPERA"
      tags:
      - Profile
      x-codegen-request-body-name: guest
  /guests/{guestId}:
    get:
      description: "Use this API to retrieve all data stored for a guest Profile,\
        \ such as their address, phone number, preferences. You must already know\
        \ the guests Profile ID. If you don't know the profile ID, first use the API\
        \ getGuests to find the profile ID. <p><strong>OperationId:</strong>getGuestProfile</p>"
      operationId: getGuestProfile
      parameters:
      - description: Unique OPERA internal ID used to find guest/contact/employee
          profile in OPERA.
        in: path
        name: guestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guest'
            application/json:
              example:
                links:
                - href: ""
                  method: GET
                  operationId: ""
                  rel: ""
                  targetSchema: ""
                  templated: false
                  title: ""
                profiles:
                  profileInfo:
                  - profile:
                      addresses:
                        addressInfo:
                        - address:
                            addressLine:
                            - 500 Oracle Parkway
                            barCode: a
                            cityExtension: a
                            cityName: Redwood Shores
                            country:
                              code: US
                              name: United States of America
                            county: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            language: E
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            postalCode: "94065"
                            primaryInd: false
                            state: CA
                            type: ""
                            typeDescription: ""
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      comments:
                        commentInfo:
                        - comment:
                            actionDate: 0101-01-01
                            actionType: ""
                            commentTitle: a
                            confidential: false
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            hotelCode: ""
                            internal: false
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            notificationLocation: ""
                            overrideInternal: false
                            protectDescription: false
                            text:
                              language: ""
                              value: ""
                            type: ""
                            typeDescription: a
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      company:
                        alternateLanguage: E
                        alternateName: a
                        blacklist: false
                        businessLocale: a
                        businessTitle: a
                        commissionCode: ""
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        corporateIdType: ""
                        creditRating: ""
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        vipDescription: Gold VIP
                        vipStatus: "2"
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      customer:
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        anonymization:
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                          anonymizationStatus: REQUESTED
                        birthCountry:
                          code: US
                          name: United States of America
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        birthPlace: New York
                        blacklist: false
                        businessTitle: Dr
                        citizenCountry:
                          code: US
                          name: United States of America
                        creditRating: ""
                        customerValue: a
                        gender: MALE
                        identifications:
                          identificationInfo:
                          - identification:
                              expirationDate: 2019-11-29
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              idType: PASSPORT
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              orderSequence: -100000000
                              primaryInd: false
                              registeredProperty: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        personName:
                        - envelopeGreeting: ""
                          givenName: Thomas
                          language: E
                          middleName: B
                          namePrefix: a
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          nameType: PRIMARY
                          salutation: ""
                          surname: Smith
                        privateProfile: false
                        profession: Engineer
                        vipDescription: Gold
                        vipStatus: "2"
                      emails:
                        emailInfo:
                        - email:
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            emailAddress: eg@example.com
                            emailFormat: HTML
                            lastModifierId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            orderSequence: -100000000
                            primaryInd: false
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      hasCommission: false
                      keywords:
                        keyword:
                        - keyword: a
                          keywordDetail:
                            newKeyword: a
                          type: ""
                      lastModifierId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastStayInfo:
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        lastRoom: ""
                        lastVisit: 0101-01-01
                        totalStay: -100000000
                      localizationGuestType: a
                      mailingActions:
                        active: false
                        mailingAction:
                        - code: ""
                          description: a
                        totalRows: -100000000
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      preferenceCollection:
                        preferenceType:
                        - availableQuantity: -100000000
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          maxQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          reservationPreference: false
                          sequence: ""
                      privacyInfo:
                        allowEmail: false
                        allowPhone: false
                        allowSMS: false
                        autoEnrollLoyaltyProgram: false
                        infoFromThirdParty: false
                        lastPrivacyPromptDate: 2000-01-01
                        marketResearchParticipation: false
                        optInAutoEnrollmentMember: false
                        optInEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInPhone: false
                        optInSms: false
                        optInThirdParty: false
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileImage:
                        description: a
                        hotelCode: ""
                        imageOrder: -100000000
                        imageSet: a
                        imageStyle: FULL
                        imageType: a
                        imageURL: a
                        language: ""
                        sequenceId: -100000000
                        website: a
                      profileIndicators:
                      - count: -100000000
                        indicatorName: a
                      profileMemberships:
                        profileMembership:
                        - benefits:
                          - code: ""
                            inactive: false
                            message: a
                          centralSetup: false
                          comment:
                            text:
                              language: ""
                              value: ""
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          currentPoints: -100000000
                          downgrade: GRACE
                          downgradeDescription: a
                          earningPreference: POINTS
                          effectiveDate: 0101-01-01
                          enrollmentResort: ""
                          enrollmentSource: ""
                          excludeFromBatch: false
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          inactive: false
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          memberStatus: ""
                          membershipClass: MEM
                          membershipEnrollmentCode: ""
                          membershipId: ""
                          membershipIdNo: -100000000
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipType: ""
                          nameOnCard: Thomas Smith
                          newMembershipId: ""
                          orderSequence: -100000000
                          pointsLabel: a
                          preferredCard: false
                          primaryMembershipYn: a
                          programDescription: Hotel Plus Membership
                          rating: ""
                          reIssueNewCard: PENDING
                          signupDate: 0101-01-01
                          tierAdministration: DISABLED
                          upgradeDescription: a
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      profileType: GUEST
                      protectedBy: a
                      registeredProperty: ""
                      requestForHotel: ""
                      statusCode: ACTIVE
                      telephones:
                        telephoneInfo:
                        - telephone:
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            extension: "2"
                            lastModifierId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            orderSequence: -100000000
                            phoneNumber: +1 415 555 0100
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            primaryInd: false
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      userDefinedFields:
                        characterUDFs:
                        - altname: a
                          name: a
                          value: a
                        dateUDFs:
                        - altname: a
                          name: a
                          value: 0101-01-01
                        numericUDFs:
                        - altname: a
                          name: a
                          value: -100000000
                    profileIdList:
                    - id: a
                      idContext: a
                      type: ""
                  totalRows: -100000000
          description: Response object for fetching unique guest profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GuestProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get guest profile by guest ID
      tags:
      - Profile
  /hotels/{hotelId}/memberships/{membershipId}:
    get:
      description: Get a memberships issued awards points per property. <p><strong>OperationId:</strong>getMembershipAwardPointsByHotel</p>
      operationId: getMembershipAwardPointsByHotel
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipAwardPointsByHotel'
          description: Response object for fetching member award points by Hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipAwardPointsByHotel not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Membership Issued awards points '
      tags:
      - ProfileMembership
  /hotels/{hotelId}/profiles/{profileId}/commissionAccount:
    put:
      description: You can use this API to copy the commission account on a profile
        <p><strong>OperationId:</strong>copyProfileCommissionAccount</p>
      operationId: copyProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccountCopy'
        description: Request object for copying transaction groups configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy profile commission account
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccountCopy
  /membershipClaims:
    get:
      description: Retrieve available membership claims without specifying the membership
        ID. <p><strong>OperationId:</strong>getAllMembershipClaims</p>
      operationId: getAllMembershipClaims
      parameters:
      - description: Id to get the claims.
        in: query
        name: membershipId
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: Membership Type code.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of user-definable claim to be searched.
        in: query
        name: claimType
        schema:
          type: string
      - description: Source of the membership claim.
        in: query
        name: source
        schema:
          enum:
          - Ocis
          - Opms
          - Web
          type: string
      - description: Unique application user ID of the person responsible for handling
          the claim.
        in: query
        name: owner
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: claimNumber
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: claimNoContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: claimNoType
        schema:
          type: string
      - description: Property where the stay took place.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Reservation confirmation or booking reference number.
        in: query
        name: confirmationNo
        schema:
          type: string
      - description: Application user ID of the user who entered the claim.
        in: query
        name: submitter
        schema:
          type: string
      - description: "Status of the claim.(Open, Waiting for Manager, etc.)"
        in: query
        name: claimStatus
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: closeDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: closeDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: claimDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: claimDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: replyByEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: replyByStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - description: Claim approve or reject status.
        in: query
        name: approvalStatus
        schema:
          enum:
          - Approved
          - Rejected
          - Pending
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaims'
          description: Response object for fetching membership claims.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaims not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership claims
      tags:
      - ProfileMembership
    post:
      description: This will create membership claim details based on the claim number
        and instructions provided in the request. <p><strong>OperationId:</strong>postMembershipClaim</p>
      operationId: postMembershipClaim
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipClaim'
        description: Request object for creating membership claim.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create membership Claim
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipClaim
  /membershipClaims/{claimId}:
    get:
      description: Get membership claim details based on the claim number and instructions
        provided in the request. <p><strong>OperationId:</strong>getMembershipClaim</p>
      operationId: getMembershipClaim
      parameters:
      - in: path
        name: claimId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Simple type for membership claim instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ClaimDetail
            - ClaimActivityLog
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaim'
          description: Response object for fetching membership claim.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaim not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get membership claim '
      tags:
      - ProfileMembership
    put:
      description: Change membership claim details based on the claim number and instructions
        provided in the request. <p><strong>OperationId:</strong>changeMembershipClaim</p>
      operationId: changeMembershipClaim
      parameters:
      - in: path
        name: claimId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipClaim'
        description: Request object for changing membership claim information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change membership Claim
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipClaim
  /membershipPoints/calculations:
    post:
      description: Start Membership Points Calculation process <p><strong>OperationId:</strong>calculateMembershipPoints</p>
      operationId: calculateMembershipPoints
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipPointsToCalculate'
        description: Request to run membership points calculation job.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Calculate Membership Points
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipPointsToCalculate
  /membershipTierProjections:
    get:
      description: Retrieve a list of membership Tier Projection such as upgrades
        and downgrades. <p><strong>OperationId:</strong>getMembershipTierProjections</p>
      operationId: getMembershipTierProjections
      parameters:
      - description: Membership Card Number.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Type of the Membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Date for which Tier projections is fetched.
        in: query
        name: projectionDate
        schema:
          format: date
          type: string
      - description: Upgrade And Downgrade
        in: query
        name: projectionType
        schema:
          enum:
          - Upgrade
          - Downgrade
          - UpgradeAndDowngrade
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTierProjections'
          description: Response object for fetching Membership Tier Process Text.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTierProjections not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Tier Projection
      tags:
      - Profile
  /membershipTransaction/{membershipTransactionId}/awardPoints:
    get:
      description: "Retrieves the validated rule used to generate award points, the\
        \ type of points, number of points, cost per point, rule code for the award\
        \ points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionAwardPoints</p>"
      operationId: getMembershipTransactionAwardPoints
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPoints'
          description: Response object for fetching membership transaction points
            information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionAwardPoints not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the Award Points Accrued for the current points transaction.
      tags:
      - ProfileMembership
  /membershipTransaction/{membershipTransactionId}/pointRejectionReasons:
    get:
      description: "Retrieves the rule used to generate points and the reason the\
        \ points were not awarded (validation failure, for e.g.'Membership level requirements\
        \ not met'). <p><strong>OperationId:</strong>getMembershipTransactionPointsRejectionReasons</p>"
      operationId: getMembershipTransactionPointsRejectionReasons
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/pointsRejectionReasons'
          description: Response object for fetching member transactions points rejection
            reasons information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionPointsRejectionReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the reason points were not awarded for a given points transaction.
      tags:
      - ProfileMembership
  /membershipTransaction/{membershipTransactionId}/rates:
    get:
      description: "Retrieves the dates of the stay, the rate code, the PMS rate amount,\
        \ the central rate amount, the central currency and the market code associated\
        \ with the stay. <p><strong>OperationId:</strong>getMembershipTransactionRates</p>"
      operationId: getMembershipTransactionRates
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/rates'
          description: Response object for fetching Membership Transaction Rates information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the rate details associated to current points transaction.
      tags:
      - ProfileMembership
  /membershipTransaction/{membershipTransactionId}/revenue:
    get:
      description: "Retrieves the date the revenue was recognized, the revenue type\
        \ (PMS revenue buckets are seen as revenue types in ORS), PMS revenue and\
        \ central <p><strong>OperationId:</strong>getMembershipTransactionRevenue</p>"
      operationId: getMembershipTransactionRevenue
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenues'
          description: Response object for fetching Membership Transaction Revenue.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionRevenue not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the revenue details for the stay associated with current point
        transaction.
      tags:
      - ProfileMembership
  /membershipTransaction/{membershipTransactionId}/tierPoints:
    get:
      description: "Retrieves the validated rule used to generate tier points, the\
        \ type of points, number of points, cost per point, rule code for the award\
        \ points, billing group the points belong. <p><strong>OperationId:</strong>getMembershipTransactionTierPoints</p>"
      operationId: getMembershipTransactionTierPoints
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPoints'
          description: Response object for fetching membership transaction points
            information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionTierPoints not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the Tier Points Accrued for the current points transaction
      tags:
      - ProfileMembership
  /membershipTransactions/{membershipTransactionId}:
    get:
      description: Retrieve membership transactions. <p><strong>OperationId:</strong>getMembershipTransaction</p>
      operationId: getMembershipTransaction
      parameters:
      - in: path
        name: membershipTransactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransaction'
          description: Response object for fetching a membership transaction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransaction not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a membership transaction
      tags:
      - ProfileMembership
  /memberships/{membershipId}/award:
    get:
      description: Export members information for Fulfillment house processing <p><strong>OperationId:</strong>exportMembershipAward</p>
      operationId: exportMembershipAward
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: rateInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: totalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: pointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: cancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: cancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: cancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: cancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: rawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: awardNumber
        schema:
          type: number
      - description: Rate code associated with the award.
        in: query
        name: rateCode
        schema:
          type: string
      - description: Rate code description associated with the award.
        in: query
        name: rateDescription
        schema:
          type: string
      - description: Code for the room type in which the award was issued.
        in: query
        name: roomLabel
        schema:
          type: string
      - description: Description of the Room.
        in: query
        name: roomDescription
        schema:
          type: string
      - description: Indicates which room category it belongs.
        in: query
        name: roomCategory
        schema:
          type: string
      - description: The date of the reservation associated with the award. There
          may be more than one date (multiple nights) associated with award.
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: awardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: productInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: productInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: productInfoPointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: productInfoCancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: productInfoCancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: productInfoCancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: productInfoCancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: productInfoRawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: productInfoAwardNumber
        schema:
          type: number
      - description: Package/Product code for the award .
        in: query
        name: packageCode
        schema:
          type: string
      - description: Description of the product.
        in: query
        name: packageDescription
        schema:
          type: string
      - description: The valid time period from when the award can be issued.
        in: query
        name: awardValidFrom
        schema:
          format: date
          type: string
      - description: The valid time to an issued award.
        in: query
        name: awardValidTo
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: upgradeInfoAwardType
        schema:
          type: string
      - description: HotelCode where the award will be consumed.
        in: query
        name: upgradeInfoHotelId
        schema:
          type: string
      - description: Total award points available for redemption.
        in: query
        name: upgradeInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: upgradeInfoPointsRequired
        schema:
          type: number
      - description: The award points that will be forfeited if the cancel penalty
          charge is applied.
        in: query
        name: upgradeInfoCancelPenaltyPoints
        schema:
          type: number
      - description: Number of days before arrival when a reservation may be cancelled
          without an award points penalty.
        in: query
        name: upgradeInfoCancelPenaltyDays
        schema:
          type: number
      - description: The cancel penalty charge.
        in: query
        name: upgradeInfoCancelPenaltyCharge
        schema:
          type: number
      - description: The penalty charge is either a percentage or a flat number of
          points.
        in: query
        name: upgradeInfoCancelPenaltyType
        schema:
          type: string
      - description: Issue key in format of Raw data.
        in: query
        name: upgradeInfoRawIssueKey
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: upgradeInfoAwardNumber
        schema:
          type: number
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoomCategory
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoomCategory
        schema:
          type: string
      - description: Indicates room type Description for the room prior to the upgrade.
        in: query
        name: fromRoomDescription
        schema:
          type: string
      - description: Indicates room type Description of the upgrade room.
        in: query
        name: toRoomDescription
        schema:
          type: string
      - description: Indicates room type code for the room prior to the upgrade.
        in: query
        name: fromRoom
        schema:
          type: string
      - description: Indicates room type code of the upgrade room.
        in: query
        name: toRoom
        schema:
          type: string
      - description: The date of the reservation associated with the award. There
          may be more than one date (multiple nights) associated with award.
        in: query
        name: upgradeInfoStayDate
        schema:
          format: date
          type: string
      - description: Unique code that identifies this award.
        in: query
        name: otherInfoAwardType
        schema:
          type: string
      - description: Beginning date of the award.
        in: query
        name: sellBeginDate
        schema:
          format: date
          type: string
      - description: End date that the award will be available.
        in: query
        name: sellEndDate
        schema:
          format: date
          type: string
      - description: Descriptive name of the award.
        in: query
        name: shortDescription
        schema:
          type: string
      - description: "The actual value of the award, in the amount of currency."
        in: query
        name: awardValue
        schema:
          type: number
      - description: Total award points available for redemption.
        in: query
        name: otherInfoTotalAvailablePoints
        schema:
          type: number
      - description: The number of points that must be redeemed for this award.
        in: query
        name: otherInfoPointsRequired
        schema:
          type: number
      - description: Detail description of the award.
        in: query
        name: longDescription
        schema:
          type: string
      - description: "An identifying number of the award, assigned by the system when\
          \ the award was issued."
        in: query
        name: otherInfoAwardNumber
        schema:
          type: number
      - description: HotelCode where the award will be consumed.
        in: query
        name: issueAwardsHotelId
        schema:
          type: string
      - description: PMS Reservation number.
        in: query
        name: externalReservationNumber
        schema:
          type: string
      - description: ORS Booking number.
        in: query
        name: confirmationBookingNumber
        schema:
          type: string
      - description: The source for the reservation associated with the award.
        in: query
        name: awardSource
        schema:
          type: string
      - description: Arrival date of the reservation associated with the award.
        in: query
        name: arrivalDate
        schema:
          format: date
          type: string
      - description: Departure date of the reservation associated with the award.
        in: query
        name: departureDate
        schema:
          format: date
          type: string
      - description: Award Number to identify member's information.
        in: query
        name: exportInfoAwardNumber
        schema:
          type: number
      - description: Person's name in an external system.
        in: query
        name: nameType
        schema:
          enum:
          - Primary
          - Alternate
          - Incognito
          - External
          - Phonetic
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: Full display Name.
        in: query
        name: fullName
        schema:
          type: string
      - description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
        in: query
        name: namePrefix
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: The middle name of the person name.
        in: query
        name: middleName
        schema:
          type: string
      - description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
          \ Ret., Esq.)"
        in: query
        name: nameSuffix
        schema:
          type: string
      - description: "Degree or honors (e.g., Ph.D., M.D.)"
        in: query
        name: nameTitle
        schema:
          type: string
      - description: Phone number
        in: query
        name: phoneNumber
        schema:
          type: string
      - description: "It returns a Company Name,If the member is associated with a\
          \ company."
        in: query
        name: companyName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: The postal barcode for the address.
        in: query
        name: barCode
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          format: date-time
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          format: date-time
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the type of address (e.g. home, business, other)."
        in: query
        name: type
        schema:
          type: string
      - description: Describes the type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: "Indicates whether to update the reservations or not. If true\
          \ and the address is primary, then all associated active reservations will\
          \ be updated with the new primary address."
        in: query
        name: updateReservations
        schema:
          type: boolean
      - description: "When the address is unformatted (FormattedInd=\"false\") these\
          \ lines will contain free form address details. When the address is formatted\
          \ and street number and street name must be sent independently, the street\
          \ number will be sent using StreetNmbr, and the street name will be sent\
          \ in the first AddressLine occurrence."
        explode: true
        in: query
        name: addressLine
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: Post Office City Extension Code number. City Extension mainly
          used for UK addresses.
        in: query
        name: cityExtension
        schema:
          type: string
      - description: "County or District Name (e.g., Fairfax). This is read only."
        in: query
        name: county
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: code
        schema:
          type: string
      - description: Language code associated with the address
        in: query
        name: language
        schema:
          type: string
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: characterUDFsAltName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to hold user defined field of Character Type. It is highly\
          \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
          \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
          \ using enumeration, to provide flexibility of different name usage if required."
        explode: true
        in: query
        name: characterUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: characterUDFsValue
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: NumericUDFsAltName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Name of user defined field.
        explode: true
        in: query
        name: NumericUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: NumericUDFsValue
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Label of user defined field used by vendors or customers.
        explode: true
        in: query
        name: DateUDFsAltname
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to hold user defined field of Date Type. It is highly recommended\
          \ to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
          \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
          \ to provide flexibility of different name usage if required."
        explode: true
        in: query
        name: DateUDFsName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of user defined field.
        explode: true
        in: query
        name: DateUDFsValue
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: exportMembershipAward not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Export Membership Award
      tags:
      - ProfileMembership
  /memberships/{membershipId}/awardExports:
    get:
      description: Get members information for Fulfillment house processing <p><strong>OperationId:</strong>getMembershipAwardExportInfo</p>
      operationId: getMembershipAwardExportInfo
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Award Number to identify member's information.
        in: query
        name: awardNumber
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipAwardExportInfo'
          description: Response object to fetch members information for Fulfillment
            house processing.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipAwardExportInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Award Export Information
      tags:
      - ProfileMembership
  /memberships/{membershipId}/awards:
    get:
      description: Retrieve a list of member issued awards. <p><strong>OperationId:</strong>getMembershipIssueAwardsList</p>
      operationId: getMembershipIssueAwardsList
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: membershipType
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipIssueAwards'
          description: Response object for fetching member issued award list.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipIssueAwardsList not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Membership Award list
      tags:
      - ProfileMembership
  /memberships/{membershipId}/claims:
    get:
      description: Retrieve available membership claims by specifying the membership
        ID. <p><strong>OperationId:</strong>getMembershipClaims</p>
      operationId: getMembershipClaims
      parameters:
      - description: Id to get the claims.
        in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: Membership Type code.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of user-definable claim to be searched.
        in: query
        name: claimType
        schema:
          type: string
      - description: Source of the membership claim.
        in: query
        name: source
        schema:
          enum:
          - Ocis
          - Opms
          - Web
          type: string
      - description: Unique application user ID of the person responsible for handling
          the claim.
        in: query
        name: owner
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: claimNumber
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: claimNoContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: claimNoType
        schema:
          type: string
      - description: Property where the stay took place.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Reservation confirmation or booking reference number.
        in: query
        name: confirmationNo
        schema:
          type: string
      - description: Application user ID of the user who entered the claim.
        in: query
        name: submitter
        schema:
          type: string
      - description: "Status of the claim.(Open, Waiting for Manager, etc.)"
        in: query
        name: claimStatus
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: closeDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: closeDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: claimDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: claimDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: replyByEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: replyByStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - description: Claim approve or reject status.
        in: query
        name: approvalStatus
        schema:
          enum:
          - Approved
          - Rejected
          - Pending
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipClaims'
          description: Response object for fetching membership claims.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipClaims not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership claims
      tags:
      - ProfileMembership
  /memberships/{membershipId}/fullfillmentExportLogs:
    get:
      description: Use this API to Get Fulfillment Export Logs. <p><strong>OperationId:</strong>getFulfillmentExportLogs</p>
      operationId: getFulfillmentExportLogs
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: membershipType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fulfillmentExportedLogs'
          description: Response object which has list of membership fulfillment export
            logs and membership extract information(Exclude Extract -Y/N).
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FulfillmentExportLogs not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fulfillment Export Logs
      tags:
      - Profile
  /memberships/{membershipId}/pointsToExpire:
    get:
      description: Use this API to retrieve your Points To Expire by membershipId.
        <p><strong>OperationId:</strong>getMemberPointsToExpire</p>
      operationId: getMemberPointsToExpire
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberPointsToExpire'
          description: Response object for fetching member points to expire information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MemberPointsToExpire not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get  membership points to expire '
      tags:
      - ProfileMembership
    put:
      description: This will allow you to extend the expiration date based on the
        rule defined in the Grace Period in months. <p><strong>OperationId:</strong>extendMemberPointsToExpire</p>
      operationId: extendMemberPointsToExpire
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/extendMemberPointsToExpire'
        description: Request object to extend a member points to expire.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend Member Points set to Expire
      tags:
      - ProfileMembership
      x-codegen-request-body-name: extendMemberPointsToExpire
  /memberships/{membershipId}/transactions:
    get:
      description: Get membership transactions summary information by specifying membership
        ID <p><strong>OperationId:</strong>getMembershipTransactionsSummary</p>
      operationId: getMembershipTransactionsSummary
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransactionsSummary'
          description: Response object for fetching member point totals information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get membership transactions '
      tags:
      - ProfileMembership
    post:
      description: Create a new membership transaction . <p><strong>OperationId:</strong>postMembershipTransaction</p>
      operationId: postMembershipTransaction
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipTransaction'
        description: Request object for creating a membership transaction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post a membership transaction
      tags:
      - ProfileMembership
      x-codegen-request-body-name: membershipTransaction
  /memberships/{membershipType}/membershipNumbers:
    post:
      description: This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>
      operationId: postMembershipNumber
      parameters:
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membershipNumber'
        description: Request object for generating membership number.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Generate membership number
      tags:
      - Profile
      x-codegen-request-body-name: membershipNumber
  /profileForEnrollment:
    get:
      description: Get detailed information regarding match profiles <p><strong>OperationId:</strong>getEnrollmentMatchProfiles</p>
      operationId: getEnrollmentMatchProfiles
      parameters:
      - description: Enrollment details will be fetched from this External database.
        in: query
        name: externalDatabaseID
        schema:
          type: string
      - description: The types of Profile handled by the web service.
        in: query
        name: matchedProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: Language code associated with an alternate name.
        in: query
        name: language
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: "Family name, last name. May also be used for full name if the\
          \ sending system does not have the ability to separate a full name into\
          \ its parts, e.g. the surname element may be used to pass the full name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Degree or honors (e.g., Ph.D., M.D.)"
        in: query
        name: nameTitle
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: addressId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: addressIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: addressIdType
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Defines the type of address (e.g. home, business, other)."
        in: query
        name: type
        schema:
          type: string
      - description: "When the address is unformatted (FormattedInd=\"false\") these\
          \ lines will contain free form address details. When the address is formatted\
          \ and street number and street name must be sent independently, the street\
          \ number will be sent using StreetNmbr, and the street name will be sent\
          \ in the first AddressLine occurrence."
        explode: true
        in: query
        name: addressLine
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "County or District Name (e.g., Fairfax). This is read only."
        in: query
        name: county
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Language code associated with the address
        in: query
        name: languageCode
        schema:
          type: string
      - description: Business/Market Segment associated to the profile.
        explode: true
        in: query
        name: businessSegment
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Territory associated to the profile.
        in: query
        name: territory
        schema:
          type: string
      - description: Trace Code associated to the profile.
        in: query
        name: traceCode
        schema:
          type: string
      - description: Owner Code associated to the profile.
        in: query
        name: ownerCode
        schema:
          type: string
      - description: Influence Code associated to the profile.
        in: query
        name: influenceCode
        schema:
          type: string
      - description: Indicates whether all the records are included in the response
          or not. Absence of the attribute values should be consider as all rows fetched
          in the response.
        in: query
        name: hasMore
        schema:
          type: boolean
      - description: Total number of rows queried
        in: query
        name: totalResults
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: telephoneId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: telephoneIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: telephoneIdType
        schema:
          type: string
      - description: Telephone number assigned to a single location.
        in: query
        name: phoneNumber
        schema:
          type: string
      - description: "Indicates type of technology associated with this telephone\
          \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
        in: query
        name: phoneTechType
        schema:
          type: string
      - description: "Describes the type of telephone number, in the context of its\
          \ general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
          \ Day, Evening)."
        in: query
        name: phoneUseType
        schema:
          type: string
      - description: Description of the PhoneUseType code
        in: query
        name: phoneUseTypeDescription
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: telephonePrimaryInd
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: emailInfoId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: emailInfoIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: emailInfoIdType
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: emailPrimaryInd
        schema:
          type: boolean
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: urlId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: urlIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: urlIdType
        schema:
          type: string
      - description: "When true, indicates a primary information."
        in: query
        name: urlPrimaryInd
        schema:
          type: boolean
      - description: "Defines the purpose of the URL address, such as personal, business,\
          \ public, etc."
        in: query
        name: urlType
        schema:
          type: string
      - description: Card Number of the membership.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Name to be displayed on the membership card.
        in: query
        name: nameOnCard
        schema:
          type: string
      - description: Indicates the membership level.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Code.
        in: query
        name: paymentMethodCode
        schema:
          type: string
      - description: Amount/Fee to enroll to membership Program.
        in: query
        name: amount
        schema:
          type: number
      - description: Code.
        in: query
        name: amountCode
        schema:
          type: string
      - description: Payment Comments.
        in: query
        name: comments
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/enrollmentMatchProfiles'
          description: Response object to fetch match profiles for enrollment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EnrollmentMatchProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profiles for Enrollment
      tags:
      - ProfileMembership
  /profileListOfValues/availableARAddresses:
    get:
      description: Use this API to fetch the available AR Addresses List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailableARAddresses</p>
      operationId: getAvailableARAddresses
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        required: true
        schema:
          type: string
      - description: The property where the AR Account exists or is being created.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: The Account Number of the AR Account of the Profile.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availableARAddresses'
          description: Response to the request to fetch the available Accounts Receivables(AR)
            Addresses for a Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableARAddresses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get available AR Addresses '
      tags:
      - ProfileLOV
  /profileListOfValues/availablePreferences:
    get:
      description: Use this API to fetch the available preferences List Of Values
        for profiles <p><strong>OperationId:</strong>getAvailablePreferences</p>
      operationId: getAvailablePreferences
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: Property for which preferences are to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Maximum records to be fetched.
        in: query
        name: maxFetchSize
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/availablePreferences'
          description: A collection of preferences
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailablePreferences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get available preferences
      tags:
      - ProfileLOV
  /profileMembershipStatistics:
    get:
      description: "Retrieve the summary statistics and/or the details of each of\
        \ the membership transactions and its points.  You can filter by membership\
        \ Type, or Membership Number. <p><strong>OperationId:</strong>getProfileMembershipStatistics</p>"
      operationId: getProfileMembershipStatistics
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Number of the membership card.
        in: query
        name: membershipCardNo
        required: true
        schema:
          type: string
      - description: Type of membership.
        in: query
        name: membershipType
        required: true
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Flag indicating whether to fetch detailed membership points information
          or just a summary of the total of the points.
        in: query
        name: transactionDetail
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileMembershipStatistics'
          description: Response of the WS operation FetchProfileMembershipPoints.
            It contains the summary statistics and/or the details of each of the membership
            transactions and its points.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileMembershipStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Membership statistics '
      tags:
      - ProfileStatistics
  /profileStatistics:
    get:
      description: This API provides summary/detail/revenue statistics information
        <p><strong>OperationId:</strong>getProfileStatistics</p>
      operationId: getProfileStatistics
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicate to get revenue of Stay Records.
        in: query
        name: reportType
        required: true
        schema:
          enum:
          - Reservation
          - Revenue
          - ProfileStayRecords
          - DetailStayRecordsRevenue
          type: string
      - description: Stay from date for report
        in: query
        name: stayFrom
        schema:
          format: date
          type: string
      - description: Stay to date for report
        in: query
        name: stayTo
        schema:
          format: date
          type: string
      - description: Flag to indicate whether summary/detail report is requested.
        in: query
        name: summary
        schema:
          type: boolean
      - description: Flag to include passerBy records.
        in: query
        name: passerBy
        schema:
          type: boolean
      - description: Profile Role Type All.
        in: query
        name: contactProfileRoleType
        schema:
          enum:
          - AccountContact
          - AgentContact
          - ReservationContact
          - ReservationBillingContact
          - All
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: stayRecordId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: stayRecordIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: stayRecordIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileStatistics'
          description: "Response object for fetching profile stay/reservation/revenue\
            \ statistics. This object contains collection of summary or detail,Success,Warnings\
            \ and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profile Statistics
      tags:
      - ProfileStatistics
  /profiles:
    get:
      description: "Use this API when you want to search for a profile as part of\
        \ a booking process or to manage a profile data. The response will include\
        \ a list of profiles that exist in OPERA, based on your search criteria. \
        \ For example, you want to see if a profile for Mr David Smith exists - you\
        \ can search by various criteria, such as first name, last name, email.  The\
        \ response will include a list of any profiles that exist for Mr David Smith.\
        \  If a profile matches the criteria, and you want to get more details of\
        \ that profile, proceed to use getProfile with the profileId in the request.\
        \ Maximum response data limit is 1000 records, so use more query parameters\
        \ to narrow your results. This API is not designed to support sync between\
        \ two systems or initial upload of data.<p><strong>OperationId:</strong>getProfiles</p>"
      operationId: getProfiles
      parameters:
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: excludeInactive
        schema:
          type: boolean
      - description: "Hotel Code, It is used to filter hotel specific children to\
          \ this specific hotel code."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: includeHasHierarchyOnly
        schema:
          type: boolean
      - description: Include primary owners in the search.
        in: query
        name: includePrimaryOwnersOnly
        schema:
          type: boolean
      - description: Include purged profiles in the search.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: "When search type is PatronTrackingSystemMemberProfiles, the\
          \ FetchProfiles will return the Membership Number of the searched Membership\
          \ Type regardless of primary flag or sequence of the profile memberships."
        in: query
        name: searchType
        schema:
          enum:
          - PurgeableProfiles
          - Any
          - PatronTrackingSystemMemberProfiles
          type: string
      - description: When true response will return summary information otherwise
          detailed information.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - description: Search string to be used for super search.
        in: query
        name: searchString
        schema:
          type: string
      - description: Indicates whether to include Anonymized Profiles.
        in: query
        name: includeAnonymized
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        explode: true
        in: query
        name: profileType
        schema:
          items:
            enum:
            - Guest
            - Agent
            - Company
            - Group
            - Source
            - Employee
            - Hotel
            - Vendor
            - Contact
            - Purge
            - BusinessHeader
            - BillingAccount
            - Activity
            - Potential
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: corporateIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name or Company Name."
        in: query
        name: profileName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: incognitoName
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: incognitoGivenName
        schema:
          type: string
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: city
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Keyword associated to the profile.
        in: query
        name: keyword
        schema:
          type: string
      - description: "Any communication method associated to the profile such as phone,\
          \ fax, eMail id."
        in: query
        name: communication
        schema:
          type: string
      - description: Membership number associated to the profile.
        in: query
        name: membership
        schema:
          type: string
      - description: Member Type of searching profile.
        in: query
        name: membershipType
        schema:
          type: string
      - explode: true
        in: query
        name: ownerCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership level associated to the profile.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Account Receivable associated to the profile.
        in: query
        name: aRNumber
        schema:
          type: string
      - description: Tax ID associated to the profile
        in: query
        name: taxID
        schema:
          type: string
      - description: Business/Market Segment associated to the profile.
        explode: true
        in: query
        name: businessSegment
        schema:
          items:
            type: string
          type: array
        style: form
      - description: When true indicates that only profiles with AR account fetched.
        in: query
        name: accountsReceivables
        schema:
          type: boolean
      - description: When true indicates that only profiles with client id are searched
          for.
        in: query
        name: corporateProfiles
        schema:
          type: boolean
      - description: When true indicates that only profiles with an Address Line 1
          and Country or at least one Communications Type will be displayed.
        in: query
        name: excludeIncompleteProfiles
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: negotiatedRates
        schema:
          type: boolean
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: relatedProfileExcludeInactive
        schema:
          type: boolean
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: realtedProfileIncludeHasHierarchyOnly
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: relatedProfileNegotiatedRates
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        in: query
        name: relatedProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: relatedProfileName
        schema:
          type: string
      - description: Indicates whether to exclude Protected Profiles.
        in: query
        name: protectedProfiles
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludedProfilesId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: excludedProfilesIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: excludedProfilesIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Any identification number associated with the profile such as\
          \ Passport Number, StateID."
        in: query
        name: identificationNo
        schema:
          type: string
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - NegotiatedRate
            - GdsNegotiatedRate
            - Comment
            - Membership
            - Preference
            - Keyword
            - HistoryReservation
            - FutureReservation
            - Relationship
            - Correspondence
            - Routing
            - Indicators
            - Profile
            - WebUserAccount
            - SalesInfo
            - ECertificate
            - Subscriptions
            - PrimaryAccountInfo
            - DeliveryMethods
            - RoomOwnership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique ID of the Filter used to filter profiles.
        in: query
        name: predefinedFilterId
        schema:
          type: number
      - description: Filter code.
        in: query
        name: predefinedFilterCode
        schema:
          type: string
      - explode: true
        in: query
        name: prioritieCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileSummaries'
          description: "Response object for fetching profiles. This object contains\
            \ profile primary details,profile summary details,master info list containing\
            \ code and description used as lookup for description."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Search for profile(s)
      tags:
      - Profile
    post:
      description: "When a profile doesn&apos;t already exist in OPERA, use this to\
        \ create a new profile. The response will provide the newly created profile&apos;s\
        \ OPERA ID in the Location header. There are many fields in postProfile defined\
        \ by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully\
        \ to use postProfile.<p><strong>OperationId:</strong>postProfile</p>"
      operationId: postProfile
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfile_request'
        description: Request object for creation of profiles. This object contains
          profile details with unique identifiers for each profile. The standard optional
          Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a profile
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/action/validate:
    get:
      description: "This API validates/checks allowed actions, the existence of attached\
        \ records and/or indicators of a profile. <p><strong>OperationId:</strong>checkProfileType</p>"
      operationId: checkProfileType
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: Simple type that corresponds to check profile instructions.
        in: query
        name: checkProfileInstruction
        schema:
          enum:
          - HasWebAccounts
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkedProfiles'
          description: "Response for checking allowed actions, existence of attached\
            \ records, or indicators of a profile."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: checkProfileType not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate and check profiles
      tags:
      - Profile
  /profiles/activityLog:
    get:
      description: Use this API to fetch the activity log for a specific profile.  This
        will allow you to see the changes that have occurred on this profile. <p><strong>OperationId:</strong>getProfileActivityLog</p>
      operationId: getProfileActivityLog
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Hotel code.
        in: query
        name: activityParamsHotelId
        schema:
          type: string
      - description: Activity module.
        in: query
        name: module
        schema:
          enum:
          - Reservation
          - Contract
          - Allotment
          - Outlookview
          - Profile
          - Accountreceivables
          - GdsConvRateCodes
          - RateCode
          - Billing
          - Activity
          type: string
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - in: query
        name: activityType
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIDs
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileActivityLog'
          description: "Response object for fetching profile activity log. This object\
            \ contains collection of user activity log for the profile,Success,Warnings\
            \ and Errors related to this operation"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch profile activity log
      tags:
      - Profile
  /profiles/{profileId}:
    delete:
      description: "Use deleteProfile to inactivate and remove a profile from OPERA.\
        \ The profile will stay in the Database, until a nightly purge process is\
        \ run to remove profile details from the OPERA database. <p><strong>OperationId:</strong>deleteProfile</p>"
      operationId: deleteProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Forget or delete a profile by ID
      tags:
      - Profile
    get:
      description: "Use this API to retrieve a specific profile&apos;s detail information\
        \ using OPERA&apos;s profileId. You can retrieve any type of profile including\
        \ guest, travel agent, company, source, group, or contact. If you do not know\
        \ OPERA profileID, use getProfiles or getProfileByExtId API first to get OPERA\
        \ profileId.<p><strong>OperationId:</strong>getProfile</p>"
      operationId: getProfile
      parameters:
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: This element tells when the view profile should be logged.
        in: query
        name: logViewProfile
        schema:
          type: boolean
      - description: Flag to show inactive Room Owners.
        in: query
        name: showInactiveRoomOwners
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - Comment
            - Membership
            - Preference
            - Keyword
            - Correspondence
            - Profile
            - Indicators
            - SalesInfo
            - Relationship
            - Subscriptions
            - DeliveryMethods
            - GdsNegotiatedRate
            - NegotiatedRate
            - HistoryReservation
            - FutureReservation
            - WebUserAccount
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: value
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag indicating whether Profile is Enrolled to Primary Membership
          Program.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - NameChange
            - TaxIDChange
            - EnrollToPrimaryMembership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
            application/json:
              example:
                links:
                - href: ""
                  method: GET
                  operationId: ""
                  rel: ""
                  targetSchema: ""
                  templated: false
                  title: ""
                profiles:
                  profileInfo:
                  - profile:
                      addresses:
                        addressInfo:
                        - address:
                            addressLine:
                            - 500 Oracle Parkway
                            barCode: a
                            cityExtension: a
                            cityName: Redwood Shores
                            country:
                              code: US
                              name: United States of America
                            county: a
                            createDateTime: 2019-09-03T14:56:18.227Z
                            creatorId: a
                            language: E
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.228Z
                            postalCode: "94065"
                            primaryInd: false
                            state: CA
                            type: ""
                            typeDescription: ""
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      comments:
                        commentInfo:
                        - comment:
                            actionDate: 0101-01-01
                            actionType: ""
                            commentTitle: a
                            confidential: false
                            createDateTime: 2019-09-03T14:56:18.239Z
                            creatorId: a
                            hotelCode: ""
                            internal: false
                            lastModifierId: a
                            lastModifyDateTime: 2019-09-03T14:56:18.239Z
                            notificationLocation: ""
                            overrideInternal: false
                            protectDescription: false
                            text:
                              language: ""
                              value: ""
                            type: ""
                            typeDescription: a
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      company:
                        alternateLanguage: E
                        alternateName: a
                        blacklist: false
                        businessLocale: a
                        businessTitle: a
                        commissionCode: ""
                        companyName: "Example Corporation, Ltd."
                        companyName2: a
                        companyName3: a
                        corporateIdType: ""
                        creditRating: ""
                        currencyCode: USD
                        currencySymbol: a
                        decimalPlaces: -100000000
                        iATAInfo:
                          iATACompany: a
                          iATAConsortia: a
                        language: ""
                        nationality: US
                        nationalityDescription: United States of America
                        vipDescription: Gold VIP
                        vipStatus: "2"
                      createDateTime: 2000-09-03T14:56:18.259Z
                      creatorId: "1200"
                      customer:
                        alienInfo:
                          alienRegistrationNo: ""
                          immigrationStatus: a
                          visaValidityType: a
                        anonymization:
                          anonymizationDate: 2019-09-03T14:56:18.21Z
                          anonymizationStatus: REQUESTED
                        birthCountry:
                          code: US
                          name: United States of America
                        birthDate: 2000-01-01
                        birthDateMasked: ""
                        birthPlace: New York
                        blacklist: false
                        businessTitle: Dr
                        citizenCountry:
                          code: US
                          name: United States of America
                        creditRating: ""
                        customerValue: a
                        gender: MALE
                        identifications:
                          identificationInfo:
                          - identification:
                              expirationDate: 2019-11-29
                              idNumber: C03005988
                              idNumberMasked: C030059XX
                              idType: PASSPORT
                              issuedCountry: USA
                              issuedDate: 2009-11-30
                              issuedPlace: New York
                              orderSequence: -100000000
                              primaryInd: false
                              registeredProperty: ""
                        language: EN
                        nationality: US
                        nationalityDescription: a
                        personName:
                        - envelopeGreeting: ""
                          givenName: Thomas
                          language: E
                          middleName: B
                          namePrefix: a
                          nameSuffix: a
                          nameTitle: Mr
                          nameTitleSuffix: -100000000
                          nameType: PRIMARY
                          salutation: ""
                          surname: Smith
                        privateProfile: false
                        profession: Engineer
                        vipDescription: Gold
                        vipStatus: "2"
                      emails:
                        emailInfo:
                        - email:
                            createDateTime: 2019-09-03T14:56:18.234Z
                            creatorId: "1232"
                            emailAddress: eg@example.com
                            emailFormat: HTML
                            lastModifierId: "1232"
                            lastModifyDateTime: 2019-09-03T14:56:18.234Z
                            orderSequence: -100000000
                            primaryInd: false
                            type: BUSINESSEMAIL
                            typeDescription: Business Email Address
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      hasCommission: false
                      keywords:
                        keyword:
                        - keyword: a
                          keywordDetail:
                            newKeyword: a
                          type: ""
                      lastModifierId: "1200"
                      lastModifyDateTime: 2000-09-03T14:56:18.259Z
                      lastStayInfo:
                        lastRate:
                          amount: -100000000
                          currencyCode: aaa
                        lastRoom: ""
                        lastVisit: 0101-01-01
                        totalStay: -100000000
                      localizationGuestType: a
                      mailingActions:
                        active: false
                        mailingAction:
                        - code: ""
                          description: a
                        totalRows: -100000000
                      markAsRecentlyAccessed: false
                      markForHistory: false
                      preferenceCollection:
                        preferenceType:
                        - availableQuantity: -100000000
                          createDateTime: 2019-09-03T14:56:18.249Z
                          creatorId: a
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.249Z
                          maxQuantity: -100000000
                          maxResortUsedQuantity: -100000000
                          preference:
                          - {}
                          preferenceType: ""
                          preferenceTypeDescription: ""
                          reservationPreference: false
                          sequence: ""
                      privacyInfo:
                        allowEmail: false
                        allowPhone: false
                        allowSMS: false
                        autoEnrollLoyaltyProgram: false
                        infoFromThirdParty: false
                        lastPrivacyPromptDate: 2000-01-01
                        marketResearchParticipation: false
                        optInAutoEnrollmentMember: false
                        optInEmail: false
                        optInMailingList: false
                        optInMarketResearch: false
                        optInPhone: false
                        optInSms: false
                        optInThirdParty: false
                      profileAccessType:
                        chainCode: a
                        croCode: a
                        hotelCode: a
                        sharedLevel: GLOBAL
                      profileImage:
                        description: a
                        hotelCode: ""
                        imageOrder: -100000000
                        imageSet: a
                        imageStyle: FULL
                        imageType: a
                        imageURL: a
                        language: ""
                        sequenceId: -100000000
                        website: a
                      profileIndicators:
                      - count: -100000000
                        indicatorName: a
                      profileMemberships:
                        profileMembership:
                        - benefits:
                          - code: ""
                            inactive: false
                            message: a
                          centralSetup: false
                          comment:
                            text:
                              language: ""
                              value: ""
                          createDateTime: 2019-09-03T14:56:18.247Z
                          creatorId: a
                          currentPoints: -100000000
                          downgrade: GRACE
                          downgradeDescription: a
                          earningPreference: POINTS
                          effectiveDate: 0101-01-01
                          enrollmentResort: ""
                          enrollmentSource: ""
                          excludeFromBatch: false
                          expireDate: 0101-01-01
                          expireDateExclusiveIndicator: false
                          inactive: false
                          lastModifierId: a
                          lastModifyDateTime: 2019-09-03T14:56:18.248Z
                          memberStatus: ""
                          membershipClass: MEM
                          membershipEnrollmentCode: ""
                          membershipId: ""
                          membershipIdNo: -100000000
                          membershipLevel: Gold
                          membershipLevelDescription: Gold Level
                          membershipType: ""
                          nameOnCard: Thomas Smith
                          newMembershipId: ""
                          orderSequence: -100000000
                          pointsLabel: a
                          preferredCard: false
                          primaryMembershipYn: a
                          programDescription: Hotel Plus Membership
                          rating: ""
                          reIssueNewCard: PENDING
                          signupDate: 0101-01-01
                          tierAdministration: DISABLED
                          upgradeDescription: a
                      profileRestrictions:
                        reason: ""
                        reasonDescription: a
                        restricted: false
                      profileType: GUEST
                      protectedBy: a
                      registeredProperty: ""
                      requestForHotel: ""
                      statusCode: ACTIVE
                      telephones:
                        telephoneInfo:
                        - telephone:
                            createDateTime: 2019-09-03T14:56:18.23Z
                            creatorId: "1234"
                            extension: "2"
                            lastModifierId: "1234"
                            lastModifyDateTime: 2019-09-03T14:56:18.231Z
                            orderSequence: -100000000
                            phoneNumber: +1 415 555 0100
                            phoneTechType: PHONE
                            phoneUseType: MOBILE
                            phoneUseTypeDescription: Mobile Phone Number
                            primaryInd: false
                          uniqueId:
                            id: a
                            idContext: a
                            type: ""
                      userDefinedFields:
                        characterUDFs:
                        - altname: a
                          name: a
                          value: a
                        dateUDFs:
                        - altname: a
                          name: a
                          value: 0101-01-01
                        numericUDFs:
                        - altname: a
                          name: a
                          value: -100000000
                    profileIdList:
                    - id: a
                      idContext: a
                      type: ""
                  totalRows: -100000000
          description: Response object for fetching profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Profile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile by ID
      tags:
      - Profile
    put:
      description: "Use this to update a guests details on their profile.  You will\
        \ need to know the OPERA Profile ID to use this API, and you will also need\
        \ to know the List of Values for profile fields, such as AddressType, PhoneType,\
        \ Title.  <p><strong>OperationId:</strong>putProfile</p>"
      operationId: putProfile
      parameters:
      - description: OPERA internal profile ID which is used to uniquely identify
          the profile in OPERA. This ID is a primary identification of a profile in
          OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfile_request'
        description: Request object for change/modification of profile details. This
          object contains modified profile details with unique identifiers for each
          profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profile'
          description: "Response object for change/modification of profile details.\
            \ This object contains the profile details with unique identifiers for\
            \ each profile. Also Success,Warnings and Errors related to this operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a profile by ID
      tags:
      - Profile
      x-codegen-request-body-name: profile
  /profiles/{profileId}/accounts:
    get:
      description: You can find the accounts that are listed on a profile with this
        API. <p><strong>OperationId:</strong>getProfileAccounts</p>
      operationId: getProfileAccounts
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileAccounts'
          description: Response of profile accounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileAccounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile accounts
      tags:
      - Profile
  /profiles/{profileId}/action/delete:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteProfilePermanently</p>'
      operationId: deleteProfilePermanently
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete the profile permanently.
      tags:
      - Profile
  /profiles/{profileId}/attachments:
    get:
      description: This API will provide the attachments on a profile in OPERA Cloud.
        <p><strong>OperationId:</strong>getProfileAttachments</p>
      operationId: getProfileAttachments
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileAttachments'
          description: Response object with the details of the attachments of a profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileAttachments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile attachments
      tags:
      - Profile
  /profiles/{profileId}/attachments/{attachmentId}:
    delete:
      description: This API will delete an attachment on a profile in OPERA Cloud.
        <p><strong>OperationId:</strong>deleteProfileAttachment</p>
      operationId: deleteProfileAttachment
      parameters:
      - in: path
        name: attachmentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          default: "[\"Profile\"]"
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: uniqueIdIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: uniqueIdIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: uniqueIdType
        schema:
          default: "[\"Attachment\"]"
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete profile attachment
      tags:
      - Profile
  /profiles/{profileId}/awards/redeem:
    put:
      description: Redeem an award that exists on a profile. <p><strong>OperationId:</strong>redeemAward</p>
      operationId: redeemAward
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/award'
        description: Request object to redeem award.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/award'
          description: Response object for redeem award.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Redeem an award
      tags:
      - ProfileMembership
      x-codegen-request-body-name: award
  /profiles/{profileId}/awardsAndCertificates:
    get:
      description: Get Profile awards and certificates that exist on a profile. <p><strong>OperationId:</strong>getAwards</p>
      operationId: getAwards
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Hotel Code for which the routing instructions are provided for
          a profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/awardDetails'
          description: Response of fetch awards request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Awards not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Profile awards and certificates
      tags:
      - Profile
  /profiles/{profileId}/cashieringDetails:
    get:
      description: Retrieve any profile Financial details that exists on a profile
        (typically Company or Travel Agent profiles).  This includes Routing Instructions
        on the profile. <p><strong>OperationId:</strong>getCashieringDetails</p>
      operationId: getCashieringDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Boolean flag that indicates whether the payment method has to
          be fetched or not.
        in: query
        name: fetchPaymentMethod
        schema:
          type: boolean
      - description: Boolean flag that indicates whether the routing instruction has
          to be fetched or not.
        in: query
        name: fetchRoutingInstruction
        schema:
          type: boolean
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: List of Hotel Codes.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileCashieringDetailsInfo'
          description: Response object containing profile routing instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashieringDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get cashiering details for a profile
      tags:
      - Profile
    put:
      description: "Update a profiles Financial details, such as billing, routing\
        \ instructions. <p><strong>OperationId:</strong>changeProfileCashieringDetails</p>"
      operationId: changeProfileCashieringDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCashieringDetails'
        description: Request object for changing the profile cashiering details.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change cashiering details for a profile
      tags:
      - Profile
      x-codegen-request-body-name: profileCashieringDetails
  /profiles/{profileId}/commissionAccount:
    delete:
      description: Delete a Commission Account from a specified profile. <p><strong>OperationId:</strong>deleteProfileCommissionAccount</p>
      operationId: deleteProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used in CRUD operations. When set to true, proceed validating\
          \ pending commissions"
        in: query
        name: validatePending
        schema:
          type: boolean
      - description: Hotel code from which the profile bank account and code belongs
          to
        in: query
        name: hotelId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: profileIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: bankAccountId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: bankAccountIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: bankAccountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: bankAccountIdType
        schema:
          type: string
      - description: Code.
        in: query
        name: commissionCode
        schema:
          type: string
      - description: description.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a commission account from a profile
      tags:
      - Profile
    get:
      description: Retrieve Commission Account details from a specified profile. <p><strong>OperationId:</strong>getProfileCommissionAccount</p>
      operationId: getProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileCommissionAccountInfo'
          description: Response object for fetching profile commission detail.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileCommissionAccount not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get commission account on a profile
      tags:
      - Profile
    post:
      description: Add a commission account on a profile.  You can only add commission
        accounts onto a Travel Agent or Source Profile type in OPERA Cloud. <p><strong>OperationId:</strong>postProfileCommissionAccount</p>
      operationId: postProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccount'
        description: Request object for creating profile commission detail.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add a commission account on a profile
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccount
    put:
      description: Apply a commission account to an existing profile. You can add
        commission accounts to Travel Agent profile types. <p><strong>OperationId:</strong>setProfileCommissionAccount</p>
      operationId: setProfileCommissionAccount
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileCommissionAccount'
        description: Request object for updating profile commission detail.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Set profile commission account
      tags:
      - Profile
      x-codegen-request-body-name: profileCommissionAccount
  /profiles/{profileId}/emails:
    post:
      description: Use this API to create a new Email in OPERA.  You would need to
        know the Profile Id such as Contact or Account. <p><strong>OperationId:</strong>storeEmail</p>
      operationId: storeEmail
      parameters:
      - description: Profile ID linked to an Email.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/storeEmail_request'
        description: Request object for storing an email.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Email.
      tags:
      - Profile
      x-codegen-request-body-name: emailMessageType
  /profiles/{profileId}/hotels/{hotelId}/forecasts:
    delete:
      description: Use this API to delete multiple account forecasts. <p><strong>OperationId:</strong>deleteMultipleAccountForecasts</p>
      operationId: deleteMultipleAccountForecasts
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: periodCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete multiple account forecasts
      tags:
      - Profile
    get:
      description: You can use this API to retrieve account forecasts for a hotel
        <p><strong>OperationId:</strong>getAccountForecasts</p>
      operationId: getAccountForecasts
      parameters:
      - description: Hotel Code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Specifies the From Fiscal or Calendar Period Code
        in: query
        name: fromPeriodCode
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/accountForecasts'
          description: Response object for fetching forecasts of an account profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AccountForecasts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Account Forecasts by hotel
      tags:
      - Profile
    post:
      description: Use postAccountForecast to create a new account forecast for a
        hotel.  <p><strong>OperationId:</strong>postAccountForecast</p>
      operationId: postAccountForecast
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA internal account profile ID
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forecastsInformation'
        description: Request object for creating forecast(s) of an account profile.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create account forecast in a hotel
      tags:
      - Profile
      x-codegen-request-body-name: forecastsInformation
  /profiles/{profileId}/hotels/{hotelId}/forecasts/periodCodes/{periodCode}:
    delete:
      description: Use this to delete an existing account Forecast for a hotel.  You
        must know the period code for this API. <p><strong>OperationId:</strong>deleteAccountForecast</p>
      operationId: deleteAccountForecast
      parameters:
      - description: Period Code.
        in: path
        name: periodCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Account Profile ID.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: periodCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete account forecast in a hotel by period code
      tags:
      - Profile
    put:
      description: Use this to update an existing account Forecast for a hotel.  You
        must know the period code for this API. <p><strong>OperationId:</strong>putAccountForecast</p>
      operationId: putAccountForecast
      parameters:
      - description: Period Code
        in: path
        name: periodCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Account Profile ID.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forecastsInformation'
        description: Request object for changing forecast(s) of an account profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeAccountForecastsRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update account forecast in a hotel by period code
      tags:
      - Profile
      x-codegen-request-body-name: forecastsInformation
  /profiles/{profileId}/hotels/{hotelId}/preferenceType/{preferenceType}/preferences/{preferenceCode}:
    delete:
      description: "This will allow you to delete a preference code from a profile.\
        \  For example the guest no longer has a preference for High Floor Room, so\
        \ you would go ahead and delete this preference from their profile. <p><strong>OperationId:</strong>deletePreference</p>"
      operationId: deletePreference
      parameters:
      - in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: preferenceType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Profiles Registered Property
        in: query
        name: registeredProperty
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a preference from a profile
      tags:
      - Profile
  /profiles/{profileId}/links:
    get:
      description: Retrieve profiles that are linked to an existing profile in OPERA
        Cloud. <p><strong>OperationId:</strong>getLinkedProfiles</p>
      operationId: getLinkedProfiles
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: The types of Profile handled by the web service.
        explode: true
        in: query
        name: profileTypes
        schema:
          items:
            enum:
            - Guest
            - Agent
            - Company
            - Group
            - Source
            - Employee
            - Hotel
            - Vendor
            - Contact
            - Purge
            - BusinessHeader
            - BillingAccount
            - Activity
            - Potential
            - Account
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: When true indicates that only profiles with AR account fetched.
        in: query
        name: accountsReceivables
        schema:
          type: boolean
      - description: When true indicates that only profiles with client id are searched
          for.
        in: query
        name: corporateProfiles
        schema:
          type: boolean
      - description: "Indicates whether to exclude Inactive Profiles, when true indicates\
          \ that only profiles with active status will be displayed."
        in: query
        name: excludeInactive
        schema:
          type: boolean
      - description: When true indicates that only profiles with an Address Line 1
          and Country or at least one Communications Type will be displayed.
        in: query
        name: excludeIncompleteProfiles
        schema:
          type: boolean
      - description: Include profiles that have one or more relationships in the search.
        in: query
        name: includeHasHierarchyOnly
        schema:
          type: boolean
      - description: When true indicates that this option has to be included in advanced
          search.
        in: query
        name: negotiatedRates
        schema:
          type: boolean
      - description: The types of Profile handled by the web service.
        in: query
        name: linkedProfileAdditionalCriteriaProfileType
        schema:
          enum:
          - Guest
          - Agent
          - Company
          - Group
          - Source
          - Employee
          - Hotel
          - Vendor
          - Contact
          - Purge
          - BusinessHeader
          - BillingAccount
          - Activity
          - Potential
          - Account
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: linkedProfileid
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: linkedProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: linkedProfileIdType
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: When true indicates that only profiles with city will be fetched.
        in: query
        name: excludeNoCity
        schema:
          type: boolean
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - explode: false
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Account Receivable associated to the profile.
        in: query
        name: aRNumber
        schema:
          type: string
      - explode: false
        in: query
        name: prioritiesCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedProfiles'
          description: Response of fetch set of linked Profiles to the requested Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LinkedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get linked profiles
      tags:
      - Profile
  /profiles/{profileId}/matches:
    get:
      description: Retrieve profiles that match another profile. <p><strong>OperationId:</strong>getMatchProfiles</p>
      operationId: getMatchProfiles
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code for the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: idType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/matchedProfiles'
          description: Response object for the match profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MatchProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile matches
      tags:
      - Profile
  /profiles/{profileId}/membershipTransactionExceptions:
    get:
      description: Use this API to get membership transaction exceptions on a profile.
        <p><strong>OperationId:</strong>getMembershipTransactionExceptions</p>
      operationId: getMembershipTransactionExceptions
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Membership belongs to which Hotel.
        in: query
        name: hotelId
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: The current level of the membership.
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipCardNo
        schema:
          type: string
      - description: Indicates to Include External Processing Exception
        in: query
        name: includeEPE
        schema:
          type: boolean
      - description: "Indicates the type of Exception like Exception not resolved,Points\
          \ Rejected on Exception etc.,"
        in: query
        name: exceptionType
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/membershipTransactionExceptions'
          description: Response object for fetching membership transaction exceptions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipTransactionExceptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership transaction exception details
      tags:
      - ProfileMembership
  /profiles/{profileId}/membershipType/{membershipType}/membershipId/{membershipId}:
    delete:
      description: Use this API to delete membership details on a profile. <p><strong>OperationId:</strong>deleteMembership</p>
      operationId: deleteMembership
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete membership information from a profile
      tags:
      - Profile
    put:
      description: Use this API to update membership details on a profile. <p><strong>OperationId:</strong>changeMembership</p>
      operationId: changeMembership
      parameters:
      - in: path
        name: membershipId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: membershipType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membership'
        description: Request object for change/update membership. This object contains
          unique identifiers for each profile and list of membership details to be
          updated/changed. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedMembership'
          description: "Response object for change/update membership. This object\
            \ contains collection of memberships,Success,Warnings and Errors related\
            \ to this operation"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change membership information on a profile
      tags:
      - Profile
      x-codegen-request-body-name: membership
  /profiles/{profileId}/memberships:
    post:
      description: A guest might be a member of your hotel loyalty program and/or
        a member of multiple airline frequent flier programs. Use this API to add
        membership details onto a guests profile. <p><strong>OperationId:</strong>postMembership</p>
      operationId: postMembership
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/membership'
        description: Request object for create membership. This object contains unique
          identifiers for each profile and list of membership details to be created.
          The standard optional Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create membership on a profile
      tags:
      - Profile
      x-codegen-request-body-name: membership
  /profiles/{profileId}/memberships/info:
    get:
      description: Use this API to retrieve membership details on a profile. <p><strong>OperationId:</strong>getMembershipDetails</p>
      operationId: getMembershipDetails
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: idType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipId
        schema:
          type: string
      - description: Property from which the membership stay information was received.
        in: query
        name: hotelId
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Whether member info search will pertain to transaction dates/
          stay dates/ points credit dates.
        in: query
        name: mode
        schema:
          enum:
          - TransactionDate
          - StayBeginDate
          - StayEndDate
          - PointsCreditDate
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/memberInformation'
          description: Response object for member info.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MembershipDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get membership information on a profile
      tags:
      - ProfileMembership
  /profiles/{profileId}/owners:
    get:
      description: Retrieve the Owners listed on a profile. <p><strong>OperationId:</strong>getProfileOwners</p>
      operationId: getProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileOwnersDetail'
          description: Response object to fetch the owners of a profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileOwners not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get profile owners
      tags:
      - Profile
    post:
      description: Assign an Owner to a profile. <p><strong>OperationId:</strong>postProfileOwners</p>
      operationId: postProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileOwners'
        description: Request object to assign profile owners.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Assign profile owners
      tags:
      - Profile
      x-codegen-request-body-name: profileOwners
    put:
      description: Update an Owner on a profile  <p><strong>OperationId:</strong>changeProfileOwners</p>
      operationId: changeProfileOwners
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeProfileOwners_request'
        description: Request object to change profile owners.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change profile owners
      tags:
      - Profile
      x-codegen-request-body-name: profileOwners
  /profiles/{profileId}/preferenceType/{preferenceType}/preferences/{preferenceCode}:
    delete:
      description: "This will allow you to delete a global preference code from a\
        \ profile.  For example the guest no longer has a preference for High Floor\
        \ Room, so you would go ahead and delete this preference from their profile.\
        \ <p><strong>OperationId:</strong>deleteGlobalPreference</p>"
      operationId: deleteGlobalPreference
      parameters:
      - in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: preferenceType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Profiles Registered Property
        in: query
        name: registeredProperty
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a global preference from a profile
      tags:
      - Profile
  /profiles/{profileId}/preferences:
    get:
      description: "Use this API to retrieve all preferences that a profile has stored\
        \ on it.  Preferences are configured codes by a property, examples are usually\
        \ High Floor, Non smoking room, Room with a View, soft pillow etc.  <p><strong>OperationId:</strong>getPreferenceForProfile</p>"
      operationId: getPreferenceForProfile
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/preference'
          description: "Response object for fetch preference. This object contains\
            \ collection of preferences,Success,Warnings and Errors related to this\
            \ operation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PreferenceForProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get preferences on a profile
      tags:
      - Profile
    post:
      description: "You can add new preferences to a profile to personalize or enhance\
        \ your guest services.  You will need to know the profile ID, and the properties\
        \ pre-configured preference codes. <p><strong>OperationId:</strong>postPreference</p>"
      operationId: postPreference
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/preference'
        description: Request object for Create Preference. This object contains unique
          identifiers for each profile and list of preferences to be associated with
          the profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add preferences to a profile
      tags:
      - Profile
      x-codegen-request-body-name: preference
    put:
      description: With this API you can distribute preferences on a profile. <p><strong>OperationId:</strong>distributePreference</p>
      operationId: distributePreference
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/preference'
        description: Request object for distribute Preference. This object contains
          unique identifiers for each profile and list of preferences to be associated
          with the profile. The standard optional Opera Context element is also included.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Distribute preferences on a profile
      tags:
      - Profile
      x-codegen-request-body-name: preference
  /profiles/{profileId}/relationships:
    get:
      description: ' <p><strong>OperationId:</strong>getProfileRelationships</p>'
      operationId: getProfileRelationships
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Type of Profile to be fetched from OPERA.
        in: query
        name: relationshipPrimaryProfile
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileRelationships'
            application/json:
              example:
                links: []
                relationships:
                  relationship:
                  - relationshipID: "144096"
                    relationshipProfile:
                      address:
                        addressLine:
                        - 500 Oracle Parkway
                        city: Redwood Shores
                        country: US
                        postalCode: "94065"
                        state: CA
                      customerName: Smith
                      emailAddress: example@test.com
                      ownerCode: ALL
                      primary: true
                      primaryOwnerCode: true
                      profileIdList:
                      - id: "291397"
                        type: Profile
                      - id: "212315"
                        type: CorporateId
                      profileStatus: Active
                      profileType: Guest
                      telephoneNumber: "+10409000000"
                    sourceRelation: FAMILY MEMBER
                    sourceRelationDescription: FAMILY MEMBER
                    targetRelation: FAMILY HEAD
                    targetRelationDescription: FAMILY HEAD
          description: Response object for fetching profile relationships.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileRelationships not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchProfileRelationships method provides the ability to retrieve a
        profile relationships for a profile based on the unique internal profile ID
        specified.
      tags:
      - Profile
  /profiles/{profileId}/reservations/action/validate:
    put:
      description: Validate if a profile has future and past bookings on a specific
        profile. <p><strong>OperationId:</strong>validateReservationsForProfile</p>
      operationId: validateReservationsForProfile
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/futurePastBookingsCriteria'
        description: Request for information regarding existence of profile in future
          and/or past business blocks and/or reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/futurePastBookings'
          description: This is the Response Message to information regarding existence
            of profile in future and/or past business blocks and/or reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check future past bookings
      tags:
      - Profile
      x-codegen-request-body-name: futurePastBookingsCriteria
  /profiles/{profileId}/stayHistory:
    get:
      description: ' <p><strong>OperationId:</strong>getStayHistory</p>'
      operationId: getStayHistory
      parameters:
      - in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code used to filter hotel specific information regarding
          the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Providing this flag includes purged profiles in the result.
        in: query
        name: includePurgeProfiles
        schema:
          type: boolean
      - description: Providing this flag marks the profile as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Simple type for instructions that can be used in requests for
          partial operations to fetch past and future reservation.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - HistoryReservation
            - FutureReservation
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileStayHistory'
            application/json:
              example:
                links: []
                profileStayDetails:
                  reservationInfoList:
                    futureList:
                      hasMore: false
                      totalResults: "0"
                    historyList:
                      hasMore: false
                      reservationInfo:
                      - attachedProfiles: []
                        computedReservationStatus: NoShow
                        hotelId: HOTEL1
                        reservationIdList:
                        - id: "850348"
                          type: Reservation
                        - id: "1258752"
                          type: Confirmation
                        reservationStatus: NoShow
                        roomStay:
                          arrivalDate: 2020-07-02
                          departureDate: 2020-07-04
                          rateAmount:
                            amount: "100"
                          ratePlanCode: RACK
                          rateSuppressed: false
                          roomType: DLXQ
                      totalResults: "1"
          description: Response object for showing stay history and future reservations
            of specific profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StayHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: FetchStayHistory method provides stay history and future reservations
        of a profile based on the unique internal ID specified.
      tags:
      - Profile
  /profiles/{sourceProfileId}/relationships/{targetProfileId}:
    delete:
      description: ' <p><strong>OperationId:</strong>removeProfileRelationship</p>'
      operationId: removeProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates the type of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).
        in: query
        name: sourceRelation
        required: true
        schema:
          type: string
      - description: Indicates the type of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelation
        required: true
        schema:
          type: string
      - description: Indicates if this relationship is the primary relationship.
        in: query
        name: primary
        schema:
          type: boolean
      - description: Displays the description of relationship the current profile(Source
          Profile) has with the related profile(Target Profile).This needs to be passed
          if the attribute primary is sent as true.
        in: query
        name: sourceRelationDescription
        schema:
          type: string
      - description: Displays the description of relationship the related profile(Target
          Profile) has with the current profile(Source Profile).
        in: query
        name: targetRelationDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "DeleteProfileRelationship method provides the ability to delete profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
    post:
      description: ' <p><strong>OperationId:</strong>postProfileRelationship</p>'
      operationId: postProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProfileRelationship_request'
        description: Request object for creating profile relationship.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "CreateProfileRelationship method provides the ability to create profile\
        \ relationship based on the request criteria of SourceProfileID,TargetProfileID\
        \ and SourceRelationType specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationship
    put:
      description: ' <p><strong>OperationId:</strong>putProfileRelationship</p>'
      operationId: putProfileRelationship
      parameters:
      - in: path
        name: targetProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putProfileRelationship_request'
        description: Request object for changing profile relationship.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: "ChangeProfileRelationship method provides the ability to update(delete\
        \ and add) profile relationship based on the request criteria of SourceProfileID\
        \ , TargetProfileID, To Be ChangedProfileID and SourceProfileRelationType\
        \ specified."
      tags:
      - Profile
      x-codegen-request-body-name: profileRelationshipToBeChanged
  /profiles/{survivorProfileId}/merges:
    post:
      description: "When you need to merge 2 guest profiles into 1 profile, use this\
        \ API. <p><strong>OperationId:</strong>mergeProfiles</p>"
      operationId: mergeProfiles
      parameters:
      - description: Original Profile ID to which profiles will be merged in OPERA.
        in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/mergeProfiles_request'
        description: Request object for merging profiles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Merge two profiles by ID
      tags:
      - Profile
      x-codegen-request-body-name: profileToBeMerged
  /profiles/{survivorProfileId}/merges/snapshot:
    get:
      description: "This API will provide you with a snapshot of the to be merged\
        \ profile. In the request you will pass the survivor profile, along with the\
        \ profile ID of the profile which it to be merged into the survivor profile.\
        \  The response will provide you with the combined profile data of both profiles\
        \ which are being merged. <p><strong>OperationId:</strong>getMergeProfilesSnapshot</p>"
      operationId: getMergeProfilesSnapshot
      parameters:
      - in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: originalId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: originalIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: originalIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: toBeMergedId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: toBeMergedIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: toBeMergedIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mergedProfilesSnapshotDetails'
          description: Response object for fetching snapshot of merge profiles result.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MergeProfilesSnapshot not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get merge profiles snapshot
      tags:
      - Profile
  /profiles/{survivorProfileId}/stageProfiles/snapshot:
    get:
      description: This API will provide you with a snapshot of the to be merged profile
        in staging. <p><strong>OperationId:</strong>getMergeStageProfileSnapshot</p>
      operationId: getMergeStageProfileSnapshot
      parameters:
      - in: path
        name: survivorProfileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel Code for the profile.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: resortProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: resortProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: resortProfileIdType
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mergedStageProfileSnapshot'
          description: Response object to fetch merge profile based on stage and opera
            profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MergeStageProfileSnapshot not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get merge stage profile snapshot
      tags:
      - Profile
  /profilesByIds:
    get:
      description: "Use this API when you want to search for a profile. The response\
        \ will include a list of profiles that exist in OPERA, based on your search\
        \ criteria.  For example, you want to see if  a profile for Mr David Smith\
        \ exists - you can search by various criteria, such as first, last name, email.\
        \  The response will include a list of any profiles that exist for Mr Davis\
        \ Smith.  If a profile matches the criteria, and you want to get more details\
        \ of that profile, proceed to use getProfile with the profileID in the request.\
        \ <p><strong>OperationId:</strong>getProfilesByIds</p>"
      operationId: getProfilesByIds
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: corporateIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Room Ownership information associated with the profile.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Address
            - Communication
            - NegotiatedRate
            - GdsNegotiatedRate
            - Comment
            - Membership
            - Preference
            - Keyword
            - HistoryReservation
            - FutureReservation
            - Relationship
            - Correspondence
            - Routing
            - Indicators
            - Profile
            - WebUserAccount
            - SalesInfo
            - ECertificate
            - Subscriptions
            - PrimaryAccountInfo
            - DeliveryMethods
            - RoomOwnership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Simple type enumerating the different parameters accepted by\
          \ a profile Instructions. Parameter names have the name of the instruction\
          \ expecting it, and the parameter name itself."
        explode: true
        in: query
        name: instructionParameterType
        schema:
          items:
            enum:
            - NegotiatedRateShowInactive
            - NegotiatedRateResort
            - NegotiatedRateMaxFetchCount
            - NegotiatedRateCode
            - GdsNegotiatedRateShowInactive
            - PreferencesShowInactive
            - ResortForRoutingInstructions
            - RelationshipPrimaryProfile
            - AddressPrimaryOnly
            - CommunicationPrimaryOnly
            - DeliveryMethodsHotelCode
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Value of Profile Instruction Parameter
        explode: true
        in: query
        name: instructionParameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Hotel Code, It is used to filter hotel specific."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileDetails'
          description: Response object for fetching multiple detailed profiles by
            unique identifiers..
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfilesByIds not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Search for profile(s)
      tags:
      - Profile
  /recentlyAccessedProfiles:
    get:
      description: Use this API to fetch the profiles that have recently been accessed
        by an application user. <p><strong>OperationId:</strong>getRecentlyAccessedProfiles</p>
      operationId: getRecentlyAccessedProfiles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recentlyAccessedProfiles'
          description: Response with the fetched recently accessed profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RecentlyAccessedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch recently accessed profiles
      tags:
      - Profile
  /stagedProfile/{id}:
    get:
      description: "The system suspends / stages a profile with a point value between\
        \ the upper and lower thresholds. When a profile is staged, you must review\
        \ the suspended profile and determine if it should be merged with an internal\
        \ profile or added as a new profile.  This API will get a specific profile\
        \ that has been staged. <p><strong>OperationId:</strong>getStagedProfile</p>"
      operationId: getStagedProfile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The hotel code that the stage profile belongs to.
        in: query
        name: hotelId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If selected, only invalid details of the staged profile will\
          \ be retrieved."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Profile
            - Address
            - Communication
            - NegotiatedRate
            - Membership
            - Preference
            - Keyword
            - Routing
            - UserDefinedField
            - Identifier
            - InvalidDetail
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stagedProfileDetails'
          description: Response object for the staged profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StagedProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a staged profile
      tags:
      - Profile
    put:
      description: This API can be used to update the staged Profile. <p><strong>OperationId:</strong>changeStagedProfile</p>
      operationId: changeStagedProfile
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/stagedProfile'
        description: Request object for changing the staged profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a staged profile
      tags:
      - Profile
      x-codegen-request-body-name: stagedProfile
  /stagedProfiles:
    get:
      description: "The system suspends / stages a profile with a point value between\
        \ the upper and lower thresholds. When a profile is staged, you must review\
        \ the suspended profile and determine if it should be merged with an internal\
        \ profile or added as a new profile. <p><strong>OperationId:</strong>getStagedProfiles</p>"
      operationId: getStagedProfiles
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: givenName
        schema:
          type: string
      - description: The profile region for which the staged profiles shall be fetched.
        in: query
        name: region
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Profile type to be included in the search.
        in: query
        name: profileType
        schema:
          type: string
      - description: The date on which the staged profiles have been received.
        in: query
        name: importDate
        schema:
          format: date
          type: string
      - description: The status of the staged profiles.
        in: query
        name: stageStatus
        schema:
          type: string
      - description: Membership filter of staged profiles.
        in: query
        name: applyTo
        schema:
          enum:
          - StagedProfiles
          - MatchingProfiles
          - StagedAndMatchingProfiles
          type: string
      - explode: true
        in: query
        name: membershipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stagedProfiles'
          description: Response object for the staged profiles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StagedProfiles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get staged profiles
      tags:
      - Profile
  /suspendedAddresses:
    get:
      description: Fetch Suspended Profile Addresses <p><strong>OperationId:</strong>getSuspendedAddresses</p>
      operationId: getSuspendedAddresses
      parameters:
      - description: Last Name of the Profile against which the Suspended Addresses
          are fetched.
        in: query
        name: name
        schema:
          type: string
      - description: "Hotel Code, It is used to filter hotel specific children to\
          \ this specific hotel code."
        in: query
        name: hotelId
        schema:
          type: string
      - description: First Name of the Profile against which the Suspended Addresses
          are fetched.
        in: query
        name: firstName
        schema:
          type: string
      - description: ProfileT ype of the Profile against which the Suspended Addresses
          are fetched..
        in: query
        name: profileType
        schema:
          type: string
      - description: Match Code of the Address Validation Performed from the batch
          processing
        in: query
        name: matchCode
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: Validate Date.
        in: query
        name: validateDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedAddresses'
          description: Response list of suspended addresses based on supplied criteria
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedAddresses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Suspended Profile Addresses
      tags:
      - Profile
  /suspendedProfileErrorSummary:
    get:
      description: Retrieve the suspended profile error summary details <p><strong>OperationId:</strong>getSuspendedProfileErrorSummary</p>
      operationId: getSuspendedProfileErrorSummary
      parameters:
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suspendedProfileErrorSummaryInfo'
          description: Response object for fetch suspended profile Errors summary.
            This object contains collection of profile erros and count of how many
            profiles encountered this error.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuspendedProfileErrorSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get suspended profile error summary details
      tags:
      - Profile
  /synchronizeProfileSubscriptions:
    put:
      description: Synchronize profile subscriptions <p><strong>OperationId:</strong>synchronizeProfileSubscriptions</p>
      operationId: synchronizeProfileSubscriptions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/profileSubscriptionsToSynchronize'
        description: Request object for re-subscribing profile subscriptions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Synchronize profile subscriptions
      tags:
      - Profile
      x-codegen-request-body-name: profileSubscriptionsToSynchronize
  /validateForgetProfiles:
    put:
      description: Validate forget profiles. <p><strong>OperationId:</strong>validateForgetProfiles</p>
      operationId: validateForgetProfiles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/forgetProfilesCriteria'
        description: Operation to validate profiles for forgetting.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/validatedForgetProfiles'
          description: Response object for validating profiles for forgetting.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate forget profiles
      tags:
      - Profile
      x-codegen-request-body-name: forgetProfilesCriteria
components:
  schemas:
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRAccountType:
      description: Accounts Receivabales Account details type.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        accountTypeDescription:
          description: The description of the Account Type.
          maxLength: 2000
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/addressInfoType'
        agingInfo:
          $ref: '#/components/schemas/aRAgingInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        batchStatement:
          description: Include In Batch Statement
          type: boolean
        contactName:
          description: The person to contact for this Account.
          maxLength: 200
          minLength: 0
          type: string
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        emailStatementsReminders:
          description: Indicates if the Account has opted to send the statements and
            reminders to the Account email address by default.
          type: boolean
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        lastReminderInfo:
          $ref: '#/components/schemas/aRAccountType_lastReminderInfo'
        lastStatementInfo:
          $ref: '#/components/schemas/aRAccountType_lastStatementInfo'
        monthEndCalcYN:
          description: Month End Calculation.
          type: boolean
        notes:
          description: The Note details attached to the Account.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        paymentDueDays:
          description: Number of days on which person can make payment.
          maxLength: 20
          minLength: 0
          type: string
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        permanent:
          description: Indicates if this is a Permanent Account. Permanent Accounts
            cannot be deleted.
          type: boolean
        primary:
          description: Indicates if this Account is the Primary Account for this Guest/Company.
          type: boolean
        printFoliosWithStatement:
          description: Indicates if associated folios should be printed by default
            with the statement.
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
        summary:
          $ref: '#/components/schemas/aRBalanceType'
        telephones:
          description: The Telephone and Fax details attached to the Account.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        traces:
          description: The Trace details attached to the Account.
          items:
            $ref: '#/components/schemas/traceType'
          maxItems: 4000
          type: array
        type:
          description: The type of Account.
          maxLength: 20
          minLength: 0
          type: string
        yearViewInfo:
          $ref: '#/components/schemas/aRYearViewInfoType'
      type: object
    aRAccountsType:
      description: Information regarding the AR Account.
      items:
        $ref: '#/components/schemas/aRAccountType'
      maxItems: 4000
      type: array
    aRAgingInfoType:
      description: Information regarding the aging balances for an account.
      properties:
        aging:
          description: The debit and credit balance per Aging bucket.
          items:
            $ref: '#/components/schemas/aRAgingType'
          maxItems: 4000
          type: array
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
      type: object
    aRAgingType:
      description: Aging information for an Aging Bucket.
      properties:
        agingBucketRange:
          description: "The bucket description in terms of days. Example : 0-31 days"
          maxLength: 20
          minLength: 0
          type: string
        agingDate:
          $ref: '#/components/schemas/dateRangeType'
        agingEndDay:
          description: "The end number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 60."
          type: integer
        agingStartDay:
          description: "The start number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 31."
          type: integer
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        sequence:
          description: The sequence for display.
          type: integer
      type: object
    aRBalanceType:
      description: Balance information for AR.
      properties:
        credit:
          $ref: '#/components/schemas/currencyAmountType'
        debit:
          $ref: '#/components/schemas/currencyAmountType'
        total:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRInvoiceCategory:
      enum:
      - Normal
      - Credit
      - OldBalance
      - PasserBy
      type: string
    aRInvoiceType:
      description: Details of an AR Invoice.
      properties:
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        adjusted:
          type: boolean
        age:
          description: The Aging age of the invoice
          type: integer
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioNo:
          description: Folio Number.
          type: number
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        parentInvoiceNo:
          type: number
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        transferredIn:
          type: boolean
        transferredOut:
          type: boolean
      type: object
    aRInvoicesType:
      description: A collection of AR Invoices.
      items:
        $ref: '#/components/schemas/aRInvoiceType'
      maxItems: 4000
      type: array
    aRPaymentType:
      description: Details of an AR Payment.
      properties:
        age:
          description: The Aging age of the payment.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountUsed:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        sequenceNo:
          description: "When this PostingType is used to return the postings generated\
            \ by a batch request, the sequence number is used to relate to the Request's\
            \ sequence number."
          type: integer
        transactionCode:
          description: Transaction code of the Payment.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Date of the Payment.
          format: date
          type: string
        transactionNo:
          description: Unique Transaction Identifier of the Payment.
          type: number
        transferDate:
          description: Transfer of the invoice.
          format: date
          type: string
        transferredIn:
          type: boolean
        transferredOut:
          type: boolean
      type: object
    aRPaymentsType:
      description: A collection of AR Payments.
      items:
        $ref: '#/components/schemas/aRPaymentType'
      maxItems: 4000
      type: array
    aRYearViewInfoType:
      description: Information regarding Year View balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        yearView:
          description: The debit and credit balance per account.
          items:
            $ref: '#/components/schemas/aRYearViewType'
          maxItems: 4000
          type: array
      type: object
    aRYearViewType:
      description: Year information for an Year View.
      properties:
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        runningTotal:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    accountForecastType:
      description: Detail Information about Account Forecast.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        averageRate:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBeverageRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        overrideForecast:
          $ref: '#/components/schemas/overrideForecastTypeType'
        periodCode:
          description: Specifies the Fiscal or Calendar Period Code for the forecast
          maxLength: 20
          minLength: 0
          type: string
        periodDescription:
          description: Specifies the Fiscal or Calendar Period Description for the
            forecast.
          maxLength: 100
          minLength: 0
          type: string
        periodEndDate:
          description: Specifies the Period End Date
          format: date
          type: string
        periodStartDate:
          description: Specifies the Period Start Date
          format: date
          type: string
        roomNights:
          description: Room Nights for the forecast
          type: integer
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    accountForecasts:
      description: Response object for showing forecast information of account profile.
      properties:
        accountForecastDetails:
          description: Detail Information about Account Forecast.
          items:
            $ref: '#/components/schemas/accountForecastType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    accountForecastsType:
      description: Detail Information about Account Forecast.
      items:
        $ref: '#/components/schemas/accountForecastType'
      maxItems: 4000
      type: array
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    activityLogType:
      properties:
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        logDate:
          format: date-time
          type: string
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        module:
          type: string
        refActionId:
          type: number
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
        expectedReturnTime:
          description: Expected Return Time
          format: date-time
          type: string
      type: object
    airlineImportStatusType:
      description: List of possible import statuses of a membership airline processing
        record.
      enum:
      - New
      - Uploaded
      - Error
      type: string
    airlineTransactionImportInfoType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        description:
          description: Description of the error that caused the import to fail
          maxLength: 200
          minLength: 0
          type: string
        importDate:
          description: The date when this batch was imported into OPERA
          format: date
          type: string
        status:
          $ref: '#/components/schemas/airlineImportStatusType'
      type: object
    airlineTransactionStatusType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        description:
          description: Error Description returned by the airline
          maxLength: 4000
          minLength: 0
          type: string
        errorCode:
          description: Error Code returned by the airline
          maxLength: 20
          minLength: 0
          type: string
      type: object
    airlineTransactionType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        airlineHotelCode:
          description: Property code provided by the airline
          maxLength: 20
          minLength: 0
          type: string
        airlineStatus:
          $ref: '#/components/schemas/airlineTransactionStatusType'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property code that this record corresponds to
          maxLength: 20
          minLength: 0
          type: string
        importInfo:
          $ref: '#/components/schemas/airlineTransactionImportInfoType'
        memberInfo:
          $ref: '#/components/schemas/memberInfoType'
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        miles:
          description: Miles earned through this membership transaction
          type: number
        transactionId:
          $ref: '#/components/schemas/uniqueID_Type'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
      type: object
    airlineTransactionsStatus:
      description: Request object for fetching membership transactions processed by
        the airline.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        transactions:
          description: "Contains details of the membership transaction processing\
            \ status, provided by the airline."
          items:
            $ref: '#/components/schemas/airlineTransactionType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    airlineTransactionsType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      items:
        $ref: '#/components/schemas/airlineTransactionType'
      maxItems: 4000
      type: array
    alienInfoType:
      description: immigration/visa information of a foreign person.
      properties:
        alienRegistrationNo:
          description: Alien Registration Number.
          type: string
        immigrationStatus:
          description: Immigration Status on an Alien.
          maxLength: 40
          minLength: 0
          type: string
        visaValidityType:
          description: Visa Type of an Alien.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          format: date-time
          type: string
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    attachmentType:
      description: Attached files.
      properties:
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        code:
          description: The authorization rule code.
          type: integer
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    availableARAddresses:
      description: Response to the request to fetch the available Accounts Receivables(AR)
        Addresses for a Profile.
      properties:
        addresses:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    availableAwardsBasedOnType:
      description: Response object to fetch member available awards based on the type
        being passed.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipAvailableAwards:
          description: List of available awards information.
          items:
            $ref: '#/components/schemas/membershipAwardAvailabilityType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    availablePreferences:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        preferenceCollection:
          description: A collection of preferences
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    award:
      description: Request object to redeem award.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        memberAward:
          $ref: '#/components/schemas/memberAwardType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardDetails:
      description: Response of fetch awards request.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    awardKindType:
      description: Indicates that this is electronic certificate.
      enum:
      - Paper
      - ECertificate
      type: string
    awardStatusType:
      description: Indicates that certificate is in use.
      enum:
      - Available
      - NotAvailable
      - InUse
      type: string
    awardType:
      description: Detailed information of the awards.
      properties:
        awardCode:
          description: Award category.
          maxLength: 20
          minLength: 0
          type: string
        awardType:
          $ref: '#/components/schemas/awardKindType'
        categoryValid:
          description: Indicates whether the category of certificate is valid or not
            for this resort.
          type: boolean
        certificateNo:
          description: Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Description of the award/certificate.
          type: string
        detailedCertificate:
          description: Indicates if this certificate is detailed or not.
          type: boolean
        displaySequence:
          description: Indicates the order in which the certificates received from
            MRW.
          type: number
        expirationDate:
          description: Expiration Date.
          format: date
          type: string
        externalConfirmationNo:
          description: Confirmation Number given by a CRS application for this reservation.
          maxLength: 20
          minLength: 0
          type: string
        externalHotelCode:
          description: Hotel Code of the CRS application that this certificate belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        fBAInfo:
          $ref: '#/components/schemas/fBAInfoType'
        gift:
          description: Signifies whether award is gift or not.
          type: boolean
        hotelCategory:
          description: Indicates the lowest hotel category for which the certificate
            is valid.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        instantlyRedeemable:
          description: Indicates if the award is an Instant Redemption award.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        masterCertificiateNo:
          description: Master Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        membershipNo:
          description: Membership No.
          type: string
        nights:
          description: Award Nights.
          type: integer
        package:
          description: Signifies whether upgrade is package or not.
          type: boolean
        paidUpgrade:
          description: Indicates if this certificate was ordered using the "Paid Upgrade"
            option in the E-Certs screen.
          type: boolean
        points:
          description: No. of points used to order this award.
          type: number
        profileId:
          $ref: '#/components/schemas/profileId'
        quantity:
          description: Quantity of such awards needed to be ordered.
          type: integer
        reservationCertificateType:
          $ref: '#/components/schemas/reservationCertificateType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        rewardCertificateType:
          $ref: '#/components/schemas/rewardCertificateType'
        sourceType:
          description: "MRW : From MRW MAN:Entered manually."
          type: string
        status:
          $ref: '#/components/schemas/awardStatusType'
        upgrade:
          description: Signifies whether upgrade award or not.
          type: boolean
      type: object
    awardsToGrant:
      description: Response object to fetch award details to grant an award.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipAwardsList:
          description: List of available awards information.
          items:
            $ref: '#/components/schemas/membershipAwardAvailabilityType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardsType:
      description: List of awards.
      items:
        $ref: '#/components/schemas/awardType'
      maxItems: 4000
      type: array
    bankAccountType:
      description: "Bank account information like Account ID, Bank Name, Currency,\
        \ etc."
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        bankAccountNo:
          description: Account number at the bank.
          maxLength: 80
          minLength: 0
          type: string
        bankCode:
          description: Unique code of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        bankName:
          description: Name of the bank account.
          maxLength: 2000
          minLength: 0
          type: string
        branchCode:
          description: Code for the branch of the bank.
          maxLength: 20
          minLength: 0
          type: string
        checkFormat:
          description: Type of format for Payment Method.
          maxLength: 80
          minLength: 0
          type: string
        currency:
          $ref: '#/components/schemas/codeDescriptionType'
        currentCheckNo:
          description: Current check no of the bank account.
          type: number
        default:
          description: Whether this bank account is to be the default in case no bank
            account is associated with the travel agent or source.
          type: boolean
        hotelId:
          description: Property of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: Property name of the bank account.
          maxLength: 80
          minLength: 0
          type: string
        linkedToProfile:
          description: Whether this bank account is associated with the travel agent
            or source.
          type: boolean
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethodType'
      type: object
    basicEmailListType:
      items:
        $ref: '#/components/schemas/basicEmailType'
      maxItems: 4000
      type: array
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
      type: object
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
      type: object
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    calculatedPointType:
      description: Information related to a Calculated Points.
      properties:
        billingGroup:
          description: Indicates the billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        costPerNight:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          description: Indicates the total award/tier points generated.
          type: number
        rule:
          description: Indicates the validated rules to generate points.
          type: string
        ruleCode:
          description: Indicates rule code for the rule.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/rulePointsTypeType'
      type: object
    calculatedPoints:
      description: Response object for fetching membership transaction points information.
      properties:
        calculatedPoint:
          $ref: '#/components/schemas/calculatedPointsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    calculatedPointsType:
      description: Summary of Points Accrued for current transaction.
      properties:
        calculatedPoint:
          description: Details of Points Accrued for the current points transaction.
          items:
            $ref: '#/components/schemas/calculatedPointType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cashierInfoType:
      description: Cashier information. Contains Id and Name details of the cashier.
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        cashierName:
          description: Cashier Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    changeAccountForecastsRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          description: An error that occurred during the processing of a message.
          items:
            $ref: '#/components/schemas/errorType'
          maxItems: 99
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          format: date-time
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeRelationsInfoType:
      description: Detailed information regarding to be changed relationships for
        the profile.
      properties:
        changeProfileID:
          $ref: '#/components/schemas/uniqueID_Type'
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        sourceRelation:
          description: Indicates the type of to be changed relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of to be changed relationship the
            current profile(Source Profile) has with the related profile(Target Profile).This
            needs to be passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
        targetRelation:
          description: Indicates the type of to be changed relationship the Related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of to be changed relationship the
            related profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationsType:
      description: Detailed information regarding the changes made to relationships
        for the profile.
      properties:
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changeRelationshipCriteriaType:
      description: Information about the changes in relationship for the profile
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of existing relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of existing relationship the current
            profile(Source Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Indicates the type of existing relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of existing relationship the related
            profile(Target Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changedMembership:
      description: "Response object for change/update membership. This object contains\
        \ collection of memberships,Success,Warnings and Errors related to this operation"
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileMemberships:
          description: Detailed information of membership related to the profile
          items:
            $ref: '#/components/schemas/profileMembershipType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    checkProfileInstructionType:
      description: Simple type that corresponds to check profile instructions.
      enum:
      - HasWebAccounts
      type: string
    checkProfileResultType:
      description: "Status of allowed actions, attached records, and indicators of\
        \ the profile."
      properties:
        checkProfileInstruction:
          $ref: '#/components/schemas/checkProfileInstructionType'
        exists:
          description: "Indicates status of allowed actions, total number of attached\
            \ records, or number of occurrences of indicator of a profile."
          type: boolean
      type: object
    checkProfileResultsType:
      description: "Collection of status of allowed actions, attached records, and\
        \ indicators of the profile."
      items:
        $ref: '#/components/schemas/checkProfileResultType'
      maxItems: 4000
      type: array
    checkProfileType:
      description: "Profile and the status of its allowed actions, attached records,\
        \ and indicators."
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        results:
          description: "Collection of status of allowed actions, attached records,\
            \ and indicators of the profile."
          items:
            $ref: '#/components/schemas/checkProfileResultType'
          maxItems: 4000
          type: array
      type: object
    checkProfilesType:
      description: "Collection of profiles and the status of its allowed actions,\
        \ attached records, and indicators."
      items:
        $ref: '#/components/schemas/checkProfileType'
      maxItems: 4000
      type: array
    checkedProfiles:
      description: "Response for checking allowed actions, existence of attached records,\
        \ or indicators of a profile."
      properties:
        checkProfilesDetail:
          description: "Collection of profiles and the status of its allowed actions,\
            \ attached records, and indicators."
          items:
            $ref: '#/components/schemas/checkProfileType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cityState:
      description: "Response object for fetching City and State based on search criteria.\
        \ This object contains address information,Success,Warnings and Errors related\
        \ to this operation."
      properties:
        addressType:
          $ref: '#/components/schemas/addressType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    claimActivityLogListType:
      description: Summary of claim activity log information.
      items:
        $ref: '#/components/schemas/claimActivityLogType'
      maxItems: 4000
      type: array
    claimActivityLogType:
      description: Summary of claim activity log information.
      properties:
        comments:
          description: Name of the application user who created the activity record.
          maxLength: 2000
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        sequence:
          description: Sequence number for claim activity.
          type: integer
        type:
          description: "Claim activity type such as Reply, Call Property for Verification,\
            \ Caller Called Back, and Remarks."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    claimAdjustmentPointsType:
      description: Summary of membership claim award points and tier points.
      properties:
        adjustmentCode:
          description: "The selected adjustment code's Award, Stay, Nights, and Revenue\
            \ thresholds will display."
          maxLength: 20
          minLength: 0
          type: string
        awardBasePoints:
          description: Base award points for adjustment.
          type: integer
        awardBonusPoints:
          description: Bonus award points for adjustment.
          type: integer
        awardMiscPoints:
          description: Miscellaneous award points for adjustment.
          type: integer
        awardTotalPoints:
          description: Total award points for adjustment.
          type: integer
        baseNightsLimits:
          description: Base nights limits for adjustment.
          type: string
        baseRevenueLimits:
          description: Base revenue limits for adjustment.
          type: string
        baseStayLimits:
          description: Base stay limits for adjustment.
          type: string
        tierBaseNightsPoints:
          description: Tier base nights points for adjustment.
          type: integer
        tierBaseRevenuePoints:
          description: Tier Base revenue points for adjustment.
          type: integer
        tierBaseStayPoints:
          description: Tier base stay points for adjustment.
          type: integer
        tierBonusNightsPoints:
          description: Tier bonus nights points for adjustment.
          type: integer
        tierBonusRevenuePoints:
          description: Tier Bonus revenue points for adjustment.
          type: integer
        tierBonusStayPoints:
          description: Tier bonus stay points for adjustment.
          type: integer
        tierTotalNightsPoints:
          description: Tier total nights points for adjustment.
          type: integer
        tierTotalRevenuePoints:
          description: Tier Total tier revenue points for adjustment.
          type: integer
        tierTotalStayPoints:
          description: Tier total stay points for adjustment.
          type: integer
        totalBasePointsLimits:
          description: Total base points limits for adjustment.
          type: string
      type: object
    claimApprovalStatusType:
      description: Claim approve or reject status.
      enum:
      - Approved
      - Rejected
      - Pending
      type: string
    claimMembershipType:
      description: Summary of claim activity log information.
      properties:
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: number
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership Type code.
          maxLength: 20
          minLength: 0
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
      type: object
    claimRecordType:
      description: Record Type associated with a claim.
      enum:
      - Stay
      - Other
      - LimitedAdjustment
      type: string
    claimReservationInfoType:
      description: Summary of claim activity log information.
      properties:
        arrival:
          description: Arrival date for the stay associated with this claim.
          format: date
          type: string
        confirmationNo:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        departure:
          description: Departure date for the stay associated with this claim.
          format: date
          type: string
        hotelId:
          description: Property where the stay associated with this claim.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    claimSourceType:
      description: Source of the membership claim.
      enum:
      - Ocis
      - Opms
      - Web
      type: string
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    codeInfoType:
      properties:
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        code:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    commissionPaymentMethodType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
        format:
          description: Payment format if the payment method is EFT.
          maxLength: 3
          minLength: 0
          type: string
      type: object
    commissionPaymentMethods:
      description: Check
      enum:
      - Cent
      - Eft
      - Chk
      type: string
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    company:
      description: Request object for creation of company/agent/group/source profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        companyDetails:
          $ref: '#/components/schemas/companyProfileType'
        companyIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    companyInfoType:
      description: Company Information of the Profile.
      properties:
        department:
          description: Department of the Profile.
          maxLength: 20
          minLength: 0
          type: string
        legalCompany:
          description: Legal Company.
          maxLength: 20
          minLength: 0
          type: string
        position:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/companyType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/companyProfileTypeType'
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
      type: object
    companyProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Agent
      - Company
      - Group
      - Source
      type: string
    companyType:
      properties:
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyProfileCommissionInfoType:
      description: Contains base info to determine profile commission bank account
        and code.
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
        hotelId:
          description: Hotel code from which the profile bank account and code belongs
            to
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        targetHotelCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        validatePending:
          description: "Used in CRUD operations. When set to true, proceed validating\
            \ pending commissions"
          type: boolean
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    databaseIDListType:
      description: Code identifying the external database record which is linked to
        external systems.
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        end:
          description: The ending value of the date range.
          format: date
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        endDateTime:
          format: date-time
          type: string
        startDateTime:
          format: date-time
          type: string
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
      type: object
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    directBillingType:
      description: This is the preconfigured routing instruction type.
      properties:
        aRNumber:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    duplicateExternalSubscriptions:
      description: Response object for fetching subscriptions where the same OPERA
        profile is linked to multiple external profiles within the same external system.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        duplicateExternalSubscriptionsList:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/duplicateExternalSubscriptionsType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    duplicateExternalSubscriptionsListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/duplicateExternalSubscriptionsType'
      maxItems: 4000
      type: array
    duplicateExternalSubscriptionsType:
      description: Contains subscription details about an OPERA Profile that is linked
        to multiple external profiles within the same external system.
      properties:
        databaseId:
          description: Code identifying the external database record which is linked
            to external systems.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        profileSubscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
      type: object
    duplicateOPERASubscriptions:
      description: Response object for fetching subscriptions where an external profile
        within a particular external system is linked to multiple OPERA profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        duplicateOPERASubscriptionsList:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/duplicateOPERASubscriptionsType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    duplicateOPERASubscriptionsListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/duplicateOPERASubscriptionsType'
      maxItems: 4000
      type: array
    duplicateOPERASubscriptionsType:
      description: Contains subscription details about an external profile within
        a particular external system that is linked to multiple OPERA profiles.
      properties:
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileSubscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
      type: object
    eCertificateConsumeSourceType:
      description: Indicates that OPERA E-Certificate is consumed by hotelPMS.
      enum:
      - Central
      - Web
      - Hotel
      type: string
    eCertificateConsumptionType:
      description: E-Certificates details.
      properties:
        authorizationCode:
          description: Authorization code for consumption.
          maxLength: 100
          minLength: 0
          type: string
        date:
          description: Date the certificate was consumed.
          format: date
          type: string
        email:
          description: Email of the person who consumed the certificate.
          maxLength: 2000
          minLength: 0
          type: string
        firstName:
          description: First name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property where certificate was consumed for.
          maxLength: 20
          minLength: 0
          type: string
        locationType:
          description: Consumption location type.
          maxLength: 20
          minLength: 0
          type: string
        middleName:
          description: Middle name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        referenceId:
          $ref: '#/components/schemas/uniqueID_Type'
        serviceDate:
          description: Date on which the service is due (arrival date in case of reservation).
          format: date
          type: string
        source:
          $ref: '#/components/schemas/eCertificateConsumeSourceType'
        surname:
          description: Last name of the person who consumed the certificate..
          maxLength: 40
          minLength: 0
          type: string
        userName:
          description: Application user who created the consumption.
          maxLength: 2000
          minLength: 0
          type: string
        userNotes:
          description: Any notes on the certificate entered at time of consumption.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    eCertificateGeneration:
      description: Request object to issue E-Certificate.
      properties:
        eCertificateGenerationDetails:
          $ref: '#/components/schemas/eCertificateGenerationDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateGenerationDetailsType:
      description: E-Certificates issue API call details.
      properties:
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        hotels:
          description: Hotel to which certificate is attached to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        profileId:
          $ref: '#/components/schemas/profileId'
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
      type: object
    eCertificateGenerationType:
      description: E-Certificates details.
      properties:
        generationDetail:
          description: Reason for which e-certificate was generated.
          maxLength: 4000
          minLength: 0
          type: string
        referenceValue:
          description: Type of value that is in the certificate.valid values are membership_level.
          maxLength: 20
          minLength: 0
          type: string
        ruleId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    eCertificateInfoType:
      description: E-Certificates details.
      properties:
        awardCode:
          description: Award type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        benefitSummary:
          description: Summary of Benefits attached to this ECertificate.
          maxLength: 4000
          minLength: 0
          type: string
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          description: Description about the certificate.
          maxLength: 200
          minLength: 0
          type: string
        hotels:
          $ref: '#/components/schemas/eCertificateInfoType_hotels'
        label:
          description: Label for the certificate.
          maxLength: 40
          minLength: 0
          type: string
        longDescription:
          description: Detail description about the certificate.
          maxLength: 4000
          minLength: 0
          type: string
        maxExtensionAllowed:
          description: Number of times e-certificate can be extended.
          type: integer
        membershipType:
          description: Membership type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code to which certificate is attached to.
          maxLength: 20
          minLength: 0
          type: string
        usageCriteria:
          $ref: '#/components/schemas/eCertificateUsageCriteriaType'
        value:
          $ref: '#/components/schemas/currencyAmountType'
        voucherBenefitCode:
          description: Voucher benefit code attached to the certificate.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    eCertificateIssueSourceType:
      description: Indicates that OPERA E-Certificate is issued by external system.
      enum:
      - Opera
      - Web
      - Interface
      type: string
    eCertificateIssueType:
      description: Indicates that guest purchased OPERA E-Certificate.
      enum:
      - Assigned
      - OptedIn
      - Purchased
      type: string
    eCertificateScopeType:
      description: Indicates that OPERA E-Certificate is available for a specific
        list of hotels.
      enum:
      - Global
      - Hotel
      - MultiHotel
      type: string
    eCertificateStatusType:
      description: Indicates that OPERA E-Certificate is reserved.
      enum:
      - Cancelled
      - Consumed
      - Deleted
      - Expired
      - Issued
      - Reserved
      type: string
    eCertificateToConsume:
      description: Request object to Consume an E-Certificate.
      properties:
        consumeECertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateToExtend:
      description: Request object to Consume an E-Certificate.
      properties:
        certificateId:
          description: System generated unique certificate id.
          type: integer
        expiryDate:
          description: Indicates E-Certificate extended expiry date.
          format: date
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateToVerify:
      description: Request object to Verify an E-Certificate Number.
      properties:
        allowReservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        certificateId:
          description: System generated unique certificate id.
          type: integer
        certificateNo:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificateType:
      description: E-Certificates details.
      properties:
        awardId:
          $ref: '#/components/schemas/awardId'
        awardPoints:
          description: Award points if any in case of certificate use membership award.
          type: integer
        cancelRequestDate:
          description: Date on which the cancellation was requested.
          format: date
          type: string
        certificateId:
          description: System generated unique certificate id.
          type: integer
        certificateNo:
          description: Printed certificate no. This has to be unique.
          maxLength: 40
          minLength: 0
          type: string
        consumptionDetail:
          $ref: '#/components/schemas/eCertificateConsumptionType'
        databaseId:
          description: External reference from which the record is created.
          maxLength: 20
          minLength: 0
          type: string
        eCertificateInfo:
          $ref: '#/components/schemas/eCertificateInfoType'
        expiryDate:
          description: Date of expiry.
          format: date
          type: string
        extensionCount:
          description: Number of times e-certificate is already extended.
          type: integer
        generationDetail:
          $ref: '#/components/schemas/eCertificateGenerationType'
        inLieuSequence:
          description: Seq of the in lieu of certificate. 1..n. original certificate
            will be treated as null = 0.
          type: integer
        inactiveDate:
          description: Date the record was marked as inactive.
          format: date
          type: string
        issueDate:
          description: Date when certificate was issued.
          format: date
          type: string
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        newExpiryDate:
          description: New Date of expiry to extend e-certificate.
          format: date
          type: string
        originalCertificateNo:
          description: In case of in lieu of certificate this will contain the original
            certificate no.
          maxLength: 40
          minLength: 0
          type: string
        originalVoucherNo:
          description: In case of in lieu of certificate this will contain the original
            voucher no.
          maxLength: 40
          minLength: 0
          type: string
        printed:
          description: Print status of the certificate.
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        status:
          $ref: '#/components/schemas/eCertificateStatusType'
        voucherNo:
          description: System generated unique voucher number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    eCertificateUsageCriteriaType:
      description: E-Certificates details.
      properties:
        benefit:
          description: Indicates to attach a rate code to the e-certificate as a benefit.
          type: boolean
        cancelAllowed:
          description: Identify if cancel is allowed or not.
          type: boolean
        generateInLieuCertificate:
          description: Identify if in lieu of certificate can be generated or not.
          type: boolean
        hotel:
          description: Indicates if web certificate can be consumed in hotel.
          type: boolean
        reservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        verifyCertificateNo:
          description: Specify if the certificate number verification is required
            at time of consumption or not.
          type: boolean
        web:
          description: Indicates if web certificate can be consumed in OWS.
          type: boolean
        webAllowed:
          description: Indicates if certificate consumption allowable on the web.
          type: boolean
      type: object
    eCertificates:
      description: "Response object for fetch ECertificates. This object contains\
        \ collection of ECertificates,Success,Warnings and Errors related to this\
        \ operation."
      properties:
        eCertificatesDetail:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCertificatesType:
      description: List of e-certificates for the profile.
      items:
        $ref: '#/components/schemas/eCertificateType'
      maxItems: 4000
      type: array
    earningPreferencesType:
      description: Indicates guest's rewards earning preferences.
      properties:
        airline:
          description: Indicates preferred airline code and name.
          maxLength: 20
          minLength: 0
          type: string
        earningPreference:
          description: "Indicates the earning preference, Points or Miles."
          maxLength: 20
          minLength: 0
          type: string
        frequentFlyerNumber:
          description: Indicates frequent flyer's number of the guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailMessageType:
      description: Request object for storing an email.
      properties:
        blockId:
          description: "Used for Character Strings, length 0 to 80."
          maxLength: 80
          minLength: 0
          type: string
        emailBody:
          description: Email in base64 binary format.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        emailReceiveDate:
          description: The date the email was received.
          format: date-time
          type: string
        fromAddress:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        hasAttachment:
          description: Indicates whether the email was sent with an attachment (true)
            or not (false).
          type: boolean
        messageId:
          description: "Used for Character Strings, length 0 to 100."
          maxLength: 100
          minLength: 0
          type: string
        subject:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        toAddress:
          items:
            $ref: '#/components/schemas/basicEmailType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    enrollment:
      description: Response object for fetching profile enrollment from external system.
      properties:
        enrollmentInfo:
          $ref: '#/components/schemas/profileEnrollmentType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    enrollmentMatchProfiles:
      description: Response object to fetch match profiles for enrollment.
      properties:
        enrollmentMatchProfilesDetail:
          description: Provide match profile details for enrollment.
          items:
            $ref: '#/components/schemas/profileEnrollmentType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    enrollmentMatchProfilesType:
      description: Provide match profile details for enrollment.
      items:
        $ref: '#/components/schemas/profileEnrollmentType'
      maxItems: 4000
      type: array
    enrollmentPaymentDetailsType:
      description: Payment details to enrolll profile to the membership program.
      properties:
        amount:
          description: Amount/Fee to enroll to membership Program.
          type: number
        amountCode:
          $ref: '#/components/schemas/codeDescriptionType'
        comments:
          description: Payment Comments.
          maxLength: 4000
          minLength: 0
          type: string
        paymentDate:
          description: The date of Payment for enrollment to membership program.
          format: date
          type: string
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    enrollmentTypeType:
      description: "The type of external system that the guest is enrolling in, such\
        \ as Loyalty, Gaming or Activities."
      enum:
      - Gaming
      - Loyalty
      - Activities
      type: string
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    errorType:
      description: "Standard way to indicate that an error occurred during the processing\
        \ of an message. If the message successfully processes, but there are business\
        \ errors, those errors should be passed in the warning element."
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nodeList:
          description: "An XPath expression that selects all the nodes whose data\
            \ caused this error. Further, this expression should have an additional\
            \ contraint which contains the data of the node. This will provide the\
            \ offending data back to systems that cannot maintain the original message."
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    errorsType:
      description: An error that occurred during the processing of a message.
      items:
        $ref: '#/components/schemas/errorType'
      maxItems: 99
      type: array
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Detail
      type: object
    exportLogsDeliveryStatusType:
      description: Delivery Status for export logs - Not Delivered.
      enum:
      - Unknown
      - Delivered
      - Notdelivered
      type: string
    extendMemberPointsToExpire:
      description: Request object to extend a member points to expire.
      properties:
        expirationDate:
          description: Expiration date to be extended.
          format: date
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipId:
          description: Unique Membership ID.
          type: number
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    fBAInfoType:
      description: FBA ( Flexible Benefits Awards ) related fields.
      properties:
        amount:
          description: Award's FBA amount.
          type: number
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        fbaBillGenDate:
          description: Business date of the FBA bill generation.
          format: date
          type: string
        flexibleBenefitAward:
          description: Indicates if this certificate is a Flexible Benefit Award certificate.
          type: boolean
        monetaryValue:
          description: Award's FBA monetary values.
          type: number
        orphanCertificate:
          description: Indicates whether the certificate is Orphan or not.
          type: boolean
        posted:
          description: Indicates whether FBA has been posted.
          type: boolean
        postedAmount:
          description: Award's FBA posted amount.
          type: number
        postingBusinessDate:
          description: Business date of the FBA posting.
          format: date
          type: string
        postingDateTime:
          description: Date and time of the FBA posting.
          format: date
          type: string
        reimburseAllowed:
          description: Marks if the certificate is eligible for reimbursement.
          type: boolean
        reimbursed:
          description: Indicates whether FBA has been reimbursed.
          type: boolean
        reimbursedAmount:
          description: Award's FBA reimbursed amount.
          type: number
        reimbursementBusinessDate:
          description: Business date of the FBA reimbursement.
          format: date
          type: string
        reimbursementDateTime:
          description: Date and time of the FBA reimbursement.
          format: date
          type: string
        resettleAllowed:
          description: Marks if the certificate is eligible for resettlement
          type: boolean
        settled:
          description: Indicates whether FBA has been settled.
          type: boolean
        settlementBusinessDate:
          description: Business date of the FBA settlement.
          format: date
          type: string
        settlementDateTime:
          description: Date and time of the FBA settlement.
          format: date
          type: string
        status:
          $ref: '#/components/schemas/fBAStatusType'
      type: object
    fBAStatusType:
      description: Flexible benefit award has been reimbursed.
      enum:
      - Ordered
      - Attached
      - Posted
      - Settled
      - Reimbursed
      type: string
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
        supplies:
          description: List of the facility codes.
          items:
            $ref: '#/components/schemas/facilityCodeType'
          maxItems: 4000
          type: array
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
      type: object
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        quantity:
          description: Quantity of the product.
          type: integer
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    forecastsInformation:
      properties:
        forecastsInformation:
          description: Detail Information about Account Forecast.
          items:
            $ref: '#/components/schemas/accountForecastType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    forgetProfileFailureReasonListType:
      description: Reason describing why the profile is not eligible to be forgotten.
      items:
        $ref: '#/components/schemas/forgetProfileFailureReasonType'
      maxItems: 4000
      type: array
    forgetProfileFailureReasonType:
      description: Provides information about the reason why the profile is not eligible
        to be forgotten.
      properties:
        expectedResolutionDate:
          description: Expected resolution date for this reason.
          format: date
          type: string
        reasonCode:
          description: Code representing the reason why the profile is not eligible
            to be forgotten.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Reason describing why the profile is not eligible to be forgotten.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    forgetProfileResultListType:
      description: Result of processing/validation for forgetting a profile.
      items:
        $ref: '#/components/schemas/forgetProfileResultType'
      maxItems: 4000
      type: array
    forgetProfileResultType:
      description: Results of Anonymization processing/validation.
      properties:
        canBeForgotten:
          description: Indicates if the profile is eligible to be anonymized.
          type: boolean
        failureReasons:
          description: Reason describing why the profile is not eligible to be forgotten.
          items:
            $ref: '#/components/schemas/forgetProfileFailureReasonType'
          maxItems: 4000
          type: array
        profileId:
          $ref: '#/components/schemas/profileId'
        status:
          $ref: '#/components/schemas/anonymizationStatusType'
      type: object
    forgetProfilesCriteria:
      description: Operation to validate profiles for forgetting.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        validateForgetProfilesCriteria:
          $ref: '#/components/schemas/forgetProfilesCriteriaType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    forgetProfilesCriteriaType:
      description: Criteria to identify the profiles to be forgotten.
      properties:
        profiles:
          description: Unique identifier for a profile.
          items:
            $ref: '#/components/schemas/profileId'
          maxItems: 4000
          type: array
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: Property Value
          type: string
      type: object
    fulfillmentExportInfoType:
      description: This type holds the export log information for the membership fulfillment
        record.
      properties:
        deliveryStatus:
          $ref: '#/components/schemas/exportLogsDeliveryStatusType'
        excludeExtract:
          description: "To exclude the extract record from membership exports. Once\
            \ the membership export has run, this check box will be grayed out and\
            \ the extract batch Id will be populated in the Extract Batch Id read-only\
            \ field."
          type: boolean
        extractBatchId:
          $ref: '#/components/schemas/uniqueID_Type'
        extractCode:
          description: ExtractCode of the membership fulfillment export logs.
          maxLength: 20
          minLength: 0
          type: string
        extractDate:
          description: ExtractDate of the membership fulfillment export logs.
          format: date
          type: string
        extractId:
          $ref: '#/components/schemas/uniqueID_Type'
        extractLogId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipCard:
          description: The card number for the guest membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    fulfillmentExportLogsType:
      description: This type holds the export log information for the membership fulfillment
        record.
      items:
        $ref: '#/components/schemas/fulfillmentExportInfoType'
      maxItems: 4000
      type: array
    fulfillmentExportedLogs:
      description: Optional elements whether to update exclude extract or delivery
        status in membership fulfillment
      properties:
        fulfillmentExportLogs:
          description: This type holds the export log information for the membership
            fulfillment record.
          items:
            $ref: '#/components/schemas/fulfillmentExportInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    futureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    futurePastBookings:
      description: This is the Response Message to information regarding existence
        of profile in future and/or past business blocks and/or reservations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        response:
          description: response - whether there are future and/or past business blocks
            or reservations for the profile.
          type: boolean
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    futurePastBookingsCriteria:
      description: Request for information regarding existence of profile in future
        and/or past business blocks and/or reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/hasFuturePastBookingsSearchType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    gdsNegotiatedInfoType:
      description: This provides information for a channel negotiated rate.
      properties:
        accessCode:
          description: The GDS negotiated rate code.
          maxLength: 20
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        inactive:
          description: The GDS Negotiated Rate is inactive or not
          type: boolean
        order:
          description: The sell order.
          type: integer
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    gdsNegotiatedType:
      description: This holds a list of GdsNegotiatedInfoType.
      properties:
        bookingChannelCode:
          description: Booking Channel Code.
          maxLength: 20
          minLength: 0
          type: string
        channelRatePlanCode:
          description: Channel Room Type.
          maxLength: 20
          minLength: 0
          type: string
        gdsNegotiatedInfoList:
          description: List of channel negotiated rates for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    generateMembershipNumberCriteriaType:
      description: Auto generate membership number criteria.
      properties:
        membershipType:
          description: Indicates the Membership Type where membership number to be
            generated will be based on.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    guest:
      description: Request object for creation of guest/contact/employee profile.
        This object contains profile details with unique identifiers of a profile.
        The standard optional Opera Context element is also included.
      properties:
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        guestDetails:
          $ref: '#/components/schemas/guestProfileType'
        guestIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    guestProfileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        customer:
          $ref: '#/components/schemas/customerType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        localizationGuestType:
          description: Localization Guest Type associated to the profile.
          maxLength: 20
          minLength: 0
          type: string
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/guestProfileTypeType'
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
      type: object
    guestProfileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Employee
      - Contact
      type: string
    hasFuturePastBookingsExclusionsType:
      description: Search type for excluding list of business blocks and/or reservations.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    hasFuturePastBookingsSearchType:
      description: Search type for verifying whether there are future and/or past
        business blocks and/or reservations exist for a Profile.
      properties:
        exclusions:
          $ref: '#/components/schemas/hasFuturePastBookingsExclusionsType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        rateCode:
          description: Unique identifier of the rate code of business block or reservation.
          maxLength: 20
          minLength: 0
          type: string
        searchFor:
          description: Search for active or past.
          enum:
          - Active
          - Past
          type: string
        searchIn:
          description: Search in business blocks or reservations.
          enum:
          - Block
          - Reservation
          type: string
      type: object
    historyListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    hotelInterfaceType:
      properties:
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelStayType:
      description: Type provides the hotel stay information.
      properties:
        arrivalDate:
          description: Guest arrival date.
          format: date
          type: string
        hotelName:
          description: Hotel Name.
          maxLength: 40
          minLength: 0
          type: string
        pointsMiles:
          description: Points or Miles.
          maxLength: 20
          minLength: 0
          type: string
        pointsMilesEarned:
          description: Guest stay points or miles earned
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelStaysType:
      description: Detailed information of the hotel stay.
      items:
        $ref: '#/components/schemas/hotelStayType'
      maxItems: 4000
      type: array
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    iATAInfoType:
      description: IATA Information of the profile.
      properties:
        iATACompany:
          description: IATA Company Detail.
          maxLength: 20
          minLength: 0
          type: string
        iATAConsortia:
          description: IATA Consortia.
          maxLength: 40
          minLength: 0
          type: string
        iATAValidationResult:
          description: IATA Validation Result.
          type: boolean
      type: object
    identificationInfoType:
      description: Information on the identification of the customer.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        identification:
          $ref: '#/components/schemas/identificationType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    identificationType:
      description: Identification information of the customer.
      properties:
        expirationDate:
          description: Expiration date of Identification.
          format: date
          type: string
        idNumber:
          description: Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idNumberMasked:
          description: Masked Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idType:
          description: "Identification Type. Eg Passport, Driving License etc."
          maxLength: 40
          minLength: 0
          type: string
        issuedCountry:
          description: The country where Identification was issued.
          maxLength: 20
          minLength: 0
          type: string
        issuedDate:
          description: Issued date of Identification.
          format: date
          type: string
        issuedPlace:
          description: The place where Identification was issued.
          maxLength: 80
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        registeredProperty:
          description: Property where the identification belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        chainCode:
          description: The image set chain code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        imageOrder:
          description: The image set order.
          type: integer
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        imageType:
          description: The image set type.
          maxLength: 80
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        sequenceId:
          description: The image set sequence ID.
          type: integer
        website:
          description: The image set website.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    indicatorType:
      description: Lamp indicator Type.
      properties:
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    interfaceRightsStatusType:
      properties:
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
      type: object
    keywordDetailType:
      properties:
        newKeyword:
          description: The new keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    keywordType:
      properties:
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        type:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
      type: object
    lastStayInfoType:
      description: Contains last stay related details for the profile
      properties:
        lastRate:
          $ref: '#/components/schemas/currencyAmountType'
        lastRoom:
          description: Used to hold last room information for the profile.
          type: string
        lastVisit:
          description: Used to hold last stay information for the profile.
          format: date
          type: string
        totalStay:
          description: The total number of previous stay of the profile.
          type: integer
      type: object
    linkedProfiles:
      description: Response of fetch set of linked Profiles to the requested Profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileSummaries:
          $ref: '#/components/schemas/profileSummariesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    mailingActionsType:
      description: Defines mailing action list for the profile.
      properties:
        active:
          description: When true indicates that profile has subscribed to the mailing
            list.
          type: boolean
        count:
          description: Total number of rows returned
          type: integer
        mailingAction:
          description: Defines mailing action code and description.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    mailingPreferencesType:
      description: Indicates guest's mailing preferences.
      properties:
        eFolio:
          description: Defines if an E-Folio is required.
          type: boolean
        mailings:
          description: Defines mailings only.
          type: boolean
      type: object
    marketCodeInfoType:
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          maxLength: 20
          minLength: 0
          type: string
        marketGroup:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    matchProfileType:
      description: Provides information for match profile.
      properties:
        hotelId:
          description: Hotel Code for the profile.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        statusCode:
          $ref: '#/components/schemas/matchStatusType'
      type: object
    matchStatusType:
      description: No Match found based on the Threshold.
      enum:
      - MatchFoundMerge
      - MatchFoundCreate
      - TentativeMatchFound
      - MatchNotFound
      type: string
    matchedProfiles:
      description: Response object for the match profiles.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        matchProfiles:
          $ref: '#/components/schemas/matchProfileType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberAwardActionType:
      description: "Specify whether award is to issue, cancel or update."
      enum:
      - Issue
      - Cancel
      - InfoUpdate
      type: string
    memberAwardDetailType:
      description: "Details related to member award like award type, stay date, rate\
        \ code, etc."
      properties:
        actionType:
          $ref: '#/components/schemas/memberAwardActionType'
        actualCancelPoints:
          description: Actual number of cancel points.
          type: integer
        awardBasedOn:
          description: "Indicates if award is a Stay, Package Element or other."
          maxLength: 20
          minLength: 0
          type: string
        awardCancellationNo:
          $ref: '#/components/schemas/uniqueID_Type'
        awardProductId:
          $ref: '#/components/schemas/uniqueID_Type'
        awardType:
          description: The award type or code.
          maxLength: 40
          minLength: 0
          type: string
        awardVoucherNo:
          description: Award Voucher Number.
          maxLength: 40
          minLength: 0
          type: string
        cancelPenaltyCharge:
          description: Number points deducted if award is cancelled.
          type: integer
        cancelPenaltyDays:
          description: Number days before arrival to apply penalty for cancellation.
          type: integer
        cancelPenaltyPoints:
          description: Number of penalty points if cancelled.
          type: integer
        cancelPenaltyType:
          description: "Type of cancel penalty like Points, etc."
          maxLength: 20
          minLength: 0
          type: string
        cancelPolicyType:
          description: Type of cancel policy.
          maxLength: 20
          minLength: 0
          type: string
        exchangeRateType:
          description: Exchange Rate Type for the Currency Exchange.
          maxLength: 20
          minLength: 0
          type: string
        fromRoomType:
          description: Room type label before the upgrade in case of an upgrade award.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: If the award detail is inactive.
          type: boolean
        numberOfNights:
          description: Number of nights cancel policy is applicable.
          type: integer
        pointsRequired:
          description: Points required for the stay date.
          type: integer
        product:
          description: "Product code for which the award was issued, in case of a\
            \ product award."
          maxLength: 80
          minLength: 0
          type: string
        rateCode:
          description: Rate code associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
        redeemedCentralAmount:
          description: Redeemed Central Amount on bill in External System Currency.
          type: number
        redeemedLocalAmount:
          description: Redeemed Local Amount on bill in Hotel Currency.
          type: number
        roomType:
          description: Room type label associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: Date of stay.
          format: date
          type: string
        toRoomType:
          description: Room type label after the upgrade for an upgrade award.
          maxLength: 20
          minLength: 0
          type: string
        totalCentralAmount:
          description: Total Central Amount on bill in External System Currency.
          type: number
        totalLocalAmount:
          description: Total Local Amount on bill in Hotel Currency.
          type: number
        transactionCode:
          description: The Payment Transaction Code for which the Surcharge Applies.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
      type: object
    memberAwardDetailsType:
      description: Details related to member award per stay date.
      items:
        $ref: '#/components/schemas/memberAwardDetailType'
      maxItems: 4000
      type: array
    memberAwardProcessType:
      description: "Processing type of the award like Actual , Projected or Inactive."
      enum:
      - Actual
      - Projected
      - Inactive
      type: string
    memberAwardType:
      properties:
        actualCancelPoints:
          description: Actual number of cancel points.
          type: integer
        adults:
          description: Number of adults associated with the reservation.
          type: integer
        awardPoints:
          description: Points associated with the award.
          type: integer
        awardProcessType:
          $ref: '#/components/schemas/memberAwardProcessType'
        cancelPointsReturn:
          description: Number of cancel points returned.
          type: integer
        expiryPoints:
          description: Points that will expire.
          type: integer
        hotelId:
          description: Property associated with the reservation.
          maxLength: 20
          minLength: 0
          type: string
        memberAwardDetails:
          description: Details related to member award per stay date.
          items:
            $ref: '#/components/schemas/memberAwardDetailType'
          maxItems: 4000
          type: array
        memberPointsAfter:
          description: Member points after award transaction.
          type: integer
        memberPointsBefore:
          description: Member points before award transaction.
          type: integer
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: The type of the membership.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sourceCode:
          description: "To specify where the business came from e.g. radio, newspaper\
            \ ad, etc."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    memberInfoDetailsType:
      properties:
        awardBasePoints:
          description: Total base points of the award.
          type: integer
        awardBonusPoints:
          description: Total bonus points of the award.
          type: integer
        awardMiscPoints:
          description: Total miscellaneous points of the award.
          type: integer
        guestTotalNights:
          description: Total nights of the guest.
          type: integer
        guestTotalStay:
          description: STotal stays of the guest.
          type: integer
        membershipTotalNights:
          description: Total Nights of the membership.
          type: integer
        membershipTotalStay:
          description: Total Stay of the membership.
          type: integer
        tierBaseNights:
          description: Tier Base Nights Points.
          type: integer
        tierBaseRevenue:
          description: Tier Base Revenue Points.
          type: number
        tierBaseStay:
          description: Tier Base Stay Points.
          type: integer
        tierBonusNights:
          description: Tier Bonus Nights Points.
          type: integer
        tierBonusRevenue:
          description: Tier Bonus Revenue Points.
          type: number
        tierBonusStay:
          description: Tier Bonus Stay Points.
          type: integer
        totalAwardPoints:
          description: Total points of the award.
          type: integer
      type: object
    memberInfoRSType:
      properties:
        memberInfoDetails:
          $ref: '#/components/schemas/memberInfoDetailsType'
        memberInfoRangeDetails:
          $ref: '#/components/schemas/memberInfoDetailsType'
        nextTierPoints:
          description: Points required for next tier of membership.
          type: integer
        pointsAvailable:
          description: Points available for the member.
          type: integer
      type: object
    memberInfoType:
      description: "Contains details of the membership transaction processing status,\
        \ provided by the airline."
      properties:
        firstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        lastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        membershipId:
          description: Membership Card Number
          maxLength: 50
          minLength: 0
          type: string
        membershipType:
          description: Membership Program Code or Membership Type
          maxLength: 50
          minLength: 0
          type: string
      type: object
    memberInformation:
      description: Response object for member info.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        memberInfo:
          $ref: '#/components/schemas/memberInfoRSType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberPointToExpireType:
      description: Information related to a member point to expire.
      properties:
        awardGenerationMethod:
          description: The method of award generation.
          maxLength: 20
          minLength: 0
          type: string
        extend:
          description: Indicates if the points is extendable.
          type: boolean
        pointsExpiryDate:
          description: The date when the member future award points will expire.
          format: date
          type: string
        pointsToExpire:
          description: Displays the total number of points that will expire on the
            expiration date.
          type: integer
        previousPointsToExpire:
          description: Displays the number of points that are relevant for extension.
            Points that were already extended from the previous year are not considered
            for extension.
          type: integer
      type: object
    memberPointsSummaryType:
      description: Member Points Summary.
      properties:
        availablePoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        nextTierPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberPointsToExpire:
      description: Response object for fetching member points to expire information.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        memberPointsToExpireList:
          description: List of of member points to expire.
          items:
            $ref: '#/components/schemas/memberPointToExpireType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    memberPointsToExpireListType:
      description: List of of member points to expire.
      items:
        $ref: '#/components/schemas/memberPointToExpireType'
      maxItems: 4000
      type: array
    memberTransactionRecentSummaryType:
      description: Itemized information related to a membership transactions summary.
      properties:
        awardPoints:
          $ref: '#/components/schemas/memberTransactionSummaryAwardPointsType'
        guestStays:
          $ref: '#/components/schemas/memberTransactionSummaryGuestStaysType'
        tierPoints:
          $ref: '#/components/schemas/memberTransactionSummaryTierPointsType'
        years:
          description: Range in Years.
          type: integer
      type: object
    memberTransactionSummaryAwardPointsType:
      description: Items summary associated with award points.
      properties:
        basePoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        miscPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalPoints:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberTransactionSummaryGuestStaysType:
      description: Items summary associated with guest stays.
      properties:
        nights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        stays:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberTransactionSummaryTierPointsType:
      description: Items summary associated with Tier points.
      properties:
        baseNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        baseRevenue:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        baseStay:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusRevenue:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        bonusStay:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalNights:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
        totalStays:
          $ref: '#/components/schemas/transactionSummaryAttributeType'
      type: object
    memberTransactionSummaryType:
      description: Itemized information related to a membership transactions summary.
      properties:
        awardPoints:
          $ref: '#/components/schemas/memberTransactionSummaryAwardPointsType'
        guestStays:
          $ref: '#/components/schemas/memberTransactionSummaryGuestStaysType'
        tierPoints:
          $ref: '#/components/schemas/memberTransactionSummaryTierPointsType'
      type: object
    membership:
      description: Request object for create membership. This object contains unique
        identifiers for each profile and list of membership details to be created.
        The standard optional Opera Context element is also included.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileMemberships:
          description: Detailed information of membership related to the profile
          items:
            $ref: '#/components/schemas/profileMembershipType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardAvailabilityType:
      description: Details of Member Award Type. Awards will be available for redemption
        of award points associated with a particular member.
      properties:
        otherInfo:
          $ref: '#/components/schemas/otherAvailabilityType'
        productInfo:
          $ref: '#/components/schemas/productAvailabilityType'
        rateInfo:
          $ref: '#/components/schemas/rateAvailabilityType'
        upgradeInfo:
          $ref: '#/components/schemas/upgradeAvailabilityType'
      type: object
    membershipAwardBasedOnType:
      description: This award allows a guest to apply available membership points
        towards the balance of his or her bill.
      enum:
      - Rate
      - Product
      - Upgrade
      - Other
      - Ft
      type: string
    membershipAwardExportInfo:
      description: Response object to fetch members information for Fulfillment house
        processing.
      properties:
        exportInfo:
          description: List of member's information.
          items:
            $ref: '#/components/schemas/membershipAwardExportType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardExportType:
      description: Types holds the details of Member.
      properties:
        awardNumber:
          description: Award Number to identify member's information.
          type: number
        recipientInfo:
          $ref: '#/components/schemas/membershipAwardRecipientInfoType'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
      type: object
    membershipAwardListType:
      description: Information related to Member Award Issue List.
      properties:
        actualCancelPoints:
          description: The number of points actually deducted from the member's total
            award points if there is a penalty points restriction associated with
            the award cancellation.
          type: number
        arrivalDate:
          description: The arrival date of the stay for when the award is associated.
          format: date
          type: string
        awardBasedOn:
          $ref: '#/components/schemas/membershipAwardBasedOnType'
        awardCancelDate:
          description: "If the reservation associated with the award was cancelled,\
            \ the reservation cancellation date appears here."
          format: date
          type: string
        awardCancellationNumber:
          description: "If the award was cancelled, the system-generated award cancellation\
            \ number appears here."
          type: integer
        awardCode:
          description: Code assigned to this membership award.
          maxLength: 40
          minLength: 0
          type: string
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardPoints:
          description: Number of points required by the award.
          type: number
        awardSource:
          description: The source for the reservation associated with the award.
          maxLength: 40
          minLength: 0
          type: string
        bookingNumber:
          description: Reservation confirmation number.
          maxLength: 50
          minLength: 0
          type: string
        calculatedCancelPoints:
          description: Total calculated points to cancel an issued award.
          type: number
        cancelDays:
          description: "The cancel days, set up in awards configuration that establishes\
            \ the number of days before arrival when a reservation may be cancelled\
            \ without an award points penalty."
          type: integer
        cancelMemberStatementID:
          description: "If this award was included on a statement, the cancel member\
            \ statement ID appears here. The field is blank if the award has not yet\
            \ been reported on a statement"
          type: integer
        cancelPenaltyPoints:
          description: "The award points that will be deducted (based on a cancel\
            \ days restriction) if the award is cancelled. (Cancel days, set up in\
            \ awards configuration, and establish the number of days before arrival\
            \ when a reservation may be cancelled without an award points penalty.)"
          type: integer
        cancelPolicyType:
          description: Type of cancel policy.
          maxLength: 20
          minLength: 0
          type: string
        cancelStatementID:
          description: "If this award was included on a statement, the cancel statement\
            \ ID appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        crsBookNo:
          description: Indicates CRS Booking Number.
          maxLength: 50
          minLength: 0
          type: string
        dateAwarded:
          description: Date when the award was issued
          format: date
          type: string
        departureDate:
          description: The date of the departure of the reservation associated with
            the award. There may be more than one date (multiple nights) associated
            with award
          format: date
          type: string
        expireDate:
          description: Expiry date on the Card.
          format: date
          type: string
        hotelBookingNumber:
          description: Property Reservation number.
          maxLength: 30
          minLength: 0
          type: string
        hotelId:
          description: Property at which the award was issued.
          maxLength: 20
          minLength: 0
          type: string
        joinDate:
          description: Joined date on the Card.
          format: date
          type: string
        memberStatementId:
          description: "If this award was included on a statement, the member statement\
            \ ID appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        membershipCardNo:
          description: Indicates Membership Card Number.
          maxLength: 50
          minLength: 0
          type: string
        membershipId:
          description: Card number of the membership.
          type: number
        membershipLevel:
          description: Level of this Membership Type.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership type for which awards are defined.
          maxLength: 20
          minLength: 0
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        numberOfNights:
          description: Number of nights cancel policy is applicable.
          type: integer
        pmsResvNo:
          description: Indicates PMS Reservation Number.
          maxLength: 50
          minLength: 0
          type: string
        product:
          description: Indicates the Product associated with the award.
          maxLength: 50
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        reservationCancellationNumber:
          description: "If the reservation associated with the award was cancelled,\
            \ the reservation cancellation number appears here."
          maxLength: 30
          minLength: 0
          type: string
        statementId:
          description: "If this award was included on a statement, the statement ID\
            \ appears here. The field is blank if the award has not yet been reported\
            \ on a statement"
          type: integer
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award
          format: date
          type: string
        thresholdPoints:
          description: Indicates member is below the threshold limit or not to request
            award.
          type: number
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
      type: object
    membershipAwardPointByHotelType:
      description: Award points information group by Hotel.
      properties:
        hotelId:
          description: Award points issued at Property level.
          maxLength: 20
          minLength: 0
          type: string
        totalPoints:
          description: Sum of total positive and negative points.
          type: number
      type: object
    membershipAwardPointsByHotel:
      description: Response object for fetching member award points by Hotel.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipAwardPoints:
          description: List of available award points information by Hotel.
          items:
            $ref: '#/components/schemas/membershipAwardPointByHotelType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipAwardPointsByHotelType:
      description: List of available award points information by Hotel.
      items:
        $ref: '#/components/schemas/membershipAwardPointByHotelType'
      maxItems: 4000
      type: array
    membershipAwardPointsType:
      description: Details associated with award points.
      properties:
        basePoints:
          description: Total number of base award points for a membership points transaction.
          type: integer
        bonusPoints:
          description: "If a membership points transaction involves bonus points,\
            \ the total number of bonus points."
          type: integer
        miscPoints:
          description: "If a membership points transaction involves points imported\
            \ into ORS from a third-party system, the total number of points."
          type: integer
        pointsExpiryDate:
          description: The date until points are eligible for redemption based on
            membership type configuration.
          format: date
          type: string
        ruleCode:
          description: Rule Code for award points.
          maxLength: 20
          minLength: 0
          type: string
        totalPoints:
          description: The total number of award points.
          type: integer
      type: object
    membershipAwardRecipientInfoType:
      description: Type holds details of member.
      properties:
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        companyName:
          description: "It returns a Company Name,If the member is associated with\
            \ a company."
          maxLength: 40
          minLength: 0
          type: string
        memberInfo:
          $ref: '#/components/schemas/profileNameType'
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipAwardsAvailabilityType:
      description: List of available awards information.
      items:
        $ref: '#/components/schemas/membershipAwardAvailabilityType'
      maxItems: 4000
      type: array
    membershipAwardsExportType:
      description: List of member's information.
      items:
        $ref: '#/components/schemas/membershipAwardExportType'
      maxItems: 4000
      type: array
    membershipAwardsListType:
      description: List of Member Awards information.
      items:
        $ref: '#/components/schemas/membershipAwardListType'
      maxItems: 4000
      type: array
    membershipClaim:
      description: Request object for creating membership claim.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipClaimDetails:
          $ref: '#/components/schemas/membershipClaimDetailsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipClaimDetailsType:
      description: Detailed information of a claim.
      properties:
        activityLog:
          description: Summary of claim activity log information.
          items:
            $ref: '#/components/schemas/claimActivityLogType'
          maxItems: 4000
          type: array
        approvalStatus:
          $ref: '#/components/schemas/claimApprovalStatusType'
        callerInformation:
          description: More information related to call that help to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        callerName:
          description: Name of the person placing the claim. This name may be different
            from the name on the membership card.
          maxLength: 100
          minLength: 0
          type: string
        claimDate:
          description: Date the claim was made.
          format: date
          type: string
        claimNo:
          $ref: '#/components/schemas/uniqueID_Type'
        claimPoints:
          $ref: '#/components/schemas/claimAdjustmentPointsType'
        claimStatus:
          description: "Status of the claim.(Open, Closed, Pending Review, Waiting\
            \ for Manager, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        claimType:
          description: "Type of user-definable claim such as New Card, Stay, etc."
          maxLength: 20
          minLength: 0
          type: string
        closeDate:
          description: "If the status is closed, the date the claim was closed."
          format: date
          type: string
        comments:
          description: Additional comments or steps taken to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        membership:
          $ref: '#/components/schemas/claimMembershipType'
        origin:
          description: "Origin of the membership claim. User definable values like\
            \ Email, Fax, Phone Call, etc."
          maxLength: 20
          minLength: 0
          type: string
        owner:
          description: User who is assigned to handle this claim.
          maxLength: 50
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        recordType:
          $ref: '#/components/schemas/claimRecordType'
        replyBy:
          description: "The date, if any, by which a response to the caller was promised."
          format: date
          type: string
        reservation:
          $ref: '#/components/schemas/claimReservationInfoType'
        source:
          $ref: '#/components/schemas/claimSourceType'
        submitter:
          description: User who entered this claim.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    membershipClaimSummaryListType:
      description: Contains summary information of the claim.
      items:
        $ref: '#/components/schemas/membershipClaimSummaryType'
      maxItems: 4000
      type: array
    membershipClaimSummaryType:
      description: Summary information of a claim.
      properties:
        activityLog:
          description: Summary of claim activity log information.
          items:
            $ref: '#/components/schemas/claimActivityLogType'
          maxItems: 4000
          type: array
        approvalStatus:
          $ref: '#/components/schemas/claimApprovalStatusType'
        arrival:
          description: Arrival date for the stay associated with this claim.
          format: date
          type: string
        callerInformation:
          description: More information related to call that help to resolve the claim..
          maxLength: 2000
          minLength: 0
          type: string
        callerName:
          description: Name of the person placing the claim. This name may be different
            from the name on the membership card.
          maxLength: 100
          minLength: 0
          type: string
        claimDate:
          description: Date the claim was made.
          format: date
          type: string
        claimNo:
          $ref: '#/components/schemas/uniqueID_Type'
        claimStatus:
          description: "Status of the claim.(Open, Closed, Pending Review, Waiting\
            \ for Manager, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        claimType:
          description: "Type of user-definable claim such as New Card, Stay, etc."
          maxLength: 40
          minLength: 0
          type: string
        closeDate:
          description: "If the status is closed, the date the claim was closed."
          format: date
          type: string
        confirmationNo:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        departure:
          description: Departure date for the stay associated with this claim.
          format: date
          type: string
        hotelId:
          description: Property where the stay took place.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Indicates membership card number of the guest.
          maxLength: 50
          minLength: 0
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: number
        membershipType:
          description: Membership Type code.
          maxLength: 20
          minLength: 0
          type: string
        origin:
          description: "Origin of the membership claim. User definable values like\
            \ Email, Fax, Phone Call, etc."
          maxLength: 20
          minLength: 0
          type: string
        owner:
          description: User who is assigned to handle this claim.
          maxLength: 50
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        recordType:
          $ref: '#/components/schemas/claimRecordType'
        replyBy:
          description: "The date, if any, by which a response to the caller was promised."
          format: date
          type: string
        source:
          $ref: '#/components/schemas/claimSourceType'
        submitter:
          description: User who entered this claim.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    membershipClaims:
      description: Response object for fetching membership claims.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipClaimsDetail:
          description: Contains summary information of the claim.
          items:
            $ref: '#/components/schemas/membershipClaimSummaryType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipDetailsType:
      description: "Details about a membership like ProfileID, Card Number, Type,\
        \ Level, etc."
      properties:
        cardExpirationDate:
          description: Membership card expiration date.
          format: date
          type: string
        joinedDate:
          description: Date when the member enrolled for the membership.
          format: date
          type: string
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        name:
          description: The profile name associated with this membership.
          maxLength: 128
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipIssueAwards:
      description: Response object for fetching member issued award list.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipAwardsList:
          description: List of Member Awards information.
          items:
            $ref: '#/components/schemas/membershipAwardListType'
          maxItems: 4000
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipNumber:
      description: Request object for generating membership number.
      properties:
        generateMembershipNumberCriteria:
          $ref: '#/components/schemas/generateMembershipNumberCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipPointsCalculationProcessType:
      description: "Issuing awards for guests belonging to a membership type, with\
        \ a specific award code that is of Other type."
      enum:
      - CalculatePoints
      - ExpirePoints
      - IssueAwards
      type: string
    membershipPointsCalculationType:
      description: Details needed for calculating membership points.
      properties:
        awardCode:
          description: Award Code to be used to generate awards for the membership
            type. Available for Automatic Generation of Awards (Issue Awards) only.
          maxLength: 40
          minLength: 0
          type: string
        calculateUntilDate:
          description: The last date for which calculate or expire points. Available
            for Calculate Points and Expire Award Points only.
          format: date
          type: string
        membershipType:
          description: Membership type for which point calculation process is to be
            run.
          maxLength: 20
          minLength: 0
          type: string
        processType:
          $ref: '#/components/schemas/membershipPointsCalculationProcessType'
      type: object
    membershipPointsToCalculate:
      description: Request to run membership points calculation job.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipPointsCalculation:
          $ref: '#/components/schemas/membershipPointsCalculationType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipStatisticsSummaryType:
      description: Totals of the each of the points.
      properties:
        awardPoints:
          description: Total of the award points from all the transactions.
          type: integer
        pointsCost:
          description: Total of the Points Cost from all the transactions.
          type: integer
        tierNightPoints:
          description: Total of the Tier Night points from all the transactions.
          type: integer
        tierRevenuePoints:
          description: Total of the Tier Revenue points from all the transactions.
          type: integer
        tierStayPoints:
          description: Total of the Tier Stay points from all the transactions.
          type: integer
      type: object
    membershipStatisticsType:
      description: List of membership transactions and the summary of the different
        total points statistics.
      properties:
        cardNumber:
          description: The membership card number.
          maxLength: 50
          minLength: 0
          type: string
        level:
          description: The level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        statisticsSummary:
          $ref: '#/components/schemas/membershipStatisticsSummaryType'
        transactions:
          description: Activity or a transaction related to the Membership.
          items:
            $ref: '#/components/schemas/membershipTransactionSummaryType'
          maxItems: 4000
          type: array
        type:
          description: The type of membership.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTierPointsType:
      description: Collection of the tier points.
      properties:
        nightPoints:
          description: Sum of the base night and bonus night points.
          type: integer
        pointsCost:
          description: Points Cost.
          type: integer
        pointsCreditDate:
          description: Date when points were created.
          format: date
          type: string
        revenuePoints:
          description: Sum of the base revenue and bonus revenue points.
          type: integer
        stayPoints:
          description: Sum of the base stay and bonus stay points.
          type: integer
      type: object
    membershipTierProjectionType:
      description: Membership Upgrade/Downgrade Projection.
      properties:
        downgrade:
          description: Information regarding member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        upgrade:
          description: Upgrade information which includes member's next tier level
            requirements for next upgrade.
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    membershipTierProjections:
      description: Response object for fetching Membership Tier Process Text.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipTierProjection:
          $ref: '#/components/schemas/membershipTierProjectionType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransaction:
      description: Response object for fetching a membership transaction.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipTransactionDetails:
          $ref: '#/components/schemas/membershipTransactionType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionDetailsType:
      description: Detailed information related to a membership transaction.
      properties:
        adjustment:
          description: Indicates if the transaction was created as an adjustment.
          type: boolean
        averageRateAmount:
          description: The average cost of the room per night.
          type: number
        awardPoints:
          $ref: '#/components/schemas/membershipAwardPointsType'
        baseBillingGroup:
          description: Base billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        billingGroup:
          description: Billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        bonusBillingGroup:
          description: Bonus billing group the points belong to.
          maxLength: 20
          minLength: 0
          type: string
        bookedRoomLabel:
          description: The booked room type for this transaction.
          maxLength: 50
          minLength: 0
          type: string
        currency:
          description: The property currency at the originating PMS.
          maxLength: 20
          minLength: 0
          type: string
        exception:
          description: Indicates if the transaction was flagged as an exception.
          type: boolean
        hotelId:
          description: Property from which the membership stay information was received.
          maxLength: 20
          minLength: 0
          type: string
        memberStatementId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        notes:
          description: Notes associated with this transaction.
          maxLength: 4000
          minLength: 0
          type: string
        pointsCalculated:
          description: Indicates if the points have been calculated on this transaction.
          type: boolean
        pointsCost:
          description: The total cost associated with points earned by this transaction.
          type: integer
        pointsCreditDate:
          description: "For adjustments, the date when the points are to be credited."
          format: date
          type: string
        processingMessages:
          description: Messages generated by the system during points calculation.
          maxLength: 2000
          minLength: 0
          type: string
        profilePromotions:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        ratePromotion:
          description: Promotion code assigned on reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomLabel:
          description: The room type for this transaction.
          maxLength: 50
          minLength: 0
          type: string
        statementId:
          $ref: '#/components/schemas/uniqueID_Type'
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        tierPoints:
          $ref: '#/components/schemas/membershipTransactionTierPointsType'
        transactionDate:
          description: The date when the points were calculated.
          format: date
          type: string
        transactionType:
          description: The type of membership points transaction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTransactionExceptionComputePointsType:
      description: Options to compute award and tier points for membership transaction
        exception.
      properties:
        awardBasePoints:
          description: Indicates if membership transaction exception should be created
            for base award points.
          type: boolean
        awardBonusPoints:
          description: Indicates if membership transaction exception should be created
            for bonus award points.
          type: boolean
        tierPointsBaseNights:
          description: Indicates if membership transaction exception should be created
            for base tier points for the night.
          type: boolean
        tierPointsBaseRevenue:
          description: Indicates if membership transaction exception should be created
            for base tier points for the revenue.
          type: boolean
        tierPointsBaseStay:
          description: Indicates if membership transaction exception should be created
            for base tier points for the stay.
          type: boolean
        tierPointsBonusNights:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the night.
          type: boolean
        tierPointsBonusRevenue:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the revenue.
          type: boolean
        tierPointsBonusStay:
          description: Indicates if membership transaction exception should be created
            for tier bonus points for the stay.
          type: boolean
      type: object
    membershipTransactionExceptionType:
      description: "Details about a membership like ProfileID, Card Number, Type,\
        \ Level, etc."
      properties:
        averageRate:
          description: The average rate of the stay.
          type: number
        awardBasePoints:
          description: The total number of base award points for this membership points
            transaction.
          type: number
        awardBonusPoints:
          description: "Indicates if this transaction involves bonus points, The total\
            \ number of bonus points."
          type: number
        backToBack:
          description: Indicates if back to back membership transaction exceptions
            have occurred or not.
          maxLength: 2
          minLength: 0
          type: string
        cardExpirationDate:
          description: Membership card expiration date.
          format: date
          type: string
        computedPoints:
          $ref: '#/components/schemas/membershipTransactionExceptionComputePointsType'
        exceptionType:
          description: "Indicates the type of Exception like Exception not resolved,Points\
            \ Rejected on Exception etc.,"
          type: integer
        fromToRangeDate:
          $ref: '#/components/schemas/dateRangeType'
        hotelId:
          description: Hotel code of the membership transaction exceptions.
          maxLength: 20
          minLength: 0
          type: string
        joinedDate:
          description: Date when the member enrolled for the membership.
          format: date
          type: string
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipId:
          $ref: '#/components/schemas/uniqueID_Type'
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipTransactionId:
          $ref: '#/components/schemas/membershipTransactionId'
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        name:
          description: The profile name associated with this membership.
          maxLength: 128
          minLength: 0
          type: string
        pointsCalculate:
          description: Points Calculated value(Y/N) for the selected transaction.
          type: boolean
        processingMessages:
          description: The systems records and notes identifying the exception criteria.
          maxLength: 2000
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        reservationNumber:
          description: Any reference like reservation no etc against which the certificate
            was consumed.
          maxLength: 50
          minLength: 0
          type: string
        roomsBooked:
          description: "If multiple room membership transaction exceptions occurred,\
            \ the number of rooms booked.(MR)"
          type: integer
        tierPoints:
          $ref: '#/components/schemas/membershipTransactionTierPointsType'
        tierStays:
          description: Tier stay points associated with this membership points transaction.
          type: number
        totalAwardPoints:
          description: Award points associated with this membership points transaction.
          type: number
        totalNights:
          description: Tier night points associated with this membership points transaction.
          type: number
        totalPoints:
          description: The total number of award points associated with this transaction.
          type: number
        totalRevenue:
          description: Tier revenue points associated with this membership points
            transaction.
          type: number
        userNotes:
          description: Notes regarding the resolution of the membership transaction
            exception or for any other reason.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    membershipTransactionExceptions:
      description: Response object for fetching membership transaction exceptions.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        memberTransactionExceptions:
          description: Contains Membership transaction exception information.
          items:
            $ref: '#/components/schemas/membershipTransactionExceptionType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    membershipTransactionExceptionsType:
      description: Contains Membership transaction exception information.
      items:
        $ref: '#/components/schemas/membershipTransactionExceptionType'
      maxItems: 4000
      type: array
    membershipTransactionId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    membershipTransactionInfoType:
      description: Specific details regarding the transaction.
      properties:
        currencyCode:
          description: Code type of the type of currency.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Resort of the transaction.
          maxLength: 20
          minLength: 0
          type: string
        nights:
          description: Total nights.
          type: integer
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        stay:
          description: Total stay.
          type: integer
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        transactionDate:
          description: Membership Transaction Date.
          format: date
          type: string
        transactionType:
          description: Membership Transaction Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTransactionRateType:
      description: Information related to a membership transaction rate.
      properties:
        centralRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        currency:
          description: Indicates the Property currency code.
          type: string
        fromDate:
          description: Indicates start date of the reservation.
          format: date
          type: string
        marketCode:
          description: Indicates the Market code linked to rate code.
          maxLength: 20
          minLength: 0
          type: string
        pMSRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        rateCode:
          description: Indicates the Rate code used in the reservation.
          maxLength: 20
          minLength: 0
          type: string
        toDate:
          description: Indicates end date of the reservation.
          format: date
          type: string
      type: object
    membershipTransactionRatesType:
      description: Summary of rate details of current transaction associated with
        the stay.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        rate:
          description: Details of rate for the current points transaction.
          items:
            $ref: '#/components/schemas/membershipTransactionRateType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    membershipTransactionRevenueType:
      description: Information related to a membership transactions Revenue.
      properties:
        centralRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        date:
          description: Indicates the Date when the revenue was recognized.
          format: date
          type: string
        pMSRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        qualified:
          description: Indicates if the stay is qualified for points calculation.
          type: boolean
        revenueType:
          description: Indicates the Revenue type associated to Revenue.
          type: string
      type: object
    membershipTransactionRevenuesType:
      description: Summary of stay details for current transaction.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        revenue:
          description: Details on stay details for current point transaction.
          items:
            $ref: '#/components/schemas/membershipTransactionRevenueType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    membershipTransactionSummaryType:
      description: Details regarding a transaction of a profile membership.
      properties:
        awardPoints:
          description: Award Points.
          type: integer
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        pointsCalculated:
          description: Flag to indicate if points are calculated.
          type: boolean
        tierPoints:
          $ref: '#/components/schemas/membershipTierPointsType'
        transactionInfo:
          $ref: '#/components/schemas/membershipTransactionInfoType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        userName:
          description: User who inserted or updated the record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    membershipTransactionTierPointsType:
      description: Details associated with tier points.
      properties:
        baseNights:
          description: Total number of base nights tier points for a membership points
            transaction.
          type: integer
        baseRevenue:
          description: Total number of base revenue tier points for a membership points
            transaction.
          type: integer
        baseStay:
          description: Total number of base stay tier points for a membership points
            transaction.
          type: integer
        bonusNights:
          description: The total number of bonus nights tier points.
          type: integer
        bonusRevenue:
          description: The total number of bonus revenue tier points.
          type: integer
        bonusStay:
          description: The total number of bonus stay tier points.
          type: integer
      type: object
    membershipTransactionType:
      description: Detailed transaction information related to a membership.
      properties:
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        membershipTransactionDetails:
          $ref: '#/components/schemas/membershipTransactionDetailsType'
      type: object
    membershipTransactionsSummary:
      description: Response object for fetching member point totals information.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipDetails:
          $ref: '#/components/schemas/membershipDetailsType'
        pointsSummary:
          $ref: '#/components/schemas/memberPointsSummaryType'
        recentTransactionsSummary:
          $ref: '#/components/schemas/memberTransactionRecentSummaryType'
        transactionsSummary:
          $ref: '#/components/schemas/memberTransactionSummaryType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mergedProfileType:
      description: Provides information for merged profile.
      properties:
        profile:
          $ref: '#/components/schemas/profileType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    mergedProfilesSnapshotDetails:
      description: Response object for fetching snapshot of merge profiles result.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        mergedProfileSnapshot:
          $ref: '#/components/schemas/mergedProfileType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mergedStageProfileSnapshot:
      description: Response object to fetch merge profile based on stage and opera
        profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        mergeStageProfile:
          $ref: '#/components/schemas/stagedProfileType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    negotiatedInfoType:
      description: This provides information for a profile negotiated rate.
      properties:
        comissionCode:
          description: Informational purposes only in numeric format.
          maxLength: 20
          minLength: 0
          type: string
        corporateAgreementId:
          description: The master identifier for multiple offices/locations under
            the same company profile. This is optional
          maxLength: 80
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        inactive:
          description: Negotiated Rate is inactive or not
          type: boolean
        order:
          description: The sell order.
          type: integer
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    negotiatedType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    otherAvailabilityType:
      description: Information related to Other Award.
      properties:
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        awardValue:
          description: "The actual value of the award, in the amount of currency."
          type: number
        longDescription:
          description: Detail description of the award.
          maxLength: 2000
          minLength: 0
          type: string
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        sellBeginDate:
          description: Beginning date of the award.
          format: date
          type: string
        sellEndDate:
          description: End date that the award will be available.
          format: date
          type: string
        shortDescription:
          description: Descriptive name of the award.
          maxLength: 80
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
      type: object
    overrideForecastTypeType:
      description: Defines values for OverrideForecastType.
      enum:
      - Default
      - Override
      - DoNotOverride
      type: string
    ownerType:
      description: Generic type for information about an owner.
      properties:
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        name:
          $ref: '#/components/schemas/personNameType'
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    ownersType:
      description: Generic type for a list of owners.
      items:
        $ref: '#/components/schemas/ownerType'
      maxItems: 4000
      type: array
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    payeeInfoType:
      description: Payee information.
      properties:
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        salutation:
          description: Salutation of the profile
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    pointsRejectionReasonType:
      description: Information related to a Points Rejection Reason summary.
      properties:
        code:
          description: Indicates rule code for membership rule.
          maxLength: 20
          minLength: 0
          type: string
        rejectionReason:
          description: Indicates the reason the points were not awarded (e.g. Membership
            level requirements not met).
          maxLength: 200
          minLength: 0
          type: string
        rule:
          description: Indicates membership rule.
          type: string
      type: object
    pointsRejectionReasons:
      description: Response object for fetching member transactions points rejection
        reasons information.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        pointsRejectionReason:
          $ref: '#/components/schemas/pointsRejectionReasonsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    pointsRejectionReasonsType:
      description: Summary of reason points were not awarded for a given points transaction.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        pointsRejectionReason:
          description: Details on rule and reason the points were not awarded for
            a given point transaction.
          items:
            $ref: '#/components/schemas/pointsRejectionReasonType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    preference:
      description: "Response object for fetch preference. This object contains collection\
        \ of preferences,Success,Warnings and Errors related to this operation."
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        preferenceCollections:
          description: Detailed information of preferences related to the profile
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    preferenceType:
      description: Guest Preference details for the profile.
      properties:
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceCode:
          maxLength: 20
          minLength: 0
          type: string
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    preferenceTypeType:
      description: Preference details for the profile.
      properties:
        availableQuantity:
          description: Available quantity of preferences (maximum quantity - Existing
            preferences)per preference group.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        maxQuantity:
          description: Maximum quantity of preferences allowed per preference group.
          type: integer
        maxResortUsedQuantity:
          description: Maximum quantity of preferences used by any resort per preference
            group.
          type: integer
        preference:
          description: Collection of Preferences for the profile.
          items:
            $ref: '#/components/schemas/preferenceType'
          maxItems: 4000
          type: array
        preferenceType:
          description: Preference group code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceTypeDescription:
          description: Preference group description.
          type: string
        reservationPreference:
          description: Whether this preference is reservation preference or not.
          type: boolean
        sequence:
          description: Preference Sequence.
          type: string
      type: object
    primaryProfileInfoType:
      description: Contains basic information of profile.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileName:
          description: Name of the account.
          maxLength: 40
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    privacyInfoType:
      description: Defines Privacy related information for the profile.
      properties:
        allowEmail:
          description: Indicates if the profile wishes to allow Email.
          type: boolean
        allowPhone:
          description: Indicates if the profile wishes to allow phone calls.
          type: boolean
        allowSMS:
          description: Indicates if the profile wishes to allow SMS.
          type: boolean
        autoEnrollLoyaltyProgram:
          description: Indicates if the profile wishes to be automatically enrolled
            in the property's loyalty program.
          type: boolean
        infoFromThirdParty:
          description: Indicates if the profile is ok getting info from third parties.
          type: boolean
        lastPrivacyPromptDate:
          description: Indicate the last privacy prompt date of the guest.
          format: date
          type: string
        marketResearchParticipation:
          description: Indicates if the profile participates in market research.
          type: boolean
        optInAutoEnrollmentMember:
          description: Indicates if the profile wishes to opt in for Auto Enrolment
            Member.
          type: boolean
        optInEmail:
          description: Indicates if the profile wishes to opt in for Email.
          type: boolean
        optInMailingList:
          description: Indicates if the profile wishes to opt in for Mailing List.
          type: boolean
        optInMarketResearch:
          description: Indicates if the profile wishes to opt in for Market Research.
          type: boolean
        optInPhone:
          description: Indicates if the profile wishes to opt in for Phone.
          type: boolean
        optInSms:
          description: Indicates if the profile wishes to opt in for SMS.
          type: boolean
        optInThirdParty:
          description: Indicates if the profile wishes to opt in for Third Party.
          type: boolean
      type: object
    productAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        awardValidFrom:
          description: The valid time period from when the award can be issued.
          format: date
          type: string
        awardValidTo:
          description: The valid time to an issued award.
          format: date
          type: string
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        packageCode:
          description: Package/Product code for the award .
          maxLength: 20
          minLength: 0
          type: string
        packageDescription:
          description: Description of the product.
          maxLength: 20
          minLength: 0
          type: string
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
      type: object
    profile:
      description: Object for creation of profiles. This object contains profile details
        with unique identifiers for each profile.
      properties:
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileAllowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileAccessType:
      properties:
        chainCode:
          description: Indicates the Chain code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        croCode:
          description: Indicates the CRO code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Indicates the Hotel code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        sharedLevel:
          $ref: '#/components/schemas/profileSharedLevelType'
      type: object
    profileAccounts:
      description: Response of profile accounts.
      properties:
        accounts:
          description: Information regarding the AR Account.
          items:
            $ref: '#/components/schemas/aRAccountType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileActivityLog:
      description: "Response object for fetching profile activity log. This object\
        \ contains collection of user activity log for the profile,Success,Warnings\
        \ and Errors related to this operation"
      properties:
        activityLog:
          $ref: '#/components/schemas/activityLogListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileAdditionalInfoType:
      properties:
        businessPosition:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
        masterAccount:
          description: Indicates if the profile is a Master Account for one or more
            Subsidiary Accounts.
          type: boolean
        primaryOwnerCode:
          description: Primary Owner of the profile
          maxLength: 20
          minLength: 0
          type: string
        subsidiaryAccount:
          description: Indicates if the profile is a Subsidiary Account of a Master/Parent
            Account.
          type: boolean
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileAllowedActionType:
      description: Flag indicating whether Profile is Enrolled to Primary Membership
        Program.
      enum:
      - NameChange
      - TaxIDChange
      - EnrollToPrimaryMembership
      type: string
    profileAllowedActionsType:
      description: Allowed actions for profile operations.
      items:
        $ref: '#/components/schemas/profileAllowedActionType'
      maxItems: 2
      type: array
    profileAttachments:
      description: Response object with the details of the attachments of a profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileAttachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCashieringDetailType:
      description: The type contains routing instructions for the profile.
      properties:
        eCommerceId:
          $ref: '#/components/schemas/uniqueID_Type'
        fiscalGuestType:
          description: Guest type code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
        routingInstructions:
          $ref: '#/components/schemas/profileRoutingInstructionsType'
        taxType:
          description: Tax type code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileCashieringDetails:
      description: Request object for changing the profile cashiering details.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileCashieringDetailList:
          description: Cashiering details for the profile.
          items:
            $ref: '#/components/schemas/profileCashieringDetailType'
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCashieringDetailsInfo:
      description: Response object containing profile routing instructions.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileCashieringDetailList:
          description: Cashiering details for the profile.
          items:
            $ref: '#/components/schemas/profileCashieringDetailType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCashieringType:
      description: Contains cashiering related details for the profile
      properties:
        arNoCentral:
          description: Account Receivables Central Number.
          maxLength: 20
          minLength: 0
          type: string
        autoFolioSettlementType:
          description: Contains the auto folio settlement type for the profile.
          maxLength: 40
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        directBillingList:
          description: Contains the direct billing related information for the profile.
          items:
            $ref: '#/components/schemas/directBillingType'
          maxItems: 4000
          type: array
        paymentDueDays:
          description: "Ability to define on the account, the number of days after\
            \ which the invoice should be paid."
          type: integer
        referenceCurrency:
          description: Reference Currency.
          maxLength: 20
          minLength: 0
          type: string
        taxPercent1:
          description: Tax1 Percentage for Collecting Agent.
          type: integer
        taxPercent2:
          description: Tax2 Percentage for Collecting Agent.
          type: integer
        taxPercent3:
          description: Tax3 Percentage for Collecting Agent.
          type: integer
        taxPercent4:
          description: Tax4 Percentage for Collecting Agent.
          type: integer
        taxPercent5:
          description: Tax5 Percentage for Collecting Agent.
          type: integer
        vATOffsetYN:
          description: VAT Offset Flag.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    profileCommissionAccount:
      description: Request object for creating profile commission detail.
      properties:
        criteria:
          $ref: '#/components/schemas/profileCommissionAccountCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountCopy:
      description: Request object for copying transaction groups configuration.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileCommissionAccountsInfo:
          $ref: '#/components/schemas/copyProfileCommissionInfoType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountCriteriaType:
      description: Contains base info to determine profile commission bank account
        and code.
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
        hotelId:
          description: Hotel code from which the profile bank account and code belongs
            to
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        validatePending:
          description: "Used in CRUD operations. When set to true, proceed validating\
            \ pending commissions"
          type: boolean
      type: object
    profileCommissionAccountInfo:
      description: Response object for fetching profile commission detail.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileCommissionAccountInfoList:
          description: Profile commission info which contains bank account and commission
            code details.
          items:
            $ref: '#/components/schemas/profileCommissionAccountInfoType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileCommissionAccountInfoListType:
      description: Profile commission info which contains bank account and commission
        code details.
      items:
        $ref: '#/components/schemas/profileCommissionAccountInfoType'
      maxItems: 4000
      type: array
    profileCommissionAccountInfoType:
      description: Profile commission info which contains bank account and commission
        code details
      properties:
        bankAccount:
          $ref: '#/components/schemas/bankAccountType'
        commissionCode:
          $ref: '#/components/schemas/codeDescriptionType'
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    profileCommissionType:
      description: This is the preconfigured routing instruction type.
      properties:
        bankAccount:
          description: Bank account used for the commission for a profile.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: commission Code for a profile.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        hotelId:
          description: Hotel Code for the commission being used for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethods'
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    profileDetails:
      description: Response object for fetching multiple detailed profiles by unique
        identifiers..
      properties:
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          maxItems: 4000
          type: array
        profiles:
          $ref: '#/components/schemas/profilesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileEnrollmentType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/companyProfileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/companyType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        customer:
          $ref: '#/components/schemas/customerType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        earningPreferences:
          $ref: '#/components/schemas/earningPreferencesType'
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/profileEnrollmentType_emails'
        employeeId:
          description: EmployeeID of the user who is enrolling the Guest.
          maxLength: 20
          minLength: 0
          type: string
        employer:
          maxLength: 36
          minLength: 0
          type: string
        enrollmentCode:
          $ref: '#/components/schemas/codeDescriptionType'
        enrollmentPaymentDetails:
          $ref: '#/components/schemas/enrollmentPaymentDetailsType'
        enrollmentType:
          $ref: '#/components/schemas/enrollmentTypeType'
        externalDatabaseID:
          description: Enrollment details will be fetched from this External database.
          maxLength: 20
          minLength: 0
          type: string
        fiscalGuestType:
          description: Fiscal Guest Type is used for Fiscal Folio funcionality
          maxLength: 20
          minLength: 0
          type: string
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        hotelId:
          description: "Hotel Code, It is used to filter hotel specific children to\
            \ this specific hotel code."
          maxLength: 20
          minLength: 0
          type: string
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        mailingPreferences:
          $ref: '#/components/schemas/mailingPreferencesType'
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        membershipCardRegistrationCode:
          description: Profile's membership card registration code.
          maxLength: 40
          minLength: 0
          type: string
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        preferenceCollection:
          $ref: '#/components/schemas/profileEnrollmentType_preferenceCollection'
        previousHotelStays:
          description: Detailed information of the hotel stay.
          items:
            $ref: '#/components/schemas/hotelStayType'
          maxItems: 4000
          type: array
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileEnrollmentType_profileDeliveryMethods'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        profileMemberships:
          $ref: '#/components/schemas/profileEnrollmentType_profileMemberships'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileEnrollmentType_relationshipsSummary'
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationInfoList:
          $ref: '#/components/schemas/reservationHistoryFutureInfoType'
        rewardsInfo:
          $ref: '#/components/schemas/rewardsInfoType'
        roomOwnershipsList:
          $ref: '#/components/schemas/profileEnrollmentType_roomOwnershipsList'
        roomPreferences:
          $ref: '#/components/schemas/roomPreferencesType'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephones:
          $ref: '#/components/schemas/profileEnrollmentType_telephones'
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        userId:
          description: UserID/LoginID of the user who is enrolling the Guest.
          maxLength: 200
          minLength: 0
          type: string
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
      type: object
    profileHotelStatisticsbyYearSummaryType:
      description: Contains stay statistics summary information by year
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        netRevenue:
          items:
            $ref: '#/components/schemas/stayStatisticsRevenueType'
          maxItems: 2
          type: array
        stayDetail:
          items:
            $ref: '#/components/schemas/stayDetailSummaryType'
          maxItems: 2
          type: array
        year:
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileInfoType:
      description: Provides information about attached profiles to the block.
      properties:
        city:
          description: City for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: Name for the profile attached to the block.
          maxLength: 200
          minLength: 0
          type: string
        phone:
          description: Phone for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        type:
          description: Defines the type of Linked profiles for a block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileMembershipStatistics:
      description: Response of the WS operation FetchProfileMembershipPoints. It contains
        the summary statistics and/or the details of each of the membership transactions
        and its points.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        membershipStatistics:
          $ref: '#/components/schemas/membershipStatisticsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileMembershipType:
      description: Detailed information of the memberships.
      properties:
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        comment:
          $ref: '#/components/schemas/paragraphType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipType:
          description: Type of membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    profileNameType:
      description: This provides name information for a person.
      properties:
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    profileOwners:
      description: Request object to change profile owners.
      properties:
        criteria:
          $ref: '#/components/schemas/setProfileOwnersCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileOwnersDetail:
      description: Response object to fetch the owners of a profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileOwnersList:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileRelationship:
      description: Request object for creating profile relationship.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        relationship:
          $ref: '#/components/schemas/relationshipCriteriaType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileRelationshipToBeChanged:
      description: Request object for changing profile relationship.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        relationship:
          $ref: '#/components/schemas/changeRelationshipCriteriaType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileRelationships:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        relationships:
          $ref: '#/components/schemas/relationshipsSummary'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileRestrictions:
      properties:
        reason:
          description: Restriction reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Description of restriction reason.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
      type: object
    profileRoutingInstructionsType:
      description: The type contains routing instructions for the profile.
      properties:
        autoPopulateRouting:
          description: A flag which determines whether the instructions has to be
            automatically populated for this profile or not.
          type: boolean
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    profileSharedLevelType:
      description: Simple types for Shared level.
      enum:
      - Global
      - Property
      - Cro
      type: string
    profileStatistics:
      description: "Response object for fetching profile stay/reservation/revenue\
        \ statistics. This object contains collection of summary or detail,Success,Warnings\
        \ and Errors related to this operation."
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileStatistic:
          $ref: '#/components/schemas/profileStatisticsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileStatisticsType:
      description: Contains summary/detail/Revenue statistics information for Profile.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reportType:
          $ref: '#/components/schemas/statisticsReportType'
        revenueStatisticsSummaryList:
          description: List of the detailed and yearly summarized information about
            the profile revenue.
          items:
            $ref: '#/components/schemas/revenueStatisticsSummaryType'
          maxItems: 4000
          type: array
        stayStatisticsDetailList:
          description: Collection of stay statistics detail information
          items:
            $ref: '#/components/schemas/stayStatisticsDetailType'
          maxItems: 4000
          type: array
        stayStatisticsSummaryList:
          $ref: '#/components/schemas/statisticsSummaryListType'
      type: object
    profileStatisticsbyYearSummaryType:
      description: Contains stay statistics summary information by year
      properties:
        netRevenue:
          items:
            $ref: '#/components/schemas/stayStatisticsRevenueType'
          maxItems: 2
          type: array
        stayDetail:
          items:
            $ref: '#/components/schemas/stayDetailSummaryType'
          maxItems: 2
          type: array
        year:
          type: string
      type: object
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileStayDetailsType:
      description: Type provides the stay history and future reservations of specific
        profile.
      properties:
        reservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
      type: object
    profileStayHistory:
      description: Response object for showing stay history and future reservations
        of specific profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileStayDetails:
          $ref: '#/components/schemas/profileStayDetailsType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSubscriptionListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/profileSubscriptionType'
      maxItems: 4000
      type: array
    profileSubscriptionType:
      description: Contains details of the profile subscription. The subscription
        represents the link between the OPERA profile and the external profile within
        a particular external system
      properties:
        distributed:
          description: Indicates if the profile was distributed to the external system.
          type: boolean
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        force:
          description: Indicates if the profile information should be overwritten
            by the external system.
          type: boolean
        inactive:
          description: Indicates whether this subscription is active or inactive.
          type: boolean
        lastDistributionDate:
          description: Timestamp of the most recent distribution of this profile to
            the external system.
          format: date-time
          type: string
        lastExternalUpdateDate:
          description: Timestamp of the most recent update of the subscription information
            by the external system.
          format: date-time
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        profileInfo:
          $ref: '#/components/schemas/profileSubscriptionType_profileInfo'
        subscriptionDate:
          description: Timestamp when the profile was subscribed to.
          format: date-time
          type: string
        systemCode:
          description: Code of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
        systemType:
          description: Type of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileSubscriptionsToSynchronize:
      description: Request object for re-subscribing profile subscriptions.
      properties:
        criteria:
          $ref: '#/components/schemas/synchronizeProfileSubscriptionsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSummaries:
      description: "Response object for fetching profiles. This object contains profile\
        \ primary details,profile summary details,master info list containing code\
        \ and description used as lookup for description."
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        profileSummaries:
          $ref: '#/components/schemas/profileSummariesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileSummariesType:
      description: A complex type containing the collection of Profile objects or
        Unique IDs of Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        profileInfo:
          description: A collection of Profiles or Unique IDs of Profiles.
          items:
            $ref: '#/components/schemas/profileSummaryInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileSummaryInfoType:
      description: Summary information about a profile and the associated Unique IDs.
      properties:
        profile:
          $ref: '#/components/schemas/profileSummaryType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    profileSummaryType:
      description: Type provides the basic information about the profile.
      properties:
        aRAccount:
          $ref: '#/components/schemas/directBillingType'
        additionalInfo:
          $ref: '#/components/schemas/profileAdditionalInfoType'
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        allowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        altName:
          $ref: '#/components/schemas/profileNameType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        commission:
          $ref: '#/components/schemas/codeDescriptionType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        formerName:
          $ref: '#/components/schemas/profileSummaryType_formerName'
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        owners:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        primaryAccountInfo:
          $ref: '#/components/schemas/primaryProfileInfoType'
        primaryCompany:
          description: Primary Company of the profile.
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        profileMembership:
          $ref: '#/components/schemas/profileMembershipType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        protected:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        registeredProperty:
          description: Property this profile is registered with.
          maxLength: 20
          minLength: 0
          type: string
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        subscription:
          description: This element tells If there is an active subscription for this
            external profile .
          type: boolean
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        uRLInfo:
          $ref: '#/components/schemas/uRLInfoType'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
      type: object
    profileTaxInfoType:
      description: Profile information related to tax.
      properties:
        businessId:
          description: Business ID. The maximum length of this element should not
            exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        businessRegistration:
          description: Business Registration Code. The maximum length of this element
            should not exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        tax1No:
          description: The tax id of this profile. Usually issued by a government
            agency. Used by 1099 printing.
          maxLength: 40
          minLength: 0
          type: string
        tax2No:
          description: Tax 2 id of this profile.
          maxLength: 40
          minLength: 0
          type: string
        taxCategory:
          description: Tax Category to be changed.
          maxLength: 20
          minLength: 0
          type: string
        taxOffice:
          description: Tax Office to be changed.
          maxLength: 30
          minLength: 0
          type: string
        taxType:
          description: Tax type to be changed.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileToBeMerged:
      description: Profile Resource will be merged.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileDetails:
          $ref: '#/components/schemas/profileType'
        victimProfileId:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        comments:
          $ref: '#/components/schemas/companyProfileType_comments'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/companyType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        customer:
          $ref: '#/components/schemas/customerType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/companyProfileType_emails'
        fiscalGuestType:
          description: Fiscal Guest Type is used for Fiscal Folio funcionality
          maxLength: 20
          minLength: 0
          type: string
        gdsNegotiatedRates:
          $ref: '#/components/schemas/companyProfileType_gdsNegotiatedRates'
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        keywords:
          $ref: '#/components/schemas/companyProfileType_keywords'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        negotiatedRates:
          $ref: '#/components/schemas/companyProfileType_negotiatedRates'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        preferenceCollection:
          $ref: '#/components/schemas/companyProfileType_preferenceCollection'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileEnrollmentType_profileDeliveryMethods'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        profileIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        profileMemberships:
          $ref: '#/components/schemas/companyProfileType_profileMemberships'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        relationships:
          $ref: '#/components/schemas/companyProfileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileEnrollmentType_relationshipsSummary'
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipsList:
          $ref: '#/components/schemas/profileEnrollmentType_roomOwnershipsList'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        subscriptions:
          description: Details of the OPERA Profile subscription to external system
          items:
            $ref: '#/components/schemas/profileSubscriptionType'
          maxItems: 4000
          type: array
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephones:
          $ref: '#/components/schemas/companyProfileType_telephones'
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        uRLs:
          $ref: '#/components/schemas/companyProfileType_uRLs'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          description: Web User Accounts List.
          items:
            $ref: '#/components/schemas/webUserAccountType'
          maxItems: 4000
          type: array
      type: object
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    profiles:
      description: Unique identifier for a profile.
      items:
        $ref: '#/components/schemas/profileId'
      maxItems: 4000
      type: array
    profilesType:
      description: A collection of Profile objects or Unique IDs of Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        profileInfo:
          description: A collection of Profiles or Unique IDs of Profiles.
          items:
            $ref: '#/components/schemas/profilesType_profileInfo_inner'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
        sentTime:
          description: Time the text was last sent to the user.
          format: date-time
          type: string
      type: object
    rateAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        rateCode:
          description: Rate code associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        rateDescription:
          description: Rate code description associated with the award.
          maxLength: 4000
          minLength: 0
          type: string
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        roomCategory:
          description: Indicates which room category it belongs.
          maxLength: 20
          minLength: 0
          type: string
        roomDescription:
          description: Description of the Room.
          maxLength: 4000
          minLength: 0
          type: string
        roomLabel:
          description: Code for the room type in which the award was issued.
          maxLength: 20
          minLength: 0
          type: string
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award.
          format: date
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
      type: object
    rates:
      description: Response object for fetching Membership Transaction Rates information.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        rate:
          $ref: '#/components/schemas/membershipTransactionRatesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    recentlyAccessedProfileType:
      description: A recently used profile details.
      properties:
        accessDate:
          description: The date the record was accessed.
          format: date
          type: string
        guestFirstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    recentlyAccessedProfiles:
      description: Response with the fetched recently accessed profiles.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profiles:
          description: List of recently accessed profiles.
          items:
            $ref: '#/components/schemas/recentlyAccessedProfileType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    relationshipCriteriaType:
      description: Contains Criteria Information for a profile relationship.
      properties:
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        sourceProfileType:
          $ref: '#/components/schemas/profileTypeType'
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).This needs to be
            passed if the attribute primary is sent as true.
          maxLength: 200
          minLength: 0
          type: string
        targetProfileType:
          $ref: '#/components/schemas/profileTypeType'
        targetRelation:
          description: Indicates the type of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of relationship the related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        masterAccountInfo:
          $ref: '#/components/schemas/masterAccountInfoType'
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        address:
          $ref: '#/components/schemas/addressInfoType'
        changeProfileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/companyType'
        customer:
          $ref: '#/components/schemas/customerType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
      type: object
    relationshipsSummary:
      description: Contains details relationships related to a profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        emails:
          $ref: '#/components/schemas/profileEnrollmentType_emails'
        telephones:
          $ref: '#/components/schemas/profileEnrollmentType_telephones'
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        address:
          $ref: '#/components/schemas/addressSearchType'
        alternateFullName:
          description: Altername full display name
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthDate:
          description: Date of birth
          format: date
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        fullName:
          description: Full display name
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        nationality:
          $ref: '#/components/schemas/countryNameType'
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        vip:
          $ref: '#/components/schemas/vIPType'
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        instructions:
          description: Turndown instructions for the room.
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
      type: object
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateExpired:
          type: boolean
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
      type: object
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationCertificateType:
      description: Certificate is incentive.
      enum:
      - Reward
      - Incentive
      type: string
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountRequired:
          description: Deposit Amount Required.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
      type: object
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        folioWindowNo:
          type: integer
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        futureList:
          $ref: '#/components/schemas/futureListType'
        historyList:
          $ref: '#/components/schemas/historyListType'
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        parentReservationId:
          $ref: '#/components/schemas/reservationId'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
      type: object
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType:
      properties:
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        folioView:
          type: integer
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    revenueBucketListType:
      description: Details about revenue summary.
      properties:
        bucket:
          items:
            $ref: '#/components/schemas/revenueBucketType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketType:
      description: The different revenue buckets of a profile.
      properties:
        code:
          description: Code of revenue type.
          maxLength: 40
          minLength: 0
          type: string
        description:
          description: Description of revenue type.
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Value of revenue.
          type: number
      type: object
    revenueStatisticsDetailListType:
      description: The collection of profile revenue statistics.
      items:
        $ref: '#/components/schemas/revenueStatisticsDetailType'
      maxItems: 4000
      type: array
    revenueStatisticsDetailType:
      description: The different statistics from the revenue of a profile.
      properties:
        centralRevenue:
          description: Central Revenue Type for Stay.
          type: number
        guestName:
          description: Name Of The Guest.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Hotel of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        localRevenue:
          description: Local Revenue Type for Stay.
          type: number
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        revenueBuckets:
          $ref: '#/components/schemas/revenueBucketListType'
        revenueType:
          description: Revenue Type for Stay.
          maxLength: 20
          minLength: 0
          type: string
        stayTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    revenueStatisticsSummaryListType:
      description: List of the detailed and yearly summarized information about the
        profile revenue.
      items:
        $ref: '#/components/schemas/revenueStatisticsSummaryType'
      maxItems: 4000
      type: array
    revenueStatisticsSummaryType:
      description: Summary of the revenue for a year
      properties:
        revenueBucketsSummary:
          $ref: '#/components/schemas/revenueBucketListType'
        revenueDetails:
          description: The collection of profile revenue statistics.
          items:
            $ref: '#/components/schemas/revenueStatisticsDetailType'
          maxItems: 4000
          type: array
        year:
          description: Year of the revenue.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    revenues:
      description: Response object for fetching Membership Transaction Revenue.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenue:
          $ref: '#/components/schemas/membershipTransactionRevenuesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    rewardCertificateType:
      description: Point Saver reward.
      enum:
      - Regular
      - StayAnytime
      - PointSaver
      type: string
    rewardsInfoType:
      description: "Indicates membership base information like CurrentBalance,association\
        \ and Owned card."
      properties:
        association:
          description: Indicates guest association.
          maxLength: 2000
          minLength: 0
          type: string
        currentBalance:
          description: Current membership points.
          type: number
        mVCIOwner:
          description: Indicates if the member is an MVCI owner.
          maxLength: 3
          minLength: 0
          type: string
        meetingPlanner:
          description: Indicates if meeting planner is requested.
          type: boolean
        membershipDate:
          description: Indicates membership date of the guest
          format: date
          type: string
        membershipId:
          description: Indicates membership id of the guest.
          type: number
        membershipLevel:
          description: Indicates membership level of the guest
          maxLength: 20
          minLength: 0
          type: string
        membershipNo:
          description: Indicates membership number of the guest
          maxLength: 50
          minLength: 0
          type: string
        ownsVisaCard:
          description: Indicates if guest owns a visa card.
          type: boolean
      type: object
    roomClassCodeInfoType:
      description: Code of the room class type.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomClassCode:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomOwnershipType:
      description: Define the search criteria for retrieving room ownership records
      properties:
        contractNumber:
          description: Contract number for room owner.
          type: string
        endDate:
          description: End Date of the room ownership record.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        roomCategory:
          description: Room Category of the room ownership record.
          type: string
        roomId:
          description: Room Id of room owner.
          type: string
        roomOwnershipId:
          description: Unique Id for Room Owner record.
          type: integer
        roomType:
          description: Room Type of the room ownership record.
          type: string
        startDate:
          description: Start Date of the room ownership record.
          format: date
          type: string
        status:
          description: Status of the room ownership record.
          type: string
      type: object
    roomPreferencesType:
      description: Indicates the guest's room preferences.
      properties:
        accessible:
          description: Indicates if the member requires accessible rooms.
          type: boolean
        bedType:
          description: Indicates the bed type preference.
          maxLength: 20
          minLength: 0
          type: string
        beverage:
          description: Indicates the beverage preference.
          maxLength: 20
          minLength: 0
          type: string
        floor:
          description: Indicates the floor type preference.
          maxLength: 20
          minLength: 0
          type: string
        interests:
          description: Indicates guest preferred interests.
          maxLength: 2000
          minLength: 0
          type: string
        newspapers:
          description: Indicates the newspaper preference.
          maxLength: 20
          minLength: 0
          type: string
        pillow:
          description: Indicates the pillow type preference.
          maxLength: 20
          minLength: 0
          type: string
        precedence:
          description: "Indicates which room preference takes priority, bed type or\
            \ smoking type."
          maxLength: 20
          minLength: 0
          type: string
        roomAmenities:
          description: Indicates the room amenities requested.
          maxLength: 80
          minLength: 0
          type: string
        smoking:
          description: Indicates the smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        snack:
          description: Indicates the snack preference.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    rulePointsTypeType:
      description: Possible membership points types.
      enum:
      - Base
      - Bonus
      type: string
    salesInfoType:
      description: "Provides sales information about the profiles of type company,\
        \ travel agent, source and contact."
      properties:
        accountSource:
          description: Defines the account source.
          maxLength: 2000
          minLength: 0
          type: string
        accountType:
          description: Defines the account type.
          maxLength: 20
          minLength: 0
          type: string
        actionCode:
          description: Defines the action code.
          maxLength: 4000
          minLength: 0
          type: string
        businessSegments:
          description: Defines the Business segments.
          maxLength: 2000
          minLength: 0
          type: string
        competitionCode:
          description: Defines the competition code.
          maxLength: 4000
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code used to filter the sales information.
          maxLength: 20
          minLength: 0
          type: string
        industryCode:
          description: Defines the industry code.
          maxLength: 2000
          minLength: 0
          type: string
        influence:
          description: Defines the influence for the contact profile.
          maxLength: 2000
          minLength: 0
          type: string
        preferredRoom:
          description: Defines the Preferred Room for profile.
          maxLength: 20
          minLength: 0
          type: string
        priority:
          description: Defines the priority.
          maxLength: 4000
          minLength: 0
          type: string
        roomsPotential:
          description: Defines the rooms potential.
          maxLength: 4000
          minLength: 0
          type: string
        scope:
          description: Defines the scope.
          maxLength: 2000
          minLength: 0
          type: string
        scopeCity:
          description: Defines the scope city.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    setProfileOwnersCriteriaType:
      description: Criteria to update the profile owners.
      properties:
        owners:
          description: Generic type for a list of owners.
          items:
            $ref: '#/components/schemas/ownerType'
          maxItems: 4000
          type: array
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    sourceCodeInfoType:
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedAddressCleansStatus:
      description: Simple type for status of staged address cleansing.
      enum:
      - NotCleansed
      - Cleansed
      - Failure
      type: string
    stagedProfile:
      description: Request object for changing the staged profile.
      properties:
        changeInstructions:
          $ref: '#/components/schemas/stagedProfileChangeInstructionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        stagedProfile:
          $ref: '#/components/schemas/stagedProfileType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileAddressType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cleansStatus:
          $ref: '#/components/schemas/stagedAddressCleansStatus'
        errorDescription:
          description: The error in address information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        postalCodeExtension:
          description: Postal code extension.
          maxLength: 15
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileBillingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in billing instruction information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileChangeInstructionsType:
      description: Information about instructions to change the staged profile.
      properties:
        fullyOverlay:
          description: If true then delete and recreat the staged profile details.
          type: boolean
      type: object
    stagedProfileCharacterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    stagedProfileCharacterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/stagedProfileCharacterUDFType'
      maxItems: 4000
      type: array
    stagedProfileCommentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        count:
          description: Total number of rows returned
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inActiveDate:
          description: Indicates comment inactive date.
          format: date
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lineNo:
          description: The line number of the comment.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the comment information is valid.
          type: boolean
      type: object
    stagedProfileCommentInfosType:
      description: List of Notes for the customer.
      items:
        $ref: '#/components/schemas/stagedProfileCommentInfoType'
      maxItems: 4000
      type: array
    stagedProfileCompanyType:
      properties:
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 40
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        errors:
          description: The error in stage profile.
          items:
            $ref: '#/components/schemas/stagedProfileErrorType'
          maxItems: 4000
          type: array
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stagedProfileCustomerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        alternateLanguage:
          description: ALternate language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        errors:
          description: The error in stage profile.
          items:
            $ref: '#/components/schemas/stagedProfileErrorType'
          maxItems: 4000
          type: array
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stagedProfileDateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        value:
          description: Value of user defined field.
          format: date
          type: string
      type: object
    stagedProfileDateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/stagedProfileDateUDFType'
      maxItems: 4000
      type: array
    stagedProfileDetails:
      description: Response object for the staged profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        stagedProfile:
          $ref: '#/components/schemas/stagedProfileType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedProfileEmailType:
      description: Information on an email for the customer.
      properties:
        defaultConfirmation:
          description: Indicates whether the email is the default confirmation method.
          type: boolean
        email:
          $ref: '#/components/schemas/emailType'
        errorDescription:
          description: The error in email information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileErrorField:
      description: Simple type for stage profile error filed to specify which filed
        in the stage profile has error.
      enum:
      - PrimaryLanguage
      - AlternateLanguag
      - Gender
      - ProfileType
      - Nationality
      - Prefix
      - VIPStatus
      type: string
    stagedProfileErrorType:
      description: Criteria to fetch the staged profile.
      properties:
        errorDescription:
          description: The error description for the staged profile.
          maxLength: 2000
          minLength: 0
          type: string
        field:
          $ref: '#/components/schemas/stagedProfileErrorField'
      type: object
    stagedProfileIdentificationsType:
      description: Information on the identification of the customer.
      properties:
        documentResort:
          description: Hotel code to which the document belongs.
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          description: The error in negotiated rate information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        identification:
          $ref: '#/components/schemas/identificationType'
        inactiveDate:
          description: The date when the record was inactivated.
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileKeywordType:
      properties:
        errorDescription:
          description: The error in keyword information in a staged profile with an
            invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        keywordType:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileMembershipType:
      description: Detailed information of the memberships.
      properties:
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        comment:
          $ref: '#/components/schemas/paragraphType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        deviceCode:
          description: Device encoded string.
          maxLength: 200
          minLength: 0
          type: string
        deviceDisabledDate:
          description: Device disabled date.
          format: date
          type: string
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        enrollmentCode:
          description: Enrollment code.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          description: The error in membership information in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipStatus:
          description: Membership status.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Type of membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        registrationResort:
          description: Registration resort.
          maxLength: 20
          minLength: 0
          type: string
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        updateExistingMembership:
          description: Indicates if existing information for primary membership should
            be overwritten.
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    stagedProfileNegotiatedRateType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        errorDescription:
          description: The error in negotiated rate information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileNumericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in a user defined field in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        tableName:
          description: PMS table name.
          maxLength: 40
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicates whether the UDF information is valid.
          type: boolean
        value:
          description: Value of user defined field.
          type: number
      type: object
    stagedProfileNumericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/stagedProfileNumericUDFType'
      maxItems: 4000
      type: array
    stagedProfilePhoneType:
      description: Information on a telephone number for the customer.
      properties:
        defaultConfirmation:
          description: Indicates whether the phone is the default confirmation method.
          type: boolean
        errorDescription:
          description: The error in telephone information in a staged profile with
            an invalid status.
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        telephone:
          $ref: '#/components/schemas/telephoneType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfilePreferenceType:
      description: Guest Preference details for the profile.
      properties:
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in Preference information in a staged profile with
            an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        preferenceCode:
          maxLength: 20
          minLength: 0
          type: string
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        resortPrefernce:
          description: Prefernce resort.
          maxLength: 20
          minLength: 0
          type: string
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        valid:
          description: Indicated whether the preference information is valid.
          type: boolean
      type: object
    stagedProfileRoutingInstructionType:
      properties:
        billingInstruction:
          $ref: '#/components/schemas/stagedProfileBillingInstructionType'
        transactionInfo:
          $ref: '#/components/schemas/stagedProfileTrxInfoType'
      type: object
    stagedProfileStatus:
      description: Simple type for status of the staged profiles.
      enum:
      - Valid
      - Invalid
      - MatchFound
      - New
      type: string
    stagedProfileSummariesType:
      description: A collection of staged profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        profileInfo:
          description: Basic information about staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileSummaryType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stagedProfileSummaryType:
      description: Basic information about staged profile.
      properties:
        country:
          $ref: '#/components/schemas/countryNameType'
        hotelId:
          description: Hotel code associated with the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        importDate:
          description: The date on which the staged profile has been received.
          format: date
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileName:
          $ref: '#/components/schemas/profileNameType'
        profileType:
          description: Type of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        region:
          description: The region of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        stageStatus:
          $ref: '#/components/schemas/stagedProfileStatus'
      type: object
    stagedProfileTrxInfoType:
      description: Transaction codes info.
      properties:
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        errorDescription:
          description: The error in transaction code information in a staged profile
            with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stagedProfileType:
      description: Detailed information about the staged profile.
      properties:
        addresses:
          description: Collection of detailed information about address for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileAddressType'
          maxItems: 4000
          type: array
        comments:
          description: List of Notes for the customer.
          items:
            $ref: '#/components/schemas/stagedProfileCommentInfoType'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/stagedProfileCompanyType'
        customer:
          $ref: '#/components/schemas/stagedProfileCustomerType'
        emails:
          description: Collection of detailed information about email for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileEmailType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code that the staged profile belongs to.
          maxLength: 20
          minLength: 0
          type: string
        identifications:
          description: Collection of detailed information about identification for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileIdentificationsType'
          maxItems: 4000
          type: array
        importDate:
          description: The date on which the staged profile has been received.
          format: date
          type: string
        keywords:
          description: Collection of detailed information about keyword for the staged
            profile.
          items:
            $ref: '#/components/schemas/stagedProfileKeywordType'
          maxItems: 4000
          type: array
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        memberships:
          description: Collection of detailed information about memberships for the
            staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileMembershipType'
          maxItems: 4000
          type: array
        negotiatedRates:
          description: Collection of detailed information about negotiated rates for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileNegotiatedRateType'
          maxItems: 4000
          type: array
        preferences:
          description: Collection of detailed information about preferences for the
            staged profile.
          items:
            $ref: '#/components/schemas/stagedProfilePreferenceType'
          maxItems: 4000
          type: array
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileType:
          description: Type of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructions:
          description: Collection of routing instructions for the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileRoutingInstructionType'
          maxItems: 4000
          type: array
        stageStatus:
          description: The status of the staged profile.
          maxLength: 20
          minLength: 0
          type: string
        telephones:
          description: Collection of detailed information about telephone/fax for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfilePhoneType'
          maxItems: 4000
          type: array
        uRLs:
          description: Collection of detailed information about web url/address for
            the staged profile.
          items:
            $ref: '#/components/schemas/stagedProfileURLType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/stagedProfileUserDefinedFieldsType'
      type: object
    stagedProfileURLType:
      description: Web site address.
      properties:
        defaultConfirmation:
          description: Indicates whether the phone is the default confirmation method.
          type: boolean
        errorDescription:
          description: The error in URL in a staged profile with an invalid status
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        inactiveDate:
          description: Inactivation date of the record.
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    stagedProfileUserDefinedFieldsType:
      description: Used to hold user defined fields(UDFs) for staged profile.
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/stagedProfileCharacterUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/stagedProfileDateUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/stagedProfileNumericUDFType'
          maxItems: 4000
          type: array
      type: object
    stagedProfiles:
      description: Response object for the staged profiles.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        stagedProfiles:
          $ref: '#/components/schemas/stagedProfileSummariesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    statisticsReportType:
      description: Indicate to get revenue of Stay Records.
      enum:
      - Reservation
      - Revenue
      - ProfileStayRecords
      - DetailStayRecordsRevenue
      type: string
    statisticsRevenueTypeType:
      description: Contains Revenue information
      properties:
        revenueAmount:
          type: number
        revenueLabel:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    statisticsSummaryListType:
      description: Collection of Profile statistics summary information
      properties:
        profileHotelStatisticsbyYearSummary:
          items:
            $ref: '#/components/schemas/profileHotelStatisticsbyYearSummaryType'
          maxItems: 4000
          type: array
        profileStatisticsbyYearSummary:
          items:
            $ref: '#/components/schemas/profileStatisticsbyYearSummaryType'
          maxItems: 4000
          type: array
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stayDetailSummaryType:
      description: "Contains stay related information such as reservation nights,room\
        \ nights,arrival rooms,cancel rooms,etc."
      properties:
        arrivalRooms:
          type: integer
        cancelRooms:
          type: integer
        dayUseRooms:
          type: integer
        noShowRooms:
          type: integer
        roomNights:
          type: integer
        stayReservation:
          $ref: '#/components/schemas/stayReservationType'
        totalBooked:
          description: Total Booked Stays/Reservations for Profile
          type: integer
        totalStays:
          description: Total Stayed Reservations for Profile
          type: integer
      type: object
    stayDetailType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        allotmentCode:
          description: Allotment Code for stay record.
          maxLength: 20
          minLength: 0
          type: string
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        bookedArrivalDate:
          description: Booked arrival date of the stay record.
          format: date
          type: string
        bookedDepartureDate:
          description: Booked departure date of the stay record.
          format: date
          type: string
        bookedRoomType:
          description: Indicate the category of room originally booked.
          maxLength: 20
          minLength: 0
          type: string
        bookingDate:
          description: Booking date of the stay record.
          format: date
          type: string
        cancellationDate:
          description: Cancellation date of the stay record.
          format: date
          type: string
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        cancelledRoomNights:
          description: Number of cancelled room nights.
          type: integer
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        channelCode:
          description: Indicate channel for stay.
          maxLength: 20
          minLength: 0
          type: string
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        complimentaray:
          description: Indicates the profile stay record is complimentaray.
          type: boolean
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        exchangeRate:
          description: Exchange Rate.
          type: number
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        noShowRoomNights:
          description: Number of no show room nights.
          type: integer
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        primarySharer:
          description: Indicates whether the guest was the primary sharer or not.
          type: boolean
        promotionCode:
          description: Promotion code associated with the stay.
          maxLength: 20
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationSourceCode:
          description: Indicates the profile stay record reservation source code.
          maxLength: 20
          minLength: 0
          type: string
        reservationSourceType:
          description: Indicates the profile stay record reservation source Type.
          maxLength: 50
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        shareNumber:
          description: Indicates the share Number for Stay if reservation was a share.
          maxLength: 20
          minLength: 0
          type: string
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        stayRecordId:
          $ref: '#/components/schemas/uniqueID_Type'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        travelAgentReferenceId:
          description: Travel Agent reference number for stay record.
          maxLength: 60
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        arrivalDate:
          format: date
          type: string
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        departureDate:
          format: date
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        numberOfRooms:
          description: Room Id
          type: integer
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        points:
          $ref: '#/components/schemas/pointsType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        parentReservationId:
          $ref: '#/components/schemas/reservationId'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
      type: object
    stayReservationType:
      description: Enumeration for stay types.
      enum:
      - Transient
      - Block
      type: string
    stayStatisticsDetailListType:
      description: Collection of stay statistics detail information
      items:
        $ref: '#/components/schemas/stayStatisticsDetailType'
      maxItems: 4000
      type: array
    stayStatisticsDetailType:
      description: Contains stay statistics detail information
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        revenue:
          $ref: '#/components/schemas/stayStatisticsRevenueType'
        stayDetail:
          $ref: '#/components/schemas/stayDetailType'
        year:
          type: string
      type: object
    stayStatisticsRevenueType:
      description: Contains different list of stay statistics revenue information
      properties:
        averageDailyRate:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        currency:
          type: string
        extraRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        fBRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        nonRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        roomRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
        stayReservation:
          $ref: '#/components/schemas/stayReservationType'
        totalRevenue:
          $ref: '#/components/schemas/statisticsRevenueTypeType'
      type: object
    stringLength100:
      description: "Used for Character Strings, length 0 to 100."
      maxLength: 100
      minLength: 0
      type: string
    stringLength200:
      description: "Used for Character Strings, length 0 to 200."
      maxLength: 200
      minLength: 0
      type: string
    stringLength40:
      description: "Used for Character Strings, length 0 to 40."
      maxLength: 40
      minLength: 0
      type: string
    stringLength80:
      description: "Used for Character Strings, length 0 to 80."
      maxLength: 80
      minLength: 0
      type: string
    successType:
      description: Returning an empty element of this type indicates the successful
        processing of an message. This is used in conjunction with the Warning Type
        to report any warnings or business errors.
      type: object
    surnameType:
      description: "Family name, last name."
      maxLength: 80
      minLength: 0
      type: string
    suspendedAddresses:
      description: Response object for fetching unique company profile.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        suspendedAddressesInfo:
          $ref: '#/components/schemas/suspendedAddressesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    suspendedAddressesInfoType:
      properties:
        addressId:
          description: Corporate id of the profile.
          type: integer
        clientID:
          $ref: '#/components/schemas/uniqueID_Type'
        country:
          $ref: '#/components/schemas/countryNameType'
        firstName:
          description: First Name of the Profile against which the Suspended Addresses
            are fetched.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Resort of the Profile
          maxLength: 20
          minLength: 0
          type: string
        matchCode:
          description: Match Code of the Address Validation Performed from the batch
            processing
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: Last Name of the Profile against which the Suspended Addresses
            are fetched.
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileType:
          description: Profile Type of the Profile against which the Suspended Addresses
            are fetched..
          maxLength: 20
          minLength: 0
          type: string
        validateDate:
          description: Validate Date.
          format: date
          type: string
      type: object
    suspendedAddressesType:
      description: "List of suspended addresses returned, based on the entered seach\
        \ criteria."
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        suspendedAddressesInfo:
          description: A collection of suspended Addresses.
          items:
            $ref: '#/components/schemas/suspendedAddressesInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    suspendedProfileErrorSummaryInfo:
      description: Response object for fetch suspended profile Errors summary. This
        object contains collection of profile erros and count of how many profiles
        encountered this error.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        suspendedProfileErrorSummary:
          description: Collection of profile error summary.
          items:
            $ref: '#/components/schemas/suspendedProfileErrorSummaryType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    suspendedProfileErrorSummaryType:
      description: Type which represents suspended profile errors information.
      properties:
        errorCount:
          description: Count of how many profiles encountered this error.
          type: number
        errorDescription:
          description: Represents Error summary of the suspended profiles.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    suspendedProfileErrorsSummaryType:
      description: Collection of profile error summary.
      items:
        $ref: '#/components/schemas/suspendedProfileErrorSummaryType'
      maxItems: 4000
      type: array
    synchronizeProfileSubscriptionsCriteriaType:
      description: Criteria for searching profile subscriptions.
      properties:
        databaseIds:
          description: Code identifying the external database record which is linked
            to external systems.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        telephone:
          $ref: '#/components/schemas/telephoneType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
      type: object
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    traceResolveType:
      properties:
        resolvedBy:
          description: User that resolved the trace
          type: string
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        enteredBy:
          description: User that entered this trace.
          type: string
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
      type: object
    traceType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        traceText:
          description: The information this trace contains.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    transactionSummaryAttributeType:
      description: Attributes of Summary transactions.
      properties:
        customLabel:
          description: Attribute Label
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Attribute Value
          maxLength: 80
          minLength: 0
          type: string
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    uRLInfoType:
      description: Web site address.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    upgradeAvailabilityType:
      description: "Member Award availability details based on chosen award types\
        \ as Product,Rate,Upgrade,FT Payment and Other."
      properties:
        awardNumber:
          description: "An identifying number of the award, assigned by the system\
            \ when the award was issued."
          type: number
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        cancelPenaltyCharge:
          description: The cancel penalty charge.
          type: number
        cancelPenaltyDays:
          description: Number of days before arrival when a reservation may be cancelled
            without an award points penalty.
          type: number
        cancelPenaltyPoints:
          description: The award points that will be forfeited if the cancel penalty
            charge is applied.
          type: number
        cancelPenaltyType:
          description: The penalty charge is either a percentage or a flat number
            of points.
          maxLength: 20
          minLength: 0
          type: string
        fromRoom:
          description: Indicates room type code for the room prior to the upgrade.
          maxLength: 20
          minLength: 0
          type: string
        fromRoomCategory:
          description: Indicates room type code for the room prior to the upgrade.
          maxLength: 4000
          minLength: 0
          type: string
        fromRoomDescription:
          description: Indicates room type Description for the room prior to the upgrade.
          maxLength: 4000
          minLength: 0
          type: string
        hotelId:
          description: HotelCode where the award will be consumed.
          maxLength: 20
          minLength: 0
          type: string
        pointsRequired:
          description: The number of points that must be redeemed for this award.
          type: number
        rawIssueKey:
          description: Issue key in format of Raw data.
          maxLength: 4000
          minLength: 0
          type: string
        stayDate:
          description: The date of the reservation associated with the award. There
            may be more than one date (multiple nights) associated with award.
          format: date
          type: string
        toRoom:
          description: Indicates room type code of the upgrade room.
          maxLength: 20
          minLength: 0
          type: string
        toRoomCategory:
          description: Indicates room type code of the upgrade room.
          maxLength: 4000
          minLength: 0
          type: string
        toRoomDescription:
          description: Indicates room type Description of the upgrade room.
          maxLength: 4000
          minLength: 0
          type: string
        totalAvailablePoints:
          description: Total award points available for redemption.
          type: number
      type: object
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/characterUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/dateUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/numericUDFType'
          maxItems: 4000
          type: array
      type: object
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    validatedForgetProfiles:
      description: Response object for validating profiles for forgetting.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        validateForgetProfilesResults:
          description: Result of processing/validation for forgetting a profile.
          items:
            $ref: '#/components/schemas/forgetProfileResultType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    verifiedECertificate:
      description: Response object to Verify E-Certificate and will return the profile
        information.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        profileId:
          $ref: '#/components/schemas/profileId'
        profileName:
          $ref: '#/components/schemas/profileNameType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    webUserAccountType:
      description: Web User Account of the guest.
      properties:
        autoGeneratePassword:
          description: A flag which determines if the password is auto generated.
          type: boolean
        comments:
          description: Comments.
          maxLength: 4000
          minLength: 0
          type: string
        domainCode:
          description: Domain code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/webUserHistoryType'
        inactive:
          description: Boolean flag that indicates whether the web account is inactive
            or not.
          type: boolean
        locked:
          description: Boolean flag that indicates whether the web account is locked
            or not.
          type: boolean
        loginName:
          description: Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newLoginName:
          description: New Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newPassword:
          description: Login Password.
          maxLength: 2000
          minLength: 0
          type: string
        securityAnswer:
          description: Answer to the Security Question.
          maxLength: 4000
          minLength: 0
          type: string
        securityQuestion:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    webUserAccountsType:
      description: Web User Accounts List.
      items:
        $ref: '#/components/schemas/webUserAccountType'
      maxItems: 4000
      type: array
    webUserHistoryType:
      description: "Creation date time, Creator Id, last modification date time and\
        \ last Modifier Id."
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        inactiveDate:
          description: Inactive date.
          format: date
          type: string
        lastLogin:
          description: Last login date.
          format: date
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastPasswordChange:
          description: Last Password change date.
          format: date
          type: string
      type: object
    postProfile_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            method: POST
            operationId: postGuestProfile
            rel: guestProfile
            templated: false
          profileDetails:
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  barCode: ""
                  cityExtension: a
                  cityName: Redwood Shores
                  country:
                    code: US
                    value: USA
                  county: a
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  language: E
                  lastModifierId: "12000"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  postalCode: "94065"
                  primaryInd: false
                  state: CA
                  type: Office
                  typeDescription: Office address use
            comments:
              commentInfo:
              - comment:
                  commentTitle: Discount
                  confidential: false
                  internal: false
                  overrideInternal: false
                  text:
                    language: E
                    value: Please provide discount.
                  type: GEN
                  typeDescription: Comments for discount.
            company:
              blacklist: false
              businessTitle: Developer
              commissionCode: ""
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              corporateIdType: ""
              creditRating: ""
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              vipDescription: Important
              vipStatus: "006"
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            customer:
              citizenCountry:
                code: USA
                value: United States of America
              identifications:
                identificationInfo:
                - identification:
                    expirationDate: 2019-11-29
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    idType: PASSPORT
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    primaryInd: true
                    registeredProperty: HOTEL1
              language: E
              nationality: US
              nationalityDescription: USA
              personName:
              - envelopeGreeting: Hello Mr. Smith
                givenName: William
                language: E
                middleName: D
                nameSuffix: "10"
                nameTitle: Mr.....
                nameType: PRIMARY
                salutation: Mr. Smith
                surname: Smith
              privateProfile: false
              vipDescription: "VVIP: Important person (Corporate office only)"
              vipStatus: "006"
            emails:
              emailInfo:
              - email:
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  emailAddress: eg@example.com
                  emailFormat: EMAIL
                  lastModifierId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  orderSequence: -100000000
                  primaryInd: false
                  type: EMAIL
                  typeDescription: Email Address
            lastModifierId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            markForHistory: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            registeredProperty: HOTEL1
            statusCode: ACTIVE
            telephones:
              telephoneInfo:
              - telephone:
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  extension: x25
                  lastModifierId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  orderSequence: -100000000
                  phoneNumber: +1 415 555 0100
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  primaryInd: false
            territory: North America
          profileIdList:
          - id: "3149001"
            idContext: OPERA
            type: Profile
        type: object
    putProfile_request:
      allOf:
      - $ref: '#/components/schemas/profile'
      - example:
          links:
          - href: http://hotelCompany.example.com/operarest/opera/crm/v2/guests
            method: POST
            operationId: postGuestProfile
            rel: guestProfile
            templated: false
          profileDetails:
            addresses:
              addressInfo:
              - address:
                  addressLine:
                  - 500 Oracle Parkway
                  barCode: ""
                  cityExtension: a
                  cityName: Redwood Shores
                  country:
                    code: US
                    value: USA
                  county: a
                  createDateTime: 2019-09-18T21:09:36.498Z
                  creatorId: "12883"
                  language: E
                  lastModifierId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.498Z
                  postalCode: "94065"
                  primaryInd: false
                  state: CA
                  type: Office
                  typeDescription: This is office address.
            comments:
              commentInfo:
              - comment:
                  commentTitle: Discount
                  confidential: false
                  internal: false
                  overrideInternal: false
                  text:
                    language: E
                    value: Please add comments here.
                  type: GEN
                  typeDescription: Comments for discount.
            company:
              blacklist: false
              businessTitle: Developer
              commissionCode: ""
              companyName: Oracle America Inc
              companyName2: Oracle Group Companies
              corporateIdType: ""
              creditRating: ""
              currencyCode: USD
              currencySymbol: $
              decimalPlaces: -100000000
              language: E
              nationality: USA
              nationalityDescription: United States
              vipDescription: Important
              vipStatus: "006"
            createDateTime: 2019-09-17 08:10:28.0
            creatorId: "12883"
            customer:
              citizenCountry:
                code: USA
                value: United States of America
              identifications:
                identificationInfo:
                - identification:
                    expirationDate: 2019-11-29
                    idNumber: C03005988
                    idNumberMasked: C030059XX
                    idType: PASSPORT
                    issuedCountry: USA
                    issuedDate: 2009-11-30
                    issuedPlace: New York
                    primaryInd: true
                    registeredProperty: HOTEL1
              language: E
              nationality: US
              nationalityDescription: USA
              personName:
              - envelopeGreeting: Hello Mr. Smith
                givenName: William
                language: E
                middleName: D
                nameSuffix: "10"
                nameTitle: Mr.....
                nameType: PRIMARY
                salutation: Mr. Smith
                surname: Smith
              privateProfile: false
              vipDescription: "VVIP: VV important person"
              vipStatus: "006"
            emails:
              emailInfo:
              - email:
                  createDateTime: 2019-09-17T18:18:32.415Z
                  creatorId: "12883"
                  emailAddress: eg@example.com
                  emailFormat: EMAIL
                  lastModifierId: "12883"
                  lastModifyDateTime: 2019-09-17T18:18:32.416Z
                  orderSequence: -100000000
                  primaryInd: false
                  type: EMAIL
                  typeDescription: Email Address
            lastModifierId: "12883"
            lastModifyDateTime: 2019-09-17 08:23:05.0
            markForHistory: false
            profileAccessType:
              croCode: HOTEL1
              sharedLevel: CRO
            profileRestrictions:
              restricted: false
            registeredProperty: HOTEL1
            statusCode: ACTIVE
            telephones:
              telephoneInfo:
              - telephone:
                  createDateTime: 2019-09-18T21:09:36.499Z
                  creatorId: "12883"
                  extension: x25
                  lastModifierId: "12883"
                  lastModifyDateTime: 2019-09-18T21:09:36.499Z
                  orderSequence: -100000000
                  phoneNumber: +1 415 555 0100
                  phoneTechType: PHONE
                  phoneUseTypeDescription: office
                  primaryInd: false
            territory: North America
          profileIdList:
          - id: "3149001"
            idContext: OPERA
            type: Profile
        type: object
    storeEmail_request:
      allOf:
      - $ref: '#/components/schemas/emailMessageType'
      - example:
          blockId: "13701"
          emailBody: base 64 encoded email body should be placed here
          emailReceiveDate: 2020-07-15T17:16:47.617Z
          fromAddress: eg@example.com
          hasAttachment: true
          messageId: "12345"
          subject: First Email Subject
          toAddress:
          - Example1@email.com
        type: object
    changeProfileOwners_request:
      allOf:
      - $ref: '#/components/schemas/profileOwners'
      - example:
          criteria:
            owners:
            - hotel:
                code: HOTEL1
              ownerCode: MLW
              primary: false
              profileId:
                id: 1017420
                idContext: OPERA
                type: Profile
            profileIdList:
              id: 1017420
              type: Profile
        type: object
    putProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationshipToBeChanged'
      - example:
          relationship:
            changeRelationship:
              changeProfileID:
                id: "3261507"
                type: Guest
              sourceRelation: FRIEND1
              sourceRelationDescription: Friends
              targetRelation: FRIEND2
              targetRelationDescription: Friends 2
            primary: true
            profileType: Guest
            relationshipID: "28026"
            sourceRelation: EMPLOYEE
            sourceRelationDescription: EMPLOYEE
            statusCode: Active
            targetProfileType: Guest
            targetRelation: EMPLOYER
            targetRelationDescription: EMPLOYER
        type: object
    postProfileRelationship_request:
      allOf:
      - $ref: '#/components/schemas/profileRelationship'
      - example:
          relationship:
            primary: "true"
            profileType: Guest
            sourceRelation: FAMILY MEMBER
            sourceRelationDescription: FAMILY MEMBER
            statusCode: Active
            targetProfileType: Guest
            targetRelation: FAMILY HEAD
            targetRelationDescription: FAMILY HEAD
        type: object
    mergeProfiles_request:
      allOf:
      - $ref: '#/components/schemas/profileToBeMerged'
      - example:
          victimProfileId:
            id: "1087330"
        type: object
    aRAccountType_lastReminderInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        historyExists:
          description: Indicates that reminders history exists.
          type: boolean
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    aRAccountType_lastStatementInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        historyExists:
          description: Indicates that statement history exists.
          type: boolean
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        statementNo:
          description: "When using Statement Numbering, a unique number is associated\
            \ to the Statement."
          type: integer
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    companyProfileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_emails:
      description: List of email address for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_gdsNegotiatedRates:
      description: List of channel negotiated rates that this profile has been assigned
        to.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        gdsNegotiatedRate:
          description: Collection of Detailed information on channel negotiated rates
            for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_keywords:
      description: List of customer keywords.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        keyword:
          description: Collection of keywords attached to the profile.
          items:
            $ref: '#/components/schemas/keywordType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_negotiatedRates:
      description: List of profile negotiated rates.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        negotiatedRate:
          description: Collection of Detailed information on profile negotiated rates.
          items:
            $ref: '#/components/schemas/negotiatedType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_preferenceCollection:
      description: List of customer preferences.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_telephones:
      description: List of Telephone Number Information
      properties:
        count:
          description: Total number of rows returned
          type: integer
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    companyProfileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
      type: object
    customerType_identifications:
      description: List of identification of the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        identificationInfo:
          description: Collection of detailed information on the identification of
            the customer.
          items:
            $ref: '#/components/schemas/identificationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    eCertificateInfoType_hotels:
      description: Hotel to which certificate is attached to.
      properties:
        code:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        scope:
          $ref: '#/components/schemas/eCertificateScopeType'
      type: object
    folioTextsType_inner:
      properties:
        row:
          description: Row number of the additional text.
          type: integer
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    profileEnrollmentType_emails:
      description: List of email address for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_preferenceCollection:
      description: List of customer preferences.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_roomOwnershipsList:
      description: Room Ownership records.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        roomOwnershipInfo:
          description: Collection of Detailed information on Room Ownership records.
          items:
            $ref: '#/components/schemas/roomOwnershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileEnrollmentType_telephones:
      description: List of Telephone Number Information
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileSubscriptionType_profileInfo:
      description: This provides name information for a person.
      properties:
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileSummaryType_formerName:
      description: This provides name information for a person.
      properties:
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profilesType_profileInfo_inner:
      properties:
        allowedActions:
          description: Allowed actions for profile operations.
          items:
            $ref: '#/components/schemas/profileAllowedActionType'
          maxItems: 2
          type: array
        chainCode:
          description: Chain code associated with the profile.
          maxLength: 20
          minLength: 0
          type: string
        profile:
          $ref: '#/components/schemas/profileType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
x-original-swagger-version: "2.0"
