/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipPromotionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipPromotionType{}

// MembershipPromotionType Information related to a membership promotion.
type MembershipPromotionType struct {
	// The promotion code attached with the member.
	PromotionCode *string `json:"promotionCode,omitempty"`
	// The start date of membership promotion.
	StartDate *string `json:"startDate,omitempty"`
	// Indicates if the membership type is inactive.
	Inactive *bool `json:"inactive,omitempty"`
	// Indicates Resort of membership promotion
	HotelId *string `json:"hotelId,omitempty"`
	// Indicates the end date of membership promotion.
	EndDate *string `json:"endDate,omitempty"`
	// Specifies whether the promotion code attached is global.
	Global *bool `json:"global,omitempty"`
	// The ID of a promotion owned by a membership.
	MembershipPromotionId *float32 `json:"membershipPromotionId,omitempty"`
}

// NewMembershipPromotionType instantiates a new MembershipPromotionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipPromotionType() *MembershipPromotionType {
	this := MembershipPromotionType{}
	return &this
}

// NewMembershipPromotionTypeWithDefaults instantiates a new MembershipPromotionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipPromotionTypeWithDefaults() *MembershipPromotionType {
	this := MembershipPromotionType{}
	return &this
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *MembershipPromotionType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *MembershipPromotionType) SetStartDate(v string) {
	o.StartDate = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *MembershipPromotionType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MembershipPromotionType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *MembershipPromotionType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetGlobal() bool {
	if o == nil || IsNil(o.Global) {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetGlobalOk() (*bool, bool) {
	if o == nil || IsNil(o.Global) {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasGlobal() bool {
	if o != nil && !IsNil(o.Global) {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *MembershipPromotionType) SetGlobal(v bool) {
	o.Global = &v
}

// GetMembershipPromotionId returns the MembershipPromotionId field value if set, zero value otherwise.
func (o *MembershipPromotionType) GetMembershipPromotionId() float32 {
	if o == nil || IsNil(o.MembershipPromotionId) {
		var ret float32
		return ret
	}
	return *o.MembershipPromotionId
}

// GetMembershipPromotionIdOk returns a tuple with the MembershipPromotionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipPromotionType) GetMembershipPromotionIdOk() (*float32, bool) {
	if o == nil || IsNil(o.MembershipPromotionId) {
		return nil, false
	}
	return o.MembershipPromotionId, true
}

// HasMembershipPromotionId returns a boolean if a field has been set.
func (o *MembershipPromotionType) HasMembershipPromotionId() bool {
	if o != nil && !IsNil(o.MembershipPromotionId) {
		return true
	}

	return false
}

// SetMembershipPromotionId gets a reference to the given float32 and assigns it to the MembershipPromotionId field.
func (o *MembershipPromotionType) SetMembershipPromotionId(v float32) {
	o.MembershipPromotionId = &v
}

func (o MembershipPromotionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipPromotionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Global) {
		toSerialize["global"] = o.Global
	}
	if !IsNil(o.MembershipPromotionId) {
		toSerialize["membershipPromotionId"] = o.MembershipPromotionId
	}
	return toSerialize, nil
}

type NullableMembershipPromotionType struct {
	value *MembershipPromotionType
	isSet bool
}

func (v NullableMembershipPromotionType) Get() *MembershipPromotionType {
	return v.value
}

func (v *NullableMembershipPromotionType) Set(val *MembershipPromotionType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipPromotionType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipPromotionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipPromotionType(val *MembershipPromotionType) *NullableMembershipPromotionType {
	return &NullableMembershipPromotionType{value: val, isSet: true}
}

func (v NullableMembershipPromotionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipPromotionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


