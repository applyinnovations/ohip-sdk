/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileType{}

// ProfileType Type provides the detailed information about the profile and its children.
type ProfileType struct {
	Addresses *ProfileTypeAddresses `json:"addresses,omitempty"`
	// Business/Market Segment associated to the profile.
	BusinessSegments []string `json:"businessSegments,omitempty"`
	Cashiering *ProfileCashieringType `json:"cashiering,omitempty"`
	Comments *CompanyProfileTypeComments `json:"comments,omitempty"`
	// Contains commission related details for the profile.
	CommissionInfoList []ProfileCommissionType `json:"commissionInfoList,omitempty"`
	Company *CompanyType `json:"company,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	Customer *CustomerType `json:"customer,omitempty"`
	// List of e-certificates for the profile.
	ECertificates []ECertificateType `json:"eCertificates,omitempty"`
	// Eligible for Fiscal Folio/Payload generation.
	EligibleForFiscalFolio *string `json:"eligibleForFiscalFolio,omitempty"`
	Emails *CompanyProfileTypeEmails `json:"emails,omitempty"`
	// Fiscal Guest Type is used for Fiscal Folio funcionality
	FiscalGuestType *string `json:"fiscalGuestType,omitempty"`
	GdsNegotiatedRates *CompanyProfileTypeGdsNegotiatedRates `json:"gdsNegotiatedRates,omitempty"`
	// Populates true if the profile has commission configured false otherwise.
	HasCommission *bool `json:"hasCommission,omitempty"`
	// Influence Code associated to the profile.
	InfluenceCode *string `json:"influenceCode,omitempty"`
	// Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
	InheritedNegRates *bool `json:"inheritedNegRates,omitempty"`
	Keywords *CompanyProfileTypeKeywords `json:"keywords,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	LastStayInfo *LastStayInfoType `json:"lastStayInfo,omitempty"`
	// Localization Guest Type assocaited to the profile.
	LocalizationGuestType *string `json:"localizationGuestType,omitempty"`
	MailingActions *MailingActionsType `json:"mailingActions,omitempty"`
	// Mark this profile as recently accessed.
	MarkAsRecentlyAccessed *bool `json:"markAsRecentlyAccessed,omitempty"`
	// \"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.
	MarkForHistory *bool `json:"markForHistory,omitempty"`
	NegotiatedRates *CompanyProfileTypeNegotiatedRates `json:"negotiatedRates,omitempty"`
	// Owner Code associated to the profile.
	OwnerCode *string `json:"ownerCode,omitempty"`
	PreferenceCollection *CompanyProfileTypePreferenceCollection `json:"preferenceCollection,omitempty"`
	PrivacyInfo *PrivacyInfoType `json:"privacyInfo,omitempty"`
	ProfileAccessType *ProfileAccessType `json:"profileAccessType,omitempty"`
	ProfileDeliveryMethods *ProfileEnrollmentTypeProfileDeliveryMethods `json:"profileDeliveryMethods,omitempty"`
	ProfileImage *ImageSetType `json:"profileImage,omitempty"`
	// Collection of lamp indicators.
	ProfileIndicators []IndicatorType `json:"profileIndicators,omitempty"`
	ProfileMemberships *CompanyProfileTypeProfileMemberships `json:"profileMemberships,omitempty"`
	ProfileRestrictions *ProfileRestrictions `json:"profileRestrictions,omitempty"`
	ProfileType *ProfileTypeType `json:"profileType,omitempty"`
	// What level this profile is protected.
	ProtectedBy *string `json:"protectedBy,omitempty"`
	// Hotel which this profile is registered with. This attribute is not used for configuration.
	RegisteredProperty *string `json:"registeredProperty,omitempty"`
	Relationships *CompanyProfileTypeRelationships `json:"relationships,omitempty"`
	RelationshipsSummary *ProfileEnrollmentTypeRelationshipsSummary `json:"relationshipsSummary,omitempty"`
	// Hotel which this profile is to be registered. This attribute is only used during creation of profile.
	RequestForHotel *string `json:"requestForHotel,omitempty"`
	RoomOwnershipsList *ProfileEnrollmentTypeRoomOwnershipsList `json:"roomOwnershipsList,omitempty"`
	SalesInfo *SalesInfoType `json:"salesInfo,omitempty"`
	// Flag to show inactive Room Owners.
	ShowInactiveRoomOwners *bool `json:"showInactiveRoomOwners,omitempty"`
	StatusCode *ProfileStatusType `json:"statusCode,omitempty"`
	StayReservationInfoList *ReservationStayHistoryFutureInfoType `json:"stayReservationInfoList,omitempty"`
	// Details of the OPERA Profile subscription to external system
	Subscriptions []ProfileSubscriptionType `json:"subscriptions,omitempty"`
	TaxInfo *ProfileTaxInfoType `json:"taxInfo,omitempty"`
	Telephones *CompanyProfileTypeTelephones `json:"telephones,omitempty"`
	// Territory associated to the profile.
	Territory *string `json:"territory,omitempty"`
	// Trace Code associated to the profile.
	TraceCode *string `json:"traceCode,omitempty"`
	URLs *CompanyProfileTypeURLs `json:"uRLs,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
	// Web User Accounts List.
	WebUserAccounts []WebUserAccountType `json:"webUserAccounts,omitempty"`
}

// NewProfileType instantiates a new ProfileType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileType() *ProfileType {
	this := ProfileType{}
	return &this
}

// NewProfileTypeWithDefaults instantiates a new ProfileType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileTypeWithDefaults() *ProfileType {
	this := ProfileType{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *ProfileType) GetAddresses() ProfileTypeAddresses {
	if o == nil || IsNil(o.Addresses) {
		var ret ProfileTypeAddresses
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetAddressesOk() (*ProfileTypeAddresses, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ProfileType) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given ProfileTypeAddresses and assigns it to the Addresses field.
func (o *ProfileType) SetAddresses(v ProfileTypeAddresses) {
	o.Addresses = &v
}

// GetBusinessSegments returns the BusinessSegments field value if set, zero value otherwise.
func (o *ProfileType) GetBusinessSegments() []string {
	if o == nil || IsNil(o.BusinessSegments) {
		var ret []string
		return ret
	}
	return o.BusinessSegments
}

// GetBusinessSegmentsOk returns a tuple with the BusinessSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetBusinessSegmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessSegments) {
		return nil, false
	}
	return o.BusinessSegments, true
}

// HasBusinessSegments returns a boolean if a field has been set.
func (o *ProfileType) HasBusinessSegments() bool {
	if o != nil && !IsNil(o.BusinessSegments) {
		return true
	}

	return false
}

// SetBusinessSegments gets a reference to the given []string and assigns it to the BusinessSegments field.
func (o *ProfileType) SetBusinessSegments(v []string) {
	o.BusinessSegments = v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *ProfileType) GetCashiering() ProfileCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ProfileCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCashieringOk() (*ProfileCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *ProfileType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ProfileCashieringType and assigns it to the Cashiering field.
func (o *ProfileType) SetCashiering(v ProfileCashieringType) {
	o.Cashiering = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ProfileType) GetComments() CompanyProfileTypeComments {
	if o == nil || IsNil(o.Comments) {
		var ret CompanyProfileTypeComments
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCommentsOk() (*CompanyProfileTypeComments, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ProfileType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given CompanyProfileTypeComments and assigns it to the Comments field.
func (o *ProfileType) SetComments(v CompanyProfileTypeComments) {
	o.Comments = &v
}

// GetCommissionInfoList returns the CommissionInfoList field value if set, zero value otherwise.
func (o *ProfileType) GetCommissionInfoList() []ProfileCommissionType {
	if o == nil || IsNil(o.CommissionInfoList) {
		var ret []ProfileCommissionType
		return ret
	}
	return o.CommissionInfoList
}

// GetCommissionInfoListOk returns a tuple with the CommissionInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCommissionInfoListOk() ([]ProfileCommissionType, bool) {
	if o == nil || IsNil(o.CommissionInfoList) {
		return nil, false
	}
	return o.CommissionInfoList, true
}

// HasCommissionInfoList returns a boolean if a field has been set.
func (o *ProfileType) HasCommissionInfoList() bool {
	if o != nil && !IsNil(o.CommissionInfoList) {
		return true
	}

	return false
}

// SetCommissionInfoList gets a reference to the given []ProfileCommissionType and assigns it to the CommissionInfoList field.
func (o *ProfileType) SetCommissionInfoList(v []ProfileCommissionType) {
	o.CommissionInfoList = v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ProfileType) GetCompany() CompanyType {
	if o == nil || IsNil(o.Company) {
		var ret CompanyType
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCompanyOk() (*CompanyType, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ProfileType) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyType and assigns it to the Company field.
func (o *ProfileType) SetCompany(v CompanyType) {
	o.Company = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *ProfileType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *ProfileType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *ProfileType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ProfileType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ProfileType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ProfileType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *ProfileType) GetCustomer() CustomerType {
	if o == nil || IsNil(o.Customer) {
		var ret CustomerType
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetCustomerOk() (*CustomerType, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *ProfileType) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CustomerType and assigns it to the Customer field.
func (o *ProfileType) SetCustomer(v CustomerType) {
	o.Customer = &v
}

// GetECertificates returns the ECertificates field value if set, zero value otherwise.
func (o *ProfileType) GetECertificates() []ECertificateType {
	if o == nil || IsNil(o.ECertificates) {
		var ret []ECertificateType
		return ret
	}
	return o.ECertificates
}

// GetECertificatesOk returns a tuple with the ECertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetECertificatesOk() ([]ECertificateType, bool) {
	if o == nil || IsNil(o.ECertificates) {
		return nil, false
	}
	return o.ECertificates, true
}

// HasECertificates returns a boolean if a field has been set.
func (o *ProfileType) HasECertificates() bool {
	if o != nil && !IsNil(o.ECertificates) {
		return true
	}

	return false
}

// SetECertificates gets a reference to the given []ECertificateType and assigns it to the ECertificates field.
func (o *ProfileType) SetECertificates(v []ECertificateType) {
	o.ECertificates = v
}

// GetEligibleForFiscalFolio returns the EligibleForFiscalFolio field value if set, zero value otherwise.
func (o *ProfileType) GetEligibleForFiscalFolio() string {
	if o == nil || IsNil(o.EligibleForFiscalFolio) {
		var ret string
		return ret
	}
	return *o.EligibleForFiscalFolio
}

// GetEligibleForFiscalFolioOk returns a tuple with the EligibleForFiscalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetEligibleForFiscalFolioOk() (*string, bool) {
	if o == nil || IsNil(o.EligibleForFiscalFolio) {
		return nil, false
	}
	return o.EligibleForFiscalFolio, true
}

// HasEligibleForFiscalFolio returns a boolean if a field has been set.
func (o *ProfileType) HasEligibleForFiscalFolio() bool {
	if o != nil && !IsNil(o.EligibleForFiscalFolio) {
		return true
	}

	return false
}

// SetEligibleForFiscalFolio gets a reference to the given string and assigns it to the EligibleForFiscalFolio field.
func (o *ProfileType) SetEligibleForFiscalFolio(v string) {
	o.EligibleForFiscalFolio = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *ProfileType) GetEmails() CompanyProfileTypeEmails {
	if o == nil || IsNil(o.Emails) {
		var ret CompanyProfileTypeEmails
		return ret
	}
	return *o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetEmailsOk() (*CompanyProfileTypeEmails, bool) {
	if o == nil || IsNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *ProfileType) HasEmails() bool {
	if o != nil && !IsNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given CompanyProfileTypeEmails and assigns it to the Emails field.
func (o *ProfileType) SetEmails(v CompanyProfileTypeEmails) {
	o.Emails = &v
}

// GetFiscalGuestType returns the FiscalGuestType field value if set, zero value otherwise.
func (o *ProfileType) GetFiscalGuestType() string {
	if o == nil || IsNil(o.FiscalGuestType) {
		var ret string
		return ret
	}
	return *o.FiscalGuestType
}

// GetFiscalGuestTypeOk returns a tuple with the FiscalGuestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetFiscalGuestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalGuestType) {
		return nil, false
	}
	return o.FiscalGuestType, true
}

// HasFiscalGuestType returns a boolean if a field has been set.
func (o *ProfileType) HasFiscalGuestType() bool {
	if o != nil && !IsNil(o.FiscalGuestType) {
		return true
	}

	return false
}

// SetFiscalGuestType gets a reference to the given string and assigns it to the FiscalGuestType field.
func (o *ProfileType) SetFiscalGuestType(v string) {
	o.FiscalGuestType = &v
}

// GetGdsNegotiatedRates returns the GdsNegotiatedRates field value if set, zero value otherwise.
func (o *ProfileType) GetGdsNegotiatedRates() CompanyProfileTypeGdsNegotiatedRates {
	if o == nil || IsNil(o.GdsNegotiatedRates) {
		var ret CompanyProfileTypeGdsNegotiatedRates
		return ret
	}
	return *o.GdsNegotiatedRates
}

// GetGdsNegotiatedRatesOk returns a tuple with the GdsNegotiatedRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetGdsNegotiatedRatesOk() (*CompanyProfileTypeGdsNegotiatedRates, bool) {
	if o == nil || IsNil(o.GdsNegotiatedRates) {
		return nil, false
	}
	return o.GdsNegotiatedRates, true
}

// HasGdsNegotiatedRates returns a boolean if a field has been set.
func (o *ProfileType) HasGdsNegotiatedRates() bool {
	if o != nil && !IsNil(o.GdsNegotiatedRates) {
		return true
	}

	return false
}

// SetGdsNegotiatedRates gets a reference to the given CompanyProfileTypeGdsNegotiatedRates and assigns it to the GdsNegotiatedRates field.
func (o *ProfileType) SetGdsNegotiatedRates(v CompanyProfileTypeGdsNegotiatedRates) {
	o.GdsNegotiatedRates = &v
}

// GetHasCommission returns the HasCommission field value if set, zero value otherwise.
func (o *ProfileType) GetHasCommission() bool {
	if o == nil || IsNil(o.HasCommission) {
		var ret bool
		return ret
	}
	return *o.HasCommission
}

// GetHasCommissionOk returns a tuple with the HasCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetHasCommissionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCommission) {
		return nil, false
	}
	return o.HasCommission, true
}

// HasHasCommission returns a boolean if a field has been set.
func (o *ProfileType) HasHasCommission() bool {
	if o != nil && !IsNil(o.HasCommission) {
		return true
	}

	return false
}

// SetHasCommission gets a reference to the given bool and assigns it to the HasCommission field.
func (o *ProfileType) SetHasCommission(v bool) {
	o.HasCommission = &v
}

// GetInfluenceCode returns the InfluenceCode field value if set, zero value otherwise.
func (o *ProfileType) GetInfluenceCode() string {
	if o == nil || IsNil(o.InfluenceCode) {
		var ret string
		return ret
	}
	return *o.InfluenceCode
}

// GetInfluenceCodeOk returns a tuple with the InfluenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetInfluenceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.InfluenceCode) {
		return nil, false
	}
	return o.InfluenceCode, true
}

// HasInfluenceCode returns a boolean if a field has been set.
func (o *ProfileType) HasInfluenceCode() bool {
	if o != nil && !IsNil(o.InfluenceCode) {
		return true
	}

	return false
}

// SetInfluenceCode gets a reference to the given string and assigns it to the InfluenceCode field.
func (o *ProfileType) SetInfluenceCode(v string) {
	o.InfluenceCode = &v
}

// GetInheritedNegRates returns the InheritedNegRates field value if set, zero value otherwise.
func (o *ProfileType) GetInheritedNegRates() bool {
	if o == nil || IsNil(o.InheritedNegRates) {
		var ret bool
		return ret
	}
	return *o.InheritedNegRates
}

// GetInheritedNegRatesOk returns a tuple with the InheritedNegRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetInheritedNegRatesOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritedNegRates) {
		return nil, false
	}
	return o.InheritedNegRates, true
}

// HasInheritedNegRates returns a boolean if a field has been set.
func (o *ProfileType) HasInheritedNegRates() bool {
	if o != nil && !IsNil(o.InheritedNegRates) {
		return true
	}

	return false
}

// SetInheritedNegRates gets a reference to the given bool and assigns it to the InheritedNegRates field.
func (o *ProfileType) SetInheritedNegRates(v bool) {
	o.InheritedNegRates = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ProfileType) GetKeywords() CompanyProfileTypeKeywords {
	if o == nil || IsNil(o.Keywords) {
		var ret CompanyProfileTypeKeywords
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetKeywordsOk() (*CompanyProfileTypeKeywords, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ProfileType) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given CompanyProfileTypeKeywords and assigns it to the Keywords field.
func (o *ProfileType) SetKeywords(v CompanyProfileTypeKeywords) {
	o.Keywords = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *ProfileType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *ProfileType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *ProfileType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *ProfileType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *ProfileType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *ProfileType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastStayInfo returns the LastStayInfo field value if set, zero value otherwise.
func (o *ProfileType) GetLastStayInfo() LastStayInfoType {
	if o == nil || IsNil(o.LastStayInfo) {
		var ret LastStayInfoType
		return ret
	}
	return *o.LastStayInfo
}

// GetLastStayInfoOk returns a tuple with the LastStayInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetLastStayInfoOk() (*LastStayInfoType, bool) {
	if o == nil || IsNil(o.LastStayInfo) {
		return nil, false
	}
	return o.LastStayInfo, true
}

// HasLastStayInfo returns a boolean if a field has been set.
func (o *ProfileType) HasLastStayInfo() bool {
	if o != nil && !IsNil(o.LastStayInfo) {
		return true
	}

	return false
}

// SetLastStayInfo gets a reference to the given LastStayInfoType and assigns it to the LastStayInfo field.
func (o *ProfileType) SetLastStayInfo(v LastStayInfoType) {
	o.LastStayInfo = &v
}

// GetLocalizationGuestType returns the LocalizationGuestType field value if set, zero value otherwise.
func (o *ProfileType) GetLocalizationGuestType() string {
	if o == nil || IsNil(o.LocalizationGuestType) {
		var ret string
		return ret
	}
	return *o.LocalizationGuestType
}

// GetLocalizationGuestTypeOk returns a tuple with the LocalizationGuestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetLocalizationGuestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LocalizationGuestType) {
		return nil, false
	}
	return o.LocalizationGuestType, true
}

// HasLocalizationGuestType returns a boolean if a field has been set.
func (o *ProfileType) HasLocalizationGuestType() bool {
	if o != nil && !IsNil(o.LocalizationGuestType) {
		return true
	}

	return false
}

// SetLocalizationGuestType gets a reference to the given string and assigns it to the LocalizationGuestType field.
func (o *ProfileType) SetLocalizationGuestType(v string) {
	o.LocalizationGuestType = &v
}

// GetMailingActions returns the MailingActions field value if set, zero value otherwise.
func (o *ProfileType) GetMailingActions() MailingActionsType {
	if o == nil || IsNil(o.MailingActions) {
		var ret MailingActionsType
		return ret
	}
	return *o.MailingActions
}

// GetMailingActionsOk returns a tuple with the MailingActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetMailingActionsOk() (*MailingActionsType, bool) {
	if o == nil || IsNil(o.MailingActions) {
		return nil, false
	}
	return o.MailingActions, true
}

// HasMailingActions returns a boolean if a field has been set.
func (o *ProfileType) HasMailingActions() bool {
	if o != nil && !IsNil(o.MailingActions) {
		return true
	}

	return false
}

// SetMailingActions gets a reference to the given MailingActionsType and assigns it to the MailingActions field.
func (o *ProfileType) SetMailingActions(v MailingActionsType) {
	o.MailingActions = &v
}

// GetMarkAsRecentlyAccessed returns the MarkAsRecentlyAccessed field value if set, zero value otherwise.
func (o *ProfileType) GetMarkAsRecentlyAccessed() bool {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		var ret bool
		return ret
	}
	return *o.MarkAsRecentlyAccessed
}

// GetMarkAsRecentlyAccessedOk returns a tuple with the MarkAsRecentlyAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetMarkAsRecentlyAccessedOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		return nil, false
	}
	return o.MarkAsRecentlyAccessed, true
}

// HasMarkAsRecentlyAccessed returns a boolean if a field has been set.
func (o *ProfileType) HasMarkAsRecentlyAccessed() bool {
	if o != nil && !IsNil(o.MarkAsRecentlyAccessed) {
		return true
	}

	return false
}

// SetMarkAsRecentlyAccessed gets a reference to the given bool and assigns it to the MarkAsRecentlyAccessed field.
func (o *ProfileType) SetMarkAsRecentlyAccessed(v bool) {
	o.MarkAsRecentlyAccessed = &v
}

// GetMarkForHistory returns the MarkForHistory field value if set, zero value otherwise.
func (o *ProfileType) GetMarkForHistory() bool {
	if o == nil || IsNil(o.MarkForHistory) {
		var ret bool
		return ret
	}
	return *o.MarkForHistory
}

// GetMarkForHistoryOk returns a tuple with the MarkForHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetMarkForHistoryOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkForHistory) {
		return nil, false
	}
	return o.MarkForHistory, true
}

// HasMarkForHistory returns a boolean if a field has been set.
func (o *ProfileType) HasMarkForHistory() bool {
	if o != nil && !IsNil(o.MarkForHistory) {
		return true
	}

	return false
}

// SetMarkForHistory gets a reference to the given bool and assigns it to the MarkForHistory field.
func (o *ProfileType) SetMarkForHistory(v bool) {
	o.MarkForHistory = &v
}

// GetNegotiatedRates returns the NegotiatedRates field value if set, zero value otherwise.
func (o *ProfileType) GetNegotiatedRates() CompanyProfileTypeNegotiatedRates {
	if o == nil || IsNil(o.NegotiatedRates) {
		var ret CompanyProfileTypeNegotiatedRates
		return ret
	}
	return *o.NegotiatedRates
}

// GetNegotiatedRatesOk returns a tuple with the NegotiatedRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetNegotiatedRatesOk() (*CompanyProfileTypeNegotiatedRates, bool) {
	if o == nil || IsNil(o.NegotiatedRates) {
		return nil, false
	}
	return o.NegotiatedRates, true
}

// HasNegotiatedRates returns a boolean if a field has been set.
func (o *ProfileType) HasNegotiatedRates() bool {
	if o != nil && !IsNil(o.NegotiatedRates) {
		return true
	}

	return false
}

// SetNegotiatedRates gets a reference to the given CompanyProfileTypeNegotiatedRates and assigns it to the NegotiatedRates field.
func (o *ProfileType) SetNegotiatedRates(v CompanyProfileTypeNegotiatedRates) {
	o.NegotiatedRates = &v
}

// GetOwnerCode returns the OwnerCode field value if set, zero value otherwise.
func (o *ProfileType) GetOwnerCode() string {
	if o == nil || IsNil(o.OwnerCode) {
		var ret string
		return ret
	}
	return *o.OwnerCode
}

// GetOwnerCodeOk returns a tuple with the OwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerCode) {
		return nil, false
	}
	return o.OwnerCode, true
}

// HasOwnerCode returns a boolean if a field has been set.
func (o *ProfileType) HasOwnerCode() bool {
	if o != nil && !IsNil(o.OwnerCode) {
		return true
	}

	return false
}

// SetOwnerCode gets a reference to the given string and assigns it to the OwnerCode field.
func (o *ProfileType) SetOwnerCode(v string) {
	o.OwnerCode = &v
}

// GetPreferenceCollection returns the PreferenceCollection field value if set, zero value otherwise.
func (o *ProfileType) GetPreferenceCollection() CompanyProfileTypePreferenceCollection {
	if o == nil || IsNil(o.PreferenceCollection) {
		var ret CompanyProfileTypePreferenceCollection
		return ret
	}
	return *o.PreferenceCollection
}

// GetPreferenceCollectionOk returns a tuple with the PreferenceCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetPreferenceCollectionOk() (*CompanyProfileTypePreferenceCollection, bool) {
	if o == nil || IsNil(o.PreferenceCollection) {
		return nil, false
	}
	return o.PreferenceCollection, true
}

// HasPreferenceCollection returns a boolean if a field has been set.
func (o *ProfileType) HasPreferenceCollection() bool {
	if o != nil && !IsNil(o.PreferenceCollection) {
		return true
	}

	return false
}

// SetPreferenceCollection gets a reference to the given CompanyProfileTypePreferenceCollection and assigns it to the PreferenceCollection field.
func (o *ProfileType) SetPreferenceCollection(v CompanyProfileTypePreferenceCollection) {
	o.PreferenceCollection = &v
}

// GetPrivacyInfo returns the PrivacyInfo field value if set, zero value otherwise.
func (o *ProfileType) GetPrivacyInfo() PrivacyInfoType {
	if o == nil || IsNil(o.PrivacyInfo) {
		var ret PrivacyInfoType
		return ret
	}
	return *o.PrivacyInfo
}

// GetPrivacyInfoOk returns a tuple with the PrivacyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetPrivacyInfoOk() (*PrivacyInfoType, bool) {
	if o == nil || IsNil(o.PrivacyInfo) {
		return nil, false
	}
	return o.PrivacyInfo, true
}

// HasPrivacyInfo returns a boolean if a field has been set.
func (o *ProfileType) HasPrivacyInfo() bool {
	if o != nil && !IsNil(o.PrivacyInfo) {
		return true
	}

	return false
}

// SetPrivacyInfo gets a reference to the given PrivacyInfoType and assigns it to the PrivacyInfo field.
func (o *ProfileType) SetPrivacyInfo(v PrivacyInfoType) {
	o.PrivacyInfo = &v
}

// GetProfileAccessType returns the ProfileAccessType field value if set, zero value otherwise.
func (o *ProfileType) GetProfileAccessType() ProfileAccessType {
	if o == nil || IsNil(o.ProfileAccessType) {
		var ret ProfileAccessType
		return ret
	}
	return *o.ProfileAccessType
}

// GetProfileAccessTypeOk returns a tuple with the ProfileAccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileAccessTypeOk() (*ProfileAccessType, bool) {
	if o == nil || IsNil(o.ProfileAccessType) {
		return nil, false
	}
	return o.ProfileAccessType, true
}

// HasProfileAccessType returns a boolean if a field has been set.
func (o *ProfileType) HasProfileAccessType() bool {
	if o != nil && !IsNil(o.ProfileAccessType) {
		return true
	}

	return false
}

// SetProfileAccessType gets a reference to the given ProfileAccessType and assigns it to the ProfileAccessType field.
func (o *ProfileType) SetProfileAccessType(v ProfileAccessType) {
	o.ProfileAccessType = &v
}

// GetProfileDeliveryMethods returns the ProfileDeliveryMethods field value if set, zero value otherwise.
func (o *ProfileType) GetProfileDeliveryMethods() ProfileEnrollmentTypeProfileDeliveryMethods {
	if o == nil || IsNil(o.ProfileDeliveryMethods) {
		var ret ProfileEnrollmentTypeProfileDeliveryMethods
		return ret
	}
	return *o.ProfileDeliveryMethods
}

// GetProfileDeliveryMethodsOk returns a tuple with the ProfileDeliveryMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileDeliveryMethodsOk() (*ProfileEnrollmentTypeProfileDeliveryMethods, bool) {
	if o == nil || IsNil(o.ProfileDeliveryMethods) {
		return nil, false
	}
	return o.ProfileDeliveryMethods, true
}

// HasProfileDeliveryMethods returns a boolean if a field has been set.
func (o *ProfileType) HasProfileDeliveryMethods() bool {
	if o != nil && !IsNil(o.ProfileDeliveryMethods) {
		return true
	}

	return false
}

// SetProfileDeliveryMethods gets a reference to the given ProfileEnrollmentTypeProfileDeliveryMethods and assigns it to the ProfileDeliveryMethods field.
func (o *ProfileType) SetProfileDeliveryMethods(v ProfileEnrollmentTypeProfileDeliveryMethods) {
	o.ProfileDeliveryMethods = &v
}

// GetProfileImage returns the ProfileImage field value if set, zero value otherwise.
func (o *ProfileType) GetProfileImage() ImageSetType {
	if o == nil || IsNil(o.ProfileImage) {
		var ret ImageSetType
		return ret
	}
	return *o.ProfileImage
}

// GetProfileImageOk returns a tuple with the ProfileImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileImageOk() (*ImageSetType, bool) {
	if o == nil || IsNil(o.ProfileImage) {
		return nil, false
	}
	return o.ProfileImage, true
}

// HasProfileImage returns a boolean if a field has been set.
func (o *ProfileType) HasProfileImage() bool {
	if o != nil && !IsNil(o.ProfileImage) {
		return true
	}

	return false
}

// SetProfileImage gets a reference to the given ImageSetType and assigns it to the ProfileImage field.
func (o *ProfileType) SetProfileImage(v ImageSetType) {
	o.ProfileImage = &v
}

// GetProfileIndicators returns the ProfileIndicators field value if set, zero value otherwise.
func (o *ProfileType) GetProfileIndicators() []IndicatorType {
	if o == nil || IsNil(o.ProfileIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ProfileIndicators
}

// GetProfileIndicatorsOk returns a tuple with the ProfileIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ProfileIndicators) {
		return nil, false
	}
	return o.ProfileIndicators, true
}

// HasProfileIndicators returns a boolean if a field has been set.
func (o *ProfileType) HasProfileIndicators() bool {
	if o != nil && !IsNil(o.ProfileIndicators) {
		return true
	}

	return false
}

// SetProfileIndicators gets a reference to the given []IndicatorType and assigns it to the ProfileIndicators field.
func (o *ProfileType) SetProfileIndicators(v []IndicatorType) {
	o.ProfileIndicators = v
}

// GetProfileMemberships returns the ProfileMemberships field value if set, zero value otherwise.
func (o *ProfileType) GetProfileMemberships() CompanyProfileTypeProfileMemberships {
	if o == nil || IsNil(o.ProfileMemberships) {
		var ret CompanyProfileTypeProfileMemberships
		return ret
	}
	return *o.ProfileMemberships
}

// GetProfileMembershipsOk returns a tuple with the ProfileMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileMembershipsOk() (*CompanyProfileTypeProfileMemberships, bool) {
	if o == nil || IsNil(o.ProfileMemberships) {
		return nil, false
	}
	return o.ProfileMemberships, true
}

// HasProfileMemberships returns a boolean if a field has been set.
func (o *ProfileType) HasProfileMemberships() bool {
	if o != nil && !IsNil(o.ProfileMemberships) {
		return true
	}

	return false
}

// SetProfileMemberships gets a reference to the given CompanyProfileTypeProfileMemberships and assigns it to the ProfileMemberships field.
func (o *ProfileType) SetProfileMemberships(v CompanyProfileTypeProfileMemberships) {
	o.ProfileMemberships = &v
}

// GetProfileRestrictions returns the ProfileRestrictions field value if set, zero value otherwise.
func (o *ProfileType) GetProfileRestrictions() ProfileRestrictions {
	if o == nil || IsNil(o.ProfileRestrictions) {
		var ret ProfileRestrictions
		return ret
	}
	return *o.ProfileRestrictions
}

// GetProfileRestrictionsOk returns a tuple with the ProfileRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileRestrictionsOk() (*ProfileRestrictions, bool) {
	if o == nil || IsNil(o.ProfileRestrictions) {
		return nil, false
	}
	return o.ProfileRestrictions, true
}

// HasProfileRestrictions returns a boolean if a field has been set.
func (o *ProfileType) HasProfileRestrictions() bool {
	if o != nil && !IsNil(o.ProfileRestrictions) {
		return true
	}

	return false
}

// SetProfileRestrictions gets a reference to the given ProfileRestrictions and assigns it to the ProfileRestrictions field.
func (o *ProfileType) SetProfileRestrictions(v ProfileRestrictions) {
	o.ProfileRestrictions = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ProfileType) GetProfileType() ProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret ProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProfileTypeOk() (*ProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ProfileType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given ProfileTypeType and assigns it to the ProfileType field.
func (o *ProfileType) SetProfileType(v ProfileTypeType) {
	o.ProfileType = &v
}

// GetProtectedBy returns the ProtectedBy field value if set, zero value otherwise.
func (o *ProfileType) GetProtectedBy() string {
	if o == nil || IsNil(o.ProtectedBy) {
		var ret string
		return ret
	}
	return *o.ProtectedBy
}

// GetProtectedByOk returns a tuple with the ProtectedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetProtectedByOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectedBy) {
		return nil, false
	}
	return o.ProtectedBy, true
}

// HasProtectedBy returns a boolean if a field has been set.
func (o *ProfileType) HasProtectedBy() bool {
	if o != nil && !IsNil(o.ProtectedBy) {
		return true
	}

	return false
}

// SetProtectedBy gets a reference to the given string and assigns it to the ProtectedBy field.
func (o *ProfileType) SetProtectedBy(v string) {
	o.ProtectedBy = &v
}

// GetRegisteredProperty returns the RegisteredProperty field value if set, zero value otherwise.
func (o *ProfileType) GetRegisteredProperty() string {
	if o == nil || IsNil(o.RegisteredProperty) {
		var ret string
		return ret
	}
	return *o.RegisteredProperty
}

// GetRegisteredPropertyOk returns a tuple with the RegisteredProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetRegisteredPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.RegisteredProperty) {
		return nil, false
	}
	return o.RegisteredProperty, true
}

// HasRegisteredProperty returns a boolean if a field has been set.
func (o *ProfileType) HasRegisteredProperty() bool {
	if o != nil && !IsNil(o.RegisteredProperty) {
		return true
	}

	return false
}

// SetRegisteredProperty gets a reference to the given string and assigns it to the RegisteredProperty field.
func (o *ProfileType) SetRegisteredProperty(v string) {
	o.RegisteredProperty = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *ProfileType) GetRelationships() CompanyProfileTypeRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret CompanyProfileTypeRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetRelationshipsOk() (*CompanyProfileTypeRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *ProfileType) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given CompanyProfileTypeRelationships and assigns it to the Relationships field.
func (o *ProfileType) SetRelationships(v CompanyProfileTypeRelationships) {
	o.Relationships = &v
}

// GetRelationshipsSummary returns the RelationshipsSummary field value if set, zero value otherwise.
func (o *ProfileType) GetRelationshipsSummary() ProfileEnrollmentTypeRelationshipsSummary {
	if o == nil || IsNil(o.RelationshipsSummary) {
		var ret ProfileEnrollmentTypeRelationshipsSummary
		return ret
	}
	return *o.RelationshipsSummary
}

// GetRelationshipsSummaryOk returns a tuple with the RelationshipsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetRelationshipsSummaryOk() (*ProfileEnrollmentTypeRelationshipsSummary, bool) {
	if o == nil || IsNil(o.RelationshipsSummary) {
		return nil, false
	}
	return o.RelationshipsSummary, true
}

// HasRelationshipsSummary returns a boolean if a field has been set.
func (o *ProfileType) HasRelationshipsSummary() bool {
	if o != nil && !IsNil(o.RelationshipsSummary) {
		return true
	}

	return false
}

// SetRelationshipsSummary gets a reference to the given ProfileEnrollmentTypeRelationshipsSummary and assigns it to the RelationshipsSummary field.
func (o *ProfileType) SetRelationshipsSummary(v ProfileEnrollmentTypeRelationshipsSummary) {
	o.RelationshipsSummary = &v
}

// GetRequestForHotel returns the RequestForHotel field value if set, zero value otherwise.
func (o *ProfileType) GetRequestForHotel() string {
	if o == nil || IsNil(o.RequestForHotel) {
		var ret string
		return ret
	}
	return *o.RequestForHotel
}

// GetRequestForHotelOk returns a tuple with the RequestForHotel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetRequestForHotelOk() (*string, bool) {
	if o == nil || IsNil(o.RequestForHotel) {
		return nil, false
	}
	return o.RequestForHotel, true
}

// HasRequestForHotel returns a boolean if a field has been set.
func (o *ProfileType) HasRequestForHotel() bool {
	if o != nil && !IsNil(o.RequestForHotel) {
		return true
	}

	return false
}

// SetRequestForHotel gets a reference to the given string and assigns it to the RequestForHotel field.
func (o *ProfileType) SetRequestForHotel(v string) {
	o.RequestForHotel = &v
}

// GetRoomOwnershipsList returns the RoomOwnershipsList field value if set, zero value otherwise.
func (o *ProfileType) GetRoomOwnershipsList() ProfileEnrollmentTypeRoomOwnershipsList {
	if o == nil || IsNil(o.RoomOwnershipsList) {
		var ret ProfileEnrollmentTypeRoomOwnershipsList
		return ret
	}
	return *o.RoomOwnershipsList
}

// GetRoomOwnershipsListOk returns a tuple with the RoomOwnershipsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetRoomOwnershipsListOk() (*ProfileEnrollmentTypeRoomOwnershipsList, bool) {
	if o == nil || IsNil(o.RoomOwnershipsList) {
		return nil, false
	}
	return o.RoomOwnershipsList, true
}

// HasRoomOwnershipsList returns a boolean if a field has been set.
func (o *ProfileType) HasRoomOwnershipsList() bool {
	if o != nil && !IsNil(o.RoomOwnershipsList) {
		return true
	}

	return false
}

// SetRoomOwnershipsList gets a reference to the given ProfileEnrollmentTypeRoomOwnershipsList and assigns it to the RoomOwnershipsList field.
func (o *ProfileType) SetRoomOwnershipsList(v ProfileEnrollmentTypeRoomOwnershipsList) {
	o.RoomOwnershipsList = &v
}

// GetSalesInfo returns the SalesInfo field value if set, zero value otherwise.
func (o *ProfileType) GetSalesInfo() SalesInfoType {
	if o == nil || IsNil(o.SalesInfo) {
		var ret SalesInfoType
		return ret
	}
	return *o.SalesInfo
}

// GetSalesInfoOk returns a tuple with the SalesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetSalesInfoOk() (*SalesInfoType, bool) {
	if o == nil || IsNil(o.SalesInfo) {
		return nil, false
	}
	return o.SalesInfo, true
}

// HasSalesInfo returns a boolean if a field has been set.
func (o *ProfileType) HasSalesInfo() bool {
	if o != nil && !IsNil(o.SalesInfo) {
		return true
	}

	return false
}

// SetSalesInfo gets a reference to the given SalesInfoType and assigns it to the SalesInfo field.
func (o *ProfileType) SetSalesInfo(v SalesInfoType) {
	o.SalesInfo = &v
}

// GetShowInactiveRoomOwners returns the ShowInactiveRoomOwners field value if set, zero value otherwise.
func (o *ProfileType) GetShowInactiveRoomOwners() bool {
	if o == nil || IsNil(o.ShowInactiveRoomOwners) {
		var ret bool
		return ret
	}
	return *o.ShowInactiveRoomOwners
}

// GetShowInactiveRoomOwnersOk returns a tuple with the ShowInactiveRoomOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetShowInactiveRoomOwnersOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowInactiveRoomOwners) {
		return nil, false
	}
	return o.ShowInactiveRoomOwners, true
}

// HasShowInactiveRoomOwners returns a boolean if a field has been set.
func (o *ProfileType) HasShowInactiveRoomOwners() bool {
	if o != nil && !IsNil(o.ShowInactiveRoomOwners) {
		return true
	}

	return false
}

// SetShowInactiveRoomOwners gets a reference to the given bool and assigns it to the ShowInactiveRoomOwners field.
func (o *ProfileType) SetShowInactiveRoomOwners(v bool) {
	o.ShowInactiveRoomOwners = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *ProfileType) GetStatusCode() ProfileStatusType {
	if o == nil || IsNil(o.StatusCode) {
		var ret ProfileStatusType
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetStatusCodeOk() (*ProfileStatusType, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *ProfileType) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given ProfileStatusType and assigns it to the StatusCode field.
func (o *ProfileType) SetStatusCode(v ProfileStatusType) {
	o.StatusCode = &v
}

// GetStayReservationInfoList returns the StayReservationInfoList field value if set, zero value otherwise.
func (o *ProfileType) GetStayReservationInfoList() ReservationStayHistoryFutureInfoType {
	if o == nil || IsNil(o.StayReservationInfoList) {
		var ret ReservationStayHistoryFutureInfoType
		return ret
	}
	return *o.StayReservationInfoList
}

// GetStayReservationInfoListOk returns a tuple with the StayReservationInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetStayReservationInfoListOk() (*ReservationStayHistoryFutureInfoType, bool) {
	if o == nil || IsNil(o.StayReservationInfoList) {
		return nil, false
	}
	return o.StayReservationInfoList, true
}

// HasStayReservationInfoList returns a boolean if a field has been set.
func (o *ProfileType) HasStayReservationInfoList() bool {
	if o != nil && !IsNil(o.StayReservationInfoList) {
		return true
	}

	return false
}

// SetStayReservationInfoList gets a reference to the given ReservationStayHistoryFutureInfoType and assigns it to the StayReservationInfoList field.
func (o *ProfileType) SetStayReservationInfoList(v ReservationStayHistoryFutureInfoType) {
	o.StayReservationInfoList = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *ProfileType) GetSubscriptions() []ProfileSubscriptionType {
	if o == nil || IsNil(o.Subscriptions) {
		var ret []ProfileSubscriptionType
		return ret
	}
	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetSubscriptionsOk() ([]ProfileSubscriptionType, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *ProfileType) HasSubscriptions() bool {
	if o != nil && !IsNil(o.Subscriptions) {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []ProfileSubscriptionType and assigns it to the Subscriptions field.
func (o *ProfileType) SetSubscriptions(v []ProfileSubscriptionType) {
	o.Subscriptions = v
}

// GetTaxInfo returns the TaxInfo field value if set, zero value otherwise.
func (o *ProfileType) GetTaxInfo() ProfileTaxInfoType {
	if o == nil || IsNil(o.TaxInfo) {
		var ret ProfileTaxInfoType
		return ret
	}
	return *o.TaxInfo
}

// GetTaxInfoOk returns a tuple with the TaxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetTaxInfoOk() (*ProfileTaxInfoType, bool) {
	if o == nil || IsNil(o.TaxInfo) {
		return nil, false
	}
	return o.TaxInfo, true
}

// HasTaxInfo returns a boolean if a field has been set.
func (o *ProfileType) HasTaxInfo() bool {
	if o != nil && !IsNil(o.TaxInfo) {
		return true
	}

	return false
}

// SetTaxInfo gets a reference to the given ProfileTaxInfoType and assigns it to the TaxInfo field.
func (o *ProfileType) SetTaxInfo(v ProfileTaxInfoType) {
	o.TaxInfo = &v
}

// GetTelephones returns the Telephones field value if set, zero value otherwise.
func (o *ProfileType) GetTelephones() CompanyProfileTypeTelephones {
	if o == nil || IsNil(o.Telephones) {
		var ret CompanyProfileTypeTelephones
		return ret
	}
	return *o.Telephones
}

// GetTelephonesOk returns a tuple with the Telephones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetTelephonesOk() (*CompanyProfileTypeTelephones, bool) {
	if o == nil || IsNil(o.Telephones) {
		return nil, false
	}
	return o.Telephones, true
}

// HasTelephones returns a boolean if a field has been set.
func (o *ProfileType) HasTelephones() bool {
	if o != nil && !IsNil(o.Telephones) {
		return true
	}

	return false
}

// SetTelephones gets a reference to the given CompanyProfileTypeTelephones and assigns it to the Telephones field.
func (o *ProfileType) SetTelephones(v CompanyProfileTypeTelephones) {
	o.Telephones = &v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *ProfileType) GetTerritory() string {
	if o == nil || IsNil(o.Territory) {
		var ret string
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetTerritoryOk() (*string, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *ProfileType) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given string and assigns it to the Territory field.
func (o *ProfileType) SetTerritory(v string) {
	o.Territory = &v
}

// GetTraceCode returns the TraceCode field value if set, zero value otherwise.
func (o *ProfileType) GetTraceCode() string {
	if o == nil || IsNil(o.TraceCode) {
		var ret string
		return ret
	}
	return *o.TraceCode
}

// GetTraceCodeOk returns a tuple with the TraceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetTraceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TraceCode) {
		return nil, false
	}
	return o.TraceCode, true
}

// HasTraceCode returns a boolean if a field has been set.
func (o *ProfileType) HasTraceCode() bool {
	if o != nil && !IsNil(o.TraceCode) {
		return true
	}

	return false
}

// SetTraceCode gets a reference to the given string and assigns it to the TraceCode field.
func (o *ProfileType) SetTraceCode(v string) {
	o.TraceCode = &v
}

// GetURLs returns the URLs field value if set, zero value otherwise.
func (o *ProfileType) GetURLs() CompanyProfileTypeURLs {
	if o == nil || IsNil(o.URLs) {
		var ret CompanyProfileTypeURLs
		return ret
	}
	return *o.URLs
}

// GetURLsOk returns a tuple with the URLs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetURLsOk() (*CompanyProfileTypeURLs, bool) {
	if o == nil || IsNil(o.URLs) {
		return nil, false
	}
	return o.URLs, true
}

// HasURLs returns a boolean if a field has been set.
func (o *ProfileType) HasURLs() bool {
	if o != nil && !IsNil(o.URLs) {
		return true
	}

	return false
}

// SetURLs gets a reference to the given CompanyProfileTypeURLs and assigns it to the URLs field.
func (o *ProfileType) SetURLs(v CompanyProfileTypeURLs) {
	o.URLs = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *ProfileType) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *ProfileType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *ProfileType) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

// GetWebUserAccounts returns the WebUserAccounts field value if set, zero value otherwise.
func (o *ProfileType) GetWebUserAccounts() []WebUserAccountType {
	if o == nil || IsNil(o.WebUserAccounts) {
		var ret []WebUserAccountType
		return ret
	}
	return o.WebUserAccounts
}

// GetWebUserAccountsOk returns a tuple with the WebUserAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileType) GetWebUserAccountsOk() ([]WebUserAccountType, bool) {
	if o == nil || IsNil(o.WebUserAccounts) {
		return nil, false
	}
	return o.WebUserAccounts, true
}

// HasWebUserAccounts returns a boolean if a field has been set.
func (o *ProfileType) HasWebUserAccounts() bool {
	if o != nil && !IsNil(o.WebUserAccounts) {
		return true
	}

	return false
}

// SetWebUserAccounts gets a reference to the given []WebUserAccountType and assigns it to the WebUserAccounts field.
func (o *ProfileType) SetWebUserAccounts(v []WebUserAccountType) {
	o.WebUserAccounts = v
}

func (o ProfileType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.BusinessSegments) {
		toSerialize["businessSegments"] = o.BusinessSegments
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.CommissionInfoList) {
		toSerialize["commissionInfoList"] = o.CommissionInfoList
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.ECertificates) {
		toSerialize["eCertificates"] = o.ECertificates
	}
	if !IsNil(o.EligibleForFiscalFolio) {
		toSerialize["eligibleForFiscalFolio"] = o.EligibleForFiscalFolio
	}
	if !IsNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	if !IsNil(o.FiscalGuestType) {
		toSerialize["fiscalGuestType"] = o.FiscalGuestType
	}
	if !IsNil(o.GdsNegotiatedRates) {
		toSerialize["gdsNegotiatedRates"] = o.GdsNegotiatedRates
	}
	if !IsNil(o.HasCommission) {
		toSerialize["hasCommission"] = o.HasCommission
	}
	if !IsNil(o.InfluenceCode) {
		toSerialize["influenceCode"] = o.InfluenceCode
	}
	if !IsNil(o.InheritedNegRates) {
		toSerialize["inheritedNegRates"] = o.InheritedNegRates
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastStayInfo) {
		toSerialize["lastStayInfo"] = o.LastStayInfo
	}
	if !IsNil(o.LocalizationGuestType) {
		toSerialize["localizationGuestType"] = o.LocalizationGuestType
	}
	if !IsNil(o.MailingActions) {
		toSerialize["mailingActions"] = o.MailingActions
	}
	if !IsNil(o.MarkAsRecentlyAccessed) {
		toSerialize["markAsRecentlyAccessed"] = o.MarkAsRecentlyAccessed
	}
	if !IsNil(o.MarkForHistory) {
		toSerialize["markForHistory"] = o.MarkForHistory
	}
	if !IsNil(o.NegotiatedRates) {
		toSerialize["negotiatedRates"] = o.NegotiatedRates
	}
	if !IsNil(o.OwnerCode) {
		toSerialize["ownerCode"] = o.OwnerCode
	}
	if !IsNil(o.PreferenceCollection) {
		toSerialize["preferenceCollection"] = o.PreferenceCollection
	}
	if !IsNil(o.PrivacyInfo) {
		toSerialize["privacyInfo"] = o.PrivacyInfo
	}
	if !IsNil(o.ProfileAccessType) {
		toSerialize["profileAccessType"] = o.ProfileAccessType
	}
	if !IsNil(o.ProfileDeliveryMethods) {
		toSerialize["profileDeliveryMethods"] = o.ProfileDeliveryMethods
	}
	if !IsNil(o.ProfileImage) {
		toSerialize["profileImage"] = o.ProfileImage
	}
	if !IsNil(o.ProfileIndicators) {
		toSerialize["profileIndicators"] = o.ProfileIndicators
	}
	if !IsNil(o.ProfileMemberships) {
		toSerialize["profileMemberships"] = o.ProfileMemberships
	}
	if !IsNil(o.ProfileRestrictions) {
		toSerialize["profileRestrictions"] = o.ProfileRestrictions
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.ProtectedBy) {
		toSerialize["protectedBy"] = o.ProtectedBy
	}
	if !IsNil(o.RegisteredProperty) {
		toSerialize["registeredProperty"] = o.RegisteredProperty
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.RelationshipsSummary) {
		toSerialize["relationshipsSummary"] = o.RelationshipsSummary
	}
	if !IsNil(o.RequestForHotel) {
		toSerialize["requestForHotel"] = o.RequestForHotel
	}
	if !IsNil(o.RoomOwnershipsList) {
		toSerialize["roomOwnershipsList"] = o.RoomOwnershipsList
	}
	if !IsNil(o.SalesInfo) {
		toSerialize["salesInfo"] = o.SalesInfo
	}
	if !IsNil(o.ShowInactiveRoomOwners) {
		toSerialize["showInactiveRoomOwners"] = o.ShowInactiveRoomOwners
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.StayReservationInfoList) {
		toSerialize["stayReservationInfoList"] = o.StayReservationInfoList
	}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if !IsNil(o.TaxInfo) {
		toSerialize["taxInfo"] = o.TaxInfo
	}
	if !IsNil(o.Telephones) {
		toSerialize["telephones"] = o.Telephones
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	if !IsNil(o.TraceCode) {
		toSerialize["traceCode"] = o.TraceCode
	}
	if !IsNil(o.URLs) {
		toSerialize["uRLs"] = o.URLs
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.WebUserAccounts) {
		toSerialize["webUserAccounts"] = o.WebUserAccounts
	}
	return toSerialize, nil
}

type NullableProfileType struct {
	value *ProfileType
	isSet bool
}

func (v NullableProfileType) Get() *ProfileType {
	return v.value
}

func (v *NullableProfileType) Set(val *ProfileType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileType(val *ProfileType) *NullableProfileType {
	return &NullableProfileType{value: val, isSet: true}
}

func (v NullableProfileType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


