/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StayRecordDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayRecordDetails{}

// StayRecordDetails Complex type that contains stay record details
type StayRecordDetails struct {
	StayRecord *StayRecord `json:"stayRecord,omitempty"`
}

// NewStayRecordDetails instantiates a new StayRecordDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayRecordDetails() *StayRecordDetails {
	this := StayRecordDetails{}
	return &this
}

// NewStayRecordDetailsWithDefaults instantiates a new StayRecordDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayRecordDetailsWithDefaults() *StayRecordDetails {
	this := StayRecordDetails{}
	return &this
}

// GetStayRecord returns the StayRecord field value if set, zero value otherwise.
func (o *StayRecordDetails) GetStayRecord() StayRecord {
	if o == nil || IsNil(o.StayRecord) {
		var ret StayRecord
		return ret
	}
	return *o.StayRecord
}

// GetStayRecordOk returns a tuple with the StayRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordDetails) GetStayRecordOk() (*StayRecord, bool) {
	if o == nil || IsNil(o.StayRecord) {
		return nil, false
	}
	return o.StayRecord, true
}

// HasStayRecord returns a boolean if a field has been set.
func (o *StayRecordDetails) HasStayRecord() bool {
	if o != nil && !IsNil(o.StayRecord) {
		return true
	}

	return false
}

// SetStayRecord gets a reference to the given StayRecord and assigns it to the StayRecord field.
func (o *StayRecordDetails) SetStayRecord(v StayRecord) {
	o.StayRecord = &v
}

func (o StayRecordDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayRecordDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StayRecord) {
		toSerialize["stayRecord"] = o.StayRecord
	}
	return toSerialize, nil
}

type NullableStayRecordDetails struct {
	value *StayRecordDetails
	isSet bool
}

func (v NullableStayRecordDetails) Get() *StayRecordDetails {
	return v.value
}

func (v *NullableStayRecordDetails) Set(val *StayRecordDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableStayRecordDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableStayRecordDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayRecordDetails(val *StayRecordDetails) *NullableStayRecordDetails {
	return &NullableStayRecordDetails{value: val, isSet: true}
}

func (v NullableStayRecordDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayRecordDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


