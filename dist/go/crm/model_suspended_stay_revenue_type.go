/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the SuspendedStayRevenueType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedStayRevenueType{}

// SuspendedStayRevenueType Suspended Stay Revenue information.
type SuspendedStayRevenueType struct {
	// Suspended Stay Record ID.
	SuspendedStayRecordId *string `json:"suspendedStayRecordId,omitempty"`
	// Transaction date of the revenue.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Indicates the type of revenue.
	RevenueType *string `json:"revenueType,omitempty"`
	// Revenue amount.
	Amount *float32 `json:"amount,omitempty"`
}

// NewSuspendedStayRevenueType instantiates a new SuspendedStayRevenueType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedStayRevenueType() *SuspendedStayRevenueType {
	this := SuspendedStayRevenueType{}
	return &this
}

// NewSuspendedStayRevenueTypeWithDefaults instantiates a new SuspendedStayRevenueType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedStayRevenueTypeWithDefaults() *SuspendedStayRevenueType {
	this := SuspendedStayRevenueType{}
	return &this
}

// GetSuspendedStayRecordId returns the SuspendedStayRecordId field value if set, zero value otherwise.
func (o *SuspendedStayRevenueType) GetSuspendedStayRecordId() string {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		var ret string
		return ret
	}
	return *o.SuspendedStayRecordId
}

// GetSuspendedStayRecordIdOk returns a tuple with the SuspendedStayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayRevenueType) GetSuspendedStayRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		return nil, false
	}
	return o.SuspendedStayRecordId, true
}

// HasSuspendedStayRecordId returns a boolean if a field has been set.
func (o *SuspendedStayRevenueType) HasSuspendedStayRecordId() bool {
	if o != nil && !IsNil(o.SuspendedStayRecordId) {
		return true
	}

	return false
}

// SetSuspendedStayRecordId gets a reference to the given string and assigns it to the SuspendedStayRecordId field.
func (o *SuspendedStayRevenueType) SetSuspendedStayRecordId(v string) {
	o.SuspendedStayRecordId = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *SuspendedStayRevenueType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayRevenueType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *SuspendedStayRevenueType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *SuspendedStayRevenueType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetRevenueType returns the RevenueType field value if set, zero value otherwise.
func (o *SuspendedStayRevenueType) GetRevenueType() string {
	if o == nil || IsNil(o.RevenueType) {
		var ret string
		return ret
	}
	return *o.RevenueType
}

// GetRevenueTypeOk returns a tuple with the RevenueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayRevenueType) GetRevenueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueType) {
		return nil, false
	}
	return o.RevenueType, true
}

// HasRevenueType returns a boolean if a field has been set.
func (o *SuspendedStayRevenueType) HasRevenueType() bool {
	if o != nil && !IsNil(o.RevenueType) {
		return true
	}

	return false
}

// SetRevenueType gets a reference to the given string and assigns it to the RevenueType field.
func (o *SuspendedStayRevenueType) SetRevenueType(v string) {
	o.RevenueType = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SuspendedStayRevenueType) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayRevenueType) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SuspendedStayRevenueType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *SuspendedStayRevenueType) SetAmount(v float32) {
	o.Amount = &v
}

func (o SuspendedStayRevenueType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedStayRevenueType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedStayRecordId) {
		toSerialize["suspendedStayRecordId"] = o.SuspendedStayRecordId
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.RevenueType) {
		toSerialize["revenueType"] = o.RevenueType
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableSuspendedStayRevenueType struct {
	value *SuspendedStayRevenueType
	isSet bool
}

func (v NullableSuspendedStayRevenueType) Get() *SuspendedStayRevenueType {
	return v.value
}

func (v *NullableSuspendedStayRevenueType) Set(val *SuspendedStayRevenueType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedStayRevenueType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedStayRevenueType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedStayRevenueType(val *SuspendedStayRevenueType) *NullableSuspendedStayRevenueType {
	return &NullableSuspendedStayRevenueType{value: val, isSet: true}
}

func (v NullableSuspendedStayRevenueType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedStayRevenueType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


