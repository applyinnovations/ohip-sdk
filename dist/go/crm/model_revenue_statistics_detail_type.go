/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the RevenueStatisticsDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevenueStatisticsDetailType{}

// RevenueStatisticsDetailType The different statistics from the revenue of a profile.
type RevenueStatisticsDetailType struct {
	// Central Revenue Type for Stay.
	CentralRevenue *float32 `json:"centralRevenue,omitempty"`
	// Name Of The Guest.
	GuestName *string `json:"guestName,omitempty"`
	// Hotel of the reservation.
	HotelId *string `json:"hotelId,omitempty"`
	// Local Revenue Type for Stay.
	LocalRevenue *float32 `json:"localRevenue,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	RevenueBuckets *RevenueBucketListType `json:"revenueBuckets,omitempty"`
	// Revenue Type for Stay.
	RevenueType *string `json:"revenueType,omitempty"`
	StayTimeSpan *TimeSpanType `json:"stayTimeSpan,omitempty"`
}

// NewRevenueStatisticsDetailType instantiates a new RevenueStatisticsDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevenueStatisticsDetailType() *RevenueStatisticsDetailType {
	this := RevenueStatisticsDetailType{}
	return &this
}

// NewRevenueStatisticsDetailTypeWithDefaults instantiates a new RevenueStatisticsDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevenueStatisticsDetailTypeWithDefaults() *RevenueStatisticsDetailType {
	this := RevenueStatisticsDetailType{}
	return &this
}

// GetCentralRevenue returns the CentralRevenue field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetCentralRevenue() float32 {
	if o == nil || IsNil(o.CentralRevenue) {
		var ret float32
		return ret
	}
	return *o.CentralRevenue
}

// GetCentralRevenueOk returns a tuple with the CentralRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetCentralRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.CentralRevenue) {
		return nil, false
	}
	return o.CentralRevenue, true
}

// HasCentralRevenue returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasCentralRevenue() bool {
	if o != nil && !IsNil(o.CentralRevenue) {
		return true
	}

	return false
}

// SetCentralRevenue gets a reference to the given float32 and assigns it to the CentralRevenue field.
func (o *RevenueStatisticsDetailType) SetCentralRevenue(v float32) {
	o.CentralRevenue = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *RevenueStatisticsDetailType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RevenueStatisticsDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLocalRevenue returns the LocalRevenue field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetLocalRevenue() float32 {
	if o == nil || IsNil(o.LocalRevenue) {
		var ret float32
		return ret
	}
	return *o.LocalRevenue
}

// GetLocalRevenueOk returns a tuple with the LocalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetLocalRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.LocalRevenue) {
		return nil, false
	}
	return o.LocalRevenue, true
}

// HasLocalRevenue returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasLocalRevenue() bool {
	if o != nil && !IsNil(o.LocalRevenue) {
		return true
	}

	return false
}

// SetLocalRevenue gets a reference to the given float32 and assigns it to the LocalRevenue field.
func (o *RevenueStatisticsDetailType) SetLocalRevenue(v float32) {
	o.LocalRevenue = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *RevenueStatisticsDetailType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *RevenueStatisticsDetailType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetRevenueBuckets returns the RevenueBuckets field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetRevenueBuckets() RevenueBucketListType {
	if o == nil || IsNil(o.RevenueBuckets) {
		var ret RevenueBucketListType
		return ret
	}
	return *o.RevenueBuckets
}

// GetRevenueBucketsOk returns a tuple with the RevenueBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetRevenueBucketsOk() (*RevenueBucketListType, bool) {
	if o == nil || IsNil(o.RevenueBuckets) {
		return nil, false
	}
	return o.RevenueBuckets, true
}

// HasRevenueBuckets returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasRevenueBuckets() bool {
	if o != nil && !IsNil(o.RevenueBuckets) {
		return true
	}

	return false
}

// SetRevenueBuckets gets a reference to the given RevenueBucketListType and assigns it to the RevenueBuckets field.
func (o *RevenueStatisticsDetailType) SetRevenueBuckets(v RevenueBucketListType) {
	o.RevenueBuckets = &v
}

// GetRevenueType returns the RevenueType field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetRevenueType() string {
	if o == nil || IsNil(o.RevenueType) {
		var ret string
		return ret
	}
	return *o.RevenueType
}

// GetRevenueTypeOk returns a tuple with the RevenueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetRevenueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueType) {
		return nil, false
	}
	return o.RevenueType, true
}

// HasRevenueType returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasRevenueType() bool {
	if o != nil && !IsNil(o.RevenueType) {
		return true
	}

	return false
}

// SetRevenueType gets a reference to the given string and assigns it to the RevenueType field.
func (o *RevenueStatisticsDetailType) SetRevenueType(v string) {
	o.RevenueType = &v
}

// GetStayTimeSpan returns the StayTimeSpan field value if set, zero value otherwise.
func (o *RevenueStatisticsDetailType) GetStayTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.StayTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.StayTimeSpan
}

// GetStayTimeSpanOk returns a tuple with the StayTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsDetailType) GetStayTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.StayTimeSpan) {
		return nil, false
	}
	return o.StayTimeSpan, true
}

// HasStayTimeSpan returns a boolean if a field has been set.
func (o *RevenueStatisticsDetailType) HasStayTimeSpan() bool {
	if o != nil && !IsNil(o.StayTimeSpan) {
		return true
	}

	return false
}

// SetStayTimeSpan gets a reference to the given TimeSpanType and assigns it to the StayTimeSpan field.
func (o *RevenueStatisticsDetailType) SetStayTimeSpan(v TimeSpanType) {
	o.StayTimeSpan = &v
}

func (o RevenueStatisticsDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevenueStatisticsDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CentralRevenue) {
		toSerialize["centralRevenue"] = o.CentralRevenue
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.LocalRevenue) {
		toSerialize["localRevenue"] = o.LocalRevenue
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.RevenueBuckets) {
		toSerialize["revenueBuckets"] = o.RevenueBuckets
	}
	if !IsNil(o.RevenueType) {
		toSerialize["revenueType"] = o.RevenueType
	}
	if !IsNil(o.StayTimeSpan) {
		toSerialize["stayTimeSpan"] = o.StayTimeSpan
	}
	return toSerialize, nil
}

type NullableRevenueStatisticsDetailType struct {
	value *RevenueStatisticsDetailType
	isSet bool
}

func (v NullableRevenueStatisticsDetailType) Get() *RevenueStatisticsDetailType {
	return v.value
}

func (v *NullableRevenueStatisticsDetailType) Set(val *RevenueStatisticsDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableRevenueStatisticsDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableRevenueStatisticsDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevenueStatisticsDetailType(val *RevenueStatisticsDetailType) *NullableRevenueStatisticsDetailType {
	return &NullableRevenueStatisticsDetailType{value: val, isSet: true}
}

func (v NullableRevenueStatisticsDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevenueStatisticsDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


