/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileDistributionExpressionParameterType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDistributionExpressionParameterType{}

// ProfileDistributionExpressionParameterType struct for ProfileDistributionExpressionParameterType
type ProfileDistributionExpressionParameterType struct {
	Parameter []string `json:"parameter,omitempty"`
	FunctionIdOne *float32 `json:"functionIdOne,omitempty"`
	FunctionIdTwo *float32 `json:"functionIdTwo,omitempty"`
}

// NewProfileDistributionExpressionParameterType instantiates a new ProfileDistributionExpressionParameterType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDistributionExpressionParameterType() *ProfileDistributionExpressionParameterType {
	this := ProfileDistributionExpressionParameterType{}
	return &this
}

// NewProfileDistributionExpressionParameterTypeWithDefaults instantiates a new ProfileDistributionExpressionParameterType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDistributionExpressionParameterTypeWithDefaults() *ProfileDistributionExpressionParameterType {
	this := ProfileDistributionExpressionParameterType{}
	return &this
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionParameterType) GetParameter() []string {
	if o == nil || IsNil(o.Parameter) {
		var ret []string
		return ret
	}
	return o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionParameterType) GetParameterOk() ([]string, bool) {
	if o == nil || IsNil(o.Parameter) {
		return nil, false
	}
	return o.Parameter, true
}

// HasParameter returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionParameterType) HasParameter() bool {
	if o != nil && !IsNil(o.Parameter) {
		return true
	}

	return false
}

// SetParameter gets a reference to the given []string and assigns it to the Parameter field.
func (o *ProfileDistributionExpressionParameterType) SetParameter(v []string) {
	o.Parameter = v
}

// GetFunctionIdOne returns the FunctionIdOne field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionParameterType) GetFunctionIdOne() float32 {
	if o == nil || IsNil(o.FunctionIdOne) {
		var ret float32
		return ret
	}
	return *o.FunctionIdOne
}

// GetFunctionIdOneOk returns a tuple with the FunctionIdOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionParameterType) GetFunctionIdOneOk() (*float32, bool) {
	if o == nil || IsNil(o.FunctionIdOne) {
		return nil, false
	}
	return o.FunctionIdOne, true
}

// HasFunctionIdOne returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionParameterType) HasFunctionIdOne() bool {
	if o != nil && !IsNil(o.FunctionIdOne) {
		return true
	}

	return false
}

// SetFunctionIdOne gets a reference to the given float32 and assigns it to the FunctionIdOne field.
func (o *ProfileDistributionExpressionParameterType) SetFunctionIdOne(v float32) {
	o.FunctionIdOne = &v
}

// GetFunctionIdTwo returns the FunctionIdTwo field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionParameterType) GetFunctionIdTwo() float32 {
	if o == nil || IsNil(o.FunctionIdTwo) {
		var ret float32
		return ret
	}
	return *o.FunctionIdTwo
}

// GetFunctionIdTwoOk returns a tuple with the FunctionIdTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionParameterType) GetFunctionIdTwoOk() (*float32, bool) {
	if o == nil || IsNil(o.FunctionIdTwo) {
		return nil, false
	}
	return o.FunctionIdTwo, true
}

// HasFunctionIdTwo returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionParameterType) HasFunctionIdTwo() bool {
	if o != nil && !IsNil(o.FunctionIdTwo) {
		return true
	}

	return false
}

// SetFunctionIdTwo gets a reference to the given float32 and assigns it to the FunctionIdTwo field.
func (o *ProfileDistributionExpressionParameterType) SetFunctionIdTwo(v float32) {
	o.FunctionIdTwo = &v
}

func (o ProfileDistributionExpressionParameterType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDistributionExpressionParameterType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Parameter) {
		toSerialize["parameter"] = o.Parameter
	}
	if !IsNil(o.FunctionIdOne) {
		toSerialize["functionIdOne"] = o.FunctionIdOne
	}
	if !IsNil(o.FunctionIdTwo) {
		toSerialize["functionIdTwo"] = o.FunctionIdTwo
	}
	return toSerialize, nil
}

type NullableProfileDistributionExpressionParameterType struct {
	value *ProfileDistributionExpressionParameterType
	isSet bool
}

func (v NullableProfileDistributionExpressionParameterType) Get() *ProfileDistributionExpressionParameterType {
	return v.value
}

func (v *NullableProfileDistributionExpressionParameterType) Set(val *ProfileDistributionExpressionParameterType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDistributionExpressionParameterType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDistributionExpressionParameterType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDistributionExpressionParameterType(val *ProfileDistributionExpressionParameterType) *NullableProfileDistributionExpressionParameterType {
	return &NullableProfileDistributionExpressionParameterType{value: val, isSet: true}
}

func (v NullableProfileDistributionExpressionParameterType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDistributionExpressionParameterType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


