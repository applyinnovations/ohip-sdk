/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipAwardListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipAwardListType{}

// MembershipAwardListType Information related to Member Award Issue List.
type MembershipAwardListType struct {
	// Card number of the membership.
	MembershipId *float32 `json:"membershipId,omitempty"`
	// Membership type for which awards are defined.
	MembershipType *string `json:"membershipType,omitempty"`
	// Level of this Membership Type.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Name to be displayed on the membership card.
	NameOnCard *string `json:"nameOnCard,omitempty"`
	// Joined date on the Card.
	JoinDate *string `json:"joinDate,omitempty"`
	// Expiry date on the Card.
	ExpireDate *string `json:"expireDate,omitempty"`
	// Indicates Membership Card Number.
	MembershipCardNo *string `json:"membershipCardNo,omitempty"`
	// Total award points available for redemption.
	TotalAvailablePoints *float32 `json:"totalAvailablePoints,omitempty"`
	// Property at which the award was issued.
	HotelId *string `json:"hotelId,omitempty"`
	// An identifying number of the award, assigned by the system when the award was issued.
	AwardNumber *float32 `json:"awardNumber,omitempty"`
	// Number of points required by the award.
	AwardPoints *float32 `json:"awardPoints,omitempty"`
	// Indicates member is below the threshold limit or not to request award.
	ThresholdPoints *float32 `json:"thresholdPoints,omitempty"`
	// Code assigned to this membership award.
	AwardCode *string `json:"awardCode,omitempty"`
	// The cancel days, set up in awards configuration that establishes the number of days before arrival when a reservation may be cancelled without an award points penalty.
	CancelDays *int32 `json:"cancelDays,omitempty"`
	// Date when the award was issued
	DateAwarded *string `json:"dateAwarded,omitempty"`
	// Reservation confirmation number.
	BookingNumber *string `json:"bookingNumber,omitempty"`
	// Property Reservation number.
	HotelBookingNumber *string `json:"hotelBookingNumber,omitempty"`
	// The arrival date of the stay for when the award is associated.
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	// The award points that will be deducted (based on a cancel days restriction) if the award is cancelled. (Cancel days, set up in awards configuration, and establish the number of days before arrival when a reservation may be cancelled without an award points penalty.)
	CancelPenaltyPoints *int32 `json:"cancelPenaltyPoints,omitempty"`
	// If the award was cancelled, the system-generated award cancellation number appears here.
	AwardCancellationNumber *int32 `json:"awardCancellationNumber,omitempty"`
	// If the reservation associated with the award was cancelled, the reservation cancellation date appears here.
	AwardCancelDate *string `json:"awardCancelDate,omitempty"`
	// The number of points actually deducted from the member's total award points if there is a penalty points restriction associated with the award cancellation.
	ActualCancelPoints *float32 `json:"actualCancelPoints,omitempty"`
	// If the reservation associated with the award was cancelled, the reservation cancellation number appears here.
	ReservationCancellationNumber *string `json:"reservationCancellationNumber,omitempty"`
	// If this award was included on a statement, the statement ID appears here. The field is blank if the award has not yet been reported on a statement
	StatementId *int32 `json:"statementId,omitempty"`
	// If this award was included on a statement, the cancel statement ID appears here. The field is blank if the award has not yet been reported on a statement
	CancelStatementID *int32 `json:"cancelStatementID,omitempty"`
	// If this award was included on a statement, the member statement ID appears here. The field is blank if the award has not yet been reported on a statement
	MemberStatementId *int32 `json:"memberStatementId,omitempty"`
	// If this award was included on a statement, the cancel member statement ID appears here. The field is blank if the award has not yet been reported on a statement
	CancelMemberStatementID *int32 `json:"cancelMemberStatementID,omitempty"`
	// Number of nights cancel policy is applicable.
	NumberOfNights *int32 `json:"numberOfNights,omitempty"`
	// The date of the reservation associated with the award. There may be more than one date (multiple nights) associated with award
	StayDate *string `json:"stayDate,omitempty"`
	// The date of the departure of the reservation associated with the award. There may be more than one date (multiple nights) associated with award
	DepartureDate *string `json:"departureDate,omitempty"`
	// Type of cancel policy.
	CancelPolicyType *string `json:"cancelPolicyType,omitempty"`
	// The source for the reservation associated with the award.
	AwardSource *string `json:"awardSource,omitempty"`
	// Total calculated points to cancel an issued award.
	CalculatedCancelPoints *float32 `json:"calculatedCancelPoints,omitempty"`
	AwardBasedOn *MembershipAwardBasedOnType `json:"awardBasedOn,omitempty"`
	// Indicates PMS Reservation Number.
	PmsResvNo *string `json:"pmsResvNo,omitempty"`
	// Indicates CRS Booking Number.
	CrsBookNo *string `json:"crsBookNo,omitempty"`
	// Indicates the Product associated with the award.
	Product *string `json:"product,omitempty"`
	// Rate plan code associated with the award.
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
}

// NewMembershipAwardListType instantiates a new MembershipAwardListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipAwardListType() *MembershipAwardListType {
	this := MembershipAwardListType{}
	return &this
}

// NewMembershipAwardListTypeWithDefaults instantiates a new MembershipAwardListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipAwardListTypeWithDefaults() *MembershipAwardListType {
	this := MembershipAwardListType{}
	return &this
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetMembershipId() float32 {
	if o == nil || IsNil(o.MembershipId) {
		var ret float32
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetMembershipIdOk() (*float32, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given float32 and assigns it to the MembershipId field.
func (o *MembershipAwardListType) SetMembershipId(v float32) {
	o.MembershipId = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *MembershipAwardListType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *MembershipAwardListType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetNameOnCard returns the NameOnCard field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetNameOnCard() string {
	if o == nil || IsNil(o.NameOnCard) {
		var ret string
		return ret
	}
	return *o.NameOnCard
}

// GetNameOnCardOk returns a tuple with the NameOnCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetNameOnCardOk() (*string, bool) {
	if o == nil || IsNil(o.NameOnCard) {
		return nil, false
	}
	return o.NameOnCard, true
}

// HasNameOnCard returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasNameOnCard() bool {
	if o != nil && !IsNil(o.NameOnCard) {
		return true
	}

	return false
}

// SetNameOnCard gets a reference to the given string and assigns it to the NameOnCard field.
func (o *MembershipAwardListType) SetNameOnCard(v string) {
	o.NameOnCard = &v
}

// GetJoinDate returns the JoinDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetJoinDate() string {
	if o == nil || IsNil(o.JoinDate) {
		var ret string
		return ret
	}
	return *o.JoinDate
}

// GetJoinDateOk returns a tuple with the JoinDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetJoinDateOk() (*string, bool) {
	if o == nil || IsNil(o.JoinDate) {
		return nil, false
	}
	return o.JoinDate, true
}

// HasJoinDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasJoinDate() bool {
	if o != nil && !IsNil(o.JoinDate) {
		return true
	}

	return false
}

// SetJoinDate gets a reference to the given string and assigns it to the JoinDate field.
func (o *MembershipAwardListType) SetJoinDate(v string) {
	o.JoinDate = &v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetExpireDate() string {
	if o == nil || IsNil(o.ExpireDate) {
		var ret string
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetExpireDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireDate) {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasExpireDate() bool {
	if o != nil && !IsNil(o.ExpireDate) {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given string and assigns it to the ExpireDate field.
func (o *MembershipAwardListType) SetExpireDate(v string) {
	o.ExpireDate = &v
}

// GetMembershipCardNo returns the MembershipCardNo field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetMembershipCardNo() string {
	if o == nil || IsNil(o.MembershipCardNo) {
		var ret string
		return ret
	}
	return *o.MembershipCardNo
}

// GetMembershipCardNoOk returns a tuple with the MembershipCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetMembershipCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipCardNo) {
		return nil, false
	}
	return o.MembershipCardNo, true
}

// HasMembershipCardNo returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasMembershipCardNo() bool {
	if o != nil && !IsNil(o.MembershipCardNo) {
		return true
	}

	return false
}

// SetMembershipCardNo gets a reference to the given string and assigns it to the MembershipCardNo field.
func (o *MembershipAwardListType) SetMembershipCardNo(v string) {
	o.MembershipCardNo = &v
}

// GetTotalAvailablePoints returns the TotalAvailablePoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetTotalAvailablePoints() float32 {
	if o == nil || IsNil(o.TotalAvailablePoints) {
		var ret float32
		return ret
	}
	return *o.TotalAvailablePoints
}

// GetTotalAvailablePointsOk returns a tuple with the TotalAvailablePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetTotalAvailablePointsOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalAvailablePoints) {
		return nil, false
	}
	return o.TotalAvailablePoints, true
}

// HasTotalAvailablePoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasTotalAvailablePoints() bool {
	if o != nil && !IsNil(o.TotalAvailablePoints) {
		return true
	}

	return false
}

// SetTotalAvailablePoints gets a reference to the given float32 and assigns it to the TotalAvailablePoints field.
func (o *MembershipAwardListType) SetTotalAvailablePoints(v float32) {
	o.TotalAvailablePoints = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MembershipAwardListType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetAwardNumber returns the AwardNumber field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardNumber() float32 {
	if o == nil || IsNil(o.AwardNumber) {
		var ret float32
		return ret
	}
	return *o.AwardNumber
}

// GetAwardNumberOk returns a tuple with the AwardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.AwardNumber) {
		return nil, false
	}
	return o.AwardNumber, true
}

// HasAwardNumber returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardNumber() bool {
	if o != nil && !IsNil(o.AwardNumber) {
		return true
	}

	return false
}

// SetAwardNumber gets a reference to the given float32 and assigns it to the AwardNumber field.
func (o *MembershipAwardListType) SetAwardNumber(v float32) {
	o.AwardNumber = &v
}

// GetAwardPoints returns the AwardPoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardPoints() float32 {
	if o == nil || IsNil(o.AwardPoints) {
		var ret float32
		return ret
	}
	return *o.AwardPoints
}

// GetAwardPointsOk returns a tuple with the AwardPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.AwardPoints) {
		return nil, false
	}
	return o.AwardPoints, true
}

// HasAwardPoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardPoints() bool {
	if o != nil && !IsNil(o.AwardPoints) {
		return true
	}

	return false
}

// SetAwardPoints gets a reference to the given float32 and assigns it to the AwardPoints field.
func (o *MembershipAwardListType) SetAwardPoints(v float32) {
	o.AwardPoints = &v
}

// GetThresholdPoints returns the ThresholdPoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetThresholdPoints() float32 {
	if o == nil || IsNil(o.ThresholdPoints) {
		var ret float32
		return ret
	}
	return *o.ThresholdPoints
}

// GetThresholdPointsOk returns a tuple with the ThresholdPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetThresholdPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ThresholdPoints) {
		return nil, false
	}
	return o.ThresholdPoints, true
}

// HasThresholdPoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasThresholdPoints() bool {
	if o != nil && !IsNil(o.ThresholdPoints) {
		return true
	}

	return false
}

// SetThresholdPoints gets a reference to the given float32 and assigns it to the ThresholdPoints field.
func (o *MembershipAwardListType) SetThresholdPoints(v float32) {
	o.ThresholdPoints = &v
}

// GetAwardCode returns the AwardCode field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardCode() string {
	if o == nil || IsNil(o.AwardCode) {
		var ret string
		return ret
	}
	return *o.AwardCode
}

// GetAwardCodeOk returns a tuple with the AwardCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AwardCode) {
		return nil, false
	}
	return o.AwardCode, true
}

// HasAwardCode returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardCode() bool {
	if o != nil && !IsNil(o.AwardCode) {
		return true
	}

	return false
}

// SetAwardCode gets a reference to the given string and assigns it to the AwardCode field.
func (o *MembershipAwardListType) SetAwardCode(v string) {
	o.AwardCode = &v
}

// GetCancelDays returns the CancelDays field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCancelDays() int32 {
	if o == nil || IsNil(o.CancelDays) {
		var ret int32
		return ret
	}
	return *o.CancelDays
}

// GetCancelDaysOk returns a tuple with the CancelDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCancelDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelDays) {
		return nil, false
	}
	return o.CancelDays, true
}

// HasCancelDays returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCancelDays() bool {
	if o != nil && !IsNil(o.CancelDays) {
		return true
	}

	return false
}

// SetCancelDays gets a reference to the given int32 and assigns it to the CancelDays field.
func (o *MembershipAwardListType) SetCancelDays(v int32) {
	o.CancelDays = &v
}

// GetDateAwarded returns the DateAwarded field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetDateAwarded() string {
	if o == nil || IsNil(o.DateAwarded) {
		var ret string
		return ret
	}
	return *o.DateAwarded
}

// GetDateAwardedOk returns a tuple with the DateAwarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetDateAwardedOk() (*string, bool) {
	if o == nil || IsNil(o.DateAwarded) {
		return nil, false
	}
	return o.DateAwarded, true
}

// HasDateAwarded returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasDateAwarded() bool {
	if o != nil && !IsNil(o.DateAwarded) {
		return true
	}

	return false
}

// SetDateAwarded gets a reference to the given string and assigns it to the DateAwarded field.
func (o *MembershipAwardListType) SetDateAwarded(v string) {
	o.DateAwarded = &v
}

// GetBookingNumber returns the BookingNumber field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetBookingNumber() string {
	if o == nil || IsNil(o.BookingNumber) {
		var ret string
		return ret
	}
	return *o.BookingNumber
}

// GetBookingNumberOk returns a tuple with the BookingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetBookingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BookingNumber) {
		return nil, false
	}
	return o.BookingNumber, true
}

// HasBookingNumber returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasBookingNumber() bool {
	if o != nil && !IsNil(o.BookingNumber) {
		return true
	}

	return false
}

// SetBookingNumber gets a reference to the given string and assigns it to the BookingNumber field.
func (o *MembershipAwardListType) SetBookingNumber(v string) {
	o.BookingNumber = &v
}

// GetHotelBookingNumber returns the HotelBookingNumber field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetHotelBookingNumber() string {
	if o == nil || IsNil(o.HotelBookingNumber) {
		var ret string
		return ret
	}
	return *o.HotelBookingNumber
}

// GetHotelBookingNumberOk returns a tuple with the HotelBookingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetHotelBookingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.HotelBookingNumber) {
		return nil, false
	}
	return o.HotelBookingNumber, true
}

// HasHotelBookingNumber returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasHotelBookingNumber() bool {
	if o != nil && !IsNil(o.HotelBookingNumber) {
		return true
	}

	return false
}

// SetHotelBookingNumber gets a reference to the given string and assigns it to the HotelBookingNumber field.
func (o *MembershipAwardListType) SetHotelBookingNumber(v string) {
	o.HotelBookingNumber = &v
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *MembershipAwardListType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetCancelPenaltyPoints returns the CancelPenaltyPoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCancelPenaltyPoints() int32 {
	if o == nil || IsNil(o.CancelPenaltyPoints) {
		var ret int32
		return ret
	}
	return *o.CancelPenaltyPoints
}

// GetCancelPenaltyPointsOk returns a tuple with the CancelPenaltyPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCancelPenaltyPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelPenaltyPoints) {
		return nil, false
	}
	return o.CancelPenaltyPoints, true
}

// HasCancelPenaltyPoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCancelPenaltyPoints() bool {
	if o != nil && !IsNil(o.CancelPenaltyPoints) {
		return true
	}

	return false
}

// SetCancelPenaltyPoints gets a reference to the given int32 and assigns it to the CancelPenaltyPoints field.
func (o *MembershipAwardListType) SetCancelPenaltyPoints(v int32) {
	o.CancelPenaltyPoints = &v
}

// GetAwardCancellationNumber returns the AwardCancellationNumber field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardCancellationNumber() int32 {
	if o == nil || IsNil(o.AwardCancellationNumber) {
		var ret int32
		return ret
	}
	return *o.AwardCancellationNumber
}

// GetAwardCancellationNumberOk returns a tuple with the AwardCancellationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardCancellationNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardCancellationNumber) {
		return nil, false
	}
	return o.AwardCancellationNumber, true
}

// HasAwardCancellationNumber returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardCancellationNumber() bool {
	if o != nil && !IsNil(o.AwardCancellationNumber) {
		return true
	}

	return false
}

// SetAwardCancellationNumber gets a reference to the given int32 and assigns it to the AwardCancellationNumber field.
func (o *MembershipAwardListType) SetAwardCancellationNumber(v int32) {
	o.AwardCancellationNumber = &v
}

// GetAwardCancelDate returns the AwardCancelDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardCancelDate() string {
	if o == nil || IsNil(o.AwardCancelDate) {
		var ret string
		return ret
	}
	return *o.AwardCancelDate
}

// GetAwardCancelDateOk returns a tuple with the AwardCancelDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardCancelDateOk() (*string, bool) {
	if o == nil || IsNil(o.AwardCancelDate) {
		return nil, false
	}
	return o.AwardCancelDate, true
}

// HasAwardCancelDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardCancelDate() bool {
	if o != nil && !IsNil(o.AwardCancelDate) {
		return true
	}

	return false
}

// SetAwardCancelDate gets a reference to the given string and assigns it to the AwardCancelDate field.
func (o *MembershipAwardListType) SetAwardCancelDate(v string) {
	o.AwardCancelDate = &v
}

// GetActualCancelPoints returns the ActualCancelPoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetActualCancelPoints() float32 {
	if o == nil || IsNil(o.ActualCancelPoints) {
		var ret float32
		return ret
	}
	return *o.ActualCancelPoints
}

// GetActualCancelPointsOk returns a tuple with the ActualCancelPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetActualCancelPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ActualCancelPoints) {
		return nil, false
	}
	return o.ActualCancelPoints, true
}

// HasActualCancelPoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasActualCancelPoints() bool {
	if o != nil && !IsNil(o.ActualCancelPoints) {
		return true
	}

	return false
}

// SetActualCancelPoints gets a reference to the given float32 and assigns it to the ActualCancelPoints field.
func (o *MembershipAwardListType) SetActualCancelPoints(v float32) {
	o.ActualCancelPoints = &v
}

// GetReservationCancellationNumber returns the ReservationCancellationNumber field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetReservationCancellationNumber() string {
	if o == nil || IsNil(o.ReservationCancellationNumber) {
		var ret string
		return ret
	}
	return *o.ReservationCancellationNumber
}

// GetReservationCancellationNumberOk returns a tuple with the ReservationCancellationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetReservationCancellationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationCancellationNumber) {
		return nil, false
	}
	return o.ReservationCancellationNumber, true
}

// HasReservationCancellationNumber returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasReservationCancellationNumber() bool {
	if o != nil && !IsNil(o.ReservationCancellationNumber) {
		return true
	}

	return false
}

// SetReservationCancellationNumber gets a reference to the given string and assigns it to the ReservationCancellationNumber field.
func (o *MembershipAwardListType) SetReservationCancellationNumber(v string) {
	o.ReservationCancellationNumber = &v
}

// GetStatementId returns the StatementId field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetStatementId() int32 {
	if o == nil || IsNil(o.StatementId) {
		var ret int32
		return ret
	}
	return *o.StatementId
}

// GetStatementIdOk returns a tuple with the StatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetStatementIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StatementId) {
		return nil, false
	}
	return o.StatementId, true
}

// HasStatementId returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasStatementId() bool {
	if o != nil && !IsNil(o.StatementId) {
		return true
	}

	return false
}

// SetStatementId gets a reference to the given int32 and assigns it to the StatementId field.
func (o *MembershipAwardListType) SetStatementId(v int32) {
	o.StatementId = &v
}

// GetCancelStatementID returns the CancelStatementID field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCancelStatementID() int32 {
	if o == nil || IsNil(o.CancelStatementID) {
		var ret int32
		return ret
	}
	return *o.CancelStatementID
}

// GetCancelStatementIDOk returns a tuple with the CancelStatementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCancelStatementIDOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelStatementID) {
		return nil, false
	}
	return o.CancelStatementID, true
}

// HasCancelStatementID returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCancelStatementID() bool {
	if o != nil && !IsNil(o.CancelStatementID) {
		return true
	}

	return false
}

// SetCancelStatementID gets a reference to the given int32 and assigns it to the CancelStatementID field.
func (o *MembershipAwardListType) SetCancelStatementID(v int32) {
	o.CancelStatementID = &v
}

// GetMemberStatementId returns the MemberStatementId field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetMemberStatementId() int32 {
	if o == nil || IsNil(o.MemberStatementId) {
		var ret int32
		return ret
	}
	return *o.MemberStatementId
}

// GetMemberStatementIdOk returns a tuple with the MemberStatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetMemberStatementIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MemberStatementId) {
		return nil, false
	}
	return o.MemberStatementId, true
}

// HasMemberStatementId returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasMemberStatementId() bool {
	if o != nil && !IsNil(o.MemberStatementId) {
		return true
	}

	return false
}

// SetMemberStatementId gets a reference to the given int32 and assigns it to the MemberStatementId field.
func (o *MembershipAwardListType) SetMemberStatementId(v int32) {
	o.MemberStatementId = &v
}

// GetCancelMemberStatementID returns the CancelMemberStatementID field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCancelMemberStatementID() int32 {
	if o == nil || IsNil(o.CancelMemberStatementID) {
		var ret int32
		return ret
	}
	return *o.CancelMemberStatementID
}

// GetCancelMemberStatementIDOk returns a tuple with the CancelMemberStatementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCancelMemberStatementIDOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelMemberStatementID) {
		return nil, false
	}
	return o.CancelMemberStatementID, true
}

// HasCancelMemberStatementID returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCancelMemberStatementID() bool {
	if o != nil && !IsNil(o.CancelMemberStatementID) {
		return true
	}

	return false
}

// SetCancelMemberStatementID gets a reference to the given int32 and assigns it to the CancelMemberStatementID field.
func (o *MembershipAwardListType) SetCancelMemberStatementID(v int32) {
	o.CancelMemberStatementID = &v
}

// GetNumberOfNights returns the NumberOfNights field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetNumberOfNights() int32 {
	if o == nil || IsNil(o.NumberOfNights) {
		var ret int32
		return ret
	}
	return *o.NumberOfNights
}

// GetNumberOfNightsOk returns a tuple with the NumberOfNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetNumberOfNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfNights) {
		return nil, false
	}
	return o.NumberOfNights, true
}

// HasNumberOfNights returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasNumberOfNights() bool {
	if o != nil && !IsNil(o.NumberOfNights) {
		return true
	}

	return false
}

// SetNumberOfNights gets a reference to the given int32 and assigns it to the NumberOfNights field.
func (o *MembershipAwardListType) SetNumberOfNights(v int32) {
	o.NumberOfNights = &v
}

// GetStayDate returns the StayDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetStayDate() string {
	if o == nil || IsNil(o.StayDate) {
		var ret string
		return ret
	}
	return *o.StayDate
}

// GetStayDateOk returns a tuple with the StayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetStayDateOk() (*string, bool) {
	if o == nil || IsNil(o.StayDate) {
		return nil, false
	}
	return o.StayDate, true
}

// HasStayDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasStayDate() bool {
	if o != nil && !IsNil(o.StayDate) {
		return true
	}

	return false
}

// SetStayDate gets a reference to the given string and assigns it to the StayDate field.
func (o *MembershipAwardListType) SetStayDate(v string) {
	o.StayDate = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *MembershipAwardListType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetCancelPolicyType returns the CancelPolicyType field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCancelPolicyType() string {
	if o == nil || IsNil(o.CancelPolicyType) {
		var ret string
		return ret
	}
	return *o.CancelPolicyType
}

// GetCancelPolicyTypeOk returns a tuple with the CancelPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCancelPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CancelPolicyType) {
		return nil, false
	}
	return o.CancelPolicyType, true
}

// HasCancelPolicyType returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCancelPolicyType() bool {
	if o != nil && !IsNil(o.CancelPolicyType) {
		return true
	}

	return false
}

// SetCancelPolicyType gets a reference to the given string and assigns it to the CancelPolicyType field.
func (o *MembershipAwardListType) SetCancelPolicyType(v string) {
	o.CancelPolicyType = &v
}

// GetAwardSource returns the AwardSource field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardSource() string {
	if o == nil || IsNil(o.AwardSource) {
		var ret string
		return ret
	}
	return *o.AwardSource
}

// GetAwardSourceOk returns a tuple with the AwardSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardSourceOk() (*string, bool) {
	if o == nil || IsNil(o.AwardSource) {
		return nil, false
	}
	return o.AwardSource, true
}

// HasAwardSource returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardSource() bool {
	if o != nil && !IsNil(o.AwardSource) {
		return true
	}

	return false
}

// SetAwardSource gets a reference to the given string and assigns it to the AwardSource field.
func (o *MembershipAwardListType) SetAwardSource(v string) {
	o.AwardSource = &v
}

// GetCalculatedCancelPoints returns the CalculatedCancelPoints field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCalculatedCancelPoints() float32 {
	if o == nil || IsNil(o.CalculatedCancelPoints) {
		var ret float32
		return ret
	}
	return *o.CalculatedCancelPoints
}

// GetCalculatedCancelPointsOk returns a tuple with the CalculatedCancelPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCalculatedCancelPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.CalculatedCancelPoints) {
		return nil, false
	}
	return o.CalculatedCancelPoints, true
}

// HasCalculatedCancelPoints returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCalculatedCancelPoints() bool {
	if o != nil && !IsNil(o.CalculatedCancelPoints) {
		return true
	}

	return false
}

// SetCalculatedCancelPoints gets a reference to the given float32 and assigns it to the CalculatedCancelPoints field.
func (o *MembershipAwardListType) SetCalculatedCancelPoints(v float32) {
	o.CalculatedCancelPoints = &v
}

// GetAwardBasedOn returns the AwardBasedOn field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetAwardBasedOn() MembershipAwardBasedOnType {
	if o == nil || IsNil(o.AwardBasedOn) {
		var ret MembershipAwardBasedOnType
		return ret
	}
	return *o.AwardBasedOn
}

// GetAwardBasedOnOk returns a tuple with the AwardBasedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetAwardBasedOnOk() (*MembershipAwardBasedOnType, bool) {
	if o == nil || IsNil(o.AwardBasedOn) {
		return nil, false
	}
	return o.AwardBasedOn, true
}

// HasAwardBasedOn returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasAwardBasedOn() bool {
	if o != nil && !IsNil(o.AwardBasedOn) {
		return true
	}

	return false
}

// SetAwardBasedOn gets a reference to the given MembershipAwardBasedOnType and assigns it to the AwardBasedOn field.
func (o *MembershipAwardListType) SetAwardBasedOn(v MembershipAwardBasedOnType) {
	o.AwardBasedOn = &v
}

// GetPmsResvNo returns the PmsResvNo field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetPmsResvNo() string {
	if o == nil || IsNil(o.PmsResvNo) {
		var ret string
		return ret
	}
	return *o.PmsResvNo
}

// GetPmsResvNoOk returns a tuple with the PmsResvNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetPmsResvNoOk() (*string, bool) {
	if o == nil || IsNil(o.PmsResvNo) {
		return nil, false
	}
	return o.PmsResvNo, true
}

// HasPmsResvNo returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasPmsResvNo() bool {
	if o != nil && !IsNil(o.PmsResvNo) {
		return true
	}

	return false
}

// SetPmsResvNo gets a reference to the given string and assigns it to the PmsResvNo field.
func (o *MembershipAwardListType) SetPmsResvNo(v string) {
	o.PmsResvNo = &v
}

// GetCrsBookNo returns the CrsBookNo field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetCrsBookNo() string {
	if o == nil || IsNil(o.CrsBookNo) {
		var ret string
		return ret
	}
	return *o.CrsBookNo
}

// GetCrsBookNoOk returns a tuple with the CrsBookNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetCrsBookNoOk() (*string, bool) {
	if o == nil || IsNil(o.CrsBookNo) {
		return nil, false
	}
	return o.CrsBookNo, true
}

// HasCrsBookNo returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasCrsBookNo() bool {
	if o != nil && !IsNil(o.CrsBookNo) {
		return true
	}

	return false
}

// SetCrsBookNo gets a reference to the given string and assigns it to the CrsBookNo field.
func (o *MembershipAwardListType) SetCrsBookNo(v string) {
	o.CrsBookNo = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *MembershipAwardListType) SetProduct(v string) {
	o.Product = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *MembershipAwardListType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardListType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *MembershipAwardListType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *MembershipAwardListType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

func (o MembershipAwardListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipAwardListType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.NameOnCard) {
		toSerialize["nameOnCard"] = o.NameOnCard
	}
	if !IsNil(o.JoinDate) {
		toSerialize["joinDate"] = o.JoinDate
	}
	if !IsNil(o.ExpireDate) {
		toSerialize["expireDate"] = o.ExpireDate
	}
	if !IsNil(o.MembershipCardNo) {
		toSerialize["membershipCardNo"] = o.MembershipCardNo
	}
	if !IsNil(o.TotalAvailablePoints) {
		toSerialize["totalAvailablePoints"] = o.TotalAvailablePoints
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.AwardNumber) {
		toSerialize["awardNumber"] = o.AwardNumber
	}
	if !IsNil(o.AwardPoints) {
		toSerialize["awardPoints"] = o.AwardPoints
	}
	if !IsNil(o.ThresholdPoints) {
		toSerialize["thresholdPoints"] = o.ThresholdPoints
	}
	if !IsNil(o.AwardCode) {
		toSerialize["awardCode"] = o.AwardCode
	}
	if !IsNil(o.CancelDays) {
		toSerialize["cancelDays"] = o.CancelDays
	}
	if !IsNil(o.DateAwarded) {
		toSerialize["dateAwarded"] = o.DateAwarded
	}
	if !IsNil(o.BookingNumber) {
		toSerialize["bookingNumber"] = o.BookingNumber
	}
	if !IsNil(o.HotelBookingNumber) {
		toSerialize["hotelBookingNumber"] = o.HotelBookingNumber
	}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.CancelPenaltyPoints) {
		toSerialize["cancelPenaltyPoints"] = o.CancelPenaltyPoints
	}
	if !IsNil(o.AwardCancellationNumber) {
		toSerialize["awardCancellationNumber"] = o.AwardCancellationNumber
	}
	if !IsNil(o.AwardCancelDate) {
		toSerialize["awardCancelDate"] = o.AwardCancelDate
	}
	if !IsNil(o.ActualCancelPoints) {
		toSerialize["actualCancelPoints"] = o.ActualCancelPoints
	}
	if !IsNil(o.ReservationCancellationNumber) {
		toSerialize["reservationCancellationNumber"] = o.ReservationCancellationNumber
	}
	if !IsNil(o.StatementId) {
		toSerialize["statementId"] = o.StatementId
	}
	if !IsNil(o.CancelStatementID) {
		toSerialize["cancelStatementID"] = o.CancelStatementID
	}
	if !IsNil(o.MemberStatementId) {
		toSerialize["memberStatementId"] = o.MemberStatementId
	}
	if !IsNil(o.CancelMemberStatementID) {
		toSerialize["cancelMemberStatementID"] = o.CancelMemberStatementID
	}
	if !IsNil(o.NumberOfNights) {
		toSerialize["numberOfNights"] = o.NumberOfNights
	}
	if !IsNil(o.StayDate) {
		toSerialize["stayDate"] = o.StayDate
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.CancelPolicyType) {
		toSerialize["cancelPolicyType"] = o.CancelPolicyType
	}
	if !IsNil(o.AwardSource) {
		toSerialize["awardSource"] = o.AwardSource
	}
	if !IsNil(o.CalculatedCancelPoints) {
		toSerialize["calculatedCancelPoints"] = o.CalculatedCancelPoints
	}
	if !IsNil(o.AwardBasedOn) {
		toSerialize["awardBasedOn"] = o.AwardBasedOn
	}
	if !IsNil(o.PmsResvNo) {
		toSerialize["pmsResvNo"] = o.PmsResvNo
	}
	if !IsNil(o.CrsBookNo) {
		toSerialize["crsBookNo"] = o.CrsBookNo
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	return toSerialize, nil
}

type NullableMembershipAwardListType struct {
	value *MembershipAwardListType
	isSet bool
}

func (v NullableMembershipAwardListType) Get() *MembershipAwardListType {
	return v.value
}

func (v *NullableMembershipAwardListType) Set(val *MembershipAwardListType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipAwardListType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipAwardListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipAwardListType(val *MembershipAwardListType) *NullableMembershipAwardListType {
	return &NullableMembershipAwardListType{value: val, isSet: true}
}

func (v NullableMembershipAwardListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipAwardListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


