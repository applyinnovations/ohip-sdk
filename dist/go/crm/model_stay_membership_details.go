/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
	"fmt"
)

// checks if the StayMembershipDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayMembershipDetails{}

// StayMembershipDetails Complex type that contains stay membership details and instructions to attach or replace.
type StayMembershipDetails struct {
	// Specifies the Card Number of new membership being attached.
	NewMembershipCardNo *string `json:"newMembershipCardNo,omitempty"`
	// Specifies the type of new membership being attached.
	NewMembershipType *string `json:"newMembershipType,omitempty"`
	// Specifies the Card Number of old membership that should be replaced.
	OldMembershipCardNo *string `json:"oldMembershipCardNo,omitempty"`
	// Specifies the type of old membership that should be replaced.
	OldMembershipType *string `json:"oldMembershipType,omitempty"`
	// Stay Record ID
	StayRecordId *float32 `json:"stayRecordId,omitempty"`
	AttachMode StayMembershipAttachMode `json:"attachMode"`
}

type _StayMembershipDetails StayMembershipDetails

// NewStayMembershipDetails instantiates a new StayMembershipDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayMembershipDetails(attachMode StayMembershipAttachMode) *StayMembershipDetails {
	this := StayMembershipDetails{}
	this.AttachMode = attachMode
	return &this
}

// NewStayMembershipDetailsWithDefaults instantiates a new StayMembershipDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayMembershipDetailsWithDefaults() *StayMembershipDetails {
	this := StayMembershipDetails{}
	return &this
}

// GetNewMembershipCardNo returns the NewMembershipCardNo field value if set, zero value otherwise.
func (o *StayMembershipDetails) GetNewMembershipCardNo() string {
	if o == nil || IsNil(o.NewMembershipCardNo) {
		var ret string
		return ret
	}
	return *o.NewMembershipCardNo
}

// GetNewMembershipCardNoOk returns a tuple with the NewMembershipCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetNewMembershipCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.NewMembershipCardNo) {
		return nil, false
	}
	return o.NewMembershipCardNo, true
}

// HasNewMembershipCardNo returns a boolean if a field has been set.
func (o *StayMembershipDetails) HasNewMembershipCardNo() bool {
	if o != nil && !IsNil(o.NewMembershipCardNo) {
		return true
	}

	return false
}

// SetNewMembershipCardNo gets a reference to the given string and assigns it to the NewMembershipCardNo field.
func (o *StayMembershipDetails) SetNewMembershipCardNo(v string) {
	o.NewMembershipCardNo = &v
}

// GetNewMembershipType returns the NewMembershipType field value if set, zero value otherwise.
func (o *StayMembershipDetails) GetNewMembershipType() string {
	if o == nil || IsNil(o.NewMembershipType) {
		var ret string
		return ret
	}
	return *o.NewMembershipType
}

// GetNewMembershipTypeOk returns a tuple with the NewMembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetNewMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewMembershipType) {
		return nil, false
	}
	return o.NewMembershipType, true
}

// HasNewMembershipType returns a boolean if a field has been set.
func (o *StayMembershipDetails) HasNewMembershipType() bool {
	if o != nil && !IsNil(o.NewMembershipType) {
		return true
	}

	return false
}

// SetNewMembershipType gets a reference to the given string and assigns it to the NewMembershipType field.
func (o *StayMembershipDetails) SetNewMembershipType(v string) {
	o.NewMembershipType = &v
}

// GetOldMembershipCardNo returns the OldMembershipCardNo field value if set, zero value otherwise.
func (o *StayMembershipDetails) GetOldMembershipCardNo() string {
	if o == nil || IsNil(o.OldMembershipCardNo) {
		var ret string
		return ret
	}
	return *o.OldMembershipCardNo
}

// GetOldMembershipCardNoOk returns a tuple with the OldMembershipCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetOldMembershipCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.OldMembershipCardNo) {
		return nil, false
	}
	return o.OldMembershipCardNo, true
}

// HasOldMembershipCardNo returns a boolean if a field has been set.
func (o *StayMembershipDetails) HasOldMembershipCardNo() bool {
	if o != nil && !IsNil(o.OldMembershipCardNo) {
		return true
	}

	return false
}

// SetOldMembershipCardNo gets a reference to the given string and assigns it to the OldMembershipCardNo field.
func (o *StayMembershipDetails) SetOldMembershipCardNo(v string) {
	o.OldMembershipCardNo = &v
}

// GetOldMembershipType returns the OldMembershipType field value if set, zero value otherwise.
func (o *StayMembershipDetails) GetOldMembershipType() string {
	if o == nil || IsNil(o.OldMembershipType) {
		var ret string
		return ret
	}
	return *o.OldMembershipType
}

// GetOldMembershipTypeOk returns a tuple with the OldMembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetOldMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OldMembershipType) {
		return nil, false
	}
	return o.OldMembershipType, true
}

// HasOldMembershipType returns a boolean if a field has been set.
func (o *StayMembershipDetails) HasOldMembershipType() bool {
	if o != nil && !IsNil(o.OldMembershipType) {
		return true
	}

	return false
}

// SetOldMembershipType gets a reference to the given string and assigns it to the OldMembershipType field.
func (o *StayMembershipDetails) SetOldMembershipType(v string) {
	o.OldMembershipType = &v
}

// GetStayRecordId returns the StayRecordId field value if set, zero value otherwise.
func (o *StayMembershipDetails) GetStayRecordId() float32 {
	if o == nil || IsNil(o.StayRecordId) {
		var ret float32
		return ret
	}
	return *o.StayRecordId
}

// GetStayRecordIdOk returns a tuple with the StayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetStayRecordIdOk() (*float32, bool) {
	if o == nil || IsNil(o.StayRecordId) {
		return nil, false
	}
	return o.StayRecordId, true
}

// HasStayRecordId returns a boolean if a field has been set.
func (o *StayMembershipDetails) HasStayRecordId() bool {
	if o != nil && !IsNil(o.StayRecordId) {
		return true
	}

	return false
}

// SetStayRecordId gets a reference to the given float32 and assigns it to the StayRecordId field.
func (o *StayMembershipDetails) SetStayRecordId(v float32) {
	o.StayRecordId = &v
}

// GetAttachMode returns the AttachMode field value
func (o *StayMembershipDetails) GetAttachMode() StayMembershipAttachMode {
	if o == nil {
		var ret StayMembershipAttachMode
		return ret
	}

	return o.AttachMode
}

// GetAttachModeOk returns a tuple with the AttachMode field value
// and a boolean to check if the value has been set.
func (o *StayMembershipDetails) GetAttachModeOk() (*StayMembershipAttachMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachMode, true
}

// SetAttachMode sets field value
func (o *StayMembershipDetails) SetAttachMode(v StayMembershipAttachMode) {
	o.AttachMode = v
}

func (o StayMembershipDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayMembershipDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewMembershipCardNo) {
		toSerialize["newMembershipCardNo"] = o.NewMembershipCardNo
	}
	if !IsNil(o.NewMembershipType) {
		toSerialize["newMembershipType"] = o.NewMembershipType
	}
	if !IsNil(o.OldMembershipCardNo) {
		toSerialize["oldMembershipCardNo"] = o.OldMembershipCardNo
	}
	if !IsNil(o.OldMembershipType) {
		toSerialize["oldMembershipType"] = o.OldMembershipType
	}
	if !IsNil(o.StayRecordId) {
		toSerialize["stayRecordId"] = o.StayRecordId
	}
	toSerialize["attachMode"] = o.AttachMode
	return toSerialize, nil
}

func (o *StayMembershipDetails) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attachMode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStayMembershipDetails := _StayMembershipDetails{}

	err = json.Unmarshal(bytes, &varStayMembershipDetails)

	if err != nil {
		return err
	}

	*o = StayMembershipDetails(varStayMembershipDetails)

	return err
}

type NullableStayMembershipDetails struct {
	value *StayMembershipDetails
	isSet bool
}

func (v NullableStayMembershipDetails) Get() *StayMembershipDetails {
	return v.value
}

func (v *NullableStayMembershipDetails) Set(val *StayMembershipDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableStayMembershipDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableStayMembershipDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayMembershipDetails(val *StayMembershipDetails) *NullableStayMembershipDetails {
	return &NullableStayMembershipDetails{value: val, isSet: true}
}

func (v NullableStayMembershipDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayMembershipDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


