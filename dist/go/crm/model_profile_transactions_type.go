/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileTransactionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileTransactionsType{}

// ProfileTransactionsType Transaction related to the Profile.
type ProfileTransactionsType struct {
	// Stay Record or Membership Transaction Date.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Stay Record or Membership Transaction Type.
	TransactionType *string `json:"transactionType,omitempty"`
	// Resort of the transaction.
	HotelId *string `json:"hotelId,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// Flag to indicate if points are calculated.
	PointsCalculated *bool `json:"pointsCalculated,omitempty"`
	StayTimeSpan *TimeSpanType `json:"stayTimeSpan,omitempty"`
	// The type of membership.
	MembershipType *string `json:"membershipType,omitempty"`
	// The membership card number.
	CardNumber *string `json:"cardNumber,omitempty"`
	// The level of the membership.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Award points for the transactions.
	AwardPoints *int32 `json:"awardPoints,omitempty"`
	// Tier Night points for the transactions.
	TierNightPoints *int32 `json:"tierNightPoints,omitempty"`
	// Tier Stay points for the transactions.
	TierStayPoints *int32 `json:"tierStayPoints,omitempty"`
	// Tier Revenue points for the transactions.
	TierRevenuePoints *int32 `json:"tierRevenuePoints,omitempty"`
	// Date when points were created.
	PointsCreditDate *string `json:"pointsCreditDate,omitempty"`
	// Stay Record Id of the transaction.
	StayRecordId *string `json:"stayRecordId,omitempty"`
	MembershipTransactionId *MembershipTransactionId `json:"membershipTransactionId,omitempty"`
	MembershipId *UniqueIDType `json:"membershipId,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
}

// NewProfileTransactionsType instantiates a new ProfileTransactionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileTransactionsType() *ProfileTransactionsType {
	this := ProfileTransactionsType{}
	return &this
}

// NewProfileTransactionsTypeWithDefaults instantiates a new ProfileTransactionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileTransactionsTypeWithDefaults() *ProfileTransactionsType {
	this := ProfileTransactionsType{}
	return &this
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *ProfileTransactionsType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *ProfileTransactionsType) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ProfileTransactionsType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *ProfileTransactionsType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetPointsCalculated returns the PointsCalculated field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetPointsCalculated() bool {
	if o == nil || IsNil(o.PointsCalculated) {
		var ret bool
		return ret
	}
	return *o.PointsCalculated
}

// GetPointsCalculatedOk returns a tuple with the PointsCalculated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetPointsCalculatedOk() (*bool, bool) {
	if o == nil || IsNil(o.PointsCalculated) {
		return nil, false
	}
	return o.PointsCalculated, true
}

// HasPointsCalculated returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasPointsCalculated() bool {
	if o != nil && !IsNil(o.PointsCalculated) {
		return true
	}

	return false
}

// SetPointsCalculated gets a reference to the given bool and assigns it to the PointsCalculated field.
func (o *ProfileTransactionsType) SetPointsCalculated(v bool) {
	o.PointsCalculated = &v
}

// GetStayTimeSpan returns the StayTimeSpan field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetStayTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.StayTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.StayTimeSpan
}

// GetStayTimeSpanOk returns a tuple with the StayTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetStayTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.StayTimeSpan) {
		return nil, false
	}
	return o.StayTimeSpan, true
}

// HasStayTimeSpan returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasStayTimeSpan() bool {
	if o != nil && !IsNil(o.StayTimeSpan) {
		return true
	}

	return false
}

// SetStayTimeSpan gets a reference to the given TimeSpanType and assigns it to the StayTimeSpan field.
func (o *ProfileTransactionsType) SetStayTimeSpan(v TimeSpanType) {
	o.StayTimeSpan = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *ProfileTransactionsType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetCardNumber returns the CardNumber field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetCardNumber() string {
	if o == nil || IsNil(o.CardNumber) {
		var ret string
		return ret
	}
	return *o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumber) {
		return nil, false
	}
	return o.CardNumber, true
}

// HasCardNumber returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasCardNumber() bool {
	if o != nil && !IsNil(o.CardNumber) {
		return true
	}

	return false
}

// SetCardNumber gets a reference to the given string and assigns it to the CardNumber field.
func (o *ProfileTransactionsType) SetCardNumber(v string) {
	o.CardNumber = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *ProfileTransactionsType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetAwardPoints returns the AwardPoints field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetAwardPoints() int32 {
	if o == nil || IsNil(o.AwardPoints) {
		var ret int32
		return ret
	}
	return *o.AwardPoints
}

// GetAwardPointsOk returns a tuple with the AwardPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetAwardPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardPoints) {
		return nil, false
	}
	return o.AwardPoints, true
}

// HasAwardPoints returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasAwardPoints() bool {
	if o != nil && !IsNil(o.AwardPoints) {
		return true
	}

	return false
}

// SetAwardPoints gets a reference to the given int32 and assigns it to the AwardPoints field.
func (o *ProfileTransactionsType) SetAwardPoints(v int32) {
	o.AwardPoints = &v
}

// GetTierNightPoints returns the TierNightPoints field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetTierNightPoints() int32 {
	if o == nil || IsNil(o.TierNightPoints) {
		var ret int32
		return ret
	}
	return *o.TierNightPoints
}

// GetTierNightPointsOk returns a tuple with the TierNightPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetTierNightPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierNightPoints) {
		return nil, false
	}
	return o.TierNightPoints, true
}

// HasTierNightPoints returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasTierNightPoints() bool {
	if o != nil && !IsNil(o.TierNightPoints) {
		return true
	}

	return false
}

// SetTierNightPoints gets a reference to the given int32 and assigns it to the TierNightPoints field.
func (o *ProfileTransactionsType) SetTierNightPoints(v int32) {
	o.TierNightPoints = &v
}

// GetTierStayPoints returns the TierStayPoints field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetTierStayPoints() int32 {
	if o == nil || IsNil(o.TierStayPoints) {
		var ret int32
		return ret
	}
	return *o.TierStayPoints
}

// GetTierStayPointsOk returns a tuple with the TierStayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetTierStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierStayPoints) {
		return nil, false
	}
	return o.TierStayPoints, true
}

// HasTierStayPoints returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasTierStayPoints() bool {
	if o != nil && !IsNil(o.TierStayPoints) {
		return true
	}

	return false
}

// SetTierStayPoints gets a reference to the given int32 and assigns it to the TierStayPoints field.
func (o *ProfileTransactionsType) SetTierStayPoints(v int32) {
	o.TierStayPoints = &v
}

// GetTierRevenuePoints returns the TierRevenuePoints field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetTierRevenuePoints() int32 {
	if o == nil || IsNil(o.TierRevenuePoints) {
		var ret int32
		return ret
	}
	return *o.TierRevenuePoints
}

// GetTierRevenuePointsOk returns a tuple with the TierRevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetTierRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierRevenuePoints) {
		return nil, false
	}
	return o.TierRevenuePoints, true
}

// HasTierRevenuePoints returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasTierRevenuePoints() bool {
	if o != nil && !IsNil(o.TierRevenuePoints) {
		return true
	}

	return false
}

// SetTierRevenuePoints gets a reference to the given int32 and assigns it to the TierRevenuePoints field.
func (o *ProfileTransactionsType) SetTierRevenuePoints(v int32) {
	o.TierRevenuePoints = &v
}

// GetPointsCreditDate returns the PointsCreditDate field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetPointsCreditDate() string {
	if o == nil || IsNil(o.PointsCreditDate) {
		var ret string
		return ret
	}
	return *o.PointsCreditDate
}

// GetPointsCreditDateOk returns a tuple with the PointsCreditDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetPointsCreditDateOk() (*string, bool) {
	if o == nil || IsNil(o.PointsCreditDate) {
		return nil, false
	}
	return o.PointsCreditDate, true
}

// HasPointsCreditDate returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasPointsCreditDate() bool {
	if o != nil && !IsNil(o.PointsCreditDate) {
		return true
	}

	return false
}

// SetPointsCreditDate gets a reference to the given string and assigns it to the PointsCreditDate field.
func (o *ProfileTransactionsType) SetPointsCreditDate(v string) {
	o.PointsCreditDate = &v
}

// GetStayRecordId returns the StayRecordId field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetStayRecordId() string {
	if o == nil || IsNil(o.StayRecordId) {
		var ret string
		return ret
	}
	return *o.StayRecordId
}

// GetStayRecordIdOk returns a tuple with the StayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetStayRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.StayRecordId) {
		return nil, false
	}
	return o.StayRecordId, true
}

// HasStayRecordId returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasStayRecordId() bool {
	if o != nil && !IsNil(o.StayRecordId) {
		return true
	}

	return false
}

// SetStayRecordId gets a reference to the given string and assigns it to the StayRecordId field.
func (o *ProfileTransactionsType) SetStayRecordId(v string) {
	o.StayRecordId = &v
}

// GetMembershipTransactionId returns the MembershipTransactionId field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetMembershipTransactionId() MembershipTransactionId {
	if o == nil || IsNil(o.MembershipTransactionId) {
		var ret MembershipTransactionId
		return ret
	}
	return *o.MembershipTransactionId
}

// GetMembershipTransactionIdOk returns a tuple with the MembershipTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetMembershipTransactionIdOk() (*MembershipTransactionId, bool) {
	if o == nil || IsNil(o.MembershipTransactionId) {
		return nil, false
	}
	return o.MembershipTransactionId, true
}

// HasMembershipTransactionId returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasMembershipTransactionId() bool {
	if o != nil && !IsNil(o.MembershipTransactionId) {
		return true
	}

	return false
}

// SetMembershipTransactionId gets a reference to the given MembershipTransactionId and assigns it to the MembershipTransactionId field.
func (o *ProfileTransactionsType) SetMembershipTransactionId(v MembershipTransactionId) {
	o.MembershipTransactionId = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetMembershipId() UniqueIDType {
	if o == nil || IsNil(o.MembershipId) {
		var ret UniqueIDType
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetMembershipIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given UniqueIDType and assigns it to the MembershipId field.
func (o *ProfileTransactionsType) SetMembershipId(v UniqueIDType) {
	o.MembershipId = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *ProfileTransactionsType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTransactionsType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *ProfileTransactionsType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *ProfileTransactionsType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

func (o ProfileTransactionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileTransactionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.PointsCalculated) {
		toSerialize["pointsCalculated"] = o.PointsCalculated
	}
	if !IsNil(o.StayTimeSpan) {
		toSerialize["stayTimeSpan"] = o.StayTimeSpan
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.CardNumber) {
		toSerialize["cardNumber"] = o.CardNumber
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.AwardPoints) {
		toSerialize["awardPoints"] = o.AwardPoints
	}
	if !IsNil(o.TierNightPoints) {
		toSerialize["tierNightPoints"] = o.TierNightPoints
	}
	if !IsNil(o.TierStayPoints) {
		toSerialize["tierStayPoints"] = o.TierStayPoints
	}
	if !IsNil(o.TierRevenuePoints) {
		toSerialize["tierRevenuePoints"] = o.TierRevenuePoints
	}
	if !IsNil(o.PointsCreditDate) {
		toSerialize["pointsCreditDate"] = o.PointsCreditDate
	}
	if !IsNil(o.StayRecordId) {
		toSerialize["stayRecordId"] = o.StayRecordId
	}
	if !IsNil(o.MembershipTransactionId) {
		toSerialize["membershipTransactionId"] = o.MembershipTransactionId
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	return toSerialize, nil
}

type NullableProfileTransactionsType struct {
	value *ProfileTransactionsType
	isSet bool
}

func (v NullableProfileTransactionsType) Get() *ProfileTransactionsType {
	return v.value
}

func (v *NullableProfileTransactionsType) Set(val *ProfileTransactionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileTransactionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileTransactionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileTransactionsType(val *ProfileTransactionsType) *NullableProfileTransactionsType {
	return &NullableProfileTransactionsType{value: val, isSet: true}
}

func (v NullableProfileTransactionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileTransactionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


