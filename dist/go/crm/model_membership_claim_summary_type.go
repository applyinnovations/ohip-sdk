/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipClaimSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipClaimSummaryType{}

// MembershipClaimSummaryType Summary information of a claim.
type MembershipClaimSummaryType struct {
	ClaimNo *UniqueIDType `json:"claimNo,omitempty"`
	// Date the claim was made.
	ClaimDate *string `json:"claimDate,omitempty"`
	// Name of the person placing the claim. This name may be different from the name on the membership card.
	CallerName *string `json:"callerName,omitempty"`
	// The date, if any, by which a response to the caller was promised.
	ReplyBy *string `json:"replyBy,omitempty"`
	// Membership Type code.
	MembershipType *string `json:"membershipType,omitempty"`
	// Indicates membership card number of the guest.
	MembershipId *string `json:"membershipId,omitempty"`
	// Status of the claim.(Open, Closed, Pending Review, Waiting for Manager, etc.)
	ClaimStatus *string `json:"claimStatus,omitempty"`
	// Type of user-definable claim such as New Card, Stay, etc.
	ClaimType *string `json:"claimType,omitempty"`
	// If the status is closed, the date the claim was closed.
	CloseDate *string `json:"closeDate,omitempty"`
	RecordType *ClaimRecordType `json:"recordType,omitempty"`
	// Property where the stay took place.
	HotelId *string `json:"hotelId,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ConfirmationNo []UniqueIDType `json:"confirmationNo,omitempty"`
	// Arrival date for the stay associated with this claim.
	Arrival *string `json:"arrival,omitempty"`
	// Departure date for the stay associated with this claim.
	Departure *string `json:"departure,omitempty"`
	// User who is assigned to handle this claim.
	Owner *string `json:"owner,omitempty"`
	// User who entered this claim.
	Submitter *string `json:"submitter,omitempty"`
	Source *ClaimSourceType `json:"source,omitempty"`
	// Origin of the membership claim. User definable values like Email, Fax, Phone Call, etc.
	Origin *string `json:"origin,omitempty"`
	ApprovalStatus *ClaimApprovalStatusType `json:"approvalStatus,omitempty"`
	// More information related to call that help to resolve the claim..
	CallerInformation *string `json:"callerInformation,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
	// Membership ID Number.
	MembershipIdNo *float32 `json:"membershipIdNo,omitempty"`
	// Summary of claim activity log information.
	ActivityLog []ClaimActivityLogType `json:"activityLog,omitempty"`
}

// NewMembershipClaimSummaryType instantiates a new MembershipClaimSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipClaimSummaryType() *MembershipClaimSummaryType {
	this := MembershipClaimSummaryType{}
	return &this
}

// NewMembershipClaimSummaryTypeWithDefaults instantiates a new MembershipClaimSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipClaimSummaryTypeWithDefaults() *MembershipClaimSummaryType {
	this := MembershipClaimSummaryType{}
	return &this
}

// GetClaimNo returns the ClaimNo field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetClaimNo() UniqueIDType {
	if o == nil || IsNil(o.ClaimNo) {
		var ret UniqueIDType
		return ret
	}
	return *o.ClaimNo
}

// GetClaimNoOk returns a tuple with the ClaimNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetClaimNoOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ClaimNo) {
		return nil, false
	}
	return o.ClaimNo, true
}

// HasClaimNo returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasClaimNo() bool {
	if o != nil && !IsNil(o.ClaimNo) {
		return true
	}

	return false
}

// SetClaimNo gets a reference to the given UniqueIDType and assigns it to the ClaimNo field.
func (o *MembershipClaimSummaryType) SetClaimNo(v UniqueIDType) {
	o.ClaimNo = &v
}

// GetClaimDate returns the ClaimDate field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetClaimDate() string {
	if o == nil || IsNil(o.ClaimDate) {
		var ret string
		return ret
	}
	return *o.ClaimDate
}

// GetClaimDateOk returns a tuple with the ClaimDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetClaimDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimDate) {
		return nil, false
	}
	return o.ClaimDate, true
}

// HasClaimDate returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasClaimDate() bool {
	if o != nil && !IsNil(o.ClaimDate) {
		return true
	}

	return false
}

// SetClaimDate gets a reference to the given string and assigns it to the ClaimDate field.
func (o *MembershipClaimSummaryType) SetClaimDate(v string) {
	o.ClaimDate = &v
}

// GetCallerName returns the CallerName field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetCallerName() string {
	if o == nil || IsNil(o.CallerName) {
		var ret string
		return ret
	}
	return *o.CallerName
}

// GetCallerNameOk returns a tuple with the CallerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetCallerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CallerName) {
		return nil, false
	}
	return o.CallerName, true
}

// HasCallerName returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasCallerName() bool {
	if o != nil && !IsNil(o.CallerName) {
		return true
	}

	return false
}

// SetCallerName gets a reference to the given string and assigns it to the CallerName field.
func (o *MembershipClaimSummaryType) SetCallerName(v string) {
	o.CallerName = &v
}

// GetReplyBy returns the ReplyBy field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetReplyBy() string {
	if o == nil || IsNil(o.ReplyBy) {
		var ret string
		return ret
	}
	return *o.ReplyBy
}

// GetReplyByOk returns a tuple with the ReplyBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetReplyByOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyBy) {
		return nil, false
	}
	return o.ReplyBy, true
}

// HasReplyBy returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasReplyBy() bool {
	if o != nil && !IsNil(o.ReplyBy) {
		return true
	}

	return false
}

// SetReplyBy gets a reference to the given string and assigns it to the ReplyBy field.
func (o *MembershipClaimSummaryType) SetReplyBy(v string) {
	o.ReplyBy = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *MembershipClaimSummaryType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *MembershipClaimSummaryType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetClaimStatus returns the ClaimStatus field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetClaimStatus() string {
	if o == nil || IsNil(o.ClaimStatus) {
		var ret string
		return ret
	}
	return *o.ClaimStatus
}

// GetClaimStatusOk returns a tuple with the ClaimStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetClaimStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimStatus) {
		return nil, false
	}
	return o.ClaimStatus, true
}

// HasClaimStatus returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasClaimStatus() bool {
	if o != nil && !IsNil(o.ClaimStatus) {
		return true
	}

	return false
}

// SetClaimStatus gets a reference to the given string and assigns it to the ClaimStatus field.
func (o *MembershipClaimSummaryType) SetClaimStatus(v string) {
	o.ClaimStatus = &v
}

// GetClaimType returns the ClaimType field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetClaimType() string {
	if o == nil || IsNil(o.ClaimType) {
		var ret string
		return ret
	}
	return *o.ClaimType
}

// GetClaimTypeOk returns a tuple with the ClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetClaimTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimType) {
		return nil, false
	}
	return o.ClaimType, true
}

// HasClaimType returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasClaimType() bool {
	if o != nil && !IsNil(o.ClaimType) {
		return true
	}

	return false
}

// SetClaimType gets a reference to the given string and assigns it to the ClaimType field.
func (o *MembershipClaimSummaryType) SetClaimType(v string) {
	o.ClaimType = &v
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetCloseDate() string {
	if o == nil || IsNil(o.CloseDate) {
		var ret string
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CloseDate) {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasCloseDate() bool {
	if o != nil && !IsNil(o.CloseDate) {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given string and assigns it to the CloseDate field.
func (o *MembershipClaimSummaryType) SetCloseDate(v string) {
	o.CloseDate = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetRecordType() ClaimRecordType {
	if o == nil || IsNil(o.RecordType) {
		var ret ClaimRecordType
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetRecordTypeOk() (*ClaimRecordType, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given ClaimRecordType and assigns it to the RecordType field.
func (o *MembershipClaimSummaryType) SetRecordType(v ClaimRecordType) {
	o.RecordType = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MembershipClaimSummaryType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetConfirmationNo() []UniqueIDType {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret []UniqueIDType
		return ret
	}
	return o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetConfirmationNoOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given []UniqueIDType and assigns it to the ConfirmationNo field.
func (o *MembershipClaimSummaryType) SetConfirmationNo(v []UniqueIDType) {
	o.ConfirmationNo = v
}

// GetArrival returns the Arrival field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetArrival() string {
	if o == nil || IsNil(o.Arrival) {
		var ret string
		return ret
	}
	return *o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetArrivalOk() (*string, bool) {
	if o == nil || IsNil(o.Arrival) {
		return nil, false
	}
	return o.Arrival, true
}

// HasArrival returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasArrival() bool {
	if o != nil && !IsNil(o.Arrival) {
		return true
	}

	return false
}

// SetArrival gets a reference to the given string and assigns it to the Arrival field.
func (o *MembershipClaimSummaryType) SetArrival(v string) {
	o.Arrival = &v
}

// GetDeparture returns the Departure field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetDeparture() string {
	if o == nil || IsNil(o.Departure) {
		var ret string
		return ret
	}
	return *o.Departure
}

// GetDepartureOk returns a tuple with the Departure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetDepartureOk() (*string, bool) {
	if o == nil || IsNil(o.Departure) {
		return nil, false
	}
	return o.Departure, true
}

// HasDeparture returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasDeparture() bool {
	if o != nil && !IsNil(o.Departure) {
		return true
	}

	return false
}

// SetDeparture gets a reference to the given string and assigns it to the Departure field.
func (o *MembershipClaimSummaryType) SetDeparture(v string) {
	o.Departure = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *MembershipClaimSummaryType) SetOwner(v string) {
	o.Owner = &v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetSubmitter() string {
	if o == nil || IsNil(o.Submitter) {
		var ret string
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetSubmitterOk() (*string, bool) {
	if o == nil || IsNil(o.Submitter) {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasSubmitter() bool {
	if o != nil && !IsNil(o.Submitter) {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given string and assigns it to the Submitter field.
func (o *MembershipClaimSummaryType) SetSubmitter(v string) {
	o.Submitter = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetSource() ClaimSourceType {
	if o == nil || IsNil(o.Source) {
		var ret ClaimSourceType
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetSourceOk() (*ClaimSourceType, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ClaimSourceType and assigns it to the Source field.
func (o *MembershipClaimSummaryType) SetSource(v ClaimSourceType) {
	o.Source = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *MembershipClaimSummaryType) SetOrigin(v string) {
	o.Origin = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetApprovalStatus() ClaimApprovalStatusType {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret ClaimApprovalStatusType
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetApprovalStatusOk() (*ClaimApprovalStatusType, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given ClaimApprovalStatusType and assigns it to the ApprovalStatus field.
func (o *MembershipClaimSummaryType) SetApprovalStatus(v ClaimApprovalStatusType) {
	o.ApprovalStatus = &v
}

// GetCallerInformation returns the CallerInformation field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetCallerInformation() string {
	if o == nil || IsNil(o.CallerInformation) {
		var ret string
		return ret
	}
	return *o.CallerInformation
}

// GetCallerInformationOk returns a tuple with the CallerInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetCallerInformationOk() (*string, bool) {
	if o == nil || IsNil(o.CallerInformation) {
		return nil, false
	}
	return o.CallerInformation, true
}

// HasCallerInformation returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasCallerInformation() bool {
	if o != nil && !IsNil(o.CallerInformation) {
		return true
	}

	return false
}

// SetCallerInformation gets a reference to the given string and assigns it to the CallerInformation field.
func (o *MembershipClaimSummaryType) SetCallerInformation(v string) {
	o.CallerInformation = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *MembershipClaimSummaryType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetMembershipIdNo returns the MembershipIdNo field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetMembershipIdNo() float32 {
	if o == nil || IsNil(o.MembershipIdNo) {
		var ret float32
		return ret
	}
	return *o.MembershipIdNo
}

// GetMembershipIdNoOk returns a tuple with the MembershipIdNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetMembershipIdNoOk() (*float32, bool) {
	if o == nil || IsNil(o.MembershipIdNo) {
		return nil, false
	}
	return o.MembershipIdNo, true
}

// HasMembershipIdNo returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasMembershipIdNo() bool {
	if o != nil && !IsNil(o.MembershipIdNo) {
		return true
	}

	return false
}

// SetMembershipIdNo gets a reference to the given float32 and assigns it to the MembershipIdNo field.
func (o *MembershipClaimSummaryType) SetMembershipIdNo(v float32) {
	o.MembershipIdNo = &v
}

// GetActivityLog returns the ActivityLog field value if set, zero value otherwise.
func (o *MembershipClaimSummaryType) GetActivityLog() []ClaimActivityLogType {
	if o == nil || IsNil(o.ActivityLog) {
		var ret []ClaimActivityLogType
		return ret
	}
	return o.ActivityLog
}

// GetActivityLogOk returns a tuple with the ActivityLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimSummaryType) GetActivityLogOk() ([]ClaimActivityLogType, bool) {
	if o == nil || IsNil(o.ActivityLog) {
		return nil, false
	}
	return o.ActivityLog, true
}

// HasActivityLog returns a boolean if a field has been set.
func (o *MembershipClaimSummaryType) HasActivityLog() bool {
	if o != nil && !IsNil(o.ActivityLog) {
		return true
	}

	return false
}

// SetActivityLog gets a reference to the given []ClaimActivityLogType and assigns it to the ActivityLog field.
func (o *MembershipClaimSummaryType) SetActivityLog(v []ClaimActivityLogType) {
	o.ActivityLog = v
}

func (o MembershipClaimSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipClaimSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClaimNo) {
		toSerialize["claimNo"] = o.ClaimNo
	}
	if !IsNil(o.ClaimDate) {
		toSerialize["claimDate"] = o.ClaimDate
	}
	if !IsNil(o.CallerName) {
		toSerialize["callerName"] = o.CallerName
	}
	if !IsNil(o.ReplyBy) {
		toSerialize["replyBy"] = o.ReplyBy
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.ClaimStatus) {
		toSerialize["claimStatus"] = o.ClaimStatus
	}
	if !IsNil(o.ClaimType) {
		toSerialize["claimType"] = o.ClaimType
	}
	if !IsNil(o.CloseDate) {
		toSerialize["closeDate"] = o.CloseDate
	}
	if !IsNil(o.RecordType) {
		toSerialize["recordType"] = o.RecordType
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.Arrival) {
		toSerialize["arrival"] = o.Arrival
	}
	if !IsNil(o.Departure) {
		toSerialize["departure"] = o.Departure
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Submitter) {
		toSerialize["submitter"] = o.Submitter
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.CallerInformation) {
		toSerialize["callerInformation"] = o.CallerInformation
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.MembershipIdNo) {
		toSerialize["membershipIdNo"] = o.MembershipIdNo
	}
	if !IsNil(o.ActivityLog) {
		toSerialize["activityLog"] = o.ActivityLog
	}
	return toSerialize, nil
}

type NullableMembershipClaimSummaryType struct {
	value *MembershipClaimSummaryType
	isSet bool
}

func (v NullableMembershipClaimSummaryType) Get() *MembershipClaimSummaryType {
	return v.value
}

func (v *NullableMembershipClaimSummaryType) Set(val *MembershipClaimSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipClaimSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipClaimSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipClaimSummaryType(val *MembershipClaimSummaryType) *NullableMembershipClaimSummaryType {
	return &NullableMembershipClaimSummaryType{value: val, isSet: true}
}

func (v NullableMembershipClaimSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipClaimSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


