/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProcessStagedProfileResultType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessStagedProfileResultType{}

// ProcessStagedProfileResultType Information about the staged profile after processing.
type ProcessStagedProfileResultType struct {
	// Hotel Code for the staged profile.
	HotelId *string `json:"hotelId,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
	// The resulting profile status after processing the staged profile.
	StageStatus *string `json:"stageStatus,omitempty"`
	// Processing/Rematching result for the staged profile.
	Result *string `json:"result,omitempty"`
}

// NewProcessStagedProfileResultType instantiates a new ProcessStagedProfileResultType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessStagedProfileResultType() *ProcessStagedProfileResultType {
	this := ProcessStagedProfileResultType{}
	return &this
}

// NewProcessStagedProfileResultTypeWithDefaults instantiates a new ProcessStagedProfileResultType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessStagedProfileResultTypeWithDefaults() *ProcessStagedProfileResultType {
	this := ProcessStagedProfileResultType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ProcessStagedProfileResultType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStagedProfileResultType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ProcessStagedProfileResultType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ProcessStagedProfileResultType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ProcessStagedProfileResultType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStagedProfileResultType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ProcessStagedProfileResultType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *ProcessStagedProfileResultType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetStageStatus returns the StageStatus field value if set, zero value otherwise.
func (o *ProcessStagedProfileResultType) GetStageStatus() string {
	if o == nil || IsNil(o.StageStatus) {
		var ret string
		return ret
	}
	return *o.StageStatus
}

// GetStageStatusOk returns a tuple with the StageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStagedProfileResultType) GetStageStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StageStatus) {
		return nil, false
	}
	return o.StageStatus, true
}

// HasStageStatus returns a boolean if a field has been set.
func (o *ProcessStagedProfileResultType) HasStageStatus() bool {
	if o != nil && !IsNil(o.StageStatus) {
		return true
	}

	return false
}

// SetStageStatus gets a reference to the given string and assigns it to the StageStatus field.
func (o *ProcessStagedProfileResultType) SetStageStatus(v string) {
	o.StageStatus = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ProcessStagedProfileResultType) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessStagedProfileResultType) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ProcessStagedProfileResultType) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *ProcessStagedProfileResultType) SetResult(v string) {
	o.Result = &v
}

func (o ProcessStagedProfileResultType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessStagedProfileResultType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.StageStatus) {
		toSerialize["stageStatus"] = o.StageStatus
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableProcessStagedProfileResultType struct {
	value *ProcessStagedProfileResultType
	isSet bool
}

func (v NullableProcessStagedProfileResultType) Get() *ProcessStagedProfileResultType {
	return v.value
}

func (v *NullableProcessStagedProfileResultType) Set(val *ProcessStagedProfileResultType) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessStagedProfileResultType) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessStagedProfileResultType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessStagedProfileResultType(val *ProcessStagedProfileResultType) *NullableProcessStagedProfileResultType {
	return &NullableProcessStagedProfileResultType{value: val, isSet: true}
}

func (v NullableProcessStagedProfileResultType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessStagedProfileResultType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


