/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StayRevenuesDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayRevenuesDetailsType{}

// StayRevenuesDetailsType struct for StayRevenuesDetailsType
type StayRevenuesDetailsType struct {
	// 
	FolioView *string `json:"folioView,omitempty"`
	// Specifies the amount of revenue.
	RevenueAmount *float32 `json:"revenueAmount,omitempty"`
	StayRevenues []StayRevenuesType `json:"stayRevenues,omitempty"`
}

// NewStayRevenuesDetailsType instantiates a new StayRevenuesDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayRevenuesDetailsType() *StayRevenuesDetailsType {
	this := StayRevenuesDetailsType{}
	return &this
}

// NewStayRevenuesDetailsTypeWithDefaults instantiates a new StayRevenuesDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayRevenuesDetailsTypeWithDefaults() *StayRevenuesDetailsType {
	this := StayRevenuesDetailsType{}
	return &this
}

// GetFolioView returns the FolioView field value if set, zero value otherwise.
func (o *StayRevenuesDetailsType) GetFolioView() string {
	if o == nil || IsNil(o.FolioView) {
		var ret string
		return ret
	}
	return *o.FolioView
}

// GetFolioViewOk returns a tuple with the FolioView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRevenuesDetailsType) GetFolioViewOk() (*string, bool) {
	if o == nil || IsNil(o.FolioView) {
		return nil, false
	}
	return o.FolioView, true
}

// HasFolioView returns a boolean if a field has been set.
func (o *StayRevenuesDetailsType) HasFolioView() bool {
	if o != nil && !IsNil(o.FolioView) {
		return true
	}

	return false
}

// SetFolioView gets a reference to the given string and assigns it to the FolioView field.
func (o *StayRevenuesDetailsType) SetFolioView(v string) {
	o.FolioView = &v
}

// GetRevenueAmount returns the RevenueAmount field value if set, zero value otherwise.
func (o *StayRevenuesDetailsType) GetRevenueAmount() float32 {
	if o == nil || IsNil(o.RevenueAmount) {
		var ret float32
		return ret
	}
	return *o.RevenueAmount
}

// GetRevenueAmountOk returns a tuple with the RevenueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRevenuesDetailsType) GetRevenueAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.RevenueAmount) {
		return nil, false
	}
	return o.RevenueAmount, true
}

// HasRevenueAmount returns a boolean if a field has been set.
func (o *StayRevenuesDetailsType) HasRevenueAmount() bool {
	if o != nil && !IsNil(o.RevenueAmount) {
		return true
	}

	return false
}

// SetRevenueAmount gets a reference to the given float32 and assigns it to the RevenueAmount field.
func (o *StayRevenuesDetailsType) SetRevenueAmount(v float32) {
	o.RevenueAmount = &v
}

// GetStayRevenues returns the StayRevenues field value if set, zero value otherwise.
func (o *StayRevenuesDetailsType) GetStayRevenues() []StayRevenuesType {
	if o == nil || IsNil(o.StayRevenues) {
		var ret []StayRevenuesType
		return ret
	}
	return o.StayRevenues
}

// GetStayRevenuesOk returns a tuple with the StayRevenues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRevenuesDetailsType) GetStayRevenuesOk() ([]StayRevenuesType, bool) {
	if o == nil || IsNil(o.StayRevenues) {
		return nil, false
	}
	return o.StayRevenues, true
}

// HasStayRevenues returns a boolean if a field has been set.
func (o *StayRevenuesDetailsType) HasStayRevenues() bool {
	if o != nil && !IsNil(o.StayRevenues) {
		return true
	}

	return false
}

// SetStayRevenues gets a reference to the given []StayRevenuesType and assigns it to the StayRevenues field.
func (o *StayRevenuesDetailsType) SetStayRevenues(v []StayRevenuesType) {
	o.StayRevenues = v
}

func (o StayRevenuesDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayRevenuesDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioView) {
		toSerialize["folioView"] = o.FolioView
	}
	if !IsNil(o.RevenueAmount) {
		toSerialize["revenueAmount"] = o.RevenueAmount
	}
	if !IsNil(o.StayRevenues) {
		toSerialize["stayRevenues"] = o.StayRevenues
	}
	return toSerialize, nil
}

type NullableStayRevenuesDetailsType struct {
	value *StayRevenuesDetailsType
	isSet bool
}

func (v NullableStayRevenuesDetailsType) Get() *StayRevenuesDetailsType {
	return v.value
}

func (v *NullableStayRevenuesDetailsType) Set(val *StayRevenuesDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayRevenuesDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayRevenuesDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayRevenuesDetailsType(val *StayRevenuesDetailsType) *NullableStayRevenuesDetailsType {
	return &NullableStayRevenuesDetailsType{value: val, isSet: true}
}

func (v NullableStayRevenuesDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayRevenuesDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


