/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomChargePostingRhythmType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomChargePostingRhythmType{}

// CustomChargePostingRhythmType Posting rhythm details.
type CustomChargePostingRhythmType struct {
	Type *CustomChargePostingRhythmTypeOption `json:"type,omitempty"`
	// Starting night of the reservation for which the custom charge will be posted. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
	StartOnNight *int32 `json:"startOnNight,omitempty"`
	// The custom charge will be posted for every X night, where X is the frequency of nights. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
	PostEveryXNights *int32 `json:"postEveryXNights,omitempty"`
	// The amount for which the custom charge will be posted to the reservation, starting on the night defined by 'Start On Night'. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
	StartOnNightPrice *int32 `json:"startOnNightPrice,omitempty"`
	// The maximum number of nights for which the custom charge posted to the reservation. This is applicable when the posting rhythm 'Post Every Night For X Nights' is selected.
	MaxNights *int32 `json:"maxNights,omitempty"`
}

// NewCustomChargePostingRhythmType instantiates a new CustomChargePostingRhythmType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomChargePostingRhythmType() *CustomChargePostingRhythmType {
	this := CustomChargePostingRhythmType{}
	return &this
}

// NewCustomChargePostingRhythmTypeWithDefaults instantiates a new CustomChargePostingRhythmType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomChargePostingRhythmTypeWithDefaults() *CustomChargePostingRhythmType {
	this := CustomChargePostingRhythmType{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CustomChargePostingRhythmType) GetType() CustomChargePostingRhythmTypeOption {
	if o == nil || IsNil(o.Type) {
		var ret CustomChargePostingRhythmTypeOption
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargePostingRhythmType) GetTypeOk() (*CustomChargePostingRhythmTypeOption, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CustomChargePostingRhythmType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CustomChargePostingRhythmTypeOption and assigns it to the Type field.
func (o *CustomChargePostingRhythmType) SetType(v CustomChargePostingRhythmTypeOption) {
	o.Type = &v
}

// GetStartOnNight returns the StartOnNight field value if set, zero value otherwise.
func (o *CustomChargePostingRhythmType) GetStartOnNight() int32 {
	if o == nil || IsNil(o.StartOnNight) {
		var ret int32
		return ret
	}
	return *o.StartOnNight
}

// GetStartOnNightOk returns a tuple with the StartOnNight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargePostingRhythmType) GetStartOnNightOk() (*int32, bool) {
	if o == nil || IsNil(o.StartOnNight) {
		return nil, false
	}
	return o.StartOnNight, true
}

// HasStartOnNight returns a boolean if a field has been set.
func (o *CustomChargePostingRhythmType) HasStartOnNight() bool {
	if o != nil && !IsNil(o.StartOnNight) {
		return true
	}

	return false
}

// SetStartOnNight gets a reference to the given int32 and assigns it to the StartOnNight field.
func (o *CustomChargePostingRhythmType) SetStartOnNight(v int32) {
	o.StartOnNight = &v
}

// GetPostEveryXNights returns the PostEveryXNights field value if set, zero value otherwise.
func (o *CustomChargePostingRhythmType) GetPostEveryXNights() int32 {
	if o == nil || IsNil(o.PostEveryXNights) {
		var ret int32
		return ret
	}
	return *o.PostEveryXNights
}

// GetPostEveryXNightsOk returns a tuple with the PostEveryXNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargePostingRhythmType) GetPostEveryXNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.PostEveryXNights) {
		return nil, false
	}
	return o.PostEveryXNights, true
}

// HasPostEveryXNights returns a boolean if a field has been set.
func (o *CustomChargePostingRhythmType) HasPostEveryXNights() bool {
	if o != nil && !IsNil(o.PostEveryXNights) {
		return true
	}

	return false
}

// SetPostEveryXNights gets a reference to the given int32 and assigns it to the PostEveryXNights field.
func (o *CustomChargePostingRhythmType) SetPostEveryXNights(v int32) {
	o.PostEveryXNights = &v
}

// GetStartOnNightPrice returns the StartOnNightPrice field value if set, zero value otherwise.
func (o *CustomChargePostingRhythmType) GetStartOnNightPrice() int32 {
	if o == nil || IsNil(o.StartOnNightPrice) {
		var ret int32
		return ret
	}
	return *o.StartOnNightPrice
}

// GetStartOnNightPriceOk returns a tuple with the StartOnNightPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargePostingRhythmType) GetStartOnNightPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.StartOnNightPrice) {
		return nil, false
	}
	return o.StartOnNightPrice, true
}

// HasStartOnNightPrice returns a boolean if a field has been set.
func (o *CustomChargePostingRhythmType) HasStartOnNightPrice() bool {
	if o != nil && !IsNil(o.StartOnNightPrice) {
		return true
	}

	return false
}

// SetStartOnNightPrice gets a reference to the given int32 and assigns it to the StartOnNightPrice field.
func (o *CustomChargePostingRhythmType) SetStartOnNightPrice(v int32) {
	o.StartOnNightPrice = &v
}

// GetMaxNights returns the MaxNights field value if set, zero value otherwise.
func (o *CustomChargePostingRhythmType) GetMaxNights() int32 {
	if o == nil || IsNil(o.MaxNights) {
		var ret int32
		return ret
	}
	return *o.MaxNights
}

// GetMaxNightsOk returns a tuple with the MaxNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargePostingRhythmType) GetMaxNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxNights) {
		return nil, false
	}
	return o.MaxNights, true
}

// HasMaxNights returns a boolean if a field has been set.
func (o *CustomChargePostingRhythmType) HasMaxNights() bool {
	if o != nil && !IsNil(o.MaxNights) {
		return true
	}

	return false
}

// SetMaxNights gets a reference to the given int32 and assigns it to the MaxNights field.
func (o *CustomChargePostingRhythmType) SetMaxNights(v int32) {
	o.MaxNights = &v
}

func (o CustomChargePostingRhythmType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomChargePostingRhythmType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.StartOnNight) {
		toSerialize["startOnNight"] = o.StartOnNight
	}
	if !IsNil(o.PostEveryXNights) {
		toSerialize["postEveryXNights"] = o.PostEveryXNights
	}
	if !IsNil(o.StartOnNightPrice) {
		toSerialize["startOnNightPrice"] = o.StartOnNightPrice
	}
	if !IsNil(o.MaxNights) {
		toSerialize["maxNights"] = o.MaxNights
	}
	return toSerialize, nil
}

type NullableCustomChargePostingRhythmType struct {
	value *CustomChargePostingRhythmType
	isSet bool
}

func (v NullableCustomChargePostingRhythmType) Get() *CustomChargePostingRhythmType {
	return v.value
}

func (v *NullableCustomChargePostingRhythmType) Set(val *CustomChargePostingRhythmType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomChargePostingRhythmType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomChargePostingRhythmType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomChargePostingRhythmType(val *CustomChargePostingRhythmType) *NullableCustomChargePostingRhythmType {
	return &NullableCustomChargePostingRhythmType{value: val, isSet: true}
}

func (v NullableCustomChargePostingRhythmType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomChargePostingRhythmType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


