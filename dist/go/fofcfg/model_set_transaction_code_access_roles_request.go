/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the SetTransactionCodeAccessRolesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetTransactionCodeAccessRolesRequest{}

// SetTransactionCodeAccessRolesRequest struct for SetTransactionCodeAccessRolesRequest
type SetTransactionCodeAccessRolesRequest struct {
	Links []InstanceLink `json:"links,omitempty"`
	// List of Roles having access to set of transaction codes
	TransactionAccessRoles []TrxCodeAccessRoleType `json:"transactionAccessRoles,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewSetTransactionCodeAccessRolesRequest instantiates a new SetTransactionCodeAccessRolesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetTransactionCodeAccessRolesRequest() *SetTransactionCodeAccessRolesRequest {
	this := SetTransactionCodeAccessRolesRequest{}
	return &this
}

// NewSetTransactionCodeAccessRolesRequestWithDefaults instantiates a new SetTransactionCodeAccessRolesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetTransactionCodeAccessRolesRequestWithDefaults() *SetTransactionCodeAccessRolesRequest {
	this := SetTransactionCodeAccessRolesRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SetTransactionCodeAccessRolesRequest) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTransactionCodeAccessRolesRequest) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SetTransactionCodeAccessRolesRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *SetTransactionCodeAccessRolesRequest) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetTransactionAccessRoles returns the TransactionAccessRoles field value if set, zero value otherwise.
func (o *SetTransactionCodeAccessRolesRequest) GetTransactionAccessRoles() []TrxCodeAccessRoleType {
	if o == nil || IsNil(o.TransactionAccessRoles) {
		var ret []TrxCodeAccessRoleType
		return ret
	}
	return o.TransactionAccessRoles
}

// GetTransactionAccessRolesOk returns a tuple with the TransactionAccessRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTransactionCodeAccessRolesRequest) GetTransactionAccessRolesOk() ([]TrxCodeAccessRoleType, bool) {
	if o == nil || IsNil(o.TransactionAccessRoles) {
		return nil, false
	}
	return o.TransactionAccessRoles, true
}

// HasTransactionAccessRoles returns a boolean if a field has been set.
func (o *SetTransactionCodeAccessRolesRequest) HasTransactionAccessRoles() bool {
	if o != nil && !IsNil(o.TransactionAccessRoles) {
		return true
	}

	return false
}

// SetTransactionAccessRoles gets a reference to the given []TrxCodeAccessRoleType and assigns it to the TransactionAccessRoles field.
func (o *SetTransactionCodeAccessRolesRequest) SetTransactionAccessRoles(v []TrxCodeAccessRoleType) {
	o.TransactionAccessRoles = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *SetTransactionCodeAccessRolesRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTransactionCodeAccessRolesRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *SetTransactionCodeAccessRolesRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *SetTransactionCodeAccessRolesRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o SetTransactionCodeAccessRolesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetTransactionCodeAccessRolesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.TransactionAccessRoles) {
		toSerialize["transactionAccessRoles"] = o.TransactionAccessRoles
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableSetTransactionCodeAccessRolesRequest struct {
	value *SetTransactionCodeAccessRolesRequest
	isSet bool
}

func (v NullableSetTransactionCodeAccessRolesRequest) Get() *SetTransactionCodeAccessRolesRequest {
	return v.value
}

func (v *NullableSetTransactionCodeAccessRolesRequest) Set(val *SetTransactionCodeAccessRolesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetTransactionCodeAccessRolesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetTransactionCodeAccessRolesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetTransactionCodeAccessRolesRequest(val *SetTransactionCodeAccessRolesRequest) *NullableSetTransactionCodeAccessRolesRequest {
	return &NullableSetTransactionCodeAccessRolesRequest{value: val, isSet: true}
}

func (v NullableSetTransactionCodeAccessRolesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetTransactionCodeAccessRolesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


