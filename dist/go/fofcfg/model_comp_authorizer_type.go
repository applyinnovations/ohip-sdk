/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CompAuthorizerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompAuthorizerType{}

// CompAuthorizerType Information related to comp authorizers.
type CompAuthorizerType struct {
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	AuthorizerId *UniqueIDType `json:"authorizerId,omitempty"`
	ProfileId *UniqueIDType `json:"profileId,omitempty"`
	// Name for the authorizer.
	Authorizer *string `json:"authorizer,omitempty"`
	// Display name for the authorizer.
	AuthorizerDisplayName *string `json:"authorizerDisplayName,omitempty"`
	// Last name for the authorizer.
	LastName *string `json:"lastName,omitempty"`
	// First name for the authorizer.
	FirstName *string `json:"firstName,omitempty"`
	// Full name of the authorizer.
	Name *string `json:"name,omitempty"`
	// Credit limit associated for the authorizer.
	TotalCreditLimit *int32 `json:"totalCreditLimit,omitempty"`
	ARAccount *ARAccountType `json:"aRAccount,omitempty"`
	// Comp authorizer details information.
	CompAuthorizerHeaders []CompAuthorizerHeaderType `json:"compAuthorizerHeaders,omitempty"`
	// Indicator that tells whether the authorizer is active or not.
	Inactive *bool `json:"inactive,omitempty"`
	// Indicator that tells whether to override warnings when deactivating authorizer.
	OverrideWarning *bool `json:"overrideWarning,omitempty"`
}

// NewCompAuthorizerType instantiates a new CompAuthorizerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompAuthorizerType() *CompAuthorizerType {
	this := CompAuthorizerType{}
	return &this
}

// NewCompAuthorizerTypeWithDefaults instantiates a new CompAuthorizerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompAuthorizerTypeWithDefaults() *CompAuthorizerType {
	this := CompAuthorizerType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CompAuthorizerType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetAuthorizerId returns the AuthorizerId field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetAuthorizerId() UniqueIDType {
	if o == nil || IsNil(o.AuthorizerId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AuthorizerId
}

// GetAuthorizerIdOk returns a tuple with the AuthorizerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetAuthorizerIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AuthorizerId) {
		return nil, false
	}
	return o.AuthorizerId, true
}

// HasAuthorizerId returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasAuthorizerId() bool {
	if o != nil && !IsNil(o.AuthorizerId) {
		return true
	}

	return false
}

// SetAuthorizerId gets a reference to the given UniqueIDType and assigns it to the AuthorizerId field.
func (o *CompAuthorizerType) SetAuthorizerId(v UniqueIDType) {
	o.AuthorizerId = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetProfileId() UniqueIDType {
	if o == nil || IsNil(o.ProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given UniqueIDType and assigns it to the ProfileId field.
func (o *CompAuthorizerType) SetProfileId(v UniqueIDType) {
	o.ProfileId = &v
}

// GetAuthorizer returns the Authorizer field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetAuthorizer() string {
	if o == nil || IsNil(o.Authorizer) {
		var ret string
		return ret
	}
	return *o.Authorizer
}

// GetAuthorizerOk returns a tuple with the Authorizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetAuthorizerOk() (*string, bool) {
	if o == nil || IsNil(o.Authorizer) {
		return nil, false
	}
	return o.Authorizer, true
}

// HasAuthorizer returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasAuthorizer() bool {
	if o != nil && !IsNil(o.Authorizer) {
		return true
	}

	return false
}

// SetAuthorizer gets a reference to the given string and assigns it to the Authorizer field.
func (o *CompAuthorizerType) SetAuthorizer(v string) {
	o.Authorizer = &v
}

// GetAuthorizerDisplayName returns the AuthorizerDisplayName field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetAuthorizerDisplayName() string {
	if o == nil || IsNil(o.AuthorizerDisplayName) {
		var ret string
		return ret
	}
	return *o.AuthorizerDisplayName
}

// GetAuthorizerDisplayNameOk returns a tuple with the AuthorizerDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetAuthorizerDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizerDisplayName) {
		return nil, false
	}
	return o.AuthorizerDisplayName, true
}

// HasAuthorizerDisplayName returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasAuthorizerDisplayName() bool {
	if o != nil && !IsNil(o.AuthorizerDisplayName) {
		return true
	}

	return false
}

// SetAuthorizerDisplayName gets a reference to the given string and assigns it to the AuthorizerDisplayName field.
func (o *CompAuthorizerType) SetAuthorizerDisplayName(v string) {
	o.AuthorizerDisplayName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CompAuthorizerType) SetLastName(v string) {
	o.LastName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CompAuthorizerType) SetFirstName(v string) {
	o.FirstName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompAuthorizerType) SetName(v string) {
	o.Name = &v
}

// GetTotalCreditLimit returns the TotalCreditLimit field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetTotalCreditLimit() int32 {
	if o == nil || IsNil(o.TotalCreditLimit) {
		var ret int32
		return ret
	}
	return *o.TotalCreditLimit
}

// GetTotalCreditLimitOk returns a tuple with the TotalCreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetTotalCreditLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCreditLimit) {
		return nil, false
	}
	return o.TotalCreditLimit, true
}

// HasTotalCreditLimit returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasTotalCreditLimit() bool {
	if o != nil && !IsNil(o.TotalCreditLimit) {
		return true
	}

	return false
}

// SetTotalCreditLimit gets a reference to the given int32 and assigns it to the TotalCreditLimit field.
func (o *CompAuthorizerType) SetTotalCreditLimit(v int32) {
	o.TotalCreditLimit = &v
}

// GetARAccount returns the ARAccount field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetARAccount() ARAccountType {
	if o == nil || IsNil(o.ARAccount) {
		var ret ARAccountType
		return ret
	}
	return *o.ARAccount
}

// GetARAccountOk returns a tuple with the ARAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetARAccountOk() (*ARAccountType, bool) {
	if o == nil || IsNil(o.ARAccount) {
		return nil, false
	}
	return o.ARAccount, true
}

// HasARAccount returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasARAccount() bool {
	if o != nil && !IsNil(o.ARAccount) {
		return true
	}

	return false
}

// SetARAccount gets a reference to the given ARAccountType and assigns it to the ARAccount field.
func (o *CompAuthorizerType) SetARAccount(v ARAccountType) {
	o.ARAccount = &v
}

// GetCompAuthorizerHeaders returns the CompAuthorizerHeaders field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetCompAuthorizerHeaders() []CompAuthorizerHeaderType {
	if o == nil || IsNil(o.CompAuthorizerHeaders) {
		var ret []CompAuthorizerHeaderType
		return ret
	}
	return o.CompAuthorizerHeaders
}

// GetCompAuthorizerHeadersOk returns a tuple with the CompAuthorizerHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetCompAuthorizerHeadersOk() ([]CompAuthorizerHeaderType, bool) {
	if o == nil || IsNil(o.CompAuthorizerHeaders) {
		return nil, false
	}
	return o.CompAuthorizerHeaders, true
}

// HasCompAuthorizerHeaders returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasCompAuthorizerHeaders() bool {
	if o != nil && !IsNil(o.CompAuthorizerHeaders) {
		return true
	}

	return false
}

// SetCompAuthorizerHeaders gets a reference to the given []CompAuthorizerHeaderType and assigns it to the CompAuthorizerHeaders field.
func (o *CompAuthorizerType) SetCompAuthorizerHeaders(v []CompAuthorizerHeaderType) {
	o.CompAuthorizerHeaders = v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *CompAuthorizerType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetOverrideWarning returns the OverrideWarning field value if set, zero value otherwise.
func (o *CompAuthorizerType) GetOverrideWarning() bool {
	if o == nil || IsNil(o.OverrideWarning) {
		var ret bool
		return ret
	}
	return *o.OverrideWarning
}

// GetOverrideWarningOk returns a tuple with the OverrideWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompAuthorizerType) GetOverrideWarningOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideWarning) {
		return nil, false
	}
	return o.OverrideWarning, true
}

// HasOverrideWarning returns a boolean if a field has been set.
func (o *CompAuthorizerType) HasOverrideWarning() bool {
	if o != nil && !IsNil(o.OverrideWarning) {
		return true
	}

	return false
}

// SetOverrideWarning gets a reference to the given bool and assigns it to the OverrideWarning field.
func (o *CompAuthorizerType) SetOverrideWarning(v bool) {
	o.OverrideWarning = &v
}

func (o CompAuthorizerType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompAuthorizerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.AuthorizerId) {
		toSerialize["authorizerId"] = o.AuthorizerId
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.Authorizer) {
		toSerialize["authorizer"] = o.Authorizer
	}
	if !IsNil(o.AuthorizerDisplayName) {
		toSerialize["authorizerDisplayName"] = o.AuthorizerDisplayName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TotalCreditLimit) {
		toSerialize["totalCreditLimit"] = o.TotalCreditLimit
	}
	if !IsNil(o.ARAccount) {
		toSerialize["aRAccount"] = o.ARAccount
	}
	if !IsNil(o.CompAuthorizerHeaders) {
		toSerialize["compAuthorizerHeaders"] = o.CompAuthorizerHeaders
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.OverrideWarning) {
		toSerialize["overrideWarning"] = o.OverrideWarning
	}
	return toSerialize, nil
}

type NullableCompAuthorizerType struct {
	value *CompAuthorizerType
	isSet bool
}

func (v NullableCompAuthorizerType) Get() *CompAuthorizerType {
	return v.value
}

func (v *NullableCompAuthorizerType) Set(val *CompAuthorizerType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompAuthorizerType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompAuthorizerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompAuthorizerType(val *CompAuthorizerType) *NullableCompAuthorizerType {
	return &NullableCompAuthorizerType{value: val, isSet: true}
}

func (v NullableCompAuthorizerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompAuthorizerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


