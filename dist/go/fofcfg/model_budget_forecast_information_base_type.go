/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the BudgetForecastInformationBaseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BudgetForecastInformationBaseType{}

// BudgetForecastInformationBaseType Holds budget forecast information for included segment types.
type BudgetForecastInformationBaseType struct {
	CateringSegmentInformation *BudgetForecastCateringInfoBaseType `json:"cateringSegmentInformation,omitempty"`
	CustomSegmentInformation *BudgetForecastCustomInfoBaseType `json:"customSegmentInformation,omitempty"`
	// Opera Hotel code for the Fetch Revenue information.
	HotelId *string `json:"hotelId,omitempty"`
	MarketSegmentInformation *BudgetForecastMarketInfoBaseType `json:"marketSegmentInformation,omitempty"`
	RateSegmentInformation *BudgetForecastRateInfoBaseType `json:"rateSegmentInformation,omitempty"`
	TransactionSegmentInformation *BudgetForecastTransactionInfoBaseType `json:"transactionSegmentInformation,omitempty"`
	// Year of revenue to be fetched.
	Year *string `json:"year,omitempty"`
}

// NewBudgetForecastInformationBaseType instantiates a new BudgetForecastInformationBaseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetForecastInformationBaseType() *BudgetForecastInformationBaseType {
	this := BudgetForecastInformationBaseType{}
	return &this
}

// NewBudgetForecastInformationBaseTypeWithDefaults instantiates a new BudgetForecastInformationBaseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetForecastInformationBaseTypeWithDefaults() *BudgetForecastInformationBaseType {
	this := BudgetForecastInformationBaseType{}
	return &this
}

// GetCateringSegmentInformation returns the CateringSegmentInformation field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetCateringSegmentInformation() BudgetForecastCateringInfoBaseType {
	if o == nil || IsNil(o.CateringSegmentInformation) {
		var ret BudgetForecastCateringInfoBaseType
		return ret
	}
	return *o.CateringSegmentInformation
}

// GetCateringSegmentInformationOk returns a tuple with the CateringSegmentInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetCateringSegmentInformationOk() (*BudgetForecastCateringInfoBaseType, bool) {
	if o == nil || IsNil(o.CateringSegmentInformation) {
		return nil, false
	}
	return o.CateringSegmentInformation, true
}

// HasCateringSegmentInformation returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasCateringSegmentInformation() bool {
	if o != nil && !IsNil(o.CateringSegmentInformation) {
		return true
	}

	return false
}

// SetCateringSegmentInformation gets a reference to the given BudgetForecastCateringInfoBaseType and assigns it to the CateringSegmentInformation field.
func (o *BudgetForecastInformationBaseType) SetCateringSegmentInformation(v BudgetForecastCateringInfoBaseType) {
	o.CateringSegmentInformation = &v
}

// GetCustomSegmentInformation returns the CustomSegmentInformation field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetCustomSegmentInformation() BudgetForecastCustomInfoBaseType {
	if o == nil || IsNil(o.CustomSegmentInformation) {
		var ret BudgetForecastCustomInfoBaseType
		return ret
	}
	return *o.CustomSegmentInformation
}

// GetCustomSegmentInformationOk returns a tuple with the CustomSegmentInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetCustomSegmentInformationOk() (*BudgetForecastCustomInfoBaseType, bool) {
	if o == nil || IsNil(o.CustomSegmentInformation) {
		return nil, false
	}
	return o.CustomSegmentInformation, true
}

// HasCustomSegmentInformation returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasCustomSegmentInformation() bool {
	if o != nil && !IsNil(o.CustomSegmentInformation) {
		return true
	}

	return false
}

// SetCustomSegmentInformation gets a reference to the given BudgetForecastCustomInfoBaseType and assigns it to the CustomSegmentInformation field.
func (o *BudgetForecastInformationBaseType) SetCustomSegmentInformation(v BudgetForecastCustomInfoBaseType) {
	o.CustomSegmentInformation = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BudgetForecastInformationBaseType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetMarketSegmentInformation returns the MarketSegmentInformation field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetMarketSegmentInformation() BudgetForecastMarketInfoBaseType {
	if o == nil || IsNil(o.MarketSegmentInformation) {
		var ret BudgetForecastMarketInfoBaseType
		return ret
	}
	return *o.MarketSegmentInformation
}

// GetMarketSegmentInformationOk returns a tuple with the MarketSegmentInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetMarketSegmentInformationOk() (*BudgetForecastMarketInfoBaseType, bool) {
	if o == nil || IsNil(o.MarketSegmentInformation) {
		return nil, false
	}
	return o.MarketSegmentInformation, true
}

// HasMarketSegmentInformation returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasMarketSegmentInformation() bool {
	if o != nil && !IsNil(o.MarketSegmentInformation) {
		return true
	}

	return false
}

// SetMarketSegmentInformation gets a reference to the given BudgetForecastMarketInfoBaseType and assigns it to the MarketSegmentInformation field.
func (o *BudgetForecastInformationBaseType) SetMarketSegmentInformation(v BudgetForecastMarketInfoBaseType) {
	o.MarketSegmentInformation = &v
}

// GetRateSegmentInformation returns the RateSegmentInformation field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetRateSegmentInformation() BudgetForecastRateInfoBaseType {
	if o == nil || IsNil(o.RateSegmentInformation) {
		var ret BudgetForecastRateInfoBaseType
		return ret
	}
	return *o.RateSegmentInformation
}

// GetRateSegmentInformationOk returns a tuple with the RateSegmentInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetRateSegmentInformationOk() (*BudgetForecastRateInfoBaseType, bool) {
	if o == nil || IsNil(o.RateSegmentInformation) {
		return nil, false
	}
	return o.RateSegmentInformation, true
}

// HasRateSegmentInformation returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasRateSegmentInformation() bool {
	if o != nil && !IsNil(o.RateSegmentInformation) {
		return true
	}

	return false
}

// SetRateSegmentInformation gets a reference to the given BudgetForecastRateInfoBaseType and assigns it to the RateSegmentInformation field.
func (o *BudgetForecastInformationBaseType) SetRateSegmentInformation(v BudgetForecastRateInfoBaseType) {
	o.RateSegmentInformation = &v
}

// GetTransactionSegmentInformation returns the TransactionSegmentInformation field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetTransactionSegmentInformation() BudgetForecastTransactionInfoBaseType {
	if o == nil || IsNil(o.TransactionSegmentInformation) {
		var ret BudgetForecastTransactionInfoBaseType
		return ret
	}
	return *o.TransactionSegmentInformation
}

// GetTransactionSegmentInformationOk returns a tuple with the TransactionSegmentInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetTransactionSegmentInformationOk() (*BudgetForecastTransactionInfoBaseType, bool) {
	if o == nil || IsNil(o.TransactionSegmentInformation) {
		return nil, false
	}
	return o.TransactionSegmentInformation, true
}

// HasTransactionSegmentInformation returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasTransactionSegmentInformation() bool {
	if o != nil && !IsNil(o.TransactionSegmentInformation) {
		return true
	}

	return false
}

// SetTransactionSegmentInformation gets a reference to the given BudgetForecastTransactionInfoBaseType and assigns it to the TransactionSegmentInformation field.
func (o *BudgetForecastInformationBaseType) SetTransactionSegmentInformation(v BudgetForecastTransactionInfoBaseType) {
	o.TransactionSegmentInformation = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *BudgetForecastInformationBaseType) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastInformationBaseType) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *BudgetForecastInformationBaseType) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *BudgetForecastInformationBaseType) SetYear(v string) {
	o.Year = &v
}

func (o BudgetForecastInformationBaseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BudgetForecastInformationBaseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CateringSegmentInformation) {
		toSerialize["cateringSegmentInformation"] = o.CateringSegmentInformation
	}
	if !IsNil(o.CustomSegmentInformation) {
		toSerialize["customSegmentInformation"] = o.CustomSegmentInformation
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.MarketSegmentInformation) {
		toSerialize["marketSegmentInformation"] = o.MarketSegmentInformation
	}
	if !IsNil(o.RateSegmentInformation) {
		toSerialize["rateSegmentInformation"] = o.RateSegmentInformation
	}
	if !IsNil(o.TransactionSegmentInformation) {
		toSerialize["transactionSegmentInformation"] = o.TransactionSegmentInformation
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableBudgetForecastInformationBaseType struct {
	value *BudgetForecastInformationBaseType
	isSet bool
}

func (v NullableBudgetForecastInformationBaseType) Get() *BudgetForecastInformationBaseType {
	return v.value
}

func (v *NullableBudgetForecastInformationBaseType) Set(val *BudgetForecastInformationBaseType) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetForecastInformationBaseType) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetForecastInformationBaseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetForecastInformationBaseType(val *BudgetForecastInformationBaseType) *NullableBudgetForecastInformationBaseType {
	return &NullableBudgetForecastInformationBaseType{value: val, isSet: true}
}

func (v NullableBudgetForecastInformationBaseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetForecastInformationBaseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


