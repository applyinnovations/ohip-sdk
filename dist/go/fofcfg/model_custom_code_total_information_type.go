/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomCodeTotalInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomCodeTotalInformationType{}

// CustomCodeTotalInformationType Budget Forecast information for Custom segment.
type CustomCodeTotalInformationType struct {
	BudgetTotalInfo *CustomValueInfoType `json:"budgetTotalInfo,omitempty"`
	ForecastTotalInfo *CustomValueInfoType `json:"forecastTotalInfo,omitempty"`
	ActualTotalInfo *CustomValueInfoType `json:"actualTotalInfo,omitempty"`
	// Monthly Value Variance information.
	AFVarianceTotalInfo []MonthlyCustomVarianceInfoType `json:"aFVarianceTotalInfo,omitempty"`
	// Monthly Value Variance information.
	ABVarianceTotalInfo []MonthlyCustomVarianceInfoType `json:"aBVarianceTotalInfo,omitempty"`
	// Monthly Value Variance information.
	FBVarianceTotalInfo []MonthlyCustomVarianceInfoType `json:"fBVarianceTotalInfo,omitempty"`
}

// NewCustomCodeTotalInformationType instantiates a new CustomCodeTotalInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCodeTotalInformationType() *CustomCodeTotalInformationType {
	this := CustomCodeTotalInformationType{}
	return &this
}

// NewCustomCodeTotalInformationTypeWithDefaults instantiates a new CustomCodeTotalInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCodeTotalInformationTypeWithDefaults() *CustomCodeTotalInformationType {
	this := CustomCodeTotalInformationType{}
	return &this
}

// GetBudgetTotalInfo returns the BudgetTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetBudgetTotalInfo() CustomValueInfoType {
	if o == nil || IsNil(o.BudgetTotalInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.BudgetTotalInfo
}

// GetBudgetTotalInfoOk returns a tuple with the BudgetTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetBudgetTotalInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.BudgetTotalInfo) {
		return nil, false
	}
	return o.BudgetTotalInfo, true
}

// HasBudgetTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasBudgetTotalInfo() bool {
	if o != nil && !IsNil(o.BudgetTotalInfo) {
		return true
	}

	return false
}

// SetBudgetTotalInfo gets a reference to the given CustomValueInfoType and assigns it to the BudgetTotalInfo field.
func (o *CustomCodeTotalInformationType) SetBudgetTotalInfo(v CustomValueInfoType) {
	o.BudgetTotalInfo = &v
}

// GetForecastTotalInfo returns the ForecastTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetForecastTotalInfo() CustomValueInfoType {
	if o == nil || IsNil(o.ForecastTotalInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.ForecastTotalInfo
}

// GetForecastTotalInfoOk returns a tuple with the ForecastTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetForecastTotalInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.ForecastTotalInfo) {
		return nil, false
	}
	return o.ForecastTotalInfo, true
}

// HasForecastTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasForecastTotalInfo() bool {
	if o != nil && !IsNil(o.ForecastTotalInfo) {
		return true
	}

	return false
}

// SetForecastTotalInfo gets a reference to the given CustomValueInfoType and assigns it to the ForecastTotalInfo field.
func (o *CustomCodeTotalInformationType) SetForecastTotalInfo(v CustomValueInfoType) {
	o.ForecastTotalInfo = &v
}

// GetActualTotalInfo returns the ActualTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetActualTotalInfo() CustomValueInfoType {
	if o == nil || IsNil(o.ActualTotalInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.ActualTotalInfo
}

// GetActualTotalInfoOk returns a tuple with the ActualTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetActualTotalInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.ActualTotalInfo) {
		return nil, false
	}
	return o.ActualTotalInfo, true
}

// HasActualTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasActualTotalInfo() bool {
	if o != nil && !IsNil(o.ActualTotalInfo) {
		return true
	}

	return false
}

// SetActualTotalInfo gets a reference to the given CustomValueInfoType and assigns it to the ActualTotalInfo field.
func (o *CustomCodeTotalInformationType) SetActualTotalInfo(v CustomValueInfoType) {
	o.ActualTotalInfo = &v
}

// GetAFVarianceTotalInfo returns the AFVarianceTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetAFVarianceTotalInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.AFVarianceTotalInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.AFVarianceTotalInfo
}

// GetAFVarianceTotalInfoOk returns a tuple with the AFVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetAFVarianceTotalInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.AFVarianceTotalInfo) {
		return nil, false
	}
	return o.AFVarianceTotalInfo, true
}

// HasAFVarianceTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasAFVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.AFVarianceTotalInfo) {
		return true
	}

	return false
}

// SetAFVarianceTotalInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the AFVarianceTotalInfo field.
func (o *CustomCodeTotalInformationType) SetAFVarianceTotalInfo(v []MonthlyCustomVarianceInfoType) {
	o.AFVarianceTotalInfo = v
}

// GetABVarianceTotalInfo returns the ABVarianceTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetABVarianceTotalInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.ABVarianceTotalInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.ABVarianceTotalInfo
}

// GetABVarianceTotalInfoOk returns a tuple with the ABVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetABVarianceTotalInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.ABVarianceTotalInfo) {
		return nil, false
	}
	return o.ABVarianceTotalInfo, true
}

// HasABVarianceTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasABVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.ABVarianceTotalInfo) {
		return true
	}

	return false
}

// SetABVarianceTotalInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the ABVarianceTotalInfo field.
func (o *CustomCodeTotalInformationType) SetABVarianceTotalInfo(v []MonthlyCustomVarianceInfoType) {
	o.ABVarianceTotalInfo = v
}

// GetFBVarianceTotalInfo returns the FBVarianceTotalInfo field value if set, zero value otherwise.
func (o *CustomCodeTotalInformationType) GetFBVarianceTotalInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.FBVarianceTotalInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.FBVarianceTotalInfo
}

// GetFBVarianceTotalInfoOk returns a tuple with the FBVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeTotalInformationType) GetFBVarianceTotalInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.FBVarianceTotalInfo) {
		return nil, false
	}
	return o.FBVarianceTotalInfo, true
}

// HasFBVarianceTotalInfo returns a boolean if a field has been set.
func (o *CustomCodeTotalInformationType) HasFBVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.FBVarianceTotalInfo) {
		return true
	}

	return false
}

// SetFBVarianceTotalInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the FBVarianceTotalInfo field.
func (o *CustomCodeTotalInformationType) SetFBVarianceTotalInfo(v []MonthlyCustomVarianceInfoType) {
	o.FBVarianceTotalInfo = v
}

func (o CustomCodeTotalInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomCodeTotalInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BudgetTotalInfo) {
		toSerialize["budgetTotalInfo"] = o.BudgetTotalInfo
	}
	if !IsNil(o.ForecastTotalInfo) {
		toSerialize["forecastTotalInfo"] = o.ForecastTotalInfo
	}
	if !IsNil(o.ActualTotalInfo) {
		toSerialize["actualTotalInfo"] = o.ActualTotalInfo
	}
	if !IsNil(o.AFVarianceTotalInfo) {
		toSerialize["aFVarianceTotalInfo"] = o.AFVarianceTotalInfo
	}
	if !IsNil(o.ABVarianceTotalInfo) {
		toSerialize["aBVarianceTotalInfo"] = o.ABVarianceTotalInfo
	}
	if !IsNil(o.FBVarianceTotalInfo) {
		toSerialize["fBVarianceTotalInfo"] = o.FBVarianceTotalInfo
	}
	return toSerialize, nil
}

type NullableCustomCodeTotalInformationType struct {
	value *CustomCodeTotalInformationType
	isSet bool
}

func (v NullableCustomCodeTotalInformationType) Get() *CustomCodeTotalInformationType {
	return v.value
}

func (v *NullableCustomCodeTotalInformationType) Set(val *CustomCodeTotalInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCodeTotalInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCodeTotalInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCodeTotalInformationType(val *CustomCodeTotalInformationType) *NullableCustomCodeTotalInformationType {
	return &NullableCustomCodeTotalInformationType{value: val, isSet: true}
}

func (v NullableCustomCodeTotalInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCodeTotalInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


