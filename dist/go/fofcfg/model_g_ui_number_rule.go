/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the GUINumberRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GUINumberRule{}

// GUINumberRule GUI Number rule
type GUINumberRule struct {
	// BeginNo associated with GUI number
	BeginNo *int32 `json:"beginNo,omitempty"`
	// CurrentFiscalBillNo associated with GUI number
	CurrentFiscalBillNo *int32 `json:"currentFiscalBillNo,omitempty"`
	// EndNo associated with GUI number
	EndNo *int32 `json:"endNo,omitempty"`
	// Property associated with GUI number
	HotelId *string `json:"hotelId,omitempty"`
	Period *GUINumberPeriodType `json:"period,omitempty"`
	// Period code associated with period
	PeriodCode *string `json:"periodCode,omitempty"`
	// Prefix associated with GUI number.
	Prefix *string `json:"prefix,omitempty"`
}

// NewGUINumberRule instantiates a new GUINumberRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGUINumberRule() *GUINumberRule {
	this := GUINumberRule{}
	return &this
}

// NewGUINumberRuleWithDefaults instantiates a new GUINumberRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGUINumberRuleWithDefaults() *GUINumberRule {
	this := GUINumberRule{}
	return &this
}

// GetBeginNo returns the BeginNo field value if set, zero value otherwise.
func (o *GUINumberRule) GetBeginNo() int32 {
	if o == nil || IsNil(o.BeginNo) {
		var ret int32
		return ret
	}
	return *o.BeginNo
}

// GetBeginNoOk returns a tuple with the BeginNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetBeginNoOk() (*int32, bool) {
	if o == nil || IsNil(o.BeginNo) {
		return nil, false
	}
	return o.BeginNo, true
}

// HasBeginNo returns a boolean if a field has been set.
func (o *GUINumberRule) HasBeginNo() bool {
	if o != nil && !IsNil(o.BeginNo) {
		return true
	}

	return false
}

// SetBeginNo gets a reference to the given int32 and assigns it to the BeginNo field.
func (o *GUINumberRule) SetBeginNo(v int32) {
	o.BeginNo = &v
}

// GetCurrentFiscalBillNo returns the CurrentFiscalBillNo field value if set, zero value otherwise.
func (o *GUINumberRule) GetCurrentFiscalBillNo() int32 {
	if o == nil || IsNil(o.CurrentFiscalBillNo) {
		var ret int32
		return ret
	}
	return *o.CurrentFiscalBillNo
}

// GetCurrentFiscalBillNoOk returns a tuple with the CurrentFiscalBillNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetCurrentFiscalBillNoOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentFiscalBillNo) {
		return nil, false
	}
	return o.CurrentFiscalBillNo, true
}

// HasCurrentFiscalBillNo returns a boolean if a field has been set.
func (o *GUINumberRule) HasCurrentFiscalBillNo() bool {
	if o != nil && !IsNil(o.CurrentFiscalBillNo) {
		return true
	}

	return false
}

// SetCurrentFiscalBillNo gets a reference to the given int32 and assigns it to the CurrentFiscalBillNo field.
func (o *GUINumberRule) SetCurrentFiscalBillNo(v int32) {
	o.CurrentFiscalBillNo = &v
}

// GetEndNo returns the EndNo field value if set, zero value otherwise.
func (o *GUINumberRule) GetEndNo() int32 {
	if o == nil || IsNil(o.EndNo) {
		var ret int32
		return ret
	}
	return *o.EndNo
}

// GetEndNoOk returns a tuple with the EndNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetEndNoOk() (*int32, bool) {
	if o == nil || IsNil(o.EndNo) {
		return nil, false
	}
	return o.EndNo, true
}

// HasEndNo returns a boolean if a field has been set.
func (o *GUINumberRule) HasEndNo() bool {
	if o != nil && !IsNil(o.EndNo) {
		return true
	}

	return false
}

// SetEndNo gets a reference to the given int32 and assigns it to the EndNo field.
func (o *GUINumberRule) SetEndNo(v int32) {
	o.EndNo = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *GUINumberRule) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *GUINumberRule) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *GUINumberRule) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *GUINumberRule) GetPeriod() GUINumberPeriodType {
	if o == nil || IsNil(o.Period) {
		var ret GUINumberPeriodType
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetPeriodOk() (*GUINumberPeriodType, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *GUINumberRule) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given GUINumberPeriodType and assigns it to the Period field.
func (o *GUINumberRule) SetPeriod(v GUINumberPeriodType) {
	o.Period = &v
}

// GetPeriodCode returns the PeriodCode field value if set, zero value otherwise.
func (o *GUINumberRule) GetPeriodCode() string {
	if o == nil || IsNil(o.PeriodCode) {
		var ret string
		return ret
	}
	return *o.PeriodCode
}

// GetPeriodCodeOk returns a tuple with the PeriodCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetPeriodCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodCode) {
		return nil, false
	}
	return o.PeriodCode, true
}

// HasPeriodCode returns a boolean if a field has been set.
func (o *GUINumberRule) HasPeriodCode() bool {
	if o != nil && !IsNil(o.PeriodCode) {
		return true
	}

	return false
}

// SetPeriodCode gets a reference to the given string and assigns it to the PeriodCode field.
func (o *GUINumberRule) SetPeriodCode(v string) {
	o.PeriodCode = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *GUINumberRule) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GUINumberRule) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *GUINumberRule) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *GUINumberRule) SetPrefix(v string) {
	o.Prefix = &v
}

func (o GUINumberRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GUINumberRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeginNo) {
		toSerialize["beginNo"] = o.BeginNo
	}
	if !IsNil(o.CurrentFiscalBillNo) {
		toSerialize["currentFiscalBillNo"] = o.CurrentFiscalBillNo
	}
	if !IsNil(o.EndNo) {
		toSerialize["endNo"] = o.EndNo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.PeriodCode) {
		toSerialize["periodCode"] = o.PeriodCode
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	return toSerialize, nil
}

type NullableGUINumberRule struct {
	value *GUINumberRule
	isSet bool
}

func (v NullableGUINumberRule) Get() *GUINumberRule {
	return v.value
}

func (v *NullableGUINumberRule) Set(val *GUINumberRule) {
	v.value = val
	v.isSet = true
}

func (v NullableGUINumberRule) IsSet() bool {
	return v.isSet
}

func (v *NullableGUINumberRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGUINumberRule(val *GUINumberRule) *NullableGUINumberRule {
	return &NullableGUINumberRule{value: val, isSet: true}
}

func (v NullableGUINumberRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGUINumberRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


