openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you\
    \ can find operations to get, post, put and delete front desk codes such as commission\
    \ codes, transaction groups, codes & subgroups, articles, payment methods and\
    \ credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br\
    \ /><br /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Front Desk Configuration API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /fof/config/v1
tags:
- description: "Cashiering configurations affect the control and management of financial\
    \ transactions at your property. You can configure cashiering components for articles\
    \ for sale, cancellation handling, deposits, folios, settlements, exchange rates,\
    \ payment methods and so on."
  name: CashieringConfig
- description: The Credit Card Internal Service contains operations used internally
    by OPERA Cloud.
  name: CreditCard
- description: "These Commission APIs allow you to get, update, and remove commissions\
    \ on an Account Receivable (AR) profile in OPERA Cloud."
  name: CommissionConfig
- description: These APIs will allow you to configure front office related configuration
    related to Administration.
  name: ChainConfig
- description: These APIs will allow you to configure front office related configuration
    related to Administration.
  name: HotelConfig
paths:
  /articles:
    delete:
      description: Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>
      operationId: deleteArticles
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code to which the article belongs.
        explode: true
        in: query
        name: articleHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        example:
        - "false"
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: universalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete Articles.
      tags:
      - CashieringConfig
    get:
      description: "Use this API to return articles for one or multiple properties\
        \ based on search criteria such as hotelIds, transactionCodes, articleCodes,\
        \ etc. One transaction code can sometimes serve as an umbrella for multiple\
        \ articles, which can be posted using that transaction code.  For example,\
        \ a single mini bar food transaction code might cover potato chips, crackers,\
        \ peanuts, pretzels, and so on.<p><strong>OperationId:</strong>getArticles</p>"
      operationId: getArticles
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: articleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Indicator that tells whether to include inactive articles in
          search results.
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/articlesInfo'
          description: Response for fetching articles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Articles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get articles
      tags:
      - CashieringConfig
    post:
      description: Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>
      operationId: postArticles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putArticles_request'
        description: Request to create articles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Articles.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: articles
    put:
      description: Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>
      operationId: putArticles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putArticles_request'
        description: Request to change articles.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change Articles.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: articles
  /authorizationConfigRule:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>'
      operationId: deleteAuthorizationConfigRule
      parameters:
      - description: Property associated with authorization rule
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Authorization rule Room type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roomClassHotelId
        schema:
          type: string
      - in: query
        name: roomClassCode
        schema:
          type: string
      - in: query
        name: sourceCodeHotelId
        schema:
          type: string
      - in: query
        name: sourceCode
        schema:
          type: string
      - description: Rate category Code.
        in: query
        name: rateCategory
        schema:
          type: string
      - description: Rate code associated to this rule.
        explode: true
        in: query
        name: rateCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Guarantee code associated to this rule.
        explode: true
        in: query
        name: guaranteeCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AuthorizationConfigRule.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>'
      operationId: postAuthorizationConfigRule
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAuthorizationConfigRule_request'
        description: Request object to create new authorization rule for given hotel
          code.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AuthorizationConfigRule.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizationConfigRules
    put:
      description: ' <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>'
      operationId: putAuthorizationConfigRule
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAuthorizationConfigRule_request'
        description: Request object to change authorization rule.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AuthorizationConfigRule.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizationConfigRules
  /authorizerGroups:
    delete:
      description: Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>
      operationId: deleteAuthorizerGroups
      parameters:
      - description: Configuration code.
        in: query
        name: authorizerGroup
        schema:
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AuthorizerGroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>
      operationId: getAuthorizerGroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: authorizerGroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizerGroups'
          description: Response object for fetching Authorizer Groups.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizerGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AuthorizerGroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>
      operationId: postAuthorizerGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAuthorizerGroups_request'
        description: Request object for creating new Authorizer Group Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AuthorizerGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizerGroups
    put:
      description: Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>
      operationId: putAuthorizerGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAuthorizerGroups_request'
        description: Request object for changing existing Authorizer Group Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AuthorizerGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizerGroupsToChange
  /autoFolioSettlementTypes:
    get:
      description: Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>
      operationId: getAutoFolioSettlementTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/autoFolioSettlementTypesDetails'
          description: Response object for fetching Auto Folio Settlement Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AutoFolioSettlementTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Auto Folio Settlement Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>
      operationId: postAutoFolioSettlementTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAutoFolioSettlementTypes_request'
        description: Request object for creating Auto Folio Settlement Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Auto Folio Settlement Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: autoFolioSettlementTypesCriteria
  /autoFolioSettlementTypes/{code}:
    delete:
      description: Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>
      operationId: deleteAutoFolioSettlementTypes
      parameters:
      - description: Unique ID of Auto Folio Settlement Types.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Auto Folio Settlement Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>
      operationId: putAutoFolioSettlementTypes
      parameters:
      - description: Unique ID of Auto Folio Settlement Types.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAutoFolioSettlementTypes_request'
        description: Request object for changing Auto Folio Settlement Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Auto Folio Settlement Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: autoFolioSettlementTypesToBeChanged
  /cashierDetails/cashiers:
    get:
      description: "Use this API to return Cashier information based on search criteria\
        \ such as cashierIDs, limit, name. <p><strong>OperationId:</strong>getCashiers</p>"
      operationId: getCashiers
      parameters:
      - description: Numberic code for cashier ID.
        example:
        - "54"
        explode: true
        in: query
        name: cashierIDs
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Partial name of a cashier.
        in: query
        name: name
        schema:
          type: string
      - description: Indicator that tells whether to include inactive cashiers in
          search results.
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashiersDetails'
          description: Response object for fetching information regarding Cashiers.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Cashiers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get cashiers
      tags:
      - CashieringConfig
  /cashiers:
    post:
      description: Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>
      operationId: postCashiers
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCashiers_request'
        description: Request object for creating cashiers.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Cashiers.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: cashiers
    put:
      description: This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>
      operationId: putCashiers
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCashiers_request'
        description: Request objects for modifying cashiers
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change CashiersDetails.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: cashiers
  /cashiers/nextAvailable:
    get:
      description: The operation returns a next available Cashier Number to be used
        while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>
      operationId: getAvailableCashierNumber
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierNumber'
          description: Response object that returns next available cashier number.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableCashierNumber not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AvailableCashierNumber.
      tags:
      - CashieringConfig
  /commissionCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteCommissionCodes</p>'
      operationId: deleteCommissionCodes
      parameters:
      - description: Property of the commission code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Commission code for which details are deleted.
        explode: true
        in: query
        name: commissionCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove commission codes.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionCodes</p>'
      operationId: getCommissionCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: commissionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionCodesSummary'
          description: Response object for fetching commission codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission codes.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postCommissionCodes</p>'
      operationId: postCommissionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCommissionCodes_request'
        description: Request object to create new commission codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create commission codes.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: commissionCodes
    put:
      description: ' <p><strong>OperationId:</strong>putCommissionCodes</p>'
      operationId: putCommissionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCommissionCodes_request'
        description: Request object to update commission codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change commission codes.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: commissionCodes
  /compTypes:
    post:
      description: Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>
      operationId: postCompTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCompTypes_request'
        description: Request object for creating CompTypes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Create Comp Types
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compTypesCriteria
    put:
      description: Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>
      operationId: changeCompTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeCompTypes_request'
        description: Request object for changing Comp Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compTypesStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Change Comp Types.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compTypesToBeChanged
  /compTypes/codes/{compTypesCode}:
    delete:
      description: Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>
      operationId: removeCompTypes
      parameters:
      - description: Comp Types Code to be deleted.
        in: path
        name: compTypesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Remove Comp Types.
      tags:
      - CashieringConfig
  /configBankAccounts:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>'
      operationId: deleteConfigBankAccounts
      parameters:
      - description: Property of the bank account.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bank account ID.
        explode: true
        in: query
        name: bankAccountID
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove config bank accounts.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getConfigBankAccounts</p>'
      operationId: getConfigBankAccounts
      parameters:
      - explode: true
        in: query
        name: hotels
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: bankCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bankAccountsInfo'
          description: Response for fetching Bank Accounts
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConfigBankAccounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch config bank accounts.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postConfigBankAccounts</p>'
      operationId: postConfigBankAccounts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putConfigBankAccounts_request'
        description: Request object to create Bank Accounts
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create config bank accounts.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: bankAccounts
    put:
      description: ' <p><strong>OperationId:</strong>putConfigBankAccounts</p>'
      operationId: putConfigBankAccounts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putConfigBankAccounts_request'
        description: Request object to edit Bank Accounts
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change config bank accounts.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: bankAccounts
  /creditCardInfo:
    get:
      description: Use this API to return the token inclusive cardType and expirationDate
        for the credit card used in a specific reservation. Oracle does not provide
        any credit card numbers. Include the hotelId and the cardId in the parameters.
        The cardId can be returned with the getReservation operation. <p><strong>OperationId:</strong>getCreditCardInfo</p>
      operationId: getCreditCardInfo
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: cardIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: cardIdType
        schema:
          type: string
      - description: Currently supported transaction type categories used for credit
          card authorization.
        in: query
        name: accessTransactionType
        schema:
          enum:
          - Additional
          - ArPayment
          - Batch
          - BatchDeposit
          - BatchDepositRefund
          - Billing
          - CheckIn
          - CheckInManualAuth
          - Deposit
          - EndOfDay
          - EndOfDayDeposit
          - Manual
          - Other
          - PasserBy
          - PostIt
          - PreCheckIn
          - Refund
          - Scheduled
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditCardInfo'
          description: Respose for the fetch credit card information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CreditCardInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get credit card token information
      tags:
      - CreditCard
  /currencyExchangeServiceTaxes:
    delete:
      description: Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>
      operationId: deleteCurrencyExchangeServiceTaxes
      parameters:
      - description: Property associated with currency exchange service tax
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Currency exchange service tax code
        explode: true
        in: query
        name: currencyExchangeServiceTaxCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>
      operationId: getCurrencyExchangeServiceTaxes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/currencyExchangeServiceTaxes'
          description: Response for fetch currency exchange service taxes
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CurrencyExchangeServiceTaxes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>
      operationId: postCurrencyExchangeServiceTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCurrencyExchangeServiceTaxes_request'
        description: Request object for creating new currency exchange service taxes
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: currencyExchangeServiceTaxes
    put:
      description: Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>
      operationId: putCurrencyExchangeServiceTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCurrencyExchangeServiceTaxes_request'
        description: Request object for changing currency exchange service taxes
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change ExchangeServiceTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: currencyExchangeServiceTaxes
  /customTaxTypes:
    get:
      description: Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>
      operationId: getCustomTaxTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customTaxTypesDetails'
          description: Response object for fetching Custom Tax Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomTaxTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Custom Tax Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>
      operationId: postCustomTaxTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCustomTaxTypes_request'
        description: Request object for creating Custom Tax Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Custom Tax Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: customTaxTypesCriteria
  /customTaxTypes/{taxTypeCode}:
    delete:
      description: Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>
      operationId: removeCustomTaxTypes
      parameters:
      - description: Unique Code of Tax Types.
        in: path
        name: taxTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Custom Tax Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>
      operationId: changeCustomTaxTypes
      parameters:
      - description: Unique Code of Tax Types.
        in: path
        name: taxTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeCustomTaxTypes_request'
        description: Request object for changing Custom Tax Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Custom Tax Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: customTaxTypesToBeChanged
  /dailyPlanCodes:
    get:
      description: ' <p><strong>OperationId:</strong>getDailyPlanCodes</p>'
      operationId: getDailyPlanCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/dailyPlanCodes'
          description: Response object for fetching daily plan codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DailyPlanCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch DailyPlanCodes.
      tags:
      - CashieringConfig
    put:
      description: ' <p><strong>OperationId:</strong>putDailyPlanCodes</p>'
      operationId: putDailyPlanCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putDailyPlanCodes_request'
        description: Request object for changing daily plan codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change DailyPlanCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: dailyPlanCodes
  /expenseArrangementCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>'
      operationId: deleteExpenseArrangementCodes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete ExpenseArrangementCodes.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>'
      operationId: getExpenseArrangementCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/expenseArrangementCodes'
          description: Response object for fetching expense arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExpenseArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch ExpenseArrangementCodes.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>'
      operationId: postExpenseArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putExpenseArrangementCodes_request'
        description: Request object for creating new expense arrangement codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create ExpenseArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: expenseArrangementCodes
    put:
      description: ' <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>'
      operationId: putExpenseArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putExpenseArrangementCodes_request'
        description: Request object for changing expense arrangement codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change ExpenseArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: expenseArrangementCodes
  /fiscalFolioParameters:
    delete:
      description: Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>
      operationId: deleteFiscalFolioParameters
      parameters:
      - description: Code of the Hotel.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fiscal folio parameter associated with Partner.
        explode: true
        in: query
        name: partner
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Code of the Fiscal Folio Parameter.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FiscalFolioParameters.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>
      operationId: getFiscalFolioParameters
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Indicates whether the Fiscal Folio Parameter is user created
          or from seed data. Set this true to see the standard Fiscal Folio Parameters
          that are seeded along with the manually created Fiscal Folio Parameters.
        example: "false"
        in: query
        name: internal
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalFolioParameters'
          description: Response object for fetching Fiscal Folio Parameter configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalFolioParameters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FiscalFolioParameters.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>
      operationId: putFiscalFolioParameters
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putFiscalFolioParameters_request'
        description: Request object for changing existing Fiscal Folio Parameter Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FiscalFolioParameters.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalFolioParameters
  /folioTypeLegendMappings:
    get:
      description: Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>
      operationId: getFolioTypeLegendMappingsConfig
      parameters:
      - description: Property associated with folio type legend mapping
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Legend code to which folio types attached.
        in: query
        name: legendCode
        required: true
        schema:
          type: string
      - description: Folio type to be searched.
        in: query
        name: folioType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypeLegendMappingsConfigDetails'
          description: Response object for fetch folio type legend mapping.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTypeLegendMappingsConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch folio type legend mappings config.
      tags:
      - CashieringConfig
    post:
      description: Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>
      operationId: postFolioTypeLegendMappingConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postFolioTypeLegendMappingConfig_request'
        description: Request object to create folio type legend mapping information.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create folio type legend mappings config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypeLegendMappingConfigCriteria
    put:
      description: Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>
      operationId: changeFolioTypeLegendMappingConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeFolioTypeLegendMappingConfig_request'
        description: Request object to edit folio type legend mapping information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypeLegendMappingConfigStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change folio type legend mappings config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypeLegendMappingConfigToBeChanged
  /generates:
    post:
      description: "Use this API to create transaction generates for a specific property.\
        \  Generates are rules used to calculate and post additional charges, such\
        \ as service charges and taxes, when a particular sales charge transaction\
        \ code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>postTransactionGenerates</p>"
      operationId: postTransactionGenerates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postTransactionGenerates_request'
        description: Request to create transaction generates.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post transaction generates
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionGenerates
  /hotelAdjustmentCodes:
    delete:
      description: Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>
      operationId: deleteAdjustmentCodes
      parameters:
      - description: Configuration code.
        in: query
        name: adjustmentCode
        schema:
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AdjustmentCodes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>
      operationId: getAdjustmentCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: adjustmentCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/adjustmentCodes'
          description: Response object for fetching Adjustment Code configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AdjustmentCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AdjustmentCodes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>
      operationId: postAdjustmentCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAdjustmentCodes_request'
        description: Request object for creating new Adjustment Code Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AdjustmentCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: adjustmentCodes
    put:
      description: Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>
      operationId: putAdjustmentCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putAdjustmentCodes_request'
        description: Request object for changing existing Adjustment Code Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AdjustmentCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: adjustmentCodes
  /hotelPaymentMethods:
    get:
      description: Operation to fetch payment methods. <p><strong>OperationId:</strong>getPaymentMethods</p>
      operationId: getPaymentMethods
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: paymentMethods
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple Type for payment method fetch instruction.
        example:
        - CardRanges
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - CardRanges
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/paymentMethodsInfo'
          description: Response for fetching payment methods.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PaymentMethods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch PaymentMethods.
      tags:
      - CashieringConfig
  /hotelTaxTypes:
    get:
      description: Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>
      operationId: getTaxTypes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: taxTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxTypes'
          description: Response object for fetching Tax Type configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TaxTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TaxTypes.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/commissionCode/{commissionCode}:
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionCode</p>'
      operationId: getCommissionCode
      parameters:
      - description: Commission Code in OPERA
        in: path
        name: commissionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionCodeDetail'
          description: Response object for fetching commission code details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionCode not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission code.
      tags:
      - CommissionConfig
  /hotels/{hotelId}/compTypes:
    get:
      description: Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>
      operationId: getCompTypes
      parameters:
      - description: Unique ID of the source hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code is used to identify the CompType.
        in: query
        name: compTypeCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compTypesDetails'
          description: Response object for fetching Comp Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Fetch Comp Types.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/exchangeRates/{currencyCode}:
    get:
      description: Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p>
      operationId: getFuturePastExchangeRates
      parameters:
      - description: Currency Code in OPERA
        in: path
        name: currencyCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: E-certificate conversion.
        example: Cash
        in: query
        name: exchangeTypes
        required: true
        schema:
          enum:
          - Cash
          - Settlement
          - Posting
          - Check
          - TACommission
          - Membership
          - Certificate
          type: string
      - in: query
        name: dateRangeStart
        schema:
          format: date
          type: string
      - in: query
        name: dateRangeEnd
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/futurePastExchangeRates'
          description: Collection of exchange rates and their information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FuturePastExchangeRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FuturePastExchangeRates.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/folios/{folioType}/legends/{legendCode}:
    delete:
      description: Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>
      operationId: removeFolioTypeLegendMappingConfig
      parameters:
      - description: Legend Code
        in: path
        name: legendCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Folio Type
        in: path
        name: folioType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the source hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove folio type legend mappings config.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/trackItActions:
    get:
      description: Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>
      operationId: getTrackItActions
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: showInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/trackItActionsDetails'
          description: Response object for fetching Track it Actions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TrackItActions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Track it Actions
      tags:
      - HotelConfig
  /hotels/{hotelId}/trackItLocations:
    get:
      description: Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>
      operationId: getTrackItLocations
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: showInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/trackItLocationsDetails'
          description: Response object for fetching Track it Locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TrackItLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Track it Locations
      tags:
      - HotelConfig
  /hotels/{hotelId}/transactionCodes/{transactionCode}/chargeSimulations:
    get:
      description: Operation to test posting amount. <p><strong>OperationId:</strong>calculatePosting</p>
      operationId: calculatePosting
      parameters:
      - description: Transaction Code in OPERA
        in: path
        name: transactionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Base amount to test for posting.
        example: "299"
        in: query
        name: postingAmount
        schema:
          type: number
      - description: Specify this criteria if calculation is based on the tax type.
        in: query
        name: taxType
        schema:
          type: string
      - description: Specify this criteria if calculation is based on the guest balance.
        example: "299"
        in: query
        name: guestBalance
        schema:
          type: number
      - description: Specify this criteria if calculation is based on room type.
        example: STD
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPosting'
          description: Response for testing posting amount.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: calculatePosting not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to CalculatePosting.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/transactionCodes/{transactionCode}/hotelTransactionCode:
    get:
      description: "Use this API to return transaction codes based on search criteria\
        \ such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes,\
        \ description, etc.<p><strong>OperationId:</strong>getTransactionCodes</p>"
      operationId: getTransactionCode
      parameters:
      - description: Transaction Code in OPERA
        in: path
        name: transactionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for transaction code instructions that can be used
          for partial operations.
        example:
        - Header
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - Generates
            - Glmapping
            - AssociatedTrxCodes
            - MappingCodes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionCode'
          description: Response object for fetching detailed transaction code.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCode not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get transaction codes
      tags:
      - CashieringConfig
  /operaControlSequences:
    get:
      description: Operation to fetch Opera Document Sequences. <p><strong>OperationId:</strong>getOperaControlSequences</p>
      operationId: getOperaControlSequences
      parameters:
      - description: Hotel code of fetch criteria
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Country Code of fetch criteria
        in: query
        name: countryCode
        schema:
          type: string
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: HotelCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple type for opera sequence instructions that can be used
          for partial operations.
        explode: true
        in: query
        name: fetchInstruction
        schema:
          items:
            enum:
            - BillFolioTypes
            - ArInvoice
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaControlSequences'
          description: Response object of Opera Control Sequence.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: OperaControlSequences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch OperaControlSequences.
      tags:
      - CashieringConfig
  /revenueBucketCodes:
    get:
      description: Operation to fetch Revenue Bucket Codes. <p><strong>OperationId:</strong>getRevenueBucketCodes</p>
      operationId: getRevenueBucketCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: trxCodeArrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Fiscal Bucket Type.
        in: query
        name: trxCodeArrangementType
        schema:
          enum:
          - Default
          - Fiscal
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: revenueBucketTypesWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueBucketCodes'
          description: Response object for fetching Revenue Bucket Codes configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueBucketCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch RevenueBucketCodes.
      tags:
      - CashieringConfig
  /routingInstructions:
    get:
      description: "Use this API to return routing instructions based on search criteria\
        \ such as hotelId, trxCodeArrangementCode, wildCard.  Routing instructions\
        \ are used to route specific charges to different destinations.<p><strong>OperationId:</strong>getRoutingInstructions</p>"
      operationId: getRoutingInstructions
      parameters:
      - explode: false
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Codes to be searched.
        explode: false
        in: query
        name: trxCodeArrangementCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Determines if this is a comp routing code or a routing code.
        in: query
        name: compAccounting
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/routingInstructions'
          description: Response object for fetching routing instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get routing instructions
      tags:
      - CashieringConfig
  /stopProcessingReasons:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>'
      operationId: deleteStopProcessingReasons
      parameters:
      - explode: true
        in: query
        name: codes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove stop processing reasons.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getStopProcessingReasons</p>'
      operationId: getStopProcessingReasons
      parameters:
      - description: Determines wether to fetch inactive records or not.
        example: "false"
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stopProcessingReasons'
          description: Response object for fetching Stop Processing Reason.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StopProcessingReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch stop processing reasons.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postStopProcessingReasons</p>'
      operationId: postStopProcessingReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putStopProcessingReasons_request'
        description: Request object for creating Stop Processing Reason
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create stop processing reasons.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: stopProcessingReasons
    put:
      description: ' <p><strong>OperationId:</strong>putStopProcessingReasons</p>'
      operationId: putStopProcessingReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putStopProcessingReasons_request'
        description: Request object for changing Stop Processing Reason.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stopProcessingReasons'
          description: Response object for changing Stop Processing Reason.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change stop processing reasons.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: stopProcessingReasons
  /templateTransactionCodes:
    get:
      description: "Use this API to return template transaction codes summaries based\
        \ on search criteria such as transactionGroupCodes, transactionSubgroupsCodes,\
        \ transactionCodes, wildCard, etc.<p><strong>OperationId:</strong>getTemplateTransactionCodes</p>"
      operationId: getTemplateTransactionCodes
      parameters:
      - description: "Flag to indicate whether comp accounting transaction codes are\
          \ being requested. If true, only comp accounting transaction codes will\
          \ be returned. If false, only standard transaction codes will be returned."
        example: "false"
        in: query
        name: compTransactionCodes
        schema:
          type: boolean
      - description: Inactive flag used to include/exclude inactive transaction codes
          from the search result
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the Transaction code.
        in: query
        name: description
        schema:
          type: string
      - description: Property associated with the corporate information brand code
          in the search criteria
        in: query
        name: brandCode
        schema:
          type: string
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionCodes'
          description: Response object for fetching template transaction codes summary.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get template transaction codes
      tags:
      - CashieringConfig
    post:
      description: Use this API to create template transaction codes.<p><strong>OperationId:</strong>postTemplateTransactionCodes</p>
      operationId: postTemplateTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putTemplateTransactionCodes_request'
        description: Request object for creating new template transaction codes configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post template transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionCodes
    put:
      description: Operation to change template transaction codes. <p><strong>OperationId:</strong>putTemplateTransactionCodes</p>
      operationId: putTemplateTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putTemplateTransactionCodes_request'
        description: Request object for changing existing template transaction codes
          configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TemplateTransactionCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionCodes
  /templateTransactionGroups:
    get:
      description: Operation to fetch template transaction group. <p><strong>OperationId:</strong>getTemplateTransactionGroups</p>
      operationId: getTemplateTransactionGroups
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Wrapper Transaction Type.
        in: query
        name: transactionGroupType
        schema:
          enum:
          - Revenue
          - Payment
          - Wrapper
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionGroups'
          description: Response object for fetch template transaction groups
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TemplateTransactionGroups.
      tags:
      - CashieringConfig
  /templateTransactionSubGroups:
    get:
      description: Operation to fetch template transaction subgroups <p><strong>OperationId:</strong>getTemplateTransactionSubgroups</p>
      operationId: getTemplateTransactionSubgroups
      parameters:
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionSubgroups'
          description: Response object for fetch template transaction subgroups configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionSubgroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create template transaction subgroups <p><strong>OperationId:</strong>postTemplateTransactionSubgroups</p>
      operationId: postTemplateTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postTemplateTransactionSubgroups_request'
        description: Request object for creating new template transaction subgroups
          configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionSubgroups
  /transactionCodes:
    get:
      description: Operation to fetch transaction codes. <p><strong>OperationId:</strong>getTransactionCodes</p>
      operationId: getTransactionCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Flag to indicate whether comp accounting transaction codes are\
          \ being requested. If true, only comp accounting transaction codes will\
          \ be returned. If false, only standard transaction codes will be returned."
        example: "false"
        in: query
        name: compTransactionCodes
        schema:
          type: boolean
      - description: Inactive flag used to include/exclude inactive transaction codes
          from the search result
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the Transaction code.
        in: query
        name: description
        schema:
          type: string
      - description: Property associated with the corporate information brand code
          in the search criteria
        in: query
        name: brandCode
        schema:
          type: string
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionCodes'
          description: Response object for fetching hotel's transaction codes summary.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionCodes.
      tags:
      - CashieringConfig
    post:
      description: Use this API to create transaction codes for a specific property.<p><strong>OperationId:</strong>postTransactionCodes</p>
      operationId: postTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putTransactionCodes_request'
        description: Request object for creating new Transaction Codes Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionCodes
    put:
      description: Use this API to update transaction codes for a specific property.<p><strong>OperationId:</strong>putTransactionCodes</p>
      operationId: putTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putTransactionCodes_request'
        description: Request object for changing existing Transaction Codes Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionCodes'
          description: Response object for changing existing Transaction Codes Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Put transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionCodes
  /transactionGroups:
    get:
      description: Operation to fetch transaction groups. <p><strong>OperationId:</strong>getTransactionGroups</p>
      operationId: getTransactionGroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Wrapper Transaction Type.
        in: query
        name: transactionGroupType
        schema:
          enum:
          - Revenue
          - Payment
          - Wrapper
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionGroups'
          description: Response object for fetching Transaction Groups Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionGroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create transaction groups. <p><strong>OperationId:</strong>postTransactionGroups</p>
      operationId: postTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postTransactionGroups_request'
        description: Request object for creating new Transaction Groups Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionGroups
  /transactionSubGroups:
    get:
      description: Operation to fetch transaction sub groups. <p><strong>OperationId:</strong>getTransactionSubgroups</p>
      operationId: getTransactionSubgroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionSubgroups'
          description: Response object for fetching Transaction Subgroups Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionSubgroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionSubgroups.
      tags:
      - CashieringConfig
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    articles:
      description: Request to change articles.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        articles:
          description: Holds collection of articles.
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    articlesType:
      description: Holds collection of articles.
      items:
        $ref: '#/components/schemas/articleInfoType'
      maxItems: 4000
      type: array
    articleInfoType:
      description: Information regarding an article.
      properties:
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    articlesInfo:
      properties:
        articles:
          description: Holds collection of articles.
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationConfigRules:
      properties:
        authorizationConfigRulesType:
          description: List of AuthorizationRuleType.
          items:
            $ref: '#/components/schemas/authorizationConfigRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationConfigRulesType:
      description: List of AuthorizationRuleType.
      items:
        $ref: '#/components/schemas/authorizationConfigRuleType'
      maxItems: 4000
      type: array
    authorizationConfigRuleType:
      description: Authorization configuration Rule Type.Authorization Rules specify
        the rule (or rules) that the property uses for credit card authorizations
      properties:
        hotelId:
          description: Property associated with authorization rule
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Authorization rule Room type.
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        sourceCode:
          $ref: '#/components/schemas/sourceCodeInfoType'
        rateCategory:
          $ref: '#/components/schemas/rateCategoryType'
        rateCode:
          description: Rate code associated to this rule.
          maxLength: 20
          minLength: 0
          type: string
        guaranteeCode:
          description: Guarantee code associated to this rule.
          maxLength: 20
          minLength: 0
          type: string
        ruleNo:
          description: Rule Number for current authorization.
          type: integer
        ruleDescription:
          description: Rule Number description for current authorization.
          maxLength: 200
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: Percentage to be applied to all rules with a percentage configured
            in the formula.
          maximum: 100
          minimum: 0
          type: number
        maxDaysToAuthorize:
          description: "A maximum of two digits to set the number of days to authorize\
            \ for a credit card. If the field is left blank, authorizations will be\
            \ done for the entire stay duration of the reservation"
          type: integer
        ignoreDepositsYN:
          description: Ignore deposits paid for calculation of the amount to be authorized.
          type: boolean
      type: object
    roomClassCodeInfoType:
      description: Code of the room class type.
      properties:
        roomClassCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceCodeInfoType:
      properties:
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    rateCategoryType:
      description: This type represents the rate category type.
      properties:
        rateCategoryDetails:
          $ref: '#/components/schemas/rateCategoryType_rateCategoryDetails'
        rateCategory:
          description: Rate category Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizerGroupsToChange:
      properties:
        criteria:
          $ref: '#/components/schemas/authorizerGroupsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizerGroupsCriteriaType:
      description: Criteria to change authorizer group.
      properties:
        updateAuthorizers:
          description: "If true, updates all authorizers in the group."
          type: boolean
        authorizerGroups:
          description: Authorizer Group
          items:
            $ref: '#/components/schemas/authorizerGroupType'
          maxItems: 4000
          type: array
      type: object
    authorizerGroupsType:
      description: Authorizer Group
      items:
        $ref: '#/components/schemas/authorizerGroupType'
      maxItems: 4000
      type: array
    authorizerGroupType:
      description: A representation of the information contained by a Authorizer Group.
      properties:
        description:
          description: Description of the Authorizer Group.
          maxLength: 2000
          minLength: 0
          type: string
        rateCode:
          description: Rate Code of the Authorizer Group.
          maxLength: 20
          minLength: 0
          type: string
        transactionLimits:
          description: Set of Transaction Limit configured for the Authorizer Group.
          items:
            $ref: '#/components/schemas/authorizerTrxLimitType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code to which the Authorizer Group belongs to.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Authorizer Group code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizerTrxLimitsType:
      description: Set of Transaction Limit configured for the Authorizer Group.
      items:
        $ref: '#/components/schemas/authorizerTrxLimitType'
      maxItems: 4000
      type: array
    authorizerTrxLimitType:
      description: A representation of the information of Transaction Limit.
      properties:
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        groupHeaderId:
          description: Group Header Id for a transaction row.
          type: number
        creditLimit:
          description: Credit Limit for a transaction.
          type: number
        occurrenceLimit:
          description: Occurrence Limit for a transaction.
          type: number
      type: object
    authTransactionCodesType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/codeDescriptionType'
      maxItems: 4000
      type: array
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    authBillingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/codeDescriptionType'
      maxItems: 4000
      type: array
    authorizerGroups:
      properties:
        authorizerGroups:
          description: Authorizer Group
          items:
            $ref: '#/components/schemas/authorizerGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesDetails:
      description: Response object for fetching Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesType:
      description: List of Auto Folio Settlement Types.
      items:
        $ref: '#/components/schemas/autoFolioSettlementTypeType'
      maxItems: 4000
      type: array
    autoFolioSettlementTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    autoFolioSettlementTypesCriteria:
      description: Request object for creating Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesToBeChanged:
      description: Request object for changing Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    cashiersDetails:
      properties:
        cashiers:
          description: Details about a cashier.
          items:
            $ref: '#/components/schemas/cashierType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashiersType:
      description: Details about a cashier.
      items:
        $ref: '#/components/schemas/cashierType'
      maxItems: 4000
      type: array
    cashierType:
      description: Cashiers Information.
      properties:
        cashierId:
          description: Numeric code for cashier ID.
          type: number
        currencyCode:
          description: The currency code used by the hotel that the cashier belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: Name assigned to the cashier.
          maxLength: 40
          minLength: 0
          type: string
        attachedUser:
          description: User(s) assigned to the cashier.
          maxLength: 40
          minLength: 0
          type: string
        cashierType:
          $ref: '#/components/schemas/cashierTypeType'
        startingAmount:
          description: The Starting Amount in the Cashier drawer.
          type: number
        floatOverShort:
          description: Selected if the cashier is allowed to drop below or above the
            required drop amount.
          type: boolean
        usageInfo:
          $ref: '#/components/schemas/cashierType_usageInfo'
        kiosk:
          description: Indicator that this cashier is the one to be used by Kiosk
            Partner to carry out postings and payments for the guest.
          type: boolean
        inactive:
          description: Indicator that tells whether the cashier is active or not.
          type: boolean
        open:
          description: Indicator that tells whether the cashier is open or not.
          type: boolean
      type: object
    cashierTypeType:
      description: The types of cashier.
      enum:
      - Cashier
      - InterfaceCashier
      - LDAPTemplate
      type: string
    cashiers:
      properties:
        cashiers:
          description: Details about a cashier.
          items:
            $ref: '#/components/schemas/cashierType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierNumber:
      properties:
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierId:
      description: The Cashier ID of the Cashier who is currently processing the transaction(s).
      type: number
    commissionCodesSummary:
      description: Response object for fetching commission codes.
      properties:
        commissionCodesSummary:
          description: Commission code details.
          items:
            $ref: '#/components/schemas/commissionCodeSummaryInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodesSummaryType:
      description: Commission code details.
      items:
        $ref: '#/components/schemas/commissionCodeSummaryInfoType'
      maxItems: 4000
      type: array
    commissionCodeSummaryInfoType:
      description: Commission codes summary details.
      properties:
        hotelId:
          description: Property of the commission codes.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: Commission code details.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Commission code description for which details are fetched.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Commission code sequence number.
          type: integer
        basedOn:
          $ref: '#/components/schemas/commissionBasedOnType'
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        taxPercentage:
          description: Commission paid Tax details.
          type: number
        default:
          type: boolean
      type: object
    commissionBasedOnType:
      description: Commission based on Revenue.
      enum:
      - Reservation
      - Revenue
      type: string
    commissionCodes:
      description: Request object to update commission codes.
      properties:
        commissionCodes:
          description: Commission code details object.
          items:
            $ref: '#/components/schemas/commissionCodeInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodesType:
      description: Commission code details object.
      items:
        $ref: '#/components/schemas/commissionCodeInfoType'
      maxItems: 4000
      type: array
    commissionCodeInfoType:
      description: Commission code info.
      properties:
        hotelId:
          description: Property of the commission codes.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: Commission code for which details are fetched.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Commission code description for which details are fetched.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Commission code sequence number.
          type: integer
        commissionCodeHoldStatus:
          $ref: '#/components/schemas/commissionCodeHoldStatusType'
        reservationHistoryRecords:
          $ref: '#/components/schemas/commissionPaidDetailsType'
        commissionCalculation:
          $ref: '#/components/schemas/commissionCalculationType'
        taxPercentage:
          description: Commission paid Tax details.
          type: number
      type: object
    commissionCodeHoldStatusType:
      description: Commission Code Hold Status type
      properties:
        holdAlways:
          description: Hold always status for commission code.
          type: boolean
        holdPrepaid:
          description: Hold prepaid status for commission code.
          type: boolean
        holdAccountReceivables:
          description: Hold accoutn receivables status for commission code.
          type: boolean
      type: object
    commissionPaidDetailsType:
      description: Commission paid details.
      properties:
        perNight:
          type: boolean
        perStay:
          type: boolean
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        weekEndCommissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionType:
          description: Indicates the type of commission paid to agent.
          maxLength: 1
          minLength: 1
          type: string
      type: object
    commissionCalculationType:
      description: Commission calculation type based on details.
      properties:
        revenueBasedCommission:
          description: Revenue based commission details.
          items:
            $ref: '#/components/schemas/commissionCodeTransactionType'
          maxItems: 4000
          type: array
        reservationBasedCommission:
          $ref: '#/components/schemas/reservationBasedCommissionType'
      type: object
    revenueBasedCommissionType:
      description: Revenue based commission details.
      items:
        $ref: '#/components/schemas/commissionCodeTransactionType'
      maxItems: 4000
      type: array
    commissionCodeTransactionType:
      description: Revenue based commission details.
      properties:
        transactionCode:
          maxLength: 20
          minLength: 0
          type: string
        transactionCodeDesc:
          type: string
        basedOnNetAmount:
          type: boolean
        commissionPaidDetails:
          $ref: '#/components/schemas/commissionPaidDetailsType'
      type: object
    reservationBasedCommissionType:
      description: Reservation based commission details.
      properties:
        commissionPaidDetails:
          $ref: '#/components/schemas/commissionPaidDetailsType'
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        expirationDateExpired:
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
      type: object
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    compTypesCriteria:
      description: Request object for creating CompTypes.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesType:
      description: List of Comp Types.
      items:
        $ref: '#/components/schemas/compTypeType'
      maxItems: 4000
      type: array
    compTypeType:
      description: Information representation of Comp Type.
      properties:
        compTypeCode:
          description: Code is used to identify the CompType.
          maxLength: 20
          minLength: 0
          type: string
        compTypeDescription:
          description: Text is used to describe the CompType.
          maxLength: 2000
          minLength: 0
          type: string
        displayOrder:
          description: Comp Type record sequence number.
          type: number
      type: object
    compTypesToBeChanged:
      description: Request object for changing Comp Types.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bankAccountsInfo:
      description: Response for fetching Bank Accounts
      properties:
        bankAccounts:
          description: List of bank accounts.
          items:
            $ref: '#/components/schemas/configBankAccountType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configBankAccountsType:
      description: List of bank accounts.
      items:
        $ref: '#/components/schemas/configBankAccountType'
      maxItems: 4000
      type: array
    configBankAccountType:
      description: Indentifier for a Bank Account.
      properties:
        hotelId:
          description: Property of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        bankAccountId:
          description: Bank account ID.
          type: number
        bankAccountNumber:
          description: Account number at the bank.
          maxLength: 80
          minLength: 0
          type: string
        bankCode:
          description: Unique code of the bank.
          maxLength: 20
          minLength: 0
          type: string
        branchCode:
          description: Code for the branch of the bank.
          maxLength: 20
          minLength: 0
          type: string
        bankName:
          description: Name of the bank account.
          maxLength: 2000
          minLength: 0
          type: string
        routingNumber:
          description: Routing number for the bank account.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionConfigPaymentMethodType'
        format:
          description: Type of format for Payment Method.
          maxLength: 80
          minLength: 0
          type: string
        lastExportDate:
          description: Used to hold last exported date for commission export.
          format: date
          type: string
        lastExportFileNo:
          description: Used to hold last exported filename for commission export.
          type: integer
        nextCheckNumber:
          description: Next check number used by commission handling module for bank
            account selected.
          type: number
        minProcessingAmount:
          description: Minimum amount required to produce a check through commission
            processing for the selected account.
          type: number
        currency:
          description: Currency associated with the bank account.
          maxLength: 20
          minLength: 0
          type: string
        checkStubLines:
          description: Number of lines to be printed on check stub.
          type: number
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        sourceImportDirectory:
          description: Source directory for importing commission information.
          maxLength: 2000
          minLength: 0
          type: string
        targetImportDirectory:
          description: Target directory where import files will be stored.
          maxLength: 2000
          minLength: 0
          type: string
        editCheckNumber:
          description: Check number allowed to be edited true/false.
          type: boolean
        validateIATANumber:
          description: Force validation of TA/Source IATA number during commision
            payment process.
          type: boolean
        default:
          description: Default Bank Account for that resort.
          type: boolean
        defaultForCurrency:
          description: Used mainly to figure out default bank for resort and currency
            combination.
          type: boolean
        positivePayExport:
          description: Indicate that the bank account uses Positive Pay Export.
          type: boolean
        report1099:
          description: Indicates that bank account uses 1099 report.
          type: boolean
      type: object
    commissionConfigPaymentMethodType:
      description: This value of the enum is used for Payment methods
      enum:
      - Check
      - CentrallyPaid
      - Eft
      type: string
    bankAccounts:
      description: Request object to edit Bank Accounts
      properties:
        bankAccounts:
          description: List of bank accounts.
          items:
            $ref: '#/components/schemas/configBankAccountType'
          maxItems: 4000
          type: array
        updateDefault:
          description: Update default confirmation response
          type: boolean
        updateDefaultForCurrency:
          description: Update default for currency confirmation response
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardInfo:
      properties:
        creditCard:
          $ref: '#/components/schemas/resPaymentCardType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    currencyExchangeServiceTaxes:
      properties:
        currencyExchangeServiceTaxes:
          description: List of currency exchange service taxes
          items:
            $ref: '#/components/schemas/currencyExchangeServiceTaxType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    currencyExchangeServiceTaxesType:
      description: List of currency exchange service taxes
      items:
        $ref: '#/components/schemas/currencyExchangeServiceTaxType'
      maxItems: 4000
      type: array
    currencyExchangeServiceTaxType:
      description: Currency exchange service tax identification details
      properties:
        hotel:
          description: Property associated with currency exchange service tax
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Currency exchange service tax code
          maxLength: 20
          minLength: 0
          type: string
        amountFrom:
          description: Starting value of exchange equivalent range
          type: number
        amountTo:
          description: End value of exchange equivalent range
          type: number
        percentage:
          description: Percentage of local currency
          type: number
        minServiceTax:
          description: Minimum service tax to be collected
          type: number
        maxServiceTax:
          description: Maximimum service tax to be collected
          type: number
        baseAmount:
          description: Base tax basis of local currency. This is normally configured
            to the resulting tax basis of the previous tax slab range.
          type: number
      type: object
    customTaxTypesDetails:
      description: Response object for fetching Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customTaxTypesType:
      description: List of Custom Tax Types.
      items:
        $ref: '#/components/schemas/customTaxTypeType'
      maxItems: 4000
      type: array
    customTaxTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    customTaxTypesCriteria:
      description: Request object for creating Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customTaxTypesToBeChanged:
      description: Request object for changing Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyPlanCodes:
      properties:
        dailyPlanCodes:
          description: Details for daily plan code along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/dailyPlanCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyPlanCodesType:
      description: Details for daily plan code along with associated transaction codes.
      items:
        $ref: '#/components/schemas/dailyPlanCodeType'
      maxItems: 4000
      type: array
    dailyPlanCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        description:
          $ref: '#/components/schemas/translationTextType2000'
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    paymentMethodValidationRuleType:
      description: Payment method card validation rules.
      properties:
        length:
          description: Valid lengths of card number.
          maxLength: 50
          minLength: 0
          type: string
        prefix:
          description: Valid card number prefix.
          maxLength: 50
          minLength: 0
          type: string
        ranges:
          description: Card number start and end range.
          items:
            $ref: '#/components/schemas/cardRangeType'
          maxItems: 4000
          type: array
        formula:
          description: Formula used for card validation. Only valid in case of user
            defined validation.
          maxLength: 2000
          minLength: 0
          type: string
        rule:
          $ref: '#/components/schemas/cardValidationRuleTypeType'
      type: object
    cardRangesType:
      description: Card number start and end range.
      items:
        $ref: '#/components/schemas/cardRangeType'
      maxItems: 4000
      type: array
    cardRangeType:
      description: Card number start and end range.
      properties:
        from:
          description: Starting range of the card.
          maxLength: 50
          minLength: 0
          type: string
        to:
          description: End range of the card.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    cardValidationRuleTypeType:
      description: Defines rules to be used for card validation.
      enum:
      - Mod7
      - Mod10
      - Udef
      - Novalid
      type: string
    exchangeRateType:
      description: Exchange rate configuration type.
      properties:
        hotelId:
          description: Property where exchange rate is set.
          maxLength: 20
          minLength: 0
          type: string
        exchangeType:
          description: Type for exchange calculation.
          items:
            $ref: '#/components/schemas/currencyExchangeType'
          maxItems: 4000
          type: array
        currency:
          $ref: '#/components/schemas/codeDescriptionType'
        baseCurrency:
          $ref: '#/components/schemas/codeDescriptionType'
        beginDate:
          description: Date on which the rate is to become active.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        buyRate:
          description: Buy Rate for foreign currency.
          type: number
        buyCommission:
          description: Percentage of the amount that is to be a commission for the
            currency buy operation.
          type: number
        sellRate:
          description: Sell Rate for foreign currency.
          type: number
        sellCommission:
          description: Percentage of the amount that is to be a commission for the
            currency sell operation.
          type: number
        comment:
          description: Comments associated with the exchange rate.
          type: string
        status:
          $ref: '#/components/schemas/statusTypes'
      type: object
    currencyExchangeType:
      description: E-certificate conversion.
      enum:
      - Cash
      - Settlement
      - Posting
      - Check
      - TACommission
      - Membership
      - Certificate
      type: string
    statusTypes:
      description: Defines status in terms of time.
      enum:
      - Future
      - Current
      - Past
      type: string
    expenseArrangementCodes:
      properties:
        expenseArrangementCodes:
          description: Details for expense arrangement code along with associated
            transaction codes.
          items:
            $ref: '#/components/schemas/expenseArrangementCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    expenseArrangementCodesType:
      description: Details for expense arrangement code along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/expenseArrangementCodeType'
      maxItems: 4000
      type: array
    expenseArrangementCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        description:
          $ref: '#/components/schemas/translationTextType2000'
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    fiscalFolioParameters:
      properties:
        fiscalFolioParameters:
          description: Holds Fiscal Folio Parameter details.
          items:
            $ref: '#/components/schemas/fiscalFolioParameterType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalFolioParametersType:
      description: Holds Fiscal Folio Parameter details.
      items:
        $ref: '#/components/schemas/fiscalFolioParameterType'
      maxItems: 4000
      type: array
    fiscalFolioParameterType:
      description: Provides information about the Fiscal Folio Parameter.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        partner:
          description: Fiscal folio parameter associated with Partner.
          maxLength: 80
          minLength: 0
          type: string
        code:
          description: Code of the Fiscal Folio Parameter.
          maxLength: 80
          minLength: 0
          type: string
        description:
          description: Description of the Fiscal Folio Parameter.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Parameter value of the Fiscal Folio Parameter.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: Indicates whether the Fiscal Folio Parameter is user created
            or from seed data.
          type: boolean
      type: object
    folioTypeLegendMappingsConfigDetails:
      description: Response object for fetch folio type legend mapping.
      properties:
        legends:
          description: Details about folio type legened mapping.
          items:
            $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingsConfigType:
      description: Details about folio type legened mapping.
      items:
        $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
      maxItems: 4000
      type: array
    folioTypeLegendMappingConfigType:
      description: Folio type legened mapping information.
      properties:
        hotelId:
          description: Property associated with folio type legend mapping
          maxLength: 20
          minLength: 0
          type: string
        legendCode:
          description: Legend code to which folio types attached.
          maxLength: 20
          minLength: 0
          type: string
        folioType:
          description: Folio type attached to the legend.
          maxLength: 20
          minLength: 0
          type: string
        folioTypeDescription:
          description: Folio type description attached to the legend.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    folioTypeLegendMappingConfigCriteria:
      description: Request object to create folio type legend mapping information.
      properties:
        criteria:
          $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingConfigToBeChanged:
      description: Request object to edit folio type legend mapping information.
      properties:
        criteria:
          $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingConfigStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionGenerates:
      properties:
        transactionGenerates:
          $ref: '#/components/schemas/hotelTransactionGeneratesSetupType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionGeneratesSetupType:
      description: Defines the Generates Setup and its Calculation Rules.
      properties:
        addBaseAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        generates:
          description: Defines the Generate and its Calculation Rules.
          items:
            $ref: '#/components/schemas/generateType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Transaction group.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Transaction sub group.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    generateCalculationBucketsType:
      description: Defines the buckets the generated amount can be added to.
      properties:
        bucket1:
          description: Generate Calculation Bucket1.
          type: boolean
        bucket2:
          description: Generate Calculation Bucket2.
          type: boolean
        bucket3:
          description: Generate Calculation Bucket3.
          type: boolean
      type: object
    generatesType:
      description: Defines the Generate and its Calculation Rules.
      items:
        $ref: '#/components/schemas/generateType'
      maxItems: 4000
      type: array
    generateType:
      description: Defines the Generate and its Calculation Rules
      properties:
        generateId:
          $ref: '#/components/schemas/uniqueID_Type'
        rule:
          $ref: '#/components/schemas/generateCalcRuleType'
        addGeneratedAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        level:
          $ref: '#/components/schemas/generateLevelType'
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    generateCalcRuleType:
      description: Defines the Calculation Rule for the generate.
      properties:
        percentage:
          $ref: '#/components/schemas/percentageGenerateType'
        flatAmount:
          $ref: '#/components/schemas/flatAmtGenerateType'
        uDF:
          description: Defines User Defined Function to calculate generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionName:
          description: The function name of the User Defined Function used to calculate
            generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionArguments:
          description: Collection of function arguments and their corresponding values.
          items:
            $ref: '#/components/schemas/functionArgumentType'
          maxItems: 4000
          type: array
        taxTypeBased:
          description: Defines the Calculation Rule for the Tax Type for a specific
            date schedule
          items:
            $ref: '#/components/schemas/taxTypeGenerateType'
          maxItems: 4000
          type: array
        roundingMethod:
          $ref: '#/components/schemas/generateRoundingMethodType'
        posting:
          $ref: '#/components/schemas/generatePostingRuleType'
      type: object
    percentageGenerateType:
      description: Defines percentage rule for generates.
      properties:
        amount:
          description: Percentage Amount.
          maximum: 100
          minimum: 0
          type: number
        calculatedOn:
          $ref: '#/components/schemas/generateCalcBucketType'
        useTaxBracket:
          description: Determines if tax bracket calculations are to apply to generates.
          type: boolean
      type: object
    generateCalcBucketType:
      description: Generates calculation bucket/group. Percentage generates are calculated
        against amount in one of the the calculation bucket.
      enum:
      - Base
      - Bucket1
      - Bucket2
      - Bucket3
      type: string
    flatAmtGenerateType:
      description: Defines Flat Amount rule for generates.
      properties:
        amount:
          description: Flat Amount of the generate.
          type: number
      type: object
    functionArgumentsType:
      description: Collection of function arguments and their corresponding values.
      items:
        $ref: '#/components/schemas/functionArgumentType'
      maxItems: 4000
      type: array
    functionArgumentType:
      description: This type provided details of a function argument and the value
        it holds.
      properties:
        name:
          description: Specifies the name of the function argument.
          maxLength: 200
          minLength: 0
          type: string
        value:
          description: Specifies the value held by the function argument.
          maxLength: 200
          minLength: 0
          type: string
        position:
          description: Specifies the position of the function argument in the argument
            list.
          type: integer
        dataType:
          description: Specifies the datatype of the function argument.
          maxLength: 40
          minLength: 0
          type: string
        required:
          description: Argument of the function mandatory or not.
          type: boolean
      type: object
    taxTypesGenerateType:
      description: Defines the Calculation Rule for the Tax Type for a specific date
        schedule
      items:
        $ref: '#/components/schemas/taxTypeGenerateType'
      maxItems: 4000
      type: array
    taxTypeGenerateType:
      description: Defines the Calculation Rules for the Tax Type
      properties:
        schedule:
          description: Defines the Calculation Rule for the Tax Type for a specific
            date schedule
          items:
            $ref: '#/components/schemas/taxTypeGenerateScheduleType'
          maxItems: 4000
          type: array
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    taxTypeGenerateScheduleType:
      description: Defines the Calculation Rule for the Tax Type for a specific date
        schedule
      properties:
        rule:
          $ref: '#/components/schemas/taxTypeCalcRuleType'
        startDate:
          description: Date when this schedule will be effective.
          format: date
          type: string
      type: object
    taxTypeCalcRuleType:
      description: Defines the Calculation Rule for the generate.
      properties:
        percentage:
          $ref: '#/components/schemas/percentageGenerateType'
        flatAmount:
          $ref: '#/components/schemas/flatAmtGenerateType'
        uDF:
          $ref: '#/components/schemas/uDFGenerateType'
        doNotPost:
          description: Existance of this type indicates that the generate will not
            be effective. This is mainly used on Tax Type based generates rule.
          type: object
        roundingMethod:
          $ref: '#/components/schemas/generateRoundingMethodType'
      type: object
    uDFGenerateType:
      description: Defines UDF rule for generates.
      properties:
        uDF:
          description: Defines User Defined Function to calculate generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionName:
          description: The function name of the User Defined Function used to calculate
            generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionArguments:
          description: Collection of function arguments and their corresponding values.
          items:
            $ref: '#/components/schemas/functionArgumentType'
          maxItems: 4000
          type: array
      type: object
    doNotPostGenerateType:
      description: Existance of this type indicates that the generate will not be
        effective. This is mainly used on Tax Type based generates rule.
      type: object
    generateRoundingMethodType:
      description: "This type is only available for properties with zero decimals.\
        \ If a property is using decimal points, this type will not be available.\
        \ The rounding methods which can be specified are: UP, DOWN or NONE."
      enum:
      - Up
      - Down
      - None
      type: string
    generatePostingRuleType:
      description: Advance Generates posting rules.
      properties:
        applicableDays:
          description: Generates are posted/applicable only for first Applicable Days
            of the stay.
          type: integer
        adjustmentType:
          $ref: '#/components/schemas/generateAdjustmentTypeType'
      type: object
    generateAdjustmentTypeType:
      description: Generates calculation bucket/group. Percentage generates are calculated
        against amount in one of the the calculation bucket.
      enum:
      - DuringEndOfDay
      - PromptAtCheckOut
      - NoAdjustment
      type: string
    generateLevelType:
      description: Defines the level from which the generates was created.
      enum:
      - Group
      - SubGroup
      - TransactionCode
      type: string
    adjustmentCodes:
      properties:
        adjustmentCodes:
          description: Holds Adjustment Code details.
          items:
            $ref: '#/components/schemas/adjustmentCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    adjustmentCodesType:
      description: Holds Adjustment Code details.
      items:
        $ref: '#/components/schemas/adjustmentCodeType'
      maxItems: 4000
      type: array
    adjustmentCodeType:
      description: Provides information about Adjustment Codes.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Adjustment Reason Code
          maxLength: 20
          minLength: 0
          type: string
        codeType:
          $ref: '#/components/schemas/adjustmentReasonCodeType'
        description:
          description: Adjustment Reason Description
          maxLength: 2000
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        bIRGuest:
          description: BIR Guest Type in Adjustment Codes.
          maxLength: 2000
          minLength: 0
          type: string
        amountOrPercentageFlag:
          $ref: '#/components/schemas/amountOrPercentage'
      type: object
    adjustmentReasonCodeType:
      description: "Defines values for Adjustment reason codes. e.g. ADJ for adjustment,\
        \ COR for correction, DEL for deletion."
      enum:
      - Adjustment
      - Correction
      - Deletion
      - ServiceRecovery
      - CreditBill
      type: string
    amountOrPercentage:
      description: Adjustment Code calculation type based on details.
      enum:
      - Amount
      - Percent
      type: string
    paymentMethodsType:
      description: Holds the various types of payment methods.
      items:
        $ref: '#/components/schemas/paymentMethodType'
      maxItems: 4000
      type: array
    paymentMethodType:
      description: Provides information about the payment methods. CreditCardCode
        and CreditCardType help to determine if EFTs are allowed.
      properties:
        description:
          description: Description of the payment method.
          maxLength: 2000
          minLength: 0
          type: string
        paymentCard:
          $ref: '#/components/schemas/paymentCardType'
        paymentMethodTransactionInfo:
          $ref: '#/components/schemas/paymentMethodTransactionInfoType'
        paymentMethodUsage:
          $ref: '#/components/schemas/paymentMethodUsageType'
        creditLimit:
          $ref: '#/components/schemas/creditLimitType'
        hotelId:
          description: Property from which the payment method belongs to.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          description: Defines the unique identifier for this payment method.
          maxLength: 20
          minLength: 0
          type: string
        calculatePoints:
          $ref: '#/components/schemas/calculatePointsType'
        inactive:
          description: Indicates whether the payment method is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    paymentCardType:
      description: Contains credit card information.
      properties:
        cardUsageRules:
          $ref: '#/components/schemas/cardUsageRulesType'
        validation:
          $ref: '#/components/schemas/paymentMethodValidationRuleType'
        merchantNumber:
          description: The merchant number to use when settling or transmitting credit
            card information.
          maxLength: 20
          minLength: 0
          type: string
        option:
          $ref: '#/components/schemas/cardOptionType'
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: User defined credit card type if credit card type from a defined
            list is not provided.
          maxLength: 2
          minLength: 0
          type: string
        processing:
          $ref: '#/components/schemas/cardProcessingType'
      type: object
    cardUsageRulesType:
      description: Provides information on the various authorization options for a
        given card type .
      properties:
        authorizationAtCheckin:
          description: Indicates if this payment method can be used for Authorization
            at check in.
          type: boolean
        authorizationDuringStay:
          description: Indicates if this payment method can be used for Authorization
            during stay.
          type: boolean
        authorizationReversal:
          description: Indicates if this payment method can be used for Authorization
            reversal can be done.
          type: boolean
        authorizationSettlementAtCheckout:
          description: Indicates if this payment method can be used for Authorization
            settlement can happen during checkout.
          type: boolean
        cVVCheck:
          description: Indicates if this payment method needs CVV check.
          type: boolean
        addressVerification:
          description: Indicates if this payment method requires an address verification.
          type: boolean
        promptAtCheckin:
          description: Indicates if this payment method needs a prompt during check
            in.
          type: boolean
        chipAndPin:
          description: Indicates if this payment method is a chip and pin.
          type: boolean
      type: object
    cardOptionType:
      description: Switch card options.
      properties:
        requireIssueNumber:
          description: Indicates whether issue number is mandatory or not.
          type: boolean
        requireStartDate:
          description: Indicates whether start date is mandatory or not.
          type: boolean
        either:
          description: Indicates that either Issue Number or Start Date is sufficient.
          type: boolean
      type: object
    paymentMethodTransactionInfoType:
      description: "Provides information about the transactions including the transaction\
        \ code, group, subgroup and the posting amount."
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        postingAmount:
          $ref: '#/components/schemas/postingAmountType'
        surcharge:
          $ref: '#/components/schemas/surchargeType'
        transactionCode:
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          maxLength: 20
          minLength: 0
          type: string
        transactionDisplay:
          maxLength: 8
          minLength: 0
          type: string
      type: object
    postingAmountType:
      properties:
        minimumAmount:
          $ref: '#/components/schemas/currencyAmountType'
        maximumAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    surchargeType:
      description: Surcharge information regarding the payment configuration.
      properties:
        minimum:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: Indicates the percentage amount for a credit card transaction.
          maximum: 100
          minimum: 0
          type: number
      type: object
    paymentMethodUsageType:
      description: This provides information about the various usage options permitted
        for the given payment method.
      properties:
        billing:
          description: Indicates if the payment method can be used for Guest Billing
          type: boolean
        accountsReceivable:
          description: Indicates if this payment method can be used for Accounts Receivables.
          type: boolean
        deposit:
          description: Indicates if this payment method can be used for Deposit payments.
          type: boolean
        compAccounting:
          description: Indicates if this payment method can be used for Comp Accounting.
          type: boolean
        reservation:
          description: Indicates if this payment method can be used as a Reservation
            payment method.
          type: boolean
        posting:
          description: Indicates if postings can be manually added to the Reservation
            when this payment method is used.
          type: boolean
        cash:
          description: Indicates if this payment method is a Cash type payment method.
          type: boolean
      type: object
    creditLimitType:
      properties:
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          maximum: 100
          minimum: 0
          type: number
      type: object
    calculatePointsType:
      description: Defines when the points are to be calculated.
      enum:
      - Always
      - Prompt
      - Never
      type: string
    paymentMethodsInfo:
      properties:
        paymentMethods:
          description: Holds the various types of payment methods.
          items:
            $ref: '#/components/schemas/paymentMethodType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxTypes:
      properties:
        taxTypes:
          description: Holds Tax Type details.
          items:
            $ref: '#/components/schemas/taxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxTypesType:
      description: Holds Tax Type details.
      items:
        $ref: '#/components/schemas/taxTypeType'
      maxItems: 4000
      type: array
    commissionCodeDetail:
      description: Response object for fetching commission code details.
      properties:
        commissionCodeDetail:
          $ref: '#/components/schemas/commissionCodeDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodeDetailType:
      description: Commission code detail.
      properties:
        commissionCodeInfo:
          $ref: '#/components/schemas/commissionCodeInfoType'
      type: object
    compTypesDetails:
      description: Response object for fetching Comp Types.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    futurePastExchangeRates:
      description: Collection of exchange rates and their information.
      items:
        $ref: '#/components/schemas/exchangeRateType'
      maxItems: 4000
      type: array
    trackItActionsDetails:
      description: Response object for fetching Track it Actions.
      properties:
        trackItActions:
          description: Track It Action Collection element.
          items:
            $ref: '#/components/schemas/trackItActionConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItActionsConfigType:
      description: Track It Action Collection element.
      items:
        $ref: '#/components/schemas/trackItActionConfigType'
      maxItems: 4000
      type: array
    trackItActionConfigType:
      description: Track It Action Information Type.
      properties:
        code:
          description: Code of the Track It Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Track It Code.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence.
          type: number
        hotelId:
          description: Property to which the Track It Code is configured.
          maxLength: 20
          minLength: 0
          type: string
        trackItGroup:
          $ref: '#/components/schemas/trackItGroupType'
        inactive:
          description: Indicates if the Track it Code is inactive.
          type: boolean
        status:
          $ref: '#/components/schemas/trackItActionStatusType'
      type: object
    trackItGroupType:
      properties:
        valet:
          description: Indicates if the Track It belongs to the Valet Group.
          type: boolean
        parcel:
          description: Indicates if the Track It belongs to the Parcel Group.
          type: boolean
        baggage:
          description: Indicates if the Track It belongs to the Baggage Group.
          type: boolean
        lost:
          description: Indicates if the Track It belongs to the Lost Group.
          type: boolean
      type: object
    trackItActionStatusType:
      description: Defined Values for Status of the Track it Action.
      enum:
      - Open
      - Closed
      type: string
    trackItLocationsDetails:
      description: Response object for fetching Track it Locations.
      properties:
        trackItLocations:
          description: Track It Locations Collection element.
          items:
            $ref: '#/components/schemas/trackItLocationConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItLocationsConfigType:
      description: Track It Locations Collection element.
      items:
        $ref: '#/components/schemas/trackItLocationConfigType'
      maxItems: 4000
      type: array
    trackItLocationConfigType:
      description: Track It Location Information Type.
      properties:
        code:
          description: Code of the Track It Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Track It Code.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence.
          type: number
        hotelId:
          description: Property to which the Track It Code is configured.
          maxLength: 20
          minLength: 0
          type: string
        trackItGroup:
          $ref: '#/components/schemas/trackItGroupType'
        inactive:
          description: Indicates if the Track it Code is inactive.
          type: boolean
      type: object
    calculatedPosting:
      properties:
        result:
          $ref: '#/components/schemas/calculatePostingResult'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    calculatePostingResult:
      description: List of charges that will be posted against the transaction code
        based from the test criteria.
      properties:
        charges:
          description: Charges that will be posted based from the criteria defined.
          items:
            $ref: '#/components/schemas/calculatePostingCharge'
          maxItems: 4000
          type: array
        totalAmount:
          description: The full amount that would be posted.
          type: number
      type: object
    calculatePostingCharge:
      description: Corresponds to each charge that will be posted against the transaction
        code based from the test criteria.
      properties:
        hotelId:
          description: Hotel code of the associated transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: The associated transaction code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the transaction code.
          maxLength: 2000
          minLength: 0
          type: string
        level:
          $ref: '#/components/schemas/generateLevelType'
        amount:
          description: The amount that will be posted against the transaction code.
          type: number
        formula:
          description: The formula that is used to calculate the generates.
          maxLength: 2000
          minLength: 0
          type: string
        bucket:
          $ref: '#/components/schemas/postingBucket'
        sequence:
          description: The order in which the charge will be posted. The base posting
            will always be 0 (zero) followed by generates associated in order of which
            they were created.
          type: integer
        basePosting:
          description: Indicates whether it is the base posting.
          type: boolean
      type: object
    postingBucket:
      description: Holds the amount that will be stored in each bucket after posting.
      properties:
        bucket1:
          description: Holds amount for sub-total 1.
          type: number
        bucket2:
          description: Holds amount for sub-total 2.
          type: number
        bucket3:
          description: Holds amount for sub-total 3.
          type: number
      type: object
    hotelTransactionCode:
      properties:
        transactionCode:
          $ref: '#/components/schemas/hotelTransactionCodeType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionCodeType:
      description: Transaction Code configuration details.
      properties:
        classification:
          $ref: '#/components/schemas/trxCodeClassificationType'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        paymentSetup:
          $ref: '#/components/schemas/paymentTrxSetupType'
        trxSetup:
          $ref: '#/components/schemas/trxSetupType'
        adjustmentCode:
          description: Transaction code to be used to make adjustments on the posting
            made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionAdjustments:
          description: Combination of Adjustment Reason Code and Transaction Adjustment
            Code.
          items:
            $ref: '#/components/schemas/transactionAdjustmentType'
          maxItems: 4000
          type: array
        serviceRecoveryAdjustmentCode:
          description: Transaction code to be used to make service recovery adjustments
            on the posting made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        amounts:
          $ref: '#/components/schemas/trxCodeAmountsType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        gLMapping:
          $ref: '#/components/schemas/gLMappingType'
        associatedTransactionCodes:
          description: Code and description of the standard transaction code associated
            to this comp transaction code.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        allowServiceRecovery:
          description: Flag to identify if this transaction code already used as service
            recovery adjustment code.
          type: boolean
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        mappingCodes:
          description: Mapping code and value attached to Transaction Code.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          maxItems: 4000
          type: array
        code:
          description: Unique Transaction Code.
          maxLength: 20
          minLength: 0
          type: string
        compTransaction:
          description: If true indicates this transaction codes is for Comp Accounting.
          type: boolean
        printTrxReceipt:
          type: boolean
        hotelId:
          description: Hotel's Transaction Code configuration detail.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trxCodeClassificationType:
      description: Transaction Code Classification details.
      properties:
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        transactionType:
          $ref: '#/components/schemas/trxCodeClassificationType_transactionType'
        group:
          $ref: '#/components/schemas/codeDescriptionType'
        subgroup:
          $ref: '#/components/schemas/codeDescriptionType'
        fiscalTransactionType:
          description: Transaction code type for fiscal printing purposes.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    cashieringTransactionTypeType:
      description: Wrapper Transaction Type.
      enum:
      - Revenue
      - Payment
      - Wrapper
      type: string
    transactionCodeTypeType:
      description: Other Charges Transaction.
      enum:
      - Lodging
      - FoodAndBeverage
      - Telephone
      - Minibar
      - Tax
      - NonRevenue
      - Others
      type: string
    paymentTrxSetupType:
      description: Payment Transaction Code setup details.
      properties:
        usage:
          $ref: '#/components/schemas/paymentTrxUsageType'
        card:
          $ref: '#/components/schemas/cardPaymentTrxSetupType'
        iRS8300Reporting:
          description: True indicates the Transaction Code payment will be reposted
            to IRS according to the rule specified by IRS.
          type: boolean
        roundingFactor:
          description: True indicates the Transaction Code posting will have a rounding
            effect.
          type: boolean
        generateTaxInvoice:
          description: Indicates if the Transaction Code payment will generate a Tax
            Invoice at the time of making a payment. Tax Invoices are used in Thailand.
          type: boolean
        paymentType:
          $ref: '#/components/schemas/paymentTrxCodeTypeType'
      type: object
    paymentTrxUsageType:
      description: Payment Transaction Code usage details.
      properties:
        aR:
          description: True indicates the payment Transaction Code is used for AR
            payments.
          type: boolean
        cashier:
          description: Indicates whether Profiles are shared across the Hotels within
            the chain or not.
          type: boolean
        comp:
          description: True indicates the payment Transaction Code is used for Comp
            payments.
          type: boolean
        deposit:
          description: True indicates the payment Transaction Code is used for deposits.
          type: boolean
        interHotelPayment:
          description: True indicates the payment Transaction Code inter hotel payments.
          type: boolean
        interHotelDeposit:
          description: True indicates the payment Transaction Code is used for inter
            hotel deposits.
          type: boolean
      type: object
    cardPaymentTrxSetupType:
      description: Card Payment Transaction Code configuration details.
      properties:
        processingType:
          $ref: '#/components/schemas/cardPaymentProcessingType'
        accountReceivable:
          $ref: '#/components/schemas/aRAccountRefType'
        commission:
          description: Commission percentage on the payment.
          maximum: 100
          minimum: 0
          type: number
        displayCode:
          description: Display code of the payment Transaction Code.
          maxLength: 8
          minLength: 0
          type: string
        interfaceCode:
          description: Card Payment's internal interface code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cardPaymentProcessingType:
      description: Manual Processing.
      enum:
      - Eft
      - Manual
      type: string
    aRAccountRefType:
      description: AR account Info.
      properties:
        name:
          description: AR account name.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    paymentTrxCodeTypeType:
      description: Other Payment Type Transaction.
      enum:
      - Cash
      - Check
      - CreditCard
      - Others
      type: string
    trxSetupType:
      description: Transaction Code setup details.
      properties:
        generatesType:
          description: Short Summary information of the Chain and it's Hubs and Hotels.
          maxLength: 10
          minLength: 0
          type: string
        taxInclusive:
          description: True indicates that the tax is inclusive in the generate.
          type: boolean
        revenue:
          description: True indicates the Transaction Code is to be considered as
            revenue to the Hotel.
          type: boolean
        manualPosting:
          description: True indicates the Transaction Code is allowed to be posted
            manually.
          type: boolean
        useForPaidout:
          description: True indicates the Transaction Code is used for Paid outs.
          type: boolean
        redeemMembershipPoints:
          description: True indicates the Transaction Code posting are redeemable
            against the loyalty program points.
          type: boolean
        includeInDepositRule:
          description: True indicates the Transaction Code posting will be included
            in Deposit/Cencallation rule calculations.
          type: boolean
        depositPostingOnly:
          description: True indicates the Transaction Code is used for deposit postings
            only.
          type: boolean
        postingRule:
          description: Deposit posting associated with the transaction code.
          type: boolean
        depositType:
          $ref: '#/components/schemas/depositTypeType'
        checkNoRequired:
          description: True indicates the Transaction Code requires the Check Number
            for posting.
          type: boolean
        interHotelSales:
          description: True indicates the Transaction Code is used for cross posting
            across the hotels/.
          type: boolean
        postCovers:
          description: True indicates the Transaction Code is used to post covers.
          type: boolean
        nonTaxable:
          description: True indicates the Transaction Code is non taxable.
          type: boolean
        inactive:
          description: True indicates the Transaction Code is inactive.
          type: boolean
        ownershipStatus:
          $ref: '#/components/schemas/trxOwnershipType'
        serviceType:
          description: Service Type for the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        accountingCode:
          description: Accounting Code for the transaction code.
          maxLength: 40
          minLength: 0
          type: string
        quantityCode:
          description: Quantity Code for the transaction code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    depositTypeType:
      description: Represents the Folio Deposit Type.
      enum:
      - Receipts
      - Folios
      type: string
    trxOwnershipType:
      description: Protected by the Property level
      enum:
      - Corporate
      - Property
      type: string
    transactionAdjustmentType:
      description: Combination of Adjustment Reason Code and Transaction Adjustment
        Code.
      properties:
        adjustmentReasonCode:
          description: Adjustment reason Code
          maxLength: 20
          minLength: 0
          type: string
        adjustmentTransactionCode:
          description: Adjustment Transaction Code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trxCodeAmountsType:
      description: Transaction Code's default amount details.
      properties:
        defaultPrice:
          description: Default price of the Transaction Code.
          type: number
        minAmount:
          description: Minimum amount to be posted on this Transaction Code.
          type: number
        maxAmount:
          description: Maximum Amount to be posted on this Transaction Code.
          type: number
        currency:
          description: Default currency code for the amounts.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    generatesSetupType:
      description: Defines the Generates Setup and its Calculation Rules.
      properties:
        addBaseAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        generates:
          description: Defines the Generate and its Calculation Rules.
          items:
            $ref: '#/components/schemas/generateType'
          maxItems: 4000
          type: array
      type: object
    gLMappingType:
      description: Gl mapping for transaction codes specific to hotels like Hilton.
      properties:
        itemId:
          description: Hilton Department Group Item Id
          maxLength: 40
          minLength: 0
          type: string
        departmentCode:
          description: Hilton Department Group Code
          maxLength: 20
          minLength: 0
          type: string
        accountCode:
          description: Hilton GL Account code Description
          maxLength: 20
          minLength: 0
          type: string
        accountDescription:
          description: Hilton GL Account code Description
          maxLength: 2000
          minLength: 0
          type: string
        currencyCode:
          description: Hilton GL Account Currency Code
          maxLength: 20
          minLength: 0
          type: string
        statCode:
          description: Hilton GL Account StatCode
          maxLength: 20
          minLength: 0
          type: string
        productCode:
          description: Hilton Product Code
          maxLength: 20
          minLength: 0
          type: string
        chargeCode:
          description: Hilton GL Charge Category Code
          maxLength: 20
          minLength: 0
          type: string
        accountingCategory:
          description: Hilton Account Category Code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    exportMappingLinkedCodeType:
      description: Details of linked code.
      properties:
        linkedCode:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        exportMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        exportMappingCode:
          description: Mapping code attached to linked code.
          maxLength: 100
          minLength: 0
          type: string
        defaultMappedValue:
          description: Default value.
          maxLength: 2000
          minLength: 0
          type: string
        mappedValue:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        mappingTypeDescription:
          description: Description of the export mapping type.
          maxLength: 2000
          minLength: 0
          type: string
        mappingCodeDescription:
          description: Description of the export mapping code.
          maxLength: 2000
          minLength: 0
          type: string
        lovName:
          description: Name of the LOV group to be used.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    hotelTransactionGroupType:
      description: Transaction Group configuration information.
      properties:
        description:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        generatesAvailable:
          description: Flag to determine whether generates are available or not
          type: boolean
        hotelId:
          description: Hotel Code where the Transaction Group is configured.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelTransactionSubgroupType:
      description: Transaction Subgroup configuration Information.
      properties:
        description:
          description: Description of the Transaction Subgroup.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        groupDescription:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: Transaction Subroup Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        group:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        newGroup:
          description: Use this attribute to update the existing group during change
            operation.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        generatesAvailable:
          description: Flag to determine whether generates are available or not
          type: boolean
        hotelId:
          description: Hotel Code where the Transaction Subgroup is configured.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    operaControlSequences:
      properties:
        controlSequences:
          description: List of Control Sequence details
          items:
            $ref: '#/components/schemas/controlSequenceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    controlSequencesType:
      description: List of Control Sequence details
      items:
        $ref: '#/components/schemas/controlSequenceType'
      maxItems: 4000
      type: array
    controlSequenceType:
      description: Provides information about the Opera Control Sequence
      properties:
        hotelId:
          description: Control Sequence code associated with Hotel
          maxLength: 20
          minLength: 0
          type: string
        controlCode:
          $ref: '#/components/schemas/controlSequenceCodeType'
        folioType:
          $ref: '#/components/schemas/codeDescriptionType'
        minimum:
          description: Minimum value of Opera Control Sequence
          type: number
        maximum:
          description: Maximum value of Opera Control Sequence
          type: number
        countryCode:
          description: Opera Control Sequence belongs to country
          maxLength: 20
          minLength: 0
          type: string
        sequenceValue:
          description: Current Sequence Value for the OPERA Sequence
          type: number
      type: object
    controlSequenceCodeType:
      description: "Indicates control sequences used for bills. Eg. CREDIT_BILL, FATTURA\
        \ etc."
      enum:
      - AcknowledgeReceipt
      - Statement
      - Folio
      - OfficialReceipt
      - Bill
      - ArInvoice
      type: string
    revenueBucketCodes:
      properties:
        revenueBucketCodes:
          description: Details for Revenue Bucket codes along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/revenueBucketCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketCodesType:
      description: Details for Revenue Bucket codes along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/revenueBucketCodeType'
      maxItems: 4000
      type: array
    revenueBucketCodeType:
      description: This gives detailed information about a trx code arrangement.
      properties:
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        revenueBucketType:
          description: This holds Revenue Bucket Type
          maxLength: 20
          minLength: 0
          type: string
        pointsEligible:
          description: Bucket is eligible for membership points
          type: boolean
        bucketValue:
          description: Stores the default value for the arrangement code for revenue
            buckets in order to group transaction codes.
          maxLength: 2000
          minLength: 0
          type: string
        bucketType:
          $ref: '#/components/schemas/bucketTypeType'
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    bucketTypeType:
      description: Fiscal Bucket Type.
      enum:
      - Default
      - Fiscal
      type: string
    routingInstructions:
      properties:
        routingInstructions:
          description: This type holds a collection of routing instructions.
          items:
            $ref: '#/components/schemas/configRoutingInstructionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configRoutingInstructionsType:
      description: This type holds a collection of routing instructions.
      items:
        $ref: '#/components/schemas/configRoutingInstructionType'
      maxItems: 4000
      type: array
    configRoutingInstructionType:
      description: "Routing limit can be one of the three: Covers, Limit, Percent.\
        \ It is not mandatory to set value of either. This field is available when\
        \ the Cashiering>Routing Limits application function is set to Y."
      properties:
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        covers:
          description: Number of covers for this routing instruction. Null means no
            value has been specified.
          type: number
        limit:
          description: Allowable credit amount for this routing instruction. Null
            means no value has been specified.
          type: number
        percent:
          description: The routing limit percentage allowed for this routing instruction.
            Null means no value has been specified.
          type: number
        daysOfWeek:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        daily:
          description: Signifies whether a separate routing instruction has to be
            generated for each day of the stay.
          type: boolean
        inheritAuthRateCode:
          description: Reservation to inherit Rate Code from Authorizer.
          type: boolean
        compAccounting:
          description: Determines if this is a comp routing code or a routing code.
          type: boolean
      type: object
    timeSpanDaysOfWeekType:
      description: Container for Time span with days of week.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    stopProcessingReasons:
      description: Response object for fetching Stop Processing Reason.
      properties:
        stopProcessingReasons:
          description: List of the Stop Processing Reasons to be configured or fetched
          items:
            $ref: '#/components/schemas/stopProcessingReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stopProcessingReasonsType:
      description: List of the Stop Processing Reasons to be configured or fetched
      items:
        $ref: '#/components/schemas/stopProcessingReasonType'
      maxItems: 4000
      type: array
    stopProcessingReasonType:
      description: Details for Stop Processing Reason.
      properties:
        code:
          description: Code is used to identify a Stop Processing Reason.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Stop Processing Reason.
          maxLength: 2000
          minLength: 0
          type: string
        displaySequence:
          description: Stop Processing Reason display sequence Number.
          type: number
      type: object
    templateTransactionCodes:
      properties:
        transactionCodes:
          description: Template transaction code configuration details.
          items:
            $ref: '#/components/schemas/templateTransactionCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionCodesType:
      description: Template transaction code configuration details.
      items:
        $ref: '#/components/schemas/templateTransactionCodeType'
      maxItems: 4000
      type: array
    templateTransactionCodeType:
      description: Transaction Code configuration details.
      properties:
        classification:
          $ref: '#/components/schemas/trxCodeClassificationType'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        paymentSetup:
          $ref: '#/components/schemas/paymentTrxSetupType'
        trxSetup:
          $ref: '#/components/schemas/trxSetupType'
        adjustmentCode:
          description: Transaction code to be used to make adjustments on the posting
            made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionAdjustments:
          description: Combination of Adjustment Reason Code and Transaction Adjustment
            Code.
          items:
            $ref: '#/components/schemas/transactionAdjustmentType'
          maxItems: 4000
          type: array
        serviceRecoveryAdjustmentCode:
          description: Transaction code to be used to make service recovery adjustments
            on the posting made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        amounts:
          $ref: '#/components/schemas/trxCodeAmountsType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        gLMapping:
          $ref: '#/components/schemas/gLMappingType'
        associatedTransactionCodes:
          description: Code and description of the standard transaction code associated
            to this comp transaction code.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        allowServiceRecovery:
          description: Flag to identify if this transaction code already used as service
            recovery adjustment code.
          type: boolean
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        mappingCodes:
          description: Mapping code and value attached to Transaction Code.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          maxItems: 4000
          type: array
        code:
          description: Unique Transaction Code.
          maxLength: 20
          minLength: 0
          type: string
        compTransaction:
          description: If true indicates this transaction codes is for Comp Accounting.
          type: boolean
      type: object
    templateTransactionGroups:
      properties:
        transactionGroups:
          description: Template transaction groups.
          items:
            $ref: '#/components/schemas/transactionGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionGroupsType:
      description: Template transaction groups.
      items:
        $ref: '#/components/schemas/transactionGroupType'
      maxItems: 4000
      type: array
    transactionGroupType:
      description: Transaction Group configuration information.
      properties:
        description:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    templateTransactionSubgroups:
      properties:
        transactionSubgroups:
          description: Template transaction subgroup configurations.
          items:
            $ref: '#/components/schemas/transactionSubgroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionSubgroupsType:
      description: Template transaction subgroup configurations.
      items:
        $ref: '#/components/schemas/transactionSubgroupType'
      maxItems: 4000
      type: array
    transactionSubgroupType:
      description: Transaction Subgroup configuration Information.
      properties:
        description:
          description: Description of the Transaction Subgroup.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        groupDescription:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: Transaction Subroup Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        group:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        newGroup:
          description: Use this attribute to update the existing group during change
            operation.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    hotelTransactionCodes:
      properties:
        transactionCodes:
          description: Transaction Code configuration details.
          items:
            $ref: '#/components/schemas/hotelTransactionCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionCodesType:
      description: Transaction Code configuration details.
      items:
        $ref: '#/components/schemas/hotelTransactionCodeType'
      maxItems: 4000
      type: array
    transactionCodes:
      properties:
        trxCodeUsages:
          description: Element on which the transaction code is being used.
          items:
            $ref: '#/components/schemas/trxCodeUsageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxCodeUsagesType:
      description: Element on which the transaction code is being used.
      items:
        $ref: '#/components/schemas/trxCodeUsageType'
      maxItems: 4000
      type: array
    trxCodeUsageType:
      description: Details about the element on which the transaction code is being
        used.
      properties:
        usageName:
          description: Name of the element type on which the transaction code is being
            used.
          maxLength: 100
          minLength: 0
          type: string
        usageDetail:
          description: Specific codes of the element type on which the transaction
            code is being used.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    transactionGroups:
      properties:
        transactionGroups:
          description: Hotel's Transaction Group configuration.
          items:
            $ref: '#/components/schemas/hotelTransactionGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionGroupsType:
      description: Hotel's Transaction Group configuration.
      items:
        $ref: '#/components/schemas/hotelTransactionGroupType'
      maxItems: 4000
      type: array
    hotelTransactionSubgroups:
      properties:
        transactionSubgroups:
          description: Hotel's Transaction Subgroup configuration.
          items:
            $ref: '#/components/schemas/hotelTransactionSubgroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionSubgroupsType:
      description: Hotel's Transaction Subgroup configuration.
      items:
        $ref: '#/components/schemas/hotelTransactionSubgroupType'
      maxItems: 4000
      type: array
    putArticles_request:
      allOf:
      - $ref: '#/components/schemas/articles'
    putAuthorizationConfigRule_request:
      allOf:
      - $ref: '#/components/schemas/authorizationConfigRules'
    putAuthorizerGroups_request:
      allOf:
      - $ref: '#/components/schemas/authorizerGroupsToChange'
    postAuthorizerGroups_request:
      allOf:
      - $ref: '#/components/schemas/authorizerGroups'
    postAutoFolioSettlementTypes_request:
      allOf:
      - $ref: '#/components/schemas/autoFolioSettlementTypesCriteria'
    putAutoFolioSettlementTypes_request:
      allOf:
      - $ref: '#/components/schemas/autoFolioSettlementTypesToBeChanged'
    putCashiers_request:
      allOf:
      - $ref: '#/components/schemas/cashiers'
    putCommissionCodes_request:
      allOf:
      - $ref: '#/components/schemas/commissionCodes'
    changeCompTypes_request:
      allOf:
      - $ref: '#/components/schemas/compTypesToBeChanged'
    postCompTypes_request:
      allOf:
      - $ref: '#/components/schemas/compTypesCriteria'
    putConfigBankAccounts_request:
      allOf:
      - $ref: '#/components/schemas/bankAccounts'
    putCurrencyExchangeServiceTaxes_request:
      allOf:
      - $ref: '#/components/schemas/currencyExchangeServiceTaxes'
    postCustomTaxTypes_request:
      allOf:
      - $ref: '#/components/schemas/customTaxTypesCriteria'
    changeCustomTaxTypes_request:
      allOf:
      - $ref: '#/components/schemas/customTaxTypesToBeChanged'
    putDailyPlanCodes_request:
      allOf:
      - $ref: '#/components/schemas/dailyPlanCodes'
    putExpenseArrangementCodes_request:
      allOf:
      - $ref: '#/components/schemas/expenseArrangementCodes'
    putFiscalFolioParameters_request:
      allOf:
      - $ref: '#/components/schemas/fiscalFolioParameters'
    changeFolioTypeLegendMappingConfig_request:
      allOf:
      - $ref: '#/components/schemas/folioTypeLegendMappingConfigToBeChanged'
    postFolioTypeLegendMappingConfig_request:
      allOf:
      - $ref: '#/components/schemas/folioTypeLegendMappingConfigCriteria'
    postTransactionGenerates_request:
      allOf:
      - $ref: '#/components/schemas/hotelTransactionGenerates'
    putAdjustmentCodes_request:
      allOf:
      - $ref: '#/components/schemas/adjustmentCodes'
    putStopProcessingReasons_request:
      allOf:
      - $ref: '#/components/schemas/stopProcessingReasons'
    putTemplateTransactionCodes_request:
      allOf:
      - $ref: '#/components/schemas/templateTransactionCodes'
    postTemplateTransactionSubgroups_request:
      allOf:
      - $ref: '#/components/schemas/templateTransactionSubgroups'
    putTransactionCodes_request:
      allOf:
      - $ref: '#/components/schemas/hotelTransactionCodes'
    postTransactionGroups_request:
      allOf:
      - $ref: '#/components/schemas/transactionGroups'
    rateCategoryType_rateCategoryDetails:
      description: Begin date for the rate category.
      properties:
        beginDate:
          description: Begin date for the rate category.
          format: date
          type: string
        endDate:
          description: End date for the rate category.
          format: date
          type: string
        description:
          description: Description of rate category.
          maxLength: 200
          minLength: 0
          type: string
        rateClass:
          description: Active date of the room category.
          maxLength: 20
          minLength: 0
          type: string
        sellSequence:
          description: Indicates rate category sell sequence.
          type: number
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    cashierType_usageInfo_history:
      description: Statistics about the use of the cashier.
      properties:
        lastOpened:
          description: The date that the cashier last opened.
          format: date
          type: string
        timesOpened:
          description: The number of times the cashier has opened their account today.
          type: integer
      type: object
    cashierType_usageInfo:
      description: Information about how the cashier is used.
      properties:
        maximumDailyUses:
          description: The Maximum Daily Uses for the cashier.
          type: integer
        history:
          $ref: '#/components/schemas/cashierType_usageInfo_history'
      type: object
    trxCodeClassificationType_transactionType:
      description: Transaction Code Type detail.
      properties:
        code:
          $ref: '#/components/schemas/transactionCodeTypeType'
        taxCode:
          description: Tax Code if the transaction Code if it is of type Tax.
          type: integer
      type: object
x-original-swagger-version: "2.0"
