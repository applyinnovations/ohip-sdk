openapi: 3.0.1
info:
  contact:
    email: hospitality-integrations_ww@oracle.com
  description: "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you\
    \ can find operations to get, post, put and delete front desk codes such as commission\
    \ codes, transaction groups, codes & subgroups, articles, payment methods and\
    \ credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br\
    \ /><br /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Front Desk Configuration API
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /fof/config/v1
tags:
- description: "The Accounts Receivables Config module offers the capability of creating,\
    \ managing, and retrieving of Accounts Receivables configuration."
  name: AccountsReceivablesConfig
- description: "Cashiering configurations affect the control and management of financial\
    \ transactions at your property. You can configure cashiering components for articles\
    \ for sale, cancellation handling, deposits, folios, settlements, exchange rates,\
    \ payment methods and so on."
  name: CashieringConfig
- description: The Credit Card Internal Service contains operations used internally
    by OPERA Cloud.
  name: CreditCard
- description: "These Commission APIs allow you to get, update, and remove commissions\
    \ on an Account Receivable (AR) profile in OPERA Cloud."
  name: CommissionConfig
- description: "The EndOfDay Configuration module offers the capability of creating,\
    \ managing, and retrieving a properties End of Day configuration."
  name: EndOfDayConfig
- description: These APIs will allow you to configure front office related configuration
    related to Administration.
  name: ChainConfig
- description: These APIs will allow you to configure front office related configuration
    related to Administration.
  name: HotelConfig
paths:
  /accountTypes:
    delete:
      description: Operation to remove account types. <p><strong>OperationId:</strong>deleteARAccountTypes</p>
      operationId: deleteARAccountTypes
      parameters:
      - description: Property associated with account type
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account receivable account type
        explode: true
        in: query
        name: accountTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove AR Account types.
      tags:
      - AccountsReceivablesConfig
    post:
      description: Operation to create account types. <p><strong>OperationId:</strong>postARAccountTypes</p>
      operationId: postARAccountTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arAccountTypes'
        description: Request object to create account receivables account types
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AR Account Types.
      tags:
      - AccountsReceivablesConfig
      x-codegen-request-body-name: arAccountTypes
    put:
      description: Operation to change account types. <p><strong>OperationId:</strong>putARAccountTypes</p>
      operationId: putARAccountTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arAccountTypes'
        description: Request object for changing account types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to modify AR Account Types.
      tags:
      - AccountsReceivablesConfig
      x-codegen-request-body-name: arAccountTypes
  /articles:
    delete:
      description: Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>
      operationId: deleteArticles
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code to which the article belongs.
        explode: true
        in: query
        name: articleHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        example:
        - "false"
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: universalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete Articles.
      tags:
      - CashieringConfig
    get:
      description: "Use this API to return articles for one or multiple properties\
        \ based on search criteria such as hotelIds, transactionCodes, articleCodes,\
        \ etc. One transaction code can sometimes serve as an umbrella for multiple\
        \ articles, which can be posted using that transaction code.  For example,\
        \ a single mini bar food transaction code might cover potato chips, crackers,\
        \ peanuts, pretzels, and so on.<p><strong>OperationId:</strong>getArticles</p>"
      operationId: getArticles
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: articleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Indicator that tells whether to include inactive articles in
          search results.
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/articlesInfo'
          description: Response for fetching articles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Articles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get articles
      tags:
      - CashieringConfig
    post:
      description: Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>
      operationId: postArticles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/articles'
        description: Request to create articles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Articles.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: articles
    put:
      description: Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>
      operationId: putArticles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/articles'
        description: Request to change articles.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change Articles.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: articles
  /authorizationConfigRule:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>'
      operationId: deleteAuthorizationConfigRule
      parameters:
      - description: Property associated with authorization rule
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Authorization rule Room type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roomClassHotelId
        schema:
          type: string
      - in: query
        name: roomClassCode
        schema:
          type: string
      - in: query
        name: sourceCodeHotelId
        schema:
          type: string
      - in: query
        name: sourceCode
        schema:
          type: string
      - description: Rate category Code.
        in: query
        name: rateCategory
        schema:
          type: string
      - description: Rate code associated to this rule.
        explode: true
        in: query
        name: rateCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Guarantee code associated to this rule.
        explode: true
        in: query
        name: guaranteeCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AuthorizationConfigRule.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>'
      operationId: postAuthorizationConfigRule
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/authorizationConfigRules'
        description: Request object to create new authorization rule for given hotel
          code.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AuthorizationConfigRule.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizationConfigRules
    put:
      description: ' <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>'
      operationId: putAuthorizationConfigRule
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/authorizationConfigRules'
        description: Request object to change authorization rule.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AuthorizationConfigRule.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizationConfigRules
  /authorizationConfigRules:
    get:
      description: ' <p><strong>OperationId:</strong>getAuthorizationConfigRules</p>'
      operationId: getAuthorizationConfigRules
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizationConfigRulesInfo'
          description: Response object for FetchAuthorizationConfigRules.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizationConfigRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AuthorizationConfigRules.
      tags:
      - CashieringConfig
  /authorizationRule:
    get:
      description: ' <p><strong>OperationId:</strong>getAuthorizationRule</p>'
      operationId: getAuthorizationRule
      parameters:
      - description: The hotel code to retrieve authorization rules for.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: The guarantee code to retrieve authorization rules for.
        in: query
        name: guaranteeCode
        schema:
          type: string
      - description: The rate code to retrieve authorization rules for.
        in: query
        name: rateCode
        schema:
          type: string
      - description: The room type to retrieve authorization rules for.
        in: query
        name: roomType
        schema:
          type: string
      - description: The source code to retrieve authorization rules for.
        in: query
        name: sourceCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizationRule'
          description: The result element containing the authorization rule matching
            the requested criteria.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizationRule not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AuthorizationRule.
      tags:
      - CreditCard
  /authorizerGroups:
    delete:
      description: Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>
      operationId: deleteAuthorizerGroups
      parameters:
      - description: Configuration code.
        in: query
        name: authorizerGroup
        schema:
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AuthorizerGroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>
      operationId: getAuthorizerGroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: authorizerGroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizerGroups'
          description: Response object for fetching Authorizer Groups.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizerGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AuthorizerGroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>
      operationId: postAuthorizerGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/authorizerGroups'
        description: Request object for creating new Authorizer Group Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AuthorizerGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizerGroups
    put:
      description: Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>
      operationId: putAuthorizerGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/authorizerGroupsToChange'
        description: Request object for changing existing Authorizer Group Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AuthorizerGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: authorizerGroupsToChange
  /autoFolioSettlementTypes:
    get:
      description: Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>
      operationId: getAutoFolioSettlementTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/autoFolioSettlementTypesDetails'
          description: Response object for fetching Auto Folio Settlement Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AutoFolioSettlementTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Auto Folio Settlement Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>
      operationId: postAutoFolioSettlementTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/autoFolioSettlementTypesCriteria'
        description: Request object for creating Auto Folio Settlement Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Auto Folio Settlement Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: autoFolioSettlementTypesCriteria
  /autoFolioSettlementTypes/{code}:
    delete:
      description: Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>
      operationId: deleteAutoFolioSettlementTypes
      parameters:
      - description: Unique ID of Auto Folio Settlement Types.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Auto Folio Settlement Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>
      operationId: putAutoFolioSettlementTypes
      parameters:
      - description: Unique ID of Auto Folio Settlement Types.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/autoFolioSettlementTypesToBeChanged'
        description: Request object for changing Auto Folio Settlement Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Auto Folio Settlement Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: autoFolioSettlementTypesToBeChanged
  /budgetForecast:
    get:
      description: Operation to fetch Budget Forecast information. <p><strong>OperationId:</strong>getBudgetForecast</p>
      operationId: getBudgetForecast
      parameters:
      - description: Opera Hotel code for the Fetch Revenue information.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Year of revenue to be fetched.
        in: query
        name: year
        schema:
          type: string
      - description: Flag to indicate if nights information has to be included.
        in: query
        name: marketSegmentNights
        schema:
          type: boolean
      - description: Flag to indicate if revenue information has to be included.
        in: query
        name: marketSegmentRevenue
        schema:
          type: boolean
      - description: Flag to include ABVariance revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentABVariance
        schema:
          type: boolean
      - description: Flag to include AFVariance revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentAFVariance
        schema:
          type: boolean
      - description: Flag to include Actual revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentActual
        schema:
          type: boolean
      - description: Flag to include Budget revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentBudget
        schema:
          type: boolean
      - description: Flag to include FBVariance revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentFBVariance
        schema:
          type: boolean
      - description: Flag to include Forecast revenue/nights information.
        example: "false"
        in: query
        name: marketSegmentForecast
        schema:
          type: boolean
      - explode: true
        in: query
        name: marketSegmentMarketCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if nights information has to be included.
        in: query
        name: rateSegmentNights
        schema:
          type: boolean
      - description: Flag to indicate if revenue information has to be included.
        in: query
        name: rateSegmentRevenue
        schema:
          type: boolean
      - description: Flag to include ABVariance revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentABVariance
        schema:
          type: boolean
      - description: Flag to include AFVariance revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentAFVariance
        schema:
          type: boolean
      - description: Flag to include Actual revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentActual
        schema:
          type: boolean
      - description: Flag to include Budget revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentBudget
        schema:
          type: boolean
      - description: Flag to include FBVariance revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentFBVariance
        schema:
          type: boolean
      - description: Flag to include Forecast revenue/nights information.
        example: "false"
        in: query
        name: rateSegmentForecast
        schema:
          type: boolean
      - explode: true
        in: query
        name: rateSegmentRateCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if Value information has to be fetched.
        in: query
        name: customSegmentCustomValue
        schema:
          type: boolean
      - description: Flag to include ABVariance revenue/nights information.
        example: "false"
        in: query
        name: customSegmentABVariance
        schema:
          type: boolean
      - description: Flag to include AFVariance revenue/nights information.
        example: "false"
        in: query
        name: customSegmentAFVariance
        schema:
          type: boolean
      - description: Flag to include Actual revenue/nights information.
        example: "false"
        in: query
        name: customSegmentActual
        schema:
          type: boolean
      - description: Flag to include Budget revenue/nights information.
        example: "false"
        in: query
        name: customSegmentBudget
        schema:
          type: boolean
      - description: Flag to include FBVariance revenue/nights information.
        example: "false"
        in: query
        name: customSegmentFBVariance
        schema:
          type: boolean
      - description: Flag to include Forecast revenue/nights information.
        example: "false"
        in: query
        name: customSegmentForecast
        schema:
          type: boolean
      - explode: true
        in: query
        name: customSegmentCustomCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if revenue information has to be fetched.
        in: query
        name: transactionSegmentRevenue
        schema:
          type: boolean
      - description: Flag to include ABVariance revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentABVariance
        schema:
          type: boolean
      - description: Flag to include AFVariance revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentAFVariance
        schema:
          type: boolean
      - description: Flag to include Actual revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentActual
        schema:
          type: boolean
      - description: Flag to include Budget revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentBudget
        schema:
          type: boolean
      - description: Flag to include FBVariance revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentFBVariance
        schema:
          type: boolean
      - description: Flag to include Forecast revenue/nights information.
        example: "false"
        in: query
        name: transactionSegmentForecast
        schema:
          type: boolean
      - explode: true
        in: query
        name: transactionSegmentTransactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code group of segment code.
        in: query
        name: transactionSegmentTransactionCodeGrp
        schema:
          type: string
      - description: Flag to indicate if Covers information has to be included.
        in: query
        name: cateringSegmentCovers
        schema:
          type: boolean
      - description: Flag to indicate if revenue information has to be included.
        in: query
        name: cateringSegmentRevenue
        schema:
          type: boolean
      - description: Flag to include ABVariance revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentABVariance
        schema:
          type: boolean
      - description: Flag to include AFVariance revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentAFVariance
        schema:
          type: boolean
      - description: Flag to include Actual revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentActual
        schema:
          type: boolean
      - description: Flag to include Budget revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentBudget
        schema:
          type: boolean
      - description: Flag to include FBVariance revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentFBVariance
        schema:
          type: boolean
      - description: Flag to include Forecast revenue/nights information.
        example: "false"
        in: query
        name: cateringSegmentForecast
        schema:
          type: boolean
      - description: Catering code group of segment code.
        in: query
        name: cateringSegmentCateringCodeGrp
        schema:
          type: string
      - explode: true
        in: query
        name: cateringSegmentCateringCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/budgetForecastInformation'
          description: Response for Budget forecast information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BudForecast not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch BudgetForecast.
      tags:
      - CashieringConfig
    put:
      description: Operation to Delete Budget Forecast information. <p><strong>OperationId:</strong>deleteBudgetForecast</p>
      operationId: deleteBudgetForecast
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/budgetForecastToDelete'
        description: Request to load the Budget or Forecast information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete BudgetForecast.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: budgetForecastToDelete
  /budgetForecast/set:
    put:
      description: Operation to add/update Budget Forecast information. <p><strong>OperationId:</strong>setBudgetForecast</p>
      operationId: setBudgetForecast
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/budgetForecastInformationBase'
        description: Request to load the Budget or Forecast information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set BudgetForecast.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: budgetForecastInformationBase
  /cardReaderDelimiters:
    get:
      description: ' <p><strong>OperationId:</strong>getCardReaderDelimiters</p>'
      operationId: getCardReaderDelimiters
      parameters:
      - example: "120"
        in: query
        name: deviceID
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cardReaderDelimiters'
          description: Response for reading the configured device delimiters.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CardReaderDelimiters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CardReaderDelimiters.
      tags:
      - CreditCard
  /cashierDetails/cashiers:
    get:
      description: "Use this API to return Cashier information based on search criteria\
        \ such as cashierIDs, limit, name. <p><strong>OperationId:</strong>getCashiers</p>"
      operationId: getCashiers
      parameters:
      - description: Numberic code for cashier ID.
        example:
        - "54"
        explode: true
        in: query
        name: cashierIDs
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Partial name of a cashier.
        in: query
        name: name
        schema:
          type: string
      - description: Indicator that tells whether to include inactive cashiers in
          search results.
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Name of the application user associated with the cashier id
        in: query
        name: appUser
        schema:
          maxLength: 60
          minLength: 0
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashiersDetails'
          description: Response object for fetching information regarding Cashiers.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Cashiers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get cashiers
      tags:
      - CashieringConfig
  /cashierShifts/dropLocations:
    get:
      description: Use this API to get Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getTemplateCashierShiftDropLocations</p>
      operationId: getTemplateCashierShiftDropLocations
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateCashierShiftDropLocationsDetails'
          description: Response object for fetching Template Cashier Shift Drop Locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateCashierShiftDropLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Template Cashier Shift Drop Locations
      tags:
      - ChainConfig
    post:
      description: Use this API to create Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postTemplateCashierShiftDropLocations</p>
      operationId: postTemplateCashierShiftDropLocations
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCashierShiftDropLocationsCriteria'
        description: Request object for creating Template Cashier Shift Drop Locations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Template Cashier Shift Drop Locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: templateCashierShiftDropLocationsCriteria
  /cashierShifts/dropLocations/{dropLocationId}:
    delete:
      description: Use this API to delete Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeTemplateCashierShiftDropLocations</p>
      operationId: removeTemplateCashierShiftDropLocations
      parameters:
      - description: Unique ID of drop location.
        in: path
        name: dropLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Template Cashier Shift Drop Locations
      tags:
      - ChainConfig
    put:
      description: Use this API to update Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeTemplateCashierShiftDropLocations</p>
      operationId: changeTemplateCashierShiftDropLocations
      parameters:
      - description: Unique ID of drop location.
        in: path
        name: dropLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCashierShiftDropLocationsToBeChanged'
        description: Request object for changing Template Cashier Shift Drop Locations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Template Cashier Shift Drop Locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: templateCashierShiftDropLocationsToBeChanged
  /cashiers:
    post:
      description: Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>
      operationId: postCashiers
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cashiers'
        description: Request object for creating cashiers.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Cashiers.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: cashiers
    put:
      description: This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>
      operationId: putCashiers
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cashiers'
        description: Request objects for modifying cashiers
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change CashiersDetails.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: cashiers
  /cashiers/nextAvailable:
    get:
      description: The operation returns a next available Cashier Number to be used
        while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>
      operationId: getAvailableCashierNumber
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierNumber'
          description: Response object that returns next available cashier number.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AvailableCashierNumber not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AvailableCashierNumber.
      tags:
      - CashieringConfig
  /collectingAgentTaxes:
    delete:
      description: Operation to remove Collecting Agent Taxes. <p><strong>OperationId:</strong>deleteCollectingAgentTaxes</p>
      operationId: deleteCollectingAgentTaxes
      parameters:
      - description: It represents Hotel code
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Primary Key Sequence.
        explode: true
        in: query
        name: taxCode
        schema:
          items:
            maximum: 5
            minimum: 1
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: taxTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete CollectingAgentTaxes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Collecting Agent Taxes. <p><strong>OperationId:</strong>getCollectingAgentTaxes</p>
      operationId: getCollectingAgentTaxes
      parameters:
      - description: It represents Hotel Code
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: taxCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/collectingAgentTaxes'
          description: Response object for fetch Collecting Agent Taxes request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CollectingAgentTaxes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CollectingAgentTaxes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Collecting Agent Taxes. <p><strong>OperationId:</strong>postCollectingAgentTaxes</p>
      operationId: postCollectingAgentTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/collectingAgentTaxes'
        description: Request object to create Collecting Agent Taxes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create CollectingAgentTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: collectingAgentTaxes
    put:
      description: Operation to change Collecting Agent Taxes. <p><strong>OperationId:</strong>putCollectingAgentTaxes</p>
      operationId: putCollectingAgentTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/collectingAgentTaxes'
        description: Request object to change Collecting Agent Taxes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change CollectingAgentTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: collectingAgentTaxes
  /commissionCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteCommissionCodes</p>'
      operationId: deleteCommissionCodes
      parameters:
      - description: Property of the commission code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Commission code for which details are deleted.
        explode: true
        in: query
        name: commissionCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove commission codes.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionCodes</p>'
      operationId: getCommissionCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: commissionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionCodesSummary'
          description: Response object for fetching commission codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission codes.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postCommissionCodes</p>'
      operationId: postCommissionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/commissionCodes'
        description: Request object to create new commission codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create commission codes.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: commissionCodes
    put:
      description: ' <p><strong>OperationId:</strong>putCommissionCodes</p>'
      operationId: putCommissionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/commissionCodes'
        description: Request object to update commission codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change commission codes.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: commissionCodes
  /compAuthorizers/set:
    put:
      description: Operation to Set Comp Authorizer. <p><strong>OperationId:</strong>setCompAuthorizer</p>
      operationId: setCompAuthorizer
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/compAuthorizer'
        description: Retrieve a summary of transactions for a guest or a set of guests.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set CompAuthorizer.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compAuthorizer
  /compTypes:
    post:
      description: Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>
      operationId: postCompTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/compTypesCriteria'
        description: Request object for creating CompTypes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Create Comp Types
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compTypesCriteria
    put:
      description: Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>
      operationId: changeCompTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/compTypesToBeChanged'
        description: Request object for changing Comp Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compTypesStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Change Comp Types.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compTypesToBeChanged
  /compTypes/codes/{compTypesCode}:
    delete:
      description: Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>
      operationId: removeCompTypes
      parameters:
      - description: Comp Types Code to be deleted.
        in: path
        name: compTypesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Remove Comp Types.
      tags:
      - CashieringConfig
  /configBankAccounts:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>'
      operationId: deleteConfigBankAccounts
      parameters:
      - description: Property of the bank account.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bank account ID.
        explode: true
        in: query
        name: bankAccountID
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove config bank accounts.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getConfigBankAccounts</p>'
      operationId: getConfigBankAccounts
      parameters:
      - explode: true
        in: query
        name: hotels
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: bankCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bankAccountsInfo'
          description: Response for fetching Bank Accounts
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConfigBankAccounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch config bank accounts.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postConfigBankAccounts</p>'
      operationId: postConfigBankAccounts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bankAccounts'
        description: Request object to create Bank Accounts
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create config bank accounts.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: bankAccounts
    put:
      description: ' <p><strong>OperationId:</strong>putConfigBankAccounts</p>'
      operationId: putConfigBankAccounts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bankAccounts'
        description: Request object to edit Bank Accounts
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change config bank accounts.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: bankAccounts
  /contractBillingInstructions:
    get:
      description: Use this API to get Contract Billing Instructions. <p><strong>OperationId:</strong>getContractBillingInstructions</p>
      operationId: getContractBillingInstructions
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/contractBillingInstructionsDetails'
          description: Response object for fetching Contract Billing Instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ContractBillingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Contract Billing Instructions
      tags:
      - ChainConfig
    post:
      description: Use this API to create Contract Billing Instructions. <p><strong>OperationId:</strong>postContractBillingInstructions</p>
      operationId: postContractBillingInstructions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/contractBillingInstructionsCriteria'
        description: Request object for creating Contract Billing Instructions.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Contract Billing Instructions
      tags:
      - ChainConfig
      x-codegen-request-body-name: contractBillingInstructionsCriteria
  /contractBillingInstructions/{contractBillingInstructionsId}:
    delete:
      description: Use this API to delete Contract Billing Instructions. <p><strong>OperationId:</strong>deleteContractBillingInstructions</p>
      operationId: deleteContractBillingInstructions
      parameters:
      - description: Unique ID of Contract Billing Instructions.
        in: path
        name: contractBillingInstructionsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Contract Billing Instructions
      tags:
      - ChainConfig
    put:
      description: Use this API to update Contract Billing Instructions. <p><strong>OperationId:</strong>putContractBillingInstructions</p>
      operationId: putContractBillingInstructions
      parameters:
      - description: Unique ID of Contract Billing Instructions.
        in: path
        name: contractBillingInstructionsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/contractBillingInstructionsToBeChanged'
        description: Request object for changing Contract Billing Instructions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Contract Billing Instructions
      tags:
      - ChainConfig
      x-codegen-request-body-name: contractBillingInstructionsToBeChanged
  /creditCardInfo:
    get:
      description: Use this API to return the token inclusive cardType and expirationDate
        for the credit card used in a specific reservation. Oracle does not provide
        any credit card numbers. Include the hotelId and the cardId in the parameters.
        The cardId can be returned with the getReservation operation. <p><strong>OperationId:</strong>getCreditCardInfo</p>
      operationId: getCreditCardInfo
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: cardIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: cardIdType
        schema:
          type: string
      - description: Currently supported transaction type categories used for credit
          card authorization.
        in: query
        name: accessTransactionType
        schema:
          enum:
          - Additional
          - ArPayment
          - Batch
          - BatchDeposit
          - BatchDepositRefund
          - Billing
          - CheckIn
          - CheckInManualAuth
          - Deposit
          - EndOfDay
          - EndOfDayDeposit
          - Manual
          - Other
          - PasserBy
          - PostIt
          - PreCheckIn
          - Refund
          - Scheduled
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditCardInfo'
          description: Respose for the fetch credit card information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CreditCardInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get credit card token information
      tags:
      - CreditCard
  /creditCardTypes/validate:
    get:
      description: ' <p><strong>OperationId:</strong>validateCreditCardType</p>'
      operationId: validateCreditCardType
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationID
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: reservationIDIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIDIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIDType
        schema:
          type: string
      - in: query
        name: paymentMethodDescription
        schema:
          type: string
      - in: query
        name: paymentMethodFolioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardNumberType
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: cardIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: cardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeeded
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: authorizationRuleCode
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: authorizationRuleAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: authorizationRuleCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: authorizationRulePercent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: emailFolioInfoId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: emailFolioInfoIDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: emailFolioInfoIDContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: emailFolioInfoType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: emailFolioInfoCreateDateTime
        schema:
          format: date-time
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: emailFolioInfoCreatorID
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailFolioInfoEmailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFolioInfoEmailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: emailFolioInfoLastModifierID
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: emailFolioInfoLastModifyDateTime
        schema:
          format: date-time
          type: string
      - description: Display Order sequence.
        in: query
        name: emailFolioInfoOrderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: emailFolioInfoPrimaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: emailFolioInfoPurgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailEmailFolioInfoType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: emailFolioInfoTypeDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditCardTypeValidationStatus'
          description: The result element from validating a credit card number against
            its vendor's format requirements.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: validateCreditCardType not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to validate CreditCardType.
      tags:
      - CreditCard
  /creditCards/decode:
    get:
      description: ' <p><strong>OperationId:</strong>decodeCard</p>'
      operationId: decodeCard
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: "Used for Character Strings, length 0 to 200."
        in: query
        name: trackData
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/decodedCard'
          description: Respose for the decoded card information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: decodeCard not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Decode Card.
      tags:
      - CreditCard
  /creditCards/readerDevices:
    get:
      description: ' <p><strong>OperationId:</strong>getCreditCardReaderDevices</p>'
      operationId: getCreditCardReaderDevices
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditCardReaderDevices'
          description: Response for fetching list of supported credit card reader
            devices.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CreditCardReaderDevices not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CreditCardReaderDevices.
      tags:
      - CreditCard
  /creditCards/vaultedId:
    post:
      description: ' <p><strong>OperationId:</strong>getCreditCardUniqueId</p>'
      operationId: getCreditCardUniqueId
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/creditCardUniqueIdRQ'
        description: Request for fetching credit card unique id.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditCardUniqueId'
          description: Response for fetching credit card unique id.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CreditCardUniqueId.
      tags:
      - CreditCard
      x-codegen-request-body-name: creditCardUniqueIdRQ
  /currencyExchangeServiceTaxes:
    delete:
      description: Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>
      operationId: deleteCurrencyExchangeServiceTaxes
      parameters:
      - description: Property associated with currency exchange service tax
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Currency exchange service tax code
        explode: true
        in: query
        name: currencyExchangeServiceTaxCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>
      operationId: getCurrencyExchangeServiceTaxes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/currencyExchangeServiceTaxes'
          description: Response for fetch currency exchange service taxes
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CurrencyExchangeServiceTaxes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>
      operationId: postCurrencyExchangeServiceTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/currencyExchangeServiceTaxes'
        description: Request object for creating new currency exchange service taxes
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create CurrencyExchangeServiceTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: currencyExchangeServiceTaxes
    put:
      description: Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>
      operationId: putCurrencyExchangeServiceTaxes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/currencyExchangeServiceTaxes'
        description: Request object for changing currency exchange service taxes
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change ExchangeServiceTaxes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: currencyExchangeServiceTaxes
  /customCharges/exemptions:
    get:
      description: You can use this API to fetch Custom Charge Exemptions Config.
        <p><strong>OperationId:</strong>getCustomChargeExemptions</p>
      operationId: getCustomChargeExemptions
      parameters:
      - explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: configurationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Indicator that tells whether to include inactive articles in
          search results.
        in: query
        name: includeInactive
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customChargeExemptionsConfig'
          description: Response object for fetching Custom Charge Exemptions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomChargeExemptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
  /customTaxTypes:
    get:
      description: Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>
      operationId: getCustomTaxTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customTaxTypesDetails'
          description: Response object for fetching Custom Tax Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomTaxTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Custom Tax Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>
      operationId: postCustomTaxTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customTaxTypesCriteria'
        description: Request object for creating Custom Tax Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Custom Tax Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: customTaxTypesCriteria
  /customTaxTypes/{taxTypeCode}:
    delete:
      description: Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>
      operationId: removeCustomTaxTypes
      parameters:
      - description: Unique Code of Tax Types.
        in: path
        name: taxTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Custom Tax Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>
      operationId: changeCustomTaxTypes
      parameters:
      - description: Unique Code of Tax Types.
        in: path
        name: taxTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customTaxTypesToBeChanged'
        description: Request object for changing Custom Tax Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Custom Tax Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: customTaxTypesToBeChanged
  /dailyPlanCodes:
    get:
      description: ' <p><strong>OperationId:</strong>getDailyPlanCodes</p>'
      operationId: getDailyPlanCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/dailyPlanCodes'
          description: Response object for fetching daily plan codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DailyPlanCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch DailyPlanCodes.
      tags:
      - CashieringConfig
    put:
      description: ' <p><strong>OperationId:</strong>putDailyPlanCodes</p>'
      operationId: putDailyPlanCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/dailyPlanCodes'
        description: Request object for changing daily plan codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change DailyPlanCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: dailyPlanCodes
  /defaultPaymentMethodRules:
    get:
      description: Operation to fetch payment method rule. <p><strong>OperationId:</strong>getDefaultPaymentMethodRule</p>
      operationId: getDefaultPaymentMethodRule
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: paymentMethods
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Simple Type for payment method fetch instruction.
        example:
        - CardRanges
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - CardRanges
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/defaultPaymentMethodRule'
          description: Response for fetching default payment method rule.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DefaultPaymentMethodRule not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch DefaultPaymentMethodRule.
      tags:
      - CashieringConfig
  /exchangeRates:
    get:
      description: "You can use this API to retrieve exchange rate information for\
        \ a hotel. You can search by hotel, Currency Code and exchange types. Results\
        \ can include past, current and future exchange rate information for a currency.\
        \ <p><strong>OperationId:</strong>getExchangeRatesInfo</p>"
      operationId: getExchangeRatesInfo
      parameters:
      - description: Property where exchange rate is set.
        in: query
        name: hotelId
        schema:
          type: string
      - description: E-certificate conversion.
        explode: true
        in: query
        name: exchangeTypes
        schema:
          items:
            enum:
            - Cash
            - Settlement
            - Posting
            - Check
            - TACommission
            - Membership
            - Certificate
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exchangeRatesDetails'
          description: Collection of exchange rates and their information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExchangeRatesInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch ExchangeRates.
      tags:
      - CashieringConfig
    put:
      description: Operation to Delete Exchange Rates. <p><strong>OperationId:</strong>deleteExchangeRates</p>
      operationId: deleteExchangeRates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exchangeRates'
        description: Exchange Rates to be Set.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete ExchangeRates.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: exchangeRates
  /exchangeRates/set:
    put:
      description: The operation sets exchange rates. <p><strong>OperationId:</strong>setExchangeRates</p>
      operationId: setExchangeRates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exchangeRates'
        description: Exchange Rates to be Set.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set ExchangeRates.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: exchangeRates
  /expenseArrangementCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>'
      operationId: deleteExpenseArrangementCodes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete ExpenseArrangementCodes.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>'
      operationId: getExpenseArrangementCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/expenseArrangementCodes'
          description: Response object for fetching expense arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExpenseArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch ExpenseArrangementCodes.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>'
      operationId: postExpenseArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/expenseArrangementCodes'
        description: Request object for creating new expense arrangement codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create ExpenseArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: expenseArrangementCodes
    put:
      description: ' <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>'
      operationId: putExpenseArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/expenseArrangementCodes'
        description: Request object for changing expense arrangement codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change ExpenseArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: expenseArrangementCodes
  /expenseArrangementCodes/copy:
    put:
      description: ' <p><strong>OperationId:</strong>copyExpenseArrangementCodes</p>'
      operationId: copyExpenseArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/expenseArrangementCodesCopy'
        description: List of the expense arrangement codes to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy ExpenseArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: expenseArrangementCodesCopy
  /fiscalFolioParameters:
    delete:
      description: Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>
      operationId: deleteFiscalFolioParameters
      parameters:
      - description: Code of the Hotel.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fiscal folio parameter associated with Partner.
        explode: true
        in: query
        name: partner
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Code of the Fiscal Folio Parameter.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FiscalFolioParameters.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>
      operationId: getFiscalFolioParameters
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Indicates whether the Fiscal Folio Parameter is user created
          or from seed data. Set this true to see the standard Fiscal Folio Parameters
          that are seeded along with the manually created Fiscal Folio Parameters.
        example: "false"
        in: query
        name: internal
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalFolioParameters'
          description: Response object for fetching Fiscal Folio Parameter configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalFolioParameters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FiscalFolioParameters.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>
      operationId: putFiscalFolioParameters
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalFolioParameters'
        description: Request object for changing existing Fiscal Folio Parameter Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FiscalFolioParameters.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalFolioParameters
  /fiscalGuestTypes:
    get:
      description: Use this API to get Fiscal Guest Types. <p><strong>OperationId:</strong>getFiscalGuestTypes</p>
      operationId: getFiscalGuestTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalGuestTypesDetails'
          description: Response object for fetching Fiscal Guest Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalGuestTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fiscal Guest Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Fiscal Guest Types. <p><strong>OperationId:</strong>postFiscalGuestTypes</p>
      operationId: postFiscalGuestTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalGuestTypesCriteria'
        description: Request object for creating Fiscal Guest Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fiscal Guest Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: fiscalGuestTypesCriteria
  /fiscalGuestTypes/{fiscalGuestTypeCode}:
    delete:
      description: Use this API to delete Fiscal Guest Types. <p><strong>OperationId:</strong>removeFiscalGuestTypes</p>
      operationId: removeFiscalGuestTypes
      parameters:
      - description: Unique Code of Fiscal Guest Types.
        in: path
        name: fiscalGuestTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Fiscal Guest Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Fiscal Guest Types. <p><strong>OperationId:</strong>changeFiscalGuestTypes</p>
      operationId: changeFiscalGuestTypes
      parameters:
      - description: Unique Code of Fiscal Guest Types.
        in: path
        name: fiscalGuestTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalGuestTypesToBeChanged'
        description: Request object for changing Fiscal Guest Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Fiscal Guest Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: fiscalGuestTypesToBeChanged
  /fiscalPeriods:
    delete:
      description: Operation to remove Fiscal Periods. <p><strong>OperationId:</strong>deleteFiscalPeriods</p>
      operationId: deleteFiscalPeriods
      parameters:
      - description: Resort for which the Period is defined.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Id of the Year.
        explode: true
        in: query
        name: yearId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Start Date of the Period
        explode: true
        in: query
        name: startDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FiscalPeriods.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Fiscal Periods. <p><strong>OperationId:</strong>getFiscalPeriods</p>
      operationId: getFiscalPeriods
      parameters:
      - description: Resort for which the Period is defined.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Year to search for.
        in: query
        name: year
        schema:
          type: number
      - description: Defined Values for Fiscal Year Type.
        in: query
        name: periodType
        schema:
          enum:
          - Calendar
          - Fiscal
          type: string
      - description: Period to search.
        in: query
        name: period
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalPeriodsInfo'
          description: Response for fetching Fiscal Periods
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalPeriods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FiscalPeriods.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Fiscal Periods. <p><strong>OperationId:</strong>postFiscalPeriods</p>
      operationId: postFiscalPeriods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalPeriods'
        description: Request object to create Fiscal Periods
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create FiscalPeriods.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalPeriods
    put:
      description: Operation to change Fiscal Periods. <p><strong>OperationId:</strong>putFiscalPeriods</p>
      operationId: putFiscalPeriods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalPeriodsEdit'
        description: Request object to edit Fiscal Periods
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FiscalPeriods.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalPeriodsEdit
  /fiscalRegions:
    get:
      description: Use this API to get Fiscal Regions. <p><strong>OperationId:</strong>getFiscalRegions</p>
      operationId: getFiscalRegions
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalRegionsDetails'
          description: Response object for fetching Fiscal Regions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalRegions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fiscal Regions
      tags:
      - ChainConfig
    post:
      description: Use this API to create Fiscal Regions. <p><strong>OperationId:</strong>postFiscalRegions</p>
      operationId: postFiscalRegions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalRegionsCriteria'
        description: Request object for creating Fiscal Regions.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fiscal Regions
      tags:
      - ChainConfig
      x-codegen-request-body-name: fiscalRegionsCriteria
  /fiscalRegions/{regionCode}:
    delete:
      description: Use this API to delete Fiscal Regions. <p><strong>OperationId:</strong>removeFiscalRegions</p>
      operationId: removeFiscalRegions
      parameters:
      - description: Unique Code of Region.
        in: path
        name: regionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Fiscal Regions
      tags:
      - ChainConfig
    put:
      description: Use this API to update Fiscal Regions. <p><strong>OperationId:</strong>changeFiscalRegions</p>
      operationId: changeFiscalRegions
      parameters:
      - description: Unique Code of Region.
        in: path
        name: regionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalRegionsToBeChanged'
        description: Request object for changing Fiscal Regions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Fiscal Regions
      tags:
      - ChainConfig
      x-codegen-request-body-name: fiscalRegionsToBeChanged
  /fiscalYears:
    delete:
      description: Operation to remove Fiscal Years. <p><strong>OperationId:</strong>deleteFiscalYears</p>
      operationId: deleteFiscalYears
      parameters:
      - description: Resort for which the Year is defined.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique id of the Year.
        explode: true
        in: query
        name: yearId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FiscalYears.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Fiscal Years. <p><strong>OperationId:</strong>getFiscalYears</p>
      operationId: getFiscalYears
      parameters:
      - description: Search all years for this Resort.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Year to Search.
        in: query
        name: year
        schema:
          type: number
      - description: Defined Values for Fiscal Year Type.
        in: query
        name: yearType
        schema:
          enum:
          - Calendar
          - Fiscal
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalYears'
          description: Response for fetching Fiscal Years
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalYears not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FiscalYears.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Fiscal Years. <p><strong>OperationId:</strong>postFiscalYears</p>
      operationId: postFiscalYears
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalYears'
        description: Request object to create Fiscal Years
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create FiscalYears.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalYears
    put:
      description: Operation to change Fiscal Years. <p><strong>OperationId:</strong>putFiscalYears</p>
      operationId: putFiscalYears
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalYears'
        description: Request object to edit Fiscal Years
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FiscalYears.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalYears
  /flaggedReasons:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteARFlaggedReasons</p>'
      operationId: deleteARFlaggedReasons
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove AR flagged reasons.
      tags:
      - AccountsReceivablesConfig
    get:
      description: ' <p><strong>OperationId:</strong>getARFlaggedReasons</p>'
      operationId: getARFlaggedReasons
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: reasonCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: reasonWildCard
        schema:
          type: string
      - description: Description text set to the search criteria
        in: query
        name: description
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: propertyCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: propertyWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arFlaggedReasons'
          description: Response for fetching Flagged Reasons.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARFlaggedReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AR flagged reasons.
      tags:
      - AccountsReceivablesConfig
    post:
      description: ' <p><strong>OperationId:</strong>postARFlaggedReasons</p>'
      operationId: postARFlaggedReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arFlaggedReasons'
        description: Request object to create Flagged Reason
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AR flagged reasons.
      tags:
      - AccountsReceivablesConfig
      x-codegen-request-body-name: arFlaggedReasons
    put:
      description: ' <p><strong>OperationId:</strong>putARFlaggedReasons</p>'
      operationId: putARFlaggedReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arFlaggedReasons'
        description: Request object to edit Flagged Reasons.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AR flagged reasons.
      tags:
      - AccountsReceivablesConfig
      x-codegen-request-body-name: arFlaggedReasons
  /folioArrangementCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteFolioArrangementCodes</p>'
      operationId: deleteFolioArrangementCodes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FolioArrangementCodes.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getFolioArrangementCodes</p>'
      operationId: getFolioArrangementCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioArrangementCodes'
          description: Response object for fetching folio arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FolioArrangementCodes.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postFolioArrangementCodes</p>'
      operationId: postFolioArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioArrangementCodes'
        description: Request object for creating new folio arrangement codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create FolioArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioArrangementCodes
    put:
      description: ' <p><strong>OperationId:</strong>putFolioArrangementCodes</p>'
      operationId: putFolioArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioArrangementCodes'
        description: Request object for changing folio arrangement codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FolioArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioArrangementCodes
  /folioArrangementCodes/copy:
    put:
      description: ' <p><strong>OperationId:</strong>copyFolioArrangementCodes</p>'
      operationId: copyFolioArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioArrangementCodesCopy'
        description: List of folio arrangement codes to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy FolioArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioArrangementCodesCopy
  /folioCopyLegends:
    get:
      description: Operation to fetch folio copy legends. <p><strong>OperationId:</strong>getFolioCopyLegends</p>
      operationId: getFolioCopyLegends
      parameters:
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Language code to be searched.
        in: query
        name: languageCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioCopyLegends'
          description: Response object for fetch folio copy legend
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioCopyLegends not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FolioCopyLegends.
      tags:
      - CashieringConfig
    put:
      description: Operation to change folio copy legends information <p><strong>OperationId:</strong>putFolioCopyLegends</p>
      operationId: putFolioCopyLegends
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioCopyLegend'
        description: Request object to edit description of folio copy legends
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FolioCopyLegends.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioCopyLegend
  /folioPrintQueues:
    delete:
      description: Operation to remove folio print queues. <p><strong>OperationId:</strong>deleteFolioPrintQueues</p>
      operationId: deleteFolioPrintQueues
      parameters:
      - description: Property associated with folio print queue
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Folio print queue name
        explode: true
        in: query
        name: queueName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FolioPrintQueues.
      tags:
      - CashieringConfig
    get:
      description: Operation to folio fetch print queues. <p><strong>OperationId:</strong>getFolioPrintQueues</p>
      operationId: getFolioPrintQueues
      parameters:
      - description: Property to be searched for
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Determines whether to fetch inactive records or not.
        example: "false"
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Queue name to be searched for
        in: query
        name: queueName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioPrintQueues'
          description: Response for fetch folio print queues
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioPrintQueues not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FolioPrintQueues.
      tags:
      - CashieringConfig
    post:
      description: Operation to create folio print queues. <p><strong>OperationId:</strong>postFolioPrintQueues</p>
      operationId: postFolioPrintQueues
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioPrintQueues'
        description: Request object for creating new folio print queues
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create FolioPrintQueues.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioPrintQueues
    put:
      description: Operation to change folio print queues. <p><strong>OperationId:</strong>putFolioPrintQueues</p>
      operationId: putFolioPrintQueues
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioPrintQueues'
        description: Request object for changing folio print queues
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FolioPrintQueues.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioPrintQueues
  /folioTypeLegendMappings:
    get:
      description: Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>
      operationId: getFolioTypeLegendMappingsConfig
      parameters:
      - description: Property associated with folio type legend mapping
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Legend code to which folio types attached.
        in: query
        name: legendCode
        required: true
        schema:
          type: string
      - description: Folio type to be searched.
        in: query
        name: folioType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypeLegendMappingsConfigDetails'
          description: Response object for fetch folio type legend mapping.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTypeLegendMappingsConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch folio type legend mappings config.
      tags:
      - CashieringConfig
    post:
      description: Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>
      operationId: postFolioTypeLegendMappingConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioTypeLegendMappingConfigCriteria'
        description: Request object to create folio type legend mapping information.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create folio type legend mappings config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypeLegendMappingConfigCriteria
    put:
      description: Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>
      operationId: changeFolioTypeLegendMappingConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioTypeLegendMappingConfigToBeChanged'
        description: Request object to edit folio type legend mapping information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypeLegendMappingConfigStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change folio type legend mappings config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypeLegendMappingConfigToBeChanged
  /folioTypesConfig:
    delete:
      description: Operation to remove Folio Type Names. <p><strong>OperationId:</strong>deleteFolioTypesConfig</p>
      operationId: deleteFolioTypesConfig
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete FolioTypesConfig.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Folio Type Names. <p><strong>OperationId:</strong>getFolioTypesConfig</p>
      operationId: getFolioTypesConfig
      parameters:
      - description: Folio Type Names belong to Hotels.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: folioTypeNamesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: taxTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypesConfig'
          description: Response object for fetching Folio Type Names.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTypesConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FolioTypesConfig.
      tags:
      - CashieringConfig
    post:
      description: Operation to Create Folio Type Names. <p><strong>OperationId:</strong>postFolioTypesConfig</p>
      operationId: postFolioTypesConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioTypesConfig'
        description: Request object to create Folio Type Name.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create FolioTypesConfig.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypesConfig
    put:
      description: Operation to change Folio Type Names. <p><strong>OperationId:</strong>putFolioTypesConfig</p>
      operationId: putFolioTypesConfig
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/folioTypesConfig'
        description: Request object to change Folio Type Names.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change FolioTypesConfig.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: folioTypesConfig
  /foreignCurrencies:
    delete:
      description: Operation to remove Foreign Currencies. <p><strong>OperationId:</strong>deleteForeignCurrencies</p>
      operationId: deleteForeignCurrencies
      parameters:
      - explode: true
        in: query
        name: currencyCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete ForeignCurrencies.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Foreign Currencies. <p><strong>OperationId:</strong>getForeignCurrencies</p>
      operationId: getForeignCurrencies
      parameters:
      - description: Codes to be searched.
        example:
        - USD
        explode: true
        in: query
        name: currencies
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description text set to the search criteria
        in: query
        name: description
        schema:
          type: string
      - description: Inactive flag used to include/exclude inactive foreign currencies
          from the search result
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/foreignCurrencies'
          description: Response for fetching Foreign Currencies
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ForeignCurrencies not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch ForeignCurrencies.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Foreign Currencies. <p><strong>OperationId:</strong>postForeignCurrencies</p>
      operationId: postForeignCurrencies
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/foreignCurrencies'
        description: Request object to create Foreign Currencies
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create ForeignCurrencies.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: foreignCurrencies
    put:
      description: Operation to change Foreign Currencies. <p><strong>OperationId:</strong>putForeignCurrencies</p>
      operationId: putForeignCurrencies
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/foreignCurrencies'
        description: Request object to edit Foreign Currencies
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change ForeignCurrencies.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: foreignCurrencies
  /generates:
    post:
      description: "Use this API to create transaction generates for a specific property.\
        \  Generates are rules used to calculate and post additional charges, such\
        \ as service charges and taxes, when a particular sales charge transaction\
        \ code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>postTransactionGenerates</p>"
      operationId: postTransactionGenerates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionGenerates'
        description: Request to create transaction generates.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post transaction generates
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionGenerates
    put:
      description: Use this API to update transaction generates for a specific property.<p><strong>OperationId:</strong>putTransactionGenerates</p>
      operationId: putTransactionGenerates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionGenerates'
        description: Request to change transaction generates.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Put transaction generates
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionGenerates
  /globalExchangeRates:
    get:
      description: "You can use this API to retrieve global exchange rate information\
        \ for a chain. You can search by Currency Code and exchange types. Results\
        \ can include past, current and future exchange rate information for a currency.\
        \ <p><strong>OperationId:</strong>getGlobalExchangeRatesInfo</p>"
      operationId: getGlobalExchangeRatesInfo
      parameters:
      - description: E-certificate conversion.
        explode: true
        in: query
        name: exchangeTypes
        schema:
          items:
            enum:
            - Membership
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exchangeRatesDetails'
          description: Collection of global exchange rates and their information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GlobalExchangeRatesInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch GlobalExchangeRates.
      tags:
      - CashieringConfig
    put:
      description: Operation to Delete Global Exchange Rates. <p><strong>OperationId:</strong>deleteGlobalExchangeRates</p>
      operationId: deleteGlobalExchangeRates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exchangeRates'
        description: Global Exchange Rates to be Set.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete GlobalExchangeRates.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: exchangeRates
  /globalExchangeRates/set:
    put:
      description: The operation sets global exchange rates. <p><strong>OperationId:</strong>setGlobalExchangeRates</p>
      operationId: setGlobalExchangeRates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exchangeRates'
        description: Exchange Rates to be Set.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set GlobalExchangeRates.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: exchangeRates
  /groupArrangementCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteGroupArrangementCodes</p>'
      operationId: deleteGroupArrangementCodes
      parameters:
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete GroupArrangementCodes.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getGroupArrangementCodes</p>'
      operationId: getGroupArrangementCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A flag that determines whether or not to fetch associated transaction
          codes. Fetches only the arrangement codes when this flag is true.
        example: "false"
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/groupArrangementCodes'
          description: Response object for fetching group arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GroupArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create GroupArrangementCodes.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postGroupArrangementCodes</p>'
      operationId: postGroupArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/groupArrangementCodes'
        description: Request object for creating new group arrangement codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create GroupArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: groupArrangementCodes
    put:
      description: ' <p><strong>OperationId:</strong>putGroupArrangementCodes</p>'
      operationId: putGroupArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/groupArrangementCodes'
        description: Request object for changing group arrangement codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change GroupArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: groupArrangementCodes
  /groupArrangementCodes/copy:
    put:
      description: ' <p><strong>OperationId:</strong>copyGroupArrangementCodes</p>'
      operationId: copyGroupArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/groupArrangementCodesCopy'
        description: List of the group arrangement codes to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy GroupArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: groupArrangementCodesCopy
  /guiNumberRules:
    get:
      description: Operation to fetch GUI Number rules <p><strong>OperationId:</strong>getGUINumberRules</p>
      operationId: getGUINumberRules
      parameters:
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/gUINumberRulesDetails'
          description: Response object for fetch GUI number rules
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GUINumberRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch GUINumberRules.
      tags:
      - CashieringConfig
    put:
      description: Operation to change GUI Number rules <p><strong>OperationId:</strong>putGUINumberRules</p>
      operationId: putGUINumberRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/gUINumberRulesDetails'
        description: Request object to edit GUI number rules.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change GUINumberRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: gUINumberRulesDetails
  /hotelAdjustmentCodes:
    delete:
      description: Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>
      operationId: deleteAdjustmentCodes
      parameters:
      - description: Configuration code.
        in: query
        name: adjustmentCode
        schema:
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete AdjustmentCodes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>
      operationId: getAdjustmentCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: adjustmentCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/adjustmentCodes'
          description: Response object for fetching Adjustment Code configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AdjustmentCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AdjustmentCodes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>
      operationId: postAdjustmentCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/adjustmentCodes'
        description: Request object for creating new Adjustment Code Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create AdjustmentCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: adjustmentCodes
    put:
      description: Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>
      operationId: putAdjustmentCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/adjustmentCodes'
        description: Request object for changing existing Adjustment Code Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AdjustmentCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: adjustmentCodes
  /hotelAdjustmentCodes/copy:
    put:
      description: Operation to copy Adjustment Codes. <p><strong>OperationId:</strong>copyAdjustmentCodes</p>
      operationId: copyAdjustmentCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/adjustmentCodesCopy'
        description: List of the Adjustment Codes to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy AdjustmentCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: adjustmentCodesCopy
  /hotelPaymentMethods:
    get:
      description: Operation to fetch payment methods. <p><strong>OperationId:</strong>getPaymentMethods</p>
      operationId: getPaymentMethods
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: paymentMethods
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple Type for payment method fetch instruction.
        example:
        - CardRanges
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - CardRanges
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/paymentMethodsInfo'
          description: Response for fetching payment methods.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PaymentMethods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch PaymentMethods.
      tags:
      - CashieringConfig
    post:
      description: Operation to create payment methods. <p><strong>OperationId:</strong>postPaymentMethods</p>
      operationId: postPaymentMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/paymentMethods'
        description: Request to create payment methods.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create PaymentMethods.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: paymentMethods
    put:
      description: Operation to change payment methods. <p><strong>OperationId:</strong>putPaymentMethods</p>
      operationId: putPaymentMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/paymentMethods'
        description: Request to change payment methods.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change PaymentMethods.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: paymentMethods
  /hotelPaymentMethods/copy:
    put:
      description: Operation to copy payment methods. <p><strong>OperationId:</strong>copyPaymentMethods</p>
      operationId: copyPaymentMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/paymentMethodsCopy'
        description: List of payment methods to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy PaymentMethods.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: paymentMethodsCopy
  /hotelTaxTypes:
    delete:
      description: Operation to remove Tax Types. <p><strong>OperationId:</strong>deleteTaxTypes</p>
      operationId: deleteTaxTypes
      parameters:
      - description: Configuration code.
        explode: true
        in: query
        name: taxTypeCode
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TaxTypes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>
      operationId: getTaxTypes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: taxTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxTypes'
          description: Response object for fetching Tax Type configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TaxTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TaxTypes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Tax Types. <p><strong>OperationId:</strong>postTaxTypes</p>
      operationId: postTaxTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxTypes'
        description: Request object for creating new Tax Type Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TaxTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxTypes
    put:
      description: Operation to change Tax Types. <p><strong>OperationId:</strong>putTaxTypes</p>
      operationId: putTaxTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxTypes'
        description: Request object for changing existing Tax Type Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TaxTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxTypes
  /hotelTaxTypes/copy:
    put:
      description: Operation to copy Tax Types. <p><strong>OperationId:</strong>copyTaxTypes</p>
      operationId: copyTaxTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxTypesCopy'
        description: List of the Tax Types to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy TaxTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxTypesCopy
  /hotels/{hotelId}/ARAccountTypes:
    get:
      description: Operation to fetch account types. <p><strong>OperationId:</strong>getARAccountTypes</p>
      operationId: getARAccountTypes
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Account receivable account type
        in: query
        name: accountType
        schema:
          type: string
      - description: Full description of account type
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arAccountTypes'
          description: Response for fetch account types
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARAccountTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch AR account types.
      tags:
      - AccountsReceivablesConfig
  /hotels/{hotelId}/cashierShifts/dropLocations:
    get:
      description: Use this API to get Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getCashierShiftDropLocations</p>
      operationId: getCashierShiftDropLocations
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierShiftDropLocationsDetails'
          description: Response object for fetching Cashier Shift Drop Locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierShiftDropLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Shift Drop Locations
      tags:
      - ChainConfig
    post:
      description: Use this API to create Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postCashierShiftDropLocations</p>
      operationId: postCashierShiftDropLocations
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cashierShiftDropLocationsCriteria'
        description: Request object for creating Cashier Shift Drop Locations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Cashier Shift Drop Locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: cashierShiftDropLocationsCriteria
  /hotels/{hotelId}/cashierShifts/dropLocations/{dropLocationId}:
    delete:
      description: Use this API to delete Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeCashierShiftDropLocations</p>
      operationId: removeCashierShiftDropLocations
      parameters:
      - description: Unique ID of drop location.
        in: path
        name: dropLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Cashier Shift Drop Locations
      tags:
      - ChainConfig
    put:
      description: Use this API to update Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeCashierShiftDropLocations</p>
      operationId: changeCashierShiftDropLocations
      parameters:
      - description: Unique ID of drop location.
        in: path
        name: dropLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cashierShiftDropLocationsToBeChanged'
        description: Request object for changing Cashier Shift Drop Locations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Cashier Shift Drop Locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: cashierShiftDropLocationsToBeChanged
  /hotels/{hotelId}/commissionCode/{commissionCode}:
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionCode</p>'
      operationId: getCommissionCode
      parameters:
      - description: Commission Code in OPERA
        in: path
        name: commissionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionCodeDetail'
          description: Response object for fetching commission code details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionCode not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission code.
      tags:
      - CommissionConfig
  /hotels/{hotelId}/compAuthorizers:
    get:
      description: Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getCompAuthorizers</p>
      operationId: getCompAuthorizers
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Configuring this flag to be TRUE will return the details of the
          comp authorizers.
        example: "false"
        in: query
        name: includeCompAuthorizerDetails
        schema:
          type: boolean
      - description: Configuring this flag to be TRUE will return also the inactive
          authorizers.
        example: "false"
        in: query
        name: includeInactiveAuthorizers
        schema:
          type: boolean
      - description: Configuring this flag to be TRUE will return the terminated authorizers.
        example: "false"
        in: query
        name: includeTerminatedAuthorizers
        schema:
          type: boolean
      - description: Name for the authorizer.
        in: query
        name: authorizer
        schema:
          type: string
      - description: First name for the authorizer.
        in: query
        name: firstName
        schema:
          type: string
      - description: Last name for the authorizer.
        in: query
        name: lastName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compAuthorizers'
          description: Returns all information about the comp authorizers.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompAuthorizers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch CompAuthorizers.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/compBucket/redemption:
    get:
      description: You can use this API to fetch Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>getCompBucketRedemptionCodes</p>
      operationId: getCompBucketRedemptionCodes
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: redemptionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compBucketRedemptionConfigDetails'
          description: Response object for fetching Comp Bucket Redemption Codes configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompBucketRedemptionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Comp Bucket Redemption Codes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>postCompBucketRedemptionConfig</p>
      operationId: postCompBucketRedemptionConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/compBucketRedemptionConfig'
        description: Request object for creating new Comp Bucket Redemption Codes
          configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Comp Bucket Redemption Codes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compBucketRedemptionConfig
  /hotels/{hotelId}/compBucket/redemption/{redemptionCode}:
    delete:
      description: Operation to remove Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>deleteCompBucketRedemptionConfig</p>
      operationId: deleteCompBucketRedemptionConfig
      parameters:
      - description: Bucket Redemption Code
        in: path
        name: redemptionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove Comp Bucket Redemption Codes.
      tags:
      - CashieringConfig
    get:
      deprecated: true
      description: You can use this API to fetch Comp Bucket Redemption Codes.<br><p><strong><mark>This
        API is deprecated. Please use getCompBucketRedemptionCodes instead</mark></strong></p>
        <p><strong>OperationId:</strong>getCompBucketRedemptionConfig</p>
      operationId: getCompBucketRedemptionConfig
      parameters:
      - description: Bucket Redemption Code
        in: path
        name: redemptionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compBucketRedemptionConfigDetails'
          description: Response object for fetching Comp Bucket Redemption Codes configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompBucketRedemptionConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Comp Bucket Redemption Codes.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>putCompBucketRedemptionConfig</p>
      operationId: putCompBucketRedemptionConfig
      parameters:
      - description: Bucket Redemption Code
        in: path
        name: redemptionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/compBucketRedemptionConfig'
        description: Request object for changing existing Comp Bucket Redemption Codes
          configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change Comp Bucket Redemption Codes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: compBucketRedemptionConfig
  /hotels/{hotelId}/compTypes:
    get:
      description: Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>
      operationId: getCompTypes
      parameters:
      - description: Unique ID of the source hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code is used to identify the CompType.
        in: query
        name: compTypeCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compTypesDetails'
          description: Response object for fetching Comp Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to Fetch Comp Types.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/customCharges:
    get:
      description: You can use this API to fetch Custom Charge Codes. <p><strong>OperationId:</strong>getCustomChargeCodes</p>
      operationId: getCustomChargeCodes
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: configurationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customChargesConfigDetails'
          description: Response object for fetching Custom Charges.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomChargeCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Custom Charge Codes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Custom Charge Codes. <p><strong>OperationId:</strong>postCustomChargesConfig</p>
      operationId: postCustomChargesConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customChargesConfig'
        description: Request object for creating new Custom Charges.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Custom Charge Codes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customChargesConfig
  /hotels/{hotelId}/customCharges/configuration/{configurationId}:
    delete:
      description: Operation to remove Custom Charge Codes. <p><strong>OperationId:</strong>deleteCustomChargesConfig</p>
      operationId: deleteCustomChargesConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove Custom Charge Codes.
      tags:
      - CashieringConfig
    get:
      deprecated: true
      description: You can use this API to fetch Custom Charge Codes.<br><p><strong><mark>This
        API is deprecated. Please use getCustomChargeCodes instead</mark></strong></p>
        <p><strong>OperationId:</strong>getCustomChargesConfig</p>
      operationId: getCustomChargesConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customChargesConfigDetails'
          description: Response object for fetching Custom Charges.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomChargesConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Custom Charge Codes.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Custom ChargeCodes. <p><strong>OperationId:</strong>putCustomChargesConfig</p>
      operationId: putCustomChargesConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customChargesConfig'
        description: Request object for changing existing Custom Charges.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change Custom Charge Codes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customChargesConfig
  /hotels/{hotelId}/customCharges/exemptions:
    post:
      description: Operation to create Custom Charge Exemptions Config. <p><strong>OperationId:</strong>postCustomChargeExemptionsConfig</p>
      operationId: postCustomChargeExemptionsConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customChargeExemptionsConfigToBeCreated'
        description: New one or more Custom Charge Exemptions to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customChargeExemptionsConfigToBeCreated
  /hotels/{hotelId}/customCharges/exemptions/{configurationId}:
    delete:
      description: Operation to remove Custom Charge Exemptions Config. <p><strong>OperationId:</strong>deleteCustomChargeExemptionsConfig</p>
      operationId: deleteCustomChargeExemptionsConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
    get:
      deprecated: true
      description: You can use this API to fetch Custom Charge Exemptions Config.<br><p><strong><mark>This
        API is deprecated. Please use getCustomChargeExemptions instead</mark></strong></p>
        <p><strong>OperationId:</strong>getCustomChargeExemptionsConfig</p>
      operationId: getCustomChargeExemptionsConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Indicator that tells whether to include inactive articles in
          search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customChargeExemptionsConfig'
          description: Response object for fetching Custom Charge Exemptions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomChargeExemptionsConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Custom Charge Exemptions Config. <p><strong>OperationId:</strong>putCustomChargeExemptionsConfig</p>
      operationId: putCustomChargeExemptionsConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customChargeExemptionsConfigToBeChanged'
        description: Existing Custom Charge Exemptions to be changed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customChargeExemptionsConfigToBeChanged
  /hotels/{hotelId}/customNumbers:
    get:
      description: You can use this API to fetch custom number config. <p><strong>OperationId:</strong>getCustomNumbers</p>
      operationId: getCustomNumbers
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicator that tells whether to return the inactive custom number
          configuration in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: configurationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: The description of the custom number configuration code.
        in: query
        name: description
        schema:
          type: string
      - description: Receipt
        in: query
        name: area
        schema:
          enum:
          - Folio
          - Receipt
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customNumberConfigDetails'
          description: Response object for fetching custom number configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomNumbers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch custom number config.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postCustomNumberConfig</p>'
      operationId: postCustomNumberConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customNumberConfiguration'
        description: Request object to create custom number configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create custom number config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customNumberConfiguration
  /hotels/{hotelId}/customNumbers/configuration/{configurationId}:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteCustomNumberConfig</p>'
      operationId: deleteCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove custom number config.
      tags:
      - CashieringConfig
    get:
      deprecated: true
      description: You can use this API to fetch custom number config.<br><p><strong><mark>This
        API is deprecated. Please use getCustomNumbers instead</mark></strong></p>
        <p><strong>OperationId:</strong>getCustomNumberConfig</p>
      operationId: getCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicator that tells whether to return the inactive custom number
          configuration in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: The description of the custom number configuration code.
        in: query
        name: description
        schema:
          type: string
      - description: Receipt
        in: query
        name: area
        schema:
          enum:
          - Folio
          - Receipt
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/customNumberConfigDetails'
          description: Response object for fetching custom number configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CustomNumberConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch custom number config.
      tags:
      - CashieringConfig
    put:
      description: ' <p><strong>OperationId:</strong>putCustomNumberConfig</p>'
      operationId: putCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customNumberConfiguration'
        description: Request object to change custom number configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response object to change custom number configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change custom number config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customNumberConfiguration
  /hotels/{hotelId}/exchangeRates:
    get:
      deprecated: true
      description: "You can use this API to retrieve exchange rate information for\
        \ a hotel. You can search by hotel, Currency Code and exchange types. Results\
        \ can include past, current and future exchange rate information for a currency.<br><p><strong><mark>This\
        \ API is deprecated. Please use getExchangeRatesInfo instead</mark></strong></p>\
        \ <p><strong>OperationId:</strong>getExchangeRates</p>"
      operationId: getExchangeRates
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: E-certificate conversion.
        explode: true
        in: query
        name: exchangeTypes
        schema:
          items:
            enum:
            - Cash
            - Settlement
            - Posting
            - Check
            - TACommission
            - Membership
            - Certificate
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exchangeRatesDetails'
            application/json:
              example:
              - baseCurrency:
                  code: USD
                beginDate: 2020-09-01 00:28:45.0
                buyCommission: "0"
                buyRate: "1"
                currency:
                  code: AUD
                exchangeType:
                - Cash
                status: Future
              - baseCurrency:
                  code: USD
                beginDate: 2020-01-01 00:28:45.0
                buyCommission: "0"
                buyRate: "1.34"
                currency:
                  code: AUD
                exchangeType:
                - Cash
                status: Current
              - baseCurrency:
                  code: USD
                beginDate: 2016-09-01 13:04:40.0
                buyCommission: "5"
                buyRate: "5"
                currency:
                  code: AUD
                exchangeType:
                - Cash
                status: Past
          description: Collection of exchange rates and their information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExchangeRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch ExchangeRates.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/exchangeRates/{currencyCode}:
    get:
      description: Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p>
      operationId: getFuturePastExchangeRates
      parameters:
      - description: Currency Code in OPERA
        in: path
        name: currencyCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: E-certificate conversion.
        example: Cash
        in: query
        name: exchangeTypes
        required: true
        schema:
          enum:
          - Cash
          - Settlement
          - Posting
          - Check
          - TACommission
          - Membership
          - Certificate
          type: string
      - in: query
        name: dateRangeStart
        schema:
          format: date
          type: string
      - in: query
        name: dateRangeEnd
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/futurePastExchangeRates'
          description: Collection of exchange rates and their information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FuturePastExchangeRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch FuturePastExchangeRates.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/fiscalCommands:
    get:
      description: Use this API to get fiscal commands. <p><strong>OperationId:</strong>getFiscalCommands</p>
      operationId: getFiscalCommands
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Inactive flag used to include/exclude inactive transaction codes
          from the search result
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used for fiscal partner codes. Possible values of this pattern\
          \ are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: partnerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: List of Fiscal Operations supported.
        in: query
        name: operationType
        schema:
          enum:
          - FiscalCommand
          - Operation
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalCommandsDetails'
          description: Lists available Fiscal Operations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalCommands not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fiscal Commands
      tags:
      - CashieringConfig
    put:
      description: Use this API to update configuration fiscal commands. <p><strong>OperationId:</strong>changeFiscalCommands</p>
      operationId: changeFiscalCommands
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeFiscalCommands'
        description: Request to update existing Fiscal Command.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change configuration fiscal commands
      tags:
      - CashieringConfig
      x-codegen-request-body-name: changeFiscalCommands
  /hotels/{hotelId}/fiscalPartners:
    delete:
      description: Use this API to delete configuration fiscal partners. <p><strong>OperationId:</strong>removeFiscalPartners</p>
      operationId: removeFiscalPartners
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for fiscal partner codes. Possible values of this pattern\
          \ are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: partnerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete configuration fiscal partners
      tags:
      - CashieringConfig
    get:
      description: Use this API to get fiscal partners. <p><strong>OperationId:</strong>getFiscalPartners</p>
      operationId: getFiscalPartners
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used for fiscal partner codes. Possible values of this pattern\
          \ are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: partnerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalPartnersDetails'
          description: Response object for fetch Fiscal Partners Config.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalPartners not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get fiscal partners
      tags:
      - CashieringConfig
    post:
      description: Use this API to create fiscal partners. <p><strong>OperationId:</strong>postFiscalPartners</p>
      operationId: postFiscalPartners
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createFiscalPartners'
        description: Request object to create Fiscal Partners.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create fiscal partners
      tags:
      - CashieringConfig
      x-codegen-request-body-name: createFiscalPartners
    put:
      description: Use this API to update configuration fiscal partners. <p><strong>OperationId:</strong>changeFiscalPartners</p>
      operationId: changeFiscalPartners
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeFiscalPartners'
        description: Request object to change Fiscal Partners.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change configuration fiscal partners
      tags:
      - CashieringConfig
      x-codegen-request-body-name: changeFiscalPartners
  /hotels/{hotelId}/folios/{folioType}/legends/{legendCode}:
    delete:
      description: Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>
      operationId: removeFolioTypeLegendMappingConfig
      parameters:
      - description: Legend Code
        in: path
        name: legendCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Folio Type
        in: path
        name: folioType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the source hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove folio type legend mappings config.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/generates:
    get:
      description: Operation to fetch tax types. <p><strong>OperationId:</strong>getGenerateTaxTypes</p>
      operationId: getGenerateTaxTypes
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: transactionCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxTypesGenerate'
          description: Response for fetching tax types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GenerateTaxTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch GenerateTaxTypes.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/interfaces/{interfaceLogoId}/customData:
    get:
      description: Operation to fetch hotel interface custom data. <p><strong>OperationId:</strong>getHotelInterfaceCustomData</p>
      operationId: getHotelInterfaceCustomData
      parameters:
      - description: Unique ID of the hotel interface logo
        in: path
        name: interfaceLogoId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Transaction codes of a Hotel Interface.
        in: query
        name: fetchInstructions
        schema:
          enum:
          - PrimaryInfo
          - AdditionalInfo
          - GeneralInfo
          - CommunicationInfo
          - IfcTranslation
          - IfcClassOfService
          - IfcImportRooms
          - WorkstationSetupInfo
          - PostingsInfo
          - CustomDataInfo
          - ExportDataInfo
          - TransactionCodesInfo
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelInterfaceDetail'
          description: Response object for retrieving the details of a Hotel Interface.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceCustomData not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface custom data.
      tags:
      - CreditCard
    put:
      description: Operation to update hotel interface custom data. <p><strong>OperationId:</strong>updateInterfaceCustomData</p>
      operationId: updateInterfaceCustomData
      parameters:
      - description: Unique ID of the hotel interface logo
        in: path
        name: interfaceLogoId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelInterfaceDetail'
        description: Request object for updating a Hotel Interface.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to update hotel interface custom data.
      tags:
      - CreditCard
      x-codegen-request-body-name: hotelInterfaceDetail
  /hotels/{hotelId}/template/customNumbers:
    post:
      deprecated: true
      description: You can use this API to create a new template custom number configuration.<br><p><strong><mark>This
        API is deprecated. Please use postTemplateCustomNumber instead</mark></strong></p>
        <p><strong>OperationId:</strong>postTemplateCustomNumberConfig</p>
      operationId: postTemplateCustomNumberConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCustomNumberConfig'
        description: Request object to create a new template custom number configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create a new template custom number configuration.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateCustomNumberConfig
  /hotels/{hotelId}/template/customNumbers/configuration/{configurationId}:
    delete:
      deprecated: true
      description: You can use this API to remove template custom number configuration.<br><p><strong><mark>This
        API is deprecated. Please use deleteTemplateCustomNumber instead</mark></strong></p>
        <p><strong>OperationId:</strong>deleteTemplateCustomNumberConfig</p>
      operationId: deleteTemplateCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove template custom number configuration.
      tags:
      - CashieringConfig
    get:
      deprecated: true
      description: You can use this API to fetch template custom number configuration.<br><p><strong><mark>This
        API is deprecated. Please use getTemplateCustomNumbers instead</mark></strong></p>
        <p><strong>OperationId:</strong>getTemplateCustomNumberConfig</p>
      operationId: getTemplateCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicator that tells whether to return the inactive custom number
          configuration in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateCustomNumberConfigDetails'
          description: Response object for fetching template custom number configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateCustomNumberConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch template custom number configuration.
      tags:
      - CashieringConfig
    put:
      deprecated: true
      description: You can use this API to change template custom number configuration.<br><p><strong><mark>This
        API is deprecated. Please use putTemplateCustomNumber instead</mark></strong></p>
        <p><strong>OperationId:</strong>putTemplateCustomNumberConfig</p>
      operationId: putTemplateCustomNumberConfig
      parameters:
      - description: Unique ID of the configuration
        in: path
        name: configurationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCustomNumberConfig'
        description: Request object to change template custom number configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response object to change template custom number configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change template custom number configuration.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateCustomNumberConfig
  /hotels/{hotelId}/trackItActions:
    get:
      description: Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>
      operationId: getTrackItActions
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: showInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/trackItActionsDetails'
          description: Response object for fetching Track it Actions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TrackItActions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Track it Actions
      tags:
      - HotelConfig
    post:
      description: Use this API to create Track it Actions. <p><strong>OperationId:</strong>postTrackItActions</p>
      operationId: postTrackItActions
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItActionsCriteria'
        description: Request object for creating new Track it Actions.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Track it Actions
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItActionsCriteria
  /hotels/{hotelId}/trackItActions/{actionCode}:
    delete:
      description: Use this API to delete Track it Actions. <p><strong>OperationId:</strong>removeTrackItActions</p>
      operationId: removeTrackItActions
      parameters:
      - description: Unique Code of action.
        in: path
        name: actionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Track it Actions
      tags:
      - HotelConfig
    put:
      description: Use this API to update Track it Actions. <p><strong>OperationId:</strong>changeTrackItActions</p>
      operationId: changeTrackItActions
      parameters:
      - description: Unique Code of action.
        in: path
        name: actionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItActionsToBeChanged'
        description: Request object for changing existing Track it Actions.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Track it Actions
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItActionsToBeChanged
  /hotels/{hotelId}/trackItLocations:
    get:
      description: Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>
      operationId: getTrackItLocations
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: showInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/trackItLocationsDetails'
          description: Response object for fetching Track it Locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TrackItLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Track it Locations
      tags:
      - HotelConfig
    post:
      description: Use this API to create Track it Locations. <p><strong>OperationId:</strong>postTrackItLocations</p>
      operationId: postTrackItLocations
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItLocationsCriteria'
        description: Request object for creating new Track it Locations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Track it Locations
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItLocationsCriteria
  /hotels/{hotelId}/trackItLocations/{locationCode}:
    delete:
      description: Use this API to delete Track it Locations. <p><strong>OperationId:</strong>removeTrackItLocations</p>
      operationId: removeTrackItLocations
      parameters:
      - description: Unique Code of location.
        in: path
        name: locationCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Track it Locations
      tags:
      - HotelConfig
    put:
      description: Use this API to update Track it Locations. <p><strong>OperationId:</strong>changeTrackItLocations</p>
      operationId: changeTrackItLocations
      parameters:
      - description: Unique Code of location.
        in: path
        name: locationCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItLocationsToBeChanged'
        description: Request object for changing existing Track it Locations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Track it Locations
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItLocationsToBeChanged
  /hotels/{hotelId}/trackItTypes:
    get:
      description: Use this API to get Track it Types. <p><strong>OperationId:</strong>getTrackItTypes</p>
      operationId: getTrackItTypes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: showInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/trackItTypesDetails'
          description: Response object for fetching Track it Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TrackItTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Track it Types
      tags:
      - HotelConfig
    post:
      description: Use this API to create Track it Types. <p><strong>OperationId:</strong>postTrackItTypes</p>
      operationId: postTrackItTypes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItTypesCriteria'
        description: Request object for creating new Track it Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Track it Types
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItTypesCriteria
  /hotels/{hotelId}/trackItTypes/{typeCode}:
    delete:
      description: Use this API to delete Track it Types. <p><strong>OperationId:</strong>removeTrackItTypes</p>
      operationId: removeTrackItTypes
      parameters:
      - description: Unique Code of track it type.
        in: path
        name: typeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Track it Types
      tags:
      - HotelConfig
    put:
      description: Use this API to update Track it Types. <p><strong>OperationId:</strong>changeTrackItTypes</p>
      operationId: changeTrackItTypes
      parameters:
      - description: Unique Code of track it type.
        in: path
        name: typeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/trackItTypesToBeChanged'
        description: Request object for changing existing Track it Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Track it Types
      tags:
      - HotelConfig
      x-codegen-request-body-name: trackItTypesToBeChanged
  /hotels/{hotelId}/transactionCodeAccessRoles:
    get:
      description: Operation to Fetch Transaction Code Access Roles. <p><strong>OperationId:</strong>getTransactionCodeAccessRoles</p>
      operationId: getTransactionCodeAccessRoles
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Codes
        in: query
        name: roleCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionCodeAccessRoles'
          description: Response object for information regarding Transaction Code
            Access Role
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCodeAccessRoles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionCodeAccessRoles.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/transactionCodes/{transactionCode}/chargeSimulations:
    get:
      description: Operation to test posting amount. <p><strong>OperationId:</strong>calculatePosting</p>
      operationId: calculatePosting
      parameters:
      - description: Transaction Code in OPERA
        in: path
        name: transactionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Base amount to test for posting.
        example: "299"
        in: query
        name: postingAmount
        schema:
          type: number
      - description: Specify this criteria if calculation is based on the tax type.
        in: query
        name: taxType
        schema:
          type: string
      - description: Specify this criteria if calculation is based on the guest balance.
        example: "299"
        in: query
        name: guestBalance
        schema:
          type: number
      - description: Specify this criteria if calculation is based on room type.
        example: STD
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedPosting'
          description: Response for testing posting amount.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: calculatePosting not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to CalculatePosting.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/transactionCodes/{transactionCode}/hotelTransactionCode:
    get:
      description: "Use this API to return transaction codes based on search criteria\
        \ such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes,\
        \ description, etc.<p><strong>OperationId:</strong>getTransactionCodes</p>"
      operationId: getTransactionCode
      parameters:
      - description: Transaction Code in OPERA
        in: path
        name: transactionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for transaction code instructions that can be used
          for partial operations.
        example:
        - Header
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - Generates
            - Glmapping
            - AssociatedTrxCodes
            - MappingCodes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionCode'
          description: Response object for fetching detailed transaction code.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCode not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get transaction codes
      tags:
      - CashieringConfig
  /hotels/{hotelId}/transactionCodes/{transactionCode}/transactionCodes:
    delete:
      description: Operation to remove transaction codes. <p><strong>OperationId:</strong>deleteTransactionCodes</p>
      operationId: deleteTransactionCodes
      parameters:
      - description: Transaction Code in OPERA
        in: path
        name: transactionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionCodes.
      tags:
      - CashieringConfig
  /hotels/{hotelId}/transactionDiscounts/{transactionDiscountCode}:
    delete:
      description: Operation to remove Transaction Discounts. <p><strong>OperationId:</strong>deleteTransactionDiscounts</p>
      operationId: deleteTransactionDiscounts
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique code for transaction discount
        in: path
        name: transactionDiscountCode
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionDiscounts.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Transaction Discounts. <p><strong>OperationId:</strong>putTransactionDiscounts</p>
      operationId: putTransactionDiscounts
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique code for transaction discount
        example: ""
        in: path
        name: transactionDiscountCode
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiscount'
        description: Request object for changing a Transaction Discount Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Additional warnings about the operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TransactionDiscounts.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionDiscount
  /hotels/{hotelId}/transactionGroupCode/{transactionGroupCode}/transactionGroup:
    get:
      description: Operation to fetch detailed transaction group. <p><strong>OperationId:</strong>getTransactionGroup</p>
      operationId: getTransactionGroup
      parameters:
      - description: Transaction Group Code in OPERA
        in: path
        name: transactionGroupCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for transaction group instructions that can be used
          for partial operations.
        example:
        - Header
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - Generates
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionGroup'
          description: Response object for fetching detailed transaction group configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionGroup not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionGroup.
      tags:
      - CashieringConfig
  ? /hotels/{hotelId}/transactionSubGroupCodes/{transactionSubGroupCode}/transactionGroupCodes/{transactionGroupCode}/transactionSubGroup
  : get:
      description: Operation to fetch detailed transaction sub group. <p><strong>OperationId:</strong>getTransactionSubgroup</p>
      operationId: getTransactionSubgroup
      parameters:
      - description: Transaction Group Code in OPERA
        in: path
        name: transactionGroupCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Transaction SubGroup Code in OPERA
        in: path
        name: transactionSubGroupCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for transaction sub group instructions that can be
          used for partial operations.
        example:
        - Header
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - Generates
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionSubgroup'
          description: Response object for fetching detailed transaction subgroup
            configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionSubgroup not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionGroup.
      tags:
      - CashieringConfig
  /hotels/{sourceHotelId}/customCharges/exemptions/copy:
    post:
      description: Operation to copy Custom Charge Exemptions Config. <p><strong>OperationId:</strong>copyCustomChargeExemptionsConfig</p>
      operationId: copyCustomChargeExemptionsConfig
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/customChargeExemptionsConfigCopy'
        description: List of the Custom Charge Exemptions to be copied.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy Custom Charge Exemptions Config.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: customChargeExemptionsConfigCopy
  /hotels/{sourceHotelId}/fiscalFolioParameters/copy:
    put:
      description: Operation to copy Fiscal Folio Parameters. <p><strong>OperationId:</strong>copyFiscalFolioParameters</p>
      operationId: copyFiscalFolioParameters
      parameters:
      - description: Unique ID of the source hotel in OPERA
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/fiscalFolioParametersCopy'
        description: Request object for copying Fiscal Folio Parameters to other hotel
          code(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy FiscalFolioParameters.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: fiscalFolioParametersCopy
  /hotels/{sourceHotelId}/trackItActions/copy:
    put:
      description: Copy Track it Actions. <p><strong>OperationId:</strong>copyTrackItActions</p>
      operationId: copyTrackItActions
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyTrackItActions'
        description: List of Track it Actions to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' Copy Track it Actions'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyTrackItActions
  /hotels/{sourceHotelId}/trackItLocations/copy:
    put:
      description: Copy Track it Locations. <p><strong>OperationId:</strong>copyTrackItLocations</p>
      operationId: copyTrackItLocations
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyTrackItLocations'
        description: List of Track it Locations to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' Copy Track it Locations'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyTrackItLocations
  /hotels/{sourceHotelId}/trackItTypes/copy:
    put:
      description: Copy Track it Types. <p><strong>OperationId:</strong>copyTrackItTypes</p>
      operationId: copyTrackItTypes
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyTrackItTypes'
        description: List of Track it Types to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' Copy Track it Types'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyTrackItTypes
  /noShowPostingRules:
    delete:
      description: Operation to remove No Show Posting Rules. <p><strong>OperationId:</strong>deleteNoShowPostingRules</p>
      operationId: deleteNoShowPostingRules
      parameters:
      - description: Indicates for which hotel this posting rule apply to.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Type of the reservation.
        explode: true
        in: query
        name: reservationType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Source code of the reservation.
        explode: true
        in: query
        name: sourceCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple Type for Posting Rule Types.
        explode: true
        in: query
        name: postingRule
        schema:
          items:
            enum:
            - AllNights
            - DepositOnly
            - FirstNight
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete NoShowPostingRules.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch No Show Posting Rules. <p><strong>OperationId:</strong>getNoShowPostingRules</p>
      operationId: getNoShowPostingRules
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: sourceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/noShowPostingRules'
          description: Response object for fetching No Show Posting Rule Configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: NoShowPostingRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch NoShowPostingRules.
      tags:
      - CashieringConfig
    post:
      description: Operation to create No Show Posting Rules. <p><strong>OperationId:</strong>postNoShowPostingRules</p>
      operationId: postNoShowPostingRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/noShowPostingRules'
        description: Request object for creating new No Show Posting Rule Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create NoShowPostingRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: noShowPostingRules
    put:
      description: Operation to change No Show Posting Rules. <p><strong>OperationId:</strong>putNoShowPostingRules</p>
      operationId: putNoShowPostingRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/noShowPostingRulesEdit'
        description: Request object for changing existing No Show Posting Rule Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change NoShowPostingRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: noShowPostingRulesEdit
  /numberDescriptions:
    get:
      description: "The operation accepts code and/or descriptions for numbers as\
        \ search criteria in fetch request and returns numbers, descriptions that\
        \ match the criteria. <p><strong>OperationId:</strong>getNumberDescriptions</p>"
      operationId: getNumberDescriptions
      parameters:
      - description: "Used for Number specific codes for OPERA tables. Possible values\
          \ of this pattern are 1, 10, 17, THOUSAND, BILLION, etc."
        explode: true
        in: query
        name: numberCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description text set to the search criteria
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/numberDescriptions'
          description: Response for fetching Numbers and Descriptions
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: NumberDescriptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch NumberDescriptions.
      tags:
      - CashieringConfig
    put:
      description: The operation is to change the description corresponding to a number.
        <p><strong>OperationId:</strong>putNumberDescriptions</p>
      operationId: putNumberDescriptions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/numberDescriptions'
        description: Request object to edit description of numbers
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change NumberDescriptions.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: numberDescriptions
  /operaControlSequences:
    get:
      description: Operation to fetch Opera Document Sequences. <p><strong>OperationId:</strong>getOperaControlSequences</p>
      operationId: getOperaControlSequences
      parameters:
      - description: Hotel code of fetch criteria
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Country Code of fetch criteria
        in: query
        name: countryCode
        schema:
          type: string
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: HotelCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple type for opera sequence instructions that can be used
          for partial operations.
        explode: true
        in: query
        name: fetchInstruction
        schema:
          items:
            enum:
            - BillFolioTypes
            - ArInvoice
            - SequenceNumbers
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaControlSequences'
          description: Response object of Opera Control Sequence.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: OperaControlSequences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch OperaControlSequences.
      tags:
      - CashieringConfig
    put:
      description: Operation to change Opera Document Sequences. <p><strong>OperationId:</strong>putOperaControlSequences</p>
      operationId: putOperaControlSequences
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/operaControlSequences'
        description: Request objects for updating Opera Control Sequences
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change OperaControlSequences.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: operaControlSequences
  /packageArrangementCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deletePackageArrangementCodes</p>'
      operationId: deletePackageArrangementCodes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete PackageArrangementCodes.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getPackageArrangementCodes</p>'
      operationId: getPackageArrangementCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: arrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: A flag that determines whether to fetch active records or inactive
          records
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packageArrangementCodes'
          description: Response object for fetching package arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PackageArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch PackageArrangementCodes.
      tags:
      - CashieringConfig
    post:
      description: ' <p><strong>OperationId:</strong>postPackageArrangementCodes</p>'
      operationId: postPackageArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/packageArrangementCodes'
        description: Request object for creating new package arrangement codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create PackageArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: packageArrangementCodes
    put:
      description: ' <p><strong>OperationId:</strong>putPackageArrangementCodes</p>'
      operationId: putPackageArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/packageArrangementCodes'
        description: Request object for changing package arrangement codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change PackageArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: packageArrangementCodes
  /packageArrangementCodes/copy:
    put:
      description: ' <p><strong>OperationId:</strong>copyPackageArrangementCodes</p>'
      operationId: copyPackageArrangementCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/packageArrangementCodesCopy'
        description: List of the package arrangement codes to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy PackageArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: packageArrangementCodesCopy
  /paymentMethods:
    put:
      description: Operation to remove payment methods. <p><strong>OperationId:</strong>removePaymentMethods</p>
      operationId: removePaymentMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/paymentMethods'
        description: Request to remove payment methods.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionArrangementCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: paymentMethods
  /prepaidCard:
    get:
      description: ' <p><strong>OperationId:</strong>getPrepaidCard</p>'
      operationId: getPrepaidCard
      parameters:
      - description: Hotel code.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Prepaid card number.
        in: query
        name: cardNumber
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: interfaceId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: interfaceIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: PIN code associated for the prepaid card.
        in: query
        name: pin
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/prepaidCardDetails'
          description: Response for fetch Prepaid card operation
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PrepaidCard not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Prepaid Card.
      tags:
      - CreditCard
  /prepaidCardBalance:
    get:
      description: ' <p><strong>OperationId:</strong>getPrepaidCardBalance</p>'
      operationId: getPrepaidCardBalance
      parameters:
      - description: Hotel code.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Prepaid card number.
        in: query
        name: cardNumber
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: interfaceId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: interfaceIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: PIN code associated for the prepaid card.
        in: query
        name: pin
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/prepaidCardBalanceDetails'
          description: Response for fetch Prepaid card balance.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PrepaidCardBalance not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch prepaid card balance.
      tags:
      - CreditCard
  /prepaidCards:
    get:
      description: ' <p><strong>OperationId:</strong>getPrepaidCards</p>'
      operationId: getPrepaidCards
      parameters:
      - description: Hotel code.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Configuring this flag to be TRUE will fetch and return card details
          from vendor interface.
        example: "false"
        in: query
        name: includeCardDetails
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Prepaid card number.
        in: query
        name: cardNo
        schema:
          type: string
      - description: Room No search criteria.
        in: query
        name: roomNo
        schema:
          type: string
      - description: Last name search criteria.
        in: query
        name: nameWildCard
        schema:
          type: string
      - description: First name search criteria.
        in: query
        name: firstNameWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/prepaidCards'
          description: Response for fetch Prepaid cards operation
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PrepaidCards not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch PrepaidCards.
      tags:
      - CreditCard
  /revenueBucketCodes:
    delete:
      description: Operation to remove Revenue Bucket Codes. <p><strong>OperationId:</strong>deleteRevenueBucketCodes</p>
      operationId: deleteRevenueBucketCodes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Revenue Export Bucket Type
        explode: true
        in: query
        name: revenueBucketType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete RevenueBucketCodes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Revenue Bucket Codes. <p><strong>OperationId:</strong>getRevenueBucketCodes</p>
      operationId: getRevenueBucketCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: trxCodeArrangementCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Fiscal Bucket Type.
        in: query
        name: trxCodeArrangementType
        schema:
          enum:
          - Default
          - Fiscal
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: revenueBucketTypesWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueBucketCodes'
          description: Response object for fetching Revenue Bucket Codes configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueBucketCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch RevenueBucketCodes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Revenue Bucket Codes. <p><strong>OperationId:</strong>postRevenueBucketCodes</p>
      operationId: postRevenueBucketCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketCodes'
        description: Request object for creating new Revenue Bucket Codes Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create RevenueBucketCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketCodes
    put:
      description: Operation to change Revenue Bucket Codes. <p><strong>OperationId:</strong>putRevenueBucketCodes</p>
      operationId: putRevenueBucketCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketCodes'
        description: Request object for changing existing Revenue Bucket Codes Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change RevenueBucketCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketCodes
  /revenueBucketCodes/copy:
    put:
      description: Operation to copy Revenue Bucket Codes. <p><strong>OperationId:</strong>copyRevenueBucketCodes</p>
      operationId: copyRevenueBucketCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketCodesCopy'
        description: Request object for copying one or more Revenue Bucket Codes configurations
          from one source property to one or more target properties.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy RevenueBucketCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketCodesCopy
  /revenueBucketTypes:
    delete:
      description: Operation to remove Revenue Bucket Types. <p><strong>OperationId:</strong>deleteRevenueBucketTypes</p>
      operationId: deleteRevenueBucketTypes
      parameters:
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete RevenueBucketTypes.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Revenue Bucket Types. <p><strong>OperationId:</strong>getRevenueBucketTypes</p>
      operationId: getRevenueBucketTypes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: revenueBucketTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Fiscal Bucket Type.
        in: query
        name: bucketType
        schema:
          enum:
          - Default
          - Fiscal
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueBucketTypes'
          description: Response object for fetching Revenue Bucket Types configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueBucketTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch RevenueBucketTypes.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Revenue Bucket Types. <p><strong>OperationId:</strong>postRevenueBucketTypes</p>
      operationId: postRevenueBucketTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketTypes'
        description: Request object for creating new Revenue Bucket Types Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create RevenueBucketTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketTypes
    put:
      description: Operation to change Revenue Bucket Types. <p><strong>OperationId:</strong>putRevenueBucketTypes</p>
      operationId: putRevenueBucketTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketTypes'
        description: Request object for changing existing Revenue Bucket Types Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change RevenueBucketTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketTypes
  /revenueBucketTypes/copy:
    put:
      description: Operation to copy Revenue Bucket Types. <p><strong>OperationId:</strong>copyRevenueBucketTypes</p>
      operationId: copyRevenueBucketTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueBucketTypesCopy'
        description: List of the Revenue Bucket Types to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy RevenueBucketTypes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueBucketTypesCopy
  /revenueTypeMapping:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteRevenueTypeMapping</p>'
      operationId: deleteRevenueTypeMapping
      parameters:
      - description: Hotel Code to which the Revenue Type Mapping belongs to.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: revenueTypeMappingID
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Provides information about the Revenue Type.
        in: query
        name: revenueType
        schema:
          type: string
      - description: Provides information about the Event Type.
        in: query
        name: eventType
        schema:
          type: string
      - description: Provides information about the Space/Location for the Revenue
          Type.
        in: query
        name: space
        schema:
          type: string
      - description: Transaction code for the Revenue Type.
        in: query
        name: transactionCode
        schema:
          type: string
      - description: For Catering and Event.
        in: query
        name: cateringOnly
        schema:
          enum:
          - "Yes"
          - "No"
          - Both
          type: string
      - description: Service Charge for the Revenue Type.
        in: query
        name: serviceCharge
        schema:
          maximum: 100
          minimum: 0
          type: number
      - description: Service Charge for the Revenue Type.
        in: query
        name: serviceChargeTrxCode
        schema:
          type: string
      - description: Service Charge for the Revenue Type.
        in: query
        name: serviceChargeCalulationMethod
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete RevenueTypeMapping.
      tags:
      - CashieringConfig
    get:
      description: ' <p><strong>OperationId:</strong>getRevenueTypeMapping</p>'
      operationId: getRevenueTypeMapping
      parameters:
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: eventTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: revenueTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: spaceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueTypeMappingList'
          description: Response object for fetching Revenue Type Mapping configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueTypeMapping not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch RevenueTypeMapping.
      tags:
      - CashieringConfig
    post:
      description: "Use this API to update transaction generates for a specific property.\
        \  Generates are rules used to calculate and post additional charges, such\
        \ as service charges and taxes, when a particular sales charge transaction\
        \ code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>putTransactionGenerates</p>"
      operationId: postRevenueTypeMapping
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueTypeMapping'
        description: Request object to create Revenue Type Mapping configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post revenue type mapping
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueTypeMapping
    put:
      description: ' <p><strong>OperationId:</strong>putRevenueTypeMapping</p>'
      operationId: putRevenueTypeMapping
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueTypeMapping'
        description: Request object to change Revenue Type Mapping configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response object to change Revenue Type Mapping configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change RevenueTypeMapping.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueTypeMapping
  /revenueTypeMapping/copy:
    put:
      description: ' <p><strong>OperationId:</strong>copyRevenueTypeMapping</p>'
      operationId: copyRevenueTypeMapping
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueTypeMappingCopy'
        description: Request object for Copying Revenue Type Mapping.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy RevenueTypeMapping.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: revenueTypeMappingCopy
  /routingInstructions:
    delete:
      description: Operation to remove routing instructions. <p><strong>OperationId:</strong>deleteRoutingInstructions</p>
      operationId: deleteRoutingInstructions
      parameters:
      - description: Hotel where the code is configured.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - description: Configuration code.
        in: query
        name: code
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete RoutingInstructions.
      tags:
      - CashieringConfig
    get:
      description: "Use this API to return routing instructions based on search criteria\
        \ such as hotelId, trxCodeArrangementCode, wildCard.  Routing instructions\
        \ are used to route specific charges to different destinations.<p><strong>OperationId:</strong>getRoutingInstructions</p>"
      operationId: getRoutingInstructions
      parameters:
      - explode: false
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Codes to be searched.
        explode: false
        in: query
        name: trxCodeArrangementCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Determines if this is a comp routing code or a routing code.
        in: query
        name: compAccounting
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/routingInstructions'
          description: Response object for fetching routing instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get routing instructions
      tags:
      - CashieringConfig
    post:
      description: Operation to create routing instructions. <p><strong>OperationId:</strong>postRoutingInstructions</p>
      operationId: postRoutingInstructions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/routingInstructions'
        description: Request to create a routing instruction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create RoutingInstructions.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: routingInstructions
    put:
      description: Operation to change routing instructions. <p><strong>OperationId:</strong>putRoutingInstructions</p>
      operationId: putRoutingInstructions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/routingInstructions'
        description: Request when changing a routing instruction.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change RoutingInstructions.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: routingInstructions
  /routingInstructions/copy:
    put:
      description: Operation to copy routing instructions. <p><strong>OperationId:</strong>copyRoutingInstructions</p>
      operationId: copyRoutingInstructions
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/routingInstructionsCopy'
        description: List of the routing instructions to be copied to hotel code(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy RoutingInstructions.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: routingInstructionsCopy
  /secureApplicationSettings:
    put:
      description: Operation to update one or more secure application settings. <p><strong>OperationId:</strong>putSecureApplicationSettings</p>
      operationId: putSecureApplicationSettings
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/applicationSecureSetting'
        description: Request for reading the configured device delimiters.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change AR SecureApplicationSettings.
      tags:
      - CreditCard
      x-codegen-request-body-name: applicationSecureSetting
  /stopProcessingReasons:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>'
      operationId: deleteStopProcessingReasons
      parameters:
      - explode: true
        in: query
        name: codes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove stop processing reasons.
      tags:
      - CommissionConfig
    get:
      description: ' <p><strong>OperationId:</strong>getStopProcessingReasons</p>'
      operationId: getStopProcessingReasons
      parameters:
      - description: Determines wether to fetch inactive records or not.
        example: "false"
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stopProcessingReasons'
          description: Response object for fetching Stop Processing Reason.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StopProcessingReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch stop processing reasons.
      tags:
      - CommissionConfig
    post:
      description: ' <p><strong>OperationId:</strong>postStopProcessingReasons</p>'
      operationId: postStopProcessingReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/stopProcessingReasons'
        description: Request object for creating Stop Processing Reason
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create stop processing reasons.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: stopProcessingReasons
    put:
      description: ' <p><strong>OperationId:</strong>putStopProcessingReasons</p>'
      operationId: putStopProcessingReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/stopProcessingReasons'
        description: Request object for changing Stop Processing Reason.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stopProcessingReasons'
          description: Response object for changing Stop Processing Reason.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change stop processing reasons.
      tags:
      - CommissionConfig
      x-codegen-request-body-name: stopProcessingReasons
  /taxBrackets:
    delete:
      description: Operation to remove Tax Brackets. This function only be available
        when the parameter "Tax Bracket Calculation" is on. <p><strong>OperationId:</strong>deleteTaxBrackets</p>
      operationId: deleteTaxBrackets
      parameters:
      - description: Hotel Code where tax bracket belongs to.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Tax Percentage for which this Tax Bracket applies.
        explode: true
        in: query
        name: taxPercentage
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TaxBrackets.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch Tax Brackets. This function only be available
        when the parameter "Tax Bracket Calculation" is on. <p><strong>OperationId:</strong>getTaxBrackets</p>
      operationId: getTaxBrackets
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: taxPercentagesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxBrackets'
          description: Response object for fetching details about tax brackets.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TaxBrackets not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TaxBrackets.
      tags:
      - CashieringConfig
    post:
      description: Operation to Create Tax Brackets. This function only be available
        when the parameter "Tax Bracket Calculation" is on. <p><strong>OperationId:</strong>postTaxBrackets</p>
      operationId: postTaxBrackets
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxBrackets'
        description: Request object for creating tax brackets.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TaxBrackets.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxBrackets
    put:
      description: Operation to change Tax Brackets. This function only be available
        when the parameter "Tax Bracket Calculation" is on. <p><strong>OperationId:</strong>putTaxBrackets</p>
      operationId: putTaxBrackets
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxBrackets'
        description: Request object for changing tax brackets.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TaxBrackets.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxBrackets
  /taxBrackets/copy:
    put:
      description: Operation to copy Tax Brackets. This function only be available
        when the parameter "Tax Bracket Calculation" is on. <p><strong>OperationId:</strong>copyTaxBrackets</p>
      operationId: copyTaxBrackets
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxBracketsCopy'
        description: Request object for copying tax brackets.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy TaxBrackets.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: taxBracketsCopy
  /taxCategories:
    get:
      description: Use this API to get Tax Category Codes. <p><strong>OperationId:</strong>getFetchTaxCategoryCodes</p>
      operationId: getFetchTaxCategoryCodes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxCategoryCodesDetails'
          description: Response object for fetching Tax Category Codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FetchTaxCategoryCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Tax Category Codes
      tags:
      - ChainConfig
    post:
      description: Use this API to create Tax Category Codes. <p><strong>OperationId:</strong>postTaxCategoryCodes</p>
      operationId: postTaxCategoryCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxCategoryCodesCriteria'
        description: Request object for creating Tax Category Codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Tax Category Codes
      tags:
      - ChainConfig
      x-codegen-request-body-name: taxCategoryCodesCriteria
  /taxCategories/{taxCategoryCode}:
    delete:
      description: Use this API to delete Tax Category Codes. <p><strong>OperationId:</strong>deleteTaxCategoryCodes</p>
      operationId: deleteTaxCategoryCodes
      parameters:
      - description: Unique ID of Tax Category Codes.
        in: path
        name: taxCategoryCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Tax Category Codes
      tags:
      - ChainConfig
    put:
      description: Use this API to update Tax Category Codes. <p><strong>OperationId:</strong>putTaxCategoryCodes</p>
      operationId: putTaxCategoryCodes
      parameters:
      - description: Unique ID of Tax Category Codes.
        in: path
        name: taxCategoryCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxCategoryCodesToBeChanged'
        description: Request object for changing Tax Category Codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Tax Category Codes
      tags:
      - ChainConfig
      x-codegen-request-body-name: taxCategoryCodesToBeChanged
  /taxOffices:
    get:
      description: Use this API to get Tax Offices. <p><strong>OperationId:</strong>getTaxOffices</p>
      operationId: getTaxOffices
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taxOfficesDetails'
          description: Response object for fetching Tax Offices.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TaxOffices not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Tax Offices
      tags:
      - ChainConfig
    post:
      description: Use this API to create Tax Offices. <p><strong>OperationId:</strong>postTaxOffices</p>
      operationId: postTaxOffices
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxOfficesCriteria'
        description: Request object for creating Tax Offices.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Tax Offices
      tags:
      - ChainConfig
      x-codegen-request-body-name: taxOfficesCriteria
  /taxOffices/{taxOfficeId}:
    delete:
      description: Use this API to delete Tax Offices. <p><strong>OperationId:</strong>removeTaxOffices</p>
      operationId: removeTaxOffices
      parameters:
      - description: Unique ID of Tax Offices.
        in: path
        name: taxOfficeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Tax Offices
      tags:
      - ChainConfig
    put:
      description: Use this API to update Tax Offices. <p><strong>OperationId:</strong>changeTaxOffices</p>
      operationId: changeTaxOffices
      parameters:
      - description: Unique ID of Tax Offices.
        in: path
        name: taxOfficeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/taxOfficesToBeChanged'
        description: Request object for changing Tax Offices.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Tax Offices
      tags:
      - ChainConfig
      x-codegen-request-body-name: taxOfficesToBeChanged
  /template/customNumbers:
    delete:
      description: You can use this API to remove template custom number configuration.
        <p><strong>OperationId:</strong>deleteTemplateCustomNumber</p>
      operationId: deleteTemplateCustomNumber
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: configurationId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove template custom number configuration.
      tags:
      - CashieringConfig
    get:
      description: You can use this API to fetch template custom number configuration.
        <p><strong>OperationId:</strong>getTemplateCustomNumbers</p>
      operationId: getTemplateCustomNumbers
      parameters:
      - description: Indicator that tells whether to return the inactive custom number
          configuration in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: configurationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateCustomNumberConfigDetails'
          description: Response object for fetching template custom number configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateCustomNumbers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch template custom number configuration.
      tags:
      - CashieringConfig
    post:
      description: You can use this API to create a new template custom number configuration.
        <p><strong>OperationId:</strong>postTemplateCustomNumber</p>
      operationId: postTemplateCustomNumber
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCustomNumberConfig'
        description: Request object to create a new template custom number configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create a new template custom number configuration.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateCustomNumberConfig
    put:
      description: You can use this API to change template custom number configuration.
        <p><strong>OperationId:</strong>putTemplateCustomNumber</p>
      operationId: putTemplateCustomNumber
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateCustomNumberConfig'
        description: Request object to change template custom number configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response object to change template custom number configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change template custom number configuration.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateCustomNumberConfig
  /templateTransactionCodes:
    delete:
      description: Operation to remove template transaction codes. <p><strong>OperationId:</strong>deleteTemplateTransactionCodes</p>
      operationId: deleteTemplateTransactionCodes
      parameters:
      - explode: true
        in: query
        name: transactionCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TemplateTransactionCodes.
      tags:
      - CashieringConfig
    get:
      description: "Use this API to return template transaction codes summaries based\
        \ on search criteria such as transactionGroupCodes, transactionSubgroupsCodes,\
        \ transactionCodes, wildCard, etc.<p><strong>OperationId:</strong>getTemplateTransactionCodes</p>"
      operationId: getTemplateTransactionCodes
      parameters:
      - description: "Flag to indicate whether comp accounting transaction codes are\
          \ being requested. If true, only comp accounting transaction codes will\
          \ be returned. If false, only standard transaction codes will be returned."
        example: "false"
        in: query
        name: compTransactionCodes
        schema:
          type: boolean
      - description: Inactive flag used to include/exclude inactive transaction codes
          from the search result
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the Transaction code.
        in: query
        name: description
        schema:
          type: string
      - description: Property associated with the corporate information brand code
          in the search criteria
        in: query
        name: brandCode
        schema:
          type: string
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionCodes'
          description: Response object for fetching template transaction codes summary.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get template transaction codes
      tags:
      - CashieringConfig
    post:
      description: Use this API to create template transaction codes.<p><strong>OperationId:</strong>postTemplateTransactionCodes</p>
      operationId: postTemplateTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionCodes'
        description: Request object for creating new template transaction codes configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post template transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionCodes
    put:
      description: Operation to change template transaction codes. <p><strong>OperationId:</strong>putTemplateTransactionCodes</p>
      operationId: putTemplateTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionCodes'
        description: Request object for changing existing template transaction codes
          configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TemplateTransactionCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionCodes
  /templateTransactionGroups:
    delete:
      description: Operation to remove existing template transaction group. <p><strong>OperationId:</strong>deleteTemplateTransactionGroups</p>
      operationId: deleteTemplateTransactionGroups
      parameters:
      - explode: true
        in: query
        name: templateTransactionCodes
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TemplateTransactionGroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch template transaction group. <p><strong>OperationId:</strong>getTemplateTransactionGroups</p>
      operationId: getTemplateTransactionGroups
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Wrapper Transaction Type.
        in: query
        name: transactionGroupType
        schema:
          enum:
          - Revenue
          - Payment
          - Wrapper
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionGroups'
          description: Response object for fetch template transaction groups
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TemplateTransactionGroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create new template transaction group. <p><strong>OperationId:</strong>postTemplateTransactionGroups</p>
      operationId: postTemplateTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionGroups'
        description: Request object for creating new Template Transaction Groups Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TemplateTransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionGroups
    put:
      description: Operation to change existing template transaction group. <p><strong>OperationId:</strong>putTemplateTransactionGroups</p>
      operationId: putTemplateTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionGroups'
        description: Request object to changing Template Transaction Groups Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TemplateTransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionGroups
  /templateTransactionSubGroups:
    delete:
      description: Operation to remove template transaction subgroups <p><strong>OperationId:</strong>deleteTemplateTransactionSubgroups</p>
      operationId: deleteTemplateTransactionSubgroups
      parameters:
      - description: Template transaction subgroup configuration code
        explode: true
        in: query
        name: subgroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Template transaction group configuration code
        explode: true
        in: query
        name: group
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch template transaction subgroups <p><strong>OperationId:</strong>getTemplateTransactionSubgroups</p>
      operationId: getTemplateTransactionSubgroups
      parameters:
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateTransactionSubgroups'
          description: Response object for fetch template transaction subgroups configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateTransactionSubgroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create template transaction subgroups <p><strong>OperationId:</strong>postTemplateTransactionSubgroups</p>
      operationId: postTemplateTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionSubgroups'
        description: Request object for creating new template transaction subgroups
          configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionSubgroups
    put:
      description: Operation to change template transaction subgroups <p><strong>OperationId:</strong>putTemplateTransactionSubgroups</p>
      operationId: putTemplateTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateTransactionSubgroups'
        description: Request object for changing existing template transaction subgroups
          configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TemplateTransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: templateTransactionSubgroups
  /transactionArrangementCodes:
    get:
      description: ' <p><strong>OperationId:</strong>getTransactionArrangementCodes</p>'
      operationId: getTransactionArrangementCodes
      parameters:
      - description: Hotel code for which the transaction codes belong to.
        in: query
        name: hotelId
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionArrangementCodes'
          description: Response object for fetching transaction codes with associated
            arrangement codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionArrangementCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionArrangementCodes.
      tags:
      - CashieringConfig
  /transactionCodeAccessRoles/set:
    put:
      description: Operation to Set Transaction Code Access Roles. <p><strong>OperationId:</strong>setTransactionCodeAccessRoles</p>
      operationId: setTransactionCodeAccessRoles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionCodeAccessRoles'
        description: Request object for Setting a Transaction Code Access Roles
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set TransactionCodeAccessRoles.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionCodeAccessRoles
  /transactionCodeOwnership:
    put:
      description: Operation to change ownership of transaction code. <p><strong>OperationId:</strong>putTransactionCodeOwnership</p>
      operationId: putTransactionCodeOwnership
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionCodeOwnership'
        description: Request object for changing ownership of selected transaction
          codes operation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TransactionCodeOwnership.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionCodeOwnership
  /transactionCodes:
    get:
      description: "Use this API to return transaction codes based on search criteria\
        \ such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes,\
        \ description, etc.. <p><strong>OperationId:</strong>getTransactionCodes</p>"
      operationId: getTransactionCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Flag to indicate whether comp accounting transaction codes are\
          \ being requested. If true, only comp accounting transaction codes will\
          \ be returned. If false, only standard transaction codes will be returned."
        example: "false"
        in: query
        name: compTransactionCodes
        schema:
          type: boolean
      - description: Inactive flag used to include/exclude inactive transaction codes
          from the search result
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the Transaction code.
        in: query
        name: description
        schema:
          type: string
      - description: Property associated with the corporate information brand code
          in the search criteria
        in: query
        name: brandCode
        schema:
          type: string
      - description: Unique Universal product code search criteria.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionCodes'
          description: Response object for fetching hotel's transaction codes summary.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionCodes.
      tags:
      - CashieringConfig
    post:
      description: Use this API to create transaction codes for a specific property.<p><strong>OperationId:</strong>postTransactionCodes</p>
      operationId: postTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionCodes'
        description: Request object for creating new Transaction Codes Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionCodes
    put:
      description: Use this API to update transaction codes for a specific property.<p><strong>OperationId:</strong>putTransactionCodes</p>
      operationId: putTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionCodes'
        description: Request object for changing existing Transaction Codes Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionCodes'
          description: Response object for changing existing Transaction Codes Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Put transaction codes
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionCodes
  /transactionCodes/copy:
    put:
      description: Operation to copy transaction codes. <p><strong>OperationId:</strong>copyTransactionCodes</p>
      operationId: copyTransactionCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionCodesCopy'
        description: Request object for copying transaction codes in the configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy TransactionCodes.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionCodesCopy
  /transactionDiscounts:
    get:
      description: Operation to fetch Transaction Discounts. <p><strong>OperationId:</strong>getTransactionDiscounts</p>
      operationId: getTransactionDiscounts
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Discount codes to be searched.
        explode: true
        in: query
        name: transactionDiscountCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Description text set to the search criteria
        in: query
        name: description
        schema:
          maxLength: 2000
          type: string
      - description: The rule type on which the transaction discount is based.
        in: query
        name: ruleType
        schema:
          enum:
          - Membership
          type: string
      - description: Membership Types set to the search criteria
        explode: true
        in: query
        name: membershipTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership Levels set to the search criteria
        explode: true
        in: query
        name: membershipLevels
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "When this fetch instruction is passed, the details of article\
          \ codes and transaction codes attached to the transaction discount are fetched."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - IncludeCodes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicator that tells whether to include inactive transaction
          discounts in search results.
        example: "false"
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionDiscounts'
          description: Response object for fetching Transaction Discount Configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: No transaction discounts found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionDiscounts.
      tags:
      - CashieringConfig
    post:
      description: Use this API to create transaction discounts for a specific hotel.
        <p><strong>OperationId:</strong>postTransactionDiscounts</p>
      operationId: postTransactionDiscounts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiscount'
        description: Request object for creating new Transaction Discount Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TransactionDiscounts.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionDiscount
  /transactionDiversionRules:
    get:
      description: Operation to fetch Transaction Diversion Rules. <p><strong>OperationId:</strong>getTransactionDiversionRules</p>
      operationId: getTransactionDiversionRules
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: ruleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: "The rule type on which the Transaction Diversion Rule is based.\
          \ If a reservation has any of the following code, Transaction Diversion\
          \ rule gets active for that reservation"
        in: query
        name: type
        schema:
          enum:
          - Vip
          - Membership
          type: string
      - description: User defined message for the Transaction Diversion Rule.
        in: query
        name: description
        schema:
          type: string
      - description: Reservation level.
        in: query
        name: level
        schema:
          enum:
          - Property
          - Reservation
          type: string
      - explode: true
        in: query
        name: membershipTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypeLevels
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionDiversionRules'
          description: Response object for information regarding Transaction Diversion
            Rule
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionDiversionRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionDiversionRules.
      tags:
      - CashieringConfig
    post:
      description: Operation to create Transaction Diversion Rules. <p><strong>OperationId:</strong>postTransactionDiversionRules</p>
      operationId: postTransactionDiversionRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiversionRules'
        description: Request object for creating a Transaction Diversion Rule
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TransactionDiversionRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionDiversionRules
    put:
      description: Operation to change Transaction Diversion Rules. <p><strong>OperationId:</strong>putTransactionDiversionRules</p>
      operationId: putTransactionDiversionRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiversionRules'
        description: Request object for modifying an existing Transaction Diversion
          Rule
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TransactionDiversionRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionDiversionRules
  /transactionDiversionRules/remove:
    put:
      description: Operation to remove Transaction Diversion Rules. <p><strong>OperationId:</strong>removeTransactionDiversionRules</p>
      operationId: removeTransactionDiversionRules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiversionRules'
        description: Request object for deleting an existing Transaction Diversion
          Rule
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionDiversionRules.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionDiversionRules
  /transactionGenerates:
    put:
      description: Operation to remove transaction generates. <p><strong>OperationId:</strong>removeTransactionGenerates</p>
      operationId: removeTransactionGenerates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionGenerates'
        description: Request to remove transaction generates.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionGenerates.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionGenerates
  /transactionGroups:
    delete:
      description: Operation to remove transaction groups. <p><strong>OperationId:</strong>deleteTransactionGroups</p>
      operationId: deleteTransactionGroups
      parameters:
      - description: Configuration code.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionGroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch transaction groups. <p><strong>OperationId:</strong>getTransactionGroups</p>
      operationId: getTransactionGroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Wrapper Transaction Type.
        in: query
        name: transactionGroupType
        schema:
          enum:
          - Revenue
          - Payment
          - Wrapper
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionGroups'
          description: Response object for fetching Transaction Groups Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionGroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create transaction groups. <p><strong>OperationId:</strong>postTransactionGroups</p>
      operationId: postTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionGroups'
        description: Request object for creating new Transaction Groups Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionGroups
    put:
      description: Operation to change transaction groups. <p><strong>OperationId:</strong>putTransactionGroups</p>
      operationId: putTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionGroups'
        description: Request object for changing existing Transaction Groups Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionGroups
  /transactionGroups/copy:
    put:
      description: Operation to copy transaction groups. <p><strong>OperationId:</strong>copyTransactionGroups</p>
      operationId: copyTransactionGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionGroupsCopy'
        description: List of the transaction groups to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy TransactionGroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionGroupsCopy
  /transactionSubGroups:
    delete:
      description: Operation to remove transaction sub groups. <p><strong>OperationId:</strong>deleteTransactionSubgroups</p>
      operationId: deleteTransactionSubgroups
      parameters:
      - description: Template transaction subgroup configuration code
        explode: true
        in: query
        name: subgroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Template transaction group configuration code
        explode: true
        in: query
        name: group
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code where the transaction subgroup is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to delete TransactionSubgroups.
      tags:
      - CashieringConfig
    get:
      description: Operation to fetch transaction sub groups. <p><strong>OperationId:</strong>getTransactionSubgroups</p>
      operationId: getTransactionSubgroups
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transactionGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transactionSubgroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelTransactionSubgroups'
          description: Response object for fetching Transaction Subgroups Configuration.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionSubgroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch TransactionSubgroups.
      tags:
      - CashieringConfig
    post:
      description: Operation to create transaction sub groups. <p><strong>OperationId:</strong>postTransactionSubgroups</p>
      operationId: postTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionSubgroups'
        description: Request object for creating new Transaction Subgroups Configuration.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create TransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionSubgroups
    put:
      description: Operation to change transaction sub groups. <p><strong>OperationId:</strong>putTransactionSubgroups</p>
      operationId: putTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelTransactionSubgroups'
        description: Request object for changing existing Transaction Subgroups Configuration.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change TransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: hotelTransactionSubgroups
  /transactionSubGroups/copy:
    put:
      description: Operation to copy transaction subgroups <p><strong>OperationId:</strong>copyTransactionSubgroups</p>
      operationId: copyTransactionSubgroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionSubgroupsCopy'
        description: Request object to copy transaction subgroups to the properties
          specified.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy TransactionSubgroups.
      tags:
      - CashieringConfig
      x-codegen-request-body-name: transactionSubgroupsCopy
components:
  schemas:
    aRAccountRefType:
      description: AR account Info.
      properties:
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: AR account name.
          maxLength: 200
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRAccountType:
      description: Accounts Receivabales Account details type.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        accountTypeDescription:
          description: The description of the Account Type.
          maxLength: 2000
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/addressInfoType'
        agingInfo:
          $ref: '#/components/schemas/aRAgingInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        batchStatement:
          description: Include In Batch Statement
          type: boolean
        contactName:
          description: The person to contact for this Account.
          maxLength: 200
          minLength: 0
          type: string
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        emailStatementsReminders:
          description: Indicates if the Account has opted to send the statements and
            reminders to the Account email address by default.
          type: boolean
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        lastReminderInfo:
          $ref: '#/components/schemas/aRAccountType_lastReminderInfo'
        lastStatementInfo:
          $ref: '#/components/schemas/aRAccountType_lastStatementInfo'
        monthEndCalcYN:
          description: Month End Calculation.
          type: boolean
        notes:
          description: The Note details attached to the Account.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        paymentDueDays:
          description: Number of days on which person can make payment.
          maxLength: 20
          minLength: 0
          type: string
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        permanent:
          description: Indicates if this is a Permanent Account. Permanent Accounts
            cannot be deleted.
          type: boolean
        primary:
          description: Indicates if this Account is the Primary Account for this Guest/Company.
          type: boolean
        printFoliosWithStatement:
          description: Indicates if associated folios should be printed by default
            with the statement.
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
        summary:
          $ref: '#/components/schemas/aRBalanceType'
        telephones:
          description: The Telephone and Fax details attached to the Account.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        traces:
          description: The Trace details attached to the Account.
          items:
            $ref: '#/components/schemas/traceType'
          maxItems: 4000
          type: array
        type:
          description: The type of Account.
          maxLength: 20
          minLength: 0
          type: string
        yearViewInfo:
          $ref: '#/components/schemas/aRYearViewInfoType'
      type: object
    aRAccountTypeType:
      description: Information which uniquely identifies account type
      properties:
        accountType:
          description: Account receivable account type
          maxLength: 20
          minLength: 0
          type: string
        creditLimit:
          description: Maximum credit available for account type
          type: number
        description:
          description: Full description of account type
          maxLength: 2000
          minLength: 0
          type: string
        financeCharge:
          $ref: '#/components/schemas/aRFinanceChargeType'
        hotelId:
          description: Property associated with account type
          maxLength: 20
          minLength: 0
          type: string
        printPreference:
          $ref: '#/components/schemas/aRPrintPreferenceType'
        reminderCycle:
          $ref: '#/components/schemas/aRReminderCycleType'
        reminderDelayDays:
          description: "Defines the number of days(aging) within which the payment\
            \ must be made for a account type, if not a reminder is generated."
          type: integer
        statementMode:
          $ref: '#/components/schemas/statementType'
        statementName:
          description: Statement file name that account receivable account types uses
          maxLength: 80
          minLength: 0
          type: string
        statementNameDesc:
          description: Description associated with statement file name
          maxLength: 1000
          minLength: 0
          type: string
      type: object
    aRAccountTypesType:
      description: Holds collection of account types
      items:
        $ref: '#/components/schemas/aRAccountTypeType'
      maxItems: 4000
      type: array
    aRAgingInfoType:
      description: Information regarding the aging balances for an account.
      properties:
        aging:
          description: The debit and credit balance per Aging bucket.
          items:
            $ref: '#/components/schemas/aRAgingType'
          maxItems: 4000
          type: array
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
      type: object
    aRAgingType:
      description: Aging information for an Aging Bucket.
      properties:
        agingBucketRange:
          description: "The bucket description in terms of days. Example : 0-31 days"
          maxLength: 20
          minLength: 0
          type: string
        agingDate:
          $ref: '#/components/schemas/dateRangeType'
        agingEndDay:
          description: "The end number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 60."
          type: integer
        agingStartDay:
          description: "The start number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 31."
          type: integer
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        sequence:
          description: The sequence for display.
          type: integer
      type: object
    aRBalanceType:
      description: Balance information for AR.
      properties:
        credit:
          $ref: '#/components/schemas/currencyAmountType'
        debit:
          $ref: '#/components/schemas/currencyAmountType'
        total:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRDaysCycleType:
      description: Reminder letters will be generated based on the number of days
        for which the account has had an outstanding balance
      items:
        $ref: '#/components/schemas/aRDaysReminderCycleType'
      maxItems: 4000
      type: array
    aRDaysReminderCycleType:
      description: Custom reminder cycles determine which to generated statements
        for the account with outstanding balances
      properties:
        accountTypeReminderCycleId:
          $ref: '#/components/schemas/uniqueID_Type'
        noOfDays:
          description: Number of days in the reminder cycle
          type: integer
        reportName:
          description: File name for the reminder letter to be granted for this cycle
          maxLength: 80
          minLength: 0
          type: string
      type: object
    aREndOfMonthCycleType:
      description: Reminder letters will be generated at the end of each month if
        user specifies this element
      properties:
        reportName:
          description: Reminder letter file name for the reminder letter to be generated
            at the end of month
          maxLength: 80
          minLength: 0
          type: string
        reportNameDesc:
          description: Description associated with reminder letter.
          maxLength: 1000
          minLength: 0
          type: string
      type: object
    aRFinanceChargeType:
      description: Finance charges will allow user to post a flat amount or percentage
        finance charge based on user-defined cycle.
      properties:
        daysOlderThan:
          description: Number of days after which an outstanding balance triggers
          type: integer
        financeCharge:
          description: "Determines how the finance charge will be applied to outstanding\
            \ balance valid values are F, P"
          maxLength: 1
          minLength: 1
          type: string
        financeChargeValue:
          description: Amount or percentage value
          type: number
        includeUnallocatedPayments:
          description: If true unallocated payments are subtracted from the outstanding
            balances before finance charge is calculated
          type: boolean
        postOnDay:
          description: Day of the month when the end of day procedure should run
          type: integer
      type: object
    aRFlaggedReasonType:
      description: Details for AR Flagged Reason.
      properties:
        code:
          description: AR Flagged Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of AR Flagged Reason.
          maxLength: 2000
          minLength: 0
          type: string
        displaySequence:
          description: Display sequence for AR Flagged Reason.
          type: number
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRFlaggedReasonsType:
      description: List of the Flagged Reason to be configured or fetched
      items:
        $ref: '#/components/schemas/aRFlaggedReasonType'
      maxItems: 4000
      type: array
    aRInvoiceCategory:
      enum:
      - Normal
      - Credit
      - OldBalance
      - PasserBy
      type: string
    aRInvoiceType:
      description: Details of an AR Invoice.
      properties:
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        adjusted:
          type: boolean
        age:
          description: The Aging age of the invoice
          type: integer
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioNo:
          description: Folio Number.
          type: number
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        parentInvoiceNo:
          type: number
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        transferredIn:
          type: boolean
        transferredOut:
          type: boolean
      type: object
    aRInvoicesType:
      description: A collection of AR Invoices.
      items:
        $ref: '#/components/schemas/aRInvoiceType'
      maxItems: 4000
      type: array
    aRPaymentType:
      description: Details of an AR Payment.
      properties:
        age:
          description: The Aging age of the payment.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountUsed:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        sequenceNo:
          description: "When this PostingType is used to return the postings generated\
            \ by a batch request, the sequence number is used to relate to the Request's\
            \ sequence number."
          type: integer
        transactionCode:
          description: Transaction code of the Payment.
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Date of the Payment.
          format: date
          type: string
        transactionNo:
          description: Unique Transaction Identifier of the Payment.
          type: number
        transferDate:
          description: Transfer of the invoice.
          format: date
          type: string
        transferredIn:
          type: boolean
        transferredOut:
          type: boolean
      type: object
    aRPaymentsType:
      description: A collection of AR Payments.
      items:
        $ref: '#/components/schemas/aRPaymentType'
      maxItems: 4000
      type: array
    aRPrintPreferenceType:
      description: Preference type when separate folios has to be included in the
        statement
      enum:
      - InvoicesWithoutDetails
      - InvoicesWithDetails
      - SeparateFolios
      type: string
    aRReminderCycleType:
      description: When reminder letters needs to be generated. user can choose from
        End of month or Day cycle
      properties:
        daysCycle:
          description: Reminder letters will be generated based on the number of days
            for which the account has had an outstanding balance
          items:
            $ref: '#/components/schemas/aRDaysReminderCycleType'
          maxItems: 4000
          type: array
        endOfMonthCycle:
          $ref: '#/components/schemas/aREndOfMonthCycleType'
      type: object
    aRYearViewInfoType:
      description: Information regarding Year View balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        yearView:
          description: The debit and credit balance per account.
          items:
            $ref: '#/components/schemas/aRYearViewType'
          maxItems: 4000
          type: array
      type: object
    aRYearViewType:
      description: Year information for an Year View.
      properties:
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        runningTotal:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
      type: object
    adjustmentCodeType:
      description: Provides information about Adjustment Codes.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountOrPercentageFlag:
          $ref: '#/components/schemas/amountOrPercentage'
        bIRGuest:
          description: BIR Guest Type in Adjustment Codes.
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: Adjustment Reason Code
          maxLength: 20
          minLength: 0
          type: string
        codeType:
          $ref: '#/components/schemas/adjustmentReasonCodeType'
        description:
          description: Adjustment Reason Description
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    adjustmentCodes:
      properties:
        adjustmentCodes:
          description: Holds Adjustment Code details.
          items:
            $ref: '#/components/schemas/adjustmentCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    adjustmentCodesCopy:
      properties:
        adjustmentCode:
          description: List of the Adjustment Codes to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    adjustmentCodesType:
      description: Holds Adjustment Code details.
      items:
        $ref: '#/components/schemas/adjustmentCodeType'
      maxItems: 4000
      type: array
    adjustmentReasonCodeType:
      description: "Defines values for Adjustment reason codes. e.g. ADJ for adjustment,\
        \ COR for correction, DEL for deletion."
      enum:
      - Adjustment
      - Correction
      - Deletion
      - ServiceRecovery
      - CreditBill
      type: string
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
        expectedReturnTime:
          description: Expected Return Time
          format: date-time
          type: string
      type: object
    amountOrPercentage:
      description: Adjustment Code calculation type based on details.
      enum:
      - Amount
      - Percent
      type: string
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          format: date-time
          type: string
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
      type: object
    applicationSecureSetting:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        settings:
          description: Contains a single application setting to update.
          items:
            $ref: '#/components/schemas/applicationSecureSettingType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    applicationSecureSettingType:
      description: Internal settings that is mainly used to get a secure information
        on the type.
      properties:
        levelCode:
          maxLength: 20
          minLength: 0
          type: string
        levelType:
          $ref: '#/components/schemas/applicationSettingLevelType'
        name:
          maxLength: 80
          minLength: 0
          type: string
        securedValue:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    applicationSettingLevelType:
      enum:
      - Global
      - Hotel
      - Cro
      type: string
    applicationUserType:
      description: Information to uniquely identify an application user
      properties:
        appUser:
          description: Name of the application user
          maxLength: 140
          minLength: 0
          type: string
        appUserId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    arAccountTypes:
      description: Request object for changing account types.
      properties:
        accountTypes:
          description: Holds collection of account types
          items:
            $ref: '#/components/schemas/aRAccountTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    arFlaggedReasons:
      description: Response for fetching Flagged Reasons.
      properties:
        aRFlaggedReasons:
          description: List of the Flagged Reason to be configured or fetched
          items:
            $ref: '#/components/schemas/aRFlaggedReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    articles:
      description: Request to change articles.
      properties:
        articles:
          description: Holds collection of articles.
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    articlesInfo:
      properties:
        articles:
          description: Holds collection of articles.
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    articlesType:
      description: Holds collection of articles.
      items:
        $ref: '#/components/schemas/articleInfoType'
      maxItems: 4000
      type: array
    authBillingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/codeDescriptionType'
      maxItems: 4000
      type: array
    authTransactionCodesType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/codeDescriptionType'
      maxItems: 4000
      type: array
    authorizationConfigRuleType:
      description: Authorization configuration Rule Type.Authorization Rules specify
        the rule (or rules) that the property uses for credit card authorizations
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        guaranteeCode:
          description: Guarantee code associated to this rule.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Property associated with authorization rule
          maxLength: 20
          minLength: 0
          type: string
        ignoreDepositsYN:
          description: Ignore deposits paid for calculation of the amount to be authorized.
          type: boolean
        maxDaysToAuthorize:
          description: "A maximum of two digits to set the number of days to authorize\
            \ for a credit card. If the field is left blank, authorizations will be\
            \ done for the entire stay duration of the reservation"
          type: integer
        percentage:
          description: Percentage to be applied to all rules with a percentage configured
            in the formula.
          maximum: 100
          minimum: 0
          type: number
        rateCategory:
          $ref: '#/components/schemas/rateCategoryType'
        rateCode:
          description: Rate code associated to this rule.
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        roomType:
          description: Authorization rule Room type.
          maxLength: 20
          minLength: 0
          type: string
        ruleDescription:
          description: Rule Number description for current authorization.
          maxLength: 200
          minLength: 0
          type: string
        ruleNo:
          description: Rule Number for current authorization.
          type: integer
        sourceCode:
          $ref: '#/components/schemas/sourceCodeInfoType'
      type: object
    authorizationConfigRules:
      properties:
        authorizationConfigRulesType:
          description: List of AuthorizationRuleType.
          items:
            $ref: '#/components/schemas/authorizationConfigRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationConfigRulesInfo:
      properties:
        authorizationConfigRulesType:
          description: List of AuthorizationRuleType.
          items:
            $ref: '#/components/schemas/authorizationConfigRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationConfigRulesType:
      description: List of AuthorizationRuleType.
      items:
        $ref: '#/components/schemas/authorizationConfigRuleType'
      maxItems: 4000
      type: array
    authorizationRule:
      properties:
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        code:
          description: The authorization rule code.
          type: integer
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    authorizerGroupType:
      description: A representation of the information contained by a Authorizer Group.
      properties:
        code:
          description: Authorizer Group code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Authorizer Group.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code to which the Authorizer Group belongs to.
          maxLength: 20
          minLength: 0
          type: string
        rateCode:
          description: Rate Code of the Authorizer Group.
          maxLength: 20
          minLength: 0
          type: string
        transactionLimits:
          description: Set of Transaction Limit configured for the Authorizer Group.
          items:
            $ref: '#/components/schemas/authorizerTrxLimitType'
          maxItems: 4000
          type: array
      type: object
    authorizerGroups:
      properties:
        authorizerGroups:
          description: Authorizer Group
          items:
            $ref: '#/components/schemas/authorizerGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizerGroupsCriteriaType:
      description: Criteria to change authorizer group.
      properties:
        authorizerGroups:
          description: Authorizer Group
          items:
            $ref: '#/components/schemas/authorizerGroupType'
          maxItems: 4000
          type: array
        updateAuthorizers:
          description: "If true, updates all authorizers in the group."
          type: boolean
      type: object
    authorizerGroupsToChange:
      properties:
        criteria:
          $ref: '#/components/schemas/authorizerGroupsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizerGroupsType:
      description: Authorizer Group
      items:
        $ref: '#/components/schemas/authorizerGroupType'
      maxItems: 4000
      type: array
    authorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
      type: object
    authorizerTrxLimitType:
      description: A representation of the information of Transaction Limit.
      properties:
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        creditLimit:
          description: Credit Limit for a transaction.
          type: number
        groupHeaderId:
          description: Group Header Id for a transaction row.
          type: number
        occurrenceLimit:
          description: Occurrence Limit for a transaction.
          type: number
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
      type: object
    authorizerTrxLimitsType:
      description: Set of Transaction Limit configured for the Authorizer Group.
      items:
        $ref: '#/components/schemas/authorizerTrxLimitType'
      maxItems: 4000
      type: array
    autoFolioSettlementTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    autoFolioSettlementTypesCriteria:
      description: Request object for creating Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesDetails:
      description: Response object for fetching Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesToBeChanged:
      description: Request object for changing Auto Folio Settlement Types.
      properties:
        autoFolioSettlementTypes:
          description: List of Auto Folio Settlement Types.
          items:
            $ref: '#/components/schemas/autoFolioSettlementTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoFolioSettlementTypesType:
      description: List of Auto Folio Settlement Types.
      items:
        $ref: '#/components/schemas/autoFolioSettlementTypeType'
      maxItems: 4000
      type: array
    bankAccounts:
      description: Request object to edit Bank Accounts
      properties:
        bankAccounts:
          description: List of bank accounts.
          items:
            $ref: '#/components/schemas/configBankAccountType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        updateDefault:
          description: Update default confirmation response
          type: boolean
        updateDefaultForCurrency:
          description: Update default for currency confirmation response
          type: boolean
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bankAccountsInfo:
      description: Response for fetching Bank Accounts
      properties:
        bankAccounts:
          description: List of bank accounts.
          items:
            $ref: '#/components/schemas/configBankAccountType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
      type: object
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    bucketRedemptionCodeType:
      description: This gives detailed information about redemption code.
      properties:
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        compTransactionCode:
          $ref: '#/components/schemas/compTrxInfoType'
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bucketRedemptionCodesType:
      description: Details for Bucket Redemption codes along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/bucketRedemptionCodeType'
      maxItems: 4000
      type: array
    bucketTypeType:
      description: Fiscal Bucket Type.
      enum:
      - Default
      - Fiscal
      type: string
    budgetForecastCateringInfoBaseType:
      description: Budget Forecast information for budget Catering codes.
      properties:
        cateringCodeInformation:
          description: Budget Forecast information for Catering segment code .
          items:
            $ref: '#/components/schemas/cateringCodeInformationBaseType'
          maxItems: 4000
          type: array
        covers:
          description: Flag to indicate if covers information has to be included.
          type: boolean
        revenue:
          description: Flag to indicate if revenue information has to be included.
          type: boolean
      type: object
    budgetForecastCateringInfoType:
      description: Budget Forecast information for budget Catering codes.
      properties:
        cateringCodeInformation:
          description: Budget Forecast totals information for Catering segment.
          items:
            $ref: '#/components/schemas/cateringCodeInformationType'
          maxItems: 4000
          type: array
        cateringTotalsInformation:
          $ref: '#/components/schemas/cateringTotalsInformationType'
      type: object
    budgetForecastCustomInfoBaseType:
      description: Budget Forecast information for budget Custom codes.
      properties:
        customCodeInformation:
          description: Budget Forecast information for Custom segment code .
          items:
            $ref: '#/components/schemas/customCodeInformationBaseType'
          maxItems: 4000
          type: array
        customValue:
          description: Flag to indicate if values information has to be included.
          type: boolean
      type: object
    budgetForecastCustomInfoType:
      description: Budget Forecast information for budget Custom codes.
      properties:
        customCodeInformation:
          description: Budget Forecast information for Custom segment code .
          items:
            $ref: '#/components/schemas/customCodeInformationType'
          maxItems: 4000
          type: array
        customCodeTotalInformation:
          $ref: '#/components/schemas/customCodeTotalInformationType'
      type: object
    budgetForecastInformation:
      properties:
        budgetForecastInformation:
          $ref: '#/components/schemas/budgetForecastInformationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    budgetForecastInformationBase:
      properties:
        budgetForecastInformation:
          $ref: '#/components/schemas/budgetForecastInformationBaseType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    budgetForecastInformationBaseType:
      description: Holds budget forecast information for included segment types.
      properties:
        cateringSegmentInformation:
          $ref: '#/components/schemas/budgetForecastCateringInfoBaseType'
        customSegmentInformation:
          $ref: '#/components/schemas/budgetForecastCustomInfoBaseType'
        hotelId:
          description: Opera Hotel code for the Fetch Revenue information.
          maxLength: 20
          minLength: 0
          type: string
        marketSegmentInformation:
          $ref: '#/components/schemas/budgetForecastMarketInfoBaseType'
        rateSegmentInformation:
          $ref: '#/components/schemas/budgetForecastRateInfoBaseType'
        transactionSegmentInformation:
          $ref: '#/components/schemas/budgetForecastTransactionInfoBaseType'
        year:
          description: Year of revenue to be fetched.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    budgetForecastInformationType:
      description: Holds budget forecast information for included segment types.
      properties:
        cateringSegmentInformation:
          $ref: '#/components/schemas/budgetForecastCateringInfoType'
        customSegmentInformation:
          $ref: '#/components/schemas/budgetForecastCustomInfoType'
        marketSegmentInformation:
          $ref: '#/components/schemas/budgetForecastMarketInfoType'
        rateSegmentInformation:
          $ref: '#/components/schemas/budgetForecastRateInfoType'
        transactionSegmentInformation:
          $ref: '#/components/schemas/budgetForecastTransactionInfoType'
      type: object
    budgetForecastMarketInfoBaseType:
      description: Budget Forecast information for budget segment codes.
      properties:
        marketCodeInformation:
          description: Budget Forecast information for budget segment code .
          items:
            $ref: '#/components/schemas/marketCodeInformationBaseType'
          maxItems: 4000
          type: array
        nights:
          description: Flag to indicate if nights information is included.
          type: boolean
        revenue:
          description: Flag to indicate if revenue information is included.
          type: boolean
      type: object
    budgetForecastMarketInfoType:
      description: Budget Forecast information for budget segment codes.
      properties:
        marketCodeInformation:
          description: Budget Forecast information for segment.
          items:
            $ref: '#/components/schemas/marketCodeInformationType'
          maxItems: 4000
          type: array
        marketCodeTotalInformation:
          $ref: '#/components/schemas/marketCodeTotalInformationType'
      type: object
    budgetForecastRateInfoBaseType:
      description: Budget Forecast information for budget segment codes.
      properties:
        nights:
          description: Flag to indicate if nights information has to be included.
          type: boolean
        rateCodeInformation:
          description: Budget Forecast information for budget segment code .
          items:
            $ref: '#/components/schemas/rateCodeInformationBaseType'
          maxItems: 4000
          type: array
        revenue:
          description: Flag to indicate if revenue information has to be included.
          type: boolean
      type: object
    budgetForecastRateInfoType:
      description: Budget Forecast information for budget segment codes.
      properties:
        rateCodeInformation:
          description: Budget Forecast totals information for Rate segment.
          items:
            $ref: '#/components/schemas/rateCodeInformationType'
          maxItems: 4000
          type: array
        rateCodeTotalInformation:
          $ref: '#/components/schemas/rateCodeTotalInformationType'
      type: object
    budgetForecastToDelete:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        segmentCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeBudgetInformationType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    budgetForecastTransactionInfoBaseType:
      description: Budget Forecast information for budget Transaction codes.
      properties:
        revenue:
          description: Flag to indicate if revenue information has to be included.
          type: boolean
        transactionCodeInformation:
          description: Budget Forecast information for Transaction segment code .
          items:
            $ref: '#/components/schemas/transactionCodeInformationBaseType'
          maxItems: 4000
          type: array
      type: object
    budgetForecastTransactionInfoType:
      description: Budget Forecast information for budget Transaction codes.
      properties:
        transactionCodeInformation:
          description: Budget Forecast information for Transaction segment code .
          items:
            $ref: '#/components/schemas/transactionCodeInformationType'
          maxItems: 4000
          type: array
        transactionCodeTotalsInformation:
          $ref: '#/components/schemas/transactionCodeTotalsInformationType'
      type: object
    budgetInfoDeleteType:
      description: Daily information.
      enum:
      - Monthly
      - Daily
      type: string
    calculatePointsType:
      description: Defines when the points are to be calculated.
      enum:
      - Always
      - Prompt
      - Never
      type: string
    calculatePostingCharge:
      description: Corresponds to each charge that will be posted against the transaction
        code based from the test criteria.
      properties:
        amount:
          description: The amount that will be posted against the transaction code.
          type: number
        basePosting:
          description: Indicates whether it is the base posting.
          type: boolean
        bucket:
          $ref: '#/components/schemas/postingBucket'
        description:
          description: Description of the transaction code.
          maxLength: 2000
          minLength: 0
          type: string
        formula:
          description: The formula that is used to calculate the generates.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code of the associated transaction code.
          maxLength: 20
          minLength: 0
          type: string
        level:
          $ref: '#/components/schemas/generateLevelType'
        sequence:
          description: The order in which the charge will be posted. The base posting
            will always be 0 (zero) followed by generates associated in order of which
            they were created.
          type: integer
        transactionCode:
          description: The associated transaction code of the posting.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    calculatePostingResult:
      description: List of charges that will be posted against the transaction code
        based from the test criteria.
      properties:
        charges:
          description: Charges that will be posted based from the criteria defined.
          items:
            $ref: '#/components/schemas/calculatePostingCharge'
          maxItems: 4000
          type: array
        totalAmount:
          description: The full amount that would be posted.
          type: number
      type: object
    calculatedPosting:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        result:
          $ref: '#/components/schemas/calculatePostingResult'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    cardOptionType:
      description: Switch card options.
      properties:
        either:
          description: Indicates that either Issue Number or Start Date is sufficient.
          type: boolean
        requireIssueNumber:
          description: Indicates whether issue number is mandatory or not.
          type: boolean
        requireStartDate:
          description: Indicates whether start date is mandatory or not.
          type: boolean
      type: object
    cardPaymentProcessingType:
      description: Manual Processing.
      enum:
      - Eft
      - Manual
      type: string
    cardPaymentTrxSetupType:
      description: Card Payment Transaction Code configuration details.
      properties:
        accountReceivable:
          $ref: '#/components/schemas/aRAccountRefType'
        commission:
          description: Commission percentage on the payment.
          maximum: 100
          minimum: 0
          type: number
        displayCode:
          description: Display code of the payment Transaction Code.
          maxLength: 8
          minLength: 0
          type: string
        interfaceCode:
          description: Card Payment's internal interface code.
          maxLength: 20
          minLength: 0
          type: string
        processingType:
          $ref: '#/components/schemas/cardPaymentProcessingType'
      type: object
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardRangeType:
      description: Card number start and end range.
      properties:
        from:
          description: Starting range of the card.
          maxLength: 50
          minLength: 0
          type: string
        to:
          description: End range of the card.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    cardRangesType:
      description: Card number start and end range.
      items:
        $ref: '#/components/schemas/cardRangeType'
      maxItems: 4000
      type: array
    cardReaderDelimiters:
      properties:
        delimiters:
          $ref: '#/components/schemas/cardReaderDelimitersType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cardReaderDelimitersType:
      description: Configured delimiters for parsing a card track data based on a
        particular card reader device.
      properties:
        additionalInfoEndSeparator:
          description: Character to be used as Additional Info End Separator.
          maxLength: 3
          minLength: 0
          type: string
        additionalInfoFormatType:
          description: "String to be used to indicate whether KSNField, ET1Field,\
            \ ET2Field should be interpreted as field positions or field IDs."
          type: string
        additionalInfoSeparator:
          description: Character to be used as Additional Info Separator.
          maxLength: 3
          minLength: 0
          type: string
        cardHolderNameSeparator:
          description: Character to be used as Guest Name separator.
          maxLength: 3
          minLength: 0
          type: string
        deviceId:
          description: Device ID to which this delimiter is assigned.
          type: integer
        eT1Field:
          description: "Interpreted as the field position or field ID of Encrypted\
            \ Track 1, depending on the value of Additional Information Format Type."
          type: integer
        eT2Field:
          description: "Interpreted as the field position or field ID of Encrypted\
            \ Track 2, depending on the value of Additional Information Format Type."
          type: integer
        encryptionFormatCode:
          description: Encryption Format Code.
          maxLength: 20
          minLength: 0
          type: string
        endOfTrackSeparator:
          description: Character to be used as End of Track Separator.
          maxLength: 3
          minLength: 0
          type: string
        expirationDateStartCharacter:
          description: Character that will denote the start of Expiry Date.
          maxLength: 3
          minLength: 0
          type: string
        kSNField:
          description: "Interpreted as the field position or field ID of KSN, depending\
            \ on the value of Additional Information Format Type."
          type: integer
        manualTokenPattern:
          description: The Regular Expression pattern of the token that is present
            in the track data if data was inputted manually through the device instead
            of swiping.
          type: string
        secureDevice:
          description: A flag indicating whether the data from the device is encrypted
            or not.
          type: boolean
        softwareId:
          description: Software ID of device.
          maxLength: 20
          minLength: 0
          type: string
        track2Separator:
          description: Character to be used as Track2 Separator.
          maxLength: 3
          minLength: 0
          type: string
        trackDataPattern:
          description: The Regular Expression pattern of the track data that is generated
            by this device.
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardUsageRulesType:
      description: Provides information on the various authorization options for a
        given card type .
      properties:
        addressVerification:
          description: Indicates if this payment method requires an address verification.
          type: boolean
        authorizationAtCheckin:
          description: Indicates if this payment method can be used for Authorization
            at check in.
          type: boolean
        authorizationDuringStay:
          description: Indicates if this payment method can be used for Authorization
            during stay.
          type: boolean
        authorizationReversal:
          description: Indicates if this payment method can be used for Authorization
            reversal can be done.
          type: boolean
        authorizationSettlementAtCheckout:
          description: Indicates if this payment method can be used for Authorization
            settlement can happen during checkout.
          type: boolean
        cVVCheck:
          description: Indicates if this payment method needs CVV check.
          type: boolean
        chipAndPin:
          description: Indicates if this payment method is a chip and pin.
          type: boolean
        promptAtCheckin:
          description: Indicates if this payment method needs a prompt during check
            in.
          type: boolean
      type: object
    cardValidationRuleTypeType:
      description: Defines rules to be used for card validation.
      enum:
      - Mod7
      - Mod10
      - Udef
      - Novalid
      type: string
    cashierId:
      description: The Cashier ID of the Cashier who is currently processing the transaction(s).
      type: number
    cashierInfoType:
      description: Cashier information. Contains Id and Name details of the cashier.
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        cashierName:
          description: Cashier Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    cashierNumber:
      properties:
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierShiftDropLocationType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        hotelId:
          description: Hotel of the record.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cashierShiftDropLocationsCriteria:
      description: Request object for creating Cashier Shift Drop Locations.
      properties:
        cashierShiftDropLocations:
          description: List of Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/cashierShiftDropLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierShiftDropLocationsDetails:
      description: Response object for fetching Cashier Shift Drop Locations.
      properties:
        cashierShiftDropLocations:
          description: List of Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/cashierShiftDropLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierShiftDropLocationsToBeChanged:
      description: Request object for changing Cashier Shift Drop Locations.
      properties:
        cashierShiftDropLocations:
          description: List of Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/cashierShiftDropLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierShiftDropLocationsType:
      description: List of Cashier Shift Drop Locations.
      items:
        $ref: '#/components/schemas/cashierShiftDropLocationType'
      maxItems: 4000
      type: array
    cashierType:
      description: Cashiers Information.
      properties:
        appUsers:
          description: List of application users associated with the cashier
          items:
            $ref: '#/components/schemas/applicationUserType'
          maxItems: 4000
          type: array
        attachedUser:
          description: User(s) assigned to the cashier.
          maxLength: 40
          minLength: 0
          type: string
        cashierId:
          description: Numeric code for cashier ID.
          type: number
        cashierType:
          $ref: '#/components/schemas/cashierTypeType'
        currencyCode:
          description: The currency code used by the hotel that the cashier belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        floatOverShort:
          description: Selected if the cashier is allowed to drop below or above the
            required drop amount.
          type: boolean
        inactive:
          description: Indicator that tells whether the cashier is active or not.
          type: boolean
        kiosk:
          description: Indicator that this cashier is the one to be used by Kiosk
            Partner to carry out postings and payments for the guest.
          type: boolean
        name:
          description: Name assigned to the cashier.
          maxLength: 40
          minLength: 0
          type: string
        open:
          description: Indicator that tells whether the cashier is open or not.
          type: boolean
        startingAmount:
          description: The Starting Amount in the Cashier drawer.
          type: number
        usageInfo:
          $ref: '#/components/schemas/cashierType_usageInfo'
      type: object
    cashierTypeType:
      description: The types of cashier.
      enum:
      - Cashier
      - InterfaceCashier
      - LDAPTemplate
      type: string
    cashieringTransactionTypeType:
      description: Wrapper Transaction Type.
      enum:
      - Revenue
      - Payment
      - Wrapper
      type: string
    cashiers:
      properties:
        cashiers:
          description: Details about a cashier.
          items:
            $ref: '#/components/schemas/cashierType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashiersDetails:
      properties:
        cashiers:
          description: Details about a cashier.
          items:
            $ref: '#/components/schemas/cashierType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashiersType:
      description: Details about a cashier.
      items:
        $ref: '#/components/schemas/cashierType'
      maxItems: 4000
      type: array
    cateringCodeInformationBaseType:
      description: Budget Forecast information for Catering segment code.
      properties:
        budgetInfo:
          $ref: '#/components/schemas/cateringInfoType'
        cateringCode:
          description: Catering segment code for which budget forecast information
            is fetched.
          maxLength: 20
          minLength: 0
          type: string
        cateringCodeDescription:
          description: Catering code description for segment code.
          type: string
        cateringCodeGrp:
          description: Catering code group of segment code.
          type: string
        forecastInfo:
          $ref: '#/components/schemas/cateringInfoType'
      type: object
    cateringCodeInformationType:
      description: Budget Forecast information for Catering segment code.
      properties:
        aBVarianceInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        actualInfo:
          $ref: '#/components/schemas/cateringInfoType'
        budgetInfo:
          $ref: '#/components/schemas/cateringInfoType'
        cateringCode:
          description: Catering segment code for which budget forecast information
            is fetched.
          maxLength: 20
          minLength: 0
          type: string
        cateringCodeDescription:
          description: Catering code description for segment code.
          type: string
        cateringCodeGrp:
          description: Catering code group of segment code.
          type: string
        fBVarianceInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        forecastInfo:
          $ref: '#/components/schemas/cateringInfoType'
      type: object
    cateringInfoType:
      description: Revenue and Covers information for a catering segment code. Holds
        total and monthly information.
      properties:
        monthlyInfo:
          description: Catering information for each month for segment code.
          items:
            $ref: '#/components/schemas/monthlyCateringInfoType'
          maxItems: 12
          type: array
        totalCovers:
          description: Total Covers for segment code.
          type: number
        totalRevenue:
          description: Total revenue for segment code.
          type: number
      type: object
    cateringOnlyType:
      description: For Catering and Event.
      enum:
      - "Yes"
      - "No"
      - Both
      type: string
    cateringTotalsInformationType:
      description: Budget Forecast totals information for Catering segment.
      properties:
        aBVarianceTotalInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceTotalInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        actualTotalInfo:
          $ref: '#/components/schemas/cateringInfoType'
        budgetTotalInfo:
          $ref: '#/components/schemas/cateringInfoType'
        fBVarianceTotalInfo:
          description: Monthly Variance information.
          items:
            $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
          maxItems: 12
          type: array
        forecastTotalInfo:
          $ref: '#/components/schemas/cateringInfoType'
      type: object
    cateringVarianceInfoType:
      description: Monthly Variance information.
      items:
        $ref: '#/components/schemas/monthlyCateringVarianceInfoType'
      maxItems: 12
      type: array
    changeFiscalCommands:
      description: Request object to edit Fiscal Commands.
      properties:
        fiscalPartners:
          description: List of FiscalCommands.
          items:
            $ref: '#/components/schemas/fiscalCommandType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeFiscalPartners:
      description: Request object to edit Fiscal Partners.
      properties:
        fiscalPartners:
          description: Details of Fiscal Partners.
          items:
            $ref: '#/components/schemas/fiscalPartnerType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeTransactionCodeOwnershipType:
      description: Change Transaction Code Ownership configuration details.
      properties:
        hotelId:
          description: Hotel Code for which to update ownership of the Transaction
            codes
          maxLength: 20
          minLength: 0
          type: string
        ownershipStatus:
          $ref: '#/components/schemas/trxOwnershipType'
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    classOfServiceType:
      properties:
        cosChkRg:
          maxLength: 1
          minLength: 0
          type: string
        cosMsgCmdRg:
          maxLength: 1
          minLength: 0
          type: string
        cosMsgLmpRg:
          maxLength: 1
          minLength: 0
          type: string
        definedNameFormat:
          description: Defined name format in the class of service.
          items:
            $ref: '#/components/schemas/definedNameFormatType'
          maxItems: 4000
          type: array
        guestDataChangeCo:
          type: boolean
        resvInQueue:
          description: Indicates whethe a message will be triggered when a room/reservation
            is placed on QUEUE
          type: boolean
        roomEquipCi:
          type: boolean
        roomEquipCo:
          type: boolean
        standardNameFormat:
          description: Standard name format in the class of service.
          maxLength: 5
          minLength: 0
          type: string
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    collectingAgentTaxType:
      description: Type which holds Collecting Agent Taxes primary details.
      properties:
        calculatedOnArrangementCodes:
          description: Collection of Arrangement Codes based on which the Collecting
            Agent Tax will be calculated.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        calculatedOnTransactionCodes:
          description: Collection of Transaction Codes based on which the Collecting
            Agent Tax will be calculated.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        hotelId:
          description: It represents Hotel code
          maxLength: 20
          minLength: 0
          type: string
        newTaxType:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        percentage:
          description: Percentage used to calculate the Taxes
          type: integer
        taxCode:
          description: Primary Key Sequence.
          maximum: 5
          minimum: 1
          type: integer
        taxTransactionCode:
          description: The Transaction Code used to post the Taxes.
          maxLength: 20
          minLength: 0
          type: string
        taxType:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        taxVoid:
          description: Primary Key Sequence.
          maximum: 5
          minimum: 1
          type: integer
        triggerAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    collectingAgentTaxes:
      properties:
        collectingAgentTaxes:
          $ref: '#/components/schemas/collectingAgentTaxesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    collectingAgentTaxesType:
      description: Type which holds collection of Agent Tax details
      properties:
        collectingAgentTax:
          description: It represent Agent Tax details.
          items:
            $ref: '#/components/schemas/collectingAgentTaxType'
          maxItems: 4000
          type: array
        overrideCollectingAgentTaxes:
          description: Flag that indicates if Collecting Agent Taxes check should
            be skipped when given Tax code already exist.
          type: boolean
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        image:
          description: An image for this paragraph.
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    commissionBasedOnType:
      description: Commission based on Revenue.
      enum:
      - Reservation
      - Revenue
      type: string
    commissionCalculationType:
      description: Commission calculation type based on details.
      properties:
        reservationBasedCommission:
          $ref: '#/components/schemas/reservationBasedCommissionType'
        revenueBasedCommission:
          description: Revenue based commission details.
          items:
            $ref: '#/components/schemas/commissionCodeTransactionType'
          maxItems: 4000
          type: array
      type: object
    commissionCodeDetail:
      description: Response object for fetching commission code details.
      properties:
        commissionCodeDetail:
          $ref: '#/components/schemas/commissionCodeDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodeDetailType:
      description: Commission code detail.
      properties:
        commissionCodeInfo:
          $ref: '#/components/schemas/commissionCodeInfoType'
      type: object
    commissionCodeHoldStatusType:
      description: Commission Code Hold Status type
      properties:
        holdAccountReceivables:
          description: Hold accoutn receivables status for commission code.
          type: boolean
        holdAlways:
          description: Hold always status for commission code.
          type: boolean
        holdPrepaid:
          description: Hold prepaid status for commission code.
          type: boolean
      type: object
    commissionCodeInfoType:
      description: Commission code info.
      properties:
        commissionCalculation:
          $ref: '#/components/schemas/commissionCalculationType'
        commissionCode:
          description: Commission code for which details are fetched.
          maxLength: 20
          minLength: 0
          type: string
        commissionCodeHoldStatus:
          $ref: '#/components/schemas/commissionCodeHoldStatusType'
        description:
          description: Commission code description for which details are fetched.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property of the commission codes.
          maxLength: 20
          minLength: 0
          type: string
        reservationHistoryRecords:
          $ref: '#/components/schemas/commissionPaidDetailsType'
        sequence:
          description: Commission code sequence number.
          type: integer
        taxPercentage:
          description: Commission paid Tax details.
          type: number
      type: object
    commissionCodeSummaryInfoType:
      description: Commission codes summary details.
      properties:
        basedOn:
          $ref: '#/components/schemas/commissionBasedOnType'
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionCode:
          description: Commission code details.
          maxLength: 20
          minLength: 0
          type: string
        default:
          type: boolean
        description:
          description: Commission code description for which details are fetched.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property of the commission codes.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Commission code sequence number.
          type: integer
        taxPercentage:
          description: Commission paid Tax details.
          type: number
      type: object
    commissionCodeTransactionType:
      description: Revenue based commission details.
      properties:
        basedOnNetAmount:
          type: boolean
        commissionPaidDetails:
          $ref: '#/components/schemas/commissionPaidDetailsType'
        transactionCode:
          maxLength: 20
          minLength: 0
          type: string
        transactionCodeDesc:
          type: string
      type: object
    commissionCodes:
      description: Request object to update commission codes.
      properties:
        commissionCodes:
          description: Commission code details object.
          items:
            $ref: '#/components/schemas/commissionCodeInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodesSummary:
      description: Response object for fetching commission codes.
      properties:
        commissionCodesSummary:
          description: Commission code details.
          items:
            $ref: '#/components/schemas/commissionCodeSummaryInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    commissionCodesSummaryType:
      description: Commission code details.
      items:
        $ref: '#/components/schemas/commissionCodeSummaryInfoType'
      maxItems: 4000
      type: array
    commissionCodesType:
      description: Commission code details object.
      items:
        $ref: '#/components/schemas/commissionCodeInfoType'
      maxItems: 4000
      type: array
    commissionConfigPaymentMethodType:
      description: This value of the enum is used for Payment methods
      enum:
      - Check
      - CentrallyPaid
      - Eft
      type: string
    commissionPaidDetailsType:
      description: Commission paid details.
      properties:
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionType:
          description: Indicates the type of commission paid to agent.
          maxLength: 1
          minLength: 1
          type: string
        perNight:
          type: boolean
        perStay:
          type: boolean
        weekEndCommissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    compAuthorizer:
      properties:
        criteria:
          $ref: '#/components/schemas/compAuthorizerType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compAuthorizerDetailType:
      description: Detail information related to comp authorizers.
      properties:
        arrangementCode:
          description: Arrangement code for the detail limit.
          maxLength: 50
          minLength: 0
          type: string
        arrangementId:
          description: Arrangement id for the arrangement code.
          type: integer
        authorizationGroup:
          description: Authorization group for the instruction.
          maxLength: 50
          minLength: 0
          type: string
        description:
          description: Description for the transaction code or the arrangement code.
          maxLength: 50
          minLength: 0
          type: string
        rateCode:
          description: Rate code for the instruction.
          maxLength: 50
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code for the detail limit.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    compAuthorizerHeaderType:
      description: Detail information related to comp authorizers.
      properties:
        compAuthorizerDetails:
          description: Comp authorizer details information.
          items:
            $ref: '#/components/schemas/compAuthorizerDetailType'
          maxItems: 4000
          type: array
        creditLimit:
          description: Credit limit associated for the authorizer.
          type: integer
        occurenceLimit:
          description: Credit limit already used up for the authorizer.
          type: integer
      type: object
    compAuthorizerType:
      description: Information related to comp authorizers.
      properties:
        aRAccount:
          $ref: '#/components/schemas/aRAccountType'
        authorizer:
          description: Name for the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerDisplayName:
          description: Display name for the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        compAuthorizerHeaders:
          description: Comp authorizer details information.
          items:
            $ref: '#/components/schemas/compAuthorizerHeaderType'
          maxItems: 4000
          type: array
        firstName:
          description: First name for the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicator that tells whether the authorizer is active or not.
          type: boolean
        lastName:
          description: Last name for the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        name:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        overrideWarning:
          description: Indicator that tells whether to override warnings when deactivating
            authorizer.
          type: boolean
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        totalCreditLimit:
          description: Credit limit associated for the authorizer.
          type: integer
      type: object
    compAuthorizers:
      properties:
        compAuthorizerInfo:
          description: Information associated for an authorizer.
          items:
            $ref: '#/components/schemas/compAuthorizerType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compAuthorizersType:
      description: Information associated for an authorizer.
      items:
        $ref: '#/components/schemas/compAuthorizerType'
      maxItems: 4000
      type: array
    compBucketRedemptionConfig:
      description: Request object for creating new Comp Bucket Redemption Codes configurations.
      properties:
        bucketRedemptionCodes:
          description: Details for Bucket Redemption codes along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/bucketRedemptionCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compBucketRedemptionConfigDetails:
      description: Response object for fetching Comp Bucket Redemption Codes configurations.
      properties:
        bucketRedemptionCodes:
          description: Details for Bucket Redemption codes along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/bucketRedemptionCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTrxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    compTypeType:
      description: Information representation of Comp Type.
      properties:
        compTypeCode:
          description: Code is used to identify the CompType.
          maxLength: 20
          minLength: 0
          type: string
        compTypeDescription:
          description: Text is used to describe the CompType.
          maxLength: 2000
          minLength: 0
          type: string
        displayOrder:
          description: Comp Type record sequence number.
          type: number
      type: object
    compTypesCriteria:
      description: Request object for creating CompTypes.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesDetails:
      description: Response object for fetching Comp Types.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesToBeChanged:
      description: Request object for changing Comp Types.
      properties:
        compTypes:
          description: List of Comp Types.
          items:
            $ref: '#/components/schemas/compTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTypesType:
      description: List of Comp Types.
      items:
        $ref: '#/components/schemas/compTypeType'
      maxItems: 4000
      type: array
    configBankAccountType:
      description: Indentifier for a Bank Account.
      properties:
        bankAccountId:
          description: Bank account ID.
          type: number
        bankAccountNumber:
          description: Account number at the bank.
          maxLength: 80
          minLength: 0
          type: string
        bankCode:
          description: Unique code of the bank.
          maxLength: 20
          minLength: 0
          type: string
        bankName:
          description: Name of the bank account.
          maxLength: 2000
          minLength: 0
          type: string
        branchCode:
          description: Code for the branch of the bank.
          maxLength: 20
          minLength: 0
          type: string
        checkStubLines:
          description: Number of lines to be printed on check stub.
          type: number
        currency:
          description: Currency associated with the bank account.
          maxLength: 20
          minLength: 0
          type: string
        default:
          description: Default Bank Account for that resort.
          type: boolean
        defaultForCurrency:
          description: Used mainly to figure out default bank for resort and currency
            combination.
          type: boolean
        editCheckNumber:
          description: Check number allowed to be edited true/false.
          type: boolean
        format:
          description: Type of format for Payment Method.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        lastExportDate:
          description: Used to hold last exported date for commission export.
          format: date
          type: string
        lastExportFileNo:
          description: Used to hold last exported filename for commission export.
          type: integer
        minProcessingAmount:
          description: Minimum amount required to produce a check through commission
            processing for the selected account.
          type: number
        nextCheckNumber:
          description: Next check number used by commission handling module for bank
            account selected.
          type: number
        paymentMethod:
          $ref: '#/components/schemas/commissionConfigPaymentMethodType'
        positivePayExport:
          description: Indicate that the bank account uses Positive Pay Export.
          type: boolean
        report1099:
          description: Indicates that bank account uses 1099 report.
          type: boolean
        routingNumber:
          description: Routing number for the bank account.
          maxLength: 20
          minLength: 0
          type: string
        sourceImportDirectory:
          description: Source directory for importing commission information.
          maxLength: 2000
          minLength: 0
          type: string
        targetImportDirectory:
          description: Target directory where import files will be stored.
          maxLength: 2000
          minLength: 0
          type: string
        validateIATANumber:
          description: Force validation of TA/Source IATA number during commision
            payment process.
          type: boolean
      type: object
    configBankAccountsType:
      description: List of bank accounts.
      items:
        $ref: '#/components/schemas/configBankAccountType'
      maxItems: 4000
      type: array
    configCopyRevenueBucketCodeType:
      description: Copy instructions for copying Revenue Bucket Codes to hotel code(s)
      properties:
        copyCodes:
          description: This holds a List of copy codes
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          maxItems: 4000
          type: array
        revenueBucketType:
          description: This holds a Revenue Bucket Type
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    configRoutingInstructionType:
      description: "Routing limit can be one of the three: Covers, Limit, Percent.\
        \ It is not mandatory to set value of either. This field is available when\
        \ the Cashiering>Routing Limits application function is set to Y."
      properties:
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        compAccounting:
          description: Determines if this is a comp routing code or a routing code.
          type: boolean
        covers:
          description: Number of covers for this routing instruction. Null means no
            value has been specified.
          type: number
        daily:
          description: Signifies whether a separate routing instruction has to be
            generated for each day of the stay.
          type: boolean
        daysOfWeek:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthRateCode:
          description: Reservation to inherit Rate Code from Authorizer.
          type: boolean
        limit:
          description: Allowable credit amount for this routing instruction. Null
            means no value has been specified.
          type: number
        percent:
          description: The routing limit percentage allowed for this routing instruction.
            Null means no value has been specified.
          type: number
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    configRoutingInstructionsType:
      description: This type holds a collection of routing instructions.
      items:
        $ref: '#/components/schemas/configRoutingInstructionType'
      maxItems: 4000
      type: array
    contractBillingInstructionType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        comments:
          description: Additional Comment.
          maxLength: 100
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    contractBillingInstructionsCriteria:
      description: Request object for creating Contract Billing Instructions.
      properties:
        contractBillingInstructions:
          description: List of Contract Billing Instructions.
          items:
            $ref: '#/components/schemas/contractBillingInstructionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    contractBillingInstructionsDetails:
      description: Response object for fetching Contract Billing Instructions.
      properties:
        contractBillingInstructions:
          description: List of Contract Billing Instructions.
          items:
            $ref: '#/components/schemas/contractBillingInstructionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    contractBillingInstructionsToBeChanged:
      description: Request object for changing Contract Billing Instructions.
      properties:
        contractBillingInstructions:
          description: List of Contract Billing Instructions.
          items:
            $ref: '#/components/schemas/contractBillingInstructionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    contractBillingInstructionsType:
      description: List of Contract Billing Instructions.
      items:
        $ref: '#/components/schemas/contractBillingInstructionType'
      maxItems: 4000
      type: array
    controlSequenceCodeType:
      description: "Indicates control sequences used for bills. Eg. CREDIT_BILL, FATTURA\
        \ etc."
      enum:
      - AcknowledgeReceipt
      - Statement
      - Folio
      - OfficialReceipt
      - Bill
      - ArInvoice
      - SupportingDocument
      type: string
    controlSequenceType:
      description: Provides information about the Opera Control Sequence
      properties:
        controlCode:
          $ref: '#/components/schemas/controlSequenceCodeType'
        countryCode:
          description: Opera Control Sequence belongs to country
          maxLength: 20
          minLength: 0
          type: string
        folioType:
          $ref: '#/components/schemas/codeDescriptionType'
        hotelId:
          description: Control Sequence code associated with Hotel
          maxLength: 20
          minLength: 0
          type: string
        maximum:
          description: Maximum value of Opera Control Sequence
          type: number
        minimum:
          description: Minimum value of Opera Control Sequence
          type: number
        sequenceValue:
          description: Current Sequence Value for the OPERA Sequence
          type: number
      type: object
    controlSequencesType:
      description: List of Control Sequence details
      items:
        $ref: '#/components/schemas/controlSequenceType'
      maxItems: 4000
      type: array
    copyConfigurationCodeType:
      description: Information needed to copy configuration code from one property
        to the other.
      properties:
        code:
          description: Source hotel code from which code is to be copied from.
          maxLength: 20
          minLength: 0
          type: string
        sourceHotelCode:
          description: Code that is to be copied.
          maxLength: 20
          minLength: 0
          type: string
        targetHotelCode:
          description: Property to which configuration code type to be copied to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    copyConfigurationCodesType:
      description: Information needed to copy configuration code from one property
        to the other.
      items:
        $ref: '#/components/schemas/copyConfigurationCodeType'
      maxItems: 4000
      type: array
    copyCustomChargeExemptionConfigType:
      description: Information needed to copy Custom Charge Exemption from one property
        to the other.
      properties:
        exemptionCodes:
          description: Custom Charge Exemption to be copied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sourceHotelCode:
          description: Property from which Custom Charge Exemptions to be copied from.
          maxLength: 20
          minLength: 0
          type: string
        targetHotelCode:
          description: Property to which Custom Charge Exemptions to be copied to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    copyFiscalFolioParametersInfoType:
      description: "The type gives details of the source Fiscal Folio Parameter to\
        \ be copied along with information of the target where the Fiscal Folio Parameter\
        \ is being copied. Details include source code, hotel code, description, Internal,\
        \ value with which the Fiscal Folio Parameter will be copied under the target\
        \ hotel code."
      properties:
        copyAs:
          $ref: '#/components/schemas/codeDescriptionType'
        sourceCode:
          description: Source Fiscal Folio Parameter to be copied.
          maxLength: 80
          minLength: 0
          type: string
        targetHotelCode:
          description: Target hotel code where the Fiscal Folio Parameter will be
            copied to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyFiscalFolioParametersType:
      description: Copy instructions for Fiscal Folio Parameters.
      properties:
        copyFiscalFolioParametersInfo:
          description: "Provides information about the target hotel code where the\
            \ source Fiscal Folio Parameter will be copied to, what the Fiscal Folio\
            \ Parameter will be named under the target hotel code and the description\
            \ of the Fiscal Folio Parameter under the target hotel code."
          items:
            $ref: '#/components/schemas/copyFiscalFolioParametersInfoType'
          maxItems: 4000
          type: array
        sourceHotelCode:
          description: Source hotel code from where Fiscal Folio Parameter(s) have
            to be copied.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyRevenueTypeMappingCriteriaType:
      description: Provides Revenue Type Mapping details that needs to be copied.
      items:
        $ref: '#/components/schemas/copyRevenueTypeMappingListType'
      maxItems: 4000
      type: array
    copyRevenueTypeMappingListType:
      description: Type used for Revenue Type mapping.
      properties:
        cateringOnly:
          $ref: '#/components/schemas/cateringOnlyType'
        eventList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        eventType:
          description: Provides information about the Event Type.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code to which the Revenue Type Mapping belongs to.
          maxLength: 20
          minLength: 0
          type: string
        isCateringOnly:
          description: This flag will notify the service that transactional postings
            will not be returned.
          type: boolean
        isEventType:
          description: This flag will notify the service that transactional postings
            will not be returned.
          type: boolean
        isSpace:
          description: This flag will notify the service that transactional postings
            will not be returned.
          type: boolean
        revenueType:
          description: Provides information about the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        revenueTypeMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        serviceCharge:
          description: Service Charge for the Revenue Type.
          maximum: 100
          minimum: 0
          type: number
        serviceChargeCalulationMethod:
          description: Service Charge for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        serviceChargeTrxCode:
          description: Service Charge for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        space:
          description: Provides information about the Space/Location for the Revenue
            Type.
          maxLength: 20
          minLength: 0
          type: string
        spaceList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        transactionCode:
          description: Transaction code for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyTrackItActions:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItActions:
          description: List of Track it Actions to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyTrackItLocations:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItLocations:
          description: List of Track it Locations to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyTrackItTypes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItTypes:
          description: List of Track it Types to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyTransactionCodeType:
      description: The type gives details of the source transaction code to be copied.
        Details also include the new code and description with which the transaction
        code will be copied under the same hotel code.
      properties:
        copyAs:
          $ref: '#/components/schemas/codeDescriptionType'
        sourceTransactionCode:
          description: Source transaction code to be copied.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyTransactionCodesType:
      description: Collection of transaction codes to be copied within same hotel
      properties:
        copyGenerates:
          description: Indicator that tells whether the transaction code generates
            should be copied or not.
          type: boolean
        hotelId:
          description: Source hotel code from where transaction codes(s) have to be
            copied. The transaction codes will be copied to the same hotel code with
            a different code and description.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: List of transaction codes to be copied within the same hotel
            code.
          items:
            $ref: '#/components/schemas/copyTransactionCodeType'
          maxItems: 4000
          type: array
      type: object
    copyTransactionSubgroupsType:
      description: Copy information required to copy transaction subgroup type
      properties:
        hotels:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        transactionSubgroups:
          description: List of template transaction subgroup IDs
          items:
            $ref: '#/components/schemas/templateTransactionSubgroupIDType'
          maxItems: 4000
          type: array
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    createFiscalPartners:
      description: Request object to create Fiscal Partners
      properties:
        fiscalPeriods:
          description: Details of Fiscal Partners.
          items:
            $ref: '#/components/schemas/fiscalPartnerType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardInfo:
      properties:
        creditCard:
          $ref: '#/components/schemas/resPaymentCardType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardReaderDevices:
      properties:
        devices:
          items:
            $ref: '#/components/schemas/creditCardReaderDevicesType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardReaderDevicesType:
      description: Supported credit card reader devices.
      properties:
        description:
          description: Description of the device.
          type: string
        deviceId:
          description: Device ID assigned to the credit card reader device.
          type: integer
        secureDevice:
          description: A flag indicating whether the data from the device is encrypted
            or not.
          type: boolean
        trackDataPattern:
          description: The Regular Expression pattern of the track data that is generated
            by this device.
          type: string
      type: object
    creditCardServiceActionType:
      description: Instruction to call direct vendor service.
      enum:
      - IfcInterface
      - DirectVendor
      type: string
    creditCardTypeValidationStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        valid:
          description: A flag indicating whether the credit card number meets its
            vendor's format requirements
          type: boolean
        validatedPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardUniqueId:
      properties:
        creditCardUniqueIdInfo:
          $ref: '#/components/schemas/creditCardUniqueIdInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardUniqueIdInfoType:
      description: Information about the credit card unique id.
      properties:
        actionType:
          $ref: '#/components/schemas/creditCardServiceActionType'
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera\
            \ Control is active."
          type: boolean
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
        creditCardName:
          description: Card name holder.
          type: string
        creditCardNumber:
          description: Credit card number.
          type: string
        creditCardNumberLast4Digits:
          description: Last 4 digits of a credit card.
          type: string
        creditCardType:
          description: Credit card type.
          type: string
        errorCode:
          description: Error code for a unique id request failure.
          type: string
        errorMessage:
          description: Error message for a unique id request failure.
          type: string
        expirationDateString:
          description: Expiration date in string representation.
          type: string
        successYn:
          description: Success flag after requesting a unique id.
          type: string
        terminalId:
          description: Terminal ID from where this request originated.
          maxLength: 128
          minLength: 0
          type: string
        uniqueId:
          description: Unique id of credit card.
          type: string
      type: object
    creditCardUniqueIdRQ:
      description: Request for fetching credit card unique id.
      properties:
        creditCardUniqueId:
          $ref: '#/components/schemas/creditCardUniqueIdType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditCardUniqueIdType:
      description: Information about the credit card unique id.
      properties:
        actionType:
          $ref: '#/components/schemas/creditCardServiceActionType'
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera\
            \ Control is active."
          type: boolean
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
        creditCardName:
          description: Card name holder.
          type: string
        creditCardNumber:
          description: Credit card number.
          type: string
        creditCardNumberLast4Digits:
          description: Last 4 digits of a credit card.
          type: string
        creditCardType:
          description: Credit card type.
          type: string
        expirationDateString:
          description: Expiration date in string representation.
          type: string
        terminalId:
          description: Terminal ID from where this request originated.
          maxLength: 128
          minLength: 0
          type: string
        uniqueId:
          description: Unique id of credit card.
          type: string
      type: object
    creditLimitType:
      properties:
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          maximum: 100
          minimum: 0
          type: number
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    currencyExchangeServiceTaxType:
      description: Currency exchange service tax identification details
      properties:
        amountFrom:
          description: Starting value of exchange equivalent range
          type: number
        amountTo:
          description: End value of exchange equivalent range
          type: number
        baseAmount:
          description: Base tax basis of local currency. This is normally configured
            to the resulting tax basis of the previous tax slab range.
          type: number
        code:
          description: Currency exchange service tax code
          maxLength: 20
          minLength: 0
          type: string
        hotel:
          description: Property associated with currency exchange service tax
          maxLength: 20
          minLength: 0
          type: string
        maxServiceTax:
          description: Maximimum service tax to be collected
          type: number
        minServiceTax:
          description: Minimum service tax to be collected
          type: number
        percentage:
          description: Percentage of local currency
          type: number
      type: object
    currencyExchangeServiceTaxes:
      properties:
        currencyExchangeServiceTaxes:
          description: List of currency exchange service taxes
          items:
            $ref: '#/components/schemas/currencyExchangeServiceTaxType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    currencyExchangeServiceTaxesType:
      description: List of currency exchange service taxes
      items:
        $ref: '#/components/schemas/currencyExchangeServiceTaxType'
      maxItems: 4000
      type: array
    currencyExchangeType:
      description: E-certificate conversion.
      enum:
      - Cash
      - Settlement
      - Posting
      - Check
      - TACommission
      - Membership
      - Certificate
      type: string
    currencyHandlingType:
      description: Simple Type for Posting Limit Types.
      enum:
      - Local
      - Foreign
      type: string
    currencyLimitType:
      description: Type used for Currency Limits.
      properties:
        amount:
          description: Indicates the curresponding limit for amount.
          type: number
        currencyType:
          $ref: '#/components/schemas/currencyHandlingType'
        postingLimit:
          $ref: '#/components/schemas/postingLimitType'
      type: object
    customChargeExemptionConfigType:
      description: Provides information about Exemptions.
      properties:
        description:
          description: Exemption Desciption
          maxLength: 200
          minLength: 0
          type: string
        endDate:
          description: Date till the Exemption will be effective.
          format: date
          type: string
        exemption:
          description: Exemption
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        inactiveDate:
          description: Date when this Exemption is Inactive
          format: date
          type: string
        includeInactive:
          description: Indicator that tells whether to include inactive Custom Charge
            Ememptions.
          type: boolean
        percentage:
          description: Exemption Percentage
          maximum: 100
          minimum: 0
          type: number
        propertyExemption:
          description: Flag specifying if custom charge exemptions is property level
            or not.
          type: boolean
        startDate:
          description: Date when this Exemption will be effective
          format: date
          type: string
      type: object
    customChargeExemptionsConfig:
      description: Response object for fetching Custom Charge Exemptions.
      properties:
        customChargeExemptionsConfig:
          description: Holds Exemption details.
          items:
            $ref: '#/components/schemas/customChargeExemptionConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargeExemptionsConfigCopy:
      properties:
        customChargeExemptionsConfigCopy:
          description: List of the Custom Charge Exemptions to be copied.
          items:
            $ref: '#/components/schemas/copyCustomChargeExemptionConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargeExemptionsConfigToBeChanged:
      properties:
        customChargeExemptionsConfig:
          description: Existing Custom Charge Exemptions to be changed.
          items:
            $ref: '#/components/schemas/customChargeExemptionsConfigType'
          maxItems: 100
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargeExemptionsConfigToBeCreated:
      properties:
        customChargeExemptionsConfig:
          description: New one or more Custom Charge Exemptions to be created.
          items:
            $ref: '#/components/schemas/customChargeExemptionsConfigType'
          maxItems: 100
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargeExemptionsConfigType:
      description: Holds Exemption details.
      items:
        $ref: '#/components/schemas/customChargeExemptionConfigType'
      maxItems: 4000
      type: array
    customChargeRuleTypeOption:
      description: The Custom Charge is only posted for the maximum number of nights
        of the stay.
      enum:
      - MaxNoNights
      type: string
    customChargeRuleTypeType:
      description: The rule types for custom charge.
      properties:
        customChargeRuleType:
          $ref: '#/components/schemas/customChargeRuleTypeOption'
        customChargeRuleTypeValue:
          description: Identifies the Custom Charge rule type value.
          type: integer
      type: object
    customChargeType:
      description: This gives detailed information about Custom Charges.
      properties:
        active:
          description: Flag specifying if custom charge code is active or not.
          type: boolean
        customChargeCode:
          description: Code is used to identify the Custom Charge.
          maxLength: 20
          minLength: 0
          type: string
        customChargeRuleType:
          $ref: '#/components/schemas/customChargeRuleTypeType'
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        description:
          description: Description for the Custom Charge code.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the Custom Charge code
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        price:
          description: Identifies the price for which the Custom Charge code is specified.
          type: number
        priority:
          description: Identifies the priority for which the Custom Charge code is
            specified.
          type: integer
      type: object
    customChargesConfig:
      description: Request object for creating new Custom Charges.
      properties:
        customCharges:
          description: Details for Custom Charges Codes.
          items:
            $ref: '#/components/schemas/customChargeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargesConfigDetails:
      description: Response object for fetching Custom Charges.
      properties:
        customCharges:
          description: Details for Custom Charges Codes.
          items:
            $ref: '#/components/schemas/customChargeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customChargesType:
      description: Details for Custom Charges Codes.
      items:
        $ref: '#/components/schemas/customChargeType'
      maxItems: 4000
      type: array
    customCodeInformationBaseType:
      description: Budget Forecast information for Custom segment code.
      properties:
        budgetValueInfo:
          $ref: '#/components/schemas/customValueInfoType'
        customCode:
          description: Custom code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        customCodeDescription:
          description: Custom code description for Custom code.
          type: string
        forecastValueInfo:
          $ref: '#/components/schemas/customValueInfoType'
      type: object
    customCodeInformationType:
      description: Budget Forecast information for Custom segment code.
      properties:
        aBVarianceInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        actualValueInfo:
          $ref: '#/components/schemas/customValueInfoType'
        budgetValueInfo:
          $ref: '#/components/schemas/customValueInfoType'
        customCode:
          description: Custom code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        customCodeDescription:
          description: Custom code description for Custom code.
          type: string
        fBVarianceInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        forecastValueInfo:
          $ref: '#/components/schemas/customValueInfoType'
      type: object
    customCodeTotalInformationType:
      description: Budget Forecast information for Custom segment.
      properties:
        aBVarianceTotalInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceTotalInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        actualTotalInfo:
          $ref: '#/components/schemas/customValueInfoType'
        budgetTotalInfo:
          $ref: '#/components/schemas/customValueInfoType'
        fBVarianceTotalInfo:
          description: Monthly Value Variance information.
          items:
            $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
          maxItems: 12
          type: array
        forecastTotalInfo:
          $ref: '#/components/schemas/customValueInfoType'
      type: object
    customNumberConfigDetails:
      description: Response object for fetching custom number configurations.
      properties:
        customNumberConfigurationList:
          description: Details about custom number configuration.
          items:
            $ref: '#/components/schemas/customNumberConfigurationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customNumberConfiguration:
      description: Request object to create custom number configuration.
      properties:
        customNumberConfiguration:
          $ref: '#/components/schemas/customNumberConfigurationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customNumberConfigurationAreaType:
      description: Receipt
      enum:
      - Folio
      - Receipt
      type: string
    customNumberConfigurationListType:
      description: Details about custom number configuration.
      items:
        $ref: '#/components/schemas/customNumberConfigurationType'
      maxItems: 4000
      type: array
    customNumberConfigurationType:
      description: Custom number configuration details.
      properties:
        area:
          $ref: '#/components/schemas/customNumberConfigurationAreaType'
        code:
          description: Custom number configuration code.
          maxLength: 20
          minLength: 0
          type: string
        condition:
          description: The condition to be met to generate and apply the custom number.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The description of the custom number configuration code.
          maxLength: 2000
          minLength: 0
          type: string
        formula:
          description: The formula to generate the custom number.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context for the custom number configuration.
          maxLength: 20
          minLength: 0
          type: string
        inActive:
          description: Indicator that tells whether the configuration is active or
            not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    customNumberTemplateConfigurationListType:
      description: Details about template custom number configuration.
      items:
        $ref: '#/components/schemas/customNumberTemplateConfigurationType'
      maxItems: 4000
      type: array
    customNumberTemplateConfigurationType:
      description: Custom number configuration details.
      properties:
        area:
          $ref: '#/components/schemas/customNumberConfigurationAreaType'
        code:
          description: Custom number configuration code.
          maxLength: 20
          minLength: 0
          type: string
        condition:
          description: The condition to be met to generate and apply the custom number.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The description of the custom number configuration code.
          maxLength: 2000
          minLength: 0
          type: string
        formula:
          description: The formula to generate the custom number.
          maxLength: 2000
          minLength: 0
          type: string
        inActive:
          description: Indicator that tells whether the configuration is active or
            not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    customNumberType:
      description: Custom number
      maxLength: 200
      minLength: 0
      type: string
    customTaxTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    customTaxTypesCriteria:
      description: Request object for creating Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customTaxTypesDetails:
      description: Response object for fetching Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customTaxTypesToBeChanged:
      description: Request object for changing Custom Tax Types.
      properties:
        customTaxTypes:
          description: List of Custom Tax Types.
          items:
            $ref: '#/components/schemas/customTaxTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    customTaxTypesType:
      description: List of Custom Tax Types.
      items:
        $ref: '#/components/schemas/customTaxTypeType'
      maxItems: 4000
      type: array
    customValueInfoType:
      description: Value information for a CUSTOM segment code. Holds total and monthly
        Value information.
      properties:
        monthlyValueInfo:
          description: Value information for each month for CUSTOM segment code.
          items:
            $ref: '#/components/schemas/monthlyValueInfoType'
          maxItems: 12
          type: array
        totalValue:
          description: Total Value for CUSTOM segment code.
          type: number
      type: object
    customVarianceInfoType:
      description: Monthly Value Variance information.
      items:
        $ref: '#/components/schemas/monthlyCustomVarianceInfoType'
      maxItems: 12
      type: array
    cycleFiscalPeriodType:
      description: Fiscal Year Cycle Period creation type.
      properties:
        cycle:
          $ref: '#/components/schemas/cyclePeriodType'
        hotelId:
          description: Resort for which the Period is defined.
          maxLength: 20
          minLength: 0
          type: string
        periodPrefix:
          description: Prefix added to all period to be created
          maxLength: 3
          minLength: 0
          type: string
        yearId:
          description: Id of the Year.
          type: number
      type: object
    cycleFiscalPeriodsType:
      description: List of Cycle Fiscal Periods.
      items:
        $ref: '#/components/schemas/cycleFiscalPeriodType'
      maxItems: 4000
      type: array
    cyclePeriodType:
      description: Signifies Calendar Period
      enum:
      - FourWeeks
      - FourFourFiveWeeks
      - FourFiveFourWeeks
      - FiveFourFourWeeks
      - CalendarMonth
      type: string
    dailyPlanCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    dailyPlanCodes:
      properties:
        dailyPlanCodes:
          description: Details for daily plan code along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/dailyPlanCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyPlanCodesType:
      description: Details for daily plan code along with associated transaction codes.
      items:
        $ref: '#/components/schemas/dailyPlanCodeType'
      maxItems: 4000
      type: array
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        end:
          description: The ending value of the date range.
          format: date
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        endDateTime:
          format: date-time
          type: string
        startDateTime:
          format: date-time
          type: string
      type: object
    decodedCard:
      properties:
        creditCard:
          $ref: '#/components/schemas/resPaymentCardType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    defaultPaymentMethodRule:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        rule:
          $ref: '#/components/schemas/paymentMethodValidationRuleType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    definedNameFormatType:
      properties:
        definedFormatId:
          description: ID of the defined name format.
          maxLength: 20
          minLength: 0
          type: string
        expression:
          description: Expression of the defined name format It basically contains
            all formats that are being set.
          maxLength: 200
          minLength: 0
          type: string
        expressionTable:
          description: Table from which the info will be retrieved.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code where the defined name format is associated.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    deleteSegmentCodeBudgetInformationType:
      description: Holds segment and segment code information to delete.
      properties:
        cateringCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeInfoType'
        customCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeInfoType'
        hotelId:
          description: Opera Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        marketCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeInfoType'
        rateCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeInfoType'
        transactionCodeInformation:
          $ref: '#/components/schemas/deleteSegmentCodeInfoType'
        year:
          description: Year of revenue.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    deleteSegmentCodeInfoType:
      description: Holds segment code information to delete.
      properties:
        budget:
          description: Flag to include Budget revenue/nights information.
          type: boolean
        budgetMonth:
          $ref: '#/components/schemas/monthNoType'
        deleteInformation:
          $ref: '#/components/schemas/budgetInfoDeleteType'
        forecast:
          description: Flag to include Forecast revenue/nights information.
          type: boolean
        segment:
          $ref: '#/components/schemas/segmentNameType'
        segmentCode:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        segmentCodeGroup:
          description: segment code group.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    depositTypeType:
      description: Represents the Folio Deposit Type.
      enum:
      - Receipts
      - Folios
      type: string
    doNotPostGenerateType:
      description: Existance of this type indicates that the generate will not be
        effective. This is mainly used on Tax Type based generates rule.
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    entityType:
      description: Indicates the rule is based on Minutes associated with the charge.
      enum:
      - ThresholdCount
      - ThresholdQuantity
      - ThresholdMinutes
      type: string
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Detail
      type: object
    exchangeRateType:
      description: Exchange rate configuration type.
      properties:
        baseCurrency:
          $ref: '#/components/schemas/codeDescriptionType'
        beginDate:
          description: Date on which the rate is to become active.
          format: date-time
          type: string
        buyCommission:
          description: Percentage of the amount that is to be a commission for the
            currency buy operation.
          type: number
        buyRate:
          description: Buy Rate for foreign currency.
          type: number
        comment:
          description: Comments associated with the exchange rate.
          type: string
        currency:
          $ref: '#/components/schemas/codeDescriptionType'
        exchangeType:
          description: Type for exchange calculation.
          items:
            $ref: '#/components/schemas/currencyExchangeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property where exchange rate is set.
          maxLength: 20
          minLength: 0
          type: string
        sellCommission:
          description: Percentage of the amount that is to be a commission for the
            currency sell operation.
          type: number
        sellRate:
          description: Sell Rate for foreign currency.
          type: number
        status:
          $ref: '#/components/schemas/statusTypes'
      type: object
    exchangeRates:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        rates:
          description: Exchange Rates to be Set.
          items:
            $ref: '#/components/schemas/exchangeRateType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exchangeRatesDetails:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        rates:
          description: Collection of exchange rates and their information.
          items:
            $ref: '#/components/schemas/exchangeRateType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    expenseArrangementCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    expenseArrangementCodes:
      properties:
        expenseArrangementCodes:
          description: Details for expense arrangement code along with associated
            transaction codes.
          items:
            $ref: '#/components/schemas/expenseArrangementCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    expenseArrangementCodesCopy:
      properties:
        expenseArrangementCode:
          description: List of the expense arrangement codes to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    expenseArrangementCodesType:
      description: Details for expense arrangement code along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/expenseArrangementCodeType'
      maxItems: 4000
      type: array
    exportMappingLinkedCodeType:
      description: Details of linked code.
      properties:
        defaultMappedValue:
          description: Default value.
          maxLength: 2000
          minLength: 0
          type: string
        exportMappingCode:
          description: Mapping code attached to linked code.
          maxLength: 100
          minLength: 0
          type: string
        exportMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        linkedCode:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        lovName:
          description: Name of the LOV group to be used.
          maxLength: 40
          minLength: 0
          type: string
        mappedValue:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        mappingCodeDescription:
          description: Description of the export mapping code.
          maxLength: 2000
          minLength: 0
          type: string
        mappingTypeDescription:
          description: Description of the export mapping type.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: ID extension for external reference.
          type: integer
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
        supplies:
          description: List of the facility codes.
          items:
            $ref: '#/components/schemas/facilityCodeType'
          maxItems: 4000
          type: array
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
      type: object
    fiscalCommandType:
      description: Fiscal Command details.
      properties:
        description:
          description: Fiscal Command description that is only used during a fetch.
          maxLength: 200
          minLength: 0
          type: string
        fiscalCommandCode:
          description: Fiscal Command.
          maxLength: 40
          minLength: 0
          type: string
        fiscalPartnerCodes:
          items:
            $ref: '#/components/schemas/fiscalPartnerCodeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Unique code of the hotel.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: A flag that determines whether to fetch active records or inactive
            records.
          type: boolean
      type: object
    fiscalCommandsDetails:
      description: Response object for fetching Fiscal Commands.
      properties:
        fiscalPartners:
          description: List of FiscalCommands.
          items:
            $ref: '#/components/schemas/fiscalCommandType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalCommandsType:
      description: List of FiscalCommands.
      items:
        $ref: '#/components/schemas/fiscalCommandType'
      maxItems: 4000
      type: array
    fiscalFolioParameterType:
      description: Provides information about the Fiscal Folio Parameter.
      properties:
        code:
          description: Code of the Fiscal Folio Parameter.
          maxLength: 80
          minLength: 0
          type: string
        description:
          description: Description of the Fiscal Folio Parameter.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: Indicates whether the Fiscal Folio Parameter is user created
            or from seed data.
          type: boolean
        partner:
          description: Fiscal folio parameter associated with Partner.
          maxLength: 80
          minLength: 0
          type: string
        value:
          description: Parameter value of the Fiscal Folio Parameter.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    fiscalFolioParameters:
      properties:
        fiscalFolioParameters:
          description: Holds Fiscal Folio Parameter details.
          items:
            $ref: '#/components/schemas/fiscalFolioParameterType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalFolioParametersCopy:
      description: Request object for copying Fiscal Folio Parameters to other hotel
        code(s).
      properties:
        fiscalFolioParameter:
          description: Fiscal Folio Parameter Configurations to be copied.
          items:
            $ref: '#/components/schemas/genericHotelCodeCodeType'
          type: array
        fiscalFolioParameters:
          description: List of the Fiscal Folio Parameters to be copied to other hotel
            code(s).
          items:
            $ref: '#/components/schemas/copyFiscalFolioParametersType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalFolioParametersType:
      description: Holds Fiscal Folio Parameter details.
      items:
        $ref: '#/components/schemas/fiscalFolioParameterType'
      maxItems: 4000
      type: array
    fiscalGuestTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    fiscalGuestTypesCriteria:
      description: Request object for creating Fiscal Guest Types.
      properties:
        fiscalGuestTypes:
          description: List of Fiscal Guest Types.
          items:
            $ref: '#/components/schemas/fiscalGuestTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalGuestTypesDetails:
      description: Response object for fetching Fiscal Guest Types.
      properties:
        fiscalGuestTypes:
          description: List of Fiscal Guest Types.
          items:
            $ref: '#/components/schemas/fiscalGuestTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalGuestTypesToBeChanged:
      description: Request object for changing Fiscal Guest Types.
      properties:
        fiscalGuestTypes:
          description: List of Fiscal Guest Types.
          items:
            $ref: '#/components/schemas/fiscalGuestTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalGuestTypesType:
      description: List of Fiscal Guest Types.
      items:
        $ref: '#/components/schemas/fiscalGuestTypeType'
      maxItems: 4000
      type: array
    fiscalPartnerCodeListType:
      items:
        $ref: '#/components/schemas/fiscalPartnerCodeType'
      maxItems: 4000
      type: array
    fiscalPartnerCodeType:
      description: "Used for fiscal partner codes. Possible values of this pattern\
        \ are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 100
      minLength: 0
      type: string
    fiscalPartnerType:
      description: Fiscal partner Type
      properties:
        fiscalFolioProfile:
          description: Payment types associated with Fiscal Partner.
          maxLength: 1
          minLength: 0
          type: string
        fiscalPayloadTypes:
          description: Types of payload supported by the Fiscal Partner.
          items:
            $ref: '#/components/schemas/fiscalPayloadType'
          type: array
          uniqueItems: true
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        partnerCode:
          description: "Used for fiscal partner codes. Possible values of this pattern\
            \ are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 100
          minLength: 0
          type: string
        paymentTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        priority:
          description: Priority order for processing.
          type: integer
      type: object
    fiscalPartnersDetails:
      description: Response object for fetching Fiscal Partners.
      properties:
        fiscalPartners:
          description: Details of Fiscal Partners.
          items:
            $ref: '#/components/schemas/fiscalPartnerType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalPartnersType:
      description: Details of Fiscal Partners.
      items:
        $ref: '#/components/schemas/fiscalPartnerType'
      maxItems: 4000
      type: array
    fiscalPayloadType:
      enum:
      - CheckOut
      - FolioGeneration
      type: string
    fiscalPeriodEditType:
      description: Values of the old primary key.
      properties:
        hotelId:
          description: Resort for which the Period is defined.
          maxLength: 20
          minLength: 0
          type: string
        newPeriod:
          $ref: '#/components/schemas/fiscalPeriodType'
        startDate:
          description: Start Date of the Period
          format: date
          type: string
        yearId:
          description: Id of the Year.
          type: number
      type: object
    fiscalPeriodType:
      description: Fiscal Period Type
      properties:
        code:
          description: Code of the current Period.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Period.
          maxLength: 100
          minLength: 0
          type: string
        endDate:
          description: End Date of the Period.
          format: date
          type: string
        hotelId:
          description: Resort for which the Period is defined.
          maxLength: 20
          minLength: 0
          type: string
        periodType:
          $ref: '#/components/schemas/yearTypeType'
        startDate:
          description: Start Date of the Period
          format: date
          type: string
        year:
          description: Year for the current Period.
          type: number
        yearId:
          description: Id of the Year.
          type: number
      type: object
    fiscalPeriods:
      properties:
        cycleFiscalPeriods:
          $ref: '#/components/schemas/fiscalPeriods_cycleFiscalPeriods'
        fiscalPeriods:
          description: List of Fiscal Periods.
          items:
            $ref: '#/components/schemas/fiscalPeriodType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalPeriodsEdit:
      properties:
        fiscalPeriods:
          description: List of Fiscal Periods.
          items:
            $ref: '#/components/schemas/fiscalPeriodEditType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalPeriodsEditType:
      description: List of Fiscal Periods.
      items:
        $ref: '#/components/schemas/fiscalPeriodEditType'
      maxItems: 4000
      type: array
    fiscalPeriodsInfo:
      properties:
        fiscalPeriods:
          description: List of Fiscal Periods.
          items:
            $ref: '#/components/schemas/fiscalPeriodType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalPeriodsType:
      description: List of Fiscal Periods.
      items:
        $ref: '#/components/schemas/fiscalPeriodType'
      maxItems: 4000
      type: array
    fiscalRegionType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    fiscalRegionsCriteria:
      description: Request object for creating Fiscal Regions.
      properties:
        fiscalRegions:
          description: List of Fiscal Regions.
          items:
            $ref: '#/components/schemas/fiscalRegionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalRegionsDetails:
      description: Response object for fetching Fiscal Regions.
      properties:
        fiscalRegions:
          description: List of Fiscal Regions.
          items:
            $ref: '#/components/schemas/fiscalRegionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalRegionsToBeChanged:
      description: Request object for changing Fiscal Regions.
      properties:
        fiscalRegions:
          description: List of Fiscal Regions.
          items:
            $ref: '#/components/schemas/fiscalRegionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalRegionsType:
      description: List of Fiscal Regions.
      items:
        $ref: '#/components/schemas/fiscalRegionType'
      maxItems: 4000
      type: array
    fiscalResponseType:
      description: Provides information which is used for fiscal response processing.
      properties:
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        retryFiscalPrinting:
          description: Flag to do the retrieval process of fiscal printing or not.
          type: boolean
      type: object
    fiscalYearType:
      description: Fiscal Year Type
      properties:
        description:
          description: Description of the Year.
          maxLength: 100
          minLength: 0
          type: string
        endDate:
          description: End Date of the Year.
          format: date
          type: string
        hotelId:
          description: Resort for which the Year is defined.
          maxLength: 20
          minLength: 0
          type: string
        startDate:
          description: Start Date of the Year.
          format: date
          type: string
        year:
          description: Number of the Year.
          type: number
        yearId:
          description: Unique id of the Year.
          type: number
        yearType:
          $ref: '#/components/schemas/yearTypeType'
      type: object
    fiscalYears:
      properties:
        fiscalYears:
          description: List of Fiscal Years.
          items:
            $ref: '#/components/schemas/fiscalYearType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalYearsType:
      description: List of Fiscal Years.
      items:
        $ref: '#/components/schemas/fiscalYearType'
      maxItems: 4000
      type: array
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        quantity:
          description: Quantity of the product.
          type: integer
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    flatAmtGenerateType:
      description: Defines Flat Amount rule for generates.
      properties:
        amount:
          description: Flat Amount of the generate.
          type: number
      type: object
    folioArrangementCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    folioArrangementCodes:
      properties:
        folioArrangementCodes:
          description: Details for folio arrangement code along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/folioArrangementCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioArrangementCodesCopy:
      properties:
        folioArrangementCode:
          description: List of folio arrangement codes to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioArrangementCodesType:
      description: Details for folio arrangement code along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/folioArrangementCodeType'
      maxItems: 4000
      type: array
    folioCopyLegend:
      properties:
        criteria:
          $ref: '#/components/schemas/folioCopyLegendType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioCopyLegendType:
      description: Search criteria to fetch folio copy legends information.
      properties:
        code:
          description: Term code to be searched.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Term description
          maxLength: 100
          minLength: 0
          type: string
        languageCode:
          description: Language code to be searched.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    folioCopyLegends:
      properties:
        legends:
          description: Details about folio copy legends.
          items:
            $ref: '#/components/schemas/folioCopyLegendType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioCopyLegendsType:
      description: Details about folio copy legends.
      items:
        $ref: '#/components/schemas/folioCopyLegendType'
      maxItems: 4000
      type: array
    folioPrintQueueType:
      description: Folio Print queue identification details
      properties:
        billNumber:
          description: Last folio number
          type: integer
        fiscalBillNumber:
          description: Last fiscal bill number
          type: integer
        hotelId:
          description: Property associated with folio print queue
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the folio print queue is inactive or not.
          type: boolean
        incrementalValue:
          description: Incremental Value
          type: integer
        queueName:
          description: Folio print queue name
          maxLength: 100
          minLength: 0
          type: string
      type: object
    folioPrintQueues:
      properties:
        folioPrintQueues:
          description: List of folio print queues
          items:
            $ref: '#/components/schemas/folioPrintQueueType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioPrintQueuesType:
      description: List of folio print queues
      items:
        $ref: '#/components/schemas/folioPrintQueueType'
      maxItems: 4000
      type: array
    folioReportGroupType:
      description: "The Folio Report Group name. The folio report will be defined\
        \ under each group and based on where the folio has to be printed, Opera will\
        \ pick up the correct folio report name to print."
      enum:
      - Guest
      - Group
      - AccountsReceivables
      - PasserBy
      - PostIt
      - Expense
      - CorrectionHeader
      type: string
    folioReportType:
      description: "Folio Report associated with the Folio Type Name. Includes Name\
        \ Of the folio report,the Group for Folio Type Name belongs to and the Language\
        \ Code for which the folio is effective."
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        reportGroup:
          $ref: '#/components/schemas/folioReportGroupType'
        reportName:
          description: Name of the .REP or .RDF file. .REP or .RDF extension is not
            needed.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    folioReportsType:
      description: Information details of the Folio Reports associated with Folio
        Type Name.
      items:
        $ref: '#/components/schemas/folioReportType'
      maxItems: 4000
      type: array
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    folioTypeConfigType:
      description: Information detail for uniquely identifying a Folio Type Name.
      properties:
        aRFolio:
          description: "Folio type is Account Receivable or not, used in certain countries."
          type: boolean
        allowCreditFolio:
          description: "Allowed to create credit folio on existing folio type if user\
            \ gives the credit on the folio otherwise user is not allowed to give\
            \ a credit, used in certain countries."
          type: boolean
        allowFolioCompression:
          description: "Allowed to create compressed folio on existing folio type\
            \ if user tries to compress on the folio otherwise user is not allowed\
            \ to compress, used in certain countries."
          type: boolean
        allowFolioConversion:
          description: "Folio type used for Converting the Folios, used in certain\
            \ countries."
          type: boolean
        associatedCreditFolioType:
          description: Stores the Linked Associated Credit Folio Type.
          maxLength: 100
          minLength: 0
          type: string
        cityLedgerFolio:
          description: "Folio type is used for City Ledger bills or not or not, used\
            \ in certain countries."
          type: boolean
        code:
          description: Configuration code.
          maxLength: 40
          minLength: 0
          type: string
        compressedFolio:
          description: "Folio type is Compressible or not, indicates that the folio\
            \ which was created is a Compressed Folio based on the AllowFolioCompression\
            \ flag, used in certain countries."
          type: boolean
        correctionFolio:
          description: "Folio type is the correction or not, used in certain countries."
          type: boolean
        creditFolio:
          description: "Folio type used for Credit Folio or not, indicates that the\
            \ folio which was created is a Credit Folio based on the AllowCreditFolio\
            \ flag , used in certain countries."
          type: boolean
        debitFolio:
          description: "Folio type is a debit folio or not, used in certain countries."
          type: boolean
        depositFolio:
          description: "Folio type is a deposit folio type or not, used in certain\
            \ countries."
          type: boolean
        documentCode:
          description: "Document code which can be defined on each folio type, which\
            \ is an alphanumeric value can be used on Invoices or other documents\
            \ for tax purposes. E.g. In case of Portugal, this value is combined with\
            \ Folio Number for ATCUD requirements."
          maxLength: 20
          minLength: 0
          type: string
        fiscalFolio:
          description: "Folio Type is fiscal or not, used in certain countries."
          type: boolean
        folioReports:
          description: Information details of the Folio Reports associated with Folio
            Type Name.
          items:
            $ref: '#/components/schemas/folioReportType'
          maxItems: 4000
          type: array
        folioUsed:
          description: Flag to indicate if the Folio Type has been used to create
            a Folio.
          type: boolean
        guestClassification:
          description: "Type of guest Individual, Professional, etc, used in certain\
            \ countries."
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        informationFolio:
          description: Used only for Information and Pro-forma folios in certain countries.
          type: boolean
        internalFolio:
          description: "Folio type is internal or not, used in certain countries."
          type: boolean
        manualFolio:
          description: "Folio type has a manual folio type associated or not, used\
            \ in certain countries."
          type: boolean
        profileAttributes:
          $ref: '#/components/schemas/folioTypeProfileAttributes'
        sendFiscalFolio:
          description: Adding this flag at folio type level would decide to send fiscal
            folio (generate payload) or not.
          type: boolean
        simpleFolio:
          description: "Folio type is a simple folio type or not, used in certain\
            \ countries."
          type: boolean
        supplementalFolio:
          description: "Folio type is a supplemental folio ( debit bill ) type or\
            \ not, used in certain countries."
          type: boolean
        taxFolio:
          description: To indicate if the folio type is to be used for a tax folio.
            Used in Greece Country.
          type: boolean
        taxType:
          description: Name Tax Type associated with folio type.
          maxLength: 20
          minLength: 0
          type: string
        transactionServiceType:
          description: "Identify the service type of transaction, used in certain\
            \ countries."
          maxLength: 20
          minLength: 0
          type: string
        useNationality:
          description: "Folio type is used for Local national or foreigner, used in\
            \ certain countries."
          type: boolean
        useOriginalFolioStayDetails:
          description: Use original folio stay details on the folio which was created
            using the folio type.
          type: boolean
        useTaxNumber:
          description: "Folio type is used for profiles which have a tax number or\
            \ not, used in certain countries."
          type: boolean
      type: object
    folioTypeLegendMappingConfigCriteria:
      description: Request object to create folio type legend mapping information.
      properties:
        criteria:
          $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingConfigStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingConfigToBeChanged:
      description: Request object to edit folio type legend mapping information.
      properties:
        criteria:
          $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingConfigType:
      description: Folio type legened mapping information.
      properties:
        folioType:
          description: Folio type attached to the legend.
          maxLength: 20
          minLength: 0
          type: string
        folioTypeDescription:
          description: Folio type description attached to the legend.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Property associated with folio type legend mapping
          maxLength: 20
          minLength: 0
          type: string
        legendCode:
          description: Legend code to which folio types attached.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    folioTypeLegendMappingsConfigDetails:
      description: Response object for fetch folio type legend mapping.
      properties:
        legends:
          description: Details about folio type legened mapping.
          items:
            $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeLegendMappingsConfigType:
      description: Details about folio type legened mapping.
      items:
        $ref: '#/components/schemas/folioTypeLegendMappingConfigType'
      maxItems: 4000
      type: array
    folioTypeProfileAttributes:
      description: Profile is not configured with Tax Id.
      enum:
      - WithoutTaxId
      type: string
    folioTypesConfig:
      properties:
        folioTypes:
          description: Information details of the Folio Type Names.
          items:
            $ref: '#/components/schemas/folioTypeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypesConfigType:
      description: Information details of the Folio Type Names.
      items:
        $ref: '#/components/schemas/folioTypeConfigType'
      maxItems: 4000
      type: array
    foreignCurrencies:
      properties:
        foreignCurrencies:
          description: List of the Foreign Currencies to be configured or fetched
          items:
            $ref: '#/components/schemas/foreignCurrencyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    foreignCurrenciesType:
      description: List of the Foreign Currencies to be configured or fetched
      items:
        $ref: '#/components/schemas/foreignCurrencyType'
      maxItems: 4000
      type: array
    foreignCurrencyType:
      description: Provides information about the Foreign Currency Code.
      properties:
        currencyCode:
          description: Code of the Foreign Currency
          maxLength: 20
          minLength: 0
          type: string
        currencyLimits:
          description: Provides information about various limits on the Currency Code
          items:
            $ref: '#/components/schemas/currencyLimitType'
          maxItems: 6
          type: array
        decimals:
          description: Number of Decimal places defined for the Foreign Currency Code
          type: integer
        description:
          description: Description of the Foreign Currency Code
          maxLength: 80
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence
          type: number
        inactive:
          description: Indicates if the Foreign Currency Code is inactive
          type: boolean
        sellCurrency:
          description: Indicates if the Currency is available for selling
          type: boolean
        symbol:
          description: Symbol defined for the Currency
          maxLength: 10
          minLength: 0
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: Property Value
          type: string
      type: object
    functionArgumentType:
      description: This type provided details of a function argument and the value
        it holds.
      properties:
        dataType:
          description: Specifies the datatype of the function argument.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: Specifies the name of the function argument.
          maxLength: 200
          minLength: 0
          type: string
        position:
          description: Specifies the position of the function argument in the argument
            list.
          type: integer
        required:
          description: Argument of the function mandatory or not.
          type: boolean
        value:
          description: Specifies the value held by the function argument.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    functionArgumentsType:
      description: Collection of function arguments and their corresponding values.
      items:
        $ref: '#/components/schemas/functionArgumentType'
      maxItems: 4000
      type: array
    futurePastExchangeRates:
      description: Collection of exchange rates and their information.
      items:
        $ref: '#/components/schemas/exchangeRateType'
      maxItems: 4000
      type: array
    gLMappingType:
      description: Gl mapping for transaction codes specific to hotels like Hilton.
      properties:
        accountCode:
          description: Hilton GL Account code Description
          maxLength: 20
          minLength: 0
          type: string
        accountDescription:
          description: Hilton GL Account code Description
          maxLength: 2000
          minLength: 0
          type: string
        accountingCategory:
          description: Hilton Account Category Code
          maxLength: 20
          minLength: 0
          type: string
        chargeCode:
          description: Hilton GL Charge Category Code
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Hilton GL Account Currency Code
          maxLength: 20
          minLength: 0
          type: string
        departmentCode:
          description: Hilton Department Group Code
          maxLength: 20
          minLength: 0
          type: string
        itemId:
          description: Hilton Department Group Item Id
          maxLength: 40
          minLength: 0
          type: string
        productCode:
          description: Hilton Product Code
          maxLength: 20
          minLength: 0
          type: string
        statCode:
          description: Hilton GL Account StatCode
          maxLength: 20
          minLength: 0
          type: string
      type: object
    gUINumberPeriodType:
      description: Period set November-December
      enum:
      - JanuaryFebruary
      - MarchApril
      - MayJune
      - JulyAugust
      - SeptemberOctober
      - NovemberDecember
      type: string
    gUINumberRule:
      description: GUI Number rule
      properties:
        beginNo:
          description: BeginNo associated with GUI number
          type: integer
        currentFiscalBillNo:
          description: CurrentFiscalBillNo associated with GUI number
          type: integer
        endNo:
          description: EndNo associated with GUI number
          type: integer
        hotelId:
          description: Property associated with GUI number
          maxLength: 20
          minLength: 0
          type: string
        period:
          $ref: '#/components/schemas/gUINumberPeriodType'
        periodCode:
          description: Period code associated with period
          maxLength: 20
          minLength: 0
          type: string
        prefix:
          description: Prefix associated with GUI number.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    gUINumberRules:
      description: List of GUI number rules
      items:
        $ref: '#/components/schemas/gUINumberRule'
      maxItems: 4000
      type: array
    gUINumberRulesDetails:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        rules:
          description: List of GUI number rules
          items:
            $ref: '#/components/schemas/gUINumberRule'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    generalInfoType:
      properties:
        allPrintDetailOn:
          description: Indicator for Default All Print Details On.
          type: boolean
        allowCCCancelTransaction:
          description: Allow CC cancel transactions of a Hotel Interface
          type: boolean
        allowVideoCheckout:
          description: Indicator if video checkout is allowed or not.
          type: boolean
        cardPresentFlag:
          description: Card present of a Hotel Interface
          type: boolean
        ccVaultFunction:
          description: CC vault of a Hotel Interface
          type: boolean
        checkBalance:
          description: One of the video checkout options whether to check the balance.
          type: boolean
        checkCreditLimit:
          description: One of the video checkout options whether to check the credit
            limit.
          type: boolean
        checkRouting:
          description: One of the video checkout options whether to check the routing.
          type: boolean
        courtesyCardHandling:
          description: Courtesy card handling command of a Hotel Interface
          type: boolean
        createSVCheckIn:
          description: Create stored value during checkin of a Hotel Interface
          type: boolean
        departmentCode1:
          description: Department code 1 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        departmentCode2:
          description: Department code 2 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        device:
          description: Device of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        displayPhoneName:
          description: Indicator if the phone name will be displayed.
          type: boolean
        enableDBVerification:
          description: Enable DB verification of a Hotel Interface
          type: boolean
        enableFailover:
          description: Enable failover of a Hotel Interface
          type: boolean
        enableResend:
          description: Enable resend of a Hotel Interface
          type: boolean
        folioDisplayOption:
          description: Folio display option of the Hotel Interface applicable to VID
            and MSC. "0" means folio display option off. "A" means a guest folio display
            option. "U" means user defined folio display option.
          maxLength: 1
          minLength: 0
          type: string
        handleNightAudit:
          description: Handle night audit command of a Hotel Interface
          type: boolean
        iPAddress:
          description: IP Address of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        keyPinActive:
          description: Indicator if the Key Pin is active or not.
          type: boolean
        portNumber1:
          description: Logical port number 1 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber2:
          description: Logical port number 2 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber3:
          description: Logical port number 3 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber4:
          description: Logical port number 4 of a the Hotel Interface
          maxLength: 200
          minLength: 0
          type: string
        prevWake:
          description: Used by the Interface module (IFC7.exe).
          type: integer
        regularTransaction:
          description: Regular transaction command of a Hotel Interface
          type: boolean
        rollupTransactions:
          description: Rollup transactions flag of the Hotel Interface
          type: boolean
        sVRedeemTrx:
          description: Stored value reedeem transaction of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        sendARAuthType:
          description: Send AR auth type of a Hotel Interface
          type: boolean
        sendEndOfDay:
          description: Send end of day of a Hotel Interface
          type: boolean
        sendEnhancedFields:
          description: Send enhanced fields of a Hotel Interface
          type: boolean
        showSVTransaction:
          $ref: '#/components/schemas/sVTransactionType'
        showStoredValuePin:
          description: Show stored value pin of a Hotel Interface
          type: boolean
        storedValueSystem:
          description: Stored value system of a Hotel Interface
          type: boolean
        userDefinedFolio1:
          description: Indicator if the User defined folio 1 is utilized.
          type: boolean
        userDefinedFolio2:
          description: Indicator if the User defined folio 2 is utilized.
          type: boolean
        userDefinedFolio3:
          description: Indicator if the User defined folio 3 is utilized.
          type: boolean
        userDefinedFolio4:
          description: Indicator if the User defined folio 4 is utilized.
          type: boolean
        wakeDelay:
          description: Wakeup delay value of the Hotel Interface.
          type: integer
        wakeRetry:
          description: Wakeup retry limit of the Hotel Interface. Value range is 0
            to 999.
          type: integer
        wakeupHandledBy:
          description: "Determines who handles the wakeup calls, either by Opera (0)\
            \ or a Vendor (1)."
          maxLength: 1
          minLength: 0
          type: string
        wakeupYn:
          description: Indicator if the Hotel Interface handles wakeup calls.
          type: boolean
      type: object
    generateAdjustmentTypeType:
      description: Generates calculation bucket/group. Percentage generates are calculated
        against amount in one of the the calculation bucket.
      enum:
      - DuringEndOfDay
      - PromptAtCheckOut
      - NoAdjustment
      type: string
    generateCalcBucketType:
      description: Generates calculation bucket/group. Percentage generates are calculated
        against amount in one of the the calculation bucket.
      enum:
      - Base
      - Bucket1
      - Bucket2
      - Bucket3
      type: string
    generateCalcRuleType:
      description: Defines the Calculation Rule for the generate.
      properties:
        flatAmount:
          $ref: '#/components/schemas/flatAmtGenerateType'
        percentage:
          $ref: '#/components/schemas/percentageGenerateType'
        posting:
          $ref: '#/components/schemas/generatePostingRuleType'
        roundingMethod:
          $ref: '#/components/schemas/generateRoundingMethodType'
        taxTypeBased:
          description: Defines the Calculation Rule for the Tax Type for a specific
            date schedule
          items:
            $ref: '#/components/schemas/taxTypeGenerateType'
          maxItems: 4000
          type: array
        uDF:
          description: Defines User Defined Function to calculate generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionArguments:
          description: Collection of function arguments and their corresponding values.
          items:
            $ref: '#/components/schemas/functionArgumentType'
          maxItems: 4000
          type: array
        uDFFunctionName:
          description: The function name of the User Defined Function used to calculate
            generates.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    generateCalculationBucketsType:
      description: Defines the buckets the generated amount can be added to.
      properties:
        bucket1:
          description: Generate Calculation Bucket1.
          type: boolean
        bucket2:
          description: Generate Calculation Bucket2.
          type: boolean
        bucket3:
          description: Generate Calculation Bucket3.
          type: boolean
      type: object
    generateLevelType:
      description: Defines the level from which the generates was created.
      enum:
      - Group
      - SubGroup
      - TransactionCode
      type: string
    generatePostingRuleType:
      description: Advance Generates posting rules.
      properties:
        adjustmentType:
          $ref: '#/components/schemas/generateAdjustmentTypeType'
        applicableDays:
          description: Generates are posted/applicable only for first Applicable Days
            of the stay.
          type: integer
      type: object
    generateRoundingMethodType:
      description: "This type is only available for properties with zero decimals.\
        \ If a property is using decimal points, this type will not be available.\
        \ The rounding methods which can be specified are: UP, DOWN or NONE."
      enum:
      - Up
      - Down
      - None
      type: string
    generateType:
      description: Defines the Generate and its Calculation Rules
      properties:
        addGeneratedAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
        generateId:
          $ref: '#/components/schemas/uniqueID_Type'
        level:
          $ref: '#/components/schemas/generateLevelType'
        rule:
          $ref: '#/components/schemas/generateCalcRuleType'
      type: object
    generatesSetupType:
      description: Defines the Generates Setup and its Calculation Rules.
      properties:
        addBaseAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        generates:
          description: Defines the Generate and its Calculation Rules.
          items:
            $ref: '#/components/schemas/generateType'
          maxItems: 4000
          type: array
      type: object
    generatesType:
      description: Defines the Generate and its Calculation Rules.
      items:
        $ref: '#/components/schemas/generateType'
      maxItems: 4000
      type: array
    genericHotelCodeCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    groupArrangementCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
        transactionCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    groupArrangementCodes:
      properties:
        groupArrangementCodes:
          description: Details for group arrangement code along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/groupArrangementCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    groupArrangementCodesCopy:
      properties:
        groupArrangementCode:
          description: List of the group arrangement codes to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    groupArrangementCodesType:
      description: Details for group arrangement code along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/groupArrangementCodeType'
      maxItems: 4000
      type: array
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    hotelInterfaceDetail:
      description: Request object for changing Hotel Interface Data.
      properties:
        details:
          $ref: '#/components/schemas/hotelInterfaceDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceDetailType:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/interfaceAdditionalInfoType'
        classOfServiceInfo:
          $ref: '#/components/schemas/classOfServiceType'
        communicationInfo:
          $ref: '#/components/schemas/interfaceCommunicationInfoType'
        customDataInfo:
          $ref: '#/components/schemas/interfaceCustomDataInfoType'
        exportDataInfo:
          $ref: '#/components/schemas/interfaceExportDataInfoType'
        generalInfo:
          $ref: '#/components/schemas/generalInfoType'
        importRoomsInfo:
          $ref: '#/components/schemas/importRoomsType'
        postingsInfo:
          $ref: '#/components/schemas/postingInfoType'
        primaryInfo:
          $ref: '#/components/schemas/interfacePrimaryInfoType'
        transactionsInfo:
          $ref: '#/components/schemas/transactionCodeInfoType'
        translationInfo:
          $ref: '#/components/schemas/translationType'
        workstationSetupInfo:
          description: List of workstations of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceWorkstationType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    hotelInterfaceType:
      properties:
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelNoShowPostingRuleType:
      description: Provides information about No Show Posting Rule Configuration.
      properties:
        hotelId:
          description: Indicates for which hotel this posting rule apply to.
          maxLength: 20
          minLength: 0
          type: string
        postingRule:
          $ref: '#/components/schemas/postingRuleType'
        reservationType:
          description: Type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelNoShowPostingRulesType:
      description: Holds No Show Posting Rules Configuration details.
      items:
        $ref: '#/components/schemas/hotelNoShowPostingRuleType'
      maxItems: 4000
      type: array
    hotelTransactionCode:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionCode:
          $ref: '#/components/schemas/hotelTransactionCodeType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionCodeType:
      description: Transaction Code configuration details.
      properties:
        adjustmentCode:
          description: Transaction code to be used to make adjustments on the posting
            made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        allowServiceRecovery:
          description: Flag to identify if this transaction code already used as service
            recovery adjustment code.
          type: boolean
        amounts:
          $ref: '#/components/schemas/trxCodeAmountsType'
        associatedTransactionCodes:
          description: Code and description of the standard transaction code associated
            to this comp transaction code.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        classification:
          $ref: '#/components/schemas/trxCodeClassificationType'
        code:
          description: Unique Transaction Code.
          maxLength: 20
          minLength: 0
          type: string
        compTransaction:
          description: If true indicates this transaction codes is for Comp Accounting.
          type: boolean
        description:
          $ref: '#/components/schemas/translationTextType2000'
        gLMapping:
          $ref: '#/components/schemas/gLMappingType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        hotelId:
          description: Hotel's Transaction Code configuration detail.
          maxLength: 20
          minLength: 0
          type: string
        mappingCodes:
          description: Mapping code and value attached to Transaction Code.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          maxItems: 4000
          type: array
        paymentSetup:
          $ref: '#/components/schemas/paymentTrxSetupType'
        printTrxReceipt:
          type: boolean
        serviceRecoveryAdjustmentCode:
          description: Transaction code to be used to make service recovery adjustments
            on the posting made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionAdjustments:
          description: Combination of Adjustment Reason Code and Transaction Adjustment
            Code.
          items:
            $ref: '#/components/schemas/transactionAdjustmentType'
          maxItems: 4000
          type: array
        trxSetup:
          $ref: '#/components/schemas/trxSetupType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelTransactionCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionCodes:
          description: Transaction Code configuration details.
          items:
            $ref: '#/components/schemas/hotelTransactionCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionCodesType:
      description: Transaction Code configuration details.
      items:
        $ref: '#/components/schemas/hotelTransactionCodeType'
      maxItems: 4000
      type: array
    hotelTransactionDiscountType:
      description: Provides information about Transaction Discount Configuration.
      properties:
        amount:
          description: The amount applicable to the transaction discount.This would
            be a positive amount indicating the discount.
          format: double
          minimum: 0
          type: number
        articleCodes:
          description: Collection of article codes eligible for transaction discounts.
          items:
            type: string
          maxItems: 2000
          type: array
        codeType:
          $ref: '#/components/schemas/transactionDiscountCodeType'
        description:
          description: Description of the transaction discount.
          maxLength: 2000
          minLength: 1
          type: string
        discountAttributes:
          description: "Holds Transaction Discounts Attributes details.If discount\
            \ is applied to a membership type, only membership type details are required.\
            \ If discount is applied on a membership level , membership type and membership\
            \ level details are required."
          items:
            $ref: '#/components/schemas/transactionDiscountsAttributeType'
          maxItems: 2
          type: array
        hotelId:
          description: Indicates for which hotel this transaction discount apply to.
          maxLength: 20
          minLength: 1
          type: string
        inactive:
          description: Indicates whether the transaction discount is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          minimum: 1
          type: number
        percent:
          description: A percentage value if the transaction discount is percentage
            based.
          maximum: 100
          minimum: 0
          type: number
        ruleType:
          $ref: '#/components/schemas/transactionDiscountRuleType'
        transactionCodes:
          description: Collection of transaction codes eligible for transaction discounts.
          items:
            type: string
          type: array
        transactionDiscountCode:
          description: Unique code of the transaction discount.
          maxLength: 20
          minLength: 1
          type: string
        transactionDiscountId:
          description: Unique code of the transaction discount.
          type: number
      required:
      - codeType
      - description
      - discountAttributes
      - hotelId
      - ruleType
      - transactionDiscountCode
      type: object
    hotelTransactionGenerates:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionGenerates:
          $ref: '#/components/schemas/hotelTransactionGeneratesSetupType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionGeneratesSetupType:
      description: Defines the Generates Setup and its Calculation Rules.
      properties:
        addBaseAmtTo:
          $ref: '#/components/schemas/generateCalculationBucketsType'
        generates:
          description: Defines the Generate and its Calculation Rules.
          items:
            $ref: '#/components/schemas/generateType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Transaction group.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Transaction sub group.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelTransactionGroupType:
      description: Transaction Group configuration information.
      properties:
        code:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        generatesAvailable:
          description: Flag to determine whether generates are available or not
          type: boolean
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        hotelId:
          description: Hotel Code where the Transaction Group is configured.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    hotelTransactionGroupsType:
      description: Hotel's Transaction Group configuration.
      items:
        $ref: '#/components/schemas/hotelTransactionGroupType'
      maxItems: 4000
      type: array
    hotelTransactionSubgroup:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionSubgroup:
          $ref: '#/components/schemas/hotelTransactionSubgroupType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionSubgroupType:
      description: Transaction Subgroup configuration Information.
      properties:
        code:
          description: Transaction Subroup Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Transaction Subgroup.
          maxLength: 2000
          minLength: 0
          type: string
        generatesAvailable:
          description: Flag to determine whether generates are available or not
          type: boolean
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        group:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        groupDescription:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code where the Transaction Subgroup is configured.
          maxLength: 20
          minLength: 0
          type: string
        newGroup:
          description: Use this attribute to update the existing group during change
            operation.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    hotelTransactionSubgroups:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionSubgroups:
          description: Hotel's Transaction Subgroup configuration.
          items:
            $ref: '#/components/schemas/hotelTransactionSubgroupType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelTransactionSubgroupsType:
      description: Hotel's Transaction Subgroup configuration.
      items:
        $ref: '#/components/schemas/hotelTransactionSubgroupType'
      maxItems: 4000
      type: array
    hotelTrxCodesAccessType:
      description: Transaction Codes associated with particular Hotel
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction Code and Description. Description is for information
            only and is used for fetch operation.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    ifcMenuTypeType:
      description: Data Card System
      enum:
      - Cas
      - Kss
      - Mbs
      - Pbx
      - Pos
      - Vss
      - Dcs
      type: string
    importRoomsType:
      properties:
        inXlatId:
          description: Translation table for incoming messages.
          maxLength: 100
          minLength: 0
          type: string
        ioLines:
          description: Indicator for support of Input/Output Lines for Hotel Room
            Categories.
          type: boolean
        ouXlatId:
          description: Translation table for outgoing messages.
          maxLength: 100
          minLength: 0
          type: string
        requiresLineNumberSetup:
          description: "Indicator for Requires line number setup, from Import Rooms\
            \ related information of a Hotel Interface."
          type: boolean
        selectedRoomTypes:
          description: Concatenated label of Hotel Room Categories for which SendToInterface
            flag should be set as true.
          maxLength: 4000
          minLength: 0
          type: string
        virtualNumberSetup:
          description: "Indicator for Virtual number setup, from Import Rooms related\
            \ information of a Hotel Interface."
          type: boolean
      type: object
    indicatorType:
      description: Lamp indicator Type.
      properties:
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    interfaceAdditionalInfoType:
      properties:
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        additionalRoomsLimit:
          description: Maximum number of additional rooms allowed.
          maximum: 999
          minimum: 1
          type: integer
        autoStartFlag:
          description: Decides if the interface will be started automatically when
            the controller is restarted.
          type: boolean
        cashierId:
          description: Cashier Number.
          type: integer
        controllerPort:
          description: Opera IFC controller (server) port for the connecting clients.
          type: integer
        deleteIfcKeysOnKeyDelete:
          description: Indicator if the Interface Keys will be deleted on KeyDelete.
          type: boolean
        displayFlag:
          description: True if the interface will be displayed.
          type: boolean
        interfaceStatus:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        menuName:
          description: Name of the Interface sub-menu
          maxLength: 20
          minLength: 0
          type: string
        menuType:
          $ref: '#/components/schemas/ifcMenuTypeType'
        msgExpiresAfter:
          description: (Internal Use) Message Expires After
          maxLength: 8
          minLength: 0
          type: string
        multipleRoomKey:
          description: Indicator if the Hotel Interface allows multiple room selection
            for keys.
          type: boolean
        nAStart:
          description: Indicator if the Hotel Interface handles night audit commands.
          type: boolean
        onlineKeySystem:
          description: Indicator if the Hotel Interface is an online key system.
          type: boolean
        pathId1:
          description: Used if interface has to support more than one front office
            system.
          type: integer
        sendRoomStatus:
          description: Indicator if the Room Status will be sent.
          type: boolean
        sendTrack1Data:
          description: Indicator for Hotel Interface Send Track 1 Data.
          type: boolean
        sendTrack2Data:
          description: Indicator for Hotel Interface Send Track 2 Data.
          type: boolean
        sendValidStartDateTime:
          description: Indicator if the DLS Interface allows to send valid start date
            and time.
          type: boolean
        telephoneCharge:
          $ref: '#/components/schemas/telephoneChargeType'
        timeout:
          description: Used by the Interface module. ( IFC7.exe )
          maxLength: 3
          minLength: 0
          type: string
        useDataThroughFlag:
          type: boolean
        version:
          description: Version no. of each external interface that is installed
          maxLength: 10
          minLength: 0
          type: string
        vncPort:
          description: VNC server port for connecting to a VNC server.
          type: integer
      type: object
    interfaceCommunicationInfoType:
      properties:
        serialPortConfig:
          $ref: '#/components/schemas/serialPortConfigType'
        tCPConfig:
          $ref: '#/components/schemas/tCPConfigType'
      type: object
    interfaceControlArticleType:
      properties:
        articleNo:
          description: Article Number of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
        description:
          description: Description of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation article setup.
          type: integer
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        selector:
          description: Selector of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlCfgType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation configuration setup.
          type: integer
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        merchantId:
          description: Merchant Id of a translation configuration setup.
          maxLength: 100
          minLength: 0
          type: string
        originCode:
          description: Origin code of a translation configuration setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlLangType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation language setup.
          type: integer
        languageCode:
          description: Language code of a translation language setup.
          maxLength: 100
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        selector:
          description: Selector of a translation language setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlSpecType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation specification setup.
          type: integer
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        position:
          description: Position of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        priority:
          description: Priority of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        selector:
          description: Selector of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        specification:
          description: Specification of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceCustomDataDetailType:
      description: This gives information of custom detail of a hotel interface.
      properties:
        customDataField:
          description: Specifies the type of data stored.
          maxLength: 200
          minLength: 0
          type: string
        customDataValue:
          description: Specifies the actual data corresponding to each value in the
            field.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    interfaceCustomDataDetailsType:
      description: Collection of custom data details of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceCustomDataDetailType'
      maxItems: 4000
      type: array
    interfaceCustomDataInfoType:
      description: This type holds the custom data of a hotel interface.
      properties:
        exportAsXml:
          description: "Specifies whether the details have to be exported as XML.\
            \ If true, then the details are exported as XML else details are exported\
            \ as text."
          type: boolean
        includeDoorcardField:
          description: "Specifies whether the Doorcard field details have to be included\
            \ in the XML Export. If true, Doorcard field details will be included\
            \ in the XML Export else details will not be included. This field is available\
            \ only when the Export as XML field is selected."
          type: boolean
        interfaceCustomDataDetails:
          description: Collection of custom data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceCustomDataDetailType'
          maxItems: 4000
          type: array
      type: object
    interfaceExportDataDetailType:
      description: This gives information of export detail of a hotel interface.
      properties:
        columnName:
          description: Specifies the column name found in the table.
          maxLength: 50
          minLength: 0
          type: string
        columnSelected:
          description: Specifies whether the column is chosen to be included in the
            export.
          type: boolean
        dataLength:
          description: Specifies the length of data in the column.
          type: integer
        dataType:
          description: Specifies the type of data in the column.
          maxLength: 20
          minLength: 0
          type: string
        sourceTableName:
          description: Specifies the table where the event data is stored.
          maxLength: 50
          minLength: 0
          type: string
        xMLTagName:
          description: Specifies the tag name found in the export.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    interfaceExportDataDetailsType:
      description: Collection of export data details of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceExportDataDetailType'
      maxItems: 4000
      type: array
    interfaceExportDataInfoType:
      description: This type holds the export data of a hotel interface.
      properties:
        interfaceExportDataDetails:
          description: Collection of export data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceExportDataDetailType'
          maxItems: 4000
          type: array
        interfaceExportDataMandatoryDetails:
          description: Collection of export data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceExportDataDetailType'
          maxItems: 4000
          type: array
      type: object
    interfacePrimaryInfoType:
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceProductCode:
          description: FKT Logo required for the external interface.
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        licenseCode:
          description: Interface License code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineId:
          description: The ID stored in IFC_MACHINES table.
          type: integer
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        productCode:
          description: Three letter code that uniquely identifies the external interface.
          maxLength: 4
          minLength: 0
          type: string
      type: object
    interfaceRightsStatusType:
      properties:
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
      type: object
    interfaceWorkstationType:
      properties:
        deviceIp:
          description: IP of a workstation.
          maxLength: 200
          minLength: 0
          type: string
        deviceLocation:
          description: Device Group / Area.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code of a workstation.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a workstation.
          type: integer
        location:
          description: Location of a workstation.
          maxLength: 200
          minLength: 0
          type: string
        logo:
          description: Logo of a workstation.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Type of a workstation.
          maxLength: 2
          minLength: 0
          type: string
        workstation:
          description: Workstation of a hotel interface.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    itemizerShortInfoType:
      properties:
        code:
          description: Code of the itemizer on a transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        itemNumber:
          description: Itemizer number which is the split post on a transaction code
            setup.
          type: integer
        itemizerName:
          description: Itemizer name on a transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    itemizerType:
      properties:
        splitCode:
          description: Split code of the itemizer setup.
          maxLength: 10
          minLength: 0
          type: string
        splitFactor:
          description: Split factor of the itemizer setup.
          type: integer
        splitPost:
          description: Split posting of the itemizer setup.
          type: integer
        splitText:
          description: Split text of the itemizer setup.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    listOfDevicesType:
      items:
        $ref: '#/components/schemas/creditCardReaderDevicesType'
      maxItems: 4000
      type: array
    marketCodeInfoType:
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          maxLength: 20
          minLength: 0
          type: string
        marketGroup:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    marketCodeInformationBaseType:
      description: Budget Forecast information for budget segment code.
      properties:
        budgetRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        forecastRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        marketCode:
          description: Segment code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        marketCodeDescription:
          description: Segment code description for segment code.
          type: string
      type: object
    marketCodeInformationType:
      description: Budget Forecast information for budget segment code.
      properties:
        aBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        actualRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        budgetRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        fBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        forecastRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        marketCode:
          description: Segment code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        marketCodeDescription:
          description: Segment code description for segment code.
          type: string
      type: object
    marketCodeTotalInformationType:
      description: Budget Forecast information for segment.
      properties:
        aBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        actualTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        budgetTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        fBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        forecastTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
      type: object
    maskDialNumberType:
      description: Mask the dialled digits as per the room configuration.
      enum:
      - NoMasking
      - MaskLast2Digits
      - MaskLast4Digits
      - Mask4DigitsLeaveLast2Intact
      - MaskAllExceptFirst2
      - MaskAll
      - MaskingPerRoom
      type: string
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipTypeLevelType:
      properties:
        level:
          description: Description type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Code type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
      type: object
    monthNoType:
      description: December.
      enum:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - "8"
      - "9"
      - "10"
      - "11"
      - "12"
      type: string
    monthlyCateringInfoType:
      description: Holds monthly Catering summary information
      properties:
        covers:
          description: No of Covers for a month.
          type: integer
        month:
          description: Month number
          type: integer
        revenue:
          description: Revenue total for a month.
          type: number
      type: object
    monthlyCateringVarianceInfoType:
      description: Variance information for a catering segment code for a month.
      properties:
        coversVariance:
          description: Variance for a month.
          type: number
        month:
          description: Month number
          type: integer
        revenueVariance:
          description: Variance for a month.
          type: number
      type: object
    monthlyCustomVarianceInfoType:
      description: Value Variance information for a CUSTOM code for a month.
      properties:
        month:
          description: Month number
          type: integer
        variance:
          description: Variance for a month.
          type: number
      type: object
    monthlyRevenueNightsInfoType:
      description: Holds monthly revenue summary information
      properties:
        month:
          description: Month number
          type: integer
        revenue:
          description: Revenue total for a month.
          type: number
        roomNights:
          description: No of nights for a month.
          type: integer
      type: object
    monthlyRevenueNightsVarianceInfoType:
      description: Revenue Variance information for a segment code for a month.
      properties:
        month:
          description: Month number
          type: integer
        nightsVariance:
          description: Variance for a month.
          type: number
        revenueVariance:
          description: Variance for a month.
          type: number
      type: object
    monthlyTransactionInfoType:
      description: Holds monthly Revenue summary information
      properties:
        month:
          description: Month number
          type: integer
        revenue:
          description: Revenue information for a month.
          type: number
      type: object
    monthlyTransactionVarianceInfoType:
      description: Revenue Variance information for a segment code for a month.
      properties:
        month:
          description: Month number
          type: integer
        revenueVariance:
          description: Variance for a month.
          type: number
      type: object
    monthlyValueInfoType:
      description: Holds monthly value summary information
      properties:
        month:
          description: Month number
          type: integer
        value:
          description: Value information for a month.
          type: number
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    noShowPostingRuleEditType:
      description: Provides information about No Show Posting Rule Configuration.
      properties:
        hotelId:
          description: Indicates for which hotel this posting rule apply to.
          maxLength: 20
          minLength: 0
          type: string
        newRule:
          $ref: '#/components/schemas/noShowPostingRuleType'
        postingRule:
          $ref: '#/components/schemas/postingRuleType'
        reservationType:
          description: Type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    noShowPostingRuleType:
      description: Provides information about No Show Posting Rule Configuration.
      properties:
        postingRule:
          $ref: '#/components/schemas/postingRuleType'
        reservationType:
          description: Type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    noShowPostingRules:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        noShowPostingRules:
          description: Holds No Show Posting Rules Configuration details.
          items:
            $ref: '#/components/schemas/hotelNoShowPostingRuleType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    noShowPostingRulesEdit:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        noShowPostingRules:
          description: Contains new rules along with associated old rules to edit.
          items:
            $ref: '#/components/schemas/noShowPostingRuleEditType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    noShowPostingRulesEditType:
      description: Contains new rules along with associated old rules to edit.
      items:
        $ref: '#/components/schemas/noShowPostingRuleEditType'
      maxItems: 4000
      type: array
    numberCodeType:
      description: "Used for Number specific codes for OPERA tables. Possible values\
        \ of this pattern are 1, 10, 17, THOUSAND, BILLION, etc."
      maxLength: 200
      minLength: 0
      type: string
    numberDescriptionType:
      description: Indicates type definition for Numbers.
      properties:
        description:
          $ref: '#/components/schemas/translationTextType4000'
        numberCode:
          description: "Used for Number specific codes for OPERA tables. Possible\
            \ values of this pattern are 1, 10, 17, THOUSAND, BILLION, etc."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    numberDescriptions:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        numberDescriptions:
          description: Individual number and description.
          items:
            $ref: '#/components/schemas/numberDescriptionType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    numberDescriptionsType:
      description: Individual number and description.
      items:
        $ref: '#/components/schemas/numberDescriptionType'
      maxItems: 4000
      type: array
    operaControlSequences:
      properties:
        controlSequences:
          description: List of Control Sequence details
          items:
            $ref: '#/components/schemas/controlSequenceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    packageArrangementCodeType:
      description: Generic Type to specify unique/primary id for the code. mostly
        used for Hotel level configuration codes removal request.
      properties:
        arrangementId:
          description: Primay key of arrangement codes
          type: number
        code:
          description: Configuration code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel where the code is configured.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Represents whether the package arrangement code is inactive
            or not
          type: boolean
        revenue:
          description: specify whether the arrangement postings are classed as revenue.
          type: boolean
        taxTypeCode:
          description: information about the tax type code linked to the folio arrangment
            Code.
          type: string
      type: object
    packageArrangementCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        packageArrangementCodes:
          description: Details for package arrangement codes.
          items:
            $ref: '#/components/schemas/packageArrangementCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packageArrangementCodesCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        packageArrangementCode:
          description: List of the package arrangement codes to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packageArrangementCodesType:
      description: Details for package arrangement codes.
      items:
        $ref: '#/components/schemas/packageArrangementCodeType'
      maxItems: 4000
      type: array
    payeeInfoType:
      description: Payee information.
      properties:
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    paymentCardType:
      description: Contains credit card information.
      properties:
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        cardUsageRules:
          $ref: '#/components/schemas/cardUsageRulesType'
        merchantNumber:
          description: The merchant number to use when settling or transmitting credit
            card information.
          maxLength: 20
          minLength: 0
          type: string
        option:
          $ref: '#/components/schemas/cardOptionType'
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        userDefinedCardType:
          description: User defined credit card type if credit card type from a defined
            list is not provided.
          maxLength: 2
          minLength: 0
          type: string
        validation:
          $ref: '#/components/schemas/paymentMethodValidationRuleType'
      type: object
    paymentMethodTransactionInfoType:
      description: "Provides information about the transactions including the transaction\
        \ code, group, subgroup and the posting amount."
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        postingAmount:
          $ref: '#/components/schemas/postingAmountType'
        surcharge:
          $ref: '#/components/schemas/surchargeType'
        transactionCode:
          maxLength: 20
          minLength: 0
          type: string
        transactionDisplay:
          maxLength: 8
          minLength: 0
          type: string
        transactionGroup:
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    paymentMethodType:
      description: Provides information about the payment methods. CreditCardCode
        and CreditCardType help to determine if EFTs are allowed.
      properties:
        calculatePoints:
          $ref: '#/components/schemas/calculatePointsType'
        creditLimit:
          $ref: '#/components/schemas/creditLimitType'
        description:
          description: Description of the payment method.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property from which the payment method belongs to.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the payment method is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        paymentCard:
          $ref: '#/components/schemas/paymentCardType'
        paymentMethod:
          description: Defines the unique identifier for this payment method.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethodTransactionInfo:
          $ref: '#/components/schemas/paymentMethodTransactionInfoType'
        paymentMethodUsage:
          $ref: '#/components/schemas/paymentMethodUsageType'
      type: object
    paymentMethodUsageType:
      description: This provides information about the various usage options permitted
        for the given payment method.
      properties:
        accountsReceivable:
          description: Indicates if this payment method can be used for Accounts Receivables.
          type: boolean
        billing:
          description: Indicates if the payment method can be used for Guest Billing
          type: boolean
        cash:
          description: Indicates if this payment method is a Cash type payment method.
          type: boolean
        compAccounting:
          description: Indicates if this payment method can be used for Comp Accounting.
          type: boolean
        deposit:
          description: Indicates if this payment method can be used for Deposit payments.
          type: boolean
        posting:
          description: Indicates if postings can be manually added to the Reservation
            when this payment method is used.
          type: boolean
        reservation:
          description: Indicates if this payment method can be used as a Reservation
            payment method.
          type: boolean
      type: object
    paymentMethodValidationRuleType:
      description: Payment method card validation rules.
      properties:
        formula:
          description: Formula used for card validation. Only valid in case of user
            defined validation.
          maxLength: 2000
          minLength: 0
          type: string
        length:
          description: Valid lengths of card number.
          maxLength: 50
          minLength: 0
          type: string
        prefix:
          description: Valid card number prefix.
          maxLength: 50
          minLength: 0
          type: string
        ranges:
          description: Card number start and end range.
          items:
            $ref: '#/components/schemas/cardRangeType'
          maxItems: 4000
          type: array
        rule:
          $ref: '#/components/schemas/cardValidationRuleTypeType'
      type: object
    paymentMethods:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        paymentMethods:
          description: Holds the various types of payment methods.
          items:
            $ref: '#/components/schemas/paymentMethodType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentMethodsCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        paymentMethods:
          description: List of payment methods to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentMethodsInfo:
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        paymentMethods:
          description: Holds the various types of payment methods.
          items:
            $ref: '#/components/schemas/paymentMethodType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentMethodsType:
      description: Holds the various types of payment methods.
      items:
        $ref: '#/components/schemas/paymentMethodType'
      maxItems: 4000
      type: array
    paymentTrxCodeTypeType:
      description: Other Payment Type Transaction.
      enum:
      - Cash
      - Check
      - CreditCard
      - Others
      type: string
    paymentTrxSetupType:
      description: Payment Transaction Code setup details.
      properties:
        card:
          $ref: '#/components/schemas/cardPaymentTrxSetupType'
        generateTaxInvoice:
          description: Indicates if the Transaction Code payment will generate a Tax
            Invoice at the time of making a payment. Tax Invoices are used in Thailand.
          type: boolean
        iRS8300Reporting:
          description: True indicates the Transaction Code payment will be reposted
            to IRS according to the rule specified by IRS.
          type: boolean
        paymentType:
          $ref: '#/components/schemas/paymentTrxCodeTypeType'
        roundingFactor:
          description: True indicates the Transaction Code posting will have a rounding
            effect.
          type: boolean
        usage:
          $ref: '#/components/schemas/paymentTrxUsageType'
      type: object
    paymentTrxUsageType:
      description: Payment Transaction Code usage details.
      properties:
        aR:
          description: True indicates the payment Transaction Code is used for AR
            payments.
          type: boolean
        cashier:
          description: Indicates whether Profiles are shared across the Hotels within
            the chain or not.
          type: boolean
        comp:
          description: True indicates the payment Transaction Code is used for Comp
            payments.
          type: boolean
        deposit:
          description: True indicates the payment Transaction Code is used for deposits.
          type: boolean
        interHotelDeposit:
          description: True indicates the payment Transaction Code is used for inter
            hotel deposits.
          type: boolean
        interHotelPayment:
          description: True indicates the payment Transaction Code inter hotel payments.
          type: boolean
      type: object
    percentageGenerateType:
      description: Defines percentage rule for generates.
      properties:
        amount:
          description: Percentage Amount.
          maximum: 100
          minimum: 0
          type: number
        calculatedOn:
          $ref: '#/components/schemas/generateCalcBucketType'
        useTaxBracket:
          description: Determines if tax bracket calculations are to apply to generates.
          type: boolean
      type: object
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    postingAccountType:
      properties:
        account:
          description: Account of posting accounts in transaction codes setup.
          maxLength: 50
          minLength: 0
          type: string
        accountDescription:
          description: Account description of posting accounts in transaction codes
            setup.
          maxLength: 100
          minLength: 0
          type: string
        autoBalance:
          description: Auto balance flag of postings setup.
          type: boolean
        description:
          description: Description of posting accounts in transaction codes setup.
          maxLength: 2000
          minLength: 0
          type: string
        id:
          description: Internal ID to reference the records.
          type: number
        paymentMethod:
          description: Payment method of posting accounts in transaction codes setup.
          maxLength: 10
          minLength: 0
          type: string
        salesOutlet:
          description: Sales outlet of posting accounts in transaction codes setup.
          maxLength: 100
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of posting accounts in transaction codes setup.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    postingAmountType:
      properties:
        maximumAmount:
          $ref: '#/components/schemas/currencyAmountType'
        minimumAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    postingBucket:
      description: Holds the amount that will be stored in each bucket after posting.
      properties:
        bucket1:
          description: Holds amount for sub-total 1.
          type: number
        bucket2:
          description: Holds amount for sub-total 2.
          type: number
        bucket3:
          description: Holds amount for sub-total 3.
          type: number
      type: object
    postingInfoType:
      properties:
        articleNoPrefix:
          description: Article Prefix of postings setup.
          type: boolean
        chargeScaling:
          description: Charge scaling of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        conversion:
          description: Conversion of postings setup.
          type: integer
        dialedNumberMasking:
          $ref: '#/components/schemas/maskDialNumberType'
        generatesTax:
          description: IFC generate tax of postings setup.
          type: boolean
        noPostFlag:
          description: No post flag of postings setup.
          type: boolean
        overrideCreditLimit:
          description: Override credit limit of postings setup.
          type: boolean
        postType:
          description: Post type of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        postings:
          description: Postings of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        reference:
          description: Reference of postings setup.
          maxLength: 50
          minLength: 0
          type: string
        referenceField:
          description: Reference field of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        supplement:
          description: Supplement of postings setup.
          maxLength: 50
          minLength: 0
          type: string
        zeroChargePostings:
          description: Zero charge posting of postings setup.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    postingLimitType:
      description: Simple Type for Posting Limit Types.
      enum:
      - Daily
      - Monthly
      - PerTransaction
      type: string
    postingRuleType:
      description: Simple Type for Posting Rule Types.
      enum:
      - AllNights
      - DepositOnly
      - FirstNight
      type: string
    prepaidCardBalanceDetails:
      description: Response for fetch Prepaid card balance operation
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        prepaidCardDetails:
          $ref: '#/components/schemas/prepaidCardInfoType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardDetails:
      description: Response for fetch Prepaid card operation
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        prepaidCardDetails:
          $ref: '#/components/schemas/prepaidCardInfoType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardDetailsType:
      description: Prepaid Card Details.
      properties:
        activateDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        balanceTotal:
          $ref: '#/components/schemas/currencyAmountType'
        creditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        debitTotal:
          $ref: '#/components/schemas/currencyAmountType'
        expiredDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        initialCreditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        initialLoadDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        reservedTotal:
          $ref: '#/components/schemas/currencyAmountType'
        transactions:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardTransactionType'
          maxItems: 4000
          type: array
        validUntilDate:
          description: Holds fixed charge detail.
          format: date
          type: string
      type: object
    prepaidCardInfoType:
      description: Detailed information about the prepaid card.
      properties:
        availableCashoutAmount:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        expiryDate:
          description: Expiry Date of the prepaid card.
          format: date
          type: string
        hotelId:
          description: Hotel context for the prepaid card.
          maxLength: 20
          minLength: 0
          type: string
        initialCredit:
          $ref: '#/components/schemas/currencyAmountType'
        initialLoadDate:
          description: Initial Load Date of the prepaid card.
          format: date
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        issueDate:
          description: Issue Date of the prepaid card.
          format: date
          type: string
        operaTransactionsActive:
          description: Indicate if opera transactions are included on the transactions
            list.
          type: boolean
        prepaidCardTransactions:
          description: Prepaid card transaction details.
          items:
            $ref: '#/components/schemas/prepaidCardTransactionInfoType'
          maxItems: 4000
          type: array
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        totalCredit:
          $ref: '#/components/schemas/currencyAmountType'
        totalDebit:
          $ref: '#/components/schemas/currencyAmountType'
        validUntil:
          description: Validity of the prepaid card amount.
          format: date
          type: string
        vendorTransactionsActive:
          description: Indicate if vendor transactions are included on the transactions
            list.
          type: boolean
      type: object
    prepaidCardTransactionInfoType:
      description: Prepaid Card Transactions
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        cancellable:
          description: Indicate if the transaction is cancellable or not.
          type: boolean
        date:
          description: Prepaid card transaction date.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        source:
          $ref: '#/components/schemas/prepaidCardTransactionSourceType'
        transactionNo:
          description: Opera transaction number.
          type: integer
        type:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
        vendorTransactionNo:
          description: Vendor transaction number.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    prepaidCardTransactionSourceType:
      description: Vendor transaction source type.
      enum:
      - Opera
      - Vendor
      type: string
    prepaidCardTransactionType:
      description: Prepaid Card transaction.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        transactionDate:
          description: Transaction number of the Prepaid card transaction.
          format: date
          type: string
        transactionNo:
          description: Transaction number of the Prepaid card transaction.
          type: number
        transactionType:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
      type: object
    prepaidCardTransactionsType:
      description: Prepaid card transaction details.
      items:
        $ref: '#/components/schemas/prepaidCardTransactionInfoType'
      maxItems: 4000
      type: array
    prepaidCardTrxTypeType:
      description: Reload transaction.
      enum:
      - Activate
      - Cancel
      - Cashout
      - Inquiry
      - Issue
      - Redeem
      - Reload
      type: string
    prepaidCardType:
      description: Holds fixed charge information.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        cardDetails:
          $ref: '#/components/schemas/prepaidCardDetailsType'
        cardNo:
          description: Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        firstName:
          description: "Given name, first name or names."
          maxLength: 80
          minLength: 0
          type: string
        giftCard:
          description: Indicates a gift card type.
          type: boolean
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 80
          minLength: 0
          type: string
        pinCode:
          description: Prepaid card pin code.
          maxLength: 10
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    prepaidCards:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        prepaidCards:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardsType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/prepaidCardType'
      maxItems: 4000
      type: array
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileInfoType:
      description: Provides information about attached profiles to the block.
      properties:
        city:
          description: City for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        name:
          description: Name for the profile attached to the block.
          maxLength: 200
          minLength: 0
          type: string
        phone:
          description: Phone for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        type:
          description: Defines the type of Linked profiles for a block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
        sentTime:
          description: Time the text was last sent to the user.
          format: date-time
          type: string
      type: object
    rateCategoryType:
      description: This type represents the rate category type.
      properties:
        rateCategory:
          description: Rate category Code.
          maxLength: 20
          minLength: 0
          type: string
        rateCategoryDetails:
          $ref: '#/components/schemas/rateCategoryType_rateCategoryDetails'
      type: object
    rateCodeInformationBaseType:
      description: Budget Forecast information for budget segment code.
      properties:
        budgetRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        forecastRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        rateCode:
          description: Segment code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        rateCodeDescription:
          description: Segment code description for segment code.
          type: string
      type: object
    rateCodeInformationType:
      description: Budget Forecast information for budget segment code.
      properties:
        aBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        actualRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        budgetRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        fBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        forecastRevenueInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        rateCode:
          description: Segment code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        rateCodeDescription:
          description: Segment code description for segment code.
          type: string
      type: object
    rateCodeTotalInformationType:
      description: Budget Forecast information for segment.
      properties:
        aBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        actualTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        budgetTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
        fBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
          maxItems: 12
          type: array
        forecastTotalInfo:
          $ref: '#/components/schemas/revenueNightsInfoType'
      type: object
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        emails:
          $ref: '#/components/schemas/resCommunicationType_emails'
        telephones:
          $ref: '#/components/schemas/resCommunicationType_telephones'
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        address:
          $ref: '#/components/schemas/addressSearchType'
        alternateFullName:
          description: Altername full display name
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthDate:
          description: Date of birth
          format: date
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        fullName:
          description: Full display name
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        nationality:
          $ref: '#/components/schemas/countryNameType'
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        vip:
          $ref: '#/components/schemas/vIPType'
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        instructions:
          description: Turndown instructions for the room.
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
      type: object
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateExpired:
          type: boolean
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
      type: object
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationBasedCommissionType:
      description: Reservation based commission details.
      properties:
        commissionPaidDetails:
          $ref: '#/components/schemas/commissionPaidDetailsType'
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountRequired:
          description: Deposit Amount Required.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
      type: object
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        folioWindowNo:
          type: integer
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
      type: object
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType:
      properties:
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        folioView:
          type: integer
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    revenueBasedCommissionType:
      description: Revenue based commission details.
      items:
        $ref: '#/components/schemas/commissionCodeTransactionType'
      maxItems: 4000
      type: array
    revenueBucketCodeType:
      description: This gives detailed information about a trx code arrangement.
      properties:
        bucketType:
          $ref: '#/components/schemas/bucketTypeType'
        bucketValue:
          description: Stores the default value for the arrangement code for revenue
            buckets in order to group transaction codes.
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        pointsEligible:
          description: Bucket is eligible for membership points
          type: boolean
        revenueBucketType:
          description: This holds Revenue Bucket Type
          maxLength: 20
          minLength: 0
          type: string
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueBucketCodes:
          description: Details for Revenue Bucket codes along with associated transaction
            codes.
          items:
            $ref: '#/components/schemas/revenueBucketCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketCodesCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueBucketCodes:
          $ref: '#/components/schemas/configCopyRevenueBucketCodeType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketCodesType:
      description: Details for Revenue Bucket codes along with associated transaction
        codes.
      items:
        $ref: '#/components/schemas/revenueBucketCodeType'
      maxItems: 4000
      type: array
    revenueBucketTypeType:
      description: Provides information about Revenue Bucket Types.
      properties:
        bucketTrxCodes:
          description: Provides ability to configure same transaction code in multiple
            buckets.
          type: boolean
        bucketType:
          $ref: '#/components/schemas/bucketTypeType'
        code:
          description: Revenue Bucket Type Code
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Revenue Bucket Type Description
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    revenueBucketTypes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueBucketTypes:
          description: Holds Revenue Bucket Type details.
          items:
            $ref: '#/components/schemas/revenueBucketTypeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketTypesCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueBucketTypes:
          description: List of the Revenue Bucket Types to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketTypesType:
      description: Holds Revenue Bucket Type details.
      items:
        $ref: '#/components/schemas/revenueBucketTypeType'
      maxItems: 4000
      type: array
    revenueNightsInfoType:
      description: Revenue information for a segment code. Holds total and monthly
        revenue information.
      properties:
        monthlyRevenueInfo:
          description: Revenue information for each month for segment code.
          items:
            $ref: '#/components/schemas/monthlyRevenueNightsInfoType'
          maxItems: 12
          type: array
        totalNights:
          description: Total Nights for segment code.
          type: number
        totalRevenue:
          description: Total revenue for segment code.
          type: number
      type: object
    revenueNightsVarianceInfoType:
      description: Monthly Revenue Variance information.
      items:
        $ref: '#/components/schemas/monthlyRevenueNightsVarianceInfoType'
      maxItems: 12
      type: array
    revenueTypeMapping:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueTypeMapping:
          $ref: '#/components/schemas/revenueTypeMappingType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueTypeMappingCopy:
      description: Request object for Copying Revenue Type Mapping.
      properties:
        criteria:
          description: Provides Revenue Type Mapping details that needs to be copied.
          items:
            $ref: '#/components/schemas/copyRevenueTypeMappingListType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueTypeMappingList:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        revenueTypeMappingList:
          description: Collection of multiple Revenue type mapping codes.
          items:
            $ref: '#/components/schemas/revenueTypeMappingType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueTypeMappingListType:
      description: Collection of multiple Revenue type mapping codes.
      items:
        $ref: '#/components/schemas/revenueTypeMappingType'
      maxItems: 4000
      type: array
    revenueTypeMappingType:
      description: Type used for Revenue Type mapping.
      properties:
        cateringOnly:
          $ref: '#/components/schemas/cateringOnlyType'
        eventType:
          description: Provides information about the Event Type.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code to which the Revenue Type Mapping belongs to.
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: Provides information about the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        revenueTypeMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        serviceCharge:
          description: Service Charge for the Revenue Type.
          maximum: 100
          minimum: 0
          type: number
        serviceChargeCalulationMethod:
          description: Service Charge for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        serviceChargeTrxCode:
          description: Service Charge for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
        space:
          description: Provides information about the Space/Location for the Revenue
            Type.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code for the Revenue Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roleLevelType:
      enum:
      - Global
      - Template
      - Chain
      - Brand
      - Property
      type: string
    roomClassCodeInfoType:
      description: Code of the room class type.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomClassCode:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    routingInstructions:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        routingInstructions:
          description: This type holds a collection of routing instructions.
          items:
            $ref: '#/components/schemas/configRoutingInstructionType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    routingInstructionsCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        routingInstructions:
          description: List of the routing instructions to be copied to hotel code(s).
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    sVTransactionType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - OperaTransaction
      - VendorTransaction
      - OperaAndVendorTransaction
      type: string
    scopeType:
      description: Minimum required and complimentary values are applicable Per Stay.
      enum:
      - PerDay
      - PerStay
      type: string
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    segmentNameType:
      description: Forecast.
      enum:
      - Market
      - Rate
      - Custom
      - Transaction
      - Catering
      type: string
    serialPortConfigType:
      properties:
        baudRate:
          maxLength: 30
          minLength: 0
          type: string
        dataBits:
          type: integer
        parity:
          enum:
          - Odd
          - Even
          type: string
        portNumber:
          description: IP address of the interface server
          maxLength: 80
          minLength: 0
          type: string
        stopBits:
          type: integer
      type: object
    sourceCodeInfoType:
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
      type: object
    statementType:
      description: The Types of Statements that can be used on an Account Type.
      enum:
      - BalanceForward
      - IndividualOpenItems
      type: string
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    statusTypes:
      description: Defines status in terms of time.
      enum:
      - Future
      - Current
      - Past
      type: string
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        arrivalDate:
          format: date
          type: string
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        departureDate:
          format: date
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        numberOfRooms:
          description: Room Id
          type: integer
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        points:
          $ref: '#/components/schemas/pointsType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    stopProcessingReasonType:
      description: Details for Stop Processing Reason.
      properties:
        code:
          description: Code is used to identify a Stop Processing Reason.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Stop Processing Reason.
          maxLength: 2000
          minLength: 0
          type: string
        displaySequence:
          description: Stop Processing Reason display sequence Number.
          type: number
      type: object
    stopProcessingReasons:
      description: Response object for fetching Stop Processing Reason.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        stopProcessingReasons:
          description: List of the Stop Processing Reasons to be configured or fetched
          items:
            $ref: '#/components/schemas/stopProcessingReasonType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stopProcessingReasonsType:
      description: List of the Stop Processing Reasons to be configured or fetched
      items:
        $ref: '#/components/schemas/stopProcessingReasonType'
      maxItems: 4000
      type: array
    surchargeType:
      description: Surcharge information regarding the payment configuration.
      properties:
        minimum:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: Indicates the percentage amount for a credit card transaction.
          maximum: 100
          minimum: 0
          type: number
      type: object
    surnameType:
      description: "Family name, last name."
      maxLength: 40
      minLength: 0
      type: string
    tCPConfigType:
      properties:
        iPAddress:
          description: IP address of the interface server
          maxLength: 20
          minLength: 0
          type: string
        portNumber:
          description: Logical Port assignment
          maxLength: 80
          minLength: 0
          type: string
      type: object
    taxBracketAmountType:
      description: Details used for storing information about a tax bracket amount.
      properties:
        endAmount:
          $ref: '#/components/schemas/currencyAmountType'
        startAmount:
          $ref: '#/components/schemas/currencyAmountType'
        taxAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    taxBracketAmountsType:
      description: Details used for storing information about a tax bracket amount.
      items:
        $ref: '#/components/schemas/taxBracketAmountType'
      maxItems: 4000
      type: array
    taxBracketType:
      description: This gives information for uniquely identifying a tax bracket detail.
      properties:
        description:
          $ref: '#/components/schemas/translationTextType2000'
        hotelId:
          description: Hotel Code where tax bracket belongs to.
          maxLength: 20
          minLength: 0
          type: string
        taxBracketAmounts:
          description: Details used for storing information about a tax bracket amount.
          items:
            $ref: '#/components/schemas/taxBracketAmountType'
          maxItems: 4000
          type: array
        taxPercentage:
          description: Tax Percentage for which this Tax Bracket applies.
          type: number
        threshold:
          description: The threshold(max) amount for which Tax Brackets are defined
            for this percentage.
          type: number
      type: object
    taxBrackets:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxBrackets:
          description: Details used for storing information about a tax bracket.
          items:
            $ref: '#/components/schemas/taxBracketType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxBracketsCopy:
      properties:
        copyInstructions:
          description: Information needed to copy configuration code from one property
            to the other.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxBracketsType:
      description: Details used for storing information about a tax bracket.
      items:
        $ref: '#/components/schemas/taxBracketType'
      maxItems: 4000
      type: array
    taxCategoryCodeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    taxCategoryCodesCriteria:
      description: Request object for creating Tax Category Codes.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxCategoryCodes:
          description: List of Tax Category Codes.
          items:
            $ref: '#/components/schemas/taxCategoryCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxCategoryCodesDetails:
      description: Response object for fetching Tax Category Codes.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxCategoryCodes:
          description: List of Tax Category Codes.
          items:
            $ref: '#/components/schemas/taxCategoryCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxCategoryCodesToBeChanged:
      description: Request object for changing Tax Category Codes.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxCategoryCodes:
          description: List of Tax Category Codes.
          items:
            $ref: '#/components/schemas/taxCategoryCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxCategoryCodesType:
      description: List of Tax Category Codes.
      items:
        $ref: '#/components/schemas/taxCategoryCodeType'
      maxItems: 4000
      type: array
    taxCodeSeqType:
      description: Primary Key Sequence.
      maximum: 5
      minimum: 1
      type: integer
    taxOfficeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    taxOfficesCriteria:
      description: Request object for creating Tax Offices.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxOffices:
          description: List of Tax Offices.
          items:
            $ref: '#/components/schemas/taxOfficeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxOfficesDetails:
      description: Response object for fetching Tax Offices.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxOffices:
          description: List of Tax Offices.
          items:
            $ref: '#/components/schemas/taxOfficeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxOfficesToBeChanged:
      description: Request object for changing Tax Offices.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxOffices:
          description: List of Tax Offices.
          items:
            $ref: '#/components/schemas/taxOfficeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxOfficesType:
      description: List of Tax Offices.
      items:
        $ref: '#/components/schemas/taxOfficeType'
      maxItems: 4000
      type: array
    taxTypeCalcRuleType:
      description: Defines the Calculation Rule for the generate.
      properties:
        doNotPost:
          description: Existance of this type indicates that the generate will not
            be effective. This is mainly used on Tax Type based generates rule.
          type: object
        flatAmount:
          $ref: '#/components/schemas/flatAmtGenerateType'
        percentage:
          $ref: '#/components/schemas/percentageGenerateType'
        roundingMethod:
          $ref: '#/components/schemas/generateRoundingMethodType'
        uDF:
          $ref: '#/components/schemas/uDFGenerateType'
      type: object
    taxTypeGenerateScheduleType:
      description: Defines the Calculation Rule for the Tax Type for a specific date
        schedule
      properties:
        rule:
          $ref: '#/components/schemas/taxTypeCalcRuleType'
        startDate:
          description: Date when this schedule will be effective.
          format: date
          type: string
      type: object
    taxTypeGenerateType:
      description: Defines the Calculation Rules for the Tax Type
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
        schedule:
          description: Defines the Calculation Rule for the Tax Type for a specific
            date schedule
          items:
            $ref: '#/components/schemas/taxTypeGenerateScheduleType'
          maxItems: 4000
          type: array
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
      type: object
    taxTypes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxTypes:
          description: Holds Tax Type details.
          items:
            $ref: '#/components/schemas/taxTypeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxTypesCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxType:
          description: List of the Tax Types to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxTypesGenerate:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        taxTypes:
          description: Defines the Calculation Rule for the Tax Type for a specific
            date schedule
          items:
            $ref: '#/components/schemas/taxTypeGenerateType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxTypesGenerateType:
      description: Defines the Calculation Rule for the Tax Type for a specific date
        schedule
      items:
        $ref: '#/components/schemas/taxTypeGenerateType'
      maxItems: 4000
      type: array
    taxTypesType:
      description: Holds Tax Type details.
      items:
        $ref: '#/components/schemas/taxTypeType'
      maxItems: 4000
      type: array
    telephoneChargeType:
      description: Auto Choose
      enum:
      - "0"
      - "1"
      - "2"
      type: string
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        telephone:
          $ref: '#/components/schemas/telephoneType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    templateCashierShiftDropLocationType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    templateCashierShiftDropLocationsCriteria:
      description: Request object for creating Template Cashier Shift Drop Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        templateCashierShiftDropLocations:
          description: List of Template Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/templateCashierShiftDropLocationType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateCashierShiftDropLocationsDetails:
      description: Response object for fetching Template Cashier Shift Drop Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        templateCashierShiftDropLocations:
          description: List of Template Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/templateCashierShiftDropLocationType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateCashierShiftDropLocationsToBeChanged:
      description: Request object for changing Template Cashier Shift Drop Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        templateCashierShiftDropLocations:
          description: List of Template Cashier Shift Drop Locations.
          items:
            $ref: '#/components/schemas/templateCashierShiftDropLocationType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateCashierShiftDropLocationsType:
      description: List of Template Cashier Shift Drop Locations.
      items:
        $ref: '#/components/schemas/templateCashierShiftDropLocationType'
      maxItems: 4000
      type: array
    templateCustomNumberConfig:
      description: Request object to create a new template custom number configuration.
      properties:
        customNumberConfiguration:
          $ref: '#/components/schemas/customNumberTemplateConfigurationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateCustomNumberConfigDetails:
      description: Response object for fetching template custom number configurations.
      properties:
        customNumberConfigurationList:
          description: Details about template custom number configuration.
          items:
            $ref: '#/components/schemas/customNumberTemplateConfigurationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionCodeType:
      description: Transaction Code configuration details.
      properties:
        adjustmentCode:
          description: Transaction code to be used to make adjustments on the posting
            made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        allowServiceRecovery:
          description: Flag to identify if this transaction code already used as service
            recovery adjustment code.
          type: boolean
        amounts:
          $ref: '#/components/schemas/trxCodeAmountsType'
        associatedTransactionCodes:
          description: Code and description of the standard transaction code associated
            to this comp transaction code.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        classification:
          $ref: '#/components/schemas/trxCodeClassificationType'
        code:
          description: Unique Transaction Code.
          maxLength: 20
          minLength: 0
          type: string
        compTransaction:
          description: If true indicates this transaction codes is for Comp Accounting.
          type: boolean
        description:
          $ref: '#/components/schemas/translationTextType2000'
        gLMapping:
          $ref: '#/components/schemas/gLMappingType'
        generatesSetup:
          $ref: '#/components/schemas/generatesSetupType'
        mappingCodes:
          description: Mapping code and value attached to Transaction Code.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          maxItems: 4000
          type: array
        paymentSetup:
          $ref: '#/components/schemas/paymentTrxSetupType'
        serviceRecoveryAdjustmentCode:
          description: Transaction code to be used to make service recovery adjustments
            on the posting made using this transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionAdjustments:
          description: Combination of Adjustment Reason Code and Transaction Adjustment
            Code.
          items:
            $ref: '#/components/schemas/transactionAdjustmentType'
          maxItems: 4000
          type: array
        trxSetup:
          $ref: '#/components/schemas/trxSetupType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    templateTransactionCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionCodes:
          description: Template transaction code configuration details.
          items:
            $ref: '#/components/schemas/templateTransactionCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionCodesType:
      description: Template transaction code configuration details.
      items:
        $ref: '#/components/schemas/templateTransactionCodeType'
      maxItems: 4000
      type: array
    templateTransactionGroups:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionGroups:
          description: Template transaction groups.
          items:
            $ref: '#/components/schemas/transactionGroupType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionGroupsType:
      description: Template transaction groups.
      items:
        $ref: '#/components/schemas/transactionGroupType'
      maxItems: 4000
      type: array
    templateTransactionSubgroupIDType:
      description: Information that uniquely identifies template transaction subgroups
      properties:
        group:
          description: Template transaction group configuration code
          maxLength: 20
          minLength: 0
          type: string
        subgroup:
          description: Template transaction subgroup configuration code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    templateTransactionSubgroupIDsType:
      description: List of template transaction subgroup IDs
      items:
        $ref: '#/components/schemas/templateTransactionSubgroupIDType'
      maxItems: 4000
      type: array
    templateTransactionSubgroups:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionSubgroups:
          description: Template transaction subgroup configurations.
          items:
            $ref: '#/components/schemas/transactionSubgroupType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateTransactionSubgroupsType:
      description: Template transaction subgroup configurations.
      items:
        $ref: '#/components/schemas/transactionSubgroupType'
      maxItems: 4000
      type: array
    thresholdDetailsType:
      description: Type for the threshold elements.
      properties:
        complimentary:
          description: "The number of quantities, counts or minutes for which transaction\
            \ diversion is allowed ."
          type: integer
        entity:
          $ref: '#/components/schemas/entityType'
        isEditable:
          description: Configuring this flag to be TRUE will make the thresholds editable.
          type: boolean
        minRequired:
          description: "Minimum required number of quantities, counts or minutes that\
            \ must be posted."
          type: integer
        scope:
          $ref: '#/components/schemas/scopeType'
      type: object
    timeSpanDaysOfWeekType:
      description: Container for Time span with days of week.
      properties:
        friday:
          type: boolean
        monday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        thursday:
          type: boolean
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    traceResolveType:
      properties:
        resolvedBy:
          description: User that resolved the trace
          type: string
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        enteredBy:
          description: User that entered this trace.
          type: string
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
      type: object
    traceType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        traceText:
          description: The information this trace contains.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    trackItActionConfigType:
      description: Track It Action Information Type.
      properties:
        code:
          description: Code of the Track It Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Track It Code.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence.
          type: number
        hotelId:
          description: Property to which the Track It Code is configured.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates if the Track it Code is inactive.
          type: boolean
        status:
          $ref: '#/components/schemas/trackItActionStatusType'
        trackItGroup:
          $ref: '#/components/schemas/trackItGroupType'
      type: object
    trackItActionStatusType:
      description: Defined Values for Status of the Track it Action.
      enum:
      - Open
      - Closed
      type: string
    trackItActionsConfigType:
      description: Track It Action Collection element.
      items:
        $ref: '#/components/schemas/trackItActionConfigType'
      maxItems: 4000
      type: array
    trackItActionsCriteria:
      description: Request object for creating new Track it Actions.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItActions:
          description: Track It Action Collection element.
          items:
            $ref: '#/components/schemas/trackItActionConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItActionsDetails:
      description: Response object for fetching Track it Actions.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItActions:
          description: Track It Action Collection element.
          items:
            $ref: '#/components/schemas/trackItActionConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItActionsToBeChanged:
      description: Request object for changing existing Track it Actions.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItActions:
          description: Track It Action Collection element.
          items:
            $ref: '#/components/schemas/trackItActionConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItGroupType:
      properties:
        baggage:
          description: Indicates if the Track It belongs to the Baggage Group.
          type: boolean
        lost:
          description: Indicates if the Track It belongs to the Lost Group.
          type: boolean
        parcel:
          description: Indicates if the Track It belongs to the Parcel Group.
          type: boolean
        valet:
          description: Indicates if the Track It belongs to the Valet Group.
          type: boolean
      type: object
    trackItLocationConfigType:
      description: Track It Location Information Type.
      properties:
        code:
          description: Code of the Track It Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Track It Code.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence.
          type: number
        hotelId:
          description: Property to which the Track It Code is configured.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates if the Track it Code is inactive.
          type: boolean
        trackItGroup:
          $ref: '#/components/schemas/trackItGroupType'
      type: object
    trackItLocationsConfigType:
      description: Track It Locations Collection element.
      items:
        $ref: '#/components/schemas/trackItLocationConfigType'
      maxItems: 4000
      type: array
    trackItLocationsCriteria:
      description: Request object for creating new Track it Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItLocations:
          description: Track It Locations Collection element.
          items:
            $ref: '#/components/schemas/trackItLocationConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItLocationsDetails:
      description: Response object for fetching Track it Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItLocations:
          description: Track It Locations Collection element.
          items:
            $ref: '#/components/schemas/trackItLocationConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItLocationsToBeChanged:
      description: Request object for changing existing Track it Locations.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItLocations:
          description: Track It Locations Collection element.
          items:
            $ref: '#/components/schemas/trackItLocationConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItTypeConfigType:
      description: Track It Type Information Type.
      properties:
        code:
          description: Code of the Track It Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Track It Code.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: Display Sequence.
          type: number
        hotelId:
          description: Property to which the Track It Code is configured.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates if the Track it Code is inactive.
          type: boolean
        includePromptToSendMessage:
          description: Indicator to send a message to the guest when a new trackit
            item is created.
          type: boolean
        messageCode:
          description: Code of the Message to be sent.
          maxLength: 20
          minLength: 0
          type: string
        trackItGroup:
          $ref: '#/components/schemas/trackItGroupType'
        website:
          description: Website associated with Track it type.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    trackItTypesConfigType:
      description: Track It Type Collection element.
      items:
        $ref: '#/components/schemas/trackItTypeConfigType'
      maxItems: 4000
      type: array
    trackItTypesCriteria:
      description: Request object for creating new Track it Types.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItTypes:
          description: Track It Type Collection element.
          items:
            $ref: '#/components/schemas/trackItTypeConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItTypesDetails:
      description: Response object for fetching Track it Types.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItTypes:
          description: Track It Type Collection element.
          items:
            $ref: '#/components/schemas/trackItTypeConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trackItTypesToBeChanged:
      description: Request object for changing existing Track it Types.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trackItTypes:
          description: Track It Type Collection element.
          items:
            $ref: '#/components/schemas/trackItTypeConfigType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionAdjustmentType:
      description: Combination of Adjustment Reason Code and Transaction Adjustment
        Code.
      properties:
        adjustmentReasonCode:
          description: Adjustment reason Code
          maxLength: 20
          minLength: 0
          type: string
        adjustmentTransactionCode:
          description: Adjustment Transaction Code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transactionArrangementCodeType:
      description: This has arrangement codes association details for a transaction
        code.
      properties:
        dailyPlanCode:
          description: Daily plan code that is associated with the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        expenseArrangementCode:
          description: Expense arrangement code that is associated with the transaction
            code.
          maxLength: 20
          minLength: 0
          type: string
        folioArrangementCode:
          description: Folio arrangement code that is associated with the transaction
            code.
          maxLength: 20
          minLength: 0
          type: string
        groupArrangementCode:
          description: Group arrangement code that is associated with the transaction
            code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transactionArrangementCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionArrangementCodes:
          description: Contains transaction codes along with associated arrangement
            codes.
          items:
            $ref: '#/components/schemas/transactionArrangementCodeType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionArrangementCodesType:
      description: Contains transaction codes along with associated arrangement codes.
      items:
        $ref: '#/components/schemas/transactionArrangementCodeType'
      maxItems: 4000
      type: array
    transactionCodeAccessRoles:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionAccessRoles:
          description: List of Roles having access to set of transaction codes
          items:
            $ref: '#/components/schemas/trxCodeAccessRoleType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionCodeDetailType:
      properties:
        code:
          description: Code of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        description:
          description: Description of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        dialedDigits:
          description: Dialed digits of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        itemizersShortInfo:
          description: Itemizer short info of transaction code setup.
          items:
            $ref: '#/components/schemas/itemizerShortInfoType'
          maxItems: 4000
          type: array
        lineType:
          description: Line type of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        paymentNum:
          description: Payment number of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        postRoute:
          description: Post route of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        revenueCenter:
          description: Revenue center of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        rowNum:
          description: Row number of transaction code setup.
          type: integer
        servingPeriod:
          description: Serving period of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        terminal:
          description: Terminal of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        tipCode:
          description: Tip code of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        userId:
          description: User id of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    transactionCodeInfoType:
      properties:
        allChargesCode:
          description: All charges code of transaction code setup
          maxLength: 10
          minLength: 0
          type: string
        calcTrxCodePosting:
          description: Calculated transaction code posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        cashCreditCardPosting:
          description: Cash or credit card posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        differencePosting:
          description: Difference posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        itemizers:
          description: Split information of transaction code setup.
          items:
            $ref: '#/components/schemas/itemizerType'
          maxItems: 4000
          type: array
        miniBarCode:
          description: Minibar charges code of transaction code setup
          maxLength: 10
          minLength: 0
          type: string
        numberOfDialedDigits:
          description: Number of dialed digits transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        postingAccounts:
          description: Postings information of transaction codes setup.
          items:
            $ref: '#/components/schemas/postingAccountType'
          maxItems: 4000
          type: array
        subtotalPosting:
          description: Subtotal posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        transactionCodes:
          description: Split information of transaction code setup.
          items:
            $ref: '#/components/schemas/transactionCodeDetailType'
          maxItems: 4000
          type: array
      type: object
    transactionCodeInformationBaseType:
      description: Budget Forecast information for Transaction segment code.
      properties:
        budgetInfo:
          $ref: '#/components/schemas/transactionInfoType'
        forecastInfo:
          $ref: '#/components/schemas/transactionInfoType'
        transactionCode:
          description: Transaction code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        transactionCodeDescription:
          description: Transaction code description for Transaction code.
          type: string
        transactionCodeGrp:
          description: Transaction code group of segment code.
          type: string
      type: object
    transactionCodeInformationType:
      description: Budget Forecast information for Transaction segment code.
      properties:
        aBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        actualInfo:
          $ref: '#/components/schemas/transactionInfoType'
        budgetInfo:
          $ref: '#/components/schemas/transactionInfoType'
        fBVarianceInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        forecastInfo:
          $ref: '#/components/schemas/transactionInfoType'
        transactionCode:
          description: Transaction code for which budget forecast information is fetched.
          maxLength: 20
          minLength: 0
          type: string
        transactionCodeDescription:
          description: Transaction code description for Transaction code.
          type: string
        transactionCodeGrp:
          description: Transaction code group of segment code.
          type: string
      type: object
    transactionCodeOwnership:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionCodes:
          $ref: '#/components/schemas/changeTransactionCodeOwnershipType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionCodeTotalsInformationType:
      description: Budget Forecast totals information for Transaction segment.
      properties:
        aBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        aFVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        actualTotalInfo:
          $ref: '#/components/schemas/transactionInfoType'
        budgetTotalInfo:
          $ref: '#/components/schemas/transactionInfoType'
        fBVarianceTotalInfo:
          description: Monthly Revenue Variance information.
          items:
            $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
          maxItems: 12
          type: array
        forecastTotalInfo:
          $ref: '#/components/schemas/transactionInfoType'
      type: object
    transactionCodeTypeType:
      description: Other Charges Transaction.
      enum:
      - Lodging
      - FoodAndBeverage
      - Telephone
      - Minibar
      - Tax
      - NonRevenue
      - Others
      type: string
    transactionCodes:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        trxCodeUsages:
          description: Element on which the transaction code is being used.
          items:
            $ref: '#/components/schemas/trxCodeUsageType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionCodesCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionCodes:
          $ref: '#/components/schemas/copyTransactionCodesType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiscount:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionDiscount:
          $ref: '#/components/schemas/hotelTransactionDiscountType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiscountCodeType:
      description: The code type on which the transaction discount is based.
      enum:
      - Article
      - Transaction
      type: string
    transactionDiscountRuleType:
      description: The rule type on which the transaction discount is based.
      enum:
      - Membership
      type: string
    transactionDiscountType:
      description: "The type on which the transaction discount is based. e.g MembershipType\
        \ , MembershipLevel"
      enum:
      - MembershipType
      - MembershipLevel
      type: string
    transactionDiscounts:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionDiscounts:
          description: Collection of Transaction Discount Configurations.
          items:
            $ref: '#/components/schemas/hotelTransactionDiscountType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiscountsAttributeType:
      properties:
        transactionDiscountType:
          $ref: '#/components/schemas/transactionDiscountType'
        transactionDiscountTypeValue:
          description: Holds the value of transaction discount type. e.g the value
            of the membership type can be given when transactionDiscountType is set
            to MembershipType
          maxLength: 200
          minLength: 1
          type: string
      type: object
    transactionDiversionRuleLevelType:
      description: Reservation level.
      enum:
      - Property
      - Reservation
      type: string
    transactionDiversionRuleType:
      description: A Transaction Diversion Rule Type
      properties:
        code:
          description: Transaction Diversion Code
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: User defined message for the Transaction Diversion Rule.
          maxLength: 2000
          minLength: 0
          type: string
        displaySequence:
          description: User configured Sequence number.
          type: number
        hotelId:
          description: Hotel code with which Transaction Diversion Rule is associated.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicator that tells whether the transaction diversion rule
            is active or not.
          type: boolean
        level:
          $ref: '#/components/schemas/transactionDiversionRuleLevelType'
        membership:
          $ref: '#/components/schemas/membershipTypeLevelType'
        targetRoom:
          description: Room number to receive all the diverted transactions configured
            for this instruction.
          maxLength: 20
          minLength: 0
          type: string
        thresholds:
          $ref: '#/components/schemas/thresholdDetailsType'
        transactionCodes:
          description: Collection of Transaction Code List
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        type:
          $ref: '#/components/schemas/transactionDiversionRuleTypeType'
        vipCode:
          description: VIP code to consider while applying Diversion Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transactionDiversionRuleTypeType:
      description: "The rule type on which the Transaction Diversion Rule is based.\
        \ If a reservation has any of the following code, Transaction Diversion rule\
        \ gets active for that reservation"
      enum:
      - Vip
      - Membership
      type: string
    transactionDiversionRules:
      properties:
        diversionRules:
          description: Collection of Transaction Diversion Rule List
          items:
            $ref: '#/components/schemas/transactionDiversionRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiversionRulesType:
      description: Collection of Transaction Diversion Rule List
      items:
        $ref: '#/components/schemas/transactionDiversionRuleType'
      maxItems: 4000
      type: array
    transactionGroup:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionGroup:
          $ref: '#/components/schemas/hotelTransactionGroupType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionGroupType:
      description: Transaction Group configuration information.
      properties:
        code:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    transactionGroups:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionGroups:
          description: Hotel's Transaction Group configuration.
          items:
            $ref: '#/components/schemas/hotelTransactionGroupType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionGroupsCopy:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        transactionGroups:
          description: List of the transaction groups to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionInfoType:
      description: Revenue information for a TRANSACTION segment code. Holds total
        and monthly revenue information.
      properties:
        monthlyRevenueInfo:
          description: Value information for each month for TRANSACTION segment code.
          items:
            $ref: '#/components/schemas/monthlyTransactionInfoType'
          maxItems: 12
          type: array
        totalRevenue:
          description: Total Value for TRANSACTION segment code.
          type: number
      type: object
    transactionSubgroupType:
      description: Transaction Subgroup configuration Information.
      properties:
        code:
          description: Transaction Subroup Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Transaction Subgroup.
          maxLength: 2000
          minLength: 0
          type: string
        group:
          description: Transaction Group Configuration Code.
          maxLength: 20
          minLength: 0
          type: string
        groupDescription:
          description: Description of the Transaction Group.
          maxLength: 2000
          minLength: 0
          type: string
        newGroup:
          description: Use this attribute to update the existing group during change
            operation.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the code type.
          type: integer
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    transactionSubgroupsCopy:
      properties:
        copyInstructions:
          $ref: '#/components/schemas/copyTransactionSubgroupsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionVarianceInfoType:
      description: Monthly Revenue Variance information.
      items:
        $ref: '#/components/schemas/monthlyTransactionVarianceInfoType'
      maxItems: 12
      type: array
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationTextType4000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 4000.
          maxLength: 4000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationType:
      properties:
        articles:
          description: Translation article setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlArticleType'
          maxItems: 4000
          type: array
        configuation:
          description: Translation configuration of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlCfgType'
          maxItems: 4000
          type: array
        defaultCharge:
          description: Default charge of a translation setup.
          type: integer
        groupNoLength:
          description: Group number length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        guestMessageIdLength:
          description: Guest message id length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        guestNoLength:
          description: Guest number length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        languages:
          description: Translation languages setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlLangType'
          maxItems: 4000
          type: array
        specifications:
          description: Translation specifications setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlSpecType'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    trxCodeAccessRoleType:
      description: Role having access to set of transaction codes
      properties:
        code:
          description: Role code
          maxLength: 20
          minLength: 0
          type: string
        hotel:
          description: Transaction Codes associated with particular Hotel
          items:
            $ref: '#/components/schemas/hotelTrxCodesAccessType'
          maxItems: 4000
          type: array
        level:
          $ref: '#/components/schemas/roleLevelType'
        levelCode:
          description: "Role level code, for Chain Level code Level code will be Chain\
            \ Code the role belongs to and for Hotel level role it will b the Hotel\
            \ Code the role belongs to."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trxCodeAccessRolesType:
      description: List of Roles having access to set of transaction codes
      items:
        $ref: '#/components/schemas/trxCodeAccessRoleType'
      maxItems: 4000
      type: array
    trxCodeAmountsType:
      description: Transaction Code's default amount details.
      properties:
        currency:
          description: Default currency code for the amounts.
          maxLength: 20
          minLength: 0
          type: string
        defaultPrice:
          description: Default price of the Transaction Code.
          type: number
        maxAmount:
          description: Maximum Amount to be posted on this Transaction Code.
          type: number
        minAmount:
          description: Minimum amount to be posted on this Transaction Code.
          type: number
      type: object
    trxCodeClassificationType:
      description: Transaction Code Classification details.
      properties:
        fiscalTransactionType:
          description: Transaction code type for fiscal printing purposes.
          maxLength: 1
          minLength: 0
          type: string
        group:
          $ref: '#/components/schemas/codeDescriptionType'
        subgroup:
          $ref: '#/components/schemas/codeDescriptionType'
        transactionType:
          $ref: '#/components/schemas/trxCodeClassificationType_transactionType'
        type:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
      type: object
    trxCodeUsageType:
      description: Details about the element on which the transaction code is being
        used.
      properties:
        usageDetail:
          description: Specific codes of the element type on which the transaction
            code is being used.
          maxLength: 2000
          minLength: 0
          type: string
        usageName:
          description: Name of the element type on which the transaction code is being
            used.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    trxCodeUsagesType:
      description: Element on which the transaction code is being used.
      items:
        $ref: '#/components/schemas/trxCodeUsageType'
      maxItems: 4000
      type: array
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trxOwnershipType:
      description: Protected by the Property level
      enum:
      - Corporate
      - Property
      type: string
    trxSetupType:
      description: Transaction Code setup details.
      properties:
        accountingCode:
          description: Accounting Code for the transaction code.
          maxLength: 40
          minLength: 0
          type: string
        checkNoRequired:
          description: True indicates the Transaction Code requires the Check Number
            for posting.
          type: boolean
        depositPostingOnly:
          description: True indicates the Transaction Code is used for deposit postings
            only.
          type: boolean
        depositType:
          $ref: '#/components/schemas/depositTypeType'
        earnMembershipPoints:
          description: This flag indicates that the transaction is eligible to earn
            points (guest can earn points on the revenue posted to this transaction
            code)
          type: boolean
        generatesType:
          description: Short Summary information of the Chain and it's Hubs and Hotels.
          maxLength: 10
          minLength: 0
          type: string
        inactive:
          description: True indicates the Transaction Code is inactive.
          type: boolean
        includeInDepositRule:
          description: True indicates the Transaction Code posting will be included
            in Deposit/Cencallation rule calculations.
          type: boolean
        interHotelSales:
          description: True indicates the Transaction Code is used for cross posting
            across the hotels/.
          type: boolean
        manualPosting:
          description: True indicates the Transaction Code is allowed to be posted
            manually.
          type: boolean
        nonTaxable:
          description: True indicates the Transaction Code is non taxable.
          type: boolean
        ownershipStatus:
          $ref: '#/components/schemas/trxOwnershipType'
        postCovers:
          description: True indicates the Transaction Code is used to post covers.
          type: boolean
        postingRule:
          description: Deposit posting associated with the transaction code.
          type: boolean
        quantityCode:
          description: Quantity Code for the transaction code.
          maxLength: 40
          minLength: 0
          type: string
        redeemMembershipPoints:
          description: This flag indicates that the transaction is eligible to redeem
            points (guest can use their points to pay for transactions posted with
            this transaction code)
          type: boolean
        revenue:
          description: True indicates the Transaction Code is to be considered as
            revenue to the Hotel.
          type: boolean
        serviceType:
          description: Service Type for the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        taxInclusive:
          description: True indicates that the tax is inclusive in the generate.
          type: boolean
        useForPaidout:
          description: True indicates the Transaction Code is used for Paid outs.
          type: boolean
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    uDFGenerateType:
      description: Defines UDF rule for generates.
      properties:
        uDF:
          description: Defines User Defined Function to calculate generates.
          maxLength: 2000
          minLength: 0
          type: string
        uDFFunctionArguments:
          description: Collection of function arguments and their corresponding values.
          items:
            $ref: '#/components/schemas/functionArgumentType'
          maxItems: 4000
          type: array
        uDFFunctionName:
          description: The function name of the User Defined Function used to calculate
            generates.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    workstationSetupType:
      description: List of workstations of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceWorkstationType'
      maxItems: 4000
      type: array
    yearTypeType:
      description: Defined Values for Fiscal Year Type.
      enum:
      - Calendar
      - Fiscal
      type: string
    aRAccountType_lastReminderInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        historyExists:
          description: Indicates that reminders history exists.
          type: boolean
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    aRAccountType_lastStatementInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        historyExists:
          description: Indicates that statement history exists.
          type: boolean
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        statementNo:
          description: "When using Statement Numbering, a unique number is associated\
            \ to the Statement."
          type: integer
      type: object
    cashierType_usageInfo_history:
      description: Statistics about the use of the cashier.
      properties:
        lastOpened:
          description: The date that the cashier last opened.
          format: date
          type: string
        timesOpened:
          description: The number of times the cashier has opened their account today.
          type: integer
      type: object
    cashierType_usageInfo:
      description: Information about how the cashier is used.
      properties:
        history:
          $ref: '#/components/schemas/cashierType_usageInfo_history'
        maximumDailyUses:
          description: The Maximum Daily Uses for the cashier.
          type: integer
      type: object
    fiscalPeriods_cycleFiscalPeriods:
      description: Details of the Cycle Fiscal Periods
      properties:
        cycleFiscalPeriods:
          description: List of Cycle Fiscal Periods.
          items:
            $ref: '#/components/schemas/cycleFiscalPeriodType'
          maxItems: 4000
          type: array
        forceDelete:
          description: If true all overlapping periods will be deleted. No further
            confirmation required.
          type: boolean
      type: object
    folioTextsType_inner:
      properties:
        row:
          description: Row number of the additional text.
          type: integer
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    rateCategoryType_rateCategoryDetails:
      description: Begin date for the rate category.
      properties:
        beginDate:
          description: Begin date for the rate category.
          format: date
          type: string
        description:
          description: Description of rate category.
          maxLength: 200
          minLength: 0
          type: string
        endDate:
          description: End date for the rate category.
          format: date
          type: string
        rateClass:
          description: Active date of the room category.
          maxLength: 20
          minLength: 0
          type: string
        sellSequence:
          description: Indicates rate category sell sequence.
          type: number
      type: object
    resCommunicationType_emails:
      description: List of email address for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    resCommunicationType_telephones:
      description: List of Telephone Number Information
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    trxCodeClassificationType_transactionType:
      description: Transaction Code Type detail.
      properties:
        code:
          $ref: '#/components/schemas/transactionCodeTypeType'
        taxCode:
          description: Tax Code if the transaction Code if it is of type Tax.
          type: integer
      type: object
x-original-swagger-version: "2.0"
