/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the RevenueBucketTypeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevenueBucketTypeType{}

// RevenueBucketTypeType Provides information about Revenue Bucket Types.
type RevenueBucketTypeType struct {
	// Provides ability to configure same transaction code in multiple buckets.
	BucketTrxCodes *bool `json:"bucketTrxCodes,omitempty"`
	BucketType *BucketTypeType `json:"bucketType,omitempty"`
	// Revenue Bucket Type Code
	Code *string `json:"code,omitempty"`
	// Revenue Bucket Type Description
	Description *string `json:"description,omitempty"`
	// Code of the Hotel.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewRevenueBucketTypeType instantiates a new RevenueBucketTypeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevenueBucketTypeType() *RevenueBucketTypeType {
	this := RevenueBucketTypeType{}
	return &this
}

// NewRevenueBucketTypeTypeWithDefaults instantiates a new RevenueBucketTypeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevenueBucketTypeTypeWithDefaults() *RevenueBucketTypeType {
	this := RevenueBucketTypeType{}
	return &this
}

// GetBucketTrxCodes returns the BucketTrxCodes field value if set, zero value otherwise.
func (o *RevenueBucketTypeType) GetBucketTrxCodes() bool {
	if o == nil || IsNil(o.BucketTrxCodes) {
		var ret bool
		return ret
	}
	return *o.BucketTrxCodes
}

// GetBucketTrxCodesOk returns a tuple with the BucketTrxCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueBucketTypeType) GetBucketTrxCodesOk() (*bool, bool) {
	if o == nil || IsNil(o.BucketTrxCodes) {
		return nil, false
	}
	return o.BucketTrxCodes, true
}

// HasBucketTrxCodes returns a boolean if a field has been set.
func (o *RevenueBucketTypeType) HasBucketTrxCodes() bool {
	if o != nil && !IsNil(o.BucketTrxCodes) {
		return true
	}

	return false
}

// SetBucketTrxCodes gets a reference to the given bool and assigns it to the BucketTrxCodes field.
func (o *RevenueBucketTypeType) SetBucketTrxCodes(v bool) {
	o.BucketTrxCodes = &v
}

// GetBucketType returns the BucketType field value if set, zero value otherwise.
func (o *RevenueBucketTypeType) GetBucketType() BucketTypeType {
	if o == nil || IsNil(o.BucketType) {
		var ret BucketTypeType
		return ret
	}
	return *o.BucketType
}

// GetBucketTypeOk returns a tuple with the BucketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueBucketTypeType) GetBucketTypeOk() (*BucketTypeType, bool) {
	if o == nil || IsNil(o.BucketType) {
		return nil, false
	}
	return o.BucketType, true
}

// HasBucketType returns a boolean if a field has been set.
func (o *RevenueBucketTypeType) HasBucketType() bool {
	if o != nil && !IsNil(o.BucketType) {
		return true
	}

	return false
}

// SetBucketType gets a reference to the given BucketTypeType and assigns it to the BucketType field.
func (o *RevenueBucketTypeType) SetBucketType(v BucketTypeType) {
	o.BucketType = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *RevenueBucketTypeType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueBucketTypeType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *RevenueBucketTypeType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *RevenueBucketTypeType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RevenueBucketTypeType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueBucketTypeType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RevenueBucketTypeType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RevenueBucketTypeType) SetDescription(v string) {
	o.Description = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RevenueBucketTypeType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueBucketTypeType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RevenueBucketTypeType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RevenueBucketTypeType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o RevenueBucketTypeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevenueBucketTypeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketTrxCodes) {
		toSerialize["bucketTrxCodes"] = o.BucketTrxCodes
	}
	if !IsNil(o.BucketType) {
		toSerialize["bucketType"] = o.BucketType
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableRevenueBucketTypeType struct {
	value *RevenueBucketTypeType
	isSet bool
}

func (v NullableRevenueBucketTypeType) Get() *RevenueBucketTypeType {
	return v.value
}

func (v *NullableRevenueBucketTypeType) Set(val *RevenueBucketTypeType) {
	v.value = val
	v.isSet = true
}

func (v NullableRevenueBucketTypeType) IsSet() bool {
	return v.isSet
}

func (v *NullableRevenueBucketTypeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevenueBucketTypeType(val *RevenueBucketTypeType) *NullableRevenueBucketTypeType {
	return &NullableRevenueBucketTypeType{value: val, isSet: true}
}

func (v NullableRevenueBucketTypeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevenueBucketTypeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


