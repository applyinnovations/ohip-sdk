/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
	"fmt"
)

// CustomNumberConfigurationAreaType Receipt
type CustomNumberConfigurationAreaType string

// List of customNumberConfigurationAreaType
const (
	CUSTOMNUMBERCONFIGURATIONAREATYPE_FOLIO CustomNumberConfigurationAreaType = "Folio"
	CUSTOMNUMBERCONFIGURATIONAREATYPE_RECEIPT CustomNumberConfigurationAreaType = "Receipt"
)

// All allowed values of CustomNumberConfigurationAreaType enum
var AllowedCustomNumberConfigurationAreaTypeEnumValues = []CustomNumberConfigurationAreaType{
	"Folio",
	"Receipt",
}

func (v *CustomNumberConfigurationAreaType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CustomNumberConfigurationAreaType(value)
	for _, existing := range AllowedCustomNumberConfigurationAreaTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CustomNumberConfigurationAreaType", value)
}

// NewCustomNumberConfigurationAreaTypeFromValue returns a pointer to a valid CustomNumberConfigurationAreaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomNumberConfigurationAreaTypeFromValue(v string) (*CustomNumberConfigurationAreaType, error) {
	ev := CustomNumberConfigurationAreaType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomNumberConfigurationAreaType: valid values are %v", v, AllowedCustomNumberConfigurationAreaTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomNumberConfigurationAreaType) IsValid() bool {
	for _, existing := range AllowedCustomNumberConfigurationAreaTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to customNumberConfigurationAreaType value
func (v CustomNumberConfigurationAreaType) Ptr() *CustomNumberConfigurationAreaType {
	return &v
}

type NullableCustomNumberConfigurationAreaType struct {
	value *CustomNumberConfigurationAreaType
	isSet bool
}

func (v NullableCustomNumberConfigurationAreaType) Get() *CustomNumberConfigurationAreaType {
	return v.value
}

func (v *NullableCustomNumberConfigurationAreaType) Set(val *CustomNumberConfigurationAreaType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomNumberConfigurationAreaType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomNumberConfigurationAreaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomNumberConfigurationAreaType(val *CustomNumberConfigurationAreaType) *NullableCustomNumberConfigurationAreaType {
	return &NullableCustomNumberConfigurationAreaType{value: val, isSet: true}
}

func (v NullableCustomNumberConfigurationAreaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomNumberConfigurationAreaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

