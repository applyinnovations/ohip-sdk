/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the FolioTypeConfigType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioTypeConfigType{}

// FolioTypeConfigType Information detail for uniquely identifying a Folio Type Name.
type FolioTypeConfigType struct {
	// Folio type is Account Receivable or not, used in certain countries.
	ARFolio *bool `json:"aRFolio,omitempty"`
	// Allowed to create credit folio on existing folio type if user gives the credit on the folio otherwise user is not allowed to give a credit, used in certain countries.
	AllowCreditFolio *bool `json:"allowCreditFolio,omitempty"`
	// Allowed to create compressed folio on existing folio type if user tries to compress on the folio otherwise user is not allowed to compress, used in certain countries.
	AllowFolioCompression *bool `json:"allowFolioCompression,omitempty"`
	// Folio type used for Converting the Folios, used in certain countries.
	AllowFolioConversion *bool `json:"allowFolioConversion,omitempty"`
	// Stores the Linked Associated Credit Folio Type.
	AssociatedCreditFolioType *string `json:"associatedCreditFolioType,omitempty"`
	// Folio type is used for City Ledger bills or not or not, used in certain countries.
	CityLedgerFolio *bool `json:"cityLedgerFolio,omitempty"`
	// Configuration code.
	Code *string `json:"code,omitempty"`
	// Folio type is Compressible or not, indicates that the folio which was created is a Compressed Folio based on the AllowFolioCompression flag, used in certain countries.
	CompressedFolio *bool `json:"compressedFolio,omitempty"`
	// Folio type is the correction or not, used in certain countries.
	CorrectionFolio *bool `json:"correctionFolio,omitempty"`
	// Folio type used for Credit Folio or not, indicates that the folio which was created is a Credit Folio based on the AllowCreditFolio flag , used in certain countries.
	CreditFolio *bool `json:"creditFolio,omitempty"`
	// Folio type is a debit folio or not, used in certain countries.
	DebitFolio *bool `json:"debitFolio,omitempty"`
	// Folio type is a deposit folio type or not, used in certain countries.
	DepositFolio *bool `json:"depositFolio,omitempty"`
	// Document code which can be defined on each folio type, which is an alphanumeric value can be used on Invoices or other documents for tax purposes. E.g. In case of Portugal, this value is combined with Folio Number for ATCUD requirements.
	DocumentCode *string `json:"documentCode,omitempty"`
	// Folio Type is fiscal or not, used in certain countries.
	FiscalFolio *bool `json:"fiscalFolio,omitempty"`
	// Information details of the Folio Reports associated with Folio Type Name.
	FolioReports []FolioReportType `json:"folioReports,omitempty"`
	// Flag to indicate if the Folio Type has been used to create a Folio.
	FolioUsed *bool `json:"folioUsed,omitempty"`
	// Type of guest Individual, Professional, etc, used in certain countries.
	GuestClassification *string `json:"guestClassification,omitempty"`
	// Hotel where the code is configured.
	HotelId *string `json:"hotelId,omitempty"`
	// Used only for Information and Pro-forma folios in certain countries.
	InformationFolio *bool `json:"informationFolio,omitempty"`
	// Folio type is internal or not, used in certain countries.
	InternalFolio *bool `json:"internalFolio,omitempty"`
	// Folio type has a manual folio type associated or not, used in certain countries.
	ManualFolio *bool `json:"manualFolio,omitempty"`
	ProfileAttributes *FolioTypeProfileAttributes `json:"profileAttributes,omitempty"`
	// Adding this flag at folio type level would decide to send fiscal folio (generate payload) or not.
	SendFiscalFolio *bool `json:"sendFiscalFolio,omitempty"`
	// Folio type is a simple folio type or not, used in certain countries.
	SimpleFolio *bool `json:"simpleFolio,omitempty"`
	// Folio type is a supplemental folio ( debit bill ) type or not, used in certain countries.
	SupplementalFolio *bool `json:"supplementalFolio,omitempty"`
	// To indicate if the folio type is to be used for a tax folio. Used in Greece Country.
	TaxFolio *bool `json:"taxFolio,omitempty"`
	// Name Tax Type associated with folio type.
	TaxType *string `json:"taxType,omitempty"`
	// Identify the service type of transaction, used in certain countries.
	TransactionServiceType *string `json:"transactionServiceType,omitempty"`
	// Folio type is used for Local national or foreigner, used in certain countries.
	UseNationality *bool `json:"useNationality,omitempty"`
	// Use original folio stay details on the folio which was created using the folio type.
	UseOriginalFolioStayDetails *bool `json:"useOriginalFolioStayDetails,omitempty"`
	// Folio type is used for profiles which have a tax number or not, used in certain countries.
	UseTaxNumber *bool `json:"useTaxNumber,omitempty"`
}

// NewFolioTypeConfigType instantiates a new FolioTypeConfigType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioTypeConfigType() *FolioTypeConfigType {
	this := FolioTypeConfigType{}
	return &this
}

// NewFolioTypeConfigTypeWithDefaults instantiates a new FolioTypeConfigType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioTypeConfigTypeWithDefaults() *FolioTypeConfigType {
	this := FolioTypeConfigType{}
	return &this
}

// GetARFolio returns the ARFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetARFolio() bool {
	if o == nil || IsNil(o.ARFolio) {
		var ret bool
		return ret
	}
	return *o.ARFolio
}

// GetARFolioOk returns a tuple with the ARFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetARFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.ARFolio) {
		return nil, false
	}
	return o.ARFolio, true
}

// HasARFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasARFolio() bool {
	if o != nil && !IsNil(o.ARFolio) {
		return true
	}

	return false
}

// SetARFolio gets a reference to the given bool and assigns it to the ARFolio field.
func (o *FolioTypeConfigType) SetARFolio(v bool) {
	o.ARFolio = &v
}

// GetAllowCreditFolio returns the AllowCreditFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetAllowCreditFolio() bool {
	if o == nil || IsNil(o.AllowCreditFolio) {
		var ret bool
		return ret
	}
	return *o.AllowCreditFolio
}

// GetAllowCreditFolioOk returns a tuple with the AllowCreditFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetAllowCreditFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreditFolio) {
		return nil, false
	}
	return o.AllowCreditFolio, true
}

// HasAllowCreditFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasAllowCreditFolio() bool {
	if o != nil && !IsNil(o.AllowCreditFolio) {
		return true
	}

	return false
}

// SetAllowCreditFolio gets a reference to the given bool and assigns it to the AllowCreditFolio field.
func (o *FolioTypeConfigType) SetAllowCreditFolio(v bool) {
	o.AllowCreditFolio = &v
}

// GetAllowFolioCompression returns the AllowFolioCompression field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetAllowFolioCompression() bool {
	if o == nil || IsNil(o.AllowFolioCompression) {
		var ret bool
		return ret
	}
	return *o.AllowFolioCompression
}

// GetAllowFolioCompressionOk returns a tuple with the AllowFolioCompression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetAllowFolioCompressionOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFolioCompression) {
		return nil, false
	}
	return o.AllowFolioCompression, true
}

// HasAllowFolioCompression returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasAllowFolioCompression() bool {
	if o != nil && !IsNil(o.AllowFolioCompression) {
		return true
	}

	return false
}

// SetAllowFolioCompression gets a reference to the given bool and assigns it to the AllowFolioCompression field.
func (o *FolioTypeConfigType) SetAllowFolioCompression(v bool) {
	o.AllowFolioCompression = &v
}

// GetAllowFolioConversion returns the AllowFolioConversion field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetAllowFolioConversion() bool {
	if o == nil || IsNil(o.AllowFolioConversion) {
		var ret bool
		return ret
	}
	return *o.AllowFolioConversion
}

// GetAllowFolioConversionOk returns a tuple with the AllowFolioConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetAllowFolioConversionOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFolioConversion) {
		return nil, false
	}
	return o.AllowFolioConversion, true
}

// HasAllowFolioConversion returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasAllowFolioConversion() bool {
	if o != nil && !IsNil(o.AllowFolioConversion) {
		return true
	}

	return false
}

// SetAllowFolioConversion gets a reference to the given bool and assigns it to the AllowFolioConversion field.
func (o *FolioTypeConfigType) SetAllowFolioConversion(v bool) {
	o.AllowFolioConversion = &v
}

// GetAssociatedCreditFolioType returns the AssociatedCreditFolioType field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetAssociatedCreditFolioType() string {
	if o == nil || IsNil(o.AssociatedCreditFolioType) {
		var ret string
		return ret
	}
	return *o.AssociatedCreditFolioType
}

// GetAssociatedCreditFolioTypeOk returns a tuple with the AssociatedCreditFolioType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetAssociatedCreditFolioTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedCreditFolioType) {
		return nil, false
	}
	return o.AssociatedCreditFolioType, true
}

// HasAssociatedCreditFolioType returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasAssociatedCreditFolioType() bool {
	if o != nil && !IsNil(o.AssociatedCreditFolioType) {
		return true
	}

	return false
}

// SetAssociatedCreditFolioType gets a reference to the given string and assigns it to the AssociatedCreditFolioType field.
func (o *FolioTypeConfigType) SetAssociatedCreditFolioType(v string) {
	o.AssociatedCreditFolioType = &v
}

// GetCityLedgerFolio returns the CityLedgerFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetCityLedgerFolio() bool {
	if o == nil || IsNil(o.CityLedgerFolio) {
		var ret bool
		return ret
	}
	return *o.CityLedgerFolio
}

// GetCityLedgerFolioOk returns a tuple with the CityLedgerFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetCityLedgerFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.CityLedgerFolio) {
		return nil, false
	}
	return o.CityLedgerFolio, true
}

// HasCityLedgerFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasCityLedgerFolio() bool {
	if o != nil && !IsNil(o.CityLedgerFolio) {
		return true
	}

	return false
}

// SetCityLedgerFolio gets a reference to the given bool and assigns it to the CityLedgerFolio field.
func (o *FolioTypeConfigType) SetCityLedgerFolio(v bool) {
	o.CityLedgerFolio = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FolioTypeConfigType) SetCode(v string) {
	o.Code = &v
}

// GetCompressedFolio returns the CompressedFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetCompressedFolio() bool {
	if o == nil || IsNil(o.CompressedFolio) {
		var ret bool
		return ret
	}
	return *o.CompressedFolio
}

// GetCompressedFolioOk returns a tuple with the CompressedFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetCompressedFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.CompressedFolio) {
		return nil, false
	}
	return o.CompressedFolio, true
}

// HasCompressedFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasCompressedFolio() bool {
	if o != nil && !IsNil(o.CompressedFolio) {
		return true
	}

	return false
}

// SetCompressedFolio gets a reference to the given bool and assigns it to the CompressedFolio field.
func (o *FolioTypeConfigType) SetCompressedFolio(v bool) {
	o.CompressedFolio = &v
}

// GetCorrectionFolio returns the CorrectionFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetCorrectionFolio() bool {
	if o == nil || IsNil(o.CorrectionFolio) {
		var ret bool
		return ret
	}
	return *o.CorrectionFolio
}

// GetCorrectionFolioOk returns a tuple with the CorrectionFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetCorrectionFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.CorrectionFolio) {
		return nil, false
	}
	return o.CorrectionFolio, true
}

// HasCorrectionFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasCorrectionFolio() bool {
	if o != nil && !IsNil(o.CorrectionFolio) {
		return true
	}

	return false
}

// SetCorrectionFolio gets a reference to the given bool and assigns it to the CorrectionFolio field.
func (o *FolioTypeConfigType) SetCorrectionFolio(v bool) {
	o.CorrectionFolio = &v
}

// GetCreditFolio returns the CreditFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetCreditFolio() bool {
	if o == nil || IsNil(o.CreditFolio) {
		var ret bool
		return ret
	}
	return *o.CreditFolio
}

// GetCreditFolioOk returns a tuple with the CreditFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetCreditFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.CreditFolio) {
		return nil, false
	}
	return o.CreditFolio, true
}

// HasCreditFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasCreditFolio() bool {
	if o != nil && !IsNil(o.CreditFolio) {
		return true
	}

	return false
}

// SetCreditFolio gets a reference to the given bool and assigns it to the CreditFolio field.
func (o *FolioTypeConfigType) SetCreditFolio(v bool) {
	o.CreditFolio = &v
}

// GetDebitFolio returns the DebitFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetDebitFolio() bool {
	if o == nil || IsNil(o.DebitFolio) {
		var ret bool
		return ret
	}
	return *o.DebitFolio
}

// GetDebitFolioOk returns a tuple with the DebitFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetDebitFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.DebitFolio) {
		return nil, false
	}
	return o.DebitFolio, true
}

// HasDebitFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasDebitFolio() bool {
	if o != nil && !IsNil(o.DebitFolio) {
		return true
	}

	return false
}

// SetDebitFolio gets a reference to the given bool and assigns it to the DebitFolio field.
func (o *FolioTypeConfigType) SetDebitFolio(v bool) {
	o.DebitFolio = &v
}

// GetDepositFolio returns the DepositFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetDepositFolio() bool {
	if o == nil || IsNil(o.DepositFolio) {
		var ret bool
		return ret
	}
	return *o.DepositFolio
}

// GetDepositFolioOk returns a tuple with the DepositFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetDepositFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.DepositFolio) {
		return nil, false
	}
	return o.DepositFolio, true
}

// HasDepositFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasDepositFolio() bool {
	if o != nil && !IsNil(o.DepositFolio) {
		return true
	}

	return false
}

// SetDepositFolio gets a reference to the given bool and assigns it to the DepositFolio field.
func (o *FolioTypeConfigType) SetDepositFolio(v bool) {
	o.DepositFolio = &v
}

// GetDocumentCode returns the DocumentCode field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetDocumentCode() string {
	if o == nil || IsNil(o.DocumentCode) {
		var ret string
		return ret
	}
	return *o.DocumentCode
}

// GetDocumentCodeOk returns a tuple with the DocumentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetDocumentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentCode) {
		return nil, false
	}
	return o.DocumentCode, true
}

// HasDocumentCode returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasDocumentCode() bool {
	if o != nil && !IsNil(o.DocumentCode) {
		return true
	}

	return false
}

// SetDocumentCode gets a reference to the given string and assigns it to the DocumentCode field.
func (o *FolioTypeConfigType) SetDocumentCode(v string) {
	o.DocumentCode = &v
}

// GetFiscalFolio returns the FiscalFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetFiscalFolio() bool {
	if o == nil || IsNil(o.FiscalFolio) {
		var ret bool
		return ret
	}
	return *o.FiscalFolio
}

// GetFiscalFolioOk returns a tuple with the FiscalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetFiscalFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.FiscalFolio) {
		return nil, false
	}
	return o.FiscalFolio, true
}

// HasFiscalFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasFiscalFolio() bool {
	if o != nil && !IsNil(o.FiscalFolio) {
		return true
	}

	return false
}

// SetFiscalFolio gets a reference to the given bool and assigns it to the FiscalFolio field.
func (o *FolioTypeConfigType) SetFiscalFolio(v bool) {
	o.FiscalFolio = &v
}

// GetFolioReports returns the FolioReports field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetFolioReports() []FolioReportType {
	if o == nil || IsNil(o.FolioReports) {
		var ret []FolioReportType
		return ret
	}
	return o.FolioReports
}

// GetFolioReportsOk returns a tuple with the FolioReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetFolioReportsOk() ([]FolioReportType, bool) {
	if o == nil || IsNil(o.FolioReports) {
		return nil, false
	}
	return o.FolioReports, true
}

// HasFolioReports returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasFolioReports() bool {
	if o != nil && !IsNil(o.FolioReports) {
		return true
	}

	return false
}

// SetFolioReports gets a reference to the given []FolioReportType and assigns it to the FolioReports field.
func (o *FolioTypeConfigType) SetFolioReports(v []FolioReportType) {
	o.FolioReports = v
}

// GetFolioUsed returns the FolioUsed field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetFolioUsed() bool {
	if o == nil || IsNil(o.FolioUsed) {
		var ret bool
		return ret
	}
	return *o.FolioUsed
}

// GetFolioUsedOk returns a tuple with the FolioUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetFolioUsedOk() (*bool, bool) {
	if o == nil || IsNil(o.FolioUsed) {
		return nil, false
	}
	return o.FolioUsed, true
}

// HasFolioUsed returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasFolioUsed() bool {
	if o != nil && !IsNil(o.FolioUsed) {
		return true
	}

	return false
}

// SetFolioUsed gets a reference to the given bool and assigns it to the FolioUsed field.
func (o *FolioTypeConfigType) SetFolioUsed(v bool) {
	o.FolioUsed = &v
}

// GetGuestClassification returns the GuestClassification field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetGuestClassification() string {
	if o == nil || IsNil(o.GuestClassification) {
		var ret string
		return ret
	}
	return *o.GuestClassification
}

// GetGuestClassificationOk returns a tuple with the GuestClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetGuestClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.GuestClassification) {
		return nil, false
	}
	return o.GuestClassification, true
}

// HasGuestClassification returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasGuestClassification() bool {
	if o != nil && !IsNil(o.GuestClassification) {
		return true
	}

	return false
}

// SetGuestClassification gets a reference to the given string and assigns it to the GuestClassification field.
func (o *FolioTypeConfigType) SetGuestClassification(v string) {
	o.GuestClassification = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *FolioTypeConfigType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInformationFolio returns the InformationFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetInformationFolio() bool {
	if o == nil || IsNil(o.InformationFolio) {
		var ret bool
		return ret
	}
	return *o.InformationFolio
}

// GetInformationFolioOk returns a tuple with the InformationFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetInformationFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.InformationFolio) {
		return nil, false
	}
	return o.InformationFolio, true
}

// HasInformationFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasInformationFolio() bool {
	if o != nil && !IsNil(o.InformationFolio) {
		return true
	}

	return false
}

// SetInformationFolio gets a reference to the given bool and assigns it to the InformationFolio field.
func (o *FolioTypeConfigType) SetInformationFolio(v bool) {
	o.InformationFolio = &v
}

// GetInternalFolio returns the InternalFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetInternalFolio() bool {
	if o == nil || IsNil(o.InternalFolio) {
		var ret bool
		return ret
	}
	return *o.InternalFolio
}

// GetInternalFolioOk returns a tuple with the InternalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetInternalFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.InternalFolio) {
		return nil, false
	}
	return o.InternalFolio, true
}

// HasInternalFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasInternalFolio() bool {
	if o != nil && !IsNil(o.InternalFolio) {
		return true
	}

	return false
}

// SetInternalFolio gets a reference to the given bool and assigns it to the InternalFolio field.
func (o *FolioTypeConfigType) SetInternalFolio(v bool) {
	o.InternalFolio = &v
}

// GetManualFolio returns the ManualFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetManualFolio() bool {
	if o == nil || IsNil(o.ManualFolio) {
		var ret bool
		return ret
	}
	return *o.ManualFolio
}

// GetManualFolioOk returns a tuple with the ManualFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetManualFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualFolio) {
		return nil, false
	}
	return o.ManualFolio, true
}

// HasManualFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasManualFolio() bool {
	if o != nil && !IsNil(o.ManualFolio) {
		return true
	}

	return false
}

// SetManualFolio gets a reference to the given bool and assigns it to the ManualFolio field.
func (o *FolioTypeConfigType) SetManualFolio(v bool) {
	o.ManualFolio = &v
}

// GetProfileAttributes returns the ProfileAttributes field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetProfileAttributes() FolioTypeProfileAttributes {
	if o == nil || IsNil(o.ProfileAttributes) {
		var ret FolioTypeProfileAttributes
		return ret
	}
	return *o.ProfileAttributes
}

// GetProfileAttributesOk returns a tuple with the ProfileAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetProfileAttributesOk() (*FolioTypeProfileAttributes, bool) {
	if o == nil || IsNil(o.ProfileAttributes) {
		return nil, false
	}
	return o.ProfileAttributes, true
}

// HasProfileAttributes returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasProfileAttributes() bool {
	if o != nil && !IsNil(o.ProfileAttributes) {
		return true
	}

	return false
}

// SetProfileAttributes gets a reference to the given FolioTypeProfileAttributes and assigns it to the ProfileAttributes field.
func (o *FolioTypeConfigType) SetProfileAttributes(v FolioTypeProfileAttributes) {
	o.ProfileAttributes = &v
}

// GetSendFiscalFolio returns the SendFiscalFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetSendFiscalFolio() bool {
	if o == nil || IsNil(o.SendFiscalFolio) {
		var ret bool
		return ret
	}
	return *o.SendFiscalFolio
}

// GetSendFiscalFolioOk returns a tuple with the SendFiscalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetSendFiscalFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.SendFiscalFolio) {
		return nil, false
	}
	return o.SendFiscalFolio, true
}

// HasSendFiscalFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasSendFiscalFolio() bool {
	if o != nil && !IsNil(o.SendFiscalFolio) {
		return true
	}

	return false
}

// SetSendFiscalFolio gets a reference to the given bool and assigns it to the SendFiscalFolio field.
func (o *FolioTypeConfigType) SetSendFiscalFolio(v bool) {
	o.SendFiscalFolio = &v
}

// GetSimpleFolio returns the SimpleFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetSimpleFolio() bool {
	if o == nil || IsNil(o.SimpleFolio) {
		var ret bool
		return ret
	}
	return *o.SimpleFolio
}

// GetSimpleFolioOk returns a tuple with the SimpleFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetSimpleFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.SimpleFolio) {
		return nil, false
	}
	return o.SimpleFolio, true
}

// HasSimpleFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasSimpleFolio() bool {
	if o != nil && !IsNil(o.SimpleFolio) {
		return true
	}

	return false
}

// SetSimpleFolio gets a reference to the given bool and assigns it to the SimpleFolio field.
func (o *FolioTypeConfigType) SetSimpleFolio(v bool) {
	o.SimpleFolio = &v
}

// GetSupplementalFolio returns the SupplementalFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetSupplementalFolio() bool {
	if o == nil || IsNil(o.SupplementalFolio) {
		var ret bool
		return ret
	}
	return *o.SupplementalFolio
}

// GetSupplementalFolioOk returns a tuple with the SupplementalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetSupplementalFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.SupplementalFolio) {
		return nil, false
	}
	return o.SupplementalFolio, true
}

// HasSupplementalFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasSupplementalFolio() bool {
	if o != nil && !IsNil(o.SupplementalFolio) {
		return true
	}

	return false
}

// SetSupplementalFolio gets a reference to the given bool and assigns it to the SupplementalFolio field.
func (o *FolioTypeConfigType) SetSupplementalFolio(v bool) {
	o.SupplementalFolio = &v
}

// GetTaxFolio returns the TaxFolio field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetTaxFolio() bool {
	if o == nil || IsNil(o.TaxFolio) {
		var ret bool
		return ret
	}
	return *o.TaxFolio
}

// GetTaxFolioOk returns a tuple with the TaxFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetTaxFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxFolio) {
		return nil, false
	}
	return o.TaxFolio, true
}

// HasTaxFolio returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasTaxFolio() bool {
	if o != nil && !IsNil(o.TaxFolio) {
		return true
	}

	return false
}

// SetTaxFolio gets a reference to the given bool and assigns it to the TaxFolio field.
func (o *FolioTypeConfigType) SetTaxFolio(v bool) {
	o.TaxFolio = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetTaxType() string {
	if o == nil || IsNil(o.TaxType) {
		var ret string
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetTaxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given string and assigns it to the TaxType field.
func (o *FolioTypeConfigType) SetTaxType(v string) {
	o.TaxType = &v
}

// GetTransactionServiceType returns the TransactionServiceType field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetTransactionServiceType() string {
	if o == nil || IsNil(o.TransactionServiceType) {
		var ret string
		return ret
	}
	return *o.TransactionServiceType
}

// GetTransactionServiceTypeOk returns a tuple with the TransactionServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetTransactionServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionServiceType) {
		return nil, false
	}
	return o.TransactionServiceType, true
}

// HasTransactionServiceType returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasTransactionServiceType() bool {
	if o != nil && !IsNil(o.TransactionServiceType) {
		return true
	}

	return false
}

// SetTransactionServiceType gets a reference to the given string and assigns it to the TransactionServiceType field.
func (o *FolioTypeConfigType) SetTransactionServiceType(v string) {
	o.TransactionServiceType = &v
}

// GetUseNationality returns the UseNationality field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetUseNationality() bool {
	if o == nil || IsNil(o.UseNationality) {
		var ret bool
		return ret
	}
	return *o.UseNationality
}

// GetUseNationalityOk returns a tuple with the UseNationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetUseNationalityOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNationality) {
		return nil, false
	}
	return o.UseNationality, true
}

// HasUseNationality returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasUseNationality() bool {
	if o != nil && !IsNil(o.UseNationality) {
		return true
	}

	return false
}

// SetUseNationality gets a reference to the given bool and assigns it to the UseNationality field.
func (o *FolioTypeConfigType) SetUseNationality(v bool) {
	o.UseNationality = &v
}

// GetUseOriginalFolioStayDetails returns the UseOriginalFolioStayDetails field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetUseOriginalFolioStayDetails() bool {
	if o == nil || IsNil(o.UseOriginalFolioStayDetails) {
		var ret bool
		return ret
	}
	return *o.UseOriginalFolioStayDetails
}

// GetUseOriginalFolioStayDetailsOk returns a tuple with the UseOriginalFolioStayDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetUseOriginalFolioStayDetailsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseOriginalFolioStayDetails) {
		return nil, false
	}
	return o.UseOriginalFolioStayDetails, true
}

// HasUseOriginalFolioStayDetails returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasUseOriginalFolioStayDetails() bool {
	if o != nil && !IsNil(o.UseOriginalFolioStayDetails) {
		return true
	}

	return false
}

// SetUseOriginalFolioStayDetails gets a reference to the given bool and assigns it to the UseOriginalFolioStayDetails field.
func (o *FolioTypeConfigType) SetUseOriginalFolioStayDetails(v bool) {
	o.UseOriginalFolioStayDetails = &v
}

// GetUseTaxNumber returns the UseTaxNumber field value if set, zero value otherwise.
func (o *FolioTypeConfigType) GetUseTaxNumber() bool {
	if o == nil || IsNil(o.UseTaxNumber) {
		var ret bool
		return ret
	}
	return *o.UseTaxNumber
}

// GetUseTaxNumberOk returns a tuple with the UseTaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTypeConfigType) GetUseTaxNumberOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTaxNumber) {
		return nil, false
	}
	return o.UseTaxNumber, true
}

// HasUseTaxNumber returns a boolean if a field has been set.
func (o *FolioTypeConfigType) HasUseTaxNumber() bool {
	if o != nil && !IsNil(o.UseTaxNumber) {
		return true
	}

	return false
}

// SetUseTaxNumber gets a reference to the given bool and assigns it to the UseTaxNumber field.
func (o *FolioTypeConfigType) SetUseTaxNumber(v bool) {
	o.UseTaxNumber = &v
}

func (o FolioTypeConfigType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioTypeConfigType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ARFolio) {
		toSerialize["aRFolio"] = o.ARFolio
	}
	if !IsNil(o.AllowCreditFolio) {
		toSerialize["allowCreditFolio"] = o.AllowCreditFolio
	}
	if !IsNil(o.AllowFolioCompression) {
		toSerialize["allowFolioCompression"] = o.AllowFolioCompression
	}
	if !IsNil(o.AllowFolioConversion) {
		toSerialize["allowFolioConversion"] = o.AllowFolioConversion
	}
	if !IsNil(o.AssociatedCreditFolioType) {
		toSerialize["associatedCreditFolioType"] = o.AssociatedCreditFolioType
	}
	if !IsNil(o.CityLedgerFolio) {
		toSerialize["cityLedgerFolio"] = o.CityLedgerFolio
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CompressedFolio) {
		toSerialize["compressedFolio"] = o.CompressedFolio
	}
	if !IsNil(o.CorrectionFolio) {
		toSerialize["correctionFolio"] = o.CorrectionFolio
	}
	if !IsNil(o.CreditFolio) {
		toSerialize["creditFolio"] = o.CreditFolio
	}
	if !IsNil(o.DebitFolio) {
		toSerialize["debitFolio"] = o.DebitFolio
	}
	if !IsNil(o.DepositFolio) {
		toSerialize["depositFolio"] = o.DepositFolio
	}
	if !IsNil(o.DocumentCode) {
		toSerialize["documentCode"] = o.DocumentCode
	}
	if !IsNil(o.FiscalFolio) {
		toSerialize["fiscalFolio"] = o.FiscalFolio
	}
	if !IsNil(o.FolioReports) {
		toSerialize["folioReports"] = o.FolioReports
	}
	if !IsNil(o.FolioUsed) {
		toSerialize["folioUsed"] = o.FolioUsed
	}
	if !IsNil(o.GuestClassification) {
		toSerialize["guestClassification"] = o.GuestClassification
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.InformationFolio) {
		toSerialize["informationFolio"] = o.InformationFolio
	}
	if !IsNil(o.InternalFolio) {
		toSerialize["internalFolio"] = o.InternalFolio
	}
	if !IsNil(o.ManualFolio) {
		toSerialize["manualFolio"] = o.ManualFolio
	}
	if !IsNil(o.ProfileAttributes) {
		toSerialize["profileAttributes"] = o.ProfileAttributes
	}
	if !IsNil(o.SendFiscalFolio) {
		toSerialize["sendFiscalFolio"] = o.SendFiscalFolio
	}
	if !IsNil(o.SimpleFolio) {
		toSerialize["simpleFolio"] = o.SimpleFolio
	}
	if !IsNil(o.SupplementalFolio) {
		toSerialize["supplementalFolio"] = o.SupplementalFolio
	}
	if !IsNil(o.TaxFolio) {
		toSerialize["taxFolio"] = o.TaxFolio
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TransactionServiceType) {
		toSerialize["transactionServiceType"] = o.TransactionServiceType
	}
	if !IsNil(o.UseNationality) {
		toSerialize["useNationality"] = o.UseNationality
	}
	if !IsNil(o.UseOriginalFolioStayDetails) {
		toSerialize["useOriginalFolioStayDetails"] = o.UseOriginalFolioStayDetails
	}
	if !IsNil(o.UseTaxNumber) {
		toSerialize["useTaxNumber"] = o.UseTaxNumber
	}
	return toSerialize, nil
}

type NullableFolioTypeConfigType struct {
	value *FolioTypeConfigType
	isSet bool
}

func (v NullableFolioTypeConfigType) Get() *FolioTypeConfigType {
	return v.value
}

func (v *NullableFolioTypeConfigType) Set(val *FolioTypeConfigType) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioTypeConfigType) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioTypeConfigType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioTypeConfigType(val *FolioTypeConfigType) *NullableFolioTypeConfigType {
	return &NullableFolioTypeConfigType{value: val, isSet: true}
}

func (v NullableFolioTypeConfigType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioTypeConfigType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


