/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the PaymentTrxUsageType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentTrxUsageType{}

// PaymentTrxUsageType Payment Transaction Code usage details.
type PaymentTrxUsageType struct {
	// True indicates the payment Transaction Code is used for AR payments.
	AR *bool `json:"aR,omitempty"`
	// Indicates whether Profiles are shared across the Hotels within the chain or not.
	Cashier *bool `json:"cashier,omitempty"`
	// True indicates the payment Transaction Code is used for Comp payments.
	Comp *bool `json:"comp,omitempty"`
	// True indicates the payment Transaction Code is used for deposits.
	Deposit *bool `json:"deposit,omitempty"`
	// True indicates the payment Transaction Code is used for inter hotel deposits.
	InterHotelDeposit *bool `json:"interHotelDeposit,omitempty"`
	// True indicates the payment Transaction Code inter hotel payments.
	InterHotelPayment *bool `json:"interHotelPayment,omitempty"`
}

// NewPaymentTrxUsageType instantiates a new PaymentTrxUsageType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentTrxUsageType() *PaymentTrxUsageType {
	this := PaymentTrxUsageType{}
	return &this
}

// NewPaymentTrxUsageTypeWithDefaults instantiates a new PaymentTrxUsageType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentTrxUsageTypeWithDefaults() *PaymentTrxUsageType {
	this := PaymentTrxUsageType{}
	return &this
}

// GetAR returns the AR field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetAR() bool {
	if o == nil || IsNil(o.AR) {
		var ret bool
		return ret
	}
	return *o.AR
}

// GetAROk returns a tuple with the AR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetAROk() (*bool, bool) {
	if o == nil || IsNil(o.AR) {
		return nil, false
	}
	return o.AR, true
}

// HasAR returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasAR() bool {
	if o != nil && !IsNil(o.AR) {
		return true
	}

	return false
}

// SetAR gets a reference to the given bool and assigns it to the AR field.
func (o *PaymentTrxUsageType) SetAR(v bool) {
	o.AR = &v
}

// GetCashier returns the Cashier field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetCashier() bool {
	if o == nil || IsNil(o.Cashier) {
		var ret bool
		return ret
	}
	return *o.Cashier
}

// GetCashierOk returns a tuple with the Cashier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetCashierOk() (*bool, bool) {
	if o == nil || IsNil(o.Cashier) {
		return nil, false
	}
	return o.Cashier, true
}

// HasCashier returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasCashier() bool {
	if o != nil && !IsNil(o.Cashier) {
		return true
	}

	return false
}

// SetCashier gets a reference to the given bool and assigns it to the Cashier field.
func (o *PaymentTrxUsageType) SetCashier(v bool) {
	o.Cashier = &v
}

// GetComp returns the Comp field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetComp() bool {
	if o == nil || IsNil(o.Comp) {
		var ret bool
		return ret
	}
	return *o.Comp
}

// GetCompOk returns a tuple with the Comp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetCompOk() (*bool, bool) {
	if o == nil || IsNil(o.Comp) {
		return nil, false
	}
	return o.Comp, true
}

// HasComp returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasComp() bool {
	if o != nil && !IsNil(o.Comp) {
		return true
	}

	return false
}

// SetComp gets a reference to the given bool and assigns it to the Comp field.
func (o *PaymentTrxUsageType) SetComp(v bool) {
	o.Comp = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetDeposit() bool {
	if o == nil || IsNil(o.Deposit) {
		var ret bool
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.Deposit) {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasDeposit() bool {
	if o != nil && !IsNil(o.Deposit) {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given bool and assigns it to the Deposit field.
func (o *PaymentTrxUsageType) SetDeposit(v bool) {
	o.Deposit = &v
}

// GetInterHotelDeposit returns the InterHotelDeposit field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetInterHotelDeposit() bool {
	if o == nil || IsNil(o.InterHotelDeposit) {
		var ret bool
		return ret
	}
	return *o.InterHotelDeposit
}

// GetInterHotelDepositOk returns a tuple with the InterHotelDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetInterHotelDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.InterHotelDeposit) {
		return nil, false
	}
	return o.InterHotelDeposit, true
}

// HasInterHotelDeposit returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasInterHotelDeposit() bool {
	if o != nil && !IsNil(o.InterHotelDeposit) {
		return true
	}

	return false
}

// SetInterHotelDeposit gets a reference to the given bool and assigns it to the InterHotelDeposit field.
func (o *PaymentTrxUsageType) SetInterHotelDeposit(v bool) {
	o.InterHotelDeposit = &v
}

// GetInterHotelPayment returns the InterHotelPayment field value if set, zero value otherwise.
func (o *PaymentTrxUsageType) GetInterHotelPayment() bool {
	if o == nil || IsNil(o.InterHotelPayment) {
		var ret bool
		return ret
	}
	return *o.InterHotelPayment
}

// GetInterHotelPaymentOk returns a tuple with the InterHotelPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxUsageType) GetInterHotelPaymentOk() (*bool, bool) {
	if o == nil || IsNil(o.InterHotelPayment) {
		return nil, false
	}
	return o.InterHotelPayment, true
}

// HasInterHotelPayment returns a boolean if a field has been set.
func (o *PaymentTrxUsageType) HasInterHotelPayment() bool {
	if o != nil && !IsNil(o.InterHotelPayment) {
		return true
	}

	return false
}

// SetInterHotelPayment gets a reference to the given bool and assigns it to the InterHotelPayment field.
func (o *PaymentTrxUsageType) SetInterHotelPayment(v bool) {
	o.InterHotelPayment = &v
}

func (o PaymentTrxUsageType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentTrxUsageType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AR) {
		toSerialize["aR"] = o.AR
	}
	if !IsNil(o.Cashier) {
		toSerialize["cashier"] = o.Cashier
	}
	if !IsNil(o.Comp) {
		toSerialize["comp"] = o.Comp
	}
	if !IsNil(o.Deposit) {
		toSerialize["deposit"] = o.Deposit
	}
	if !IsNil(o.InterHotelDeposit) {
		toSerialize["interHotelDeposit"] = o.InterHotelDeposit
	}
	if !IsNil(o.InterHotelPayment) {
		toSerialize["interHotelPayment"] = o.InterHotelPayment
	}
	return toSerialize, nil
}

type NullablePaymentTrxUsageType struct {
	value *PaymentTrxUsageType
	isSet bool
}

func (v NullablePaymentTrxUsageType) Get() *PaymentTrxUsageType {
	return v.value
}

func (v *NullablePaymentTrxUsageType) Set(val *PaymentTrxUsageType) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentTrxUsageType) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentTrxUsageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentTrxUsageType(val *PaymentTrxUsageType) *NullablePaymentTrxUsageType {
	return &NullablePaymentTrxUsageType{value: val, isSet: true}
}

func (v NullablePaymentTrxUsageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentTrxUsageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


