/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ARFinanceChargeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARFinanceChargeType{}

// ARFinanceChargeType Finance charges will allow user to post a flat amount or percentage finance charge based on user-defined cycle.
type ARFinanceChargeType struct {
	// Number of days after which an outstanding balance triggers
	DaysOlderThan *int32 `json:"daysOlderThan,omitempty"`
	// Determines how the finance charge will be applied to outstanding balance valid values are F, P
	FinanceCharge *string `json:"financeCharge,omitempty"`
	// Amount or percentage value
	FinanceChargeValue *float32 `json:"financeChargeValue,omitempty"`
	// If true unallocated payments are subtracted from the outstanding balances before finance charge is calculated
	IncludeUnallocatedPayments *bool `json:"includeUnallocatedPayments,omitempty"`
	// Day of the month when the end of day procedure should run
	PostOnDay *int32 `json:"postOnDay,omitempty"`
}

// NewARFinanceChargeType instantiates a new ARFinanceChargeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARFinanceChargeType() *ARFinanceChargeType {
	this := ARFinanceChargeType{}
	return &this
}

// NewARFinanceChargeTypeWithDefaults instantiates a new ARFinanceChargeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARFinanceChargeTypeWithDefaults() *ARFinanceChargeType {
	this := ARFinanceChargeType{}
	return &this
}

// GetDaysOlderThan returns the DaysOlderThan field value if set, zero value otherwise.
func (o *ARFinanceChargeType) GetDaysOlderThan() int32 {
	if o == nil || IsNil(o.DaysOlderThan) {
		var ret int32
		return ret
	}
	return *o.DaysOlderThan
}

// GetDaysOlderThanOk returns a tuple with the DaysOlderThan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARFinanceChargeType) GetDaysOlderThanOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysOlderThan) {
		return nil, false
	}
	return o.DaysOlderThan, true
}

// HasDaysOlderThan returns a boolean if a field has been set.
func (o *ARFinanceChargeType) HasDaysOlderThan() bool {
	if o != nil && !IsNil(o.DaysOlderThan) {
		return true
	}

	return false
}

// SetDaysOlderThan gets a reference to the given int32 and assigns it to the DaysOlderThan field.
func (o *ARFinanceChargeType) SetDaysOlderThan(v int32) {
	o.DaysOlderThan = &v
}

// GetFinanceCharge returns the FinanceCharge field value if set, zero value otherwise.
func (o *ARFinanceChargeType) GetFinanceCharge() string {
	if o == nil || IsNil(o.FinanceCharge) {
		var ret string
		return ret
	}
	return *o.FinanceCharge
}

// GetFinanceChargeOk returns a tuple with the FinanceCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARFinanceChargeType) GetFinanceChargeOk() (*string, bool) {
	if o == nil || IsNil(o.FinanceCharge) {
		return nil, false
	}
	return o.FinanceCharge, true
}

// HasFinanceCharge returns a boolean if a field has been set.
func (o *ARFinanceChargeType) HasFinanceCharge() bool {
	if o != nil && !IsNil(o.FinanceCharge) {
		return true
	}

	return false
}

// SetFinanceCharge gets a reference to the given string and assigns it to the FinanceCharge field.
func (o *ARFinanceChargeType) SetFinanceCharge(v string) {
	o.FinanceCharge = &v
}

// GetFinanceChargeValue returns the FinanceChargeValue field value if set, zero value otherwise.
func (o *ARFinanceChargeType) GetFinanceChargeValue() float32 {
	if o == nil || IsNil(o.FinanceChargeValue) {
		var ret float32
		return ret
	}
	return *o.FinanceChargeValue
}

// GetFinanceChargeValueOk returns a tuple with the FinanceChargeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARFinanceChargeType) GetFinanceChargeValueOk() (*float32, bool) {
	if o == nil || IsNil(o.FinanceChargeValue) {
		return nil, false
	}
	return o.FinanceChargeValue, true
}

// HasFinanceChargeValue returns a boolean if a field has been set.
func (o *ARFinanceChargeType) HasFinanceChargeValue() bool {
	if o != nil && !IsNil(o.FinanceChargeValue) {
		return true
	}

	return false
}

// SetFinanceChargeValue gets a reference to the given float32 and assigns it to the FinanceChargeValue field.
func (o *ARFinanceChargeType) SetFinanceChargeValue(v float32) {
	o.FinanceChargeValue = &v
}

// GetIncludeUnallocatedPayments returns the IncludeUnallocatedPayments field value if set, zero value otherwise.
func (o *ARFinanceChargeType) GetIncludeUnallocatedPayments() bool {
	if o == nil || IsNil(o.IncludeUnallocatedPayments) {
		var ret bool
		return ret
	}
	return *o.IncludeUnallocatedPayments
}

// GetIncludeUnallocatedPaymentsOk returns a tuple with the IncludeUnallocatedPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARFinanceChargeType) GetIncludeUnallocatedPaymentsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeUnallocatedPayments) {
		return nil, false
	}
	return o.IncludeUnallocatedPayments, true
}

// HasIncludeUnallocatedPayments returns a boolean if a field has been set.
func (o *ARFinanceChargeType) HasIncludeUnallocatedPayments() bool {
	if o != nil && !IsNil(o.IncludeUnallocatedPayments) {
		return true
	}

	return false
}

// SetIncludeUnallocatedPayments gets a reference to the given bool and assigns it to the IncludeUnallocatedPayments field.
func (o *ARFinanceChargeType) SetIncludeUnallocatedPayments(v bool) {
	o.IncludeUnallocatedPayments = &v
}

// GetPostOnDay returns the PostOnDay field value if set, zero value otherwise.
func (o *ARFinanceChargeType) GetPostOnDay() int32 {
	if o == nil || IsNil(o.PostOnDay) {
		var ret int32
		return ret
	}
	return *o.PostOnDay
}

// GetPostOnDayOk returns a tuple with the PostOnDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARFinanceChargeType) GetPostOnDayOk() (*int32, bool) {
	if o == nil || IsNil(o.PostOnDay) {
		return nil, false
	}
	return o.PostOnDay, true
}

// HasPostOnDay returns a boolean if a field has been set.
func (o *ARFinanceChargeType) HasPostOnDay() bool {
	if o != nil && !IsNil(o.PostOnDay) {
		return true
	}

	return false
}

// SetPostOnDay gets a reference to the given int32 and assigns it to the PostOnDay field.
func (o *ARFinanceChargeType) SetPostOnDay(v int32) {
	o.PostOnDay = &v
}

func (o ARFinanceChargeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARFinanceChargeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaysOlderThan) {
		toSerialize["daysOlderThan"] = o.DaysOlderThan
	}
	if !IsNil(o.FinanceCharge) {
		toSerialize["financeCharge"] = o.FinanceCharge
	}
	if !IsNil(o.FinanceChargeValue) {
		toSerialize["financeChargeValue"] = o.FinanceChargeValue
	}
	if !IsNil(o.IncludeUnallocatedPayments) {
		toSerialize["includeUnallocatedPayments"] = o.IncludeUnallocatedPayments
	}
	if !IsNil(o.PostOnDay) {
		toSerialize["postOnDay"] = o.PostOnDay
	}
	return toSerialize, nil
}

type NullableARFinanceChargeType struct {
	value *ARFinanceChargeType
	isSet bool
}

func (v NullableARFinanceChargeType) Get() *ARFinanceChargeType {
	return v.value
}

func (v *NullableARFinanceChargeType) Set(val *ARFinanceChargeType) {
	v.value = val
	v.isSet = true
}

func (v NullableARFinanceChargeType) IsSet() bool {
	return v.isSet
}

func (v *NullableARFinanceChargeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARFinanceChargeType(val *ARFinanceChargeType) *NullableARFinanceChargeType {
	return &NullableARFinanceChargeType{value: val, isSet: true}
}

func (v NullableARFinanceChargeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARFinanceChargeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


