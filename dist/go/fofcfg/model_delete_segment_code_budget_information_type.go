/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the DeleteSegmentCodeBudgetInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteSegmentCodeBudgetInformationType{}

// DeleteSegmentCodeBudgetInformationType Holds segment and segment code information to delete.
type DeleteSegmentCodeBudgetInformationType struct {
	MarketCodeInformation *DeleteSegmentCodeInfoType `json:"marketCodeInformation,omitempty"`
	RateCodeInformation *DeleteSegmentCodeInfoType `json:"rateCodeInformation,omitempty"`
	CustomCodeInformation *DeleteSegmentCodeInfoType `json:"customCodeInformation,omitempty"`
	TransactionCodeInformation *DeleteSegmentCodeInfoType `json:"transactionCodeInformation,omitempty"`
	CateringCodeInformation *DeleteSegmentCodeInfoType `json:"cateringCodeInformation,omitempty"`
	// Opera Hotel code.
	HotelId *string `json:"hotelId,omitempty"`
	// Year of revenue.
	Year *string `json:"year,omitempty"`
}

// NewDeleteSegmentCodeBudgetInformationType instantiates a new DeleteSegmentCodeBudgetInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSegmentCodeBudgetInformationType() *DeleteSegmentCodeBudgetInformationType {
	this := DeleteSegmentCodeBudgetInformationType{}
	return &this
}

// NewDeleteSegmentCodeBudgetInformationTypeWithDefaults instantiates a new DeleteSegmentCodeBudgetInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSegmentCodeBudgetInformationTypeWithDefaults() *DeleteSegmentCodeBudgetInformationType {
	this := DeleteSegmentCodeBudgetInformationType{}
	return &this
}

// GetMarketCodeInformation returns the MarketCodeInformation field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetMarketCodeInformation() DeleteSegmentCodeInfoType {
	if o == nil || IsNil(o.MarketCodeInformation) {
		var ret DeleteSegmentCodeInfoType
		return ret
	}
	return *o.MarketCodeInformation
}

// GetMarketCodeInformationOk returns a tuple with the MarketCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetMarketCodeInformationOk() (*DeleteSegmentCodeInfoType, bool) {
	if o == nil || IsNil(o.MarketCodeInformation) {
		return nil, false
	}
	return o.MarketCodeInformation, true
}

// HasMarketCodeInformation returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasMarketCodeInformation() bool {
	if o != nil && !IsNil(o.MarketCodeInformation) {
		return true
	}

	return false
}

// SetMarketCodeInformation gets a reference to the given DeleteSegmentCodeInfoType and assigns it to the MarketCodeInformation field.
func (o *DeleteSegmentCodeBudgetInformationType) SetMarketCodeInformation(v DeleteSegmentCodeInfoType) {
	o.MarketCodeInformation = &v
}

// GetRateCodeInformation returns the RateCodeInformation field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetRateCodeInformation() DeleteSegmentCodeInfoType {
	if o == nil || IsNil(o.RateCodeInformation) {
		var ret DeleteSegmentCodeInfoType
		return ret
	}
	return *o.RateCodeInformation
}

// GetRateCodeInformationOk returns a tuple with the RateCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetRateCodeInformationOk() (*DeleteSegmentCodeInfoType, bool) {
	if o == nil || IsNil(o.RateCodeInformation) {
		return nil, false
	}
	return o.RateCodeInformation, true
}

// HasRateCodeInformation returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasRateCodeInformation() bool {
	if o != nil && !IsNil(o.RateCodeInformation) {
		return true
	}

	return false
}

// SetRateCodeInformation gets a reference to the given DeleteSegmentCodeInfoType and assigns it to the RateCodeInformation field.
func (o *DeleteSegmentCodeBudgetInformationType) SetRateCodeInformation(v DeleteSegmentCodeInfoType) {
	o.RateCodeInformation = &v
}

// GetCustomCodeInformation returns the CustomCodeInformation field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetCustomCodeInformation() DeleteSegmentCodeInfoType {
	if o == nil || IsNil(o.CustomCodeInformation) {
		var ret DeleteSegmentCodeInfoType
		return ret
	}
	return *o.CustomCodeInformation
}

// GetCustomCodeInformationOk returns a tuple with the CustomCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetCustomCodeInformationOk() (*DeleteSegmentCodeInfoType, bool) {
	if o == nil || IsNil(o.CustomCodeInformation) {
		return nil, false
	}
	return o.CustomCodeInformation, true
}

// HasCustomCodeInformation returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasCustomCodeInformation() bool {
	if o != nil && !IsNil(o.CustomCodeInformation) {
		return true
	}

	return false
}

// SetCustomCodeInformation gets a reference to the given DeleteSegmentCodeInfoType and assigns it to the CustomCodeInformation field.
func (o *DeleteSegmentCodeBudgetInformationType) SetCustomCodeInformation(v DeleteSegmentCodeInfoType) {
	o.CustomCodeInformation = &v
}

// GetTransactionCodeInformation returns the TransactionCodeInformation field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetTransactionCodeInformation() DeleteSegmentCodeInfoType {
	if o == nil || IsNil(o.TransactionCodeInformation) {
		var ret DeleteSegmentCodeInfoType
		return ret
	}
	return *o.TransactionCodeInformation
}

// GetTransactionCodeInformationOk returns a tuple with the TransactionCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetTransactionCodeInformationOk() (*DeleteSegmentCodeInfoType, bool) {
	if o == nil || IsNil(o.TransactionCodeInformation) {
		return nil, false
	}
	return o.TransactionCodeInformation, true
}

// HasTransactionCodeInformation returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasTransactionCodeInformation() bool {
	if o != nil && !IsNil(o.TransactionCodeInformation) {
		return true
	}

	return false
}

// SetTransactionCodeInformation gets a reference to the given DeleteSegmentCodeInfoType and assigns it to the TransactionCodeInformation field.
func (o *DeleteSegmentCodeBudgetInformationType) SetTransactionCodeInformation(v DeleteSegmentCodeInfoType) {
	o.TransactionCodeInformation = &v
}

// GetCateringCodeInformation returns the CateringCodeInformation field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetCateringCodeInformation() DeleteSegmentCodeInfoType {
	if o == nil || IsNil(o.CateringCodeInformation) {
		var ret DeleteSegmentCodeInfoType
		return ret
	}
	return *o.CateringCodeInformation
}

// GetCateringCodeInformationOk returns a tuple with the CateringCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetCateringCodeInformationOk() (*DeleteSegmentCodeInfoType, bool) {
	if o == nil || IsNil(o.CateringCodeInformation) {
		return nil, false
	}
	return o.CateringCodeInformation, true
}

// HasCateringCodeInformation returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasCateringCodeInformation() bool {
	if o != nil && !IsNil(o.CateringCodeInformation) {
		return true
	}

	return false
}

// SetCateringCodeInformation gets a reference to the given DeleteSegmentCodeInfoType and assigns it to the CateringCodeInformation field.
func (o *DeleteSegmentCodeBudgetInformationType) SetCateringCodeInformation(v DeleteSegmentCodeInfoType) {
	o.CateringCodeInformation = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *DeleteSegmentCodeBudgetInformationType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *DeleteSegmentCodeBudgetInformationType) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSegmentCodeBudgetInformationType) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *DeleteSegmentCodeBudgetInformationType) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *DeleteSegmentCodeBudgetInformationType) SetYear(v string) {
	o.Year = &v
}

func (o DeleteSegmentCodeBudgetInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteSegmentCodeBudgetInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketCodeInformation) {
		toSerialize["marketCodeInformation"] = o.MarketCodeInformation
	}
	if !IsNil(o.RateCodeInformation) {
		toSerialize["rateCodeInformation"] = o.RateCodeInformation
	}
	if !IsNil(o.CustomCodeInformation) {
		toSerialize["customCodeInformation"] = o.CustomCodeInformation
	}
	if !IsNil(o.TransactionCodeInformation) {
		toSerialize["transactionCodeInformation"] = o.TransactionCodeInformation
	}
	if !IsNil(o.CateringCodeInformation) {
		toSerialize["cateringCodeInformation"] = o.CateringCodeInformation
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableDeleteSegmentCodeBudgetInformationType struct {
	value *DeleteSegmentCodeBudgetInformationType
	isSet bool
}

func (v NullableDeleteSegmentCodeBudgetInformationType) Get() *DeleteSegmentCodeBudgetInformationType {
	return v.value
}

func (v *NullableDeleteSegmentCodeBudgetInformationType) Set(val *DeleteSegmentCodeBudgetInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSegmentCodeBudgetInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSegmentCodeBudgetInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSegmentCodeBudgetInformationType(val *DeleteSegmentCodeBudgetInformationType) *NullableDeleteSegmentCodeBudgetInformationType {
	return &NullableDeleteSegmentCodeBudgetInformationType{value: val, isSet: true}
}

func (v NullableDeleteSegmentCodeBudgetInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSegmentCodeBudgetInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


