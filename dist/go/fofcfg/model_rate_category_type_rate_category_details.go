/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the RateCategoryTypeRateCategoryDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RateCategoryTypeRateCategoryDetails{}

// RateCategoryTypeRateCategoryDetails Begin date for the rate category.
type RateCategoryTypeRateCategoryDetails struct {
	// Begin date for the rate category.
	BeginDate *string `json:"beginDate,omitempty"`
	// End date for the rate category.
	EndDate *string `json:"endDate,omitempty"`
	// Description of rate category.
	Description *string `json:"description,omitempty"`
	// Active date of the room category.
	RateClass *string `json:"rateClass,omitempty"`
	// Indicates rate category sell sequence.
	SellSequence *float32 `json:"sellSequence,omitempty"`
}

// NewRateCategoryTypeRateCategoryDetails instantiates a new RateCategoryTypeRateCategoryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateCategoryTypeRateCategoryDetails() *RateCategoryTypeRateCategoryDetails {
	this := RateCategoryTypeRateCategoryDetails{}
	return &this
}

// NewRateCategoryTypeRateCategoryDetailsWithDefaults instantiates a new RateCategoryTypeRateCategoryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateCategoryTypeRateCategoryDetailsWithDefaults() *RateCategoryTypeRateCategoryDetails {
	this := RateCategoryTypeRateCategoryDetails{}
	return &this
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *RateCategoryTypeRateCategoryDetails) GetBeginDate() string {
	if o == nil || IsNil(o.BeginDate) {
		var ret string
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCategoryTypeRateCategoryDetails) GetBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.BeginDate) {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *RateCategoryTypeRateCategoryDetails) HasBeginDate() bool {
	if o != nil && !IsNil(o.BeginDate) {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given string and assigns it to the BeginDate field.
func (o *RateCategoryTypeRateCategoryDetails) SetBeginDate(v string) {
	o.BeginDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *RateCategoryTypeRateCategoryDetails) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCategoryTypeRateCategoryDetails) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *RateCategoryTypeRateCategoryDetails) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *RateCategoryTypeRateCategoryDetails) SetEndDate(v string) {
	o.EndDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RateCategoryTypeRateCategoryDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCategoryTypeRateCategoryDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RateCategoryTypeRateCategoryDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RateCategoryTypeRateCategoryDetails) SetDescription(v string) {
	o.Description = &v
}

// GetRateClass returns the RateClass field value if set, zero value otherwise.
func (o *RateCategoryTypeRateCategoryDetails) GetRateClass() string {
	if o == nil || IsNil(o.RateClass) {
		var ret string
		return ret
	}
	return *o.RateClass
}

// GetRateClassOk returns a tuple with the RateClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCategoryTypeRateCategoryDetails) GetRateClassOk() (*string, bool) {
	if o == nil || IsNil(o.RateClass) {
		return nil, false
	}
	return o.RateClass, true
}

// HasRateClass returns a boolean if a field has been set.
func (o *RateCategoryTypeRateCategoryDetails) HasRateClass() bool {
	if o != nil && !IsNil(o.RateClass) {
		return true
	}

	return false
}

// SetRateClass gets a reference to the given string and assigns it to the RateClass field.
func (o *RateCategoryTypeRateCategoryDetails) SetRateClass(v string) {
	o.RateClass = &v
}

// GetSellSequence returns the SellSequence field value if set, zero value otherwise.
func (o *RateCategoryTypeRateCategoryDetails) GetSellSequence() float32 {
	if o == nil || IsNil(o.SellSequence) {
		var ret float32
		return ret
	}
	return *o.SellSequence
}

// GetSellSequenceOk returns a tuple with the SellSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCategoryTypeRateCategoryDetails) GetSellSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.SellSequence) {
		return nil, false
	}
	return o.SellSequence, true
}

// HasSellSequence returns a boolean if a field has been set.
func (o *RateCategoryTypeRateCategoryDetails) HasSellSequence() bool {
	if o != nil && !IsNil(o.SellSequence) {
		return true
	}

	return false
}

// SetSellSequence gets a reference to the given float32 and assigns it to the SellSequence field.
func (o *RateCategoryTypeRateCategoryDetails) SetSellSequence(v float32) {
	o.SellSequence = &v
}

func (o RateCategoryTypeRateCategoryDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RateCategoryTypeRateCategoryDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeginDate) {
		toSerialize["beginDate"] = o.BeginDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RateClass) {
		toSerialize["rateClass"] = o.RateClass
	}
	if !IsNil(o.SellSequence) {
		toSerialize["sellSequence"] = o.SellSequence
	}
	return toSerialize, nil
}

type NullableRateCategoryTypeRateCategoryDetails struct {
	value *RateCategoryTypeRateCategoryDetails
	isSet bool
}

func (v NullableRateCategoryTypeRateCategoryDetails) Get() *RateCategoryTypeRateCategoryDetails {
	return v.value
}

func (v *NullableRateCategoryTypeRateCategoryDetails) Set(val *RateCategoryTypeRateCategoryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRateCategoryTypeRateCategoryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRateCategoryTypeRateCategoryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateCategoryTypeRateCategoryDetails(val *RateCategoryTypeRateCategoryDetails) *NullableRateCategoryTypeRateCategoryDetails {
	return &NullableRateCategoryTypeRateCategoryDetails{value: val, isSet: true}
}

func (v NullableRateCategoryTypeRateCategoryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateCategoryTypeRateCategoryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


