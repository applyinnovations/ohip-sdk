/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the BudgetForecastMarketInfoBaseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BudgetForecastMarketInfoBaseType{}

// BudgetForecastMarketInfoBaseType Budget Forecast information for budget segment codes.
type BudgetForecastMarketInfoBaseType struct {
	// Budget Forecast information for budget segment code .
	MarketCodeInformation []MarketCodeInformationBaseType `json:"marketCodeInformation,omitempty"`
	// Flag to indicate if nights information is included.
	Nights *bool `json:"nights,omitempty"`
	// Flag to indicate if revenue information is included.
	Revenue *bool `json:"revenue,omitempty"`
}

// NewBudgetForecastMarketInfoBaseType instantiates a new BudgetForecastMarketInfoBaseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetForecastMarketInfoBaseType() *BudgetForecastMarketInfoBaseType {
	this := BudgetForecastMarketInfoBaseType{}
	return &this
}

// NewBudgetForecastMarketInfoBaseTypeWithDefaults instantiates a new BudgetForecastMarketInfoBaseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetForecastMarketInfoBaseTypeWithDefaults() *BudgetForecastMarketInfoBaseType {
	this := BudgetForecastMarketInfoBaseType{}
	return &this
}

// GetMarketCodeInformation returns the MarketCodeInformation field value if set, zero value otherwise.
func (o *BudgetForecastMarketInfoBaseType) GetMarketCodeInformation() []MarketCodeInformationBaseType {
	if o == nil || IsNil(o.MarketCodeInformation) {
		var ret []MarketCodeInformationBaseType
		return ret
	}
	return o.MarketCodeInformation
}

// GetMarketCodeInformationOk returns a tuple with the MarketCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastMarketInfoBaseType) GetMarketCodeInformationOk() ([]MarketCodeInformationBaseType, bool) {
	if o == nil || IsNil(o.MarketCodeInformation) {
		return nil, false
	}
	return o.MarketCodeInformation, true
}

// HasMarketCodeInformation returns a boolean if a field has been set.
func (o *BudgetForecastMarketInfoBaseType) HasMarketCodeInformation() bool {
	if o != nil && !IsNil(o.MarketCodeInformation) {
		return true
	}

	return false
}

// SetMarketCodeInformation gets a reference to the given []MarketCodeInformationBaseType and assigns it to the MarketCodeInformation field.
func (o *BudgetForecastMarketInfoBaseType) SetMarketCodeInformation(v []MarketCodeInformationBaseType) {
	o.MarketCodeInformation = v
}

// GetNights returns the Nights field value if set, zero value otherwise.
func (o *BudgetForecastMarketInfoBaseType) GetNights() bool {
	if o == nil || IsNil(o.Nights) {
		var ret bool
		return ret
	}
	return *o.Nights
}

// GetNightsOk returns a tuple with the Nights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastMarketInfoBaseType) GetNightsOk() (*bool, bool) {
	if o == nil || IsNil(o.Nights) {
		return nil, false
	}
	return o.Nights, true
}

// HasNights returns a boolean if a field has been set.
func (o *BudgetForecastMarketInfoBaseType) HasNights() bool {
	if o != nil && !IsNil(o.Nights) {
		return true
	}

	return false
}

// SetNights gets a reference to the given bool and assigns it to the Nights field.
func (o *BudgetForecastMarketInfoBaseType) SetNights(v bool) {
	o.Nights = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *BudgetForecastMarketInfoBaseType) GetRevenue() bool {
	if o == nil || IsNil(o.Revenue) {
		var ret bool
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastMarketInfoBaseType) GetRevenueOk() (*bool, bool) {
	if o == nil || IsNil(o.Revenue) {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *BudgetForecastMarketInfoBaseType) HasRevenue() bool {
	if o != nil && !IsNil(o.Revenue) {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given bool and assigns it to the Revenue field.
func (o *BudgetForecastMarketInfoBaseType) SetRevenue(v bool) {
	o.Revenue = &v
}

func (o BudgetForecastMarketInfoBaseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BudgetForecastMarketInfoBaseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketCodeInformation) {
		toSerialize["marketCodeInformation"] = o.MarketCodeInformation
	}
	if !IsNil(o.Nights) {
		toSerialize["nights"] = o.Nights
	}
	if !IsNil(o.Revenue) {
		toSerialize["revenue"] = o.Revenue
	}
	return toSerialize, nil
}

type NullableBudgetForecastMarketInfoBaseType struct {
	value *BudgetForecastMarketInfoBaseType
	isSet bool
}

func (v NullableBudgetForecastMarketInfoBaseType) Get() *BudgetForecastMarketInfoBaseType {
	return v.value
}

func (v *NullableBudgetForecastMarketInfoBaseType) Set(val *BudgetForecastMarketInfoBaseType) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetForecastMarketInfoBaseType) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetForecastMarketInfoBaseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetForecastMarketInfoBaseType(val *BudgetForecastMarketInfoBaseType) *NullableBudgetForecastMarketInfoBaseType {
	return &NullableBudgetForecastMarketInfoBaseType{value: val, isSet: true}
}

func (v NullableBudgetForecastMarketInfoBaseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetForecastMarketInfoBaseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


