/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the TransactionArrangementCodeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionArrangementCodeType{}

// TransactionArrangementCodeType This has arrangement codes association details for a transaction code.
type TransactionArrangementCodeType struct {
	// Transaction code
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Folio arrangement code that is associated with the transaction code.
	FolioArrangementCode *string `json:"folioArrangementCode,omitempty"`
	// Group arrangement code that is associated with the transaction code.
	GroupArrangementCode *string `json:"groupArrangementCode,omitempty"`
	// Expense arrangement code that is associated with the transaction code.
	ExpenseArrangementCode *string `json:"expenseArrangementCode,omitempty"`
	// Daily plan code that is associated with the transaction code.
	DailyPlanCode *string `json:"dailyPlanCode,omitempty"`
}

// NewTransactionArrangementCodeType instantiates a new TransactionArrangementCodeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionArrangementCodeType() *TransactionArrangementCodeType {
	this := TransactionArrangementCodeType{}
	return &this
}

// NewTransactionArrangementCodeTypeWithDefaults instantiates a new TransactionArrangementCodeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionArrangementCodeTypeWithDefaults() *TransactionArrangementCodeType {
	this := TransactionArrangementCodeType{}
	return &this
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *TransactionArrangementCodeType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionArrangementCodeType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *TransactionArrangementCodeType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *TransactionArrangementCodeType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetFolioArrangementCode returns the FolioArrangementCode field value if set, zero value otherwise.
func (o *TransactionArrangementCodeType) GetFolioArrangementCode() string {
	if o == nil || IsNil(o.FolioArrangementCode) {
		var ret string
		return ret
	}
	return *o.FolioArrangementCode
}

// GetFolioArrangementCodeOk returns a tuple with the FolioArrangementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionArrangementCodeType) GetFolioArrangementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FolioArrangementCode) {
		return nil, false
	}
	return o.FolioArrangementCode, true
}

// HasFolioArrangementCode returns a boolean if a field has been set.
func (o *TransactionArrangementCodeType) HasFolioArrangementCode() bool {
	if o != nil && !IsNil(o.FolioArrangementCode) {
		return true
	}

	return false
}

// SetFolioArrangementCode gets a reference to the given string and assigns it to the FolioArrangementCode field.
func (o *TransactionArrangementCodeType) SetFolioArrangementCode(v string) {
	o.FolioArrangementCode = &v
}

// GetGroupArrangementCode returns the GroupArrangementCode field value if set, zero value otherwise.
func (o *TransactionArrangementCodeType) GetGroupArrangementCode() string {
	if o == nil || IsNil(o.GroupArrangementCode) {
		var ret string
		return ret
	}
	return *o.GroupArrangementCode
}

// GetGroupArrangementCodeOk returns a tuple with the GroupArrangementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionArrangementCodeType) GetGroupArrangementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupArrangementCode) {
		return nil, false
	}
	return o.GroupArrangementCode, true
}

// HasGroupArrangementCode returns a boolean if a field has been set.
func (o *TransactionArrangementCodeType) HasGroupArrangementCode() bool {
	if o != nil && !IsNil(o.GroupArrangementCode) {
		return true
	}

	return false
}

// SetGroupArrangementCode gets a reference to the given string and assigns it to the GroupArrangementCode field.
func (o *TransactionArrangementCodeType) SetGroupArrangementCode(v string) {
	o.GroupArrangementCode = &v
}

// GetExpenseArrangementCode returns the ExpenseArrangementCode field value if set, zero value otherwise.
func (o *TransactionArrangementCodeType) GetExpenseArrangementCode() string {
	if o == nil || IsNil(o.ExpenseArrangementCode) {
		var ret string
		return ret
	}
	return *o.ExpenseArrangementCode
}

// GetExpenseArrangementCodeOk returns a tuple with the ExpenseArrangementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionArrangementCodeType) GetExpenseArrangementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpenseArrangementCode) {
		return nil, false
	}
	return o.ExpenseArrangementCode, true
}

// HasExpenseArrangementCode returns a boolean if a field has been set.
func (o *TransactionArrangementCodeType) HasExpenseArrangementCode() bool {
	if o != nil && !IsNil(o.ExpenseArrangementCode) {
		return true
	}

	return false
}

// SetExpenseArrangementCode gets a reference to the given string and assigns it to the ExpenseArrangementCode field.
func (o *TransactionArrangementCodeType) SetExpenseArrangementCode(v string) {
	o.ExpenseArrangementCode = &v
}

// GetDailyPlanCode returns the DailyPlanCode field value if set, zero value otherwise.
func (o *TransactionArrangementCodeType) GetDailyPlanCode() string {
	if o == nil || IsNil(o.DailyPlanCode) {
		var ret string
		return ret
	}
	return *o.DailyPlanCode
}

// GetDailyPlanCodeOk returns a tuple with the DailyPlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionArrangementCodeType) GetDailyPlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DailyPlanCode) {
		return nil, false
	}
	return o.DailyPlanCode, true
}

// HasDailyPlanCode returns a boolean if a field has been set.
func (o *TransactionArrangementCodeType) HasDailyPlanCode() bool {
	if o != nil && !IsNil(o.DailyPlanCode) {
		return true
	}

	return false
}

// SetDailyPlanCode gets a reference to the given string and assigns it to the DailyPlanCode field.
func (o *TransactionArrangementCodeType) SetDailyPlanCode(v string) {
	o.DailyPlanCode = &v
}

func (o TransactionArrangementCodeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionArrangementCodeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.FolioArrangementCode) {
		toSerialize["folioArrangementCode"] = o.FolioArrangementCode
	}
	if !IsNil(o.GroupArrangementCode) {
		toSerialize["groupArrangementCode"] = o.GroupArrangementCode
	}
	if !IsNil(o.ExpenseArrangementCode) {
		toSerialize["expenseArrangementCode"] = o.ExpenseArrangementCode
	}
	if !IsNil(o.DailyPlanCode) {
		toSerialize["dailyPlanCode"] = o.DailyPlanCode
	}
	return toSerialize, nil
}

type NullableTransactionArrangementCodeType struct {
	value *TransactionArrangementCodeType
	isSet bool
}

func (v NullableTransactionArrangementCodeType) Get() *TransactionArrangementCodeType {
	return v.value
}

func (v *NullableTransactionArrangementCodeType) Set(val *TransactionArrangementCodeType) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionArrangementCodeType) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionArrangementCodeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionArrangementCodeType(val *TransactionArrangementCodeType) *NullableTransactionArrangementCodeType {
	return &NullableTransactionArrangementCodeType{value: val, isSet: true}
}

func (v NullableTransactionArrangementCodeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionArrangementCodeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


