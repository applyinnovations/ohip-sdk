/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomCodeInformationBaseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomCodeInformationBaseType{}

// CustomCodeInformationBaseType Budget Forecast information for Custom segment code.
type CustomCodeInformationBaseType struct {
	BudgetValueInfo *CustomValueInfoType `json:"budgetValueInfo,omitempty"`
	// Custom code for which budget forecast information is fetched.
	CustomCode *string `json:"customCode,omitempty"`
	// Custom code description for Custom code.
	CustomCodeDescription *string `json:"customCodeDescription,omitempty"`
	ForecastValueInfo *CustomValueInfoType `json:"forecastValueInfo,omitempty"`
}

// NewCustomCodeInformationBaseType instantiates a new CustomCodeInformationBaseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCodeInformationBaseType() *CustomCodeInformationBaseType {
	this := CustomCodeInformationBaseType{}
	return &this
}

// NewCustomCodeInformationBaseTypeWithDefaults instantiates a new CustomCodeInformationBaseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCodeInformationBaseTypeWithDefaults() *CustomCodeInformationBaseType {
	this := CustomCodeInformationBaseType{}
	return &this
}

// GetBudgetValueInfo returns the BudgetValueInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationBaseType) GetBudgetValueInfo() CustomValueInfoType {
	if o == nil || IsNil(o.BudgetValueInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.BudgetValueInfo
}

// GetBudgetValueInfoOk returns a tuple with the BudgetValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationBaseType) GetBudgetValueInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.BudgetValueInfo) {
		return nil, false
	}
	return o.BudgetValueInfo, true
}

// HasBudgetValueInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationBaseType) HasBudgetValueInfo() bool {
	if o != nil && !IsNil(o.BudgetValueInfo) {
		return true
	}

	return false
}

// SetBudgetValueInfo gets a reference to the given CustomValueInfoType and assigns it to the BudgetValueInfo field.
func (o *CustomCodeInformationBaseType) SetBudgetValueInfo(v CustomValueInfoType) {
	o.BudgetValueInfo = &v
}

// GetCustomCode returns the CustomCode field value if set, zero value otherwise.
func (o *CustomCodeInformationBaseType) GetCustomCode() string {
	if o == nil || IsNil(o.CustomCode) {
		var ret string
		return ret
	}
	return *o.CustomCode
}

// GetCustomCodeOk returns a tuple with the CustomCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationBaseType) GetCustomCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomCode) {
		return nil, false
	}
	return o.CustomCode, true
}

// HasCustomCode returns a boolean if a field has been set.
func (o *CustomCodeInformationBaseType) HasCustomCode() bool {
	if o != nil && !IsNil(o.CustomCode) {
		return true
	}

	return false
}

// SetCustomCode gets a reference to the given string and assigns it to the CustomCode field.
func (o *CustomCodeInformationBaseType) SetCustomCode(v string) {
	o.CustomCode = &v
}

// GetCustomCodeDescription returns the CustomCodeDescription field value if set, zero value otherwise.
func (o *CustomCodeInformationBaseType) GetCustomCodeDescription() string {
	if o == nil || IsNil(o.CustomCodeDescription) {
		var ret string
		return ret
	}
	return *o.CustomCodeDescription
}

// GetCustomCodeDescriptionOk returns a tuple with the CustomCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationBaseType) GetCustomCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CustomCodeDescription) {
		return nil, false
	}
	return o.CustomCodeDescription, true
}

// HasCustomCodeDescription returns a boolean if a field has been set.
func (o *CustomCodeInformationBaseType) HasCustomCodeDescription() bool {
	if o != nil && !IsNil(o.CustomCodeDescription) {
		return true
	}

	return false
}

// SetCustomCodeDescription gets a reference to the given string and assigns it to the CustomCodeDescription field.
func (o *CustomCodeInformationBaseType) SetCustomCodeDescription(v string) {
	o.CustomCodeDescription = &v
}

// GetForecastValueInfo returns the ForecastValueInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationBaseType) GetForecastValueInfo() CustomValueInfoType {
	if o == nil || IsNil(o.ForecastValueInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.ForecastValueInfo
}

// GetForecastValueInfoOk returns a tuple with the ForecastValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationBaseType) GetForecastValueInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.ForecastValueInfo) {
		return nil, false
	}
	return o.ForecastValueInfo, true
}

// HasForecastValueInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationBaseType) HasForecastValueInfo() bool {
	if o != nil && !IsNil(o.ForecastValueInfo) {
		return true
	}

	return false
}

// SetForecastValueInfo gets a reference to the given CustomValueInfoType and assigns it to the ForecastValueInfo field.
func (o *CustomCodeInformationBaseType) SetForecastValueInfo(v CustomValueInfoType) {
	o.ForecastValueInfo = &v
}

func (o CustomCodeInformationBaseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomCodeInformationBaseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BudgetValueInfo) {
		toSerialize["budgetValueInfo"] = o.BudgetValueInfo
	}
	if !IsNil(o.CustomCode) {
		toSerialize["customCode"] = o.CustomCode
	}
	if !IsNil(o.CustomCodeDescription) {
		toSerialize["customCodeDescription"] = o.CustomCodeDescription
	}
	if !IsNil(o.ForecastValueInfo) {
		toSerialize["forecastValueInfo"] = o.ForecastValueInfo
	}
	return toSerialize, nil
}

type NullableCustomCodeInformationBaseType struct {
	value *CustomCodeInformationBaseType
	isSet bool
}

func (v NullableCustomCodeInformationBaseType) Get() *CustomCodeInformationBaseType {
	return v.value
}

func (v *NullableCustomCodeInformationBaseType) Set(val *CustomCodeInformationBaseType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCodeInformationBaseType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCodeInformationBaseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCodeInformationBaseType(val *CustomCodeInformationBaseType) *NullableCustomCodeInformationBaseType {
	return &NullableCustomCodeInformationBaseType{value: val, isSet: true}
}

func (v NullableCustomCodeInformationBaseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCodeInformationBaseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


