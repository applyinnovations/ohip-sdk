/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the PaymentMethodValidationRuleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodValidationRuleType{}

// PaymentMethodValidationRuleType Payment method card validation rules.
type PaymentMethodValidationRuleType struct {
	// Valid lengths of card number.
	Length *string `json:"length,omitempty"`
	// Valid card number prefix.
	Prefix *string `json:"prefix,omitempty"`
	// Card number start and end range.
	Ranges []CardRangeType `json:"ranges,omitempty"`
	// Formula used for card validation. Only valid in case of user defined validation.
	Formula *string `json:"formula,omitempty"`
	Rule *CardValidationRuleTypeType `json:"rule,omitempty"`
}

// NewPaymentMethodValidationRuleType instantiates a new PaymentMethodValidationRuleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodValidationRuleType() *PaymentMethodValidationRuleType {
	this := PaymentMethodValidationRuleType{}
	return &this
}

// NewPaymentMethodValidationRuleTypeWithDefaults instantiates a new PaymentMethodValidationRuleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodValidationRuleTypeWithDefaults() *PaymentMethodValidationRuleType {
	this := PaymentMethodValidationRuleType{}
	return &this
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *PaymentMethodValidationRuleType) GetLength() string {
	if o == nil || IsNil(o.Length) {
		var ret string
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodValidationRuleType) GetLengthOk() (*string, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *PaymentMethodValidationRuleType) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given string and assigns it to the Length field.
func (o *PaymentMethodValidationRuleType) SetLength(v string) {
	o.Length = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *PaymentMethodValidationRuleType) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodValidationRuleType) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *PaymentMethodValidationRuleType) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *PaymentMethodValidationRuleType) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *PaymentMethodValidationRuleType) GetRanges() []CardRangeType {
	if o == nil || IsNil(o.Ranges) {
		var ret []CardRangeType
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodValidationRuleType) GetRangesOk() ([]CardRangeType, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *PaymentMethodValidationRuleType) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []CardRangeType and assigns it to the Ranges field.
func (o *PaymentMethodValidationRuleType) SetRanges(v []CardRangeType) {
	o.Ranges = v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *PaymentMethodValidationRuleType) GetFormula() string {
	if o == nil || IsNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodValidationRuleType) GetFormulaOk() (*string, bool) {
	if o == nil || IsNil(o.Formula) {
		return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *PaymentMethodValidationRuleType) HasFormula() bool {
	if o != nil && !IsNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *PaymentMethodValidationRuleType) SetFormula(v string) {
	o.Formula = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *PaymentMethodValidationRuleType) GetRule() CardValidationRuleTypeType {
	if o == nil || IsNil(o.Rule) {
		var ret CardValidationRuleTypeType
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodValidationRuleType) GetRuleOk() (*CardValidationRuleTypeType, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *PaymentMethodValidationRuleType) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given CardValidationRuleTypeType and assigns it to the Rule field.
func (o *PaymentMethodValidationRuleType) SetRule(v CardValidationRuleTypeType) {
	o.Rule = &v
}

func (o PaymentMethodValidationRuleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodValidationRuleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullablePaymentMethodValidationRuleType struct {
	value *PaymentMethodValidationRuleType
	isSet bool
}

func (v NullablePaymentMethodValidationRuleType) Get() *PaymentMethodValidationRuleType {
	return v.value
}

func (v *NullablePaymentMethodValidationRuleType) Set(val *PaymentMethodValidationRuleType) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodValidationRuleType) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodValidationRuleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodValidationRuleType(val *PaymentMethodValidationRuleType) *NullablePaymentMethodValidationRuleType {
	return &NullablePaymentMethodValidationRuleType{value: val, isSet: true}
}

func (v NullablePaymentMethodValidationRuleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodValidationRuleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


