/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the GenerateCalculationBucketsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateCalculationBucketsType{}

// GenerateCalculationBucketsType Defines the buckets the generated amount can be added to.
type GenerateCalculationBucketsType struct {
	// Generate Calculation Bucket1.
	Bucket1 *bool `json:"bucket1,omitempty"`
	// Generate Calculation Bucket2.
	Bucket2 *bool `json:"bucket2,omitempty"`
	// Generate Calculation Bucket3.
	Bucket3 *bool `json:"bucket3,omitempty"`
}

// NewGenerateCalculationBucketsType instantiates a new GenerateCalculationBucketsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateCalculationBucketsType() *GenerateCalculationBucketsType {
	this := GenerateCalculationBucketsType{}
	return &this
}

// NewGenerateCalculationBucketsTypeWithDefaults instantiates a new GenerateCalculationBucketsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateCalculationBucketsTypeWithDefaults() *GenerateCalculationBucketsType {
	this := GenerateCalculationBucketsType{}
	return &this
}

// GetBucket1 returns the Bucket1 field value if set, zero value otherwise.
func (o *GenerateCalculationBucketsType) GetBucket1() bool {
	if o == nil || IsNil(o.Bucket1) {
		var ret bool
		return ret
	}
	return *o.Bucket1
}

// GetBucket1Ok returns a tuple with the Bucket1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCalculationBucketsType) GetBucket1Ok() (*bool, bool) {
	if o == nil || IsNil(o.Bucket1) {
		return nil, false
	}
	return o.Bucket1, true
}

// HasBucket1 returns a boolean if a field has been set.
func (o *GenerateCalculationBucketsType) HasBucket1() bool {
	if o != nil && !IsNil(o.Bucket1) {
		return true
	}

	return false
}

// SetBucket1 gets a reference to the given bool and assigns it to the Bucket1 field.
func (o *GenerateCalculationBucketsType) SetBucket1(v bool) {
	o.Bucket1 = &v
}

// GetBucket2 returns the Bucket2 field value if set, zero value otherwise.
func (o *GenerateCalculationBucketsType) GetBucket2() bool {
	if o == nil || IsNil(o.Bucket2) {
		var ret bool
		return ret
	}
	return *o.Bucket2
}

// GetBucket2Ok returns a tuple with the Bucket2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCalculationBucketsType) GetBucket2Ok() (*bool, bool) {
	if o == nil || IsNil(o.Bucket2) {
		return nil, false
	}
	return o.Bucket2, true
}

// HasBucket2 returns a boolean if a field has been set.
func (o *GenerateCalculationBucketsType) HasBucket2() bool {
	if o != nil && !IsNil(o.Bucket2) {
		return true
	}

	return false
}

// SetBucket2 gets a reference to the given bool and assigns it to the Bucket2 field.
func (o *GenerateCalculationBucketsType) SetBucket2(v bool) {
	o.Bucket2 = &v
}

// GetBucket3 returns the Bucket3 field value if set, zero value otherwise.
func (o *GenerateCalculationBucketsType) GetBucket3() bool {
	if o == nil || IsNil(o.Bucket3) {
		var ret bool
		return ret
	}
	return *o.Bucket3
}

// GetBucket3Ok returns a tuple with the Bucket3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCalculationBucketsType) GetBucket3Ok() (*bool, bool) {
	if o == nil || IsNil(o.Bucket3) {
		return nil, false
	}
	return o.Bucket3, true
}

// HasBucket3 returns a boolean if a field has been set.
func (o *GenerateCalculationBucketsType) HasBucket3() bool {
	if o != nil && !IsNil(o.Bucket3) {
		return true
	}

	return false
}

// SetBucket3 gets a reference to the given bool and assigns it to the Bucket3 field.
func (o *GenerateCalculationBucketsType) SetBucket3(v bool) {
	o.Bucket3 = &v
}

func (o GenerateCalculationBucketsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateCalculationBucketsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bucket1) {
		toSerialize["bucket1"] = o.Bucket1
	}
	if !IsNil(o.Bucket2) {
		toSerialize["bucket2"] = o.Bucket2
	}
	if !IsNil(o.Bucket3) {
		toSerialize["bucket3"] = o.Bucket3
	}
	return toSerialize, nil
}

type NullableGenerateCalculationBucketsType struct {
	value *GenerateCalculationBucketsType
	isSet bool
}

func (v NullableGenerateCalculationBucketsType) Get() *GenerateCalculationBucketsType {
	return v.value
}

func (v *NullableGenerateCalculationBucketsType) Set(val *GenerateCalculationBucketsType) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateCalculationBucketsType) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateCalculationBucketsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateCalculationBucketsType(val *GenerateCalculationBucketsType) *NullableGenerateCalculationBucketsType {
	return &NullableGenerateCalculationBucketsType{value: val, isSet: true}
}

func (v NullableGenerateCalculationBucketsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateCalculationBucketsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


