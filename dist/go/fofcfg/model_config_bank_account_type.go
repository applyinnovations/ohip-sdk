/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ConfigBankAccountType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigBankAccountType{}

// ConfigBankAccountType Indentifier for a Bank Account.
type ConfigBankAccountType struct {
	// Bank account ID.
	BankAccountId *float32 `json:"bankAccountId,omitempty"`
	// Account number at the bank.
	BankAccountNumber *string `json:"bankAccountNumber,omitempty"`
	// Unique code of the bank.
	BankCode *string `json:"bankCode,omitempty"`
	// Name of the bank account.
	BankName *string `json:"bankName,omitempty"`
	// Code for the branch of the bank.
	BranchCode *string `json:"branchCode,omitempty"`
	// Number of lines to be printed on check stub.
	CheckStubLines *float32 `json:"checkStubLines,omitempty"`
	// Currency associated with the bank account.
	Currency *string `json:"currency,omitempty"`
	// Default Bank Account for that resort.
	Default *bool `json:"default,omitempty"`
	// Used mainly to figure out default bank for resort and currency combination.
	DefaultForCurrency *bool `json:"defaultForCurrency,omitempty"`
	// Check number allowed to be edited true/false.
	EditCheckNumber *bool `json:"editCheckNumber,omitempty"`
	// Type of format for Payment Method.
	Format *string `json:"format,omitempty"`
	// Property of the bank account.
	HotelId *string `json:"hotelId,omitempty"`
	// Language identification.
	Language *string `json:"language,omitempty"`
	// Used to hold last exported date for commission export.
	LastExportDate *string `json:"lastExportDate,omitempty"`
	// Used to hold last exported filename for commission export.
	LastExportFileNo *int32 `json:"lastExportFileNo,omitempty"`
	// Minimum amount required to produce a check through commission processing for the selected account.
	MinProcessingAmount *float32 `json:"minProcessingAmount,omitempty"`
	// Next check number used by commission handling module for bank account selected.
	NextCheckNumber *float32 `json:"nextCheckNumber,omitempty"`
	PaymentMethod *CommissionConfigPaymentMethodType `json:"paymentMethod,omitempty"`
	// Indicate that the bank account uses Positive Pay Export.
	PositivePayExport *bool `json:"positivePayExport,omitempty"`
	// Indicates that bank account uses 1099 report.
	Report1099 *bool `json:"report1099,omitempty"`
	// Routing number for the bank account.
	RoutingNumber *string `json:"routingNumber,omitempty"`
	// Source directory for importing commission information.
	SourceImportDirectory *string `json:"sourceImportDirectory,omitempty"`
	// Target directory where import files will be stored.
	TargetImportDirectory *string `json:"targetImportDirectory,omitempty"`
	// Force validation of TA/Source IATA number during commision payment process.
	ValidateIATANumber *bool `json:"validateIATANumber,omitempty"`
}

// NewConfigBankAccountType instantiates a new ConfigBankAccountType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigBankAccountType() *ConfigBankAccountType {
	this := ConfigBankAccountType{}
	return &this
}

// NewConfigBankAccountTypeWithDefaults instantiates a new ConfigBankAccountType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigBankAccountTypeWithDefaults() *ConfigBankAccountType {
	this := ConfigBankAccountType{}
	return &this
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetBankAccountId() float32 {
	if o == nil || IsNil(o.BankAccountId) {
		var ret float32
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetBankAccountIdOk() (*float32, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given float32 and assigns it to the BankAccountId field.
func (o *ConfigBankAccountType) SetBankAccountId(v float32) {
	o.BankAccountId = &v
}

// GetBankAccountNumber returns the BankAccountNumber field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetBankAccountNumber() string {
	if o == nil || IsNil(o.BankAccountNumber) {
		var ret string
		return ret
	}
	return *o.BankAccountNumber
}

// GetBankAccountNumberOk returns a tuple with the BankAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetBankAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountNumber) {
		return nil, false
	}
	return o.BankAccountNumber, true
}

// HasBankAccountNumber returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasBankAccountNumber() bool {
	if o != nil && !IsNil(o.BankAccountNumber) {
		return true
	}

	return false
}

// SetBankAccountNumber gets a reference to the given string and assigns it to the BankAccountNumber field.
func (o *ConfigBankAccountType) SetBankAccountNumber(v string) {
	o.BankAccountNumber = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *ConfigBankAccountType) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetBankName() string {
	if o == nil || IsNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankName) {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasBankName() bool {
	if o != nil && !IsNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *ConfigBankAccountType) SetBankName(v string) {
	o.BankName = &v
}

// GetBranchCode returns the BranchCode field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetBranchCode() string {
	if o == nil || IsNil(o.BranchCode) {
		var ret string
		return ret
	}
	return *o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BranchCode) {
		return nil, false
	}
	return o.BranchCode, true
}

// HasBranchCode returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasBranchCode() bool {
	if o != nil && !IsNil(o.BranchCode) {
		return true
	}

	return false
}

// SetBranchCode gets a reference to the given string and assigns it to the BranchCode field.
func (o *ConfigBankAccountType) SetBranchCode(v string) {
	o.BranchCode = &v
}

// GetCheckStubLines returns the CheckStubLines field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetCheckStubLines() float32 {
	if o == nil || IsNil(o.CheckStubLines) {
		var ret float32
		return ret
	}
	return *o.CheckStubLines
}

// GetCheckStubLinesOk returns a tuple with the CheckStubLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetCheckStubLinesOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckStubLines) {
		return nil, false
	}
	return o.CheckStubLines, true
}

// HasCheckStubLines returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasCheckStubLines() bool {
	if o != nil && !IsNil(o.CheckStubLines) {
		return true
	}

	return false
}

// SetCheckStubLines gets a reference to the given float32 and assigns it to the CheckStubLines field.
func (o *ConfigBankAccountType) SetCheckStubLines(v float32) {
	o.CheckStubLines = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ConfigBankAccountType) SetCurrency(v string) {
	o.Currency = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *ConfigBankAccountType) SetDefault(v bool) {
	o.Default = &v
}

// GetDefaultForCurrency returns the DefaultForCurrency field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetDefaultForCurrency() bool {
	if o == nil || IsNil(o.DefaultForCurrency) {
		var ret bool
		return ret
	}
	return *o.DefaultForCurrency
}

// GetDefaultForCurrencyOk returns a tuple with the DefaultForCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetDefaultForCurrencyOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultForCurrency) {
		return nil, false
	}
	return o.DefaultForCurrency, true
}

// HasDefaultForCurrency returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasDefaultForCurrency() bool {
	if o != nil && !IsNil(o.DefaultForCurrency) {
		return true
	}

	return false
}

// SetDefaultForCurrency gets a reference to the given bool and assigns it to the DefaultForCurrency field.
func (o *ConfigBankAccountType) SetDefaultForCurrency(v bool) {
	o.DefaultForCurrency = &v
}

// GetEditCheckNumber returns the EditCheckNumber field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetEditCheckNumber() bool {
	if o == nil || IsNil(o.EditCheckNumber) {
		var ret bool
		return ret
	}
	return *o.EditCheckNumber
}

// GetEditCheckNumberOk returns a tuple with the EditCheckNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetEditCheckNumberOk() (*bool, bool) {
	if o == nil || IsNil(o.EditCheckNumber) {
		return nil, false
	}
	return o.EditCheckNumber, true
}

// HasEditCheckNumber returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasEditCheckNumber() bool {
	if o != nil && !IsNil(o.EditCheckNumber) {
		return true
	}

	return false
}

// SetEditCheckNumber gets a reference to the given bool and assigns it to the EditCheckNumber field.
func (o *ConfigBankAccountType) SetEditCheckNumber(v bool) {
	o.EditCheckNumber = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ConfigBankAccountType) SetFormat(v string) {
	o.Format = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ConfigBankAccountType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ConfigBankAccountType) SetLanguage(v string) {
	o.Language = &v
}

// GetLastExportDate returns the LastExportDate field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetLastExportDate() string {
	if o == nil || IsNil(o.LastExportDate) {
		var ret string
		return ret
	}
	return *o.LastExportDate
}

// GetLastExportDateOk returns a tuple with the LastExportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetLastExportDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastExportDate) {
		return nil, false
	}
	return o.LastExportDate, true
}

// HasLastExportDate returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasLastExportDate() bool {
	if o != nil && !IsNil(o.LastExportDate) {
		return true
	}

	return false
}

// SetLastExportDate gets a reference to the given string and assigns it to the LastExportDate field.
func (o *ConfigBankAccountType) SetLastExportDate(v string) {
	o.LastExportDate = &v
}

// GetLastExportFileNo returns the LastExportFileNo field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetLastExportFileNo() int32 {
	if o == nil || IsNil(o.LastExportFileNo) {
		var ret int32
		return ret
	}
	return *o.LastExportFileNo
}

// GetLastExportFileNoOk returns a tuple with the LastExportFileNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetLastExportFileNoOk() (*int32, bool) {
	if o == nil || IsNil(o.LastExportFileNo) {
		return nil, false
	}
	return o.LastExportFileNo, true
}

// HasLastExportFileNo returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasLastExportFileNo() bool {
	if o != nil && !IsNil(o.LastExportFileNo) {
		return true
	}

	return false
}

// SetLastExportFileNo gets a reference to the given int32 and assigns it to the LastExportFileNo field.
func (o *ConfigBankAccountType) SetLastExportFileNo(v int32) {
	o.LastExportFileNo = &v
}

// GetMinProcessingAmount returns the MinProcessingAmount field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetMinProcessingAmount() float32 {
	if o == nil || IsNil(o.MinProcessingAmount) {
		var ret float32
		return ret
	}
	return *o.MinProcessingAmount
}

// GetMinProcessingAmountOk returns a tuple with the MinProcessingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetMinProcessingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.MinProcessingAmount) {
		return nil, false
	}
	return o.MinProcessingAmount, true
}

// HasMinProcessingAmount returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasMinProcessingAmount() bool {
	if o != nil && !IsNil(o.MinProcessingAmount) {
		return true
	}

	return false
}

// SetMinProcessingAmount gets a reference to the given float32 and assigns it to the MinProcessingAmount field.
func (o *ConfigBankAccountType) SetMinProcessingAmount(v float32) {
	o.MinProcessingAmount = &v
}

// GetNextCheckNumber returns the NextCheckNumber field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetNextCheckNumber() float32 {
	if o == nil || IsNil(o.NextCheckNumber) {
		var ret float32
		return ret
	}
	return *o.NextCheckNumber
}

// GetNextCheckNumberOk returns a tuple with the NextCheckNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetNextCheckNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.NextCheckNumber) {
		return nil, false
	}
	return o.NextCheckNumber, true
}

// HasNextCheckNumber returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasNextCheckNumber() bool {
	if o != nil && !IsNil(o.NextCheckNumber) {
		return true
	}

	return false
}

// SetNextCheckNumber gets a reference to the given float32 and assigns it to the NextCheckNumber field.
func (o *ConfigBankAccountType) SetNextCheckNumber(v float32) {
	o.NextCheckNumber = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetPaymentMethod() CommissionConfigPaymentMethodType {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret CommissionConfigPaymentMethodType
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetPaymentMethodOk() (*CommissionConfigPaymentMethodType, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given CommissionConfigPaymentMethodType and assigns it to the PaymentMethod field.
func (o *ConfigBankAccountType) SetPaymentMethod(v CommissionConfigPaymentMethodType) {
	o.PaymentMethod = &v
}

// GetPositivePayExport returns the PositivePayExport field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetPositivePayExport() bool {
	if o == nil || IsNil(o.PositivePayExport) {
		var ret bool
		return ret
	}
	return *o.PositivePayExport
}

// GetPositivePayExportOk returns a tuple with the PositivePayExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetPositivePayExportOk() (*bool, bool) {
	if o == nil || IsNil(o.PositivePayExport) {
		return nil, false
	}
	return o.PositivePayExport, true
}

// HasPositivePayExport returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasPositivePayExport() bool {
	if o != nil && !IsNil(o.PositivePayExport) {
		return true
	}

	return false
}

// SetPositivePayExport gets a reference to the given bool and assigns it to the PositivePayExport field.
func (o *ConfigBankAccountType) SetPositivePayExport(v bool) {
	o.PositivePayExport = &v
}

// GetReport1099 returns the Report1099 field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetReport1099() bool {
	if o == nil || IsNil(o.Report1099) {
		var ret bool
		return ret
	}
	return *o.Report1099
}

// GetReport1099Ok returns a tuple with the Report1099 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetReport1099Ok() (*bool, bool) {
	if o == nil || IsNil(o.Report1099) {
		return nil, false
	}
	return o.Report1099, true
}

// HasReport1099 returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasReport1099() bool {
	if o != nil && !IsNil(o.Report1099) {
		return true
	}

	return false
}

// SetReport1099 gets a reference to the given bool and assigns it to the Report1099 field.
func (o *ConfigBankAccountType) SetReport1099(v bool) {
	o.Report1099 = &v
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetRoutingNumber() string {
	if o == nil || IsNil(o.RoutingNumber) {
		var ret string
		return ret
	}
	return *o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingNumber) {
		return nil, false
	}
	return o.RoutingNumber, true
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasRoutingNumber() bool {
	if o != nil && !IsNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given string and assigns it to the RoutingNumber field.
func (o *ConfigBankAccountType) SetRoutingNumber(v string) {
	o.RoutingNumber = &v
}

// GetSourceImportDirectory returns the SourceImportDirectory field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetSourceImportDirectory() string {
	if o == nil || IsNil(o.SourceImportDirectory) {
		var ret string
		return ret
	}
	return *o.SourceImportDirectory
}

// GetSourceImportDirectoryOk returns a tuple with the SourceImportDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetSourceImportDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.SourceImportDirectory) {
		return nil, false
	}
	return o.SourceImportDirectory, true
}

// HasSourceImportDirectory returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasSourceImportDirectory() bool {
	if o != nil && !IsNil(o.SourceImportDirectory) {
		return true
	}

	return false
}

// SetSourceImportDirectory gets a reference to the given string and assigns it to the SourceImportDirectory field.
func (o *ConfigBankAccountType) SetSourceImportDirectory(v string) {
	o.SourceImportDirectory = &v
}

// GetTargetImportDirectory returns the TargetImportDirectory field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetTargetImportDirectory() string {
	if o == nil || IsNil(o.TargetImportDirectory) {
		var ret string
		return ret
	}
	return *o.TargetImportDirectory
}

// GetTargetImportDirectoryOk returns a tuple with the TargetImportDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetTargetImportDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.TargetImportDirectory) {
		return nil, false
	}
	return o.TargetImportDirectory, true
}

// HasTargetImportDirectory returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasTargetImportDirectory() bool {
	if o != nil && !IsNil(o.TargetImportDirectory) {
		return true
	}

	return false
}

// SetTargetImportDirectory gets a reference to the given string and assigns it to the TargetImportDirectory field.
func (o *ConfigBankAccountType) SetTargetImportDirectory(v string) {
	o.TargetImportDirectory = &v
}

// GetValidateIATANumber returns the ValidateIATANumber field value if set, zero value otherwise.
func (o *ConfigBankAccountType) GetValidateIATANumber() bool {
	if o == nil || IsNil(o.ValidateIATANumber) {
		var ret bool
		return ret
	}
	return *o.ValidateIATANumber
}

// GetValidateIATANumberOk returns a tuple with the ValidateIATANumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBankAccountType) GetValidateIATANumberOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateIATANumber) {
		return nil, false
	}
	return o.ValidateIATANumber, true
}

// HasValidateIATANumber returns a boolean if a field has been set.
func (o *ConfigBankAccountType) HasValidateIATANumber() bool {
	if o != nil && !IsNil(o.ValidateIATANumber) {
		return true
	}

	return false
}

// SetValidateIATANumber gets a reference to the given bool and assigns it to the ValidateIATANumber field.
func (o *ConfigBankAccountType) SetValidateIATANumber(v bool) {
	o.ValidateIATANumber = &v
}

func (o ConfigBankAccountType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigBankAccountType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankAccountId) {
		toSerialize["bankAccountId"] = o.BankAccountId
	}
	if !IsNil(o.BankAccountNumber) {
		toSerialize["bankAccountNumber"] = o.BankAccountNumber
	}
	if !IsNil(o.BankCode) {
		toSerialize["bankCode"] = o.BankCode
	}
	if !IsNil(o.BankName) {
		toSerialize["bankName"] = o.BankName
	}
	if !IsNil(o.BranchCode) {
		toSerialize["branchCode"] = o.BranchCode
	}
	if !IsNil(o.CheckStubLines) {
		toSerialize["checkStubLines"] = o.CheckStubLines
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.DefaultForCurrency) {
		toSerialize["defaultForCurrency"] = o.DefaultForCurrency
	}
	if !IsNil(o.EditCheckNumber) {
		toSerialize["editCheckNumber"] = o.EditCheckNumber
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.LastExportDate) {
		toSerialize["lastExportDate"] = o.LastExportDate
	}
	if !IsNil(o.LastExportFileNo) {
		toSerialize["lastExportFileNo"] = o.LastExportFileNo
	}
	if !IsNil(o.MinProcessingAmount) {
		toSerialize["minProcessingAmount"] = o.MinProcessingAmount
	}
	if !IsNil(o.NextCheckNumber) {
		toSerialize["nextCheckNumber"] = o.NextCheckNumber
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PositivePayExport) {
		toSerialize["positivePayExport"] = o.PositivePayExport
	}
	if !IsNil(o.Report1099) {
		toSerialize["report1099"] = o.Report1099
	}
	if !IsNil(o.RoutingNumber) {
		toSerialize["routingNumber"] = o.RoutingNumber
	}
	if !IsNil(o.SourceImportDirectory) {
		toSerialize["sourceImportDirectory"] = o.SourceImportDirectory
	}
	if !IsNil(o.TargetImportDirectory) {
		toSerialize["targetImportDirectory"] = o.TargetImportDirectory
	}
	if !IsNil(o.ValidateIATANumber) {
		toSerialize["validateIATANumber"] = o.ValidateIATANumber
	}
	return toSerialize, nil
}

type NullableConfigBankAccountType struct {
	value *ConfigBankAccountType
	isSet bool
}

func (v NullableConfigBankAccountType) Get() *ConfigBankAccountType {
	return v.value
}

func (v *NullableConfigBankAccountType) Set(val *ConfigBankAccountType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigBankAccountType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigBankAccountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigBankAccountType(val *ConfigBankAccountType) *NullableConfigBankAccountType {
	return &NullableConfigBankAccountType{value: val, isSet: true}
}

func (v NullableConfigBankAccountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigBankAccountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


