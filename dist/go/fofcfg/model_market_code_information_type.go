/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the MarketCodeInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketCodeInformationType{}

// MarketCodeInformationType Budget Forecast information for budget segment code.
type MarketCodeInformationType struct {
	// Segment code for which budget forecast information is fetched.
	MarketCode *string `json:"marketCode,omitempty"`
	// Segment code description for segment code.
	MarketCodeDescription *string `json:"marketCodeDescription,omitempty"`
	BudgetRevenueInfo *RevenueNightsInfoType `json:"budgetRevenueInfo,omitempty"`
	ForecastRevenueInfo *RevenueNightsInfoType `json:"forecastRevenueInfo,omitempty"`
	ActualRevenueInfo *RevenueNightsInfoType `json:"actualRevenueInfo,omitempty"`
	// Monthly Revenue Variance information.
	AFVarianceInfo []MonthlyRevenueNightsVarianceInfoType `json:"aFVarianceInfo,omitempty"`
	// Monthly Revenue Variance information.
	ABVarianceInfo []MonthlyRevenueNightsVarianceInfoType `json:"aBVarianceInfo,omitempty"`
	// Monthly Revenue Variance information.
	FBVarianceInfo []MonthlyRevenueNightsVarianceInfoType `json:"fBVarianceInfo,omitempty"`
}

// NewMarketCodeInformationType instantiates a new MarketCodeInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketCodeInformationType() *MarketCodeInformationType {
	this := MarketCodeInformationType{}
	return &this
}

// NewMarketCodeInformationTypeWithDefaults instantiates a new MarketCodeInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketCodeInformationTypeWithDefaults() *MarketCodeInformationType {
	this := MarketCodeInformationType{}
	return &this
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *MarketCodeInformationType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetMarketCodeDescription returns the MarketCodeDescription field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetMarketCodeDescription() string {
	if o == nil || IsNil(o.MarketCodeDescription) {
		var ret string
		return ret
	}
	return *o.MarketCodeDescription
}

// GetMarketCodeDescriptionOk returns a tuple with the MarketCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetMarketCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCodeDescription) {
		return nil, false
	}
	return o.MarketCodeDescription, true
}

// HasMarketCodeDescription returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasMarketCodeDescription() bool {
	if o != nil && !IsNil(o.MarketCodeDescription) {
		return true
	}

	return false
}

// SetMarketCodeDescription gets a reference to the given string and assigns it to the MarketCodeDescription field.
func (o *MarketCodeInformationType) SetMarketCodeDescription(v string) {
	o.MarketCodeDescription = &v
}

// GetBudgetRevenueInfo returns the BudgetRevenueInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetBudgetRevenueInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.BudgetRevenueInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.BudgetRevenueInfo
}

// GetBudgetRevenueInfoOk returns a tuple with the BudgetRevenueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetBudgetRevenueInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.BudgetRevenueInfo) {
		return nil, false
	}
	return o.BudgetRevenueInfo, true
}

// HasBudgetRevenueInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasBudgetRevenueInfo() bool {
	if o != nil && !IsNil(o.BudgetRevenueInfo) {
		return true
	}

	return false
}

// SetBudgetRevenueInfo gets a reference to the given RevenueNightsInfoType and assigns it to the BudgetRevenueInfo field.
func (o *MarketCodeInformationType) SetBudgetRevenueInfo(v RevenueNightsInfoType) {
	o.BudgetRevenueInfo = &v
}

// GetForecastRevenueInfo returns the ForecastRevenueInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetForecastRevenueInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.ForecastRevenueInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.ForecastRevenueInfo
}

// GetForecastRevenueInfoOk returns a tuple with the ForecastRevenueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetForecastRevenueInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.ForecastRevenueInfo) {
		return nil, false
	}
	return o.ForecastRevenueInfo, true
}

// HasForecastRevenueInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasForecastRevenueInfo() bool {
	if o != nil && !IsNil(o.ForecastRevenueInfo) {
		return true
	}

	return false
}

// SetForecastRevenueInfo gets a reference to the given RevenueNightsInfoType and assigns it to the ForecastRevenueInfo field.
func (o *MarketCodeInformationType) SetForecastRevenueInfo(v RevenueNightsInfoType) {
	o.ForecastRevenueInfo = &v
}

// GetActualRevenueInfo returns the ActualRevenueInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetActualRevenueInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.ActualRevenueInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.ActualRevenueInfo
}

// GetActualRevenueInfoOk returns a tuple with the ActualRevenueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetActualRevenueInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.ActualRevenueInfo) {
		return nil, false
	}
	return o.ActualRevenueInfo, true
}

// HasActualRevenueInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasActualRevenueInfo() bool {
	if o != nil && !IsNil(o.ActualRevenueInfo) {
		return true
	}

	return false
}

// SetActualRevenueInfo gets a reference to the given RevenueNightsInfoType and assigns it to the ActualRevenueInfo field.
func (o *MarketCodeInformationType) SetActualRevenueInfo(v RevenueNightsInfoType) {
	o.ActualRevenueInfo = &v
}

// GetAFVarianceInfo returns the AFVarianceInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetAFVarianceInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.AFVarianceInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.AFVarianceInfo
}

// GetAFVarianceInfoOk returns a tuple with the AFVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetAFVarianceInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.AFVarianceInfo) {
		return nil, false
	}
	return o.AFVarianceInfo, true
}

// HasAFVarianceInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasAFVarianceInfo() bool {
	if o != nil && !IsNil(o.AFVarianceInfo) {
		return true
	}

	return false
}

// SetAFVarianceInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the AFVarianceInfo field.
func (o *MarketCodeInformationType) SetAFVarianceInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.AFVarianceInfo = v
}

// GetABVarianceInfo returns the ABVarianceInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetABVarianceInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.ABVarianceInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.ABVarianceInfo
}

// GetABVarianceInfoOk returns a tuple with the ABVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetABVarianceInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.ABVarianceInfo) {
		return nil, false
	}
	return o.ABVarianceInfo, true
}

// HasABVarianceInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasABVarianceInfo() bool {
	if o != nil && !IsNil(o.ABVarianceInfo) {
		return true
	}

	return false
}

// SetABVarianceInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the ABVarianceInfo field.
func (o *MarketCodeInformationType) SetABVarianceInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.ABVarianceInfo = v
}

// GetFBVarianceInfo returns the FBVarianceInfo field value if set, zero value otherwise.
func (o *MarketCodeInformationType) GetFBVarianceInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.FBVarianceInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.FBVarianceInfo
}

// GetFBVarianceInfoOk returns a tuple with the FBVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketCodeInformationType) GetFBVarianceInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.FBVarianceInfo) {
		return nil, false
	}
	return o.FBVarianceInfo, true
}

// HasFBVarianceInfo returns a boolean if a field has been set.
func (o *MarketCodeInformationType) HasFBVarianceInfo() bool {
	if o != nil && !IsNil(o.FBVarianceInfo) {
		return true
	}

	return false
}

// SetFBVarianceInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the FBVarianceInfo field.
func (o *MarketCodeInformationType) SetFBVarianceInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.FBVarianceInfo = v
}

func (o MarketCodeInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketCodeInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.MarketCodeDescription) {
		toSerialize["marketCodeDescription"] = o.MarketCodeDescription
	}
	if !IsNil(o.BudgetRevenueInfo) {
		toSerialize["budgetRevenueInfo"] = o.BudgetRevenueInfo
	}
	if !IsNil(o.ForecastRevenueInfo) {
		toSerialize["forecastRevenueInfo"] = o.ForecastRevenueInfo
	}
	if !IsNil(o.ActualRevenueInfo) {
		toSerialize["actualRevenueInfo"] = o.ActualRevenueInfo
	}
	if !IsNil(o.AFVarianceInfo) {
		toSerialize["aFVarianceInfo"] = o.AFVarianceInfo
	}
	if !IsNil(o.ABVarianceInfo) {
		toSerialize["aBVarianceInfo"] = o.ABVarianceInfo
	}
	if !IsNil(o.FBVarianceInfo) {
		toSerialize["fBVarianceInfo"] = o.FBVarianceInfo
	}
	return toSerialize, nil
}

type NullableMarketCodeInformationType struct {
	value *MarketCodeInformationType
	isSet bool
}

func (v NullableMarketCodeInformationType) Get() *MarketCodeInformationType {
	return v.value
}

func (v *NullableMarketCodeInformationType) Set(val *MarketCodeInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketCodeInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketCodeInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketCodeInformationType(val *MarketCodeInformationType) *NullableMarketCodeInformationType {
	return &NullableMarketCodeInformationType{value: val, isSet: true}
}

func (v NullableMarketCodeInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketCodeInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


