/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ARAccountTypeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARAccountTypeType{}

// ARAccountTypeType Information which uniquely identifies account type
type ARAccountTypeType struct {
	// Property associated with account type
	HotelId *string `json:"hotelId,omitempty"`
	// Account receivable account type
	AccountType *string `json:"accountType,omitempty"`
	// Full description of account type
	Description *string `json:"description,omitempty"`
	// Maximum credit available for account type
	CreditLimit *float32 `json:"creditLimit,omitempty"`
	StatementMode *StatementType `json:"statementMode,omitempty"`
	// Statement file name that account receivable account types uses
	StatementName *string `json:"statementName,omitempty"`
	// Description associated with statement file name
	StatementNameDesc *string `json:"statementNameDesc,omitempty"`
	PrintPreference *ARPrintPreferenceType `json:"printPreference,omitempty"`
	FinanceCharge *ARFinanceChargeType `json:"financeCharge,omitempty"`
	ReminderCycle *ARReminderCycleType `json:"reminderCycle,omitempty"`
	// Defines the number of days(aging) within which the payment must be made for a account type, if not a reminder is generated.
	ReminderDelayDays *int32 `json:"reminderDelayDays,omitempty"`
}

// NewARAccountTypeType instantiates a new ARAccountTypeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARAccountTypeType() *ARAccountTypeType {
	this := ARAccountTypeType{}
	return &this
}

// NewARAccountTypeTypeWithDefaults instantiates a new ARAccountTypeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARAccountTypeTypeWithDefaults() *ARAccountTypeType {
	this := ARAccountTypeType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARAccountTypeType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *ARAccountTypeType) SetAccountType(v string) {
	o.AccountType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ARAccountTypeType) SetDescription(v string) {
	o.Description = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetCreditLimit() float32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret float32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetCreditLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given float32 and assigns it to the CreditLimit field.
func (o *ARAccountTypeType) SetCreditLimit(v float32) {
	o.CreditLimit = &v
}

// GetStatementMode returns the StatementMode field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetStatementMode() StatementType {
	if o == nil || IsNil(o.StatementMode) {
		var ret StatementType
		return ret
	}
	return *o.StatementMode
}

// GetStatementModeOk returns a tuple with the StatementMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetStatementModeOk() (*StatementType, bool) {
	if o == nil || IsNil(o.StatementMode) {
		return nil, false
	}
	return o.StatementMode, true
}

// HasStatementMode returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasStatementMode() bool {
	if o != nil && !IsNil(o.StatementMode) {
		return true
	}

	return false
}

// SetStatementMode gets a reference to the given StatementType and assigns it to the StatementMode field.
func (o *ARAccountTypeType) SetStatementMode(v StatementType) {
	o.StatementMode = &v
}

// GetStatementName returns the StatementName field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetStatementName() string {
	if o == nil || IsNil(o.StatementName) {
		var ret string
		return ret
	}
	return *o.StatementName
}

// GetStatementNameOk returns a tuple with the StatementName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetStatementNameOk() (*string, bool) {
	if o == nil || IsNil(o.StatementName) {
		return nil, false
	}
	return o.StatementName, true
}

// HasStatementName returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasStatementName() bool {
	if o != nil && !IsNil(o.StatementName) {
		return true
	}

	return false
}

// SetStatementName gets a reference to the given string and assigns it to the StatementName field.
func (o *ARAccountTypeType) SetStatementName(v string) {
	o.StatementName = &v
}

// GetStatementNameDesc returns the StatementNameDesc field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetStatementNameDesc() string {
	if o == nil || IsNil(o.StatementNameDesc) {
		var ret string
		return ret
	}
	return *o.StatementNameDesc
}

// GetStatementNameDescOk returns a tuple with the StatementNameDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetStatementNameDescOk() (*string, bool) {
	if o == nil || IsNil(o.StatementNameDesc) {
		return nil, false
	}
	return o.StatementNameDesc, true
}

// HasStatementNameDesc returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasStatementNameDesc() bool {
	if o != nil && !IsNil(o.StatementNameDesc) {
		return true
	}

	return false
}

// SetStatementNameDesc gets a reference to the given string and assigns it to the StatementNameDesc field.
func (o *ARAccountTypeType) SetStatementNameDesc(v string) {
	o.StatementNameDesc = &v
}

// GetPrintPreference returns the PrintPreference field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetPrintPreference() ARPrintPreferenceType {
	if o == nil || IsNil(o.PrintPreference) {
		var ret ARPrintPreferenceType
		return ret
	}
	return *o.PrintPreference
}

// GetPrintPreferenceOk returns a tuple with the PrintPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetPrintPreferenceOk() (*ARPrintPreferenceType, bool) {
	if o == nil || IsNil(o.PrintPreference) {
		return nil, false
	}
	return o.PrintPreference, true
}

// HasPrintPreference returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasPrintPreference() bool {
	if o != nil && !IsNil(o.PrintPreference) {
		return true
	}

	return false
}

// SetPrintPreference gets a reference to the given ARPrintPreferenceType and assigns it to the PrintPreference field.
func (o *ARAccountTypeType) SetPrintPreference(v ARPrintPreferenceType) {
	o.PrintPreference = &v
}

// GetFinanceCharge returns the FinanceCharge field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetFinanceCharge() ARFinanceChargeType {
	if o == nil || IsNil(o.FinanceCharge) {
		var ret ARFinanceChargeType
		return ret
	}
	return *o.FinanceCharge
}

// GetFinanceChargeOk returns a tuple with the FinanceCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetFinanceChargeOk() (*ARFinanceChargeType, bool) {
	if o == nil || IsNil(o.FinanceCharge) {
		return nil, false
	}
	return o.FinanceCharge, true
}

// HasFinanceCharge returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasFinanceCharge() bool {
	if o != nil && !IsNil(o.FinanceCharge) {
		return true
	}

	return false
}

// SetFinanceCharge gets a reference to the given ARFinanceChargeType and assigns it to the FinanceCharge field.
func (o *ARAccountTypeType) SetFinanceCharge(v ARFinanceChargeType) {
	o.FinanceCharge = &v
}

// GetReminderCycle returns the ReminderCycle field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetReminderCycle() ARReminderCycleType {
	if o == nil || IsNil(o.ReminderCycle) {
		var ret ARReminderCycleType
		return ret
	}
	return *o.ReminderCycle
}

// GetReminderCycleOk returns a tuple with the ReminderCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetReminderCycleOk() (*ARReminderCycleType, bool) {
	if o == nil || IsNil(o.ReminderCycle) {
		return nil, false
	}
	return o.ReminderCycle, true
}

// HasReminderCycle returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasReminderCycle() bool {
	if o != nil && !IsNil(o.ReminderCycle) {
		return true
	}

	return false
}

// SetReminderCycle gets a reference to the given ARReminderCycleType and assigns it to the ReminderCycle field.
func (o *ARAccountTypeType) SetReminderCycle(v ARReminderCycleType) {
	o.ReminderCycle = &v
}

// GetReminderDelayDays returns the ReminderDelayDays field value if set, zero value otherwise.
func (o *ARAccountTypeType) GetReminderDelayDays() int32 {
	if o == nil || IsNil(o.ReminderDelayDays) {
		var ret int32
		return ret
	}
	return *o.ReminderDelayDays
}

// GetReminderDelayDaysOk returns a tuple with the ReminderDelayDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountTypeType) GetReminderDelayDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.ReminderDelayDays) {
		return nil, false
	}
	return o.ReminderDelayDays, true
}

// HasReminderDelayDays returns a boolean if a field has been set.
func (o *ARAccountTypeType) HasReminderDelayDays() bool {
	if o != nil && !IsNil(o.ReminderDelayDays) {
		return true
	}

	return false
}

// SetReminderDelayDays gets a reference to the given int32 and assigns it to the ReminderDelayDays field.
func (o *ARAccountTypeType) SetReminderDelayDays(v int32) {
	o.ReminderDelayDays = &v
}

func (o ARAccountTypeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARAccountTypeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.StatementMode) {
		toSerialize["statementMode"] = o.StatementMode
	}
	if !IsNil(o.StatementName) {
		toSerialize["statementName"] = o.StatementName
	}
	if !IsNil(o.StatementNameDesc) {
		toSerialize["statementNameDesc"] = o.StatementNameDesc
	}
	if !IsNil(o.PrintPreference) {
		toSerialize["printPreference"] = o.PrintPreference
	}
	if !IsNil(o.FinanceCharge) {
		toSerialize["financeCharge"] = o.FinanceCharge
	}
	if !IsNil(o.ReminderCycle) {
		toSerialize["reminderCycle"] = o.ReminderCycle
	}
	if !IsNil(o.ReminderDelayDays) {
		toSerialize["reminderDelayDays"] = o.ReminderDelayDays
	}
	return toSerialize, nil
}

type NullableARAccountTypeType struct {
	value *ARAccountTypeType
	isSet bool
}

func (v NullableARAccountTypeType) Get() *ARAccountTypeType {
	return v.value
}

func (v *NullableARAccountTypeType) Set(val *ARAccountTypeType) {
	v.value = val
	v.isSet = true
}

func (v NullableARAccountTypeType) IsSet() bool {
	return v.isSet
}

func (v *NullableARAccountTypeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARAccountTypeType(val *ARAccountTypeType) *NullableARAccountTypeType {
	return &NullableARAccountTypeType{value: val, isSet: true}
}

func (v NullableARAccountTypeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARAccountTypeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


