/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the FiscalPartnerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiscalPartnerType{}

// FiscalPartnerType Fiscal partner Type
type FiscalPartnerType struct {
	// Payment types associated with Fiscal Partner.
	FiscalFolioProfile *string `json:"fiscalFolioProfile,omitempty"`
	// Types of payload supported by the Fiscal Partner.
	FiscalPayloadTypes []FiscalPayloadType `json:"fiscalPayloadTypes,omitempty"`
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	// Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
	PartnerCode *string `json:"partnerCode,omitempty"`
	PaymentTypes []string `json:"paymentTypes,omitempty"`
	// Priority order for processing.
	Priority *int32 `json:"priority,omitempty"`
}

// NewFiscalPartnerType instantiates a new FiscalPartnerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiscalPartnerType() *FiscalPartnerType {
	this := FiscalPartnerType{}
	return &this
}

// NewFiscalPartnerTypeWithDefaults instantiates a new FiscalPartnerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiscalPartnerTypeWithDefaults() *FiscalPartnerType {
	this := FiscalPartnerType{}
	return &this
}

// GetFiscalFolioProfile returns the FiscalFolioProfile field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetFiscalFolioProfile() string {
	if o == nil || IsNil(o.FiscalFolioProfile) {
		var ret string
		return ret
	}
	return *o.FiscalFolioProfile
}

// GetFiscalFolioProfileOk returns a tuple with the FiscalFolioProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetFiscalFolioProfileOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalFolioProfile) {
		return nil, false
	}
	return o.FiscalFolioProfile, true
}

// HasFiscalFolioProfile returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasFiscalFolioProfile() bool {
	if o != nil && !IsNil(o.FiscalFolioProfile) {
		return true
	}

	return false
}

// SetFiscalFolioProfile gets a reference to the given string and assigns it to the FiscalFolioProfile field.
func (o *FiscalPartnerType) SetFiscalFolioProfile(v string) {
	o.FiscalFolioProfile = &v
}

// GetFiscalPayloadTypes returns the FiscalPayloadTypes field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetFiscalPayloadTypes() []FiscalPayloadType {
	if o == nil || IsNil(o.FiscalPayloadTypes) {
		var ret []FiscalPayloadType
		return ret
	}
	return o.FiscalPayloadTypes
}

// GetFiscalPayloadTypesOk returns a tuple with the FiscalPayloadTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetFiscalPayloadTypesOk() ([]FiscalPayloadType, bool) {
	if o == nil || IsNil(o.FiscalPayloadTypes) {
		return nil, false
	}
	return o.FiscalPayloadTypes, true
}

// HasFiscalPayloadTypes returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasFiscalPayloadTypes() bool {
	if o != nil && !IsNil(o.FiscalPayloadTypes) {
		return true
	}

	return false
}

// SetFiscalPayloadTypes gets a reference to the given []FiscalPayloadType and assigns it to the FiscalPayloadTypes field.
func (o *FiscalPartnerType) SetFiscalPayloadTypes(v []FiscalPayloadType) {
	o.FiscalPayloadTypes = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *FiscalPartnerType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPartnerCode returns the PartnerCode field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetPartnerCode() string {
	if o == nil || IsNil(o.PartnerCode) {
		var ret string
		return ret
	}
	return *o.PartnerCode
}

// GetPartnerCodeOk returns a tuple with the PartnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetPartnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerCode) {
		return nil, false
	}
	return o.PartnerCode, true
}

// HasPartnerCode returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasPartnerCode() bool {
	if o != nil && !IsNil(o.PartnerCode) {
		return true
	}

	return false
}

// SetPartnerCode gets a reference to the given string and assigns it to the PartnerCode field.
func (o *FiscalPartnerType) SetPartnerCode(v string) {
	o.PartnerCode = &v
}

// GetPaymentTypes returns the PaymentTypes field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetPaymentTypes() []string {
	if o == nil || IsNil(o.PaymentTypes) {
		var ret []string
		return ret
	}
	return o.PaymentTypes
}

// GetPaymentTypesOk returns a tuple with the PaymentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetPaymentTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.PaymentTypes) {
		return nil, false
	}
	return o.PaymentTypes, true
}

// HasPaymentTypes returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasPaymentTypes() bool {
	if o != nil && !IsNil(o.PaymentTypes) {
		return true
	}

	return false
}

// SetPaymentTypes gets a reference to the given []string and assigns it to the PaymentTypes field.
func (o *FiscalPartnerType) SetPaymentTypes(v []string) {
	o.PaymentTypes = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *FiscalPartnerType) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPartnerType) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *FiscalPartnerType) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *FiscalPartnerType) SetPriority(v int32) {
	o.Priority = &v
}

func (o FiscalPartnerType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiscalPartnerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FiscalFolioProfile) {
		toSerialize["fiscalFolioProfile"] = o.FiscalFolioProfile
	}
	if !IsNil(o.FiscalPayloadTypes) {
		toSerialize["fiscalPayloadTypes"] = o.FiscalPayloadTypes
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.PartnerCode) {
		toSerialize["partnerCode"] = o.PartnerCode
	}
	if !IsNil(o.PaymentTypes) {
		toSerialize["paymentTypes"] = o.PaymentTypes
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	return toSerialize, nil
}

type NullableFiscalPartnerType struct {
	value *FiscalPartnerType
	isSet bool
}

func (v NullableFiscalPartnerType) Get() *FiscalPartnerType {
	return v.value
}

func (v *NullableFiscalPartnerType) Set(val *FiscalPartnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableFiscalPartnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableFiscalPartnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiscalPartnerType(val *FiscalPartnerType) *NullableFiscalPartnerType {
	return &NullableFiscalPartnerType{value: val, isSet: true}
}

func (v NullableFiscalPartnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiscalPartnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


