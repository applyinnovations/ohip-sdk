/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ChangeTransactionCodeOwnershipType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeTransactionCodeOwnershipType{}

// ChangeTransactionCodeOwnershipType Change Transaction Code Ownership configuration details.
type ChangeTransactionCodeOwnershipType struct {
	// Hotel Code for which to update ownership of the Transaction codes
	HotelId *string `json:"hotelId,omitempty"`
	OwnershipStatus *TrxOwnershipType `json:"ownershipStatus,omitempty"`
	TransactionCodes []string `json:"transactionCodes,omitempty"`
}

// NewChangeTransactionCodeOwnershipType instantiates a new ChangeTransactionCodeOwnershipType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeTransactionCodeOwnershipType() *ChangeTransactionCodeOwnershipType {
	this := ChangeTransactionCodeOwnershipType{}
	return &this
}

// NewChangeTransactionCodeOwnershipTypeWithDefaults instantiates a new ChangeTransactionCodeOwnershipType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeTransactionCodeOwnershipTypeWithDefaults() *ChangeTransactionCodeOwnershipType {
	this := ChangeTransactionCodeOwnershipType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChangeTransactionCodeOwnershipType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeTransactionCodeOwnershipType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChangeTransactionCodeOwnershipType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChangeTransactionCodeOwnershipType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetOwnershipStatus returns the OwnershipStatus field value if set, zero value otherwise.
func (o *ChangeTransactionCodeOwnershipType) GetOwnershipStatus() TrxOwnershipType {
	if o == nil || IsNil(o.OwnershipStatus) {
		var ret TrxOwnershipType
		return ret
	}
	return *o.OwnershipStatus
}

// GetOwnershipStatusOk returns a tuple with the OwnershipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeTransactionCodeOwnershipType) GetOwnershipStatusOk() (*TrxOwnershipType, bool) {
	if o == nil || IsNil(o.OwnershipStatus) {
		return nil, false
	}
	return o.OwnershipStatus, true
}

// HasOwnershipStatus returns a boolean if a field has been set.
func (o *ChangeTransactionCodeOwnershipType) HasOwnershipStatus() bool {
	if o != nil && !IsNil(o.OwnershipStatus) {
		return true
	}

	return false
}

// SetOwnershipStatus gets a reference to the given TrxOwnershipType and assigns it to the OwnershipStatus field.
func (o *ChangeTransactionCodeOwnershipType) SetOwnershipStatus(v TrxOwnershipType) {
	o.OwnershipStatus = &v
}

// GetTransactionCodes returns the TransactionCodes field value if set, zero value otherwise.
func (o *ChangeTransactionCodeOwnershipType) GetTransactionCodes() []string {
	if o == nil || IsNil(o.TransactionCodes) {
		var ret []string
		return ret
	}
	return o.TransactionCodes
}

// GetTransactionCodesOk returns a tuple with the TransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeTransactionCodeOwnershipType) GetTransactionCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionCodes) {
		return nil, false
	}
	return o.TransactionCodes, true
}

// HasTransactionCodes returns a boolean if a field has been set.
func (o *ChangeTransactionCodeOwnershipType) HasTransactionCodes() bool {
	if o != nil && !IsNil(o.TransactionCodes) {
		return true
	}

	return false
}

// SetTransactionCodes gets a reference to the given []string and assigns it to the TransactionCodes field.
func (o *ChangeTransactionCodeOwnershipType) SetTransactionCodes(v []string) {
	o.TransactionCodes = v
}

func (o ChangeTransactionCodeOwnershipType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeTransactionCodeOwnershipType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.OwnershipStatus) {
		toSerialize["ownershipStatus"] = o.OwnershipStatus
	}
	if !IsNil(o.TransactionCodes) {
		toSerialize["transactionCodes"] = o.TransactionCodes
	}
	return toSerialize, nil
}

type NullableChangeTransactionCodeOwnershipType struct {
	value *ChangeTransactionCodeOwnershipType
	isSet bool
}

func (v NullableChangeTransactionCodeOwnershipType) Get() *ChangeTransactionCodeOwnershipType {
	return v.value
}

func (v *NullableChangeTransactionCodeOwnershipType) Set(val *ChangeTransactionCodeOwnershipType) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeTransactionCodeOwnershipType) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeTransactionCodeOwnershipType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeTransactionCodeOwnershipType(val *ChangeTransactionCodeOwnershipType) *NullableChangeTransactionCodeOwnershipType {
	return &NullableChangeTransactionCodeOwnershipType{value: val, isSet: true}
}

func (v NullableChangeTransactionCodeOwnershipType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeTransactionCodeOwnershipType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


