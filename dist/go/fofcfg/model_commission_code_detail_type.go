/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CommissionCodeDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionCodeDetailType{}

// CommissionCodeDetailType Commission code detail.
type CommissionCodeDetailType struct {
	CommissionCodeInfo *CommissionCodeInfoType `json:"commissionCodeInfo,omitempty"`
}

// NewCommissionCodeDetailType instantiates a new CommissionCodeDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionCodeDetailType() *CommissionCodeDetailType {
	this := CommissionCodeDetailType{}
	return &this
}

// NewCommissionCodeDetailTypeWithDefaults instantiates a new CommissionCodeDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionCodeDetailTypeWithDefaults() *CommissionCodeDetailType {
	this := CommissionCodeDetailType{}
	return &this
}

// GetCommissionCodeInfo returns the CommissionCodeInfo field value if set, zero value otherwise.
func (o *CommissionCodeDetailType) GetCommissionCodeInfo() CommissionCodeInfoType {
	if o == nil || IsNil(o.CommissionCodeInfo) {
		var ret CommissionCodeInfoType
		return ret
	}
	return *o.CommissionCodeInfo
}

// GetCommissionCodeInfoOk returns a tuple with the CommissionCodeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionCodeDetailType) GetCommissionCodeInfoOk() (*CommissionCodeInfoType, bool) {
	if o == nil || IsNil(o.CommissionCodeInfo) {
		return nil, false
	}
	return o.CommissionCodeInfo, true
}

// HasCommissionCodeInfo returns a boolean if a field has been set.
func (o *CommissionCodeDetailType) HasCommissionCodeInfo() bool {
	if o != nil && !IsNil(o.CommissionCodeInfo) {
		return true
	}

	return false
}

// SetCommissionCodeInfo gets a reference to the given CommissionCodeInfoType and assigns it to the CommissionCodeInfo field.
func (o *CommissionCodeDetailType) SetCommissionCodeInfo(v CommissionCodeInfoType) {
	o.CommissionCodeInfo = &v
}

func (o CommissionCodeDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionCodeDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommissionCodeInfo) {
		toSerialize["commissionCodeInfo"] = o.CommissionCodeInfo
	}
	return toSerialize, nil
}

type NullableCommissionCodeDetailType struct {
	value *CommissionCodeDetailType
	isSet bool
}

func (v NullableCommissionCodeDetailType) Get() *CommissionCodeDetailType {
	return v.value
}

func (v *NullableCommissionCodeDetailType) Set(val *CommissionCodeDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionCodeDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionCodeDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionCodeDetailType(val *CommissionCodeDetailType) *NullableCommissionCodeDetailType {
	return &NullableCommissionCodeDetailType{value: val, isSet: true}
}

func (v NullableCommissionCodeDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionCodeDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


