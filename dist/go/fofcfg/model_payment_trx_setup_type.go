/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the PaymentTrxSetupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentTrxSetupType{}

// PaymentTrxSetupType Payment Transaction Code setup details.
type PaymentTrxSetupType struct {
	Usage *PaymentTrxUsageType `json:"usage,omitempty"`
	Card *CardPaymentTrxSetupType `json:"card,omitempty"`
	// True indicates the Transaction Code payment will be reposted to IRS according to the rule specified by IRS.
	IRS8300Reporting *bool `json:"iRS8300Reporting,omitempty"`
	// True indicates the Transaction Code posting will have a rounding effect.
	RoundingFactor *bool `json:"roundingFactor,omitempty"`
	// Indicates if the Transaction Code payment will generate a Tax Invoice at the time of making a payment. Tax Invoices are used in Thailand.
	GenerateTaxInvoice *bool `json:"generateTaxInvoice,omitempty"`
	PaymentType *PaymentTrxCodeTypeType `json:"paymentType,omitempty"`
}

// NewPaymentTrxSetupType instantiates a new PaymentTrxSetupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentTrxSetupType() *PaymentTrxSetupType {
	this := PaymentTrxSetupType{}
	return &this
}

// NewPaymentTrxSetupTypeWithDefaults instantiates a new PaymentTrxSetupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentTrxSetupTypeWithDefaults() *PaymentTrxSetupType {
	this := PaymentTrxSetupType{}
	return &this
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetUsage() PaymentTrxUsageType {
	if o == nil || IsNil(o.Usage) {
		var ret PaymentTrxUsageType
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetUsageOk() (*PaymentTrxUsageType, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given PaymentTrxUsageType and assigns it to the Usage field.
func (o *PaymentTrxSetupType) SetUsage(v PaymentTrxUsageType) {
	o.Usage = &v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetCard() CardPaymentTrxSetupType {
	if o == nil || IsNil(o.Card) {
		var ret CardPaymentTrxSetupType
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetCardOk() (*CardPaymentTrxSetupType, bool) {
	if o == nil || IsNil(o.Card) {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasCard() bool {
	if o != nil && !IsNil(o.Card) {
		return true
	}

	return false
}

// SetCard gets a reference to the given CardPaymentTrxSetupType and assigns it to the Card field.
func (o *PaymentTrxSetupType) SetCard(v CardPaymentTrxSetupType) {
	o.Card = &v
}

// GetIRS8300Reporting returns the IRS8300Reporting field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetIRS8300Reporting() bool {
	if o == nil || IsNil(o.IRS8300Reporting) {
		var ret bool
		return ret
	}
	return *o.IRS8300Reporting
}

// GetIRS8300ReportingOk returns a tuple with the IRS8300Reporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetIRS8300ReportingOk() (*bool, bool) {
	if o == nil || IsNil(o.IRS8300Reporting) {
		return nil, false
	}
	return o.IRS8300Reporting, true
}

// HasIRS8300Reporting returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasIRS8300Reporting() bool {
	if o != nil && !IsNil(o.IRS8300Reporting) {
		return true
	}

	return false
}

// SetIRS8300Reporting gets a reference to the given bool and assigns it to the IRS8300Reporting field.
func (o *PaymentTrxSetupType) SetIRS8300Reporting(v bool) {
	o.IRS8300Reporting = &v
}

// GetRoundingFactor returns the RoundingFactor field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetRoundingFactor() bool {
	if o == nil || IsNil(o.RoundingFactor) {
		var ret bool
		return ret
	}
	return *o.RoundingFactor
}

// GetRoundingFactorOk returns a tuple with the RoundingFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetRoundingFactorOk() (*bool, bool) {
	if o == nil || IsNil(o.RoundingFactor) {
		return nil, false
	}
	return o.RoundingFactor, true
}

// HasRoundingFactor returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasRoundingFactor() bool {
	if o != nil && !IsNil(o.RoundingFactor) {
		return true
	}

	return false
}

// SetRoundingFactor gets a reference to the given bool and assigns it to the RoundingFactor field.
func (o *PaymentTrxSetupType) SetRoundingFactor(v bool) {
	o.RoundingFactor = &v
}

// GetGenerateTaxInvoice returns the GenerateTaxInvoice field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetGenerateTaxInvoice() bool {
	if o == nil || IsNil(o.GenerateTaxInvoice) {
		var ret bool
		return ret
	}
	return *o.GenerateTaxInvoice
}

// GetGenerateTaxInvoiceOk returns a tuple with the GenerateTaxInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetGenerateTaxInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.GenerateTaxInvoice) {
		return nil, false
	}
	return o.GenerateTaxInvoice, true
}

// HasGenerateTaxInvoice returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasGenerateTaxInvoice() bool {
	if o != nil && !IsNil(o.GenerateTaxInvoice) {
		return true
	}

	return false
}

// SetGenerateTaxInvoice gets a reference to the given bool and assigns it to the GenerateTaxInvoice field.
func (o *PaymentTrxSetupType) SetGenerateTaxInvoice(v bool) {
	o.GenerateTaxInvoice = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *PaymentTrxSetupType) GetPaymentType() PaymentTrxCodeTypeType {
	if o == nil || IsNil(o.PaymentType) {
		var ret PaymentTrxCodeTypeType
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTrxSetupType) GetPaymentTypeOk() (*PaymentTrxCodeTypeType, bool) {
	if o == nil || IsNil(o.PaymentType) {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *PaymentTrxSetupType) HasPaymentType() bool {
	if o != nil && !IsNil(o.PaymentType) {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given PaymentTrxCodeTypeType and assigns it to the PaymentType field.
func (o *PaymentTrxSetupType) SetPaymentType(v PaymentTrxCodeTypeType) {
	o.PaymentType = &v
}

func (o PaymentTrxSetupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentTrxSetupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.Card) {
		toSerialize["card"] = o.Card
	}
	if !IsNil(o.IRS8300Reporting) {
		toSerialize["iRS8300Reporting"] = o.IRS8300Reporting
	}
	if !IsNil(o.RoundingFactor) {
		toSerialize["roundingFactor"] = o.RoundingFactor
	}
	if !IsNil(o.GenerateTaxInvoice) {
		toSerialize["generateTaxInvoice"] = o.GenerateTaxInvoice
	}
	if !IsNil(o.PaymentType) {
		toSerialize["paymentType"] = o.PaymentType
	}
	return toSerialize, nil
}

type NullablePaymentTrxSetupType struct {
	value *PaymentTrxSetupType
	isSet bool
}

func (v NullablePaymentTrxSetupType) Get() *PaymentTrxSetupType {
	return v.value
}

func (v *NullablePaymentTrxSetupType) Set(val *PaymentTrxSetupType) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentTrxSetupType) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentTrxSetupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentTrxSetupType(val *PaymentTrxSetupType) *NullablePaymentTrxSetupType {
	return &NullablePaymentTrxSetupType{value: val, isSet: true}
}

func (v NullablePaymentTrxSetupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentTrxSetupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


