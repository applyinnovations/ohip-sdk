/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the GeneratesInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratesInfoType{}

// GeneratesInfoType Defines Generates Info.
type GeneratesInfoType struct {
	// Defines Generates Info
	Generates []GenerateInfoType `json:"generates,omitempty"`
}

// NewGeneratesInfoType instantiates a new GeneratesInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratesInfoType() *GeneratesInfoType {
	this := GeneratesInfoType{}
	return &this
}

// NewGeneratesInfoTypeWithDefaults instantiates a new GeneratesInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratesInfoTypeWithDefaults() *GeneratesInfoType {
	this := GeneratesInfoType{}
	return &this
}

// GetGenerates returns the Generates field value if set, zero value otherwise.
func (o *GeneratesInfoType) GetGenerates() []GenerateInfoType {
	if o == nil || IsNil(o.Generates) {
		var ret []GenerateInfoType
		return ret
	}
	return o.Generates
}

// GetGeneratesOk returns a tuple with the Generates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratesInfoType) GetGeneratesOk() ([]GenerateInfoType, bool) {
	if o == nil || IsNil(o.Generates) {
		return nil, false
	}
	return o.Generates, true
}

// HasGenerates returns a boolean if a field has been set.
func (o *GeneratesInfoType) HasGenerates() bool {
	if o != nil && !IsNil(o.Generates) {
		return true
	}

	return false
}

// SetGenerates gets a reference to the given []GenerateInfoType and assigns it to the Generates field.
func (o *GeneratesInfoType) SetGenerates(v []GenerateInfoType) {
	o.Generates = v
}

func (o GeneratesInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratesInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Generates) {
		toSerialize["generates"] = o.Generates
	}
	return toSerialize, nil
}

type NullableGeneratesInfoType struct {
	value *GeneratesInfoType
	isSet bool
}

func (v NullableGeneratesInfoType) Get() *GeneratesInfoType {
	return v.value
}

func (v *NullableGeneratesInfoType) Set(val *GeneratesInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratesInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratesInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratesInfoType(val *GeneratesInfoType) *NullableGeneratesInfoType {
	return &NullableGeneratesInfoType{value: val, isSet: true}
}

func (v NullableGeneratesInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratesInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


