/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the RoomTypeBasedChargeRangesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomTypeBasedChargeRangesType{}

// RoomTypeBasedChargeRangesType Provides information about Room Type Based Charge Ranges.
type RoomTypeBasedChargeRangesType struct {
	// Code of the Hotel.
	HotelId *string `json:"hotelId,omitempty"`
	// Transaction number, Unique Identifier of the record.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
	// Transaction code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Generate of the Main Transaction code.
	GenerateTrxCode *string `json:"generateTrxCode,omitempty"`
	// Room Type Group Code.
	RoomTypeGroup *string `json:"roomTypeGroup,omitempty"`
	// Start Date for Room Type Based Charge Range.
	StartDate *string `json:"startDate,omitempty"`
	// End Date for Room Type Based Charge Range.
	EndDate *string `json:"endDate,omitempty"`
	// Amount of the Room Type Group Based Range.
	Amount *float32 `json:"amount,omitempty"`
}

// NewRoomTypeBasedChargeRangesType instantiates a new RoomTypeBasedChargeRangesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomTypeBasedChargeRangesType() *RoomTypeBasedChargeRangesType {
	this := RoomTypeBasedChargeRangesType{}
	return &this
}

// NewRoomTypeBasedChargeRangesTypeWithDefaults instantiates a new RoomTypeBasedChargeRangesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomTypeBasedChargeRangesTypeWithDefaults() *RoomTypeBasedChargeRangesType {
	this := RoomTypeBasedChargeRangesType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RoomTypeBasedChargeRangesType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *RoomTypeBasedChargeRangesType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *RoomTypeBasedChargeRangesType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetGenerateTrxCode returns the GenerateTrxCode field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetGenerateTrxCode() string {
	if o == nil || IsNil(o.GenerateTrxCode) {
		var ret string
		return ret
	}
	return *o.GenerateTrxCode
}

// GetGenerateTrxCodeOk returns a tuple with the GenerateTrxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetGenerateTrxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GenerateTrxCode) {
		return nil, false
	}
	return o.GenerateTrxCode, true
}

// HasGenerateTrxCode returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasGenerateTrxCode() bool {
	if o != nil && !IsNil(o.GenerateTrxCode) {
		return true
	}

	return false
}

// SetGenerateTrxCode gets a reference to the given string and assigns it to the GenerateTrxCode field.
func (o *RoomTypeBasedChargeRangesType) SetGenerateTrxCode(v string) {
	o.GenerateTrxCode = &v
}

// GetRoomTypeGroup returns the RoomTypeGroup field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetRoomTypeGroup() string {
	if o == nil || IsNil(o.RoomTypeGroup) {
		var ret string
		return ret
	}
	return *o.RoomTypeGroup
}

// GetRoomTypeGroupOk returns a tuple with the RoomTypeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetRoomTypeGroupOk() (*string, bool) {
	if o == nil || IsNil(o.RoomTypeGroup) {
		return nil, false
	}
	return o.RoomTypeGroup, true
}

// HasRoomTypeGroup returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasRoomTypeGroup() bool {
	if o != nil && !IsNil(o.RoomTypeGroup) {
		return true
	}

	return false
}

// SetRoomTypeGroup gets a reference to the given string and assigns it to the RoomTypeGroup field.
func (o *RoomTypeBasedChargeRangesType) SetRoomTypeGroup(v string) {
	o.RoomTypeGroup = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *RoomTypeBasedChargeRangesType) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *RoomTypeBasedChargeRangesType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *RoomTypeBasedChargeRangesType) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeBasedChargeRangesType) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *RoomTypeBasedChargeRangesType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *RoomTypeBasedChargeRangesType) SetAmount(v float32) {
	o.Amount = &v
}

func (o RoomTypeBasedChargeRangesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomTypeBasedChargeRangesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.GenerateTrxCode) {
		toSerialize["generateTrxCode"] = o.GenerateTrxCode
	}
	if !IsNil(o.RoomTypeGroup) {
		toSerialize["roomTypeGroup"] = o.RoomTypeGroup
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableRoomTypeBasedChargeRangesType struct {
	value *RoomTypeBasedChargeRangesType
	isSet bool
}

func (v NullableRoomTypeBasedChargeRangesType) Get() *RoomTypeBasedChargeRangesType {
	return v.value
}

func (v *NullableRoomTypeBasedChargeRangesType) Set(val *RoomTypeBasedChargeRangesType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomTypeBasedChargeRangesType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomTypeBasedChargeRangesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomTypeBasedChargeRangesType(val *RoomTypeBasedChargeRangesType) *NullableRoomTypeBasedChargeRangesType {
	return &NullableRoomTypeBasedChargeRangesType{value: val, isSet: true}
}

func (v NullableRoomTypeBasedChargeRangesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomTypeBasedChargeRangesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


