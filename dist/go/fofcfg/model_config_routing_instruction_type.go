/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ConfigRoutingInstructionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigRoutingInstructionType{}

// ConfigRoutingInstructionType Routing limit can be one of the three: Covers, Limit, Percent. It is not mandatory to set value of either. This field is available when the Cashiering>Routing Limits application function is set to Y.
type ConfigRoutingInstructionType struct {
	// Description of the trx code arrangement code.
	Description *string `json:"description,omitempty"`
	// List of Transaction codes info.
	TransactionCodes []TrxInfoType `json:"transactionCodes,omitempty"`
	// Code is used to identify a trx code arrangement.
	Code *string `json:"code,omitempty"`
	// Identifies the hotel code for which the trx code arrangement is specified.
	HotelId *string `json:"hotelId,omitempty"`
	// Number of covers for this routing instruction. Null means no value has been specified.
	Covers *float32 `json:"covers,omitempty"`
	// Allowable credit amount for this routing instruction. Null means no value has been specified.
	Limit *float32 `json:"limit,omitempty"`
	// The routing limit percentage allowed for this routing instruction. Null means no value has been specified.
	Percent *float32 `json:"percent,omitempty"`
	DaysOfWeek *TimeSpanDaysOfWeekType `json:"daysOfWeek,omitempty"`
	// Signifies whether a separate routing instruction has to be generated for each day of the stay.
	Daily *bool `json:"daily,omitempty"`
	// Reservation to inherit Rate Code from Authorizer.
	InheritAuthRateCode *bool `json:"inheritAuthRateCode,omitempty"`
	// Determines if this is a comp routing code or a routing code.
	CompAccounting *bool `json:"compAccounting,omitempty"`
}

// NewConfigRoutingInstructionType instantiates a new ConfigRoutingInstructionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigRoutingInstructionType() *ConfigRoutingInstructionType {
	this := ConfigRoutingInstructionType{}
	return &this
}

// NewConfigRoutingInstructionTypeWithDefaults instantiates a new ConfigRoutingInstructionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigRoutingInstructionTypeWithDefaults() *ConfigRoutingInstructionType {
	this := ConfigRoutingInstructionType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigRoutingInstructionType) SetDescription(v string) {
	o.Description = &v
}

// GetTransactionCodes returns the TransactionCodes field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetTransactionCodes() []TrxInfoType {
	if o == nil || IsNil(o.TransactionCodes) {
		var ret []TrxInfoType
		return ret
	}
	return o.TransactionCodes
}

// GetTransactionCodesOk returns a tuple with the TransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetTransactionCodesOk() ([]TrxInfoType, bool) {
	if o == nil || IsNil(o.TransactionCodes) {
		return nil, false
	}
	return o.TransactionCodes, true
}

// HasTransactionCodes returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasTransactionCodes() bool {
	if o != nil && !IsNil(o.TransactionCodes) {
		return true
	}

	return false
}

// SetTransactionCodes gets a reference to the given []TrxInfoType and assigns it to the TransactionCodes field.
func (o *ConfigRoutingInstructionType) SetTransactionCodes(v []TrxInfoType) {
	o.TransactionCodes = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ConfigRoutingInstructionType) SetCode(v string) {
	o.Code = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ConfigRoutingInstructionType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetCovers returns the Covers field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetCovers() float32 {
	if o == nil || IsNil(o.Covers) {
		var ret float32
		return ret
	}
	return *o.Covers
}

// GetCoversOk returns a tuple with the Covers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetCoversOk() (*float32, bool) {
	if o == nil || IsNil(o.Covers) {
		return nil, false
	}
	return o.Covers, true
}

// HasCovers returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasCovers() bool {
	if o != nil && !IsNil(o.Covers) {
		return true
	}

	return false
}

// SetCovers gets a reference to the given float32 and assigns it to the Covers field.
func (o *ConfigRoutingInstructionType) SetCovers(v float32) {
	o.Covers = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *ConfigRoutingInstructionType) SetLimit(v float32) {
	o.Limit = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetPercent() float32 {
	if o == nil || IsNil(o.Percent) {
		var ret float32
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.Percent) {
		return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasPercent() bool {
	if o != nil && !IsNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given float32 and assigns it to the Percent field.
func (o *ConfigRoutingInstructionType) SetPercent(v float32) {
	o.Percent = &v
}

// GetDaysOfWeek returns the DaysOfWeek field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetDaysOfWeek() TimeSpanDaysOfWeekType {
	if o == nil || IsNil(o.DaysOfWeek) {
		var ret TimeSpanDaysOfWeekType
		return ret
	}
	return *o.DaysOfWeek
}

// GetDaysOfWeekOk returns a tuple with the DaysOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetDaysOfWeekOk() (*TimeSpanDaysOfWeekType, bool) {
	if o == nil || IsNil(o.DaysOfWeek) {
		return nil, false
	}
	return o.DaysOfWeek, true
}

// HasDaysOfWeek returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasDaysOfWeek() bool {
	if o != nil && !IsNil(o.DaysOfWeek) {
		return true
	}

	return false
}

// SetDaysOfWeek gets a reference to the given TimeSpanDaysOfWeekType and assigns it to the DaysOfWeek field.
func (o *ConfigRoutingInstructionType) SetDaysOfWeek(v TimeSpanDaysOfWeekType) {
	o.DaysOfWeek = &v
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetDaily() bool {
	if o == nil || IsNil(o.Daily) {
		var ret bool
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetDailyOk() (*bool, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given bool and assigns it to the Daily field.
func (o *ConfigRoutingInstructionType) SetDaily(v bool) {
	o.Daily = &v
}

// GetInheritAuthRateCode returns the InheritAuthRateCode field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetInheritAuthRateCode() bool {
	if o == nil || IsNil(o.InheritAuthRateCode) {
		var ret bool
		return ret
	}
	return *o.InheritAuthRateCode
}

// GetInheritAuthRateCodeOk returns a tuple with the InheritAuthRateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetInheritAuthRateCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritAuthRateCode) {
		return nil, false
	}
	return o.InheritAuthRateCode, true
}

// HasInheritAuthRateCode returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasInheritAuthRateCode() bool {
	if o != nil && !IsNil(o.InheritAuthRateCode) {
		return true
	}

	return false
}

// SetInheritAuthRateCode gets a reference to the given bool and assigns it to the InheritAuthRateCode field.
func (o *ConfigRoutingInstructionType) SetInheritAuthRateCode(v bool) {
	o.InheritAuthRateCode = &v
}

// GetCompAccounting returns the CompAccounting field value if set, zero value otherwise.
func (o *ConfigRoutingInstructionType) GetCompAccounting() bool {
	if o == nil || IsNil(o.CompAccounting) {
		var ret bool
		return ret
	}
	return *o.CompAccounting
}

// GetCompAccountingOk returns a tuple with the CompAccounting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoutingInstructionType) GetCompAccountingOk() (*bool, bool) {
	if o == nil || IsNil(o.CompAccounting) {
		return nil, false
	}
	return o.CompAccounting, true
}

// HasCompAccounting returns a boolean if a field has been set.
func (o *ConfigRoutingInstructionType) HasCompAccounting() bool {
	if o != nil && !IsNil(o.CompAccounting) {
		return true
	}

	return false
}

// SetCompAccounting gets a reference to the given bool and assigns it to the CompAccounting field.
func (o *ConfigRoutingInstructionType) SetCompAccounting(v bool) {
	o.CompAccounting = &v
}

func (o ConfigRoutingInstructionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigRoutingInstructionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TransactionCodes) {
		toSerialize["transactionCodes"] = o.TransactionCodes
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Covers) {
		toSerialize["covers"] = o.Covers
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}
	if !IsNil(o.DaysOfWeek) {
		toSerialize["daysOfWeek"] = o.DaysOfWeek
	}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.InheritAuthRateCode) {
		toSerialize["inheritAuthRateCode"] = o.InheritAuthRateCode
	}
	if !IsNil(o.CompAccounting) {
		toSerialize["compAccounting"] = o.CompAccounting
	}
	return toSerialize, nil
}

type NullableConfigRoutingInstructionType struct {
	value *ConfigRoutingInstructionType
	isSet bool
}

func (v NullableConfigRoutingInstructionType) Get() *ConfigRoutingInstructionType {
	return v.value
}

func (v *NullableConfigRoutingInstructionType) Set(val *ConfigRoutingInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigRoutingInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigRoutingInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigRoutingInstructionType(val *ConfigRoutingInstructionType) *NullableConfigRoutingInstructionType {
	return &NullableConfigRoutingInstructionType{value: val, isSet: true}
}

func (v NullableConfigRoutingInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigRoutingInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


