/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the HotelTransactionSubgroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelTransactionSubgroupType{}

// HotelTransactionSubgroupType Transaction Subgroup configuration Information.
type HotelTransactionSubgroupType struct {
	// Description of the Transaction Subgroup.
	Description *string `json:"description,omitempty"`
	// Display sequence for the code type.
	Sequence *int32 `json:"sequence,omitempty"`
	// Description of the Transaction Group.
	GroupDescription *string `json:"groupDescription,omitempty"`
	// Transaction Subroup Configuration Code.
	Code *string `json:"code,omitempty"`
	// Transaction Group Configuration Code.
	Group *string `json:"group,omitempty"`
	// Use this attribute to update the existing group during change operation.
	NewGroup *string `json:"newGroup,omitempty"`
	Type *CashieringTransactionTypeType `json:"type,omitempty"`
	GeneratesSetup *GeneratesSetupType `json:"generatesSetup,omitempty"`
	// Flag to determine whether generates are available or not
	GeneratesAvailable *bool `json:"generatesAvailable,omitempty"`
	// Hotel Code where the Transaction Subgroup is configured.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewHotelTransactionSubgroupType instantiates a new HotelTransactionSubgroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelTransactionSubgroupType() *HotelTransactionSubgroupType {
	this := HotelTransactionSubgroupType{}
	return &this
}

// NewHotelTransactionSubgroupTypeWithDefaults instantiates a new HotelTransactionSubgroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelTransactionSubgroupTypeWithDefaults() *HotelTransactionSubgroupType {
	this := HotelTransactionSubgroupType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HotelTransactionSubgroupType) SetDescription(v string) {
	o.Description = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *HotelTransactionSubgroupType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetGroupDescription returns the GroupDescription field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetGroupDescription() string {
	if o == nil || IsNil(o.GroupDescription) {
		var ret string
		return ret
	}
	return *o.GroupDescription
}

// GetGroupDescriptionOk returns a tuple with the GroupDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetGroupDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.GroupDescription) {
		return nil, false
	}
	return o.GroupDescription, true
}

// HasGroupDescription returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasGroupDescription() bool {
	if o != nil && !IsNil(o.GroupDescription) {
		return true
	}

	return false
}

// SetGroupDescription gets a reference to the given string and assigns it to the GroupDescription field.
func (o *HotelTransactionSubgroupType) SetGroupDescription(v string) {
	o.GroupDescription = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *HotelTransactionSubgroupType) SetCode(v string) {
	o.Code = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *HotelTransactionSubgroupType) SetGroup(v string) {
	o.Group = &v
}

// GetNewGroup returns the NewGroup field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetNewGroup() string {
	if o == nil || IsNil(o.NewGroup) {
		var ret string
		return ret
	}
	return *o.NewGroup
}

// GetNewGroupOk returns a tuple with the NewGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetNewGroupOk() (*string, bool) {
	if o == nil || IsNil(o.NewGroup) {
		return nil, false
	}
	return o.NewGroup, true
}

// HasNewGroup returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasNewGroup() bool {
	if o != nil && !IsNil(o.NewGroup) {
		return true
	}

	return false
}

// SetNewGroup gets a reference to the given string and assigns it to the NewGroup field.
func (o *HotelTransactionSubgroupType) SetNewGroup(v string) {
	o.NewGroup = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetType() CashieringTransactionTypeType {
	if o == nil || IsNil(o.Type) {
		var ret CashieringTransactionTypeType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetTypeOk() (*CashieringTransactionTypeType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given CashieringTransactionTypeType and assigns it to the Type field.
func (o *HotelTransactionSubgroupType) SetType(v CashieringTransactionTypeType) {
	o.Type = &v
}

// GetGeneratesSetup returns the GeneratesSetup field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetGeneratesSetup() GeneratesSetupType {
	if o == nil || IsNil(o.GeneratesSetup) {
		var ret GeneratesSetupType
		return ret
	}
	return *o.GeneratesSetup
}

// GetGeneratesSetupOk returns a tuple with the GeneratesSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetGeneratesSetupOk() (*GeneratesSetupType, bool) {
	if o == nil || IsNil(o.GeneratesSetup) {
		return nil, false
	}
	return o.GeneratesSetup, true
}

// HasGeneratesSetup returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasGeneratesSetup() bool {
	if o != nil && !IsNil(o.GeneratesSetup) {
		return true
	}

	return false
}

// SetGeneratesSetup gets a reference to the given GeneratesSetupType and assigns it to the GeneratesSetup field.
func (o *HotelTransactionSubgroupType) SetGeneratesSetup(v GeneratesSetupType) {
	o.GeneratesSetup = &v
}

// GetGeneratesAvailable returns the GeneratesAvailable field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetGeneratesAvailable() bool {
	if o == nil || IsNil(o.GeneratesAvailable) {
		var ret bool
		return ret
	}
	return *o.GeneratesAvailable
}

// GetGeneratesAvailableOk returns a tuple with the GeneratesAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetGeneratesAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.GeneratesAvailable) {
		return nil, false
	}
	return o.GeneratesAvailable, true
}

// HasGeneratesAvailable returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasGeneratesAvailable() bool {
	if o != nil && !IsNil(o.GeneratesAvailable) {
		return true
	}

	return false
}

// SetGeneratesAvailable gets a reference to the given bool and assigns it to the GeneratesAvailable field.
func (o *HotelTransactionSubgroupType) SetGeneratesAvailable(v bool) {
	o.GeneratesAvailable = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *HotelTransactionSubgroupType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelTransactionSubgroupType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *HotelTransactionSubgroupType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *HotelTransactionSubgroupType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o HotelTransactionSubgroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelTransactionSubgroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.GroupDescription) {
		toSerialize["groupDescription"] = o.GroupDescription
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.NewGroup) {
		toSerialize["newGroup"] = o.NewGroup
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.GeneratesSetup) {
		toSerialize["generatesSetup"] = o.GeneratesSetup
	}
	if !IsNil(o.GeneratesAvailable) {
		toSerialize["generatesAvailable"] = o.GeneratesAvailable
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableHotelTransactionSubgroupType struct {
	value *HotelTransactionSubgroupType
	isSet bool
}

func (v NullableHotelTransactionSubgroupType) Get() *HotelTransactionSubgroupType {
	return v.value
}

func (v *NullableHotelTransactionSubgroupType) Set(val *HotelTransactionSubgroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelTransactionSubgroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelTransactionSubgroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelTransactionSubgroupType(val *HotelTransactionSubgroupType) *NullableHotelTransactionSubgroupType {
	return &NullableHotelTransactionSubgroupType{value: val, isSet: true}
}

func (v NullableHotelTransactionSubgroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelTransactionSubgroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


