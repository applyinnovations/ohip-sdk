/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the InterfaceCustomDataDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceCustomDataDetailType{}

// InterfaceCustomDataDetailType This gives information of custom detail of a hotel interface.
type InterfaceCustomDataDetailType struct {
	// Specifies the type of data stored.
	CustomDataField *string `json:"customDataField,omitempty"`
	// Specifies the actual data corresponding to each value in the field.
	CustomDataValue *string `json:"customDataValue,omitempty"`
}

// NewInterfaceCustomDataDetailType instantiates a new InterfaceCustomDataDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceCustomDataDetailType() *InterfaceCustomDataDetailType {
	this := InterfaceCustomDataDetailType{}
	return &this
}

// NewInterfaceCustomDataDetailTypeWithDefaults instantiates a new InterfaceCustomDataDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceCustomDataDetailTypeWithDefaults() *InterfaceCustomDataDetailType {
	this := InterfaceCustomDataDetailType{}
	return &this
}

// GetCustomDataField returns the CustomDataField field value if set, zero value otherwise.
func (o *InterfaceCustomDataDetailType) GetCustomDataField() string {
	if o == nil || IsNil(o.CustomDataField) {
		var ret string
		return ret
	}
	return *o.CustomDataField
}

// GetCustomDataFieldOk returns a tuple with the CustomDataField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCustomDataDetailType) GetCustomDataFieldOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDataField) {
		return nil, false
	}
	return o.CustomDataField, true
}

// HasCustomDataField returns a boolean if a field has been set.
func (o *InterfaceCustomDataDetailType) HasCustomDataField() bool {
	if o != nil && !IsNil(o.CustomDataField) {
		return true
	}

	return false
}

// SetCustomDataField gets a reference to the given string and assigns it to the CustomDataField field.
func (o *InterfaceCustomDataDetailType) SetCustomDataField(v string) {
	o.CustomDataField = &v
}

// GetCustomDataValue returns the CustomDataValue field value if set, zero value otherwise.
func (o *InterfaceCustomDataDetailType) GetCustomDataValue() string {
	if o == nil || IsNil(o.CustomDataValue) {
		var ret string
		return ret
	}
	return *o.CustomDataValue
}

// GetCustomDataValueOk returns a tuple with the CustomDataValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCustomDataDetailType) GetCustomDataValueOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDataValue) {
		return nil, false
	}
	return o.CustomDataValue, true
}

// HasCustomDataValue returns a boolean if a field has been set.
func (o *InterfaceCustomDataDetailType) HasCustomDataValue() bool {
	if o != nil && !IsNil(o.CustomDataValue) {
		return true
	}

	return false
}

// SetCustomDataValue gets a reference to the given string and assigns it to the CustomDataValue field.
func (o *InterfaceCustomDataDetailType) SetCustomDataValue(v string) {
	o.CustomDataValue = &v
}

func (o InterfaceCustomDataDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceCustomDataDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomDataField) {
		toSerialize["customDataField"] = o.CustomDataField
	}
	if !IsNil(o.CustomDataValue) {
		toSerialize["customDataValue"] = o.CustomDataValue
	}
	return toSerialize, nil
}

type NullableInterfaceCustomDataDetailType struct {
	value *InterfaceCustomDataDetailType
	isSet bool
}

func (v NullableInterfaceCustomDataDetailType) Get() *InterfaceCustomDataDetailType {
	return v.value
}

func (v *NullableInterfaceCustomDataDetailType) Set(val *InterfaceCustomDataDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceCustomDataDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceCustomDataDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceCustomDataDetailType(val *InterfaceCustomDataDetailType) *NullableInterfaceCustomDataDetailType {
	return &NullableInterfaceCustomDataDetailType{value: val, isSet: true}
}

func (v NullableInterfaceCustomDataDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceCustomDataDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


