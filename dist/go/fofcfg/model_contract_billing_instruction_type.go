/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ContractBillingInstructionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractBillingInstructionType{}

// ContractBillingInstructionType Contains Common Master configuration detail.
type ContractBillingInstructionType struct {
	// Common Master unique code.
	Code *string `json:"code,omitempty"`
	// Additional Comment.
	Comments *string `json:"comments,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
	// Common Master record sequence number.
	DisplayOrder *float32 `json:"displayOrder,omitempty"`
}

// NewContractBillingInstructionType instantiates a new ContractBillingInstructionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractBillingInstructionType() *ContractBillingInstructionType {
	this := ContractBillingInstructionType{}
	return &this
}

// NewContractBillingInstructionTypeWithDefaults instantiates a new ContractBillingInstructionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractBillingInstructionTypeWithDefaults() *ContractBillingInstructionType {
	this := ContractBillingInstructionType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ContractBillingInstructionType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractBillingInstructionType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ContractBillingInstructionType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ContractBillingInstructionType) SetCode(v string) {
	o.Code = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ContractBillingInstructionType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractBillingInstructionType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ContractBillingInstructionType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ContractBillingInstructionType) SetComments(v string) {
	o.Comments = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ContractBillingInstructionType) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractBillingInstructionType) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ContractBillingInstructionType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *ContractBillingInstructionType) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ContractBillingInstructionType) GetDisplayOrder() float32 {
	if o == nil || IsNil(o.DisplayOrder) {
		var ret float32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractBillingInstructionType) GetDisplayOrderOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ContractBillingInstructionType) HasDisplayOrder() bool {
	if o != nil && !IsNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given float32 and assigns it to the DisplayOrder field.
func (o *ContractBillingInstructionType) SetDisplayOrder(v float32) {
	o.DisplayOrder = &v
}

func (o ContractBillingInstructionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractBillingInstructionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayOrder) {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	return toSerialize, nil
}

type NullableContractBillingInstructionType struct {
	value *ContractBillingInstructionType
	isSet bool
}

func (v NullableContractBillingInstructionType) Get() *ContractBillingInstructionType {
	return v.value
}

func (v *NullableContractBillingInstructionType) Set(val *ContractBillingInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableContractBillingInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableContractBillingInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractBillingInstructionType(val *ContractBillingInstructionType) *NullableContractBillingInstructionType {
	return &NullableContractBillingInstructionType{value: val, isSet: true}
}

func (v NullableContractBillingInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractBillingInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


