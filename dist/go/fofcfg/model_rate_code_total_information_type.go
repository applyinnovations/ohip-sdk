/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the RateCodeTotalInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RateCodeTotalInformationType{}

// RateCodeTotalInformationType Budget Forecast information for segment.
type RateCodeTotalInformationType struct {
	// Monthly Revenue Variance information.
	ABVarianceTotalInfo []MonthlyRevenueNightsVarianceInfoType `json:"aBVarianceTotalInfo,omitempty"`
	// Monthly Revenue Variance information.
	AFVarianceTotalInfo []MonthlyRevenueNightsVarianceInfoType `json:"aFVarianceTotalInfo,omitempty"`
	ActualTotalInfo *RevenueNightsInfoType `json:"actualTotalInfo,omitempty"`
	BudgetTotalInfo *RevenueNightsInfoType `json:"budgetTotalInfo,omitempty"`
	// Monthly Revenue Variance information.
	FBVarianceTotalInfo []MonthlyRevenueNightsVarianceInfoType `json:"fBVarianceTotalInfo,omitempty"`
	ForecastTotalInfo *RevenueNightsInfoType `json:"forecastTotalInfo,omitempty"`
}

// NewRateCodeTotalInformationType instantiates a new RateCodeTotalInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateCodeTotalInformationType() *RateCodeTotalInformationType {
	this := RateCodeTotalInformationType{}
	return &this
}

// NewRateCodeTotalInformationTypeWithDefaults instantiates a new RateCodeTotalInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateCodeTotalInformationTypeWithDefaults() *RateCodeTotalInformationType {
	this := RateCodeTotalInformationType{}
	return &this
}

// GetABVarianceTotalInfo returns the ABVarianceTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetABVarianceTotalInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.ABVarianceTotalInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.ABVarianceTotalInfo
}

// GetABVarianceTotalInfoOk returns a tuple with the ABVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetABVarianceTotalInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.ABVarianceTotalInfo) {
		return nil, false
	}
	return o.ABVarianceTotalInfo, true
}

// HasABVarianceTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasABVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.ABVarianceTotalInfo) {
		return true
	}

	return false
}

// SetABVarianceTotalInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the ABVarianceTotalInfo field.
func (o *RateCodeTotalInformationType) SetABVarianceTotalInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.ABVarianceTotalInfo = v
}

// GetAFVarianceTotalInfo returns the AFVarianceTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetAFVarianceTotalInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.AFVarianceTotalInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.AFVarianceTotalInfo
}

// GetAFVarianceTotalInfoOk returns a tuple with the AFVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetAFVarianceTotalInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.AFVarianceTotalInfo) {
		return nil, false
	}
	return o.AFVarianceTotalInfo, true
}

// HasAFVarianceTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasAFVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.AFVarianceTotalInfo) {
		return true
	}

	return false
}

// SetAFVarianceTotalInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the AFVarianceTotalInfo field.
func (o *RateCodeTotalInformationType) SetAFVarianceTotalInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.AFVarianceTotalInfo = v
}

// GetActualTotalInfo returns the ActualTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetActualTotalInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.ActualTotalInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.ActualTotalInfo
}

// GetActualTotalInfoOk returns a tuple with the ActualTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetActualTotalInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.ActualTotalInfo) {
		return nil, false
	}
	return o.ActualTotalInfo, true
}

// HasActualTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasActualTotalInfo() bool {
	if o != nil && !IsNil(o.ActualTotalInfo) {
		return true
	}

	return false
}

// SetActualTotalInfo gets a reference to the given RevenueNightsInfoType and assigns it to the ActualTotalInfo field.
func (o *RateCodeTotalInformationType) SetActualTotalInfo(v RevenueNightsInfoType) {
	o.ActualTotalInfo = &v
}

// GetBudgetTotalInfo returns the BudgetTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetBudgetTotalInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.BudgetTotalInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.BudgetTotalInfo
}

// GetBudgetTotalInfoOk returns a tuple with the BudgetTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetBudgetTotalInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.BudgetTotalInfo) {
		return nil, false
	}
	return o.BudgetTotalInfo, true
}

// HasBudgetTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasBudgetTotalInfo() bool {
	if o != nil && !IsNil(o.BudgetTotalInfo) {
		return true
	}

	return false
}

// SetBudgetTotalInfo gets a reference to the given RevenueNightsInfoType and assigns it to the BudgetTotalInfo field.
func (o *RateCodeTotalInformationType) SetBudgetTotalInfo(v RevenueNightsInfoType) {
	o.BudgetTotalInfo = &v
}

// GetFBVarianceTotalInfo returns the FBVarianceTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetFBVarianceTotalInfo() []MonthlyRevenueNightsVarianceInfoType {
	if o == nil || IsNil(o.FBVarianceTotalInfo) {
		var ret []MonthlyRevenueNightsVarianceInfoType
		return ret
	}
	return o.FBVarianceTotalInfo
}

// GetFBVarianceTotalInfoOk returns a tuple with the FBVarianceTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetFBVarianceTotalInfoOk() ([]MonthlyRevenueNightsVarianceInfoType, bool) {
	if o == nil || IsNil(o.FBVarianceTotalInfo) {
		return nil, false
	}
	return o.FBVarianceTotalInfo, true
}

// HasFBVarianceTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasFBVarianceTotalInfo() bool {
	if o != nil && !IsNil(o.FBVarianceTotalInfo) {
		return true
	}

	return false
}

// SetFBVarianceTotalInfo gets a reference to the given []MonthlyRevenueNightsVarianceInfoType and assigns it to the FBVarianceTotalInfo field.
func (o *RateCodeTotalInformationType) SetFBVarianceTotalInfo(v []MonthlyRevenueNightsVarianceInfoType) {
	o.FBVarianceTotalInfo = v
}

// GetForecastTotalInfo returns the ForecastTotalInfo field value if set, zero value otherwise.
func (o *RateCodeTotalInformationType) GetForecastTotalInfo() RevenueNightsInfoType {
	if o == nil || IsNil(o.ForecastTotalInfo) {
		var ret RevenueNightsInfoType
		return ret
	}
	return *o.ForecastTotalInfo
}

// GetForecastTotalInfoOk returns a tuple with the ForecastTotalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateCodeTotalInformationType) GetForecastTotalInfoOk() (*RevenueNightsInfoType, bool) {
	if o == nil || IsNil(o.ForecastTotalInfo) {
		return nil, false
	}
	return o.ForecastTotalInfo, true
}

// HasForecastTotalInfo returns a boolean if a field has been set.
func (o *RateCodeTotalInformationType) HasForecastTotalInfo() bool {
	if o != nil && !IsNil(o.ForecastTotalInfo) {
		return true
	}

	return false
}

// SetForecastTotalInfo gets a reference to the given RevenueNightsInfoType and assigns it to the ForecastTotalInfo field.
func (o *RateCodeTotalInformationType) SetForecastTotalInfo(v RevenueNightsInfoType) {
	o.ForecastTotalInfo = &v
}

func (o RateCodeTotalInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RateCodeTotalInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ABVarianceTotalInfo) {
		toSerialize["aBVarianceTotalInfo"] = o.ABVarianceTotalInfo
	}
	if !IsNil(o.AFVarianceTotalInfo) {
		toSerialize["aFVarianceTotalInfo"] = o.AFVarianceTotalInfo
	}
	if !IsNil(o.ActualTotalInfo) {
		toSerialize["actualTotalInfo"] = o.ActualTotalInfo
	}
	if !IsNil(o.BudgetTotalInfo) {
		toSerialize["budgetTotalInfo"] = o.BudgetTotalInfo
	}
	if !IsNil(o.FBVarianceTotalInfo) {
		toSerialize["fBVarianceTotalInfo"] = o.FBVarianceTotalInfo
	}
	if !IsNil(o.ForecastTotalInfo) {
		toSerialize["forecastTotalInfo"] = o.ForecastTotalInfo
	}
	return toSerialize, nil
}

type NullableRateCodeTotalInformationType struct {
	value *RateCodeTotalInformationType
	isSet bool
}

func (v NullableRateCodeTotalInformationType) Get() *RateCodeTotalInformationType {
	return v.value
}

func (v *NullableRateCodeTotalInformationType) Set(val *RateCodeTotalInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableRateCodeTotalInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableRateCodeTotalInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateCodeTotalInformationType(val *RateCodeTotalInformationType) *NullableRateCodeTotalInformationType {
	return &NullableRateCodeTotalInformationType{value: val, isSet: true}
}

func (v NullableRateCodeTotalInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateCodeTotalInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


