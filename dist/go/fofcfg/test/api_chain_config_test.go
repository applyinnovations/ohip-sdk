/*
OPERA Cloud Front Desk Configuration API

Testing ChainConfigApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package fofcfg

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/applyinnovations/ohip-sdk/fofcfg"
)

func Test_fofcfg_ChainConfigApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ChainConfigApiService ChangeCustomTaxTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taxTypeCode string

		resp, httpRes, err := apiClient.ChainConfigApi.ChangeCustomTaxTypes(context.Background(), taxTypeCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService DeleteAutoFolioSettlementTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var code string

		resp, httpRes, err := apiClient.ChainConfigApi.DeleteAutoFolioSettlementTypes(context.Background(), code).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService GetAutoFolioSettlementTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.GetAutoFolioSettlementTypes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService GetCustomTaxTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.GetCustomTaxTypes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService PostAutoFolioSettlementTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.PostAutoFolioSettlementTypes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService PostCustomTaxTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.PostCustomTaxTypes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService PutAutoFolioSettlementTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var code string

		resp, httpRes, err := apiClient.ChainConfigApi.PutAutoFolioSettlementTypes(context.Background(), code).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService RemoveCustomTaxTypes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taxTypeCode string

		resp, httpRes, err := apiClient.ChainConfigApi.RemoveCustomTaxTypes(context.Background(), taxTypeCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
