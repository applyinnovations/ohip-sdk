/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CollectingAgentTaxType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectingAgentTaxType{}

// CollectingAgentTaxType Type which holds Collecting Agent Taxes primary details.
type CollectingAgentTaxType struct {
	// Collection of Arrangement Codes based on which the Collecting Agent Tax will be calculated.
	CalculatedOnArrangementCodes []CodeDescriptionType `json:"calculatedOnArrangementCodes,omitempty"`
	// Collection of Transaction Codes based on which the Collecting Agent Tax will be calculated.
	CalculatedOnTransactionCodes []CodeDescriptionType `json:"calculatedOnTransactionCodes,omitempty"`
	// It represents Hotel code
	HotelId *string `json:"hotelId,omitempty"`
	NewTaxType []string `json:"newTaxType,omitempty"`
	// Percentage used to calculate the Taxes
	Percentage *int32 `json:"percentage,omitempty"`
	// Primary Key Sequence.
	TaxCode *int32 `json:"taxCode,omitempty"`
	// The Transaction Code used to post the Taxes.
	TaxTransactionCode *string `json:"taxTransactionCode,omitempty"`
	TaxType []string `json:"taxType,omitempty"`
	// Primary Key Sequence.
	TaxVoid *int32 `json:"taxVoid,omitempty"`
	TriggerAmount *CurrencyAmountType `json:"triggerAmount,omitempty"`
}

// NewCollectingAgentTaxType instantiates a new CollectingAgentTaxType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectingAgentTaxType() *CollectingAgentTaxType {
	this := CollectingAgentTaxType{}
	return &this
}

// NewCollectingAgentTaxTypeWithDefaults instantiates a new CollectingAgentTaxType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectingAgentTaxTypeWithDefaults() *CollectingAgentTaxType {
	this := CollectingAgentTaxType{}
	return &this
}

// GetCalculatedOnArrangementCodes returns the CalculatedOnArrangementCodes field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetCalculatedOnArrangementCodes() []CodeDescriptionType {
	if o == nil || IsNil(o.CalculatedOnArrangementCodes) {
		var ret []CodeDescriptionType
		return ret
	}
	return o.CalculatedOnArrangementCodes
}

// GetCalculatedOnArrangementCodesOk returns a tuple with the CalculatedOnArrangementCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetCalculatedOnArrangementCodesOk() ([]CodeDescriptionType, bool) {
	if o == nil || IsNil(o.CalculatedOnArrangementCodes) {
		return nil, false
	}
	return o.CalculatedOnArrangementCodes, true
}

// HasCalculatedOnArrangementCodes returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasCalculatedOnArrangementCodes() bool {
	if o != nil && !IsNil(o.CalculatedOnArrangementCodes) {
		return true
	}

	return false
}

// SetCalculatedOnArrangementCodes gets a reference to the given []CodeDescriptionType and assigns it to the CalculatedOnArrangementCodes field.
func (o *CollectingAgentTaxType) SetCalculatedOnArrangementCodes(v []CodeDescriptionType) {
	o.CalculatedOnArrangementCodes = v
}

// GetCalculatedOnTransactionCodes returns the CalculatedOnTransactionCodes field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetCalculatedOnTransactionCodes() []CodeDescriptionType {
	if o == nil || IsNil(o.CalculatedOnTransactionCodes) {
		var ret []CodeDescriptionType
		return ret
	}
	return o.CalculatedOnTransactionCodes
}

// GetCalculatedOnTransactionCodesOk returns a tuple with the CalculatedOnTransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetCalculatedOnTransactionCodesOk() ([]CodeDescriptionType, bool) {
	if o == nil || IsNil(o.CalculatedOnTransactionCodes) {
		return nil, false
	}
	return o.CalculatedOnTransactionCodes, true
}

// HasCalculatedOnTransactionCodes returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasCalculatedOnTransactionCodes() bool {
	if o != nil && !IsNil(o.CalculatedOnTransactionCodes) {
		return true
	}

	return false
}

// SetCalculatedOnTransactionCodes gets a reference to the given []CodeDescriptionType and assigns it to the CalculatedOnTransactionCodes field.
func (o *CollectingAgentTaxType) SetCalculatedOnTransactionCodes(v []CodeDescriptionType) {
	o.CalculatedOnTransactionCodes = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CollectingAgentTaxType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetNewTaxType returns the NewTaxType field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetNewTaxType() []string {
	if o == nil || IsNil(o.NewTaxType) {
		var ret []string
		return ret
	}
	return o.NewTaxType
}

// GetNewTaxTypeOk returns a tuple with the NewTaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetNewTaxTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.NewTaxType) {
		return nil, false
	}
	return o.NewTaxType, true
}

// HasNewTaxType returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasNewTaxType() bool {
	if o != nil && !IsNil(o.NewTaxType) {
		return true
	}

	return false
}

// SetNewTaxType gets a reference to the given []string and assigns it to the NewTaxType field.
func (o *CollectingAgentTaxType) SetNewTaxType(v []string) {
	o.NewTaxType = v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetPercentage() int32 {
	if o == nil || IsNil(o.Percentage) {
		var ret int32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given int32 and assigns it to the Percentage field.
func (o *CollectingAgentTaxType) SetPercentage(v int32) {
	o.Percentage = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetTaxCode() int32 {
	if o == nil || IsNil(o.TaxCode) {
		var ret int32
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetTaxCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given int32 and assigns it to the TaxCode field.
func (o *CollectingAgentTaxType) SetTaxCode(v int32) {
	o.TaxCode = &v
}

// GetTaxTransactionCode returns the TaxTransactionCode field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetTaxTransactionCode() string {
	if o == nil || IsNil(o.TaxTransactionCode) {
		var ret string
		return ret
	}
	return *o.TaxTransactionCode
}

// GetTaxTransactionCodeOk returns a tuple with the TaxTransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetTaxTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxTransactionCode) {
		return nil, false
	}
	return o.TaxTransactionCode, true
}

// HasTaxTransactionCode returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasTaxTransactionCode() bool {
	if o != nil && !IsNil(o.TaxTransactionCode) {
		return true
	}

	return false
}

// SetTaxTransactionCode gets a reference to the given string and assigns it to the TaxTransactionCode field.
func (o *CollectingAgentTaxType) SetTaxTransactionCode(v string) {
	o.TaxTransactionCode = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetTaxType() []string {
	if o == nil || IsNil(o.TaxType) {
		var ret []string
		return ret
	}
	return o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetTaxTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given []string and assigns it to the TaxType field.
func (o *CollectingAgentTaxType) SetTaxType(v []string) {
	o.TaxType = v
}

// GetTaxVoid returns the TaxVoid field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetTaxVoid() int32 {
	if o == nil || IsNil(o.TaxVoid) {
		var ret int32
		return ret
	}
	return *o.TaxVoid
}

// GetTaxVoidOk returns a tuple with the TaxVoid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetTaxVoidOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxVoid) {
		return nil, false
	}
	return o.TaxVoid, true
}

// HasTaxVoid returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasTaxVoid() bool {
	if o != nil && !IsNil(o.TaxVoid) {
		return true
	}

	return false
}

// SetTaxVoid gets a reference to the given int32 and assigns it to the TaxVoid field.
func (o *CollectingAgentTaxType) SetTaxVoid(v int32) {
	o.TaxVoid = &v
}

// GetTriggerAmount returns the TriggerAmount field value if set, zero value otherwise.
func (o *CollectingAgentTaxType) GetTriggerAmount() CurrencyAmountType {
	if o == nil || IsNil(o.TriggerAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TriggerAmount
}

// GetTriggerAmountOk returns a tuple with the TriggerAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxType) GetTriggerAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TriggerAmount) {
		return nil, false
	}
	return o.TriggerAmount, true
}

// HasTriggerAmount returns a boolean if a field has been set.
func (o *CollectingAgentTaxType) HasTriggerAmount() bool {
	if o != nil && !IsNil(o.TriggerAmount) {
		return true
	}

	return false
}

// SetTriggerAmount gets a reference to the given CurrencyAmountType and assigns it to the TriggerAmount field.
func (o *CollectingAgentTaxType) SetTriggerAmount(v CurrencyAmountType) {
	o.TriggerAmount = &v
}

func (o CollectingAgentTaxType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectingAgentTaxType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CalculatedOnArrangementCodes) {
		toSerialize["calculatedOnArrangementCodes"] = o.CalculatedOnArrangementCodes
	}
	if !IsNil(o.CalculatedOnTransactionCodes) {
		toSerialize["calculatedOnTransactionCodes"] = o.CalculatedOnTransactionCodes
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.NewTaxType) {
		toSerialize["newTaxType"] = o.NewTaxType
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.TaxTransactionCode) {
		toSerialize["taxTransactionCode"] = o.TaxTransactionCode
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TaxVoid) {
		toSerialize["taxVoid"] = o.TaxVoid
	}
	if !IsNil(o.TriggerAmount) {
		toSerialize["triggerAmount"] = o.TriggerAmount
	}
	return toSerialize, nil
}

type NullableCollectingAgentTaxType struct {
	value *CollectingAgentTaxType
	isSet bool
}

func (v NullableCollectingAgentTaxType) Get() *CollectingAgentTaxType {
	return v.value
}

func (v *NullableCollectingAgentTaxType) Set(val *CollectingAgentTaxType) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectingAgentTaxType) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectingAgentTaxType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectingAgentTaxType(val *CollectingAgentTaxType) *NullableCollectingAgentTaxType {
	return &NullableCollectingAgentTaxType{value: val, isSet: true}
}

func (v NullableCollectingAgentTaxType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectingAgentTaxType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


