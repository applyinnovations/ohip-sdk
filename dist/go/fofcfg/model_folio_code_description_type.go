/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the FolioCodeDescriptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioCodeDescriptionType{}

// FolioCodeDescriptionType This contains a folio code and description information.
type FolioCodeDescriptionType struct {
	// Code.
	Code *string `json:"code,omitempty"`
	// description.
	Description *string `json:"description,omitempty"`
}

// NewFolioCodeDescriptionType instantiates a new FolioCodeDescriptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioCodeDescriptionType() *FolioCodeDescriptionType {
	this := FolioCodeDescriptionType{}
	return &this
}

// NewFolioCodeDescriptionTypeWithDefaults instantiates a new FolioCodeDescriptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioCodeDescriptionTypeWithDefaults() *FolioCodeDescriptionType {
	this := FolioCodeDescriptionType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FolioCodeDescriptionType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioCodeDescriptionType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FolioCodeDescriptionType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FolioCodeDescriptionType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FolioCodeDescriptionType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioCodeDescriptionType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FolioCodeDescriptionType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FolioCodeDescriptionType) SetDescription(v string) {
	o.Description = &v
}

func (o FolioCodeDescriptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioCodeDescriptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableFolioCodeDescriptionType struct {
	value *FolioCodeDescriptionType
	isSet bool
}

func (v NullableFolioCodeDescriptionType) Get() *FolioCodeDescriptionType {
	return v.value
}

func (v *NullableFolioCodeDescriptionType) Set(val *FolioCodeDescriptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioCodeDescriptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioCodeDescriptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioCodeDescriptionType(val *FolioCodeDescriptionType) *NullableFolioCodeDescriptionType {
	return &NullableFolioCodeDescriptionType{value: val, isSet: true}
}

func (v NullableFolioCodeDescriptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioCodeDescriptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


