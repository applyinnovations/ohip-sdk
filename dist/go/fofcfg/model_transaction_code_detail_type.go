/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the TransactionCodeDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionCodeDetailType{}

// TransactionCodeDetailType struct for TransactionCodeDetailType
type TransactionCodeDetailType struct {
	// Code of transaction code setup.
	Code *string `json:"code,omitempty"`
	// Description of transaction code setup.
	Description *string `json:"description,omitempty"`
	// Dialed digits of transaction code setup.
	DialedDigits *string `json:"dialedDigits,omitempty"`
	// Itemizer short info of transaction code setup.
	ItemizersShortInfo []ItemizerShortInfoType `json:"itemizersShortInfo,omitempty"`
	// Line type of transaction code setup.
	LineType *string `json:"lineType,omitempty"`
	// Payment number of transaction code setup.
	PaymentNum *string `json:"paymentNum,omitempty"`
	// Post route of transaction code setup.
	PostRoute *string `json:"postRoute,omitempty"`
	// Revenue center of transaction code setup.
	RevenueCenter *string `json:"revenueCenter,omitempty"`
	// Row number of transaction code setup.
	RowNum *int32 `json:"rowNum,omitempty"`
	// Serving period of transaction code setup.
	ServingPeriod *string `json:"servingPeriod,omitempty"`
	// Terminal of transaction code setup.
	Terminal *string `json:"terminal,omitempty"`
	// Tip code of transaction code setup.
	TipCode *string `json:"tipCode,omitempty"`
	// User id of transaction code setup.
	UserId *string `json:"userId,omitempty"`
}

// NewTransactionCodeDetailType instantiates a new TransactionCodeDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionCodeDetailType() *TransactionCodeDetailType {
	this := TransactionCodeDetailType{}
	return &this
}

// NewTransactionCodeDetailTypeWithDefaults instantiates a new TransactionCodeDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionCodeDetailTypeWithDefaults() *TransactionCodeDetailType {
	this := TransactionCodeDetailType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TransactionCodeDetailType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TransactionCodeDetailType) SetDescription(v string) {
	o.Description = &v
}

// GetDialedDigits returns the DialedDigits field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetDialedDigits() string {
	if o == nil || IsNil(o.DialedDigits) {
		var ret string
		return ret
	}
	return *o.DialedDigits
}

// GetDialedDigitsOk returns a tuple with the DialedDigits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetDialedDigitsOk() (*string, bool) {
	if o == nil || IsNil(o.DialedDigits) {
		return nil, false
	}
	return o.DialedDigits, true
}

// HasDialedDigits returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasDialedDigits() bool {
	if o != nil && !IsNil(o.DialedDigits) {
		return true
	}

	return false
}

// SetDialedDigits gets a reference to the given string and assigns it to the DialedDigits field.
func (o *TransactionCodeDetailType) SetDialedDigits(v string) {
	o.DialedDigits = &v
}

// GetItemizersShortInfo returns the ItemizersShortInfo field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetItemizersShortInfo() []ItemizerShortInfoType {
	if o == nil || IsNil(o.ItemizersShortInfo) {
		var ret []ItemizerShortInfoType
		return ret
	}
	return o.ItemizersShortInfo
}

// GetItemizersShortInfoOk returns a tuple with the ItemizersShortInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetItemizersShortInfoOk() ([]ItemizerShortInfoType, bool) {
	if o == nil || IsNil(o.ItemizersShortInfo) {
		return nil, false
	}
	return o.ItemizersShortInfo, true
}

// HasItemizersShortInfo returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasItemizersShortInfo() bool {
	if o != nil && !IsNil(o.ItemizersShortInfo) {
		return true
	}

	return false
}

// SetItemizersShortInfo gets a reference to the given []ItemizerShortInfoType and assigns it to the ItemizersShortInfo field.
func (o *TransactionCodeDetailType) SetItemizersShortInfo(v []ItemizerShortInfoType) {
	o.ItemizersShortInfo = v
}

// GetLineType returns the LineType field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetLineType() string {
	if o == nil || IsNil(o.LineType) {
		var ret string
		return ret
	}
	return *o.LineType
}

// GetLineTypeOk returns a tuple with the LineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetLineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LineType) {
		return nil, false
	}
	return o.LineType, true
}

// HasLineType returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasLineType() bool {
	if o != nil && !IsNil(o.LineType) {
		return true
	}

	return false
}

// SetLineType gets a reference to the given string and assigns it to the LineType field.
func (o *TransactionCodeDetailType) SetLineType(v string) {
	o.LineType = &v
}

// GetPaymentNum returns the PaymentNum field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetPaymentNum() string {
	if o == nil || IsNil(o.PaymentNum) {
		var ret string
		return ret
	}
	return *o.PaymentNum
}

// GetPaymentNumOk returns a tuple with the PaymentNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetPaymentNumOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentNum) {
		return nil, false
	}
	return o.PaymentNum, true
}

// HasPaymentNum returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasPaymentNum() bool {
	if o != nil && !IsNil(o.PaymentNum) {
		return true
	}

	return false
}

// SetPaymentNum gets a reference to the given string and assigns it to the PaymentNum field.
func (o *TransactionCodeDetailType) SetPaymentNum(v string) {
	o.PaymentNum = &v
}

// GetPostRoute returns the PostRoute field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetPostRoute() string {
	if o == nil || IsNil(o.PostRoute) {
		var ret string
		return ret
	}
	return *o.PostRoute
}

// GetPostRouteOk returns a tuple with the PostRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetPostRouteOk() (*string, bool) {
	if o == nil || IsNil(o.PostRoute) {
		return nil, false
	}
	return o.PostRoute, true
}

// HasPostRoute returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasPostRoute() bool {
	if o != nil && !IsNil(o.PostRoute) {
		return true
	}

	return false
}

// SetPostRoute gets a reference to the given string and assigns it to the PostRoute field.
func (o *TransactionCodeDetailType) SetPostRoute(v string) {
	o.PostRoute = &v
}

// GetRevenueCenter returns the RevenueCenter field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetRevenueCenter() string {
	if o == nil || IsNil(o.RevenueCenter) {
		var ret string
		return ret
	}
	return *o.RevenueCenter
}

// GetRevenueCenterOk returns a tuple with the RevenueCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetRevenueCenterOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueCenter) {
		return nil, false
	}
	return o.RevenueCenter, true
}

// HasRevenueCenter returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasRevenueCenter() bool {
	if o != nil && !IsNil(o.RevenueCenter) {
		return true
	}

	return false
}

// SetRevenueCenter gets a reference to the given string and assigns it to the RevenueCenter field.
func (o *TransactionCodeDetailType) SetRevenueCenter(v string) {
	o.RevenueCenter = &v
}

// GetRowNum returns the RowNum field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetRowNum() int32 {
	if o == nil || IsNil(o.RowNum) {
		var ret int32
		return ret
	}
	return *o.RowNum
}

// GetRowNumOk returns a tuple with the RowNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetRowNumOk() (*int32, bool) {
	if o == nil || IsNil(o.RowNum) {
		return nil, false
	}
	return o.RowNum, true
}

// HasRowNum returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasRowNum() bool {
	if o != nil && !IsNil(o.RowNum) {
		return true
	}

	return false
}

// SetRowNum gets a reference to the given int32 and assigns it to the RowNum field.
func (o *TransactionCodeDetailType) SetRowNum(v int32) {
	o.RowNum = &v
}

// GetServingPeriod returns the ServingPeriod field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetServingPeriod() string {
	if o == nil || IsNil(o.ServingPeriod) {
		var ret string
		return ret
	}
	return *o.ServingPeriod
}

// GetServingPeriodOk returns a tuple with the ServingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetServingPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ServingPeriod) {
		return nil, false
	}
	return o.ServingPeriod, true
}

// HasServingPeriod returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasServingPeriod() bool {
	if o != nil && !IsNil(o.ServingPeriod) {
		return true
	}

	return false
}

// SetServingPeriod gets a reference to the given string and assigns it to the ServingPeriod field.
func (o *TransactionCodeDetailType) SetServingPeriod(v string) {
	o.ServingPeriod = &v
}

// GetTerminal returns the Terminal field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetTerminal() string {
	if o == nil || IsNil(o.Terminal) {
		var ret string
		return ret
	}
	return *o.Terminal
}

// GetTerminalOk returns a tuple with the Terminal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetTerminalOk() (*string, bool) {
	if o == nil || IsNil(o.Terminal) {
		return nil, false
	}
	return o.Terminal, true
}

// HasTerminal returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasTerminal() bool {
	if o != nil && !IsNil(o.Terminal) {
		return true
	}

	return false
}

// SetTerminal gets a reference to the given string and assigns it to the Terminal field.
func (o *TransactionCodeDetailType) SetTerminal(v string) {
	o.Terminal = &v
}

// GetTipCode returns the TipCode field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetTipCode() string {
	if o == nil || IsNil(o.TipCode) {
		var ret string
		return ret
	}
	return *o.TipCode
}

// GetTipCodeOk returns a tuple with the TipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetTipCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TipCode) {
		return nil, false
	}
	return o.TipCode, true
}

// HasTipCode returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasTipCode() bool {
	if o != nil && !IsNil(o.TipCode) {
		return true
	}

	return false
}

// SetTipCode gets a reference to the given string and assigns it to the TipCode field.
func (o *TransactionCodeDetailType) SetTipCode(v string) {
	o.TipCode = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *TransactionCodeDetailType) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCodeDetailType) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *TransactionCodeDetailType) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *TransactionCodeDetailType) SetUserId(v string) {
	o.UserId = &v
}

func (o TransactionCodeDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionCodeDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DialedDigits) {
		toSerialize["dialedDigits"] = o.DialedDigits
	}
	if !IsNil(o.ItemizersShortInfo) {
		toSerialize["itemizersShortInfo"] = o.ItemizersShortInfo
	}
	if !IsNil(o.LineType) {
		toSerialize["lineType"] = o.LineType
	}
	if !IsNil(o.PaymentNum) {
		toSerialize["paymentNum"] = o.PaymentNum
	}
	if !IsNil(o.PostRoute) {
		toSerialize["postRoute"] = o.PostRoute
	}
	if !IsNil(o.RevenueCenter) {
		toSerialize["revenueCenter"] = o.RevenueCenter
	}
	if !IsNil(o.RowNum) {
		toSerialize["rowNum"] = o.RowNum
	}
	if !IsNil(o.ServingPeriod) {
		toSerialize["servingPeriod"] = o.ServingPeriod
	}
	if !IsNil(o.Terminal) {
		toSerialize["terminal"] = o.Terminal
	}
	if !IsNil(o.TipCode) {
		toSerialize["tipCode"] = o.TipCode
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableTransactionCodeDetailType struct {
	value *TransactionCodeDetailType
	isSet bool
}

func (v NullableTransactionCodeDetailType) Get() *TransactionCodeDetailType {
	return v.value
}

func (v *NullableTransactionCodeDetailType) Set(val *TransactionCodeDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionCodeDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionCodeDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionCodeDetailType(val *TransactionCodeDetailType) *NullableTransactionCodeDetailType {
	return &NullableTransactionCodeDetailType{value: val, isSet: true}
}

func (v NullableTransactionCodeDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionCodeDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


