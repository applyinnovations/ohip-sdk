/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ARInvoiceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARInvoiceType{}

// ARInvoiceType Details of an AR Invoice.
type ARInvoiceType struct {
	AddresseeInfo *ProfileInfoType `json:"addresseeInfo,omitempty"`
	Adjusted *bool `json:"adjusted,omitempty"`
	// The Aging age of the invoice
	Age *int32 `json:"age,omitempty"`
	// Flag to check Partail Transfer Allowed.
	AllowPartialTransferYn *bool `json:"allowPartialTransferYn,omitempty"`
	Amount *CurrencyAmountType `json:"amount,omitempty"`
	Balance *CurrencyAmountType `json:"balance,omitempty"`
	// Flag to indicate if postings or adjustments can be made to the invoice.
	CanBeModified *bool `json:"canBeModified,omitempty"`
	CashierInfo *CashierInfoType `json:"cashierInfo,omitempty"`
	// Close date of the invoice.
	CloseDate *string `json:"closeDate,omitempty"`
	Compressed *bool `json:"compressed,omitempty"`
	CompressedDate *string `json:"compressedDate,omitempty"`
	// Unique Custom Numbers associated with this record.
	CustomNumbers []string `json:"customNumbers,omitempty"`
	// The Fiscal Bill number of this posting
	FiscalBillNo *string `json:"fiscalBillNo,omitempty"`
	FiscalResponseType *FiscalResponseType `json:"fiscalResponseType,omitempty"`
	// Date of Folio Generation.
	FolioDate *string `json:"folioDate,omitempty"`
	// Folio Number.
	FolioNo *float32 `json:"folioNo,omitempty"`
	// The folio number with prefix value.
	FolioNoWithPrefix *string `json:"folioNoWithPrefix,omitempty"`
	FolioStatus *FolioStatusType `json:"folioStatus,omitempty"`
	// This stores the description for the type of tax calculation especially with tax exemption, etc.
	FolioTexts []FolioTextsTypeInner `json:"folioTexts,omitempty"`
	// The name of the Folio Type used for the Folio Number sequence.
	FolioTypeName *string `json:"folioTypeName,omitempty"`
	// Name of the Guest who consumed these transactions.
	GuestName *string `json:"guestName,omitempty"`
	GuestProfileId *UniqueIDType `json:"guestProfileId,omitempty"`
	// Property where the invoice exists.
	HotelId *string `json:"hotelId,omitempty"`
	// Internal window ID which is unique to the reservation. This ID can only be used for reference.
	InternalFolioWindowID *string `json:"internalFolioWindowID,omitempty"`
	// Invoice No after the folio is generated. Same invoice number may be referred in multiple folios
	InvoiceNo *float32 `json:"invoiceNo,omitempty"`
	InvoiceType *ARInvoiceCategory `json:"invoiceType,omitempty"`
	Market *MarketCodeInfoType `json:"market,omitempty"`
	OriginalAmount *CurrencyAmountType `json:"originalAmount,omitempty"`
	ParentInvoiceNo *float32 `json:"parentInvoiceNo,omitempty"`
	PaymentCard *ResPaymentCardType `json:"paymentCard,omitempty"`
	Payments *CurrencyAmountType `json:"payments,omitempty"`
	// Posting date of the invoice.
	PostingDate *string `json:"postingDate,omitempty"`
	// Flag to check Invoice Statement is Printed.
	Printed *bool `json:"printed,omitempty"`
	// Invoice Statement Printed Date.
	PrintedDate *string `json:"printedDate,omitempty"`
	// User-defined posting reference.
	Reference *string `json:"reference,omitempty"`
	// User-defined posting remark.
	Remark *string `json:"remark,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	ReservationInfo *ReservationInfoType `json:"reservationInfo,omitempty"`
	// Revenue date ID of the invoice.
	RevenueDate *string `json:"revenueDate,omitempty"`
	RoomClass *RoomClassCodeInfoType `json:"roomClass,omitempty"`
	Source *SourceCodeInfoType `json:"source,omitempty"`
	// Statementno of the invoice.
	StatementNo *int32 `json:"statementNo,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	StoredDebitFolioId *UniqueIDType `json:"storedDebitFolioId,omitempty"`
	// Name of the Stored Debit Folio.
	StoredDebitFolioName *string `json:"storedDebitFolioName,omitempty"`
	StoredFolioId *UniqueIDType `json:"storedFolioId,omitempty"`
	// Name of the Stored Folio.
	StoredFolioName *string `json:"storedFolioName,omitempty"`
	// Transaction code of the invoice.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Transaction Date of the invoice.
	TransactionDate *string `json:"transactionDate,omitempty"`
	TransactionInfo *TrxInfoType `json:"transactionInfo,omitempty"`
	// Unique Transaction Identifier of the Invoice.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
	// Transfer date of the invoice.
	TransferDate *string `json:"transferDate,omitempty"`
	TransferredIn *bool `json:"transferredIn,omitempty"`
	TransferredOut *bool `json:"transferredOut,omitempty"`
}

// NewARInvoiceType instantiates a new ARInvoiceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARInvoiceType() *ARInvoiceType {
	this := ARInvoiceType{}
	return &this
}

// NewARInvoiceTypeWithDefaults instantiates a new ARInvoiceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARInvoiceTypeWithDefaults() *ARInvoiceType {
	this := ARInvoiceType{}
	return &this
}

// GetAddresseeInfo returns the AddresseeInfo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetAddresseeInfo() ProfileInfoType {
	if o == nil || IsNil(o.AddresseeInfo) {
		var ret ProfileInfoType
		return ret
	}
	return *o.AddresseeInfo
}

// GetAddresseeInfoOk returns a tuple with the AddresseeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetAddresseeInfoOk() (*ProfileInfoType, bool) {
	if o == nil || IsNil(o.AddresseeInfo) {
		return nil, false
	}
	return o.AddresseeInfo, true
}

// HasAddresseeInfo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasAddresseeInfo() bool {
	if o != nil && !IsNil(o.AddresseeInfo) {
		return true
	}

	return false
}

// SetAddresseeInfo gets a reference to the given ProfileInfoType and assigns it to the AddresseeInfo field.
func (o *ARInvoiceType) SetAddresseeInfo(v ProfileInfoType) {
	o.AddresseeInfo = &v
}

// GetAdjusted returns the Adjusted field value if set, zero value otherwise.
func (o *ARInvoiceType) GetAdjusted() bool {
	if o == nil || IsNil(o.Adjusted) {
		var ret bool
		return ret
	}
	return *o.Adjusted
}

// GetAdjustedOk returns a tuple with the Adjusted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetAdjustedOk() (*bool, bool) {
	if o == nil || IsNil(o.Adjusted) {
		return nil, false
	}
	return o.Adjusted, true
}

// HasAdjusted returns a boolean if a field has been set.
func (o *ARInvoiceType) HasAdjusted() bool {
	if o != nil && !IsNil(o.Adjusted) {
		return true
	}

	return false
}

// SetAdjusted gets a reference to the given bool and assigns it to the Adjusted field.
func (o *ARInvoiceType) SetAdjusted(v bool) {
	o.Adjusted = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *ARInvoiceType) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *ARInvoiceType) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *ARInvoiceType) SetAge(v int32) {
	o.Age = &v
}

// GetAllowPartialTransferYn returns the AllowPartialTransferYn field value if set, zero value otherwise.
func (o *ARInvoiceType) GetAllowPartialTransferYn() bool {
	if o == nil || IsNil(o.AllowPartialTransferYn) {
		var ret bool
		return ret
	}
	return *o.AllowPartialTransferYn
}

// GetAllowPartialTransferYnOk returns a tuple with the AllowPartialTransferYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetAllowPartialTransferYnOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPartialTransferYn) {
		return nil, false
	}
	return o.AllowPartialTransferYn, true
}

// HasAllowPartialTransferYn returns a boolean if a field has been set.
func (o *ARInvoiceType) HasAllowPartialTransferYn() bool {
	if o != nil && !IsNil(o.AllowPartialTransferYn) {
		return true
	}

	return false
}

// SetAllowPartialTransferYn gets a reference to the given bool and assigns it to the AllowPartialTransferYn field.
func (o *ARInvoiceType) SetAllowPartialTransferYn(v bool) {
	o.AllowPartialTransferYn = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ARInvoiceType) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ARInvoiceType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *ARInvoiceType) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *ARInvoiceType) GetBalance() CurrencyAmountType {
	if o == nil || IsNil(o.Balance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *ARInvoiceType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given CurrencyAmountType and assigns it to the Balance field.
func (o *ARInvoiceType) SetBalance(v CurrencyAmountType) {
	o.Balance = &v
}

// GetCanBeModified returns the CanBeModified field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCanBeModified() bool {
	if o == nil || IsNil(o.CanBeModified) {
		var ret bool
		return ret
	}
	return *o.CanBeModified
}

// GetCanBeModifiedOk returns a tuple with the CanBeModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCanBeModifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.CanBeModified) {
		return nil, false
	}
	return o.CanBeModified, true
}

// HasCanBeModified returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCanBeModified() bool {
	if o != nil && !IsNil(o.CanBeModified) {
		return true
	}

	return false
}

// SetCanBeModified gets a reference to the given bool and assigns it to the CanBeModified field.
func (o *ARInvoiceType) SetCanBeModified(v bool) {
	o.CanBeModified = &v
}

// GetCashierInfo returns the CashierInfo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCashierInfo() CashierInfoType {
	if o == nil || IsNil(o.CashierInfo) {
		var ret CashierInfoType
		return ret
	}
	return *o.CashierInfo
}

// GetCashierInfoOk returns a tuple with the CashierInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCashierInfoOk() (*CashierInfoType, bool) {
	if o == nil || IsNil(o.CashierInfo) {
		return nil, false
	}
	return o.CashierInfo, true
}

// HasCashierInfo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCashierInfo() bool {
	if o != nil && !IsNil(o.CashierInfo) {
		return true
	}

	return false
}

// SetCashierInfo gets a reference to the given CashierInfoType and assigns it to the CashierInfo field.
func (o *ARInvoiceType) SetCashierInfo(v CashierInfoType) {
	o.CashierInfo = &v
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCloseDate() string {
	if o == nil || IsNil(o.CloseDate) {
		var ret string
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CloseDate) {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCloseDate() bool {
	if o != nil && !IsNil(o.CloseDate) {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given string and assigns it to the CloseDate field.
func (o *ARInvoiceType) SetCloseDate(v string) {
	o.CloseDate = &v
}

// GetCompressed returns the Compressed field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCompressed() bool {
	if o == nil || IsNil(o.Compressed) {
		var ret bool
		return ret
	}
	return *o.Compressed
}

// GetCompressedOk returns a tuple with the Compressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCompressedOk() (*bool, bool) {
	if o == nil || IsNil(o.Compressed) {
		return nil, false
	}
	return o.Compressed, true
}

// HasCompressed returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCompressed() bool {
	if o != nil && !IsNil(o.Compressed) {
		return true
	}

	return false
}

// SetCompressed gets a reference to the given bool and assigns it to the Compressed field.
func (o *ARInvoiceType) SetCompressed(v bool) {
	o.Compressed = &v
}

// GetCompressedDate returns the CompressedDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCompressedDate() string {
	if o == nil || IsNil(o.CompressedDate) {
		var ret string
		return ret
	}
	return *o.CompressedDate
}

// GetCompressedDateOk returns a tuple with the CompressedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCompressedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CompressedDate) {
		return nil, false
	}
	return o.CompressedDate, true
}

// HasCompressedDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCompressedDate() bool {
	if o != nil && !IsNil(o.CompressedDate) {
		return true
	}

	return false
}

// SetCompressedDate gets a reference to the given string and assigns it to the CompressedDate field.
func (o *ARInvoiceType) SetCompressedDate(v string) {
	o.CompressedDate = &v
}

// GetCustomNumbers returns the CustomNumbers field value if set, zero value otherwise.
func (o *ARInvoiceType) GetCustomNumbers() []string {
	if o == nil || IsNil(o.CustomNumbers) {
		var ret []string
		return ret
	}
	return o.CustomNumbers
}

// GetCustomNumbersOk returns a tuple with the CustomNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetCustomNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomNumbers) {
		return nil, false
	}
	return o.CustomNumbers, true
}

// HasCustomNumbers returns a boolean if a field has been set.
func (o *ARInvoiceType) HasCustomNumbers() bool {
	if o != nil && !IsNil(o.CustomNumbers) {
		return true
	}

	return false
}

// SetCustomNumbers gets a reference to the given []string and assigns it to the CustomNumbers field.
func (o *ARInvoiceType) SetCustomNumbers(v []string) {
	o.CustomNumbers = v
}

// GetFiscalBillNo returns the FiscalBillNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFiscalBillNo() string {
	if o == nil || IsNil(o.FiscalBillNo) {
		var ret string
		return ret
	}
	return *o.FiscalBillNo
}

// GetFiscalBillNoOk returns a tuple with the FiscalBillNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFiscalBillNoOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalBillNo) {
		return nil, false
	}
	return o.FiscalBillNo, true
}

// HasFiscalBillNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFiscalBillNo() bool {
	if o != nil && !IsNil(o.FiscalBillNo) {
		return true
	}

	return false
}

// SetFiscalBillNo gets a reference to the given string and assigns it to the FiscalBillNo field.
func (o *ARInvoiceType) SetFiscalBillNo(v string) {
	o.FiscalBillNo = &v
}

// GetFiscalResponseType returns the FiscalResponseType field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFiscalResponseType() FiscalResponseType {
	if o == nil || IsNil(o.FiscalResponseType) {
		var ret FiscalResponseType
		return ret
	}
	return *o.FiscalResponseType
}

// GetFiscalResponseTypeOk returns a tuple with the FiscalResponseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFiscalResponseTypeOk() (*FiscalResponseType, bool) {
	if o == nil || IsNil(o.FiscalResponseType) {
		return nil, false
	}
	return o.FiscalResponseType, true
}

// HasFiscalResponseType returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFiscalResponseType() bool {
	if o != nil && !IsNil(o.FiscalResponseType) {
		return true
	}

	return false
}

// SetFiscalResponseType gets a reference to the given FiscalResponseType and assigns it to the FiscalResponseType field.
func (o *ARInvoiceType) SetFiscalResponseType(v FiscalResponseType) {
	o.FiscalResponseType = &v
}

// GetFolioDate returns the FolioDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioDate() string {
	if o == nil || IsNil(o.FolioDate) {
		var ret string
		return ret
	}
	return *o.FolioDate
}

// GetFolioDateOk returns a tuple with the FolioDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioDateOk() (*string, bool) {
	if o == nil || IsNil(o.FolioDate) {
		return nil, false
	}
	return o.FolioDate, true
}

// HasFolioDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioDate() bool {
	if o != nil && !IsNil(o.FolioDate) {
		return true
	}

	return false
}

// SetFolioDate gets a reference to the given string and assigns it to the FolioDate field.
func (o *ARInvoiceType) SetFolioDate(v string) {
	o.FolioDate = &v
}

// GetFolioNo returns the FolioNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioNo() float32 {
	if o == nil || IsNil(o.FolioNo) {
		var ret float32
		return ret
	}
	return *o.FolioNo
}

// GetFolioNoOk returns a tuple with the FolioNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioNoOk() (*float32, bool) {
	if o == nil || IsNil(o.FolioNo) {
		return nil, false
	}
	return o.FolioNo, true
}

// HasFolioNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioNo() bool {
	if o != nil && !IsNil(o.FolioNo) {
		return true
	}

	return false
}

// SetFolioNo gets a reference to the given float32 and assigns it to the FolioNo field.
func (o *ARInvoiceType) SetFolioNo(v float32) {
	o.FolioNo = &v
}

// GetFolioNoWithPrefix returns the FolioNoWithPrefix field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioNoWithPrefix() string {
	if o == nil || IsNil(o.FolioNoWithPrefix) {
		var ret string
		return ret
	}
	return *o.FolioNoWithPrefix
}

// GetFolioNoWithPrefixOk returns a tuple with the FolioNoWithPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioNoWithPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.FolioNoWithPrefix) {
		return nil, false
	}
	return o.FolioNoWithPrefix, true
}

// HasFolioNoWithPrefix returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioNoWithPrefix() bool {
	if o != nil && !IsNil(o.FolioNoWithPrefix) {
		return true
	}

	return false
}

// SetFolioNoWithPrefix gets a reference to the given string and assigns it to the FolioNoWithPrefix field.
func (o *ARInvoiceType) SetFolioNoWithPrefix(v string) {
	o.FolioNoWithPrefix = &v
}

// GetFolioStatus returns the FolioStatus field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioStatus() FolioStatusType {
	if o == nil || IsNil(o.FolioStatus) {
		var ret FolioStatusType
		return ret
	}
	return *o.FolioStatus
}

// GetFolioStatusOk returns a tuple with the FolioStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioStatusOk() (*FolioStatusType, bool) {
	if o == nil || IsNil(o.FolioStatus) {
		return nil, false
	}
	return o.FolioStatus, true
}

// HasFolioStatus returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioStatus() bool {
	if o != nil && !IsNil(o.FolioStatus) {
		return true
	}

	return false
}

// SetFolioStatus gets a reference to the given FolioStatusType and assigns it to the FolioStatus field.
func (o *ARInvoiceType) SetFolioStatus(v FolioStatusType) {
	o.FolioStatus = &v
}

// GetFolioTexts returns the FolioTexts field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioTexts() []FolioTextsTypeInner {
	if o == nil || IsNil(o.FolioTexts) {
		var ret []FolioTextsTypeInner
		return ret
	}
	return o.FolioTexts
}

// GetFolioTextsOk returns a tuple with the FolioTexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioTextsOk() ([]FolioTextsTypeInner, bool) {
	if o == nil || IsNil(o.FolioTexts) {
		return nil, false
	}
	return o.FolioTexts, true
}

// HasFolioTexts returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioTexts() bool {
	if o != nil && !IsNil(o.FolioTexts) {
		return true
	}

	return false
}

// SetFolioTexts gets a reference to the given []FolioTextsTypeInner and assigns it to the FolioTexts field.
func (o *ARInvoiceType) SetFolioTexts(v []FolioTextsTypeInner) {
	o.FolioTexts = v
}

// GetFolioTypeName returns the FolioTypeName field value if set, zero value otherwise.
func (o *ARInvoiceType) GetFolioTypeName() string {
	if o == nil || IsNil(o.FolioTypeName) {
		var ret string
		return ret
	}
	return *o.FolioTypeName
}

// GetFolioTypeNameOk returns a tuple with the FolioTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetFolioTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.FolioTypeName) {
		return nil, false
	}
	return o.FolioTypeName, true
}

// HasFolioTypeName returns a boolean if a field has been set.
func (o *ARInvoiceType) HasFolioTypeName() bool {
	if o != nil && !IsNil(o.FolioTypeName) {
		return true
	}

	return false
}

// SetFolioTypeName gets a reference to the given string and assigns it to the FolioTypeName field.
func (o *ARInvoiceType) SetFolioTypeName(v string) {
	o.FolioTypeName = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *ARInvoiceType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *ARInvoiceType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *ARInvoiceType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetGuestProfileId returns the GuestProfileId field value if set, zero value otherwise.
func (o *ARInvoiceType) GetGuestProfileId() UniqueIDType {
	if o == nil || IsNil(o.GuestProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.GuestProfileId
}

// GetGuestProfileIdOk returns a tuple with the GuestProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetGuestProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.GuestProfileId) {
		return nil, false
	}
	return o.GuestProfileId, true
}

// HasGuestProfileId returns a boolean if a field has been set.
func (o *ARInvoiceType) HasGuestProfileId() bool {
	if o != nil && !IsNil(o.GuestProfileId) {
		return true
	}

	return false
}

// SetGuestProfileId gets a reference to the given UniqueIDType and assigns it to the GuestProfileId field.
func (o *ARInvoiceType) SetGuestProfileId(v UniqueIDType) {
	o.GuestProfileId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARInvoiceType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARInvoiceType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARInvoiceType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInternalFolioWindowID returns the InternalFolioWindowID field value if set, zero value otherwise.
func (o *ARInvoiceType) GetInternalFolioWindowID() string {
	if o == nil || IsNil(o.InternalFolioWindowID) {
		var ret string
		return ret
	}
	return *o.InternalFolioWindowID
}

// GetInternalFolioWindowIDOk returns a tuple with the InternalFolioWindowID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetInternalFolioWindowIDOk() (*string, bool) {
	if o == nil || IsNil(o.InternalFolioWindowID) {
		return nil, false
	}
	return o.InternalFolioWindowID, true
}

// HasInternalFolioWindowID returns a boolean if a field has been set.
func (o *ARInvoiceType) HasInternalFolioWindowID() bool {
	if o != nil && !IsNil(o.InternalFolioWindowID) {
		return true
	}

	return false
}

// SetInternalFolioWindowID gets a reference to the given string and assigns it to the InternalFolioWindowID field.
func (o *ARInvoiceType) SetInternalFolioWindowID(v string) {
	o.InternalFolioWindowID = &v
}

// GetInvoiceNo returns the InvoiceNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetInvoiceNo() float32 {
	if o == nil || IsNil(o.InvoiceNo) {
		var ret float32
		return ret
	}
	return *o.InvoiceNo
}

// GetInvoiceNoOk returns a tuple with the InvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetInvoiceNoOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoiceNo) {
		return nil, false
	}
	return o.InvoiceNo, true
}

// HasInvoiceNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasInvoiceNo() bool {
	if o != nil && !IsNil(o.InvoiceNo) {
		return true
	}

	return false
}

// SetInvoiceNo gets a reference to the given float32 and assigns it to the InvoiceNo field.
func (o *ARInvoiceType) SetInvoiceNo(v float32) {
	o.InvoiceNo = &v
}

// GetInvoiceType returns the InvoiceType field value if set, zero value otherwise.
func (o *ARInvoiceType) GetInvoiceType() ARInvoiceCategory {
	if o == nil || IsNil(o.InvoiceType) {
		var ret ARInvoiceCategory
		return ret
	}
	return *o.InvoiceType
}

// GetInvoiceTypeOk returns a tuple with the InvoiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetInvoiceTypeOk() (*ARInvoiceCategory, bool) {
	if o == nil || IsNil(o.InvoiceType) {
		return nil, false
	}
	return o.InvoiceType, true
}

// HasInvoiceType returns a boolean if a field has been set.
func (o *ARInvoiceType) HasInvoiceType() bool {
	if o != nil && !IsNil(o.InvoiceType) {
		return true
	}

	return false
}

// SetInvoiceType gets a reference to the given ARInvoiceCategory and assigns it to the InvoiceType field.
func (o *ARInvoiceType) SetInvoiceType(v ARInvoiceCategory) {
	o.InvoiceType = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *ARInvoiceType) GetMarket() MarketCodeInfoType {
	if o == nil || IsNil(o.Market) {
		var ret MarketCodeInfoType
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetMarketOk() (*MarketCodeInfoType, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *ARInvoiceType) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given MarketCodeInfoType and assigns it to the Market field.
func (o *ARInvoiceType) SetMarket(v MarketCodeInfoType) {
	o.Market = &v
}

// GetOriginalAmount returns the OriginalAmount field value if set, zero value otherwise.
func (o *ARInvoiceType) GetOriginalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.OriginalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetOriginalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.OriginalAmount) {
		return nil, false
	}
	return o.OriginalAmount, true
}

// HasOriginalAmount returns a boolean if a field has been set.
func (o *ARInvoiceType) HasOriginalAmount() bool {
	if o != nil && !IsNil(o.OriginalAmount) {
		return true
	}

	return false
}

// SetOriginalAmount gets a reference to the given CurrencyAmountType and assigns it to the OriginalAmount field.
func (o *ARInvoiceType) SetOriginalAmount(v CurrencyAmountType) {
	o.OriginalAmount = &v
}

// GetParentInvoiceNo returns the ParentInvoiceNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetParentInvoiceNo() float32 {
	if o == nil || IsNil(o.ParentInvoiceNo) {
		var ret float32
		return ret
	}
	return *o.ParentInvoiceNo
}

// GetParentInvoiceNoOk returns a tuple with the ParentInvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetParentInvoiceNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ParentInvoiceNo) {
		return nil, false
	}
	return o.ParentInvoiceNo, true
}

// HasParentInvoiceNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasParentInvoiceNo() bool {
	if o != nil && !IsNil(o.ParentInvoiceNo) {
		return true
	}

	return false
}

// SetParentInvoiceNo gets a reference to the given float32 and assigns it to the ParentInvoiceNo field.
func (o *ARInvoiceType) SetParentInvoiceNo(v float32) {
	o.ParentInvoiceNo = &v
}

// GetPaymentCard returns the PaymentCard field value if set, zero value otherwise.
func (o *ARInvoiceType) GetPaymentCard() ResPaymentCardType {
	if o == nil || IsNil(o.PaymentCard) {
		var ret ResPaymentCardType
		return ret
	}
	return *o.PaymentCard
}

// GetPaymentCardOk returns a tuple with the PaymentCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetPaymentCardOk() (*ResPaymentCardType, bool) {
	if o == nil || IsNil(o.PaymentCard) {
		return nil, false
	}
	return o.PaymentCard, true
}

// HasPaymentCard returns a boolean if a field has been set.
func (o *ARInvoiceType) HasPaymentCard() bool {
	if o != nil && !IsNil(o.PaymentCard) {
		return true
	}

	return false
}

// SetPaymentCard gets a reference to the given ResPaymentCardType and assigns it to the PaymentCard field.
func (o *ARInvoiceType) SetPaymentCard(v ResPaymentCardType) {
	o.PaymentCard = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *ARInvoiceType) GetPayments() CurrencyAmountType {
	if o == nil || IsNil(o.Payments) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetPaymentsOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *ARInvoiceType) HasPayments() bool {
	if o != nil && !IsNil(o.Payments) {
		return true
	}

	return false
}

// SetPayments gets a reference to the given CurrencyAmountType and assigns it to the Payments field.
func (o *ARInvoiceType) SetPayments(v CurrencyAmountType) {
	o.Payments = &v
}

// GetPostingDate returns the PostingDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetPostingDate() string {
	if o == nil || IsNil(o.PostingDate) {
		var ret string
		return ret
	}
	return *o.PostingDate
}

// GetPostingDateOk returns a tuple with the PostingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetPostingDateOk() (*string, bool) {
	if o == nil || IsNil(o.PostingDate) {
		return nil, false
	}
	return o.PostingDate, true
}

// HasPostingDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasPostingDate() bool {
	if o != nil && !IsNil(o.PostingDate) {
		return true
	}

	return false
}

// SetPostingDate gets a reference to the given string and assigns it to the PostingDate field.
func (o *ARInvoiceType) SetPostingDate(v string) {
	o.PostingDate = &v
}

// GetPrinted returns the Printed field value if set, zero value otherwise.
func (o *ARInvoiceType) GetPrinted() bool {
	if o == nil || IsNil(o.Printed) {
		var ret bool
		return ret
	}
	return *o.Printed
}

// GetPrintedOk returns a tuple with the Printed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetPrintedOk() (*bool, bool) {
	if o == nil || IsNil(o.Printed) {
		return nil, false
	}
	return o.Printed, true
}

// HasPrinted returns a boolean if a field has been set.
func (o *ARInvoiceType) HasPrinted() bool {
	if o != nil && !IsNil(o.Printed) {
		return true
	}

	return false
}

// SetPrinted gets a reference to the given bool and assigns it to the Printed field.
func (o *ARInvoiceType) SetPrinted(v bool) {
	o.Printed = &v
}

// GetPrintedDate returns the PrintedDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetPrintedDate() string {
	if o == nil || IsNil(o.PrintedDate) {
		var ret string
		return ret
	}
	return *o.PrintedDate
}

// GetPrintedDateOk returns a tuple with the PrintedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetPrintedDateOk() (*string, bool) {
	if o == nil || IsNil(o.PrintedDate) {
		return nil, false
	}
	return o.PrintedDate, true
}

// HasPrintedDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasPrintedDate() bool {
	if o != nil && !IsNil(o.PrintedDate) {
		return true
	}

	return false
}

// SetPrintedDate gets a reference to the given string and assigns it to the PrintedDate field.
func (o *ARInvoiceType) SetPrintedDate(v string) {
	o.PrintedDate = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ARInvoiceType) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ARInvoiceType) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *ARInvoiceType) SetReference(v string) {
	o.Reference = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *ARInvoiceType) GetRemark() string {
	if o == nil || IsNil(o.Remark) {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.Remark) {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *ARInvoiceType) HasRemark() bool {
	if o != nil && !IsNil(o.Remark) {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *ARInvoiceType) SetRemark(v string) {
	o.Remark = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ARInvoiceType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ARInvoiceType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ARInvoiceType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetReservationInfo returns the ReservationInfo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetReservationInfo() ReservationInfoType {
	if o == nil || IsNil(o.ReservationInfo) {
		var ret ReservationInfoType
		return ret
	}
	return *o.ReservationInfo
}

// GetReservationInfoOk returns a tuple with the ReservationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetReservationInfoOk() (*ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfo) {
		return nil, false
	}
	return o.ReservationInfo, true
}

// HasReservationInfo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasReservationInfo() bool {
	if o != nil && !IsNil(o.ReservationInfo) {
		return true
	}

	return false
}

// SetReservationInfo gets a reference to the given ReservationInfoType and assigns it to the ReservationInfo field.
func (o *ARInvoiceType) SetReservationInfo(v ReservationInfoType) {
	o.ReservationInfo = &v
}

// GetRevenueDate returns the RevenueDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetRevenueDate() string {
	if o == nil || IsNil(o.RevenueDate) {
		var ret string
		return ret
	}
	return *o.RevenueDate
}

// GetRevenueDateOk returns a tuple with the RevenueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetRevenueDateOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueDate) {
		return nil, false
	}
	return o.RevenueDate, true
}

// HasRevenueDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasRevenueDate() bool {
	if o != nil && !IsNil(o.RevenueDate) {
		return true
	}

	return false
}

// SetRevenueDate gets a reference to the given string and assigns it to the RevenueDate field.
func (o *ARInvoiceType) SetRevenueDate(v string) {
	o.RevenueDate = &v
}

// GetRoomClass returns the RoomClass field value if set, zero value otherwise.
func (o *ARInvoiceType) GetRoomClass() RoomClassCodeInfoType {
	if o == nil || IsNil(o.RoomClass) {
		var ret RoomClassCodeInfoType
		return ret
	}
	return *o.RoomClass
}

// GetRoomClassOk returns a tuple with the RoomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetRoomClassOk() (*RoomClassCodeInfoType, bool) {
	if o == nil || IsNil(o.RoomClass) {
		return nil, false
	}
	return o.RoomClass, true
}

// HasRoomClass returns a boolean if a field has been set.
func (o *ARInvoiceType) HasRoomClass() bool {
	if o != nil && !IsNil(o.RoomClass) {
		return true
	}

	return false
}

// SetRoomClass gets a reference to the given RoomClassCodeInfoType and assigns it to the RoomClass field.
func (o *ARInvoiceType) SetRoomClass(v RoomClassCodeInfoType) {
	o.RoomClass = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ARInvoiceType) GetSource() SourceCodeInfoType {
	if o == nil || IsNil(o.Source) {
		var ret SourceCodeInfoType
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetSourceOk() (*SourceCodeInfoType, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ARInvoiceType) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given SourceCodeInfoType and assigns it to the Source field.
func (o *ARInvoiceType) SetSource(v SourceCodeInfoType) {
	o.Source = &v
}

// GetStatementNo returns the StatementNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStatementNo() int32 {
	if o == nil || IsNil(o.StatementNo) {
		var ret int32
		return ret
	}
	return *o.StatementNo
}

// GetStatementNoOk returns a tuple with the StatementNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStatementNoOk() (*int32, bool) {
	if o == nil || IsNil(o.StatementNo) {
		return nil, false
	}
	return o.StatementNo, true
}

// HasStatementNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStatementNo() bool {
	if o != nil && !IsNil(o.StatementNo) {
		return true
	}

	return false
}

// SetStatementNo gets a reference to the given int32 and assigns it to the StatementNo field.
func (o *ARInvoiceType) SetStatementNo(v int32) {
	o.StatementNo = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ARInvoiceType) SetStatus(v string) {
	o.Status = &v
}

// GetStoredDebitFolioId returns the StoredDebitFolioId field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStoredDebitFolioId() UniqueIDType {
	if o == nil || IsNil(o.StoredDebitFolioId) {
		var ret UniqueIDType
		return ret
	}
	return *o.StoredDebitFolioId
}

// GetStoredDebitFolioIdOk returns a tuple with the StoredDebitFolioId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStoredDebitFolioIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.StoredDebitFolioId) {
		return nil, false
	}
	return o.StoredDebitFolioId, true
}

// HasStoredDebitFolioId returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStoredDebitFolioId() bool {
	if o != nil && !IsNil(o.StoredDebitFolioId) {
		return true
	}

	return false
}

// SetStoredDebitFolioId gets a reference to the given UniqueIDType and assigns it to the StoredDebitFolioId field.
func (o *ARInvoiceType) SetStoredDebitFolioId(v UniqueIDType) {
	o.StoredDebitFolioId = &v
}

// GetStoredDebitFolioName returns the StoredDebitFolioName field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStoredDebitFolioName() string {
	if o == nil || IsNil(o.StoredDebitFolioName) {
		var ret string
		return ret
	}
	return *o.StoredDebitFolioName
}

// GetStoredDebitFolioNameOk returns a tuple with the StoredDebitFolioName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStoredDebitFolioNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoredDebitFolioName) {
		return nil, false
	}
	return o.StoredDebitFolioName, true
}

// HasStoredDebitFolioName returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStoredDebitFolioName() bool {
	if o != nil && !IsNil(o.StoredDebitFolioName) {
		return true
	}

	return false
}

// SetStoredDebitFolioName gets a reference to the given string and assigns it to the StoredDebitFolioName field.
func (o *ARInvoiceType) SetStoredDebitFolioName(v string) {
	o.StoredDebitFolioName = &v
}

// GetStoredFolioId returns the StoredFolioId field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStoredFolioId() UniqueIDType {
	if o == nil || IsNil(o.StoredFolioId) {
		var ret UniqueIDType
		return ret
	}
	return *o.StoredFolioId
}

// GetStoredFolioIdOk returns a tuple with the StoredFolioId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStoredFolioIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.StoredFolioId) {
		return nil, false
	}
	return o.StoredFolioId, true
}

// HasStoredFolioId returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStoredFolioId() bool {
	if o != nil && !IsNil(o.StoredFolioId) {
		return true
	}

	return false
}

// SetStoredFolioId gets a reference to the given UniqueIDType and assigns it to the StoredFolioId field.
func (o *ARInvoiceType) SetStoredFolioId(v UniqueIDType) {
	o.StoredFolioId = &v
}

// GetStoredFolioName returns the StoredFolioName field value if set, zero value otherwise.
func (o *ARInvoiceType) GetStoredFolioName() string {
	if o == nil || IsNil(o.StoredFolioName) {
		var ret string
		return ret
	}
	return *o.StoredFolioName
}

// GetStoredFolioNameOk returns a tuple with the StoredFolioName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetStoredFolioNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoredFolioName) {
		return nil, false
	}
	return o.StoredFolioName, true
}

// HasStoredFolioName returns a boolean if a field has been set.
func (o *ARInvoiceType) HasStoredFolioName() bool {
	if o != nil && !IsNil(o.StoredFolioName) {
		return true
	}

	return false
}

// SetStoredFolioName gets a reference to the given string and assigns it to the StoredFolioName field.
func (o *ARInvoiceType) SetStoredFolioName(v string) {
	o.StoredFolioName = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *ARInvoiceType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *ARInvoiceType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionInfo returns the TransactionInfo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransactionInfo() TrxInfoType {
	if o == nil || IsNil(o.TransactionInfo) {
		var ret TrxInfoType
		return ret
	}
	return *o.TransactionInfo
}

// GetTransactionInfoOk returns a tuple with the TransactionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransactionInfoOk() (*TrxInfoType, bool) {
	if o == nil || IsNil(o.TransactionInfo) {
		return nil, false
	}
	return o.TransactionInfo, true
}

// HasTransactionInfo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransactionInfo() bool {
	if o != nil && !IsNil(o.TransactionInfo) {
		return true
	}

	return false
}

// SetTransactionInfo gets a reference to the given TrxInfoType and assigns it to the TransactionInfo field.
func (o *ARInvoiceType) SetTransactionInfo(v TrxInfoType) {
	o.TransactionInfo = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *ARInvoiceType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

// GetTransferDate returns the TransferDate field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransferDate() string {
	if o == nil || IsNil(o.TransferDate) {
		var ret string
		return ret
	}
	return *o.TransferDate
}

// GetTransferDateOk returns a tuple with the TransferDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransferDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransferDate) {
		return nil, false
	}
	return o.TransferDate, true
}

// HasTransferDate returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransferDate() bool {
	if o != nil && !IsNil(o.TransferDate) {
		return true
	}

	return false
}

// SetTransferDate gets a reference to the given string and assigns it to the TransferDate field.
func (o *ARInvoiceType) SetTransferDate(v string) {
	o.TransferDate = &v
}

// GetTransferredIn returns the TransferredIn field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransferredIn() bool {
	if o == nil || IsNil(o.TransferredIn) {
		var ret bool
		return ret
	}
	return *o.TransferredIn
}

// GetTransferredInOk returns a tuple with the TransferredIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransferredInOk() (*bool, bool) {
	if o == nil || IsNil(o.TransferredIn) {
		return nil, false
	}
	return o.TransferredIn, true
}

// HasTransferredIn returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransferredIn() bool {
	if o != nil && !IsNil(o.TransferredIn) {
		return true
	}

	return false
}

// SetTransferredIn gets a reference to the given bool and assigns it to the TransferredIn field.
func (o *ARInvoiceType) SetTransferredIn(v bool) {
	o.TransferredIn = &v
}

// GetTransferredOut returns the TransferredOut field value if set, zero value otherwise.
func (o *ARInvoiceType) GetTransferredOut() bool {
	if o == nil || IsNil(o.TransferredOut) {
		var ret bool
		return ret
	}
	return *o.TransferredOut
}

// GetTransferredOutOk returns a tuple with the TransferredOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceType) GetTransferredOutOk() (*bool, bool) {
	if o == nil || IsNil(o.TransferredOut) {
		return nil, false
	}
	return o.TransferredOut, true
}

// HasTransferredOut returns a boolean if a field has been set.
func (o *ARInvoiceType) HasTransferredOut() bool {
	if o != nil && !IsNil(o.TransferredOut) {
		return true
	}

	return false
}

// SetTransferredOut gets a reference to the given bool and assigns it to the TransferredOut field.
func (o *ARInvoiceType) SetTransferredOut(v bool) {
	o.TransferredOut = &v
}

func (o ARInvoiceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARInvoiceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddresseeInfo) {
		toSerialize["addresseeInfo"] = o.AddresseeInfo
	}
	if !IsNil(o.Adjusted) {
		toSerialize["adjusted"] = o.Adjusted
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.AllowPartialTransferYn) {
		toSerialize["allowPartialTransferYn"] = o.AllowPartialTransferYn
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CanBeModified) {
		toSerialize["canBeModified"] = o.CanBeModified
	}
	if !IsNil(o.CashierInfo) {
		toSerialize["cashierInfo"] = o.CashierInfo
	}
	if !IsNil(o.CloseDate) {
		toSerialize["closeDate"] = o.CloseDate
	}
	if !IsNil(o.Compressed) {
		toSerialize["compressed"] = o.Compressed
	}
	if !IsNil(o.CompressedDate) {
		toSerialize["compressedDate"] = o.CompressedDate
	}
	if !IsNil(o.CustomNumbers) {
		toSerialize["customNumbers"] = o.CustomNumbers
	}
	if !IsNil(o.FiscalBillNo) {
		toSerialize["fiscalBillNo"] = o.FiscalBillNo
	}
	if !IsNil(o.FiscalResponseType) {
		toSerialize["fiscalResponseType"] = o.FiscalResponseType
	}
	if !IsNil(o.FolioDate) {
		toSerialize["folioDate"] = o.FolioDate
	}
	if !IsNil(o.FolioNo) {
		toSerialize["folioNo"] = o.FolioNo
	}
	if !IsNil(o.FolioNoWithPrefix) {
		toSerialize["folioNoWithPrefix"] = o.FolioNoWithPrefix
	}
	if !IsNil(o.FolioStatus) {
		toSerialize["folioStatus"] = o.FolioStatus
	}
	if !IsNil(o.FolioTexts) {
		toSerialize["folioTexts"] = o.FolioTexts
	}
	if !IsNil(o.FolioTypeName) {
		toSerialize["folioTypeName"] = o.FolioTypeName
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.GuestProfileId) {
		toSerialize["guestProfileId"] = o.GuestProfileId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.InternalFolioWindowID) {
		toSerialize["internalFolioWindowID"] = o.InternalFolioWindowID
	}
	if !IsNil(o.InvoiceNo) {
		toSerialize["invoiceNo"] = o.InvoiceNo
	}
	if !IsNil(o.InvoiceType) {
		toSerialize["invoiceType"] = o.InvoiceType
	}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.OriginalAmount) {
		toSerialize["originalAmount"] = o.OriginalAmount
	}
	if !IsNil(o.ParentInvoiceNo) {
		toSerialize["parentInvoiceNo"] = o.ParentInvoiceNo
	}
	if !IsNil(o.PaymentCard) {
		toSerialize["paymentCard"] = o.PaymentCard
	}
	if !IsNil(o.Payments) {
		toSerialize["payments"] = o.Payments
	}
	if !IsNil(o.PostingDate) {
		toSerialize["postingDate"] = o.PostingDate
	}
	if !IsNil(o.Printed) {
		toSerialize["printed"] = o.Printed
	}
	if !IsNil(o.PrintedDate) {
		toSerialize["printedDate"] = o.PrintedDate
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Remark) {
		toSerialize["remark"] = o.Remark
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationInfo) {
		toSerialize["reservationInfo"] = o.ReservationInfo
	}
	if !IsNil(o.RevenueDate) {
		toSerialize["revenueDate"] = o.RevenueDate
	}
	if !IsNil(o.RoomClass) {
		toSerialize["roomClass"] = o.RoomClass
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.StatementNo) {
		toSerialize["statementNo"] = o.StatementNo
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StoredDebitFolioId) {
		toSerialize["storedDebitFolioId"] = o.StoredDebitFolioId
	}
	if !IsNil(o.StoredDebitFolioName) {
		toSerialize["storedDebitFolioName"] = o.StoredDebitFolioName
	}
	if !IsNil(o.StoredFolioId) {
		toSerialize["storedFolioId"] = o.StoredFolioId
	}
	if !IsNil(o.StoredFolioName) {
		toSerialize["storedFolioName"] = o.StoredFolioName
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.TransactionInfo) {
		toSerialize["transactionInfo"] = o.TransactionInfo
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.TransferDate) {
		toSerialize["transferDate"] = o.TransferDate
	}
	if !IsNil(o.TransferredIn) {
		toSerialize["transferredIn"] = o.TransferredIn
	}
	if !IsNil(o.TransferredOut) {
		toSerialize["transferredOut"] = o.TransferredOut
	}
	return toSerialize, nil
}

type NullableARInvoiceType struct {
	value *ARInvoiceType
	isSet bool
}

func (v NullableARInvoiceType) Get() *ARInvoiceType {
	return v.value
}

func (v *NullableARInvoiceType) Set(val *ARInvoiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableARInvoiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableARInvoiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARInvoiceType(val *ARInvoiceType) *NullableARInvoiceType {
	return &NullableARInvoiceType{value: val, isSet: true}
}

func (v NullableARInvoiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARInvoiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


