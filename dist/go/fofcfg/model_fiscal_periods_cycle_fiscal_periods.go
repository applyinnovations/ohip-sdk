/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the FiscalPeriodsCycleFiscalPeriods type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiscalPeriodsCycleFiscalPeriods{}

// FiscalPeriodsCycleFiscalPeriods Details of the Cycle Fiscal Periods
type FiscalPeriodsCycleFiscalPeriods struct {
	// List of Cycle Fiscal Periods.
	CycleFiscalPeriods []CycleFiscalPeriodType `json:"cycleFiscalPeriods,omitempty"`
	// If true all overlapping periods will be deleted. No further confirmation required.
	ForceDelete *bool `json:"forceDelete,omitempty"`
}

// NewFiscalPeriodsCycleFiscalPeriods instantiates a new FiscalPeriodsCycleFiscalPeriods object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiscalPeriodsCycleFiscalPeriods() *FiscalPeriodsCycleFiscalPeriods {
	this := FiscalPeriodsCycleFiscalPeriods{}
	return &this
}

// NewFiscalPeriodsCycleFiscalPeriodsWithDefaults instantiates a new FiscalPeriodsCycleFiscalPeriods object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiscalPeriodsCycleFiscalPeriodsWithDefaults() *FiscalPeriodsCycleFiscalPeriods {
	this := FiscalPeriodsCycleFiscalPeriods{}
	return &this
}

// GetCycleFiscalPeriods returns the CycleFiscalPeriods field value if set, zero value otherwise.
func (o *FiscalPeriodsCycleFiscalPeriods) GetCycleFiscalPeriods() []CycleFiscalPeriodType {
	if o == nil || IsNil(o.CycleFiscalPeriods) {
		var ret []CycleFiscalPeriodType
		return ret
	}
	return o.CycleFiscalPeriods
}

// GetCycleFiscalPeriodsOk returns a tuple with the CycleFiscalPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPeriodsCycleFiscalPeriods) GetCycleFiscalPeriodsOk() ([]CycleFiscalPeriodType, bool) {
	if o == nil || IsNil(o.CycleFiscalPeriods) {
		return nil, false
	}
	return o.CycleFiscalPeriods, true
}

// HasCycleFiscalPeriods returns a boolean if a field has been set.
func (o *FiscalPeriodsCycleFiscalPeriods) HasCycleFiscalPeriods() bool {
	if o != nil && !IsNil(o.CycleFiscalPeriods) {
		return true
	}

	return false
}

// SetCycleFiscalPeriods gets a reference to the given []CycleFiscalPeriodType and assigns it to the CycleFiscalPeriods field.
func (o *FiscalPeriodsCycleFiscalPeriods) SetCycleFiscalPeriods(v []CycleFiscalPeriodType) {
	o.CycleFiscalPeriods = v
}

// GetForceDelete returns the ForceDelete field value if set, zero value otherwise.
func (o *FiscalPeriodsCycleFiscalPeriods) GetForceDelete() bool {
	if o == nil || IsNil(o.ForceDelete) {
		var ret bool
		return ret
	}
	return *o.ForceDelete
}

// GetForceDeleteOk returns a tuple with the ForceDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalPeriodsCycleFiscalPeriods) GetForceDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceDelete) {
		return nil, false
	}
	return o.ForceDelete, true
}

// HasForceDelete returns a boolean if a field has been set.
func (o *FiscalPeriodsCycleFiscalPeriods) HasForceDelete() bool {
	if o != nil && !IsNil(o.ForceDelete) {
		return true
	}

	return false
}

// SetForceDelete gets a reference to the given bool and assigns it to the ForceDelete field.
func (o *FiscalPeriodsCycleFiscalPeriods) SetForceDelete(v bool) {
	o.ForceDelete = &v
}

func (o FiscalPeriodsCycleFiscalPeriods) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiscalPeriodsCycleFiscalPeriods) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CycleFiscalPeriods) {
		toSerialize["cycleFiscalPeriods"] = o.CycleFiscalPeriods
	}
	if !IsNil(o.ForceDelete) {
		toSerialize["forceDelete"] = o.ForceDelete
	}
	return toSerialize, nil
}

type NullableFiscalPeriodsCycleFiscalPeriods struct {
	value *FiscalPeriodsCycleFiscalPeriods
	isSet bool
}

func (v NullableFiscalPeriodsCycleFiscalPeriods) Get() *FiscalPeriodsCycleFiscalPeriods {
	return v.value
}

func (v *NullableFiscalPeriodsCycleFiscalPeriods) Set(val *FiscalPeriodsCycleFiscalPeriods) {
	v.value = val
	v.isSet = true
}

func (v NullableFiscalPeriodsCycleFiscalPeriods) IsSet() bool {
	return v.isSet
}

func (v *NullableFiscalPeriodsCycleFiscalPeriods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiscalPeriodsCycleFiscalPeriods(val *FiscalPeriodsCycleFiscalPeriods) *NullableFiscalPeriodsCycleFiscalPeriods {
	return &NullableFiscalPeriodsCycleFiscalPeriods{value: val, isSet: true}
}

func (v NullableFiscalPeriodsCycleFiscalPeriods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiscalPeriodsCycleFiscalPeriods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


