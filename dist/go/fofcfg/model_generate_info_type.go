/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the GenerateInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateInfoType{}

// GenerateInfoType Defines Generates Info
type GenerateInfoType struct {
	GenerateId *UniqueIDType `json:"generateId,omitempty"`
}

// NewGenerateInfoType instantiates a new GenerateInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateInfoType() *GenerateInfoType {
	this := GenerateInfoType{}
	return &this
}

// NewGenerateInfoTypeWithDefaults instantiates a new GenerateInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateInfoTypeWithDefaults() *GenerateInfoType {
	this := GenerateInfoType{}
	return &this
}

// GetGenerateId returns the GenerateId field value if set, zero value otherwise.
func (o *GenerateInfoType) GetGenerateId() UniqueIDType {
	if o == nil || IsNil(o.GenerateId) {
		var ret UniqueIDType
		return ret
	}
	return *o.GenerateId
}

// GetGenerateIdOk returns a tuple with the GenerateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateInfoType) GetGenerateIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.GenerateId) {
		return nil, false
	}
	return o.GenerateId, true
}

// HasGenerateId returns a boolean if a field has been set.
func (o *GenerateInfoType) HasGenerateId() bool {
	if o != nil && !IsNil(o.GenerateId) {
		return true
	}

	return false
}

// SetGenerateId gets a reference to the given UniqueIDType and assigns it to the GenerateId field.
func (o *GenerateInfoType) SetGenerateId(v UniqueIDType) {
	o.GenerateId = &v
}

func (o GenerateInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GenerateId) {
		toSerialize["generateId"] = o.GenerateId
	}
	return toSerialize, nil
}

type NullableGenerateInfoType struct {
	value *GenerateInfoType
	isSet bool
}

func (v NullableGenerateInfoType) Get() *GenerateInfoType {
	return v.value
}

func (v *NullableGenerateInfoType) Set(val *GenerateInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateInfoType(val *GenerateInfoType) *NullableGenerateInfoType {
	return &NullableGenerateInfoType{value: val, isSet: true}
}

func (v NullableGenerateInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


