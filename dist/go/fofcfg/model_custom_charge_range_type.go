/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomChargeRangeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomChargeRangeType{}

// CustomChargeRangeType The lower and upper range value for which the corresponding price is posted as a custom charge.
type CustomChargeRangeType struct {
	// The lower range value for which the corresponding price is posted as a custom charge.
	RangeFrom *float32 `json:"rangeFrom,omitempty"`
	// The upper range value for which the corresponding price is posted as a custom charge.
	RangeTo *float32 `json:"rangeTo,omitempty"`
	// The price of the custom charge, for the given range.
	Price *float32 `json:"price,omitempty"`
}

// NewCustomChargeRangeType instantiates a new CustomChargeRangeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomChargeRangeType() *CustomChargeRangeType {
	this := CustomChargeRangeType{}
	return &this
}

// NewCustomChargeRangeTypeWithDefaults instantiates a new CustomChargeRangeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomChargeRangeTypeWithDefaults() *CustomChargeRangeType {
	this := CustomChargeRangeType{}
	return &this
}

// GetRangeFrom returns the RangeFrom field value if set, zero value otherwise.
func (o *CustomChargeRangeType) GetRangeFrom() float32 {
	if o == nil || IsNil(o.RangeFrom) {
		var ret float32
		return ret
	}
	return *o.RangeFrom
}

// GetRangeFromOk returns a tuple with the RangeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeRangeType) GetRangeFromOk() (*float32, bool) {
	if o == nil || IsNil(o.RangeFrom) {
		return nil, false
	}
	return o.RangeFrom, true
}

// HasRangeFrom returns a boolean if a field has been set.
func (o *CustomChargeRangeType) HasRangeFrom() bool {
	if o != nil && !IsNil(o.RangeFrom) {
		return true
	}

	return false
}

// SetRangeFrom gets a reference to the given float32 and assigns it to the RangeFrom field.
func (o *CustomChargeRangeType) SetRangeFrom(v float32) {
	o.RangeFrom = &v
}

// GetRangeTo returns the RangeTo field value if set, zero value otherwise.
func (o *CustomChargeRangeType) GetRangeTo() float32 {
	if o == nil || IsNil(o.RangeTo) {
		var ret float32
		return ret
	}
	return *o.RangeTo
}

// GetRangeToOk returns a tuple with the RangeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeRangeType) GetRangeToOk() (*float32, bool) {
	if o == nil || IsNil(o.RangeTo) {
		return nil, false
	}
	return o.RangeTo, true
}

// HasRangeTo returns a boolean if a field has been set.
func (o *CustomChargeRangeType) HasRangeTo() bool {
	if o != nil && !IsNil(o.RangeTo) {
		return true
	}

	return false
}

// SetRangeTo gets a reference to the given float32 and assigns it to the RangeTo field.
func (o *CustomChargeRangeType) SetRangeTo(v float32) {
	o.RangeTo = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CustomChargeRangeType) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeRangeType) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CustomChargeRangeType) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *CustomChargeRangeType) SetPrice(v float32) {
	o.Price = &v
}

func (o CustomChargeRangeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomChargeRangeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RangeFrom) {
		toSerialize["rangeFrom"] = o.RangeFrom
	}
	if !IsNil(o.RangeTo) {
		toSerialize["rangeTo"] = o.RangeTo
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableCustomChargeRangeType struct {
	value *CustomChargeRangeType
	isSet bool
}

func (v NullableCustomChargeRangeType) Get() *CustomChargeRangeType {
	return v.value
}

func (v *NullableCustomChargeRangeType) Set(val *CustomChargeRangeType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomChargeRangeType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomChargeRangeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomChargeRangeType(val *CustomChargeRangeType) *NullableCustomChargeRangeType {
	return &NullableCustomChargeRangeType{value: val, isSet: true}
}

func (v NullableCustomChargeRangeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomChargeRangeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


