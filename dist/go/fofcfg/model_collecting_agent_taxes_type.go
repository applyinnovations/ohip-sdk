/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CollectingAgentTaxesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectingAgentTaxesType{}

// CollectingAgentTaxesType Type which holds collection of Agent Tax details
type CollectingAgentTaxesType struct {
	// It represent Agent Tax details.
	CollectingAgentTax []CollectingAgentTaxType `json:"collectingAgentTax,omitempty"`
	// Flag that indicates if Collecting Agent Taxes check should be skipped when given Tax code already exist.
	OverrideCollectingAgentTaxes *bool `json:"overrideCollectingAgentTaxes,omitempty"`
}

// NewCollectingAgentTaxesType instantiates a new CollectingAgentTaxesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectingAgentTaxesType() *CollectingAgentTaxesType {
	this := CollectingAgentTaxesType{}
	return &this
}

// NewCollectingAgentTaxesTypeWithDefaults instantiates a new CollectingAgentTaxesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectingAgentTaxesTypeWithDefaults() *CollectingAgentTaxesType {
	this := CollectingAgentTaxesType{}
	return &this
}

// GetCollectingAgentTax returns the CollectingAgentTax field value if set, zero value otherwise.
func (o *CollectingAgentTaxesType) GetCollectingAgentTax() []CollectingAgentTaxType {
	if o == nil || IsNil(o.CollectingAgentTax) {
		var ret []CollectingAgentTaxType
		return ret
	}
	return o.CollectingAgentTax
}

// GetCollectingAgentTaxOk returns a tuple with the CollectingAgentTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxesType) GetCollectingAgentTaxOk() ([]CollectingAgentTaxType, bool) {
	if o == nil || IsNil(o.CollectingAgentTax) {
		return nil, false
	}
	return o.CollectingAgentTax, true
}

// HasCollectingAgentTax returns a boolean if a field has been set.
func (o *CollectingAgentTaxesType) HasCollectingAgentTax() bool {
	if o != nil && !IsNil(o.CollectingAgentTax) {
		return true
	}

	return false
}

// SetCollectingAgentTax gets a reference to the given []CollectingAgentTaxType and assigns it to the CollectingAgentTax field.
func (o *CollectingAgentTaxesType) SetCollectingAgentTax(v []CollectingAgentTaxType) {
	o.CollectingAgentTax = v
}

// GetOverrideCollectingAgentTaxes returns the OverrideCollectingAgentTaxes field value if set, zero value otherwise.
func (o *CollectingAgentTaxesType) GetOverrideCollectingAgentTaxes() bool {
	if o == nil || IsNil(o.OverrideCollectingAgentTaxes) {
		var ret bool
		return ret
	}
	return *o.OverrideCollectingAgentTaxes
}

// GetOverrideCollectingAgentTaxesOk returns a tuple with the OverrideCollectingAgentTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectingAgentTaxesType) GetOverrideCollectingAgentTaxesOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideCollectingAgentTaxes) {
		return nil, false
	}
	return o.OverrideCollectingAgentTaxes, true
}

// HasOverrideCollectingAgentTaxes returns a boolean if a field has been set.
func (o *CollectingAgentTaxesType) HasOverrideCollectingAgentTaxes() bool {
	if o != nil && !IsNil(o.OverrideCollectingAgentTaxes) {
		return true
	}

	return false
}

// SetOverrideCollectingAgentTaxes gets a reference to the given bool and assigns it to the OverrideCollectingAgentTaxes field.
func (o *CollectingAgentTaxesType) SetOverrideCollectingAgentTaxes(v bool) {
	o.OverrideCollectingAgentTaxes = &v
}

func (o CollectingAgentTaxesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectingAgentTaxesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CollectingAgentTax) {
		toSerialize["collectingAgentTax"] = o.CollectingAgentTax
	}
	if !IsNil(o.OverrideCollectingAgentTaxes) {
		toSerialize["overrideCollectingAgentTaxes"] = o.OverrideCollectingAgentTaxes
	}
	return toSerialize, nil
}

type NullableCollectingAgentTaxesType struct {
	value *CollectingAgentTaxesType
	isSet bool
}

func (v NullableCollectingAgentTaxesType) Get() *CollectingAgentTaxesType {
	return v.value
}

func (v *NullableCollectingAgentTaxesType) Set(val *CollectingAgentTaxesType) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectingAgentTaxesType) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectingAgentTaxesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectingAgentTaxesType(val *CollectingAgentTaxesType) *NullableCollectingAgentTaxesType {
	return &NullableCollectingAgentTaxesType{value: val, isSet: true}
}

func (v NullableCollectingAgentTaxesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectingAgentTaxesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


