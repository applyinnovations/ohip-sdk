/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomNumberConfigurationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomNumberConfigurationType{}

// CustomNumberConfigurationType Custom number configuration details.
type CustomNumberConfigurationType struct {
	// Custom number configuration code.
	Code *string `json:"code,omitempty"`
	// The description of the custom number configuration code.
	Description *string `json:"description,omitempty"`
	Area *CustomNumberConfigurationAreaType `json:"area,omitempty"`
	// The formula to generate the custom number.
	Formula *string `json:"formula,omitempty"`
	// The condition to be met to generate and apply the custom number.
	Condition *string `json:"condition,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
	// Indicator that tells whether the configuration is active or not.
	InActive *bool `json:"inActive,omitempty"`
	// Display Order sequence.
	OrderSequence *float32 `json:"orderSequence,omitempty"`
	// Hotel context for the custom number configuration.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewCustomNumberConfigurationType instantiates a new CustomNumberConfigurationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomNumberConfigurationType() *CustomNumberConfigurationType {
	this := CustomNumberConfigurationType{}
	return &this
}

// NewCustomNumberConfigurationTypeWithDefaults instantiates a new CustomNumberConfigurationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomNumberConfigurationTypeWithDefaults() *CustomNumberConfigurationType {
	this := CustomNumberConfigurationType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CustomNumberConfigurationType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomNumberConfigurationType) SetDescription(v string) {
	o.Description = &v
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetArea() CustomNumberConfigurationAreaType {
	if o == nil || IsNil(o.Area) {
		var ret CustomNumberConfigurationAreaType
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetAreaOk() (*CustomNumberConfigurationAreaType, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given CustomNumberConfigurationAreaType and assigns it to the Area field.
func (o *CustomNumberConfigurationType) SetArea(v CustomNumberConfigurationAreaType) {
	o.Area = &v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetFormula() string {
	if o == nil || IsNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetFormulaOk() (*string, bool) {
	if o == nil || IsNil(o.Formula) {
		return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasFormula() bool {
	if o != nil && !IsNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *CustomNumberConfigurationType) SetFormula(v string) {
	o.Formula = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *CustomNumberConfigurationType) SetCondition(v string) {
	o.Condition = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *CustomNumberConfigurationType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

// GetInActive returns the InActive field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetInActive() bool {
	if o == nil || IsNil(o.InActive) {
		var ret bool
		return ret
	}
	return *o.InActive
}

// GetInActiveOk returns a tuple with the InActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetInActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.InActive) {
		return nil, false
	}
	return o.InActive, true
}

// HasInActive returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasInActive() bool {
	if o != nil && !IsNil(o.InActive) {
		return true
	}

	return false
}

// SetInActive gets a reference to the given bool and assigns it to the InActive field.
func (o *CustomNumberConfigurationType) SetInActive(v bool) {
	o.InActive = &v
}

// GetOrderSequence returns the OrderSequence field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetOrderSequence() float32 {
	if o == nil || IsNil(o.OrderSequence) {
		var ret float32
		return ret
	}
	return *o.OrderSequence
}

// GetOrderSequenceOk returns a tuple with the OrderSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetOrderSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderSequence) {
		return nil, false
	}
	return o.OrderSequence, true
}

// HasOrderSequence returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasOrderSequence() bool {
	if o != nil && !IsNil(o.OrderSequence) {
		return true
	}

	return false
}

// SetOrderSequence gets a reference to the given float32 and assigns it to the OrderSequence field.
func (o *CustomNumberConfigurationType) SetOrderSequence(v float32) {
	o.OrderSequence = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CustomNumberConfigurationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNumberConfigurationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CustomNumberConfigurationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CustomNumberConfigurationType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o CustomNumberConfigurationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomNumberConfigurationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	if !IsNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if !IsNil(o.InActive) {
		toSerialize["inActive"] = o.InActive
	}
	if !IsNil(o.OrderSequence) {
		toSerialize["orderSequence"] = o.OrderSequence
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableCustomNumberConfigurationType struct {
	value *CustomNumberConfigurationType
	isSet bool
}

func (v NullableCustomNumberConfigurationType) Get() *CustomNumberConfigurationType {
	return v.value
}

func (v *NullableCustomNumberConfigurationType) Set(val *CustomNumberConfigurationType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomNumberConfigurationType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomNumberConfigurationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomNumberConfigurationType(val *CustomNumberConfigurationType) *NullableCustomNumberConfigurationType {
	return &NullableCustomNumberConfigurationType{value: val, isSet: true}
}

func (v NullableCustomNumberConfigurationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomNumberConfigurationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


