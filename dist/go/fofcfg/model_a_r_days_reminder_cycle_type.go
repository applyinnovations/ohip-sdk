/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ARDaysReminderCycleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARDaysReminderCycleType{}

// ARDaysReminderCycleType Custom reminder cycles determine which to generated statements for the account with outstanding balances
type ARDaysReminderCycleType struct {
	AccountTypeReminderCycleId *UniqueIDType `json:"accountTypeReminderCycleId,omitempty"`
	// Number of days in the reminder cycle
	NoOfDays *int32 `json:"noOfDays,omitempty"`
	// File name for the reminder letter to be granted for this cycle
	ReportName *string `json:"reportName,omitempty"`
}

// NewARDaysReminderCycleType instantiates a new ARDaysReminderCycleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARDaysReminderCycleType() *ARDaysReminderCycleType {
	this := ARDaysReminderCycleType{}
	return &this
}

// NewARDaysReminderCycleTypeWithDefaults instantiates a new ARDaysReminderCycleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARDaysReminderCycleTypeWithDefaults() *ARDaysReminderCycleType {
	this := ARDaysReminderCycleType{}
	return &this
}

// GetAccountTypeReminderCycleId returns the AccountTypeReminderCycleId field value if set, zero value otherwise.
func (o *ARDaysReminderCycleType) GetAccountTypeReminderCycleId() UniqueIDType {
	if o == nil || IsNil(o.AccountTypeReminderCycleId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AccountTypeReminderCycleId
}

// GetAccountTypeReminderCycleIdOk returns a tuple with the AccountTypeReminderCycleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARDaysReminderCycleType) GetAccountTypeReminderCycleIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AccountTypeReminderCycleId) {
		return nil, false
	}
	return o.AccountTypeReminderCycleId, true
}

// HasAccountTypeReminderCycleId returns a boolean if a field has been set.
func (o *ARDaysReminderCycleType) HasAccountTypeReminderCycleId() bool {
	if o != nil && !IsNil(o.AccountTypeReminderCycleId) {
		return true
	}

	return false
}

// SetAccountTypeReminderCycleId gets a reference to the given UniqueIDType and assigns it to the AccountTypeReminderCycleId field.
func (o *ARDaysReminderCycleType) SetAccountTypeReminderCycleId(v UniqueIDType) {
	o.AccountTypeReminderCycleId = &v
}

// GetNoOfDays returns the NoOfDays field value if set, zero value otherwise.
func (o *ARDaysReminderCycleType) GetNoOfDays() int32 {
	if o == nil || IsNil(o.NoOfDays) {
		var ret int32
		return ret
	}
	return *o.NoOfDays
}

// GetNoOfDaysOk returns a tuple with the NoOfDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARDaysReminderCycleType) GetNoOfDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfDays) {
		return nil, false
	}
	return o.NoOfDays, true
}

// HasNoOfDays returns a boolean if a field has been set.
func (o *ARDaysReminderCycleType) HasNoOfDays() bool {
	if o != nil && !IsNil(o.NoOfDays) {
		return true
	}

	return false
}

// SetNoOfDays gets a reference to the given int32 and assigns it to the NoOfDays field.
func (o *ARDaysReminderCycleType) SetNoOfDays(v int32) {
	o.NoOfDays = &v
}

// GetReportName returns the ReportName field value if set, zero value otherwise.
func (o *ARDaysReminderCycleType) GetReportName() string {
	if o == nil || IsNil(o.ReportName) {
		var ret string
		return ret
	}
	return *o.ReportName
}

// GetReportNameOk returns a tuple with the ReportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARDaysReminderCycleType) GetReportNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReportName) {
		return nil, false
	}
	return o.ReportName, true
}

// HasReportName returns a boolean if a field has been set.
func (o *ARDaysReminderCycleType) HasReportName() bool {
	if o != nil && !IsNil(o.ReportName) {
		return true
	}

	return false
}

// SetReportName gets a reference to the given string and assigns it to the ReportName field.
func (o *ARDaysReminderCycleType) SetReportName(v string) {
	o.ReportName = &v
}

func (o ARDaysReminderCycleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARDaysReminderCycleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountTypeReminderCycleId) {
		toSerialize["accountTypeReminderCycleId"] = o.AccountTypeReminderCycleId
	}
	if !IsNil(o.NoOfDays) {
		toSerialize["noOfDays"] = o.NoOfDays
	}
	if !IsNil(o.ReportName) {
		toSerialize["reportName"] = o.ReportName
	}
	return toSerialize, nil
}

type NullableARDaysReminderCycleType struct {
	value *ARDaysReminderCycleType
	isSet bool
}

func (v NullableARDaysReminderCycleType) Get() *ARDaysReminderCycleType {
	return v.value
}

func (v *NullableARDaysReminderCycleType) Set(val *ARDaysReminderCycleType) {
	v.value = val
	v.isSet = true
}

func (v NullableARDaysReminderCycleType) IsSet() bool {
	return v.isSet
}

func (v *NullableARDaysReminderCycleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARDaysReminderCycleType(val *ARDaysReminderCycleType) *NullableARDaysReminderCycleType {
	return &NullableARDaysReminderCycleType{value: val, isSet: true}
}

func (v NullableARDaysReminderCycleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARDaysReminderCycleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


