/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CreditLimitType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditLimitType{}

// CreditLimitType struct for CreditLimitType
type CreditLimitType struct {
	CreditLimit *CurrencyAmountType `json:"creditLimit,omitempty"`
	Percentage *float32 `json:"percentage,omitempty"`
}

// NewCreditLimitType instantiates a new CreditLimitType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditLimitType() *CreditLimitType {
	this := CreditLimitType{}
	return &this
}

// NewCreditLimitTypeWithDefaults instantiates a new CreditLimitType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditLimitTypeWithDefaults() *CreditLimitType {
	this := CreditLimitType{}
	return &this
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *CreditLimitType) GetCreditLimit() CurrencyAmountType {
	if o == nil || IsNil(o.CreditLimit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditLimitType) GetCreditLimitOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *CreditLimitType) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given CurrencyAmountType and assigns it to the CreditLimit field.
func (o *CreditLimitType) SetCreditLimit(v CurrencyAmountType) {
	o.CreditLimit = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *CreditLimitType) GetPercentage() float32 {
	if o == nil || IsNil(o.Percentage) {
		var ret float32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditLimitType) GetPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *CreditLimitType) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given float32 and assigns it to the Percentage field.
func (o *CreditLimitType) SetPercentage(v float32) {
	o.Percentage = &v
}

func (o CreditLimitType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditLimitType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	return toSerialize, nil
}

type NullableCreditLimitType struct {
	value *CreditLimitType
	isSet bool
}

func (v NullableCreditLimitType) Get() *CreditLimitType {
	return v.value
}

func (v *NullableCreditLimitType) Set(val *CreditLimitType) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditLimitType) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditLimitType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditLimitType(val *CreditLimitType) *NullableCreditLimitType {
	return &NullableCreditLimitType{value: val, isSet: true}
}

func (v NullableCreditLimitType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditLimitType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


