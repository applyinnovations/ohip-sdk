/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the TrxCodeAmountsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrxCodeAmountsType{}

// TrxCodeAmountsType Transaction Code's default amount details.
type TrxCodeAmountsType struct {
	// Default currency code for the amounts.
	Currency *string `json:"currency,omitempty"`
	// Default price of the Transaction Code.
	DefaultPrice *float32 `json:"defaultPrice,omitempty"`
	// Maximum Amount to be posted on this Transaction Code.
	MaxAmount *float32 `json:"maxAmount,omitempty"`
	// Minimum amount to be posted on this Transaction Code.
	MinAmount *float32 `json:"minAmount,omitempty"`
}

// NewTrxCodeAmountsType instantiates a new TrxCodeAmountsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrxCodeAmountsType() *TrxCodeAmountsType {
	this := TrxCodeAmountsType{}
	return &this
}

// NewTrxCodeAmountsTypeWithDefaults instantiates a new TrxCodeAmountsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrxCodeAmountsTypeWithDefaults() *TrxCodeAmountsType {
	this := TrxCodeAmountsType{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *TrxCodeAmountsType) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxCodeAmountsType) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *TrxCodeAmountsType) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *TrxCodeAmountsType) SetCurrency(v string) {
	o.Currency = &v
}

// GetDefaultPrice returns the DefaultPrice field value if set, zero value otherwise.
func (o *TrxCodeAmountsType) GetDefaultPrice() float32 {
	if o == nil || IsNil(o.DefaultPrice) {
		var ret float32
		return ret
	}
	return *o.DefaultPrice
}

// GetDefaultPriceOk returns a tuple with the DefaultPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxCodeAmountsType) GetDefaultPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.DefaultPrice) {
		return nil, false
	}
	return o.DefaultPrice, true
}

// HasDefaultPrice returns a boolean if a field has been set.
func (o *TrxCodeAmountsType) HasDefaultPrice() bool {
	if o != nil && !IsNil(o.DefaultPrice) {
		return true
	}

	return false
}

// SetDefaultPrice gets a reference to the given float32 and assigns it to the DefaultPrice field.
func (o *TrxCodeAmountsType) SetDefaultPrice(v float32) {
	o.DefaultPrice = &v
}

// GetMaxAmount returns the MaxAmount field value if set, zero value otherwise.
func (o *TrxCodeAmountsType) GetMaxAmount() float32 {
	if o == nil || IsNil(o.MaxAmount) {
		var ret float32
		return ret
	}
	return *o.MaxAmount
}

// GetMaxAmountOk returns a tuple with the MaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxCodeAmountsType) GetMaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxAmount) {
		return nil, false
	}
	return o.MaxAmount, true
}

// HasMaxAmount returns a boolean if a field has been set.
func (o *TrxCodeAmountsType) HasMaxAmount() bool {
	if o != nil && !IsNil(o.MaxAmount) {
		return true
	}

	return false
}

// SetMaxAmount gets a reference to the given float32 and assigns it to the MaxAmount field.
func (o *TrxCodeAmountsType) SetMaxAmount(v float32) {
	o.MaxAmount = &v
}

// GetMinAmount returns the MinAmount field value if set, zero value otherwise.
func (o *TrxCodeAmountsType) GetMinAmount() float32 {
	if o == nil || IsNil(o.MinAmount) {
		var ret float32
		return ret
	}
	return *o.MinAmount
}

// GetMinAmountOk returns a tuple with the MinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxCodeAmountsType) GetMinAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.MinAmount) {
		return nil, false
	}
	return o.MinAmount, true
}

// HasMinAmount returns a boolean if a field has been set.
func (o *TrxCodeAmountsType) HasMinAmount() bool {
	if o != nil && !IsNil(o.MinAmount) {
		return true
	}

	return false
}

// SetMinAmount gets a reference to the given float32 and assigns it to the MinAmount field.
func (o *TrxCodeAmountsType) SetMinAmount(v float32) {
	o.MinAmount = &v
}

func (o TrxCodeAmountsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrxCodeAmountsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DefaultPrice) {
		toSerialize["defaultPrice"] = o.DefaultPrice
	}
	if !IsNil(o.MaxAmount) {
		toSerialize["maxAmount"] = o.MaxAmount
	}
	if !IsNil(o.MinAmount) {
		toSerialize["minAmount"] = o.MinAmount
	}
	return toSerialize, nil
}

type NullableTrxCodeAmountsType struct {
	value *TrxCodeAmountsType
	isSet bool
}

func (v NullableTrxCodeAmountsType) Get() *TrxCodeAmountsType {
	return v.value
}

func (v *NullableTrxCodeAmountsType) Set(val *TrxCodeAmountsType) {
	v.value = val
	v.isSet = true
}

func (v NullableTrxCodeAmountsType) IsSet() bool {
	return v.isSet
}

func (v *NullableTrxCodeAmountsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrxCodeAmountsType(val *TrxCodeAmountsType) *NullableTrxCodeAmountsType {
	return &NullableTrxCodeAmountsType{value: val, isSet: true}
}

func (v NullableTrxCodeAmountsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrxCodeAmountsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


