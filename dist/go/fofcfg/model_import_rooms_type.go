/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the ImportRoomsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportRoomsType{}

// ImportRoomsType struct for ImportRoomsType
type ImportRoomsType struct {
	// Translation table for incoming messages.
	InXlatId *string `json:"inXlatId,omitempty"`
	// Indicator for support of Input/Output Lines for Hotel Room Categories.
	IoLines *bool `json:"ioLines,omitempty"`
	// Translation table for outgoing messages.
	OuXlatId *string `json:"ouXlatId,omitempty"`
	// Indicator for Requires line number setup, from Import Rooms related information of a Hotel Interface.
	RequiresLineNumberSetup *bool `json:"requiresLineNumberSetup,omitempty"`
	// Concatenated label of Hotel Room Categories for which SendToInterface flag should be set as true.
	SelectedRoomTypes *string `json:"selectedRoomTypes,omitempty"`
	// Indicator for Virtual number setup, from Import Rooms related information of a Hotel Interface.
	VirtualNumberSetup *bool `json:"virtualNumberSetup,omitempty"`
}

// NewImportRoomsType instantiates a new ImportRoomsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportRoomsType() *ImportRoomsType {
	this := ImportRoomsType{}
	return &this
}

// NewImportRoomsTypeWithDefaults instantiates a new ImportRoomsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportRoomsTypeWithDefaults() *ImportRoomsType {
	this := ImportRoomsType{}
	return &this
}

// GetInXlatId returns the InXlatId field value if set, zero value otherwise.
func (o *ImportRoomsType) GetInXlatId() string {
	if o == nil || IsNil(o.InXlatId) {
		var ret string
		return ret
	}
	return *o.InXlatId
}

// GetInXlatIdOk returns a tuple with the InXlatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetInXlatIdOk() (*string, bool) {
	if o == nil || IsNil(o.InXlatId) {
		return nil, false
	}
	return o.InXlatId, true
}

// HasInXlatId returns a boolean if a field has been set.
func (o *ImportRoomsType) HasInXlatId() bool {
	if o != nil && !IsNil(o.InXlatId) {
		return true
	}

	return false
}

// SetInXlatId gets a reference to the given string and assigns it to the InXlatId field.
func (o *ImportRoomsType) SetInXlatId(v string) {
	o.InXlatId = &v
}

// GetIoLines returns the IoLines field value if set, zero value otherwise.
func (o *ImportRoomsType) GetIoLines() bool {
	if o == nil || IsNil(o.IoLines) {
		var ret bool
		return ret
	}
	return *o.IoLines
}

// GetIoLinesOk returns a tuple with the IoLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetIoLinesOk() (*bool, bool) {
	if o == nil || IsNil(o.IoLines) {
		return nil, false
	}
	return o.IoLines, true
}

// HasIoLines returns a boolean if a field has been set.
func (o *ImportRoomsType) HasIoLines() bool {
	if o != nil && !IsNil(o.IoLines) {
		return true
	}

	return false
}

// SetIoLines gets a reference to the given bool and assigns it to the IoLines field.
func (o *ImportRoomsType) SetIoLines(v bool) {
	o.IoLines = &v
}

// GetOuXlatId returns the OuXlatId field value if set, zero value otherwise.
func (o *ImportRoomsType) GetOuXlatId() string {
	if o == nil || IsNil(o.OuXlatId) {
		var ret string
		return ret
	}
	return *o.OuXlatId
}

// GetOuXlatIdOk returns a tuple with the OuXlatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetOuXlatIdOk() (*string, bool) {
	if o == nil || IsNil(o.OuXlatId) {
		return nil, false
	}
	return o.OuXlatId, true
}

// HasOuXlatId returns a boolean if a field has been set.
func (o *ImportRoomsType) HasOuXlatId() bool {
	if o != nil && !IsNil(o.OuXlatId) {
		return true
	}

	return false
}

// SetOuXlatId gets a reference to the given string and assigns it to the OuXlatId field.
func (o *ImportRoomsType) SetOuXlatId(v string) {
	o.OuXlatId = &v
}

// GetRequiresLineNumberSetup returns the RequiresLineNumberSetup field value if set, zero value otherwise.
func (o *ImportRoomsType) GetRequiresLineNumberSetup() bool {
	if o == nil || IsNil(o.RequiresLineNumberSetup) {
		var ret bool
		return ret
	}
	return *o.RequiresLineNumberSetup
}

// GetRequiresLineNumberSetupOk returns a tuple with the RequiresLineNumberSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetRequiresLineNumberSetupOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresLineNumberSetup) {
		return nil, false
	}
	return o.RequiresLineNumberSetup, true
}

// HasRequiresLineNumberSetup returns a boolean if a field has been set.
func (o *ImportRoomsType) HasRequiresLineNumberSetup() bool {
	if o != nil && !IsNil(o.RequiresLineNumberSetup) {
		return true
	}

	return false
}

// SetRequiresLineNumberSetup gets a reference to the given bool and assigns it to the RequiresLineNumberSetup field.
func (o *ImportRoomsType) SetRequiresLineNumberSetup(v bool) {
	o.RequiresLineNumberSetup = &v
}

// GetSelectedRoomTypes returns the SelectedRoomTypes field value if set, zero value otherwise.
func (o *ImportRoomsType) GetSelectedRoomTypes() string {
	if o == nil || IsNil(o.SelectedRoomTypes) {
		var ret string
		return ret
	}
	return *o.SelectedRoomTypes
}

// GetSelectedRoomTypesOk returns a tuple with the SelectedRoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetSelectedRoomTypesOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedRoomTypes) {
		return nil, false
	}
	return o.SelectedRoomTypes, true
}

// HasSelectedRoomTypes returns a boolean if a field has been set.
func (o *ImportRoomsType) HasSelectedRoomTypes() bool {
	if o != nil && !IsNil(o.SelectedRoomTypes) {
		return true
	}

	return false
}

// SetSelectedRoomTypes gets a reference to the given string and assigns it to the SelectedRoomTypes field.
func (o *ImportRoomsType) SetSelectedRoomTypes(v string) {
	o.SelectedRoomTypes = &v
}

// GetVirtualNumberSetup returns the VirtualNumberSetup field value if set, zero value otherwise.
func (o *ImportRoomsType) GetVirtualNumberSetup() bool {
	if o == nil || IsNil(o.VirtualNumberSetup) {
		var ret bool
		return ret
	}
	return *o.VirtualNumberSetup
}

// GetVirtualNumberSetupOk returns a tuple with the VirtualNumberSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportRoomsType) GetVirtualNumberSetupOk() (*bool, bool) {
	if o == nil || IsNil(o.VirtualNumberSetup) {
		return nil, false
	}
	return o.VirtualNumberSetup, true
}

// HasVirtualNumberSetup returns a boolean if a field has been set.
func (o *ImportRoomsType) HasVirtualNumberSetup() bool {
	if o != nil && !IsNil(o.VirtualNumberSetup) {
		return true
	}

	return false
}

// SetVirtualNumberSetup gets a reference to the given bool and assigns it to the VirtualNumberSetup field.
func (o *ImportRoomsType) SetVirtualNumberSetup(v bool) {
	o.VirtualNumberSetup = &v
}

func (o ImportRoomsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportRoomsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InXlatId) {
		toSerialize["inXlatId"] = o.InXlatId
	}
	if !IsNil(o.IoLines) {
		toSerialize["ioLines"] = o.IoLines
	}
	if !IsNil(o.OuXlatId) {
		toSerialize["ouXlatId"] = o.OuXlatId
	}
	if !IsNil(o.RequiresLineNumberSetup) {
		toSerialize["requiresLineNumberSetup"] = o.RequiresLineNumberSetup
	}
	if !IsNil(o.SelectedRoomTypes) {
		toSerialize["selectedRoomTypes"] = o.SelectedRoomTypes
	}
	if !IsNil(o.VirtualNumberSetup) {
		toSerialize["virtualNumberSetup"] = o.VirtualNumberSetup
	}
	return toSerialize, nil
}

type NullableImportRoomsType struct {
	value *ImportRoomsType
	isSet bool
}

func (v NullableImportRoomsType) Get() *ImportRoomsType {
	return v.value
}

func (v *NullableImportRoomsType) Set(val *ImportRoomsType) {
	v.value = val
	v.isSet = true
}

func (v NullableImportRoomsType) IsSet() bool {
	return v.isSet
}

func (v *NullableImportRoomsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportRoomsType(val *ImportRoomsType) *NullableImportRoomsType {
	return &NullableImportRoomsType{value: val, isSet: true}
}

func (v NullableImportRoomsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportRoomsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


