/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomCodeInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomCodeInformationType{}

// CustomCodeInformationType Budget Forecast information for Custom segment code.
type CustomCodeInformationType struct {
	// Monthly Value Variance information.
	ABVarianceInfo []MonthlyCustomVarianceInfoType `json:"aBVarianceInfo,omitempty"`
	// Monthly Value Variance information.
	AFVarianceInfo []MonthlyCustomVarianceInfoType `json:"aFVarianceInfo,omitempty"`
	ActualValueInfo *CustomValueInfoType `json:"actualValueInfo,omitempty"`
	BudgetValueInfo *CustomValueInfoType `json:"budgetValueInfo,omitempty"`
	// Custom code for which budget forecast information is fetched.
	CustomCode *string `json:"customCode,omitempty"`
	// Custom code description for Custom code.
	CustomCodeDescription *string `json:"customCodeDescription,omitempty"`
	// Monthly Value Variance information.
	FBVarianceInfo []MonthlyCustomVarianceInfoType `json:"fBVarianceInfo,omitempty"`
	ForecastValueInfo *CustomValueInfoType `json:"forecastValueInfo,omitempty"`
}

// NewCustomCodeInformationType instantiates a new CustomCodeInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCodeInformationType() *CustomCodeInformationType {
	this := CustomCodeInformationType{}
	return &this
}

// NewCustomCodeInformationTypeWithDefaults instantiates a new CustomCodeInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCodeInformationTypeWithDefaults() *CustomCodeInformationType {
	this := CustomCodeInformationType{}
	return &this
}

// GetABVarianceInfo returns the ABVarianceInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetABVarianceInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.ABVarianceInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.ABVarianceInfo
}

// GetABVarianceInfoOk returns a tuple with the ABVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetABVarianceInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.ABVarianceInfo) {
		return nil, false
	}
	return o.ABVarianceInfo, true
}

// HasABVarianceInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasABVarianceInfo() bool {
	if o != nil && !IsNil(o.ABVarianceInfo) {
		return true
	}

	return false
}

// SetABVarianceInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the ABVarianceInfo field.
func (o *CustomCodeInformationType) SetABVarianceInfo(v []MonthlyCustomVarianceInfoType) {
	o.ABVarianceInfo = v
}

// GetAFVarianceInfo returns the AFVarianceInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetAFVarianceInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.AFVarianceInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.AFVarianceInfo
}

// GetAFVarianceInfoOk returns a tuple with the AFVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetAFVarianceInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.AFVarianceInfo) {
		return nil, false
	}
	return o.AFVarianceInfo, true
}

// HasAFVarianceInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasAFVarianceInfo() bool {
	if o != nil && !IsNil(o.AFVarianceInfo) {
		return true
	}

	return false
}

// SetAFVarianceInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the AFVarianceInfo field.
func (o *CustomCodeInformationType) SetAFVarianceInfo(v []MonthlyCustomVarianceInfoType) {
	o.AFVarianceInfo = v
}

// GetActualValueInfo returns the ActualValueInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetActualValueInfo() CustomValueInfoType {
	if o == nil || IsNil(o.ActualValueInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.ActualValueInfo
}

// GetActualValueInfoOk returns a tuple with the ActualValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetActualValueInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.ActualValueInfo) {
		return nil, false
	}
	return o.ActualValueInfo, true
}

// HasActualValueInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasActualValueInfo() bool {
	if o != nil && !IsNil(o.ActualValueInfo) {
		return true
	}

	return false
}

// SetActualValueInfo gets a reference to the given CustomValueInfoType and assigns it to the ActualValueInfo field.
func (o *CustomCodeInformationType) SetActualValueInfo(v CustomValueInfoType) {
	o.ActualValueInfo = &v
}

// GetBudgetValueInfo returns the BudgetValueInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetBudgetValueInfo() CustomValueInfoType {
	if o == nil || IsNil(o.BudgetValueInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.BudgetValueInfo
}

// GetBudgetValueInfoOk returns a tuple with the BudgetValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetBudgetValueInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.BudgetValueInfo) {
		return nil, false
	}
	return o.BudgetValueInfo, true
}

// HasBudgetValueInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasBudgetValueInfo() bool {
	if o != nil && !IsNil(o.BudgetValueInfo) {
		return true
	}

	return false
}

// SetBudgetValueInfo gets a reference to the given CustomValueInfoType and assigns it to the BudgetValueInfo field.
func (o *CustomCodeInformationType) SetBudgetValueInfo(v CustomValueInfoType) {
	o.BudgetValueInfo = &v
}

// GetCustomCode returns the CustomCode field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetCustomCode() string {
	if o == nil || IsNil(o.CustomCode) {
		var ret string
		return ret
	}
	return *o.CustomCode
}

// GetCustomCodeOk returns a tuple with the CustomCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetCustomCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CustomCode) {
		return nil, false
	}
	return o.CustomCode, true
}

// HasCustomCode returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasCustomCode() bool {
	if o != nil && !IsNil(o.CustomCode) {
		return true
	}

	return false
}

// SetCustomCode gets a reference to the given string and assigns it to the CustomCode field.
func (o *CustomCodeInformationType) SetCustomCode(v string) {
	o.CustomCode = &v
}

// GetCustomCodeDescription returns the CustomCodeDescription field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetCustomCodeDescription() string {
	if o == nil || IsNil(o.CustomCodeDescription) {
		var ret string
		return ret
	}
	return *o.CustomCodeDescription
}

// GetCustomCodeDescriptionOk returns a tuple with the CustomCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetCustomCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CustomCodeDescription) {
		return nil, false
	}
	return o.CustomCodeDescription, true
}

// HasCustomCodeDescription returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasCustomCodeDescription() bool {
	if o != nil && !IsNil(o.CustomCodeDescription) {
		return true
	}

	return false
}

// SetCustomCodeDescription gets a reference to the given string and assigns it to the CustomCodeDescription field.
func (o *CustomCodeInformationType) SetCustomCodeDescription(v string) {
	o.CustomCodeDescription = &v
}

// GetFBVarianceInfo returns the FBVarianceInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetFBVarianceInfo() []MonthlyCustomVarianceInfoType {
	if o == nil || IsNil(o.FBVarianceInfo) {
		var ret []MonthlyCustomVarianceInfoType
		return ret
	}
	return o.FBVarianceInfo
}

// GetFBVarianceInfoOk returns a tuple with the FBVarianceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetFBVarianceInfoOk() ([]MonthlyCustomVarianceInfoType, bool) {
	if o == nil || IsNil(o.FBVarianceInfo) {
		return nil, false
	}
	return o.FBVarianceInfo, true
}

// HasFBVarianceInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasFBVarianceInfo() bool {
	if o != nil && !IsNil(o.FBVarianceInfo) {
		return true
	}

	return false
}

// SetFBVarianceInfo gets a reference to the given []MonthlyCustomVarianceInfoType and assigns it to the FBVarianceInfo field.
func (o *CustomCodeInformationType) SetFBVarianceInfo(v []MonthlyCustomVarianceInfoType) {
	o.FBVarianceInfo = v
}

// GetForecastValueInfo returns the ForecastValueInfo field value if set, zero value otherwise.
func (o *CustomCodeInformationType) GetForecastValueInfo() CustomValueInfoType {
	if o == nil || IsNil(o.ForecastValueInfo) {
		var ret CustomValueInfoType
		return ret
	}
	return *o.ForecastValueInfo
}

// GetForecastValueInfoOk returns a tuple with the ForecastValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomCodeInformationType) GetForecastValueInfoOk() (*CustomValueInfoType, bool) {
	if o == nil || IsNil(o.ForecastValueInfo) {
		return nil, false
	}
	return o.ForecastValueInfo, true
}

// HasForecastValueInfo returns a boolean if a field has been set.
func (o *CustomCodeInformationType) HasForecastValueInfo() bool {
	if o != nil && !IsNil(o.ForecastValueInfo) {
		return true
	}

	return false
}

// SetForecastValueInfo gets a reference to the given CustomValueInfoType and assigns it to the ForecastValueInfo field.
func (o *CustomCodeInformationType) SetForecastValueInfo(v CustomValueInfoType) {
	o.ForecastValueInfo = &v
}

func (o CustomCodeInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomCodeInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ABVarianceInfo) {
		toSerialize["aBVarianceInfo"] = o.ABVarianceInfo
	}
	if !IsNil(o.AFVarianceInfo) {
		toSerialize["aFVarianceInfo"] = o.AFVarianceInfo
	}
	if !IsNil(o.ActualValueInfo) {
		toSerialize["actualValueInfo"] = o.ActualValueInfo
	}
	if !IsNil(o.BudgetValueInfo) {
		toSerialize["budgetValueInfo"] = o.BudgetValueInfo
	}
	if !IsNil(o.CustomCode) {
		toSerialize["customCode"] = o.CustomCode
	}
	if !IsNil(o.CustomCodeDescription) {
		toSerialize["customCodeDescription"] = o.CustomCodeDescription
	}
	if !IsNil(o.FBVarianceInfo) {
		toSerialize["fBVarianceInfo"] = o.FBVarianceInfo
	}
	if !IsNil(o.ForecastValueInfo) {
		toSerialize["forecastValueInfo"] = o.ForecastValueInfo
	}
	return toSerialize, nil
}

type NullableCustomCodeInformationType struct {
	value *CustomCodeInformationType
	isSet bool
}

func (v NullableCustomCodeInformationType) Get() *CustomCodeInformationType {
	return v.value
}

func (v *NullableCustomCodeInformationType) Set(val *CustomCodeInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCodeInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCodeInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCodeInformationType(val *CustomCodeInformationType) *NullableCustomCodeInformationType {
	return &NullableCustomCodeInformationType{value: val, isSet: true}
}

func (v NullableCustomCodeInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCodeInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


