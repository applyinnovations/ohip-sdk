/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CopyTransactionCodesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyTransactionCodesType{}

// CopyTransactionCodesType Collection of transaction codes to be copied within same hotel
type CopyTransactionCodesType struct {
	// Indicator that tells whether the transaction code generates should be copied or not.
	CopyGenerates *bool `json:"copyGenerates,omitempty"`
	// Source hotel code from where transaction codes(s) have to be copied. The transaction codes will be copied to the same hotel code with a different code and description.
	HotelId *string `json:"hotelId,omitempty"`
	// List of transaction codes to be copied within the same hotel code.
	TransactionCode []CopyTransactionCodeType `json:"transactionCode,omitempty"`
}

// NewCopyTransactionCodesType instantiates a new CopyTransactionCodesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyTransactionCodesType() *CopyTransactionCodesType {
	this := CopyTransactionCodesType{}
	return &this
}

// NewCopyTransactionCodesTypeWithDefaults instantiates a new CopyTransactionCodesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyTransactionCodesTypeWithDefaults() *CopyTransactionCodesType {
	this := CopyTransactionCodesType{}
	return &this
}

// GetCopyGenerates returns the CopyGenerates field value if set, zero value otherwise.
func (o *CopyTransactionCodesType) GetCopyGenerates() bool {
	if o == nil || IsNil(o.CopyGenerates) {
		var ret bool
		return ret
	}
	return *o.CopyGenerates
}

// GetCopyGeneratesOk returns a tuple with the CopyGenerates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyTransactionCodesType) GetCopyGeneratesOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyGenerates) {
		return nil, false
	}
	return o.CopyGenerates, true
}

// HasCopyGenerates returns a boolean if a field has been set.
func (o *CopyTransactionCodesType) HasCopyGenerates() bool {
	if o != nil && !IsNil(o.CopyGenerates) {
		return true
	}

	return false
}

// SetCopyGenerates gets a reference to the given bool and assigns it to the CopyGenerates field.
func (o *CopyTransactionCodesType) SetCopyGenerates(v bool) {
	o.CopyGenerates = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CopyTransactionCodesType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyTransactionCodesType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CopyTransactionCodesType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CopyTransactionCodesType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *CopyTransactionCodesType) GetTransactionCode() []CopyTransactionCodeType {
	if o == nil || IsNil(o.TransactionCode) {
		var ret []CopyTransactionCodeType
		return ret
	}
	return o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyTransactionCodesType) GetTransactionCodeOk() ([]CopyTransactionCodeType, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *CopyTransactionCodesType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given []CopyTransactionCodeType and assigns it to the TransactionCode field.
func (o *CopyTransactionCodesType) SetTransactionCode(v []CopyTransactionCodeType) {
	o.TransactionCode = v
}

func (o CopyTransactionCodesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyTransactionCodesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyGenerates) {
		toSerialize["copyGenerates"] = o.CopyGenerates
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	return toSerialize, nil
}

type NullableCopyTransactionCodesType struct {
	value *CopyTransactionCodesType
	isSet bool
}

func (v NullableCopyTransactionCodesType) Get() *CopyTransactionCodesType {
	return v.value
}

func (v *NullableCopyTransactionCodesType) Set(val *CopyTransactionCodesType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyTransactionCodesType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyTransactionCodesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyTransactionCodesType(val *CopyTransactionCodesType) *NullableCopyTransactionCodesType {
	return &NullableCopyTransactionCodesType{value: val, isSet: true}
}

func (v NullableCopyTransactionCodesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyTransactionCodesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


