/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the ReservationDetailsMassUpdateCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationDetailsMassUpdateCriteria{}

// ReservationDetailsMassUpdateCriteria Reservation Details Mass Update criteria.
type ReservationDetailsMassUpdateCriteria struct {
	// Unique ID of reservations to be updated.
	ReservationIds []UniqueIDType `json:"reservationIds,omitempty"`
	ExpectedTimes *ResExpectedTimesType `json:"expectedTimes,omitempty"`
	// Market code of the reservation.
	MarketCode *string `json:"marketCode,omitempty"`
	// Source code of the reservation.
	SourceCode *string `json:"sourceCode,omitempty"`
	// Classifies the medium(Channel field on reservation screen) through which the reservation is made.
	BookingMedium *string `json:"bookingMedium,omitempty"`
	AdvanceCheckIn *AdvanceCheckInType `json:"advanceCheckIn,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
}

// NewReservationDetailsMassUpdateCriteria instantiates a new ReservationDetailsMassUpdateCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationDetailsMassUpdateCriteria() *ReservationDetailsMassUpdateCriteria {
	this := ReservationDetailsMassUpdateCriteria{}
	return &this
}

// NewReservationDetailsMassUpdateCriteriaWithDefaults instantiates a new ReservationDetailsMassUpdateCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationDetailsMassUpdateCriteriaWithDefaults() *ReservationDetailsMassUpdateCriteria {
	this := ReservationDetailsMassUpdateCriteria{}
	return &this
}

// GetReservationIds returns the ReservationIds field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetReservationIds() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIds) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIds
}

// GetReservationIdsOk returns a tuple with the ReservationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetReservationIdsOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIds) {
		return nil, false
	}
	return o.ReservationIds, true
}

// HasReservationIds returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasReservationIds() bool {
	if o != nil && !IsNil(o.ReservationIds) {
		return true
	}

	return false
}

// SetReservationIds gets a reference to the given []UniqueIDType and assigns it to the ReservationIds field.
func (o *ReservationDetailsMassUpdateCriteria) SetReservationIds(v []UniqueIDType) {
	o.ReservationIds = v
}

// GetExpectedTimes returns the ExpectedTimes field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetExpectedTimes() ResExpectedTimesType {
	if o == nil || IsNil(o.ExpectedTimes) {
		var ret ResExpectedTimesType
		return ret
	}
	return *o.ExpectedTimes
}

// GetExpectedTimesOk returns a tuple with the ExpectedTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetExpectedTimesOk() (*ResExpectedTimesType, bool) {
	if o == nil || IsNil(o.ExpectedTimes) {
		return nil, false
	}
	return o.ExpectedTimes, true
}

// HasExpectedTimes returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasExpectedTimes() bool {
	if o != nil && !IsNil(o.ExpectedTimes) {
		return true
	}

	return false
}

// SetExpectedTimes gets a reference to the given ResExpectedTimesType and assigns it to the ExpectedTimes field.
func (o *ReservationDetailsMassUpdateCriteria) SetExpectedTimes(v ResExpectedTimesType) {
	o.ExpectedTimes = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *ReservationDetailsMassUpdateCriteria) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *ReservationDetailsMassUpdateCriteria) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetBookingMedium returns the BookingMedium field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetBookingMedium() string {
	if o == nil || IsNil(o.BookingMedium) {
		var ret string
		return ret
	}
	return *o.BookingMedium
}

// GetBookingMediumOk returns a tuple with the BookingMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetBookingMediumOk() (*string, bool) {
	if o == nil || IsNil(o.BookingMedium) {
		return nil, false
	}
	return o.BookingMedium, true
}

// HasBookingMedium returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasBookingMedium() bool {
	if o != nil && !IsNil(o.BookingMedium) {
		return true
	}

	return false
}

// SetBookingMedium gets a reference to the given string and assigns it to the BookingMedium field.
func (o *ReservationDetailsMassUpdateCriteria) SetBookingMedium(v string) {
	o.BookingMedium = &v
}

// GetAdvanceCheckIn returns the AdvanceCheckIn field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetAdvanceCheckIn() AdvanceCheckInType {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		var ret AdvanceCheckInType
		return ret
	}
	return *o.AdvanceCheckIn
}

// GetAdvanceCheckInOk returns a tuple with the AdvanceCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetAdvanceCheckInOk() (*AdvanceCheckInType, bool) {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		return nil, false
	}
	return o.AdvanceCheckIn, true
}

// HasAdvanceCheckIn returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasAdvanceCheckIn() bool {
	if o != nil && !IsNil(o.AdvanceCheckIn) {
		return true
	}

	return false
}

// SetAdvanceCheckIn gets a reference to the given AdvanceCheckInType and assigns it to the AdvanceCheckIn field.
func (o *ReservationDetailsMassUpdateCriteria) SetAdvanceCheckIn(v AdvanceCheckInType) {
	o.AdvanceCheckIn = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *ReservationDetailsMassUpdateCriteria) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDetailsMassUpdateCriteria) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *ReservationDetailsMassUpdateCriteria) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *ReservationDetailsMassUpdateCriteria) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

func (o ReservationDetailsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationDetailsMassUpdateCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIds) {
		toSerialize["reservationIds"] = o.ReservationIds
	}
	if !IsNil(o.ExpectedTimes) {
		toSerialize["expectedTimes"] = o.ExpectedTimes
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.BookingMedium) {
		toSerialize["bookingMedium"] = o.BookingMedium
	}
	if !IsNil(o.AdvanceCheckIn) {
		toSerialize["advanceCheckIn"] = o.AdvanceCheckIn
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	return toSerialize, nil
}

type NullableReservationDetailsMassUpdateCriteria struct {
	value *ReservationDetailsMassUpdateCriteria
	isSet bool
}

func (v NullableReservationDetailsMassUpdateCriteria) Get() *ReservationDetailsMassUpdateCriteria {
	return v.value
}

func (v *NullableReservationDetailsMassUpdateCriteria) Set(val *ReservationDetailsMassUpdateCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationDetailsMassUpdateCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationDetailsMassUpdateCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationDetailsMassUpdateCriteria(val *ReservationDetailsMassUpdateCriteria) *NullableReservationDetailsMassUpdateCriteria {
	return &NullableReservationDetailsMassUpdateCriteria{value: val, isSet: true}
}

func (v NullableReservationDetailsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationDetailsMassUpdateCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


