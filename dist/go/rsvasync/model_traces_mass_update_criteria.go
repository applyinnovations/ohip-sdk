/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the TracesMassUpdateCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TracesMassUpdateCriteria{}

// TracesMassUpdateCriteria Reservation Traces Mass Update criteria.
type TracesMassUpdateCriteria struct {
	// Unique ID of reservations to be updated.
	ReservationIds []UniqueIDType `json:"reservationIds,omitempty"`
	TimeInfo *TraceTimeType `json:"timeInfo,omitempty"`
	// Indicates the Department code.
	DepartmentIds []string `json:"departmentIds,omitempty"`
	// The information this trace contains.
	TraceText *string `json:"traceText,omitempty"`
	Frequency *MassUpdateTracesFrequencyType `json:"frequency,omitempty"`
}

// NewTracesMassUpdateCriteria instantiates a new TracesMassUpdateCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTracesMassUpdateCriteria() *TracesMassUpdateCriteria {
	this := TracesMassUpdateCriteria{}
	return &this
}

// NewTracesMassUpdateCriteriaWithDefaults instantiates a new TracesMassUpdateCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTracesMassUpdateCriteriaWithDefaults() *TracesMassUpdateCriteria {
	this := TracesMassUpdateCriteria{}
	return &this
}

// GetReservationIds returns the ReservationIds field value if set, zero value otherwise.
func (o *TracesMassUpdateCriteria) GetReservationIds() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIds) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIds
}

// GetReservationIdsOk returns a tuple with the ReservationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TracesMassUpdateCriteria) GetReservationIdsOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIds) {
		return nil, false
	}
	return o.ReservationIds, true
}

// HasReservationIds returns a boolean if a field has been set.
func (o *TracesMassUpdateCriteria) HasReservationIds() bool {
	if o != nil && !IsNil(o.ReservationIds) {
		return true
	}

	return false
}

// SetReservationIds gets a reference to the given []UniqueIDType and assigns it to the ReservationIds field.
func (o *TracesMassUpdateCriteria) SetReservationIds(v []UniqueIDType) {
	o.ReservationIds = v
}

// GetTimeInfo returns the TimeInfo field value if set, zero value otherwise.
func (o *TracesMassUpdateCriteria) GetTimeInfo() TraceTimeType {
	if o == nil || IsNil(o.TimeInfo) {
		var ret TraceTimeType
		return ret
	}
	return *o.TimeInfo
}

// GetTimeInfoOk returns a tuple with the TimeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TracesMassUpdateCriteria) GetTimeInfoOk() (*TraceTimeType, bool) {
	if o == nil || IsNil(o.TimeInfo) {
		return nil, false
	}
	return o.TimeInfo, true
}

// HasTimeInfo returns a boolean if a field has been set.
func (o *TracesMassUpdateCriteria) HasTimeInfo() bool {
	if o != nil && !IsNil(o.TimeInfo) {
		return true
	}

	return false
}

// SetTimeInfo gets a reference to the given TraceTimeType and assigns it to the TimeInfo field.
func (o *TracesMassUpdateCriteria) SetTimeInfo(v TraceTimeType) {
	o.TimeInfo = &v
}

// GetDepartmentIds returns the DepartmentIds field value if set, zero value otherwise.
func (o *TracesMassUpdateCriteria) GetDepartmentIds() []string {
	if o == nil || IsNil(o.DepartmentIds) {
		var ret []string
		return ret
	}
	return o.DepartmentIds
}

// GetDepartmentIdsOk returns a tuple with the DepartmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TracesMassUpdateCriteria) GetDepartmentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DepartmentIds) {
		return nil, false
	}
	return o.DepartmentIds, true
}

// HasDepartmentIds returns a boolean if a field has been set.
func (o *TracesMassUpdateCriteria) HasDepartmentIds() bool {
	if o != nil && !IsNil(o.DepartmentIds) {
		return true
	}

	return false
}

// SetDepartmentIds gets a reference to the given []string and assigns it to the DepartmentIds field.
func (o *TracesMassUpdateCriteria) SetDepartmentIds(v []string) {
	o.DepartmentIds = v
}

// GetTraceText returns the TraceText field value if set, zero value otherwise.
func (o *TracesMassUpdateCriteria) GetTraceText() string {
	if o == nil || IsNil(o.TraceText) {
		var ret string
		return ret
	}
	return *o.TraceText
}

// GetTraceTextOk returns a tuple with the TraceText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TracesMassUpdateCriteria) GetTraceTextOk() (*string, bool) {
	if o == nil || IsNil(o.TraceText) {
		return nil, false
	}
	return o.TraceText, true
}

// HasTraceText returns a boolean if a field has been set.
func (o *TracesMassUpdateCriteria) HasTraceText() bool {
	if o != nil && !IsNil(o.TraceText) {
		return true
	}

	return false
}

// SetTraceText gets a reference to the given string and assigns it to the TraceText field.
func (o *TracesMassUpdateCriteria) SetTraceText(v string) {
	o.TraceText = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *TracesMassUpdateCriteria) GetFrequency() MassUpdateTracesFrequencyType {
	if o == nil || IsNil(o.Frequency) {
		var ret MassUpdateTracesFrequencyType
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TracesMassUpdateCriteria) GetFrequencyOk() (*MassUpdateTracesFrequencyType, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *TracesMassUpdateCriteria) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given MassUpdateTracesFrequencyType and assigns it to the Frequency field.
func (o *TracesMassUpdateCriteria) SetFrequency(v MassUpdateTracesFrequencyType) {
	o.Frequency = &v
}

func (o TracesMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TracesMassUpdateCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIds) {
		toSerialize["reservationIds"] = o.ReservationIds
	}
	if !IsNil(o.TimeInfo) {
		toSerialize["timeInfo"] = o.TimeInfo
	}
	if !IsNil(o.DepartmentIds) {
		toSerialize["departmentIds"] = o.DepartmentIds
	}
	if !IsNil(o.TraceText) {
		toSerialize["traceText"] = o.TraceText
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	return toSerialize, nil
}

type NullableTracesMassUpdateCriteria struct {
	value *TracesMassUpdateCriteria
	isSet bool
}

func (v NullableTracesMassUpdateCriteria) Get() *TracesMassUpdateCriteria {
	return v.value
}

func (v *NullableTracesMassUpdateCriteria) Set(val *TracesMassUpdateCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableTracesMassUpdateCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableTracesMassUpdateCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTracesMassUpdateCriteria(val *TracesMassUpdateCriteria) *NullableTracesMassUpdateCriteria {
	return &NullableTracesMassUpdateCriteria{value: val, isSet: true}
}

func (v NullableTracesMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTracesMassUpdateCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


