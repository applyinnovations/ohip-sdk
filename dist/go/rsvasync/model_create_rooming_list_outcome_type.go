/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the CreateRoomingListOutcomeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoomingListOutcomeType{}

// CreateRoomingListOutcomeType Response object for outcome of create rooming list reservations with Success or Fail status and Errors related to this operation.
type CreateRoomingListOutcomeType struct {
	// Unique Reservation Id
	ReservationId *float32 `json:"reservationId,omitempty"`
	// Sequential number of an individual reservation in rooming list.
	ReservationSeqNo *int32 `json:"reservationSeqNo,omitempty"`
	// Guest's Full display name.
	GuestFullName *string `json:"guestFullName,omitempty"`
	// 
	RoomType *string `json:"roomType,omitempty"`
	// Display the Arrival date of the guest.
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	// Display the Departure date of the guest.
	DepartureDate *string `json:"departureDate,omitempty"`
	// Create Status.
	CreateStatus *string `json:"createStatus,omitempty"`
	// Unique Confirmation number
	ConfirmationNo *float32 `json:"confirmationNo,omitempty"`
	// Unique profile Id
	ProfileNameId *float32 `json:"profileNameId,omitempty"`
	// Status messages of create rooming list
	OutcomeMessages map[string]interface{} `json:"outcomeMessages,omitempty"`
}

// NewCreateRoomingListOutcomeType instantiates a new CreateRoomingListOutcomeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoomingListOutcomeType() *CreateRoomingListOutcomeType {
	this := CreateRoomingListOutcomeType{}
	return &this
}

// NewCreateRoomingListOutcomeTypeWithDefaults instantiates a new CreateRoomingListOutcomeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoomingListOutcomeTypeWithDefaults() *CreateRoomingListOutcomeType {
	this := CreateRoomingListOutcomeType{}
	return &this
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetReservationId() float32 {
	if o == nil || IsNil(o.ReservationId) {
		var ret float32
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetReservationIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given float32 and assigns it to the ReservationId field.
func (o *CreateRoomingListOutcomeType) SetReservationId(v float32) {
	o.ReservationId = &v
}

// GetReservationSeqNo returns the ReservationSeqNo field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetReservationSeqNo() int32 {
	if o == nil || IsNil(o.ReservationSeqNo) {
		var ret int32
		return ret
	}
	return *o.ReservationSeqNo
}

// GetReservationSeqNoOk returns a tuple with the ReservationSeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetReservationSeqNoOk() (*int32, bool) {
	if o == nil || IsNil(o.ReservationSeqNo) {
		return nil, false
	}
	return o.ReservationSeqNo, true
}

// HasReservationSeqNo returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasReservationSeqNo() bool {
	if o != nil && !IsNil(o.ReservationSeqNo) {
		return true
	}

	return false
}

// SetReservationSeqNo gets a reference to the given int32 and assigns it to the ReservationSeqNo field.
func (o *CreateRoomingListOutcomeType) SetReservationSeqNo(v int32) {
	o.ReservationSeqNo = &v
}

// GetGuestFullName returns the GuestFullName field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetGuestFullName() string {
	if o == nil || IsNil(o.GuestFullName) {
		var ret string
		return ret
	}
	return *o.GuestFullName
}

// GetGuestFullNameOk returns a tuple with the GuestFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetGuestFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFullName) {
		return nil, false
	}
	return o.GuestFullName, true
}

// HasGuestFullName returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasGuestFullName() bool {
	if o != nil && !IsNil(o.GuestFullName) {
		return true
	}

	return false
}

// SetGuestFullName gets a reference to the given string and assigns it to the GuestFullName field.
func (o *CreateRoomingListOutcomeType) SetGuestFullName(v string) {
	o.GuestFullName = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *CreateRoomingListOutcomeType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *CreateRoomingListOutcomeType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *CreateRoomingListOutcomeType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetCreateStatus returns the CreateStatus field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetCreateStatus() string {
	if o == nil || IsNil(o.CreateStatus) {
		var ret string
		return ret
	}
	return *o.CreateStatus
}

// GetCreateStatusOk returns a tuple with the CreateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetCreateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CreateStatus) {
		return nil, false
	}
	return o.CreateStatus, true
}

// HasCreateStatus returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasCreateStatus() bool {
	if o != nil && !IsNil(o.CreateStatus) {
		return true
	}

	return false
}

// SetCreateStatus gets a reference to the given string and assigns it to the CreateStatus field.
func (o *CreateRoomingListOutcomeType) SetCreateStatus(v string) {
	o.CreateStatus = &v
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetConfirmationNo() float32 {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret float32
		return ret
	}
	return *o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetConfirmationNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given float32 and assigns it to the ConfirmationNo field.
func (o *CreateRoomingListOutcomeType) SetConfirmationNo(v float32) {
	o.ConfirmationNo = &v
}

// GetProfileNameId returns the ProfileNameId field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetProfileNameId() float32 {
	if o == nil || IsNil(o.ProfileNameId) {
		var ret float32
		return ret
	}
	return *o.ProfileNameId
}

// GetProfileNameIdOk returns a tuple with the ProfileNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetProfileNameIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ProfileNameId) {
		return nil, false
	}
	return o.ProfileNameId, true
}

// HasProfileNameId returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasProfileNameId() bool {
	if o != nil && !IsNil(o.ProfileNameId) {
		return true
	}

	return false
}

// SetProfileNameId gets a reference to the given float32 and assigns it to the ProfileNameId field.
func (o *CreateRoomingListOutcomeType) SetProfileNameId(v float32) {
	o.ProfileNameId = &v
}

// GetOutcomeMessages returns the OutcomeMessages field value if set, zero value otherwise.
func (o *CreateRoomingListOutcomeType) GetOutcomeMessages() map[string]interface{} {
	if o == nil || IsNil(o.OutcomeMessages) {
		var ret map[string]interface{}
		return ret
	}
	return o.OutcomeMessages
}

// GetOutcomeMessagesOk returns a tuple with the OutcomeMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoomingListOutcomeType) GetOutcomeMessagesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OutcomeMessages) {
		return map[string]interface{}{}, false
	}
	return o.OutcomeMessages, true
}

// HasOutcomeMessages returns a boolean if a field has been set.
func (o *CreateRoomingListOutcomeType) HasOutcomeMessages() bool {
	if o != nil && !IsNil(o.OutcomeMessages) {
		return true
	}

	return false
}

// SetOutcomeMessages gets a reference to the given map[string]interface{} and assigns it to the OutcomeMessages field.
func (o *CreateRoomingListOutcomeType) SetOutcomeMessages(v map[string]interface{}) {
	o.OutcomeMessages = v
}

func (o CreateRoomingListOutcomeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoomingListOutcomeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationSeqNo) {
		toSerialize["reservationSeqNo"] = o.ReservationSeqNo
	}
	if !IsNil(o.GuestFullName) {
		toSerialize["guestFullName"] = o.GuestFullName
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.CreateStatus) {
		toSerialize["createStatus"] = o.CreateStatus
	}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.ProfileNameId) {
		toSerialize["profileNameId"] = o.ProfileNameId
	}
	if !IsNil(o.OutcomeMessages) {
		toSerialize["outcomeMessages"] = o.OutcomeMessages
	}
	return toSerialize, nil
}

type NullableCreateRoomingListOutcomeType struct {
	value *CreateRoomingListOutcomeType
	isSet bool
}

func (v NullableCreateRoomingListOutcomeType) Get() *CreateRoomingListOutcomeType {
	return v.value
}

func (v *NullableCreateRoomingListOutcomeType) Set(val *CreateRoomingListOutcomeType) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoomingListOutcomeType) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoomingListOutcomeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoomingListOutcomeType(val *CreateRoomingListOutcomeType) *NullableCreateRoomingListOutcomeType {
	return &NullableCreateRoomingListOutcomeType{value: val, isSet: true}
}

func (v NullableCreateRoomingListOutcomeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoomingListOutcomeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


