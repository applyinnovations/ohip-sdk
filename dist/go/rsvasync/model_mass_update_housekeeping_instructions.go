/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the MassUpdateHousekeepingInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassUpdateHousekeepingInstructions{}

// MassUpdateHousekeepingInstructions Mass update housekeeping instructions criteria.
type MassUpdateHousekeepingInstructions struct {
	// Expected start time for housekeeping task(s) in 24 hour format.
	ExpectedServiceTime *string `json:"expectedServiceTime,omitempty"`
	// Indicates if the current expected service time is to be removed for selected reservations.
	ClearCurrentExpectedServiceTime *bool `json:"clearCurrentExpectedServiceTime,omitempty"`
	// Indicates whether cleaning priority is to be given to the reservation room.
	CleaningPriority *bool `json:"cleaningPriority,omitempty"`
	// Indicates whether guest wants turndown facility or not.
	TurndownRequested *bool `json:"turndownRequested,omitempty"`
	// Housekeeping instructions for the room.
	Instructions *string `json:"instructions,omitempty"`
}

// NewMassUpdateHousekeepingInstructions instantiates a new MassUpdateHousekeepingInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassUpdateHousekeepingInstructions() *MassUpdateHousekeepingInstructions {
	this := MassUpdateHousekeepingInstructions{}
	var clearCurrentExpectedServiceTime bool = false
	this.ClearCurrentExpectedServiceTime = &clearCurrentExpectedServiceTime
	return &this
}

// NewMassUpdateHousekeepingInstructionsWithDefaults instantiates a new MassUpdateHousekeepingInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassUpdateHousekeepingInstructionsWithDefaults() *MassUpdateHousekeepingInstructions {
	this := MassUpdateHousekeepingInstructions{}
	var clearCurrentExpectedServiceTime bool = false
	this.ClearCurrentExpectedServiceTime = &clearCurrentExpectedServiceTime
	return &this
}

// GetExpectedServiceTime returns the ExpectedServiceTime field value if set, zero value otherwise.
func (o *MassUpdateHousekeepingInstructions) GetExpectedServiceTime() string {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		var ret string
		return ret
	}
	return *o.ExpectedServiceTime
}

// GetExpectedServiceTimeOk returns a tuple with the ExpectedServiceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateHousekeepingInstructions) GetExpectedServiceTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		return nil, false
	}
	return o.ExpectedServiceTime, true
}

// HasExpectedServiceTime returns a boolean if a field has been set.
func (o *MassUpdateHousekeepingInstructions) HasExpectedServiceTime() bool {
	if o != nil && !IsNil(o.ExpectedServiceTime) {
		return true
	}

	return false
}

// SetExpectedServiceTime gets a reference to the given string and assigns it to the ExpectedServiceTime field.
func (o *MassUpdateHousekeepingInstructions) SetExpectedServiceTime(v string) {
	o.ExpectedServiceTime = &v
}

// GetClearCurrentExpectedServiceTime returns the ClearCurrentExpectedServiceTime field value if set, zero value otherwise.
func (o *MassUpdateHousekeepingInstructions) GetClearCurrentExpectedServiceTime() bool {
	if o == nil || IsNil(o.ClearCurrentExpectedServiceTime) {
		var ret bool
		return ret
	}
	return *o.ClearCurrentExpectedServiceTime
}

// GetClearCurrentExpectedServiceTimeOk returns a tuple with the ClearCurrentExpectedServiceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateHousekeepingInstructions) GetClearCurrentExpectedServiceTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.ClearCurrentExpectedServiceTime) {
		return nil, false
	}
	return o.ClearCurrentExpectedServiceTime, true
}

// HasClearCurrentExpectedServiceTime returns a boolean if a field has been set.
func (o *MassUpdateHousekeepingInstructions) HasClearCurrentExpectedServiceTime() bool {
	if o != nil && !IsNil(o.ClearCurrentExpectedServiceTime) {
		return true
	}

	return false
}

// SetClearCurrentExpectedServiceTime gets a reference to the given bool and assigns it to the ClearCurrentExpectedServiceTime field.
func (o *MassUpdateHousekeepingInstructions) SetClearCurrentExpectedServiceTime(v bool) {
	o.ClearCurrentExpectedServiceTime = &v
}

// GetCleaningPriority returns the CleaningPriority field value if set, zero value otherwise.
func (o *MassUpdateHousekeepingInstructions) GetCleaningPriority() bool {
	if o == nil || IsNil(o.CleaningPriority) {
		var ret bool
		return ret
	}
	return *o.CleaningPriority
}

// GetCleaningPriorityOk returns a tuple with the CleaningPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateHousekeepingInstructions) GetCleaningPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.CleaningPriority) {
		return nil, false
	}
	return o.CleaningPriority, true
}

// HasCleaningPriority returns a boolean if a field has been set.
func (o *MassUpdateHousekeepingInstructions) HasCleaningPriority() bool {
	if o != nil && !IsNil(o.CleaningPriority) {
		return true
	}

	return false
}

// SetCleaningPriority gets a reference to the given bool and assigns it to the CleaningPriority field.
func (o *MassUpdateHousekeepingInstructions) SetCleaningPriority(v bool) {
	o.CleaningPriority = &v
}

// GetTurndownRequested returns the TurndownRequested field value if set, zero value otherwise.
func (o *MassUpdateHousekeepingInstructions) GetTurndownRequested() bool {
	if o == nil || IsNil(o.TurndownRequested) {
		var ret bool
		return ret
	}
	return *o.TurndownRequested
}

// GetTurndownRequestedOk returns a tuple with the TurndownRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateHousekeepingInstructions) GetTurndownRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.TurndownRequested) {
		return nil, false
	}
	return o.TurndownRequested, true
}

// HasTurndownRequested returns a boolean if a field has been set.
func (o *MassUpdateHousekeepingInstructions) HasTurndownRequested() bool {
	if o != nil && !IsNil(o.TurndownRequested) {
		return true
	}

	return false
}

// SetTurndownRequested gets a reference to the given bool and assigns it to the TurndownRequested field.
func (o *MassUpdateHousekeepingInstructions) SetTurndownRequested(v bool) {
	o.TurndownRequested = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *MassUpdateHousekeepingInstructions) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateHousekeepingInstructions) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *MassUpdateHousekeepingInstructions) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *MassUpdateHousekeepingInstructions) SetInstructions(v string) {
	o.Instructions = &v
}

func (o MassUpdateHousekeepingInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassUpdateHousekeepingInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpectedServiceTime) {
		toSerialize["expectedServiceTime"] = o.ExpectedServiceTime
	}
	if !IsNil(o.ClearCurrentExpectedServiceTime) {
		toSerialize["clearCurrentExpectedServiceTime"] = o.ClearCurrentExpectedServiceTime
	}
	if !IsNil(o.CleaningPriority) {
		toSerialize["cleaningPriority"] = o.CleaningPriority
	}
	if !IsNil(o.TurndownRequested) {
		toSerialize["turndownRequested"] = o.TurndownRequested
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	return toSerialize, nil
}

type NullableMassUpdateHousekeepingInstructions struct {
	value *MassUpdateHousekeepingInstructions
	isSet bool
}

func (v NullableMassUpdateHousekeepingInstructions) Get() *MassUpdateHousekeepingInstructions {
	return v.value
}

func (v *NullableMassUpdateHousekeepingInstructions) Set(val *MassUpdateHousekeepingInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableMassUpdateHousekeepingInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableMassUpdateHousekeepingInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassUpdateHousekeepingInstructions(val *MassUpdateHousekeepingInstructions) *NullableMassUpdateHousekeepingInstructions {
	return &NullableMassUpdateHousekeepingInstructions{value: val, isSet: true}
}

func (v NullableMassUpdateHousekeepingInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassUpdateHousekeepingInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


