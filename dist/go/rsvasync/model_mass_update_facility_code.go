/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the MassUpdateFacilityCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassUpdateFacilityCode{}

// MassUpdateFacilityCode Housekeeping facility code, and its quantity.
type MassUpdateFacilityCode struct {
	// Signifies the quantity.
	Quantity *int32 `json:"quantity,omitempty"`
	// Housekeeping facility code.
	Code *string `json:"code,omitempty"`
}

// NewMassUpdateFacilityCode instantiates a new MassUpdateFacilityCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassUpdateFacilityCode() *MassUpdateFacilityCode {
	this := MassUpdateFacilityCode{}
	return &this
}

// NewMassUpdateFacilityCodeWithDefaults instantiates a new MassUpdateFacilityCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassUpdateFacilityCodeWithDefaults() *MassUpdateFacilityCode {
	this := MassUpdateFacilityCode{}
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *MassUpdateFacilityCode) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateFacilityCode) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *MassUpdateFacilityCode) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *MassUpdateFacilityCode) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *MassUpdateFacilityCode) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateFacilityCode) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *MassUpdateFacilityCode) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *MassUpdateFacilityCode) SetCode(v string) {
	o.Code = &v
}

func (o MassUpdateFacilityCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassUpdateFacilityCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return toSerialize, nil
}

type NullableMassUpdateFacilityCode struct {
	value *MassUpdateFacilityCode
	isSet bool
}

func (v NullableMassUpdateFacilityCode) Get() *MassUpdateFacilityCode {
	return v.value
}

func (v *NullableMassUpdateFacilityCode) Set(val *MassUpdateFacilityCode) {
	v.value = val
	v.isSet = true
}

func (v NullableMassUpdateFacilityCode) IsSet() bool {
	return v.isSet
}

func (v *NullableMassUpdateFacilityCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassUpdateFacilityCode(val *MassUpdateFacilityCode) *NullableMassUpdateFacilityCode {
	return &NullableMassUpdateFacilityCode{value: val, isSet: true}
}

func (v NullableMassUpdateFacilityCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassUpdateFacilityCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


