/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the MassUpdateAddressInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassUpdateAddressInfoType{}

// MassUpdateAddressInfoType Provides address information.
type MassUpdateAddressInfoType struct {
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	Id *string `json:"id,omitempty"`
	// A reference to the type of object defined by the UniqueID element.
	Type *string `json:"type,omitempty"`
	// Used to identify the source of the identifier (e.g., IATA, ABTA).
	IdContext *string `json:"idContext,omitempty"`
}

// NewMassUpdateAddressInfoType instantiates a new MassUpdateAddressInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassUpdateAddressInfoType() *MassUpdateAddressInfoType {
	this := MassUpdateAddressInfoType{}
	return &this
}

// NewMassUpdateAddressInfoTypeWithDefaults instantiates a new MassUpdateAddressInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassUpdateAddressInfoTypeWithDefaults() *MassUpdateAddressInfoType {
	this := MassUpdateAddressInfoType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MassUpdateAddressInfoType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateAddressInfoType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MassUpdateAddressInfoType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MassUpdateAddressInfoType) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MassUpdateAddressInfoType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateAddressInfoType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MassUpdateAddressInfoType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MassUpdateAddressInfoType) SetType(v string) {
	o.Type = &v
}

// GetIdContext returns the IdContext field value if set, zero value otherwise.
func (o *MassUpdateAddressInfoType) GetIdContext() string {
	if o == nil || IsNil(o.IdContext) {
		var ret string
		return ret
	}
	return *o.IdContext
}

// GetIdContextOk returns a tuple with the IdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateAddressInfoType) GetIdContextOk() (*string, bool) {
	if o == nil || IsNil(o.IdContext) {
		return nil, false
	}
	return o.IdContext, true
}

// HasIdContext returns a boolean if a field has been set.
func (o *MassUpdateAddressInfoType) HasIdContext() bool {
	if o != nil && !IsNil(o.IdContext) {
		return true
	}

	return false
}

// SetIdContext gets a reference to the given string and assigns it to the IdContext field.
func (o *MassUpdateAddressInfoType) SetIdContext(v string) {
	o.IdContext = &v
}

func (o MassUpdateAddressInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassUpdateAddressInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IdContext) {
		toSerialize["idContext"] = o.IdContext
	}
	return toSerialize, nil
}

type NullableMassUpdateAddressInfoType struct {
	value *MassUpdateAddressInfoType
	isSet bool
}

func (v NullableMassUpdateAddressInfoType) Get() *MassUpdateAddressInfoType {
	return v.value
}

func (v *NullableMassUpdateAddressInfoType) Set(val *MassUpdateAddressInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableMassUpdateAddressInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableMassUpdateAddressInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassUpdateAddressInfoType(val *MassUpdateAddressInfoType) *NullableMassUpdateAddressInfoType {
	return &NullableMassUpdateAddressInfoType{value: val, isSet: true}
}

func (v NullableMassUpdateAddressInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassUpdateAddressInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


