/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the TransportationsMassUpdateCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportationsMassUpdateCriteria{}

// TransportationsMassUpdateCriteria Reservation Transportations Mass Update criteria.
type TransportationsMassUpdateCriteria struct {
	// Unique ID of reservations to be updated.
	ReservationIds []UniqueIDType `json:"reservationIds,omitempty"`
	ArrivalTransport *MassTransportInfoType `json:"arrivalTransport,omitempty"`
	DepartureTransport *MassTransportInfoType `json:"departureTransport,omitempty"`
}

// NewTransportationsMassUpdateCriteria instantiates a new TransportationsMassUpdateCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportationsMassUpdateCriteria() *TransportationsMassUpdateCriteria {
	this := TransportationsMassUpdateCriteria{}
	return &this
}

// NewTransportationsMassUpdateCriteriaWithDefaults instantiates a new TransportationsMassUpdateCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportationsMassUpdateCriteriaWithDefaults() *TransportationsMassUpdateCriteria {
	this := TransportationsMassUpdateCriteria{}
	return &this
}

// GetReservationIds returns the ReservationIds field value if set, zero value otherwise.
func (o *TransportationsMassUpdateCriteria) GetReservationIds() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIds) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIds
}

// GetReservationIdsOk returns a tuple with the ReservationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportationsMassUpdateCriteria) GetReservationIdsOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIds) {
		return nil, false
	}
	return o.ReservationIds, true
}

// HasReservationIds returns a boolean if a field has been set.
func (o *TransportationsMassUpdateCriteria) HasReservationIds() bool {
	if o != nil && !IsNil(o.ReservationIds) {
		return true
	}

	return false
}

// SetReservationIds gets a reference to the given []UniqueIDType and assigns it to the ReservationIds field.
func (o *TransportationsMassUpdateCriteria) SetReservationIds(v []UniqueIDType) {
	o.ReservationIds = v
}

// GetArrivalTransport returns the ArrivalTransport field value if set, zero value otherwise.
func (o *TransportationsMassUpdateCriteria) GetArrivalTransport() MassTransportInfoType {
	if o == nil || IsNil(o.ArrivalTransport) {
		var ret MassTransportInfoType
		return ret
	}
	return *o.ArrivalTransport
}

// GetArrivalTransportOk returns a tuple with the ArrivalTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportationsMassUpdateCriteria) GetArrivalTransportOk() (*MassTransportInfoType, bool) {
	if o == nil || IsNil(o.ArrivalTransport) {
		return nil, false
	}
	return o.ArrivalTransport, true
}

// HasArrivalTransport returns a boolean if a field has been set.
func (o *TransportationsMassUpdateCriteria) HasArrivalTransport() bool {
	if o != nil && !IsNil(o.ArrivalTransport) {
		return true
	}

	return false
}

// SetArrivalTransport gets a reference to the given MassTransportInfoType and assigns it to the ArrivalTransport field.
func (o *TransportationsMassUpdateCriteria) SetArrivalTransport(v MassTransportInfoType) {
	o.ArrivalTransport = &v
}

// GetDepartureTransport returns the DepartureTransport field value if set, zero value otherwise.
func (o *TransportationsMassUpdateCriteria) GetDepartureTransport() MassTransportInfoType {
	if o == nil || IsNil(o.DepartureTransport) {
		var ret MassTransportInfoType
		return ret
	}
	return *o.DepartureTransport
}

// GetDepartureTransportOk returns a tuple with the DepartureTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportationsMassUpdateCriteria) GetDepartureTransportOk() (*MassTransportInfoType, bool) {
	if o == nil || IsNil(o.DepartureTransport) {
		return nil, false
	}
	return o.DepartureTransport, true
}

// HasDepartureTransport returns a boolean if a field has been set.
func (o *TransportationsMassUpdateCriteria) HasDepartureTransport() bool {
	if o != nil && !IsNil(o.DepartureTransport) {
		return true
	}

	return false
}

// SetDepartureTransport gets a reference to the given MassTransportInfoType and assigns it to the DepartureTransport field.
func (o *TransportationsMassUpdateCriteria) SetDepartureTransport(v MassTransportInfoType) {
	o.DepartureTransport = &v
}

func (o TransportationsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportationsMassUpdateCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIds) {
		toSerialize["reservationIds"] = o.ReservationIds
	}
	if !IsNil(o.ArrivalTransport) {
		toSerialize["arrivalTransport"] = o.ArrivalTransport
	}
	if !IsNil(o.DepartureTransport) {
		toSerialize["departureTransport"] = o.DepartureTransport
	}
	return toSerialize, nil
}

type NullableTransportationsMassUpdateCriteria struct {
	value *TransportationsMassUpdateCriteria
	isSet bool
}

func (v NullableTransportationsMassUpdateCriteria) Get() *TransportationsMassUpdateCriteria {
	return v.value
}

func (v *NullableTransportationsMassUpdateCriteria) Set(val *TransportationsMassUpdateCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportationsMassUpdateCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportationsMassUpdateCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportationsMassUpdateCriteria(val *TransportationsMassUpdateCriteria) *NullableTransportationsMassUpdateCriteria {
	return &NullableTransportationsMassUpdateCriteria{value: val, isSet: true}
}

func (v NullableTransportationsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportationsMassUpdateCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


