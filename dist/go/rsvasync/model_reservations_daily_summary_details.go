/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the ReservationsDailySummaryDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationsDailySummaryDetails{}

// ReservationsDailySummaryDetails Reservation Daily Summary Details.
type ReservationsDailySummaryDetails struct {
	Reservations []ReservationDailySummaryType `json:"reservations,omitempty"`
}

// NewReservationsDailySummaryDetails instantiates a new ReservationsDailySummaryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationsDailySummaryDetails() *ReservationsDailySummaryDetails {
	this := ReservationsDailySummaryDetails{}
	return &this
}

// NewReservationsDailySummaryDetailsWithDefaults instantiates a new ReservationsDailySummaryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationsDailySummaryDetailsWithDefaults() *ReservationsDailySummaryDetails {
	this := ReservationsDailySummaryDetails{}
	return &this
}

// GetReservations returns the Reservations field value if set, zero value otherwise.
func (o *ReservationsDailySummaryDetails) GetReservations() []ReservationDailySummaryType {
	if o == nil || IsNil(o.Reservations) {
		var ret []ReservationDailySummaryType
		return ret
	}
	return o.Reservations
}

// GetReservationsOk returns a tuple with the Reservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsDailySummaryDetails) GetReservationsOk() ([]ReservationDailySummaryType, bool) {
	if o == nil || IsNil(o.Reservations) {
		return nil, false
	}
	return o.Reservations, true
}

// HasReservations returns a boolean if a field has been set.
func (o *ReservationsDailySummaryDetails) HasReservations() bool {
	if o != nil && !IsNil(o.Reservations) {
		return true
	}

	return false
}

// SetReservations gets a reference to the given []ReservationDailySummaryType and assigns it to the Reservations field.
func (o *ReservationsDailySummaryDetails) SetReservations(v []ReservationDailySummaryType) {
	o.Reservations = v
}

func (o ReservationsDailySummaryDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationsDailySummaryDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reservations) {
		toSerialize["reservations"] = o.Reservations
	}
	return toSerialize, nil
}

type NullableReservationsDailySummaryDetails struct {
	value *ReservationsDailySummaryDetails
	isSet bool
}

func (v NullableReservationsDailySummaryDetails) Get() *ReservationsDailySummaryDetails {
	return v.value
}

func (v *NullableReservationsDailySummaryDetails) Set(val *ReservationsDailySummaryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationsDailySummaryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationsDailySummaryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationsDailySummaryDetails(val *ReservationsDailySummaryDetails) *NullableReservationsDailySummaryDetails {
	return &NullableReservationsDailySummaryDetails{value: val, isSet: true}
}

func (v NullableReservationsDailySummaryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationsDailySummaryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


