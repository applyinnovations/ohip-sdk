/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the RoutingInstructionsMassUpdateCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingInstructionsMassUpdateCriteria{}

// RoutingInstructionsMassUpdateCriteria A routing info object can either be of type Folio OR of type Room with its corresponding object.
type RoutingInstructionsMassUpdateCriteria struct {
	// Unique ID of reservations to be updated.
	ReservationIds []UniqueIDType `json:"reservationIds,omitempty"`
	Folio *RoutingInstructionsMassUpdateCriteriaFolio `json:"folio,omitempty"`
	Room *RoutingInstructionsMassUpdateCriteriaRoom `json:"room,omitempty"`
	// On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
	RefreshFolio *bool `json:"refreshFolio,omitempty"`
}

// NewRoutingInstructionsMassUpdateCriteria instantiates a new RoutingInstructionsMassUpdateCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingInstructionsMassUpdateCriteria() *RoutingInstructionsMassUpdateCriteria {
	this := RoutingInstructionsMassUpdateCriteria{}
	return &this
}

// NewRoutingInstructionsMassUpdateCriteriaWithDefaults instantiates a new RoutingInstructionsMassUpdateCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingInstructionsMassUpdateCriteriaWithDefaults() *RoutingInstructionsMassUpdateCriteria {
	this := RoutingInstructionsMassUpdateCriteria{}
	return &this
}

// GetReservationIds returns the ReservationIds field value if set, zero value otherwise.
func (o *RoutingInstructionsMassUpdateCriteria) GetReservationIds() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIds) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIds
}

// GetReservationIdsOk returns a tuple with the ReservationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsMassUpdateCriteria) GetReservationIdsOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIds) {
		return nil, false
	}
	return o.ReservationIds, true
}

// HasReservationIds returns a boolean if a field has been set.
func (o *RoutingInstructionsMassUpdateCriteria) HasReservationIds() bool {
	if o != nil && !IsNil(o.ReservationIds) {
		return true
	}

	return false
}

// SetReservationIds gets a reference to the given []UniqueIDType and assigns it to the ReservationIds field.
func (o *RoutingInstructionsMassUpdateCriteria) SetReservationIds(v []UniqueIDType) {
	o.ReservationIds = v
}

// GetFolio returns the Folio field value if set, zero value otherwise.
func (o *RoutingInstructionsMassUpdateCriteria) GetFolio() RoutingInstructionsMassUpdateCriteriaFolio {
	if o == nil || IsNil(o.Folio) {
		var ret RoutingInstructionsMassUpdateCriteriaFolio
		return ret
	}
	return *o.Folio
}

// GetFolioOk returns a tuple with the Folio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsMassUpdateCriteria) GetFolioOk() (*RoutingInstructionsMassUpdateCriteriaFolio, bool) {
	if o == nil || IsNil(o.Folio) {
		return nil, false
	}
	return o.Folio, true
}

// HasFolio returns a boolean if a field has been set.
func (o *RoutingInstructionsMassUpdateCriteria) HasFolio() bool {
	if o != nil && !IsNil(o.Folio) {
		return true
	}

	return false
}

// SetFolio gets a reference to the given RoutingInstructionsMassUpdateCriteriaFolio and assigns it to the Folio field.
func (o *RoutingInstructionsMassUpdateCriteria) SetFolio(v RoutingInstructionsMassUpdateCriteriaFolio) {
	o.Folio = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *RoutingInstructionsMassUpdateCriteria) GetRoom() RoutingInstructionsMassUpdateCriteriaRoom {
	if o == nil || IsNil(o.Room) {
		var ret RoutingInstructionsMassUpdateCriteriaRoom
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsMassUpdateCriteria) GetRoomOk() (*RoutingInstructionsMassUpdateCriteriaRoom, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *RoutingInstructionsMassUpdateCriteria) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given RoutingInstructionsMassUpdateCriteriaRoom and assigns it to the Room field.
func (o *RoutingInstructionsMassUpdateCriteria) SetRoom(v RoutingInstructionsMassUpdateCriteriaRoom) {
	o.Room = &v
}

// GetRefreshFolio returns the RefreshFolio field value if set, zero value otherwise.
func (o *RoutingInstructionsMassUpdateCriteria) GetRefreshFolio() bool {
	if o == nil || IsNil(o.RefreshFolio) {
		var ret bool
		return ret
	}
	return *o.RefreshFolio
}

// GetRefreshFolioOk returns a tuple with the RefreshFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsMassUpdateCriteria) GetRefreshFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshFolio) {
		return nil, false
	}
	return o.RefreshFolio, true
}

// HasRefreshFolio returns a boolean if a field has been set.
func (o *RoutingInstructionsMassUpdateCriteria) HasRefreshFolio() bool {
	if o != nil && !IsNil(o.RefreshFolio) {
		return true
	}

	return false
}

// SetRefreshFolio gets a reference to the given bool and assigns it to the RefreshFolio field.
func (o *RoutingInstructionsMassUpdateCriteria) SetRefreshFolio(v bool) {
	o.RefreshFolio = &v
}

func (o RoutingInstructionsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingInstructionsMassUpdateCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIds) {
		toSerialize["reservationIds"] = o.ReservationIds
	}
	if !IsNil(o.Folio) {
		toSerialize["folio"] = o.Folio
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	if !IsNil(o.RefreshFolio) {
		toSerialize["refreshFolio"] = o.RefreshFolio
	}
	return toSerialize, nil
}

type NullableRoutingInstructionsMassUpdateCriteria struct {
	value *RoutingInstructionsMassUpdateCriteria
	isSet bool
}

func (v NullableRoutingInstructionsMassUpdateCriteria) Get() *RoutingInstructionsMassUpdateCriteria {
	return v.value
}

func (v *NullableRoutingInstructionsMassUpdateCriteria) Set(val *RoutingInstructionsMassUpdateCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingInstructionsMassUpdateCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingInstructionsMassUpdateCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingInstructionsMassUpdateCriteria(val *RoutingInstructionsMassUpdateCriteria) *NullableRoutingInstructionsMassUpdateCriteria {
	return &NullableRoutingInstructionsMassUpdateCriteria{value: val, isSet: true}
}

func (v NullableRoutingInstructionsMassUpdateCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingInstructionsMassUpdateCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


