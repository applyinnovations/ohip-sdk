/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the MassUpdateTimeSpanType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassUpdateTimeSpanType{}

// MassUpdateTimeSpanType Allows for a choice in description of the amount of time spanned by this type.
type MassUpdateTimeSpanType struct {
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
}

// NewMassUpdateTimeSpanType instantiates a new MassUpdateTimeSpanType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassUpdateTimeSpanType() *MassUpdateTimeSpanType {
	this := MassUpdateTimeSpanType{}
	return &this
}

// NewMassUpdateTimeSpanTypeWithDefaults instantiates a new MassUpdateTimeSpanType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassUpdateTimeSpanTypeWithDefaults() *MassUpdateTimeSpanType {
	this := MassUpdateTimeSpanType{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *MassUpdateTimeSpanType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateTimeSpanType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *MassUpdateTimeSpanType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *MassUpdateTimeSpanType) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MassUpdateTimeSpanType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateTimeSpanType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MassUpdateTimeSpanType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *MassUpdateTimeSpanType) SetEndDate(v string) {
	o.EndDate = &v
}

func (o MassUpdateTimeSpanType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassUpdateTimeSpanType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableMassUpdateTimeSpanType struct {
	value *MassUpdateTimeSpanType
	isSet bool
}

func (v NullableMassUpdateTimeSpanType) Get() *MassUpdateTimeSpanType {
	return v.value
}

func (v *NullableMassUpdateTimeSpanType) Set(val *MassUpdateTimeSpanType) {
	v.value = val
	v.isSet = true
}

func (v NullableMassUpdateTimeSpanType) IsSet() bool {
	return v.isSet
}

func (v *NullableMassUpdateTimeSpanType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassUpdateTimeSpanType(val *MassUpdateTimeSpanType) *NullableMassUpdateTimeSpanType {
	return &NullableMassUpdateTimeSpanType{value: val, isSet: true}
}

func (v NullableMassUpdateTimeSpanType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassUpdateTimeSpanType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


