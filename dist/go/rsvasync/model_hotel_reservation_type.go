/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the HotelReservationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelReservationType{}

// HotelReservationType The Reservation class contains the current reservation being validated.
type HotelReservationType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// This type contains unique information of external reference.
	ExternalReferences []ExternalReferenceType `json:"externalReferences,omitempty"`
	Shares *HotelReservationsType `json:"shares,omitempty"`
	// List of Notes for the Guest related to the reservation.
	Comments []CommentInfoType `json:"comments,omitempty"`
	// List of Notes for the Guest related to the profile.
	GuestComments []CommentInfoType `json:"guestComments,omitempty"`
	// Collection of shared guest reservations.
	SharedGuests []ResSharedGuestInfoType `json:"sharedGuests,omitempty"`
	RoomStay *RoomStayType `json:"roomStay,omitempty"`
	// Collection of guests associated with the reservation.
	ReservationGuests []ResGuestType `json:"reservationGuests,omitempty"`
	// A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
	ReservationPackages []ReservationPackageType `json:"reservationPackages,omitempty"`
	// Collection of reservation preferences.
	PreferenceCollection []PreferenceTypeType `json:"preferenceCollection,omitempty"`
	ReservationProfiles *HotelReservationTypeReservationProfiles `json:"reservationProfiles,omitempty"`
	ReservationPaymentMethods []ReservationPaymentMethodType `json:"reservationPaymentMethods,omitempty"`
	Cashiering *ResCashieringType `json:"cashiering,omitempty"`
	ExtSystemSync *bool `json:"extSystemSync,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	OverrideBlockRestriction *bool `json:"overrideBlockRestriction,omitempty"`
	AdditionalGuestInfo *ResGuestAdditionalInfoType `json:"additionalGuestInfo,omitempty"`
	// Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation
	OverrideExternalChecks *bool `json:"overrideExternalChecks,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
	// Holds fixed charge detail.
	FixedCharges []FixedChargeType `json:"fixedCharges,omitempty"`
}

// NewHotelReservationType instantiates a new HotelReservationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelReservationType() *HotelReservationType {
	this := HotelReservationType{}
	return &this
}

// NewHotelReservationTypeWithDefaults instantiates a new HotelReservationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelReservationTypeWithDefaults() *HotelReservationType {
	this := HotelReservationType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *HotelReservationType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *HotelReservationType) GetExternalReferences() []ExternalReferenceType {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []ExternalReferenceType
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetExternalReferencesOk() ([]ExternalReferenceType, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *HotelReservationType) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []ExternalReferenceType and assigns it to the ExternalReferences field.
func (o *HotelReservationType) SetExternalReferences(v []ExternalReferenceType) {
	o.ExternalReferences = v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *HotelReservationType) GetShares() HotelReservationsType {
	if o == nil || IsNil(o.Shares) {
		var ret HotelReservationsType
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetSharesOk() (*HotelReservationsType, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *HotelReservationType) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given HotelReservationsType and assigns it to the Shares field.
func (o *HotelReservationType) SetShares(v HotelReservationsType) {
	o.Shares = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *HotelReservationType) GetComments() []CommentInfoType {
	if o == nil || IsNil(o.Comments) {
		var ret []CommentInfoType
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetCommentsOk() ([]CommentInfoType, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *HotelReservationType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []CommentInfoType and assigns it to the Comments field.
func (o *HotelReservationType) SetComments(v []CommentInfoType) {
	o.Comments = v
}

// GetGuestComments returns the GuestComments field value if set, zero value otherwise.
func (o *HotelReservationType) GetGuestComments() []CommentInfoType {
	if o == nil || IsNil(o.GuestComments) {
		var ret []CommentInfoType
		return ret
	}
	return o.GuestComments
}

// GetGuestCommentsOk returns a tuple with the GuestComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetGuestCommentsOk() ([]CommentInfoType, bool) {
	if o == nil || IsNil(o.GuestComments) {
		return nil, false
	}
	return o.GuestComments, true
}

// HasGuestComments returns a boolean if a field has been set.
func (o *HotelReservationType) HasGuestComments() bool {
	if o != nil && !IsNil(o.GuestComments) {
		return true
	}

	return false
}

// SetGuestComments gets a reference to the given []CommentInfoType and assigns it to the GuestComments field.
func (o *HotelReservationType) SetGuestComments(v []CommentInfoType) {
	o.GuestComments = v
}

// GetSharedGuests returns the SharedGuests field value if set, zero value otherwise.
func (o *HotelReservationType) GetSharedGuests() []ResSharedGuestInfoType {
	if o == nil || IsNil(o.SharedGuests) {
		var ret []ResSharedGuestInfoType
		return ret
	}
	return o.SharedGuests
}

// GetSharedGuestsOk returns a tuple with the SharedGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetSharedGuestsOk() ([]ResSharedGuestInfoType, bool) {
	if o == nil || IsNil(o.SharedGuests) {
		return nil, false
	}
	return o.SharedGuests, true
}

// HasSharedGuests returns a boolean if a field has been set.
func (o *HotelReservationType) HasSharedGuests() bool {
	if o != nil && !IsNil(o.SharedGuests) {
		return true
	}

	return false
}

// SetSharedGuests gets a reference to the given []ResSharedGuestInfoType and assigns it to the SharedGuests field.
func (o *HotelReservationType) SetSharedGuests(v []ResSharedGuestInfoType) {
	o.SharedGuests = v
}

// GetRoomStay returns the RoomStay field value if set, zero value otherwise.
func (o *HotelReservationType) GetRoomStay() RoomStayType {
	if o == nil || IsNil(o.RoomStay) {
		var ret RoomStayType
		return ret
	}
	return *o.RoomStay
}

// GetRoomStayOk returns a tuple with the RoomStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetRoomStayOk() (*RoomStayType, bool) {
	if o == nil || IsNil(o.RoomStay) {
		return nil, false
	}
	return o.RoomStay, true
}

// HasRoomStay returns a boolean if a field has been set.
func (o *HotelReservationType) HasRoomStay() bool {
	if o != nil && !IsNil(o.RoomStay) {
		return true
	}

	return false
}

// SetRoomStay gets a reference to the given RoomStayType and assigns it to the RoomStay field.
func (o *HotelReservationType) SetRoomStay(v RoomStayType) {
	o.RoomStay = &v
}

// GetReservationGuests returns the ReservationGuests field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationGuests() []ResGuestType {
	if o == nil || IsNil(o.ReservationGuests) {
		var ret []ResGuestType
		return ret
	}
	return o.ReservationGuests
}

// GetReservationGuestsOk returns a tuple with the ReservationGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationGuestsOk() ([]ResGuestType, bool) {
	if o == nil || IsNil(o.ReservationGuests) {
		return nil, false
	}
	return o.ReservationGuests, true
}

// HasReservationGuests returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationGuests() bool {
	if o != nil && !IsNil(o.ReservationGuests) {
		return true
	}

	return false
}

// SetReservationGuests gets a reference to the given []ResGuestType and assigns it to the ReservationGuests field.
func (o *HotelReservationType) SetReservationGuests(v []ResGuestType) {
	o.ReservationGuests = v
}

// GetReservationPackages returns the ReservationPackages field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationPackages() []ReservationPackageType {
	if o == nil || IsNil(o.ReservationPackages) {
		var ret []ReservationPackageType
		return ret
	}
	return o.ReservationPackages
}

// GetReservationPackagesOk returns a tuple with the ReservationPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationPackagesOk() ([]ReservationPackageType, bool) {
	if o == nil || IsNil(o.ReservationPackages) {
		return nil, false
	}
	return o.ReservationPackages, true
}

// HasReservationPackages returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationPackages() bool {
	if o != nil && !IsNil(o.ReservationPackages) {
		return true
	}

	return false
}

// SetReservationPackages gets a reference to the given []ReservationPackageType and assigns it to the ReservationPackages field.
func (o *HotelReservationType) SetReservationPackages(v []ReservationPackageType) {
	o.ReservationPackages = v
}

// GetPreferenceCollection returns the PreferenceCollection field value if set, zero value otherwise.
func (o *HotelReservationType) GetPreferenceCollection() []PreferenceTypeType {
	if o == nil || IsNil(o.PreferenceCollection) {
		var ret []PreferenceTypeType
		return ret
	}
	return o.PreferenceCollection
}

// GetPreferenceCollectionOk returns a tuple with the PreferenceCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetPreferenceCollectionOk() ([]PreferenceTypeType, bool) {
	if o == nil || IsNil(o.PreferenceCollection) {
		return nil, false
	}
	return o.PreferenceCollection, true
}

// HasPreferenceCollection returns a boolean if a field has been set.
func (o *HotelReservationType) HasPreferenceCollection() bool {
	if o != nil && !IsNil(o.PreferenceCollection) {
		return true
	}

	return false
}

// SetPreferenceCollection gets a reference to the given []PreferenceTypeType and assigns it to the PreferenceCollection field.
func (o *HotelReservationType) SetPreferenceCollection(v []PreferenceTypeType) {
	o.PreferenceCollection = v
}

// GetReservationProfiles returns the ReservationProfiles field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationProfiles() HotelReservationTypeReservationProfiles {
	if o == nil || IsNil(o.ReservationProfiles) {
		var ret HotelReservationTypeReservationProfiles
		return ret
	}
	return *o.ReservationProfiles
}

// GetReservationProfilesOk returns a tuple with the ReservationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationProfilesOk() (*HotelReservationTypeReservationProfiles, bool) {
	if o == nil || IsNil(o.ReservationProfiles) {
		return nil, false
	}
	return o.ReservationProfiles, true
}

// HasReservationProfiles returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationProfiles() bool {
	if o != nil && !IsNil(o.ReservationProfiles) {
		return true
	}

	return false
}

// SetReservationProfiles gets a reference to the given HotelReservationTypeReservationProfiles and assigns it to the ReservationProfiles field.
func (o *HotelReservationType) SetReservationProfiles(v HotelReservationTypeReservationProfiles) {
	o.ReservationProfiles = &v
}

// GetReservationPaymentMethods returns the ReservationPaymentMethods field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationPaymentMethods() []ReservationPaymentMethodType {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		var ret []ReservationPaymentMethodType
		return ret
	}
	return o.ReservationPaymentMethods
}

// GetReservationPaymentMethodsOk returns a tuple with the ReservationPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationPaymentMethodsOk() ([]ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		return nil, false
	}
	return o.ReservationPaymentMethods, true
}

// HasReservationPaymentMethods returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationPaymentMethods() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethods) {
		return true
	}

	return false
}

// SetReservationPaymentMethods gets a reference to the given []ReservationPaymentMethodType and assigns it to the ReservationPaymentMethods field.
func (o *HotelReservationType) SetReservationPaymentMethods(v []ReservationPaymentMethodType) {
	o.ReservationPaymentMethods = v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *HotelReservationType) GetCashiering() ResCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ResCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetCashieringOk() (*ResCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *HotelReservationType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ResCashieringType and assigns it to the Cashiering field.
func (o *HotelReservationType) SetCashiering(v ResCashieringType) {
	o.Cashiering = &v
}

// GetExtSystemSync returns the ExtSystemSync field value if set, zero value otherwise.
func (o *HotelReservationType) GetExtSystemSync() bool {
	if o == nil || IsNil(o.ExtSystemSync) {
		var ret bool
		return ret
	}
	return *o.ExtSystemSync
}

// GetExtSystemSyncOk returns a tuple with the ExtSystemSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetExtSystemSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtSystemSync) {
		return nil, false
	}
	return o.ExtSystemSync, true
}

// HasExtSystemSync returns a boolean if a field has been set.
func (o *HotelReservationType) HasExtSystemSync() bool {
	if o != nil && !IsNil(o.ExtSystemSync) {
		return true
	}

	return false
}

// SetExtSystemSync gets a reference to the given bool and assigns it to the ExtSystemSync field.
func (o *HotelReservationType) SetExtSystemSync(v bool) {
	o.ExtSystemSync = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *HotelReservationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *HotelReservationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *HotelReservationType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *HotelReservationType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *HotelReservationType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *HotelReservationType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetOverrideBlockRestriction returns the OverrideBlockRestriction field value if set, zero value otherwise.
func (o *HotelReservationType) GetOverrideBlockRestriction() bool {
	if o == nil || IsNil(o.OverrideBlockRestriction) {
		var ret bool
		return ret
	}
	return *o.OverrideBlockRestriction
}

// GetOverrideBlockRestrictionOk returns a tuple with the OverrideBlockRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetOverrideBlockRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideBlockRestriction) {
		return nil, false
	}
	return o.OverrideBlockRestriction, true
}

// HasOverrideBlockRestriction returns a boolean if a field has been set.
func (o *HotelReservationType) HasOverrideBlockRestriction() bool {
	if o != nil && !IsNil(o.OverrideBlockRestriction) {
		return true
	}

	return false
}

// SetOverrideBlockRestriction gets a reference to the given bool and assigns it to the OverrideBlockRestriction field.
func (o *HotelReservationType) SetOverrideBlockRestriction(v bool) {
	o.OverrideBlockRestriction = &v
}

// GetAdditionalGuestInfo returns the AdditionalGuestInfo field value if set, zero value otherwise.
func (o *HotelReservationType) GetAdditionalGuestInfo() ResGuestAdditionalInfoType {
	if o == nil || IsNil(o.AdditionalGuestInfo) {
		var ret ResGuestAdditionalInfoType
		return ret
	}
	return *o.AdditionalGuestInfo
}

// GetAdditionalGuestInfoOk returns a tuple with the AdditionalGuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetAdditionalGuestInfoOk() (*ResGuestAdditionalInfoType, bool) {
	if o == nil || IsNil(o.AdditionalGuestInfo) {
		return nil, false
	}
	return o.AdditionalGuestInfo, true
}

// HasAdditionalGuestInfo returns a boolean if a field has been set.
func (o *HotelReservationType) HasAdditionalGuestInfo() bool {
	if o != nil && !IsNil(o.AdditionalGuestInfo) {
		return true
	}

	return false
}

// SetAdditionalGuestInfo gets a reference to the given ResGuestAdditionalInfoType and assigns it to the AdditionalGuestInfo field.
func (o *HotelReservationType) SetAdditionalGuestInfo(v ResGuestAdditionalInfoType) {
	o.AdditionalGuestInfo = &v
}

// GetOverrideExternalChecks returns the OverrideExternalChecks field value if set, zero value otherwise.
func (o *HotelReservationType) GetOverrideExternalChecks() bool {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		var ret bool
		return ret
	}
	return *o.OverrideExternalChecks
}

// GetOverrideExternalChecksOk returns a tuple with the OverrideExternalChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetOverrideExternalChecksOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		return nil, false
	}
	return o.OverrideExternalChecks, true
}

// HasOverrideExternalChecks returns a boolean if a field has been set.
func (o *HotelReservationType) HasOverrideExternalChecks() bool {
	if o != nil && !IsNil(o.OverrideExternalChecks) {
		return true
	}

	return false
}

// SetOverrideExternalChecks gets a reference to the given bool and assigns it to the OverrideExternalChecks field.
func (o *HotelReservationType) SetOverrideExternalChecks(v bool) {
	o.OverrideExternalChecks = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *HotelReservationType) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *HotelReservationType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *HotelReservationType) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

// GetFixedCharges returns the FixedCharges field value if set, zero value otherwise.
func (o *HotelReservationType) GetFixedCharges() []FixedChargeType {
	if o == nil || IsNil(o.FixedCharges) {
		var ret []FixedChargeType
		return ret
	}
	return o.FixedCharges
}

// GetFixedChargesOk returns a tuple with the FixedCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationType) GetFixedChargesOk() ([]FixedChargeType, bool) {
	if o == nil || IsNil(o.FixedCharges) {
		return nil, false
	}
	return o.FixedCharges, true
}

// HasFixedCharges returns a boolean if a field has been set.
func (o *HotelReservationType) HasFixedCharges() bool {
	if o != nil && !IsNil(o.FixedCharges) {
		return true
	}

	return false
}

// SetFixedCharges gets a reference to the given []FixedChargeType and assigns it to the FixedCharges field.
func (o *HotelReservationType) SetFixedCharges(v []FixedChargeType) {
	o.FixedCharges = v
}

func (o HotelReservationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelReservationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.GuestComments) {
		toSerialize["guestComments"] = o.GuestComments
	}
	if !IsNil(o.SharedGuests) {
		toSerialize["sharedGuests"] = o.SharedGuests
	}
	if !IsNil(o.RoomStay) {
		toSerialize["roomStay"] = o.RoomStay
	}
	if !IsNil(o.ReservationGuests) {
		toSerialize["reservationGuests"] = o.ReservationGuests
	}
	if !IsNil(o.ReservationPackages) {
		toSerialize["reservationPackages"] = o.ReservationPackages
	}
	if !IsNil(o.PreferenceCollection) {
		toSerialize["preferenceCollection"] = o.PreferenceCollection
	}
	if !IsNil(o.ReservationProfiles) {
		toSerialize["reservationProfiles"] = o.ReservationProfiles
	}
	if !IsNil(o.ReservationPaymentMethods) {
		toSerialize["reservationPaymentMethods"] = o.ReservationPaymentMethods
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.ExtSystemSync) {
		toSerialize["extSystemSync"] = o.ExtSystemSync
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.OverrideBlockRestriction) {
		toSerialize["overrideBlockRestriction"] = o.OverrideBlockRestriction
	}
	if !IsNil(o.AdditionalGuestInfo) {
		toSerialize["additionalGuestInfo"] = o.AdditionalGuestInfo
	}
	if !IsNil(o.OverrideExternalChecks) {
		toSerialize["overrideExternalChecks"] = o.OverrideExternalChecks
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.FixedCharges) {
		toSerialize["fixedCharges"] = o.FixedCharges
	}
	return toSerialize, nil
}

type NullableHotelReservationType struct {
	value *HotelReservationType
	isSet bool
}

func (v NullableHotelReservationType) Get() *HotelReservationType {
	return v.value
}

func (v *NullableHotelReservationType) Set(val *HotelReservationType) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelReservationType) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelReservationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelReservationType(val *HotelReservationType) *NullableHotelReservationType {
	return &NullableHotelReservationType{value: val, isSet: true}
}

func (v NullableHotelReservationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelReservationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


