/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the MassUpdateRoutingInstructionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassUpdateRoutingInstructionType{}

// MassUpdateRoutingInstructionType Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit
type MassUpdateRoutingInstructionType struct {
	Duration *MassUpdateRoutingInstructionTypeDuration `json:"duration,omitempty"`
	// Set of Transaction Codes configured in this time span.
	TransactionCodes []MassUpdateTrxInfoType `json:"transactionCodes,omitempty"`
	// Set of Billing Instructions configured in this time span.
	BillingInstructions []MassUpdateBillingInstructionType `json:"billingInstructions,omitempty"`
	// Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.
	CreditLimit *float32 `json:"creditLimit,omitempty"`
	// The routing limit percentage allowed for this routing instruction.
	PercentageLimit *float32 `json:"percentageLimit,omitempty"`
	// Number of covers for this routing instruction.
	Covers *float32 `json:"covers,omitempty"`
	// Amount of Credit used for this routing instruction.
	LimitUsed *float32 `json:"limitUsed,omitempty"`
}

// NewMassUpdateRoutingInstructionType instantiates a new MassUpdateRoutingInstructionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassUpdateRoutingInstructionType() *MassUpdateRoutingInstructionType {
	this := MassUpdateRoutingInstructionType{}
	return &this
}

// NewMassUpdateRoutingInstructionTypeWithDefaults instantiates a new MassUpdateRoutingInstructionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassUpdateRoutingInstructionTypeWithDefaults() *MassUpdateRoutingInstructionType {
	this := MassUpdateRoutingInstructionType{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetDuration() MassUpdateRoutingInstructionTypeDuration {
	if o == nil || IsNil(o.Duration) {
		var ret MassUpdateRoutingInstructionTypeDuration
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetDurationOk() (*MassUpdateRoutingInstructionTypeDuration, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given MassUpdateRoutingInstructionTypeDuration and assigns it to the Duration field.
func (o *MassUpdateRoutingInstructionType) SetDuration(v MassUpdateRoutingInstructionTypeDuration) {
	o.Duration = &v
}

// GetTransactionCodes returns the TransactionCodes field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetTransactionCodes() []MassUpdateTrxInfoType {
	if o == nil || IsNil(o.TransactionCodes) {
		var ret []MassUpdateTrxInfoType
		return ret
	}
	return o.TransactionCodes
}

// GetTransactionCodesOk returns a tuple with the TransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetTransactionCodesOk() ([]MassUpdateTrxInfoType, bool) {
	if o == nil || IsNil(o.TransactionCodes) {
		return nil, false
	}
	return o.TransactionCodes, true
}

// HasTransactionCodes returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasTransactionCodes() bool {
	if o != nil && !IsNil(o.TransactionCodes) {
		return true
	}

	return false
}

// SetTransactionCodes gets a reference to the given []MassUpdateTrxInfoType and assigns it to the TransactionCodes field.
func (o *MassUpdateRoutingInstructionType) SetTransactionCodes(v []MassUpdateTrxInfoType) {
	o.TransactionCodes = v
}

// GetBillingInstructions returns the BillingInstructions field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetBillingInstructions() []MassUpdateBillingInstructionType {
	if o == nil || IsNil(o.BillingInstructions) {
		var ret []MassUpdateBillingInstructionType
		return ret
	}
	return o.BillingInstructions
}

// GetBillingInstructionsOk returns a tuple with the BillingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetBillingInstructionsOk() ([]MassUpdateBillingInstructionType, bool) {
	if o == nil || IsNil(o.BillingInstructions) {
		return nil, false
	}
	return o.BillingInstructions, true
}

// HasBillingInstructions returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasBillingInstructions() bool {
	if o != nil && !IsNil(o.BillingInstructions) {
		return true
	}

	return false
}

// SetBillingInstructions gets a reference to the given []MassUpdateBillingInstructionType and assigns it to the BillingInstructions field.
func (o *MassUpdateRoutingInstructionType) SetBillingInstructions(v []MassUpdateBillingInstructionType) {
	o.BillingInstructions = v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetCreditLimit() float32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret float32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetCreditLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given float32 and assigns it to the CreditLimit field.
func (o *MassUpdateRoutingInstructionType) SetCreditLimit(v float32) {
	o.CreditLimit = &v
}

// GetPercentageLimit returns the PercentageLimit field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetPercentageLimit() float32 {
	if o == nil || IsNil(o.PercentageLimit) {
		var ret float32
		return ret
	}
	return *o.PercentageLimit
}

// GetPercentageLimitOk returns a tuple with the PercentageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetPercentageLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentageLimit) {
		return nil, false
	}
	return o.PercentageLimit, true
}

// HasPercentageLimit returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasPercentageLimit() bool {
	if o != nil && !IsNil(o.PercentageLimit) {
		return true
	}

	return false
}

// SetPercentageLimit gets a reference to the given float32 and assigns it to the PercentageLimit field.
func (o *MassUpdateRoutingInstructionType) SetPercentageLimit(v float32) {
	o.PercentageLimit = &v
}

// GetCovers returns the Covers field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetCovers() float32 {
	if o == nil || IsNil(o.Covers) {
		var ret float32
		return ret
	}
	return *o.Covers
}

// GetCoversOk returns a tuple with the Covers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetCoversOk() (*float32, bool) {
	if o == nil || IsNil(o.Covers) {
		return nil, false
	}
	return o.Covers, true
}

// HasCovers returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasCovers() bool {
	if o != nil && !IsNil(o.Covers) {
		return true
	}

	return false
}

// SetCovers gets a reference to the given float32 and assigns it to the Covers field.
func (o *MassUpdateRoutingInstructionType) SetCovers(v float32) {
	o.Covers = &v
}

// GetLimitUsed returns the LimitUsed field value if set, zero value otherwise.
func (o *MassUpdateRoutingInstructionType) GetLimitUsed() float32 {
	if o == nil || IsNil(o.LimitUsed) {
		var ret float32
		return ret
	}
	return *o.LimitUsed
}

// GetLimitUsedOk returns a tuple with the LimitUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassUpdateRoutingInstructionType) GetLimitUsedOk() (*float32, bool) {
	if o == nil || IsNil(o.LimitUsed) {
		return nil, false
	}
	return o.LimitUsed, true
}

// HasLimitUsed returns a boolean if a field has been set.
func (o *MassUpdateRoutingInstructionType) HasLimitUsed() bool {
	if o != nil && !IsNil(o.LimitUsed) {
		return true
	}

	return false
}

// SetLimitUsed gets a reference to the given float32 and assigns it to the LimitUsed field.
func (o *MassUpdateRoutingInstructionType) SetLimitUsed(v float32) {
	o.LimitUsed = &v
}

func (o MassUpdateRoutingInstructionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassUpdateRoutingInstructionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.TransactionCodes) {
		toSerialize["transactionCodes"] = o.TransactionCodes
	}
	if !IsNil(o.BillingInstructions) {
		toSerialize["billingInstructions"] = o.BillingInstructions
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.PercentageLimit) {
		toSerialize["percentageLimit"] = o.PercentageLimit
	}
	if !IsNil(o.Covers) {
		toSerialize["covers"] = o.Covers
	}
	if !IsNil(o.LimitUsed) {
		toSerialize["limitUsed"] = o.LimitUsed
	}
	return toSerialize, nil
}

type NullableMassUpdateRoutingInstructionType struct {
	value *MassUpdateRoutingInstructionType
	isSet bool
}

func (v NullableMassUpdateRoutingInstructionType) Get() *MassUpdateRoutingInstructionType {
	return v.value
}

func (v *NullableMassUpdateRoutingInstructionType) Set(val *MassUpdateRoutingInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableMassUpdateRoutingInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableMassUpdateRoutingInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassUpdateRoutingInstructionType(val *MassUpdateRoutingInstructionType) *NullableMassUpdateRoutingInstructionType {
	return &NullableMassUpdateRoutingInstructionType{value: val, isSet: true}
}

func (v NullableMassUpdateRoutingInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassUpdateRoutingInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


