/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the ReservationDailySummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationDailySummaryType{}

// ReservationDailySummaryType Daily summary information related to a reservation.
type ReservationDailySummaryType struct {
	Arrival *string `json:"arrival,omitempty"`
	// Block code of the reservation.
	BlockCode *string `json:"blockCode,omitempty"`
	BookingDate *string `json:"bookingDate,omitempty"`
	// Classifies the medium(Channel field on reservation screen) through which the reservation is made. Either bookingMedium or origin_of_booking will be present in the response.
	BookingMedium *string `json:"bookingMedium,omitempty"`
	// The date the reservation was canceled.
	CancellationDate *string `json:"cancellationDate,omitempty"`
	CancellationReasonCode *string `json:"cancellationReasonCode,omitempty"`
	// The date the reservation was checked out.
	CheckedOutDate *string `json:"checkedOutDate,omitempty"`
	// Number of children classified under the first Age Qualifying Group.
	Children1 *int32 `json:"children1,omitempty"`
	// Number of children classified under the second Age Qualifying Group.
	Children2 *int32 `json:"children2,omitempty"`
	// Number of children classified under the third Age Qualifying Group.
	Children3 *int32 `json:"children3,omitempty"`
	CompanyId *UniqueIDType `json:"companyId,omitempty"`
	// Name of the company for the reservation.
	CompanyName *string `json:"companyName,omitempty"`
	// Business Date when the reservation was created.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// Collection of daily summary for the reservation.
	DailySummary []DailySummaryType `json:"dailySummary,omitempty"`
	Departure *string `json:"departure,omitempty"`
	GroupId *UniqueIDType `json:"groupId,omitempty"`
	// Name of the group for the reservation.
	GroupName *string `json:"groupName,omitempty"`
	// Country code for guest's primary address.
	GuestCountry *string `json:"guestCountry,omitempty"`
	// IATA Code.
	IataCode *string `json:"iataCode,omitempty"`
	// Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
	// Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.
	LastModifiedDateTime *string `json:"lastModifiedDateTime,omitempty"`
	// Card Number of the membership.Either membershipId or membershipNumber will be returned.
	MembershipId *string `json:"membershipId,omitempty"`
	// Indicates the membership level.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Card Number of the membership.Either membershipId or membershipNumber will be returned.
	MembershipNumber *string `json:"membershipNumber,omitempty"`
	// Type of membership.
	MembershipType *string `json:"membershipType,omitempty"`
	// Affiliation or ethnicity to a particular country.
	Nationality *string `json:"nationality,omitempty"`
	// Number of rooms of the reservation.
	NoOfRooms *int32 `json:"noOfRooms,omitempty"`
	// Classifies the medium(Channel field on reservation screen) through which the reservation is made.Either bookingMedium or origin_of_booking will be present in the response.
	OriginOfBooking *string `json:"origin_of_booking,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	ResvContactId *UniqueIDType `json:"resvContactId,omitempty"`
	// Name of the contact for the reservation.
	ResvContactName *string `json:"resvContactName,omitempty"`
	ResvStatus *PMSResStatusType `json:"resvStatus,omitempty"`
	// Type of the reservation.
	ResvType *string `json:"resvType,omitempty"`
	// Indicates whether the reservation has any sharers. Y indicates true and N indicates false.
	SharedYn *string `json:"sharedYn,omitempty"`
	// Collection of Confirmation Numbers of Sharers.
	SharersList *string `json:"sharersList,omitempty"`
	SourceId *UniqueIDType `json:"sourceId,omitempty"`
	// Name of the source for the reservation.
	SourceName *string `json:"sourceName,omitempty"`
	TravelAgentId *UniqueIDType `json:"travelAgentId,omitempty"`
	// Name of the travel agent for the reservation.
	TravelAgentName *string `json:"travelAgentName,omitempty"`
}

// NewReservationDailySummaryType instantiates a new ReservationDailySummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationDailySummaryType() *ReservationDailySummaryType {
	this := ReservationDailySummaryType{}
	return &this
}

// NewReservationDailySummaryTypeWithDefaults instantiates a new ReservationDailySummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationDailySummaryTypeWithDefaults() *ReservationDailySummaryType {
	this := ReservationDailySummaryType{}
	return &this
}

// GetArrival returns the Arrival field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetArrival() string {
	if o == nil || IsNil(o.Arrival) {
		var ret string
		return ret
	}
	return *o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetArrivalOk() (*string, bool) {
	if o == nil || IsNil(o.Arrival) {
		return nil, false
	}
	return o.Arrival, true
}

// HasArrival returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasArrival() bool {
	if o != nil && !IsNil(o.Arrival) {
		return true
	}

	return false
}

// SetArrival gets a reference to the given string and assigns it to the Arrival field.
func (o *ReservationDailySummaryType) SetArrival(v string) {
	o.Arrival = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *ReservationDailySummaryType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetBookingDate returns the BookingDate field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetBookingDate() string {
	if o == nil || IsNil(o.BookingDate) {
		var ret string
		return ret
	}
	return *o.BookingDate
}

// GetBookingDateOk returns a tuple with the BookingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetBookingDateOk() (*string, bool) {
	if o == nil || IsNil(o.BookingDate) {
		return nil, false
	}
	return o.BookingDate, true
}

// HasBookingDate returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasBookingDate() bool {
	if o != nil && !IsNil(o.BookingDate) {
		return true
	}

	return false
}

// SetBookingDate gets a reference to the given string and assigns it to the BookingDate field.
func (o *ReservationDailySummaryType) SetBookingDate(v string) {
	o.BookingDate = &v
}

// GetBookingMedium returns the BookingMedium field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetBookingMedium() string {
	if o == nil || IsNil(o.BookingMedium) {
		var ret string
		return ret
	}
	return *o.BookingMedium
}

// GetBookingMediumOk returns a tuple with the BookingMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetBookingMediumOk() (*string, bool) {
	if o == nil || IsNil(o.BookingMedium) {
		return nil, false
	}
	return o.BookingMedium, true
}

// HasBookingMedium returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasBookingMedium() bool {
	if o != nil && !IsNil(o.BookingMedium) {
		return true
	}

	return false
}

// SetBookingMedium gets a reference to the given string and assigns it to the BookingMedium field.
func (o *ReservationDailySummaryType) SetBookingMedium(v string) {
	o.BookingMedium = &v
}

// GetCancellationDate returns the CancellationDate field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCancellationDate() string {
	if o == nil || IsNil(o.CancellationDate) {
		var ret string
		return ret
	}
	return *o.CancellationDate
}

// GetCancellationDateOk returns a tuple with the CancellationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCancellationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationDate) {
		return nil, false
	}
	return o.CancellationDate, true
}

// HasCancellationDate returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCancellationDate() bool {
	if o != nil && !IsNil(o.CancellationDate) {
		return true
	}

	return false
}

// SetCancellationDate gets a reference to the given string and assigns it to the CancellationDate field.
func (o *ReservationDailySummaryType) SetCancellationDate(v string) {
	o.CancellationDate = &v
}

// GetCancellationReasonCode returns the CancellationReasonCode field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCancellationReasonCode() string {
	if o == nil || IsNil(o.CancellationReasonCode) {
		var ret string
		return ret
	}
	return *o.CancellationReasonCode
}

// GetCancellationReasonCodeOk returns a tuple with the CancellationReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCancellationReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationReasonCode) {
		return nil, false
	}
	return o.CancellationReasonCode, true
}

// HasCancellationReasonCode returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCancellationReasonCode() bool {
	if o != nil && !IsNil(o.CancellationReasonCode) {
		return true
	}

	return false
}

// SetCancellationReasonCode gets a reference to the given string and assigns it to the CancellationReasonCode field.
func (o *ReservationDailySummaryType) SetCancellationReasonCode(v string) {
	o.CancellationReasonCode = &v
}

// GetCheckedOutDate returns the CheckedOutDate field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCheckedOutDate() string {
	if o == nil || IsNil(o.CheckedOutDate) {
		var ret string
		return ret
	}
	return *o.CheckedOutDate
}

// GetCheckedOutDateOk returns a tuple with the CheckedOutDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCheckedOutDateOk() (*string, bool) {
	if o == nil || IsNil(o.CheckedOutDate) {
		return nil, false
	}
	return o.CheckedOutDate, true
}

// HasCheckedOutDate returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCheckedOutDate() bool {
	if o != nil && !IsNil(o.CheckedOutDate) {
		return true
	}

	return false
}

// SetCheckedOutDate gets a reference to the given string and assigns it to the CheckedOutDate field.
func (o *ReservationDailySummaryType) SetCheckedOutDate(v string) {
	o.CheckedOutDate = &v
}

// GetChildren1 returns the Children1 field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetChildren1() int32 {
	if o == nil || IsNil(o.Children1) {
		var ret int32
		return ret
	}
	return *o.Children1
}

// GetChildren1Ok returns a tuple with the Children1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetChildren1Ok() (*int32, bool) {
	if o == nil || IsNil(o.Children1) {
		return nil, false
	}
	return o.Children1, true
}

// HasChildren1 returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasChildren1() bool {
	if o != nil && !IsNil(o.Children1) {
		return true
	}

	return false
}

// SetChildren1 gets a reference to the given int32 and assigns it to the Children1 field.
func (o *ReservationDailySummaryType) SetChildren1(v int32) {
	o.Children1 = &v
}

// GetChildren2 returns the Children2 field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetChildren2() int32 {
	if o == nil || IsNil(o.Children2) {
		var ret int32
		return ret
	}
	return *o.Children2
}

// GetChildren2Ok returns a tuple with the Children2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetChildren2Ok() (*int32, bool) {
	if o == nil || IsNil(o.Children2) {
		return nil, false
	}
	return o.Children2, true
}

// HasChildren2 returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasChildren2() bool {
	if o != nil && !IsNil(o.Children2) {
		return true
	}

	return false
}

// SetChildren2 gets a reference to the given int32 and assigns it to the Children2 field.
func (o *ReservationDailySummaryType) SetChildren2(v int32) {
	o.Children2 = &v
}

// GetChildren3 returns the Children3 field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetChildren3() int32 {
	if o == nil || IsNil(o.Children3) {
		var ret int32
		return ret
	}
	return *o.Children3
}

// GetChildren3Ok returns a tuple with the Children3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetChildren3Ok() (*int32, bool) {
	if o == nil || IsNil(o.Children3) {
		return nil, false
	}
	return o.Children3, true
}

// HasChildren3 returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasChildren3() bool {
	if o != nil && !IsNil(o.Children3) {
		return true
	}

	return false
}

// SetChildren3 gets a reference to the given int32 and assigns it to the Children3 field.
func (o *ReservationDailySummaryType) SetChildren3(v int32) {
	o.Children3 = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCompanyId() UniqueIDType {
	if o == nil || IsNil(o.CompanyId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCompanyIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given UniqueIDType and assigns it to the CompanyId field.
func (o *ReservationDailySummaryType) SetCompanyId(v UniqueIDType) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *ReservationDailySummaryType) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *ReservationDailySummaryType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetDailySummary returns the DailySummary field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetDailySummary() []DailySummaryType {
	if o == nil || IsNil(o.DailySummary) {
		var ret []DailySummaryType
		return ret
	}
	return o.DailySummary
}

// GetDailySummaryOk returns a tuple with the DailySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetDailySummaryOk() ([]DailySummaryType, bool) {
	if o == nil || IsNil(o.DailySummary) {
		return nil, false
	}
	return o.DailySummary, true
}

// HasDailySummary returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasDailySummary() bool {
	if o != nil && !IsNil(o.DailySummary) {
		return true
	}

	return false
}

// SetDailySummary gets a reference to the given []DailySummaryType and assigns it to the DailySummary field.
func (o *ReservationDailySummaryType) SetDailySummary(v []DailySummaryType) {
	o.DailySummary = v
}

// GetDeparture returns the Departure field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetDeparture() string {
	if o == nil || IsNil(o.Departure) {
		var ret string
		return ret
	}
	return *o.Departure
}

// GetDepartureOk returns a tuple with the Departure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetDepartureOk() (*string, bool) {
	if o == nil || IsNil(o.Departure) {
		return nil, false
	}
	return o.Departure, true
}

// HasDeparture returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasDeparture() bool {
	if o != nil && !IsNil(o.Departure) {
		return true
	}

	return false
}

// SetDeparture gets a reference to the given string and assigns it to the Departure field.
func (o *ReservationDailySummaryType) SetDeparture(v string) {
	o.Departure = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetGroupId() UniqueIDType {
	if o == nil || IsNil(o.GroupId) {
		var ret UniqueIDType
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetGroupIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given UniqueIDType and assigns it to the GroupId field.
func (o *ReservationDailySummaryType) SetGroupId(v UniqueIDType) {
	o.GroupId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ReservationDailySummaryType) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGuestCountry returns the GuestCountry field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetGuestCountry() string {
	if o == nil || IsNil(o.GuestCountry) {
		var ret string
		return ret
	}
	return *o.GuestCountry
}

// GetGuestCountryOk returns a tuple with the GuestCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetGuestCountryOk() (*string, bool) {
	if o == nil || IsNil(o.GuestCountry) {
		return nil, false
	}
	return o.GuestCountry, true
}

// HasGuestCountry returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasGuestCountry() bool {
	if o != nil && !IsNil(o.GuestCountry) {
		return true
	}

	return false
}

// SetGuestCountry gets a reference to the given string and assigns it to the GuestCountry field.
func (o *ReservationDailySummaryType) SetGuestCountry(v string) {
	o.GuestCountry = &v
}

// GetIataCode returns the IataCode field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetIataCode() string {
	if o == nil || IsNil(o.IataCode) {
		var ret string
		return ret
	}
	return *o.IataCode
}

// GetIataCodeOk returns a tuple with the IataCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetIataCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IataCode) {
		return nil, false
	}
	return o.IataCode, true
}

// HasIataCode returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasIataCode() bool {
	if o != nil && !IsNil(o.IataCode) {
		return true
	}

	return false
}

// SetIataCode gets a reference to the given string and assigns it to the IataCode field.
func (o *ReservationDailySummaryType) SetIataCode(v string) {
	o.IataCode = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *ReservationDailySummaryType) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetLastModifiedDateTime returns the LastModifiedDateTime field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetLastModifiedDateTime() string {
	if o == nil || IsNil(o.LastModifiedDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifiedDateTime
}

// GetLastModifiedDateTimeOk returns a tuple with the LastModifiedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetLastModifiedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDateTime) {
		return nil, false
	}
	return o.LastModifiedDateTime, true
}

// HasLastModifiedDateTime returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasLastModifiedDateTime() bool {
	if o != nil && !IsNil(o.LastModifiedDateTime) {
		return true
	}

	return false
}

// SetLastModifiedDateTime gets a reference to the given string and assigns it to the LastModifiedDateTime field.
func (o *ReservationDailySummaryType) SetLastModifiedDateTime(v string) {
	o.LastModifiedDateTime = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *ReservationDailySummaryType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *ReservationDailySummaryType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetMembershipNumber returns the MembershipNumber field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetMembershipNumber() string {
	if o == nil || IsNil(o.MembershipNumber) {
		var ret string
		return ret
	}
	return *o.MembershipNumber
}

// GetMembershipNumberOk returns a tuple with the MembershipNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetMembershipNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipNumber) {
		return nil, false
	}
	return o.MembershipNumber, true
}

// HasMembershipNumber returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasMembershipNumber() bool {
	if o != nil && !IsNil(o.MembershipNumber) {
		return true
	}

	return false
}

// SetMembershipNumber gets a reference to the given string and assigns it to the MembershipNumber field.
func (o *ReservationDailySummaryType) SetMembershipNumber(v string) {
	o.MembershipNumber = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *ReservationDailySummaryType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *ReservationDailySummaryType) SetNationality(v string) {
	o.Nationality = &v
}

// GetNoOfRooms returns the NoOfRooms field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetNoOfRooms() int32 {
	if o == nil || IsNil(o.NoOfRooms) {
		var ret int32
		return ret
	}
	return *o.NoOfRooms
}

// GetNoOfRoomsOk returns a tuple with the NoOfRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetNoOfRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfRooms) {
		return nil, false
	}
	return o.NoOfRooms, true
}

// HasNoOfRooms returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasNoOfRooms() bool {
	if o != nil && !IsNil(o.NoOfRooms) {
		return true
	}

	return false
}

// SetNoOfRooms gets a reference to the given int32 and assigns it to the NoOfRooms field.
func (o *ReservationDailySummaryType) SetNoOfRooms(v int32) {
	o.NoOfRooms = &v
}

// GetOriginOfBooking returns the OriginOfBooking field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetOriginOfBooking() string {
	if o == nil || IsNil(o.OriginOfBooking) {
		var ret string
		return ret
	}
	return *o.OriginOfBooking
}

// GetOriginOfBookingOk returns a tuple with the OriginOfBooking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetOriginOfBookingOk() (*string, bool) {
	if o == nil || IsNil(o.OriginOfBooking) {
		return nil, false
	}
	return o.OriginOfBooking, true
}

// HasOriginOfBooking returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasOriginOfBooking() bool {
	if o != nil && !IsNil(o.OriginOfBooking) {
		return true
	}

	return false
}

// SetOriginOfBooking gets a reference to the given string and assigns it to the OriginOfBooking field.
func (o *ReservationDailySummaryType) SetOriginOfBooking(v string) {
	o.OriginOfBooking = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *ReservationDailySummaryType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetResvContactId returns the ResvContactId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetResvContactId() UniqueIDType {
	if o == nil || IsNil(o.ResvContactId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ResvContactId
}

// GetResvContactIdOk returns a tuple with the ResvContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetResvContactIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ResvContactId) {
		return nil, false
	}
	return o.ResvContactId, true
}

// HasResvContactId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasResvContactId() bool {
	if o != nil && !IsNil(o.ResvContactId) {
		return true
	}

	return false
}

// SetResvContactId gets a reference to the given UniqueIDType and assigns it to the ResvContactId field.
func (o *ReservationDailySummaryType) SetResvContactId(v UniqueIDType) {
	o.ResvContactId = &v
}

// GetResvContactName returns the ResvContactName field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetResvContactName() string {
	if o == nil || IsNil(o.ResvContactName) {
		var ret string
		return ret
	}
	return *o.ResvContactName
}

// GetResvContactNameOk returns a tuple with the ResvContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetResvContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResvContactName) {
		return nil, false
	}
	return o.ResvContactName, true
}

// HasResvContactName returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasResvContactName() bool {
	if o != nil && !IsNil(o.ResvContactName) {
		return true
	}

	return false
}

// SetResvContactName gets a reference to the given string and assigns it to the ResvContactName field.
func (o *ReservationDailySummaryType) SetResvContactName(v string) {
	o.ResvContactName = &v
}

// GetResvStatus returns the ResvStatus field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetResvStatus() PMSResStatusType {
	if o == nil || IsNil(o.ResvStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ResvStatus
}

// GetResvStatusOk returns a tuple with the ResvStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetResvStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ResvStatus) {
		return nil, false
	}
	return o.ResvStatus, true
}

// HasResvStatus returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasResvStatus() bool {
	if o != nil && !IsNil(o.ResvStatus) {
		return true
	}

	return false
}

// SetResvStatus gets a reference to the given PMSResStatusType and assigns it to the ResvStatus field.
func (o *ReservationDailySummaryType) SetResvStatus(v PMSResStatusType) {
	o.ResvStatus = &v
}

// GetResvType returns the ResvType field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetResvType() string {
	if o == nil || IsNil(o.ResvType) {
		var ret string
		return ret
	}
	return *o.ResvType
}

// GetResvTypeOk returns a tuple with the ResvType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetResvTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResvType) {
		return nil, false
	}
	return o.ResvType, true
}

// HasResvType returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasResvType() bool {
	if o != nil && !IsNil(o.ResvType) {
		return true
	}

	return false
}

// SetResvType gets a reference to the given string and assigns it to the ResvType field.
func (o *ReservationDailySummaryType) SetResvType(v string) {
	o.ResvType = &v
}

// GetSharedYn returns the SharedYn field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetSharedYn() string {
	if o == nil || IsNil(o.SharedYn) {
		var ret string
		return ret
	}
	return *o.SharedYn
}

// GetSharedYnOk returns a tuple with the SharedYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetSharedYnOk() (*string, bool) {
	if o == nil || IsNil(o.SharedYn) {
		return nil, false
	}
	return o.SharedYn, true
}

// HasSharedYn returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasSharedYn() bool {
	if o != nil && !IsNil(o.SharedYn) {
		return true
	}

	return false
}

// SetSharedYn gets a reference to the given string and assigns it to the SharedYn field.
func (o *ReservationDailySummaryType) SetSharedYn(v string) {
	o.SharedYn = &v
}

// GetSharersList returns the SharersList field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetSharersList() string {
	if o == nil || IsNil(o.SharersList) {
		var ret string
		return ret
	}
	return *o.SharersList
}

// GetSharersListOk returns a tuple with the SharersList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetSharersListOk() (*string, bool) {
	if o == nil || IsNil(o.SharersList) {
		return nil, false
	}
	return o.SharersList, true
}

// HasSharersList returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasSharersList() bool {
	if o != nil && !IsNil(o.SharersList) {
		return true
	}

	return false
}

// SetSharersList gets a reference to the given string and assigns it to the SharersList field.
func (o *ReservationDailySummaryType) SetSharersList(v string) {
	o.SharersList = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetSourceId() UniqueIDType {
	if o == nil || IsNil(o.SourceId) {
		var ret UniqueIDType
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetSourceIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given UniqueIDType and assigns it to the SourceId field.
func (o *ReservationDailySummaryType) SetSourceId(v UniqueIDType) {
	o.SourceId = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetSourceName() string {
	if o == nil || IsNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasSourceName() bool {
	if o != nil && !IsNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *ReservationDailySummaryType) SetSourceName(v string) {
	o.SourceName = &v
}

// GetTravelAgentId returns the TravelAgentId field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetTravelAgentId() UniqueIDType {
	if o == nil || IsNil(o.TravelAgentId) {
		var ret UniqueIDType
		return ret
	}
	return *o.TravelAgentId
}

// GetTravelAgentIdOk returns a tuple with the TravelAgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetTravelAgentIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.TravelAgentId) {
		return nil, false
	}
	return o.TravelAgentId, true
}

// HasTravelAgentId returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasTravelAgentId() bool {
	if o != nil && !IsNil(o.TravelAgentId) {
		return true
	}

	return false
}

// SetTravelAgentId gets a reference to the given UniqueIDType and assigns it to the TravelAgentId field.
func (o *ReservationDailySummaryType) SetTravelAgentId(v UniqueIDType) {
	o.TravelAgentId = &v
}

// GetTravelAgentName returns the TravelAgentName field value if set, zero value otherwise.
func (o *ReservationDailySummaryType) GetTravelAgentName() string {
	if o == nil || IsNil(o.TravelAgentName) {
		var ret string
		return ret
	}
	return *o.TravelAgentName
}

// GetTravelAgentNameOk returns a tuple with the TravelAgentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDailySummaryType) GetTravelAgentNameOk() (*string, bool) {
	if o == nil || IsNil(o.TravelAgentName) {
		return nil, false
	}
	return o.TravelAgentName, true
}

// HasTravelAgentName returns a boolean if a field has been set.
func (o *ReservationDailySummaryType) HasTravelAgentName() bool {
	if o != nil && !IsNil(o.TravelAgentName) {
		return true
	}

	return false
}

// SetTravelAgentName gets a reference to the given string and assigns it to the TravelAgentName field.
func (o *ReservationDailySummaryType) SetTravelAgentName(v string) {
	o.TravelAgentName = &v
}

func (o ReservationDailySummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationDailySummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arrival) {
		toSerialize["arrival"] = o.Arrival
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BookingDate) {
		toSerialize["bookingDate"] = o.BookingDate
	}
	if !IsNil(o.BookingMedium) {
		toSerialize["bookingMedium"] = o.BookingMedium
	}
	if !IsNil(o.CancellationDate) {
		toSerialize["cancellationDate"] = o.CancellationDate
	}
	if !IsNil(o.CancellationReasonCode) {
		toSerialize["cancellationReasonCode"] = o.CancellationReasonCode
	}
	if !IsNil(o.CheckedOutDate) {
		toSerialize["checkedOutDate"] = o.CheckedOutDate
	}
	if !IsNil(o.Children1) {
		toSerialize["children1"] = o.Children1
	}
	if !IsNil(o.Children2) {
		toSerialize["children2"] = o.Children2
	}
	if !IsNil(o.Children3) {
		toSerialize["children3"] = o.Children3
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.DailySummary) {
		toSerialize["dailySummary"] = o.DailySummary
	}
	if !IsNil(o.Departure) {
		toSerialize["departure"] = o.Departure
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.GuestCountry) {
		toSerialize["guestCountry"] = o.GuestCountry
	}
	if !IsNil(o.IataCode) {
		toSerialize["iataCode"] = o.IataCode
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.LastModifiedDateTime) {
		toSerialize["lastModifiedDateTime"] = o.LastModifiedDateTime
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.MembershipNumber) {
		toSerialize["membershipNumber"] = o.MembershipNumber
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.NoOfRooms) {
		toSerialize["noOfRooms"] = o.NoOfRooms
	}
	if !IsNil(o.OriginOfBooking) {
		toSerialize["origin_of_booking"] = o.OriginOfBooking
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ResvContactId) {
		toSerialize["resvContactId"] = o.ResvContactId
	}
	if !IsNil(o.ResvContactName) {
		toSerialize["resvContactName"] = o.ResvContactName
	}
	if !IsNil(o.ResvStatus) {
		toSerialize["resvStatus"] = o.ResvStatus
	}
	if !IsNil(o.ResvType) {
		toSerialize["resvType"] = o.ResvType
	}
	if !IsNil(o.SharedYn) {
		toSerialize["sharedYn"] = o.SharedYn
	}
	if !IsNil(o.SharersList) {
		toSerialize["sharersList"] = o.SharersList
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	if !IsNil(o.TravelAgentId) {
		toSerialize["travelAgentId"] = o.TravelAgentId
	}
	if !IsNil(o.TravelAgentName) {
		toSerialize["travelAgentName"] = o.TravelAgentName
	}
	return toSerialize, nil
}

type NullableReservationDailySummaryType struct {
	value *ReservationDailySummaryType
	isSet bool
}

func (v NullableReservationDailySummaryType) Get() *ReservationDailySummaryType {
	return v.value
}

func (v *NullableReservationDailySummaryType) Set(val *ReservationDailySummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationDailySummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationDailySummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationDailySummaryType(val *ReservationDailySummaryType) *NullableReservationDailySummaryType {
	return &NullableReservationDailySummaryType{value: val, isSet: true}
}

func (v NullableReservationDailySummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationDailySummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


