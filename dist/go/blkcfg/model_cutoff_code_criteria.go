/*
OPERA Cloud Block Configuration API

APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkcfg

import (
	"encoding/json"
)

// checks if the CutoffCodeCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CutoffCodeCriteria{}

// CutoffCodeCriteria Object which will contain all the information of 'CutoffCodes'. 
type CutoffCodeCriteria struct {
	// Cutoff Code, which will allow the user to define standard cutoff schedules. Cutoff schedule codes can be applied to blocks, to default number of cutoff days per stay date and room type. A default number number of cutoff days can be set on cutoff scheduler header level, and will be applied when no specific number of days has been defined for a date / room type combination within the cutoff schedule dates.
	CutoffCodes []CutoffCodeType `json:"cutoffCodes,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCutoffCodeCriteria instantiates a new CutoffCodeCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCutoffCodeCriteria() *CutoffCodeCriteria {
	this := CutoffCodeCriteria{}
	return &this
}

// NewCutoffCodeCriteriaWithDefaults instantiates a new CutoffCodeCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCutoffCodeCriteriaWithDefaults() *CutoffCodeCriteria {
	this := CutoffCodeCriteria{}
	return &this
}

// GetCutoffCodes returns the CutoffCodes field value if set, zero value otherwise.
func (o *CutoffCodeCriteria) GetCutoffCodes() []CutoffCodeType {
	if o == nil || IsNil(o.CutoffCodes) {
		var ret []CutoffCodeType
		return ret
	}
	return o.CutoffCodes
}

// GetCutoffCodesOk returns a tuple with the CutoffCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeCriteria) GetCutoffCodesOk() ([]CutoffCodeType, bool) {
	if o == nil || IsNil(o.CutoffCodes) {
		return nil, false
	}
	return o.CutoffCodes, true
}

// HasCutoffCodes returns a boolean if a field has been set.
func (o *CutoffCodeCriteria) HasCutoffCodes() bool {
	if o != nil && !IsNil(o.CutoffCodes) {
		return true
	}

	return false
}

// SetCutoffCodes gets a reference to the given []CutoffCodeType and assigns it to the CutoffCodes field.
func (o *CutoffCodeCriteria) SetCutoffCodes(v []CutoffCodeType) {
	o.CutoffCodes = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CutoffCodeCriteria) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeCriteria) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CutoffCodeCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CutoffCodeCriteria) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CutoffCodeCriteria) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeCriteria) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CutoffCodeCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CutoffCodeCriteria) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CutoffCodeCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CutoffCodeCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CutoffCodes) {
		toSerialize["cutoffCodes"] = o.CutoffCodes
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCutoffCodeCriteria struct {
	value *CutoffCodeCriteria
	isSet bool
}

func (v NullableCutoffCodeCriteria) Get() *CutoffCodeCriteria {
	return v.value
}

func (v *NullableCutoffCodeCriteria) Set(val *CutoffCodeCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCutoffCodeCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCutoffCodeCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCutoffCodeCriteria(val *CutoffCodeCriteria) *NullableCutoffCodeCriteria {
	return &NullableCutoffCodeCriteria{value: val, isSet: true}
}

func (v NullableCutoffCodeCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCutoffCodeCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


