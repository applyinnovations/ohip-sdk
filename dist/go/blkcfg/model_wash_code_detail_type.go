/*
OPERA Cloud Block Configuration API

APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkcfg

import (
	"encoding/json"
)

// checks if the WashCodeDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WashCodeDetailType{}

// WashCodeDetailType Allows for a choice to populate the detail information based on the choice between 'Wash by number of rooms' and 'Wash by %'.
type WashCodeDetailType struct {
	// Number of days prior to arrival of a block or block's cutoff day.
	DaysPriorToArrival *int32 `json:"daysPriorToArrival,omitempty"`
	WashByPercent *int32 `json:"washByPercent,omitempty"`
	WashByRoom *WashByRoomType `json:"washByRoom,omitempty"`
}

// NewWashCodeDetailType instantiates a new WashCodeDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWashCodeDetailType() *WashCodeDetailType {
	this := WashCodeDetailType{}
	return &this
}

// NewWashCodeDetailTypeWithDefaults instantiates a new WashCodeDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWashCodeDetailTypeWithDefaults() *WashCodeDetailType {
	this := WashCodeDetailType{}
	return &this
}

// GetDaysPriorToArrival returns the DaysPriorToArrival field value if set, zero value otherwise.
func (o *WashCodeDetailType) GetDaysPriorToArrival() int32 {
	if o == nil || IsNil(o.DaysPriorToArrival) {
		var ret int32
		return ret
	}
	return *o.DaysPriorToArrival
}

// GetDaysPriorToArrivalOk returns a tuple with the DaysPriorToArrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WashCodeDetailType) GetDaysPriorToArrivalOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysPriorToArrival) {
		return nil, false
	}
	return o.DaysPriorToArrival, true
}

// HasDaysPriorToArrival returns a boolean if a field has been set.
func (o *WashCodeDetailType) HasDaysPriorToArrival() bool {
	if o != nil && !IsNil(o.DaysPriorToArrival) {
		return true
	}

	return false
}

// SetDaysPriorToArrival gets a reference to the given int32 and assigns it to the DaysPriorToArrival field.
func (o *WashCodeDetailType) SetDaysPriorToArrival(v int32) {
	o.DaysPriorToArrival = &v
}

// GetWashByPercent returns the WashByPercent field value if set, zero value otherwise.
func (o *WashCodeDetailType) GetWashByPercent() int32 {
	if o == nil || IsNil(o.WashByPercent) {
		var ret int32
		return ret
	}
	return *o.WashByPercent
}

// GetWashByPercentOk returns a tuple with the WashByPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WashCodeDetailType) GetWashByPercentOk() (*int32, bool) {
	if o == nil || IsNil(o.WashByPercent) {
		return nil, false
	}
	return o.WashByPercent, true
}

// HasWashByPercent returns a boolean if a field has been set.
func (o *WashCodeDetailType) HasWashByPercent() bool {
	if o != nil && !IsNil(o.WashByPercent) {
		return true
	}

	return false
}

// SetWashByPercent gets a reference to the given int32 and assigns it to the WashByPercent field.
func (o *WashCodeDetailType) SetWashByPercent(v int32) {
	o.WashByPercent = &v
}

// GetWashByRoom returns the WashByRoom field value if set, zero value otherwise.
func (o *WashCodeDetailType) GetWashByRoom() WashByRoomType {
	if o == nil || IsNil(o.WashByRoom) {
		var ret WashByRoomType
		return ret
	}
	return *o.WashByRoom
}

// GetWashByRoomOk returns a tuple with the WashByRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WashCodeDetailType) GetWashByRoomOk() (*WashByRoomType, bool) {
	if o == nil || IsNil(o.WashByRoom) {
		return nil, false
	}
	return o.WashByRoom, true
}

// HasWashByRoom returns a boolean if a field has been set.
func (o *WashCodeDetailType) HasWashByRoom() bool {
	if o != nil && !IsNil(o.WashByRoom) {
		return true
	}

	return false
}

// SetWashByRoom gets a reference to the given WashByRoomType and assigns it to the WashByRoom field.
func (o *WashCodeDetailType) SetWashByRoom(v WashByRoomType) {
	o.WashByRoom = &v
}

func (o WashCodeDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WashCodeDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaysPriorToArrival) {
		toSerialize["daysPriorToArrival"] = o.DaysPriorToArrival
	}
	if !IsNil(o.WashByPercent) {
		toSerialize["washByPercent"] = o.WashByPercent
	}
	if !IsNil(o.WashByRoom) {
		toSerialize["washByRoom"] = o.WashByRoom
	}
	return toSerialize, nil
}

type NullableWashCodeDetailType struct {
	value *WashCodeDetailType
	isSet bool
}

func (v NullableWashCodeDetailType) Get() *WashCodeDetailType {
	return v.value
}

func (v *NullableWashCodeDetailType) Set(val *WashCodeDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableWashCodeDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableWashCodeDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWashCodeDetailType(val *WashCodeDetailType) *NullableWashCodeDetailType {
	return &NullableWashCodeDetailType{value: val, isSet: true}
}

func (v NullableWashCodeDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWashCodeDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


