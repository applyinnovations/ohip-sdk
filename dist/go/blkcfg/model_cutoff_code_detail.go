/*
OPERA Cloud Block Configuration API

APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkcfg

import (
	"encoding/json"
)

// checks if the CutoffCodeDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CutoffCodeDetail{}

// CutoffCodeDetail A representation of the single entry information for cutoff schedule detail.
type CutoffCodeDetail struct {
	// Cutoff Schedule detail Id.
	Id *int32 `json:"id,omitempty"`
	// Contains stay date.
	StayDate *string `json:"stayDate,omitempty"`
	// Contains the number of cutoff Days to be set for specific date and room type.
	CutoffDays *int32 `json:"cutoffDays,omitempty"`
	// Contains the room types.
	RoomType *string `json:"roomType,omitempty"`
}

// NewCutoffCodeDetail instantiates a new CutoffCodeDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCutoffCodeDetail() *CutoffCodeDetail {
	this := CutoffCodeDetail{}
	return &this
}

// NewCutoffCodeDetailWithDefaults instantiates a new CutoffCodeDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCutoffCodeDetailWithDefaults() *CutoffCodeDetail {
	this := CutoffCodeDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CutoffCodeDetail) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeDetail) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CutoffCodeDetail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CutoffCodeDetail) SetId(v int32) {
	o.Id = &v
}

// GetStayDate returns the StayDate field value if set, zero value otherwise.
func (o *CutoffCodeDetail) GetStayDate() string {
	if o == nil || IsNil(o.StayDate) {
		var ret string
		return ret
	}
	return *o.StayDate
}

// GetStayDateOk returns a tuple with the StayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeDetail) GetStayDateOk() (*string, bool) {
	if o == nil || IsNil(o.StayDate) {
		return nil, false
	}
	return o.StayDate, true
}

// HasStayDate returns a boolean if a field has been set.
func (o *CutoffCodeDetail) HasStayDate() bool {
	if o != nil && !IsNil(o.StayDate) {
		return true
	}

	return false
}

// SetStayDate gets a reference to the given string and assigns it to the StayDate field.
func (o *CutoffCodeDetail) SetStayDate(v string) {
	o.StayDate = &v
}

// GetCutoffDays returns the CutoffDays field value if set, zero value otherwise.
func (o *CutoffCodeDetail) GetCutoffDays() int32 {
	if o == nil || IsNil(o.CutoffDays) {
		var ret int32
		return ret
	}
	return *o.CutoffDays
}

// GetCutoffDaysOk returns a tuple with the CutoffDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeDetail) GetCutoffDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.CutoffDays) {
		return nil, false
	}
	return o.CutoffDays, true
}

// HasCutoffDays returns a boolean if a field has been set.
func (o *CutoffCodeDetail) HasCutoffDays() bool {
	if o != nil && !IsNil(o.CutoffDays) {
		return true
	}

	return false
}

// SetCutoffDays gets a reference to the given int32 and assigns it to the CutoffDays field.
func (o *CutoffCodeDetail) SetCutoffDays(v int32) {
	o.CutoffDays = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *CutoffCodeDetail) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CutoffCodeDetail) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *CutoffCodeDetail) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *CutoffCodeDetail) SetRoomType(v string) {
	o.RoomType = &v
}

func (o CutoffCodeDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CutoffCodeDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.StayDate) {
		toSerialize["stayDate"] = o.StayDate
	}
	if !IsNil(o.CutoffDays) {
		toSerialize["cutoffDays"] = o.CutoffDays
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	return toSerialize, nil
}

type NullableCutoffCodeDetail struct {
	value *CutoffCodeDetail
	isSet bool
}

func (v NullableCutoffCodeDetail) Get() *CutoffCodeDetail {
	return v.value
}

func (v *NullableCutoffCodeDetail) Set(val *CutoffCodeDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCutoffCodeDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCutoffCodeDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCutoffCodeDetail(val *CutoffCodeDetail) *NullableCutoffCodeDetail {
	return &NullableCutoffCodeDetail{value: val, isSet: true}
}

func (v NullableCutoffCodeDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCutoffCodeDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


