/*
OPERA Cloud Export Configuration API

APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package expcfg

import (
	"encoding/json"
)

// checks if the ExportScheduleFrequencyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportScheduleFrequencyType{}

// ExportScheduleFrequencyType Frequency at which exports is scheduled to run
type ExportScheduleFrequencyType struct {
	Daily *ExportScheduleFrequencyDailyType `json:"daily,omitempty"`
	EndOfDay *ExportScheduleFrequencyEODType `json:"endOfDay,omitempty"`
	Hourly *ExportScheduleFrequencyHourlyType `json:"hourly,omitempty"`
	Monthly *ExportScheduleFrequencyMonthlyType `json:"monthly,omitempty"`
	Once *ExportScheduleFrequencyOnceType `json:"once,omitempty"`
	Weekly *ExportScheduleFrequencyWeeklyType `json:"weekly,omitempty"`
}

// NewExportScheduleFrequencyType instantiates a new ExportScheduleFrequencyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportScheduleFrequencyType() *ExportScheduleFrequencyType {
	this := ExportScheduleFrequencyType{}
	return &this
}

// NewExportScheduleFrequencyTypeWithDefaults instantiates a new ExportScheduleFrequencyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportScheduleFrequencyTypeWithDefaults() *ExportScheduleFrequencyType {
	this := ExportScheduleFrequencyType{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetDaily() ExportScheduleFrequencyDailyType {
	if o == nil || IsNil(o.Daily) {
		var ret ExportScheduleFrequencyDailyType
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetDailyOk() (*ExportScheduleFrequencyDailyType, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given ExportScheduleFrequencyDailyType and assigns it to the Daily field.
func (o *ExportScheduleFrequencyType) SetDaily(v ExportScheduleFrequencyDailyType) {
	o.Daily = &v
}

// GetEndOfDay returns the EndOfDay field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetEndOfDay() ExportScheduleFrequencyEODType {
	if o == nil || IsNil(o.EndOfDay) {
		var ret ExportScheduleFrequencyEODType
		return ret
	}
	return *o.EndOfDay
}

// GetEndOfDayOk returns a tuple with the EndOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetEndOfDayOk() (*ExportScheduleFrequencyEODType, bool) {
	if o == nil || IsNil(o.EndOfDay) {
		return nil, false
	}
	return o.EndOfDay, true
}

// HasEndOfDay returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasEndOfDay() bool {
	if o != nil && !IsNil(o.EndOfDay) {
		return true
	}

	return false
}

// SetEndOfDay gets a reference to the given ExportScheduleFrequencyEODType and assigns it to the EndOfDay field.
func (o *ExportScheduleFrequencyType) SetEndOfDay(v ExportScheduleFrequencyEODType) {
	o.EndOfDay = &v
}

// GetHourly returns the Hourly field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetHourly() ExportScheduleFrequencyHourlyType {
	if o == nil || IsNil(o.Hourly) {
		var ret ExportScheduleFrequencyHourlyType
		return ret
	}
	return *o.Hourly
}

// GetHourlyOk returns a tuple with the Hourly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetHourlyOk() (*ExportScheduleFrequencyHourlyType, bool) {
	if o == nil || IsNil(o.Hourly) {
		return nil, false
	}
	return o.Hourly, true
}

// HasHourly returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasHourly() bool {
	if o != nil && !IsNil(o.Hourly) {
		return true
	}

	return false
}

// SetHourly gets a reference to the given ExportScheduleFrequencyHourlyType and assigns it to the Hourly field.
func (o *ExportScheduleFrequencyType) SetHourly(v ExportScheduleFrequencyHourlyType) {
	o.Hourly = &v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetMonthly() ExportScheduleFrequencyMonthlyType {
	if o == nil || IsNil(o.Monthly) {
		var ret ExportScheduleFrequencyMonthlyType
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetMonthlyOk() (*ExportScheduleFrequencyMonthlyType, bool) {
	if o == nil || IsNil(o.Monthly) {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasMonthly() bool {
	if o != nil && !IsNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given ExportScheduleFrequencyMonthlyType and assigns it to the Monthly field.
func (o *ExportScheduleFrequencyType) SetMonthly(v ExportScheduleFrequencyMonthlyType) {
	o.Monthly = &v
}

// GetOnce returns the Once field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetOnce() ExportScheduleFrequencyOnceType {
	if o == nil || IsNil(o.Once) {
		var ret ExportScheduleFrequencyOnceType
		return ret
	}
	return *o.Once
}

// GetOnceOk returns a tuple with the Once field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetOnceOk() (*ExportScheduleFrequencyOnceType, bool) {
	if o == nil || IsNil(o.Once) {
		return nil, false
	}
	return o.Once, true
}

// HasOnce returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasOnce() bool {
	if o != nil && !IsNil(o.Once) {
		return true
	}

	return false
}

// SetOnce gets a reference to the given ExportScheduleFrequencyOnceType and assigns it to the Once field.
func (o *ExportScheduleFrequencyType) SetOnce(v ExportScheduleFrequencyOnceType) {
	o.Once = &v
}

// GetWeekly returns the Weekly field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyType) GetWeekly() ExportScheduleFrequencyWeeklyType {
	if o == nil || IsNil(o.Weekly) {
		var ret ExportScheduleFrequencyWeeklyType
		return ret
	}
	return *o.Weekly
}

// GetWeeklyOk returns a tuple with the Weekly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyType) GetWeeklyOk() (*ExportScheduleFrequencyWeeklyType, bool) {
	if o == nil || IsNil(o.Weekly) {
		return nil, false
	}
	return o.Weekly, true
}

// HasWeekly returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyType) HasWeekly() bool {
	if o != nil && !IsNil(o.Weekly) {
		return true
	}

	return false
}

// SetWeekly gets a reference to the given ExportScheduleFrequencyWeeklyType and assigns it to the Weekly field.
func (o *ExportScheduleFrequencyType) SetWeekly(v ExportScheduleFrequencyWeeklyType) {
	o.Weekly = &v
}

func (o ExportScheduleFrequencyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportScheduleFrequencyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.EndOfDay) {
		toSerialize["endOfDay"] = o.EndOfDay
	}
	if !IsNil(o.Hourly) {
		toSerialize["hourly"] = o.Hourly
	}
	if !IsNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}
	if !IsNil(o.Once) {
		toSerialize["once"] = o.Once
	}
	if !IsNil(o.Weekly) {
		toSerialize["weekly"] = o.Weekly
	}
	return toSerialize, nil
}

type NullableExportScheduleFrequencyType struct {
	value *ExportScheduleFrequencyType
	isSet bool
}

func (v NullableExportScheduleFrequencyType) Get() *ExportScheduleFrequencyType {
	return v.value
}

func (v *NullableExportScheduleFrequencyType) Set(val *ExportScheduleFrequencyType) {
	v.value = val
	v.isSet = true
}

func (v NullableExportScheduleFrequencyType) IsSet() bool {
	return v.isSet
}

func (v *NullableExportScheduleFrequencyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportScheduleFrequencyType(val *ExportScheduleFrequencyType) *NullableExportScheduleFrequencyType {
	return &NullableExportScheduleFrequencyType{value: val, isSet: true}
}

func (v NullableExportScheduleFrequencyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportScheduleFrequencyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


