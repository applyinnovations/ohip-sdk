/*
OPERA Cloud Export Configuration API

APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package expcfg

import (
	"encoding/json"
)

// checks if the ExportColumnLengthType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportColumnLengthType{}

// ExportColumnLengthType Type that determines the length of the export column
type ExportColumnLengthType struct {
	// Property Value
	Value *int32 `json:"value,omitempty"`
	// If variable is true then value cannot be specified and value can be of variable length
	Variable *bool `json:"variable,omitempty"`
}

// NewExportColumnLengthType instantiates a new ExportColumnLengthType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportColumnLengthType() *ExportColumnLengthType {
	this := ExportColumnLengthType{}
	return &this
}

// NewExportColumnLengthTypeWithDefaults instantiates a new ExportColumnLengthType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportColumnLengthTypeWithDefaults() *ExportColumnLengthType {
	this := ExportColumnLengthType{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ExportColumnLengthType) GetValue() int32 {
	if o == nil || IsNil(o.Value) {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportColumnLengthType) GetValueOk() (*int32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ExportColumnLengthType) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *ExportColumnLengthType) SetValue(v int32) {
	o.Value = &v
}

// GetVariable returns the Variable field value if set, zero value otherwise.
func (o *ExportColumnLengthType) GetVariable() bool {
	if o == nil || IsNil(o.Variable) {
		var ret bool
		return ret
	}
	return *o.Variable
}

// GetVariableOk returns a tuple with the Variable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportColumnLengthType) GetVariableOk() (*bool, bool) {
	if o == nil || IsNil(o.Variable) {
		return nil, false
	}
	return o.Variable, true
}

// HasVariable returns a boolean if a field has been set.
func (o *ExportColumnLengthType) HasVariable() bool {
	if o != nil && !IsNil(o.Variable) {
		return true
	}

	return false
}

// SetVariable gets a reference to the given bool and assigns it to the Variable field.
func (o *ExportColumnLengthType) SetVariable(v bool) {
	o.Variable = &v
}

func (o ExportColumnLengthType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportColumnLengthType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Variable) {
		toSerialize["variable"] = o.Variable
	}
	return toSerialize, nil
}

type NullableExportColumnLengthType struct {
	value *ExportColumnLengthType
	isSet bool
}

func (v NullableExportColumnLengthType) Get() *ExportColumnLengthType {
	return v.value
}

func (v *NullableExportColumnLengthType) Set(val *ExportColumnLengthType) {
	v.value = val
	v.isSet = true
}

func (v NullableExportColumnLengthType) IsSet() bool {
	return v.isSet
}

func (v *NullableExportColumnLengthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportColumnLengthType(val *ExportColumnLengthType) *NullableExportColumnLengthType {
	return &NullableExportColumnLengthType{value: val, isSet: true}
}

func (v NullableExportColumnLengthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportColumnLengthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


