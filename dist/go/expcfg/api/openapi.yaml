openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs catering to the managing export master data configuration. <br\
    \ /><The exports feature in OPERA Cloud provides the ability to create and export\
    \ data files, such as back office data, to third-party interfaces and receiving\
    \ systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p>\
    \ This document and all content within is available under the Universal Permissive\
    \ License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024\
    \ Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Export Configuration API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /exp/config/v1
tags:
- description: The Export Service provides operations used by Opera to configure and
    generate file exports of Opera data.
  name: Export
paths:
  /availableExports:
    get:
      description: "Use this API to return available exports based on search criteria\
        \ such as fetchColumns, fetchDataSetup, fetchDestinationSetup, fetchGenerateConfiguration,\
        \ limit, exportFileId, idExtension, idContext, type, hotelIds, fileGroup,\
        \ includeInactive, includeComponents. <p><strong>OperationId:</strong>getExportsAvailable</p>"
      operationId: getExportsAvailable
      parameters:
      - in: query
        name: fetchColumns
        schema:
          type: boolean
      - in: query
        name: fetchDataSetup
        schema:
          type: boolean
      - in: query
        name: fetchDestinationSetup
        schema:
          type: boolean
      - in: query
        name: fetchGenerateConfiguration
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: exportFileId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Enumeration of export file groups.
        in: query
        name: fileGroup
        schema:
          enum:
          - Miscellaneous
          - Memberships
          - Country
          - Delphi
          - BackOffice
          - BackOfficeRevenue
          - BackOfficeCityLedger
          - BackOfficeMarketStatistics
          - BackOfficeDailyStatistics
          - CommissionEft
          type: string
      - description: Indicates whether inactive records should be returned.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - in: query
        name: match
        schema:
          type: string
      - description: Indicate whether component exports should be included in the
          request.
        in: query
        name: includeComponents
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportsAvailable'
          description: Response object including a list of available exports.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportsAvailable not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch exports available.
      tags:
      - Export
  /columnsAndFunctions:
    get:
      description: "Use this API to return export columns and functions based on search\
        \ criteria such as fetchDbColumns, fetchOperaApis, fetchPrePostProcedures,\
        \ dataSource, exportFileId, category. <p><strong>OperationId:</strong>getExportColumnsAndFunctions</p>"
      operationId: getExportColumnsAndFunctions
      parameters:
      - in: query
        name: fetchDbColumns
        schema:
          type: boolean
      - in: query
        name: fetchOperaApis
        schema:
          type: boolean
      - in: query
        name: fetchPrePostProcedures
        schema:
          type: boolean
      - description: Data source for which we are supposed to get columns and pre
          post procedures
        in: query
        name: dataSource
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: exportFileId
        schema:
          type: string
      - description: Enumeration of API Categories.
        in: query
        name: category
        schema:
          enum:
          - Exports
          - CustomNumbers
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportColumnsAndFunctionsDetails'
          description: "Response that contains columns, pre post functions and export\
            \ functions."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportColumnsAndFunctions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export columns and functions.
      tags:
      - Export
  /exportMappingCodes:
    post:
      description: ' <p><strong>OperationId:</strong>postExportMappingCodes</p>'
      operationId: postExportMappingCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportMappingCodes'
        description: Request to create export mapping code for a given export.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create export mapping codes.
      tags:
      - Export
      x-codegen-request-body-name: exportMappingCodes
    put:
      description: ' <p><strong>OperationId:</strong>putExportMappingCodes</p>'
      operationId: putExportMappingCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportMappingCodes'
        description: Request to create export mapping code for a given export.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportMappingCodesDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to update export mapping codes.
      tags:
      - Export
      x-codegen-request-body-name: exportMappingCodes
  /exportMappingLinkedTypes:
    put:
      description: ' <p><strong>OperationId:</strong>putExportMappingLinkedTypes</p>'
      operationId: putExportMappingLinkedTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportMappingLinkedTypes'
        description: Request to fetch codes linked to export mapping codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportMappingLinkedTypesDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to update export mapping linked types.
      tags:
      - Export
      x-codegen-request-body-name: exportMappingLinkedTypes
  /exportMappings:
    get:
      description: ' <p><strong>OperationId:</strong>getExportMappingsByChain</p>'
      operationId: getExportMappingsByChain
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Enumeration  of Types allowed for Export Mapping
        explode: true
        in: query
        name: exportMappingConfigs
        schema:
          items:
            enum:
            - TransactionCodes
            - MarketCodes
            - PackageCodes
            - PaymentMethods
            - ProfileIdTypes
            - StatisticCodes
            - PropertyCodes
            - CountryCodes
            - NationalityCodes
            - StateCodes
            - DistrictCodes
            - CityCodes
            - CountryCities
            - PurposeOfStayCodes
            - TransportationCodes
            - CancelReasons
            - Gender
            - RoomTypes
            - IdCountryCodes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchExportMappings'
          description: Response to fetch the export definitions for a given export.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportMappingsByChain not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export mappings by chain.
      tags:
      - Export
  /exportSchedules:
    delete:
      description: Use this API to delete export schedules based on the jobNames.
        <p><strong>OperationId:</strong>removeExportSchedules</p>
      operationId: removeExportSchedules
      parameters:
      - description: Unique name that identifies export schedule
        explode: true
        in: query
        name: jobNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove export schedules.
      tags:
      - Export
    post:
      description: Use this API to create export schedules. <p><strong>OperationId:</strong>postExportSchedules</p>
      operationId: postExportSchedules
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportSchedulesCriteria'
        description: Request to create export schedules
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create export schedules.
      tags:
      - Export
      x-codegen-request-body-name: exportSchedulesCriteria
  /exportSchedules/{exportFileId}:
    put:
      description: ' <p><strong>OperationId:</strong>changeExportSchedulesByChain</p>'
      operationId: changeExportSchedulesByChain
      parameters:
      - description: Unique ID of export file.
        in: path
        name: exportFileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportSchedulesToBeChanged'
        description: Request object for changing export schedules
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportSchedulesStatus'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change export schedules.
      tags:
      - Export
      x-codegen-request-body-name: exportSchedulesToBeChanged
  /hotels/{hotelId}/configTypes/{configType}/exportMappingCodesToLink:
    get:
      description: ' <p><strong>OperationId:</strong>getExportMappingCodesToLink</p>'
      operationId: getExportMappingCodesToLink
      parameters:
      - description: Configuration Type.
        in: path
        name: configType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The hotel code for the codes to fetch for linking.
        in: query
        name: code
        schema:
          type: string
      - description: The hotel code for the codes to fetch for linking.
        in: query
        name: description
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 25
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportMappingCodesToLink'
          description: The codes for a given property which are to be linked to the
            mapping code.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportMappingCodesToLink not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export mapping codes to link.
      tags:
      - Export
  /hotels/{hotelId}/exportActivityLog:
    get:
      description: "Use this API to return activity logs for export data for a specific\
        \ property based on search criteria such as hotelId, activityType, fromDate,\
        \ toDate, limit, offset, module, parameterName, parameterValue, activityGroup,\
        \ searchText, userByIds, userForIds.  <p><strong>OperationId:</strong>getExportActivityLog</p>\
        \ <p>The maximum allowable limit for this API is <strong>25</strong>.</p>"
      operationId: getExportActivityLog
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: activityType
        required: true
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        required: true
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        required: true
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Activity module.
        in: query
        name: module
        schema:
          enum:
          - Reservation
          - Contract
          - Allotment
          - Outlookview
          - Profile
          - Accountreceivables
          - GdsConvRateCodes
          - RateCode
          - Billing
          - Activity
          type: string
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportActivityLog'
          description: Response object for the request for the export user activity
            log.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch activity logs for Export Data.
      tags:
      - Export
  /hotels/{hotelId}/exportMappingId/{exportMappingId}/exportMappings:
    delete:
      description: Use this API to delete export mappings for a specific property
        based on the exportMappingId and the hotelId. <p><strong>OperationId:</strong>deleteExistingExportMappings</p>
      operationId: deleteExistingExportMappings
      parameters:
      - description: Export Mapping Id.
        in: path
        name: exportMappingId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove export mappings.
      tags:
      - Export
  /hotels/{hotelId}/exportMappingTypes/{exportMappingTypeId}/exportMappingCodes:
    get:
      description: ' <p><strong>OperationId:</strong>getExportMappingCodes</p>'
      operationId: getExportMappingCodes
      parameters:
      - description: Export Mapping Type Id.
        in: path
        name: exportMappingTypeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchExportMappingCodes'
          description: The details of the export mapping code being fetched.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportMappingCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export mapping codes.
      tags:
      - Export
  /hotels/{hotelId}/exportMappings:
    get:
      description: ' <p><strong>OperationId:</strong>getExportMappings</p>'
      operationId: getExportMappings
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Enumeration  of Types allowed for Export Mapping
        explode: true
        in: query
        name: exportMappingConfigs
        schema:
          items:
            enum:
            - TransactionCodes
            - MarketCodes
            - PackageCodes
            - PaymentMethods
            - ProfileIdTypes
            - StatisticCodes
            - PropertyCodes
            - CountryCodes
            - NationalityCodes
            - StateCodes
            - DistrictCodes
            - CityCodes
            - CountryCities
            - PurposeOfStayCodes
            - TransportationCodes
            - CancelReasons
            - Gender
            - RoomTypes
            - IdCountryCodes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchExportMappings'
          description: Response to fetch the export definitions for a given export.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportMappings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export mappings.
      tags:
      - Export
    post:
      description: ' <p><strong>OperationId:</strong>postExportMappings</p>'
      operationId: postExportMappings
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportMappings'
        description: Request to create export definitions for a given export.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create export mappings.
      tags:
      - Export
      x-codegen-request-body-name: exportMappings
    put:
      description: ' <p><strong>OperationId:</strong>putExportMappings</p>'
      operationId: putExportMappings
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportMappings'
        description: Request to create export definitions for a given export.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportMappingsDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to update export mappings.
      tags:
      - Export
      x-codegen-request-body-name: exportMappings
  /hotels/{hotelId}/exportMappings/linkedCodes:
    get:
      description: ' <p><strong>OperationId:</strong>getExportMappingLinkedCodes</p>'
      operationId: getExportMappingLinkedCodes
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Linked code.
        in: query
        name: codeToLink
        schema:
          type: string
      - description: Enumeration  of Types allowed for Export Mapping
        in: query
        name: configType
        schema:
          enum:
          - TransactionCodes
          - MarketCodes
          - PackageCodes
          - PaymentMethods
          - ProfileIdTypes
          - StatisticCodes
          - PropertyCodes
          - CountryCodes
          - NationalityCodes
          - StateCodes
          - DistrictCodes
          - CityCodes
          - CountryCities
          - PurposeOfStayCodes
          - TransportationCodes
          - CancelReasons
          - Gender
          - RoomTypes
          - IdCountryCodes
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportMappingLinkedCodes'
          description: Response to fetch codes linked to export mapping codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportMappingLinkedCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export mapping linked codes.
      tags:
      - Export
  /hotels/{hotelId}/exportMappings/{exportMappingId}/mappingTypes/{mappingTypeCode}/exportMappingCodes:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteExportMappingCodes</p>'
      operationId: deleteExportMappingCodes
      parameters:
      - description: Mapping Type Code.
        in: path
        name: mappingTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Export Mapping Id.
        in: path
        name: exportMappingId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove export mapping codes.
      tags:
      - Export
  /hotels/{hotelId}/exportSchedules:
    get:
      description: "Use this API to return export schedules for a specific property\
        \ based on search criteria such as hotelId, timeZone, exportFileId, idExtension,\
        \ idContext, type, exportGroup, exportName, startDate, endDate, frequency,\
        \ includeInactive.  <p><strong>OperationId:</strong>getExportSchedules</p>"
      operationId: getExportSchedules
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Time zone hour and minute specified in the format TZH:TZM example:-05:00
        in: query
        name: timeZone
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: exportFileId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Enumeration of export file groups.
        in: query
        name: exportGroup
        schema:
          enum:
          - Miscellaneous
          - Memberships
          - Country
          - BackOffice
          type: string
      - description: Export name to restrict export schedules
        in: query
        name: exportName
        schema:
          type: string
      - description: Start Date to restrict export schedules
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: End Date to restrict export schedules
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Frequency for which export schedules needs to be returned
        in: query
        name: frequency
        schema:
          enum:
          - Once
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - EndOfDay
          type: string
      - description: Indicates whether inactive schedules needs to be returned or
          not
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportSchedulesDetails'
          description: Export Schedules collection matching the crieteria specified
            in the request
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportSchedules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch export schedules.
      tags:
      - Export
  /hotels/{hotelId}/exportSchedules/{exportFileId}:
    put:
      description: Use this API to update export schedules based on the exportFileId
        and exportSchedulesToBeChanged. <p><strong>OperationId:</strong>changeExportSchedules</p>
      operationId: changeExportSchedules
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of export file.
        in: path
        name: exportFileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/exportSchedulesToBeChanged'
        description: Request object for changing export schedules
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exportSchedulesStatus'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change export schedules.
      tags:
      - Export
      x-codegen-request-body-name: exportSchedulesToBeChanged
  /{exportFileId}/generatedExports:
    get:
      description: ' <p><strong>OperationId:</strong>getExportsGenerated</p> <p>The
        maximum allowable limit for this API is <strong>25</strong>.</p>'
      operationId: getExportsGenerated
      parameters:
      - description: Unique ID of export file.
        in: path
        name: exportFileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of export data.
        in: query
        name: exportDataId
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 25
          maximum: 100
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/generatedExports'
          description: Response object including a list of generated exports.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExportsGenerated not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch exports generated.
      tags:
      - Export
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    exportsAvailable:
      description: Response object including a list of available exports.
      properties:
        exports:
          $ref: '#/components/schemas/exportListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportListType:
      description: Contains a collection of available export records.
      properties:
        export:
          description: The list of export records.
          items:
            $ref: '#/components/schemas/exportConfigurationType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    exportConfigurationType:
      description: Type that hold configuration information related to export
      properties:
        summaryInfo:
          $ref: '#/components/schemas/exportHeaderSummaryType'
        dataSetup:
          $ref: '#/components/schemas/exportDataSetupType'
        generateConfigSetup:
          $ref: '#/components/schemas/exportGenerateConfigurationType'
        destinationSetup:
          $ref: '#/components/schemas/exportDestinationType'
        components:
          description: A collection of export components.
          items:
            $ref: '#/components/schemas/exportComponentType'
          maxItems: 4000
          type: array
        columns:
          description: A collection of export columns.
          items:
            $ref: '#/components/schemas/exportColumnDetailType'
          maxItems: 4000
          type: array
        xmlColumns:
          $ref: '#/components/schemas/exportXMLColumnsType'
      type: object
    exportHeaderSummaryType:
      description: Details of one export.
      properties:
        exportFileId:
          $ref: '#/components/schemas/uniqueID_Type'
        fileType:
          description: The file type of the export.
          maxLength: 20
          minLength: 0
          type: string
        sourceDescription:
          description: The description of the source file of the export.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The description of the export.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: The hotel code for the export.
          maxLength: 20
          minLength: 0
          type: string
        exportType:
          $ref: '#/components/schemas/exportType'
        inactive:
          description: An indicator which show the active status of the export.
          type: boolean
        masterExportId:
          $ref: '#/components/schemas/uniqueID_Type'
        parameterForm:
          description: The name of the parameter form used to collect runtime information.
          maxLength: 40
          minLength: 0
          type: string
        exportXml:
          description: Indicates if the export is an XML file
          type: boolean
        logLevel:
          description: Internal number to indicate the log level used when generating
            the export.
          type: integer
        exportSequence:
          description: Component export sequence
          type: integer
        containsSensitiveData:
          description: Indicates if the export has sensitive data
          type: boolean
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    exportType:
      description: Enumeration of export file groups.
      enum:
      - Miscellaneous
      - Memberships
      - Country
      - Delphi
      - BackOffice
      - BackOfficeRevenue
      - BackOfficeCityLedger
      - BackOfficeMarketStatistics
      - BackOfficeDailyStatistics
      - CommissionEft
      type: string
    exportDataSetupType:
      description: Details of processing data for export being setup.
      properties:
        dataSourceName:
          description: The source view code.
          maxLength: 80
          minLength: 0
          type: string
        preExportProcedure:
          description: The code to execute prior to running the export in order to
            prepare the data.
          maxLength: 2000
          minLength: 0
          type: string
        postExportProcedure:
          description: "The code to execute after running the export, usually to clean\
            \ up data."
          maxLength: 2000
          minLength: 0
          type: string
        addNewLine:
          description: A flag to add new line character after every row of data generated.
          type: boolean
        createHeaderFooter:
          description: A flag to indicate if Export header and footer should always
            be created even if no data is generated.
          type: boolean
        appendToFile:
          description: A flag to indicate if the data should be appended to an existing
            file.
          type: boolean
        columnSeparator:
          description: Column separator of the export file.
          maxLength: 20
          minLength: 0
          type: string
        componentExport:
          description: A flag to indicate if this export contains export components.
          type: boolean
        compressData:
          description: A flag to indicate if the export is compressed.
          type: boolean
        filterCondition:
          description: Where clause for the file to select data form the Source View.
          maxLength: 2000
          minLength: 0
          type: string
        xMLRootTag:
          description: Main tag for the xml document
          maxLength: 80
          minLength: 0
          type: string
        xMLEncoding:
          description: For XML exports this allows to add the encoding attribute to
            the xml file header.
          maxLength: 20
          minLength: 0
          type: string
        xMLProcessingInstructions:
          description: For XML exports this allows to add the additional processing
            instructions to the XML file header if needed.
          maxLength: 2000
          minLength: 0
          type: string
        xMLDocumentTypeName:
          description: For XML exports this defines the optional document type name
          maxLength: 100
          minLength: 0
          type: string
        xMLDocumentTypeSystemId:
          description: For XML exports this defines the optional system id in doc
            type tag
          maxLength: 100
          minLength: 0
          type: string
        xMLDocumentTypePublicId:
          description: For XML exports this defines the optional public id in doc
            type tag
          maxLength: 100
          minLength: 0
          type: string
      type: object
    exportGenerateConfigurationType:
      description: Details of how and when the export is to be executed.
      properties:
        autoExport:
          description: A flag to set export to generate automatically.
          type: boolean
        nightAudit:
          $ref: '#/components/schemas/exportGenerateConfigurationType_nightAudit'
      type: object
    exportDestinationType:
      description: Details of the export's destination and format.
      properties:
        transportMethod:
          $ref: '#/components/schemas/transportMethodType'
        fileDeliveryConfig:
          $ref: '#/components/schemas/fileDeliveryConfigType'
        useOXIInterface:
          description: Specify if the OXI interface will be used for export file delivery.
          type: boolean
        oXIInterfaceId:
          description: "Interface ID from OXI, required if UploadType is not available."
          maxLength: 80
          minLength: 0
          type: string
        uploadType:
          description: Protocol used to upload the export file to FTP server.
          maxLength: 20
          minLength: 0
          type: string
        protocol:
          description: Protocol used to upload the export file to HTTP server.
          maxLength: 100
          minLength: 0
          type: string
        httpAddress:
          description: URL address of HTTP server which received export file.
          maxLength: 2000
          minLength: 0
          type: string
        sOAPActionInformation:
          description: Soap Action information if SOAP protocol is used to upload
            the export file.
          maxLength: 2000
          minLength: 0
          type: string
        encryptionType:
          description: Name of an encryption algorithm that will be used to encrypt
            an export file upon generation. This is used for the Default transport
            method.
          maxLength: 20
          minLength: 0
          type: string
        encryptionKey:
          description: Key that will be used during export file encryption; this is
            only needed if an Encryption Type has been specified.
          maxLength: 100
          minLength: 0
          type: string
        xMLDocumentName:
          description: Main tag for the XML document.
          maxLength: 80
          minLength: 0
          type: string
        fileName:
          description: Formula used to generate the name of the export file.
          maxLength: 2000
          minLength: 0
          type: string
        fileExtension:
          description: Formula used to generate the extension of the export file.
          maxLength: 2000
          minLength: 0
          type: string
        zipFileName:
          description: The zip file name based on the formula used in the setup.
          maxLength: 2000
          minLength: 0
          type: string
        zipFileLocation:
          description: The zip file location where the zip file is saved after being
            generated.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    transportMethodType:
      description: Enumeration of transport methods used to deliver exports.
      enum:
      - Ftp
      - Sftp
      - SftpCn
      - Http
      - FileSystem
      - Default
      type: string
    fileDeliveryConfigType:
      properties:
        communicationType:
          $ref: '#/components/schemas/fileDeliveryCommunicationType'
        hostURL:
          description: Host address for FTP or URL for HTTP.
          maxLength: 250
          minLength: 0
          type: string
        userId:
          description: User id to authenticate while connecting through FTP or HTTP.
          maxLength: 30
          minLength: 0
          type: string
        password:
          description: Password to authenticate while connecting through FTP or HTTP.
          maxLength: 2000
          minLength: 0
          type: string
        directory:
          description: Directory to which the file is delivered while using FTP or
            FILE_SYSTEM.
          maxLength: 2000
          minLength: 0
          type: string
        enableSafeCreate:
          description: Whether to create a temporary file and move it to actual file
            once entire data is written to the file (to prevent consumers from reading
            incomplete files).
          type: boolean
        tempDirectory:
          description: "In safe create mode, original directory where the file should\
            \ be created."
          maxLength: 2000
          minLength: 0
          type: string
        useAsciiTransfer:
          description: Whether to transfer the file in ASCII or binary mode.
          type: boolean
        compressFile:
          description: Whether to compress the file before delivery.
          type: boolean
        useSOAPProtocol:
          description: Whether to deliver the file using SOAP protocol.
          type: boolean
        sOAPVersion:
          description: Version of SOAP protocol to use.
          maxLength: 20
          minLength: 0
          type: string
        sOAPAction:
          description: "For SOAP version 1.1, value of SOAPAction to be passed."
          maxLength: 50
          minLength: 0
          type: string
        retryCount:
          description: "Number of delivery attempts to be made each day, in case of\
            \ failures."
          type: number
        retryInterval:
          description: Number of seconds to wait between delivery attempts in case
            of failures.
          type: number
        deliveryTime:
          description: "Time of day at which the file will be attempted to deliver,\
            \ if desired."
          format: date-time
          type: string
        deliveryStatus:
          description: Status of the last delivery.
          maxLength: 1000
          minLength: 0
          type: string
        validAuthentication:
          description: Indicates if the authentication information in this configuration
            is valid.
          type: boolean
        validUpdateDate:
          description: Date and time when the last validation of connection information
            was performed.
          format: date
          type: string
      type: object
    fileDeliveryCommunicationType:
      description: Enumeration of export file groups.
      enum:
      - Ftp
      - SftpPublicKey
      - SftpPassword
      - SftpCn
      - Http
      - FileSystem
      type: string
    exportComponentsType:
      description: A collection of export components.
      items:
        $ref: '#/components/schemas/exportComponentType'
      maxItems: 4000
      type: array
    exportComponentType:
      description: Details of a specific export component.
      properties:
        exportFileId:
          $ref: '#/components/schemas/uniqueID_Type'
        fileType:
          description: The file type of the export.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of the export.
          maxLength: 200
          minLength: 0
          type: string
        parameterForm:
          description: The name of the parameter form used to collect runtime information.
          maxLength: 40
          minLength: 0
          type: string
        exportSequence:
          description: Component export sequence
          type: integer
        containsSensitiveData:
          description: Indicates if the export has sensitive data
          type: boolean
      type: object
    exportColumnsType:
      description: A collection of export columns.
      items:
        $ref: '#/components/schemas/exportColumnDetailType'
      maxItems: 4000
      type: array
    exportColumnDetailType:
      properties:
        exportDataId:
          $ref: '#/components/schemas/uniqueID_Type'
        parentColumnId:
          $ref: '#/components/schemas/uniqueID_Type'
        columnName:
          description: Name of the column to Export.
          maxLength: 80
          minLength: 0
          type: string
        columnLength:
          description: Length of the column.
          type: integer
        columnOrderBy:
          description: Order by column.
          type: integer
        columnFormat:
          description: Column format.
          maxLength: 80
          minLength: 0
          type: string
        columnAlignment:
          description: Column Alignment.
          maxLength: 80
          minLength: 0
          type: string
        columnType:
          description: Type of the column.
          maxLength: 20
          minLength: 0
          type: string
        xMLColumnType:
          $ref: '#/components/schemas/exportColumnXMLType'
        formula:
          description: Formula for the Formula Column.
          maxLength: 2000
          minLength: 0
          type: string
        sourceViewName:
          description: "Name of an additional database view that the column, and its\
            \ descendants, may be derived from. This column, and its descendants,\
            \ may also be derived from the export header's source view, as well as\
            \ any ancestor's source view."
          maxLength: 80
          minLength: 0
          type: string
        filter:
          description: Filter on the Additional Source View for XML Complex Elements.
          maxLength: 2000
          minLength: 0
          type: string
        defaultValue:
          description: Default value of the column.
          maxLength: 80
          minLength: 0
          type: string
        databaseColumn:
          type: boolean
        columnDataType:
          $ref: '#/components/schemas/exportColumnInfoType'
        ignoreLength:
          type: boolean
        tagRequired:
          type: boolean
        xMLAttribute:
          type: boolean
      type: object
    exportColumnXMLType:
      description: Enumeration of export column XML types.
      enum:
      - Simple
      - Complex
      - ComplexAddSource
      type: string
    exportColumnInfoType:
      description: Enumeration of export file groups.
      enum:
      - Data
      - Header
      - Footer
      type: string
    exportXMLColumnsType:
      description: XML Columns type that hold information to all the element and attribute
        configuations
      properties:
        attributes:
          description: XML attribute type that holds all the information related to
            attribute tag
          items:
            $ref: '#/components/schemas/exportXMLAttributeType'
          maxItems: 4000
          type: array
        elements:
          description: XML element type that holds all the information related to
            element tag
          items:
            $ref: '#/components/schemas/exportXMLElementType'
          maxItems: 4000
          type: array
      type: object
    exportXMLAttributesType:
      description: XML attribute type that holds all the information related to attribute
        tag
      items:
        $ref: '#/components/schemas/exportXMLAttributeType'
      maxItems: 4000
      type: array
    exportXMLAttributeType:
      description: Base type that holds information related to xml tag types
      properties:
        name:
          description: XML Tag name
          maxLength: 80
          minLength: 0
          type: string
        value:
          description: Value for XML tag
          maxLength: 2000
          minLength: 0
          type: string
        length:
          $ref: '#/components/schemas/exportColumnLengthType'
        required:
          description: Determines if the tag need to be present in the data even if
            there is no value available
          type: boolean
        exportDataId:
          $ref: '#/components/schemas/uniqueID_Type'
        parentDataID:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    exportColumnLengthType:
      description: Type that determines the length of the export column
      properties:
        value:
          description: Property Value
          type: integer
        variable:
          description: If variable is true then value cannot be specified and value
            can be of variable length
          type: boolean
      type: object
    exportXMLElementsType:
      description: XML element type that holds all the information related to element
        tag
      items:
        $ref: '#/components/schemas/exportXMLElementType'
      maxItems: 4000
      type: array
    exportXMLElementType:
      description: Type that holds all attributes associated with this tag together
      properties:
        simpleElement:
          $ref: '#/components/schemas/exportXMLSimpleType'
        complexElement:
          $ref: '#/components/schemas/exportXMLComplexType'
        complexElementWithSource:
          $ref: '#/components/schemas/exportXMLComplexWithSourceType'
      type: object
    exportXMLSimpleType:
      description: Base type that holds information related to xml tag types
      properties:
        name:
          description: XML Tag name
          maxLength: 80
          minLength: 0
          type: string
        value:
          description: Value for XML tag
          maxLength: 2000
          minLength: 0
          type: string
        length:
          $ref: '#/components/schemas/exportColumnLengthType'
        required:
          description: Determines if the tag need to be present in the data even if
            there is no value available
          type: boolean
        exportDataId:
          $ref: '#/components/schemas/uniqueID_Type'
        parentDataID:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    exportXMLComplexType:
      description: XML simple type that holds all the information related to complex
        element tag
      properties:
        name:
          description: XML simple tag name
          maxLength: 80
          minLength: 0
          type: string
        attributes:
          description: XML attribute type that holds all the information related to
            attribute tag
          items:
            $ref: '#/components/schemas/exportXMLAttributeType'
          maxItems: 4000
          type: array
        elements:
          description: XML element type that holds all the information related to
            element tag
          items:
            $ref: '#/components/schemas/exportXMLElementType'
          maxItems: 4000
          type: array
        required:
          description: Determines if the tag need to be present in the data even if
            there is no value available
          type: boolean
      type: object
    exportXMLComplexWithSourceType:
      description: XML simple type that holds all the information related to complex
        element tag
      properties:
        name:
          description: XML simple tag name
          maxLength: 80
          minLength: 0
          type: string
        attributes:
          description: XML attribute type that holds all the information related to
            attribute tag
          items:
            $ref: '#/components/schemas/exportXMLAttributeType'
          maxItems: 4000
          type: array
        elements:
          description: XML element type that holds all the information related to
            element tag
          items:
            $ref: '#/components/schemas/exportXMLElementType'
          maxItems: 4000
          type: array
        source:
          description: Source from where data needs to be extracted
          maxLength: 100
          minLength: 0
          type: string
        filter:
          description: Filter data using this attribute
          maxLength: 2000
          minLength: 0
          type: string
        required:
          description: Determines if the tag need to be present in the data even if
            there is no value available
          type: boolean
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    exportColumnsAndFunctionsDetails:
      description: "Response that contains columns, pre post functions and export\
        \ functions."
      properties:
        columnsAndFunctions:
          $ref: '#/components/schemas/exportColumnsAndFunctionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportColumnsAndFunctionsType:
      description: "Contains columns, pre post functions and export functions"
      properties:
        dbColumns:
          description: Function parameters
          items:
            $ref: '#/components/schemas/expDataSourceColumnType'
          maxItems: 4000
          type: array
        prePostFunctions:
          description: Function parameters
          items:
            $ref: '#/components/schemas/expFunctionType'
          maxItems: 4000
          type: array
        functions:
          description: Function parameters
          items:
            $ref: '#/components/schemas/expFunctionType'
          maxItems: 4000
          type: array
      type: object
    expDataSourceColumnsType:
      description: Function parameters
      items:
        $ref: '#/components/schemas/expDataSourceColumnType'
      maxItems: 4000
      type: array
    expDataSourceColumnType:
      description: Information related to database columns
      properties:
        name:
          description: Database columns Name
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Database columns description
          maxLength: 2000
          minLength: 0
          type: string
        dataType:
          description: Database columns description
          maxLength: 200
          minLength: 0
          type: string
      type: object
    expFunctionsType:
      description: Function parameters
      items:
        $ref: '#/components/schemas/expFunctionType'
      maxItems: 4000
      type: array
    expFunctionType:
      description: Information related to export function
      properties:
        functionParameter:
          description: Function parameters
          items:
            $ref: '#/components/schemas/expFunctionParamType'
          maxItems: 4000
          type: array
        functionName:
          description: Name of the function
          maxLength: 200
          minLength: 0
          type: string
      type: object
    expFunctionParamType:
      description: Parameters related to export functions
      properties:
        name:
          description: Parameter Name
          maxLength: 200
          minLength: 0
          type: string
        dataType:
          description: Parameter Type
          maxLength: 200
          minLength: 0
          type: string
        position:
          description: Paramter Position
          type: integer
        required:
          description: Flag that determines whether parameter is required or not
          type: boolean
      type: object
    exportSchedulesCriteria:
      description: Request to create export schedules
      properties:
        exportScheduleConfig:
          $ref: '#/components/schemas/exportSchedulesConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportSchedulesConfigType:
      description: Export schedules information that are required to configure schedules
      properties:
        exportSchedules:
          description: Export Schedule
          items:
            $ref: '#/components/schemas/exportScheduleType'
          maxItems: 4000
          type: array
        timeZone:
          description: Time zone hour and minute specified in the format TZH:TZM example:-05:00
          type: string
      type: object
    exportSchedulesType:
      description: Export Schedule
      items:
        $ref: '#/components/schemas/exportScheduleType'
      maxItems: 4000
      type: array
    exportScheduleType:
      description: Type that holds all the information related to export schedule
      properties:
        jobName:
          description: Unique name that identifies export schedule
          maxLength: 100
          minLength: 0
          type: string
        exportFileId:
          $ref: '#/components/schemas/uniqueID_Type'
        exportName:
          description: Name of the export
          maxLength: 20
          minLength: 0
          type: string
        exportDescription:
          description: Export Description
          maxLength: 200
          minLength: 0
          type: string
        exportGroup:
          $ref: '#/components/schemas/scheduleExportGroupType'
        createdBy:
          description: User who created the export schedule
          type: string
        runcount:
          description: Number of time export generated
          type: integer
        nextScheduledRun:
          description: Export is expected to run at time specified by this element.
            Time will be specified in the format dd-MM-yyyy:hh:mm:ss a Z
          type: string
        startDate:
          description: Export scheduled started at this time. Time will be specified
            in the format dd-MM-yyyy:hh:mm:ss a Z
          type: string
        endDate:
          description: Export schedule is expected to end around this time. Time will
            be specified in the format dd-MM-yyyy:hh:mm:ss a Z
          type: string
        status:
          description: Export schedule status
          type: string
        inactive:
          description: Indicates whether schedule export is active or not
          type: boolean
        frequency:
          $ref: '#/components/schemas/exportScheduleFrequencyType'
      type: object
    exportScheduleJobNameType:
      description: Unique name that identifies export schedule
      maxLength: 100
      minLength: 0
      type: string
    scheduleExportGroupType:
      description: Enumeration of export file groups.
      enum:
      - Miscellaneous
      - Memberships
      - Country
      - BackOffice
      type: string
    exportScheduleFrequencyType:
      description: Frequency at which exports is scheduled to run
      properties:
        once:
          $ref: '#/components/schemas/exportScheduleFrequencyOnceType'
        hourly:
          $ref: '#/components/schemas/exportScheduleFrequencyHourlyType'
        daily:
          $ref: '#/components/schemas/exportScheduleFrequencyDailyType'
        weekly:
          $ref: '#/components/schemas/exportScheduleFrequencyWeeklyType'
        monthly:
          $ref: '#/components/schemas/exportScheduleFrequencyMonthlyType'
        endOfDay:
          $ref: '#/components/schemas/exportScheduleFrequencyEODType'
      type: object
    exportScheduleFrequencyOnceType:
      description: If specified then export is scheduled to run only once
      properties:
        runAt:
          description: Export will be generated using the date and time specified.
            Time will be specified in the format dd-MM-yyyy:hh:mm:ss a Z
          type: string
      type: object
    exportScheduleFrequencyHourlyType:
      description: If specified then export is scheduled to run at hourly intervals
      properties:
        interval:
          description: Interval at which export needs to be scheduled
          maximum: 99
          minimum: 1
          type: integer
      type: object
    exportScheduleFrequencyIntervalType:
      description: Interval at which export needs to be scheduled
      maximum: 99
      minimum: 1
      type: integer
    exportScheduleFrequencyDailyType:
      description: If specified then export is scheduled to run daily
      properties:
        interval:
          description: Interval at which export needs to be scheduled
          maximum: 99
          minimum: 1
          type: integer
        hour:
          description: Specifies the hour on which the job is to run. Valid values
            are 0 to 23.
          maximum: 23
          minimum: 0
          type: integer
      type: object
    exportScheduleFrequencyByHourType:
      description: Specifies the hour on which the job is to run. Valid values are
        0 to 23.
      maximum: 23
      minimum: 0
      type: integer
    exportScheduleFrequencyWeeklyType:
      description: If specified then export is scheduled to run Weekly
      properties:
        interval:
          description: Interval at which export needs to be scheduled
          maximum: 99
          minimum: 1
          type: integer
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    exportScheduleFrequencyMonthlyType:
      description: If specified then export is scheduled to run Monthly
      properties:
        interval:
          description: Interval at which export needs to be scheduled
          maximum: 99
          minimum: 1
          type: integer
        weekToRepeat:
          $ref: '#/components/schemas/exportScheduleWeekToRepeatType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    exportScheduleWeekToRepeatType:
      description: Frequency for which export schedules needs to be returned
      enum:
      - First
      - Second
      - Third
      - Fourth
      - Fifth
      - Last
      type: string
    exportScheduleFrequencyEODType:
      description: If specified then export is scheduled to run during end of day
      properties:
        repeatInterval:
          $ref: '#/components/schemas/exportScheduleEODRepeatIntervalType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    exportScheduleEODRepeatIntervalType:
      description: Frequency for which export schedules needs to be run during EOD
      enum:
      - Daily
      - Weekly
      - Monthly
      - Yearly
      type: string
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    exportActivityLog:
      description: Response object for the request for the export user activity log.
      properties:
        activityLog:
          $ref: '#/components/schemas/activityLogListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    activityLogType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        module:
          type: string
        logDate:
          format: date-time
          type: string
        refActionId:
          type: number
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        deviceCode:
          description: The selected device code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    exportSchedulesDetails:
      description: Export Schedules collection matching the crieteria specified in
        the request
      properties:
        exportSchedules:
          description: Export Schedule
          items:
            $ref: '#/components/schemas/exportScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportSchedulesToBeChanged:
      description: Request object for changing export schedules
      properties:
        exportScheduleConfig:
          $ref: '#/components/schemas/exportSchedulesConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportSchedulesStatus:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    exportMappingConfigType:
      description: Enumeration  of Types allowed for Export Mapping
      enum:
      - TransactionCodes
      - MarketCodes
      - PackageCodes
      - PaymentMethods
      - ProfileIdTypes
      - StatisticCodes
      - PropertyCodes
      - CountryCodes
      - NationalityCodes
      - StateCodes
      - DistrictCodes
      - CityCodes
      - CountryCities
      - PurposeOfStayCodes
      - TransportationCodes
      - CancelReasons
      - Gender
      - RoomTypes
      - IdCountryCodes
      type: string
    exportMappingCodeType:
      description: Details of one export.
      properties:
        exportMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        mappingTypeCode:
          description: Code for the export mapping type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the export mapping code.
          maxLength: 2000
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/exportCodeDataType'
        sequenceNumber:
          description: Display sequence.
          type: number
        lovName:
          description: Name of the LOV group to be used.
          maxLength: 40
          minLength: 0
          type: string
        useLov:
          description: This flag show LOV button when linking this mapping code to
            the configuration item.
          type: boolean
        required:
          description: This flag indicates the configuration item cannot be saved
            until a mapping for this mapping detail has been entered.
          type: boolean
      type: object
    exportCodeDataType:
      description: Enumeration of export mapping types.
      enum:
      - Character
      - Date
      - Number
      type: string
    exportMappingCodesToLinkType:
      description: Details of code which is being mapped.
      properties:
        codeToLink:
          description: The code with which the mapping is linked to in the external
            system.
          maxLength: 2000
          minLength: 0
          type: string
        codeToLinkDescription:
          description: The description of code with which the mapping is linked to
            in the external system.
          maxLength: 2000
          minLength: 0
          type: string
        configType:
          $ref: '#/components/schemas/exportMappingConfigType'
        sequenceNumber:
          description: Display sequence.
          type: number
      type: object
    exportMappingCodes:
      description: Request to create export mapping code for a given export.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        exportMappingCodes:
          description: The details of the export mapping code being created.
          items:
            $ref: '#/components/schemas/exportMappingCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingCodesToLink:
      properties:
        codesToLink:
          description: The codes for a given property which are to be linked to the
            mapping code.
          items:
            $ref: '#/components/schemas/exportMappingCodesToLinkType'
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    generatedExportListType:
      description: Contains a collection of available export instance records.
      properties:
        exportDataHeader:
          description: The list of export instance records.
          items:
            $ref: '#/components/schemas/generatedExportType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    generatedExportType:
      description: Information of one generated export.
      properties:
        dataHeader:
          $ref: '#/components/schemas/exportHeaderSummaryType'
        exportDataId:
          $ref: '#/components/schemas/uniqueID_Type'
        generatedDate:
          description: The date that the export was generated.
          format: date
          type: string
        totalRecords:
          description: The total number of records generated.
          type: integer
        hasCreditCardData:
          description: A flag that shows whether the there is credit card information
            in the export. Certain restrictions apply when this is detected.
          type: boolean
        generatedFileName:
          description: The generated file name.
          maxLength: 2000
          minLength: 0
          type: string
        zipFileName:
          description: The zip file name based on the formula used in the setup.
          maxLength: 2000
          minLength: 0
          type: string
        generatedFileExtension:
          description: The generated file extension.
          maxLength: 2000
          minLength: 0
          type: string
        generatedFileLocation:
          description: The generated file location.
          maxLength: 2000
          minLength: 0
          type: string
        generatedFilePath:
          description: The generated file path.
          maxLength: 4000
          minLength: 0
          type: string
        dataFromDate:
          description: The beginning date for the export.
          format: date
          type: string
        dataToDate:
          description: The ending date for the export.
          format: date
          type: string
        checksumEnabled:
          description: A flag that shows whether the checksum functionality is enabled.
          type: boolean
        generatedErrors:
          description: The errors generated during the export.
          maxLength: 4000
          minLength: 0
          type: string
        hTTPUpload:
          description: A flag to indicate if export file has to be uploaded automatically
            by IAS to HTTP site
          type: boolean
        status:
          $ref: '#/components/schemas/generatedExportStatusType'
        jobCompleted:
          description: A Flag that indicates whether job completed succesfully or
            not.
          type: boolean
      type: object
    generatedExportStatusType:
      description: Status indicates whether job is running or not
      enum:
      - InQueue
      - Running
      - Completed
      - Failed
      type: string
    exportMappingType:
      description: Details of one export.
      properties:
        exportMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        configType:
          $ref: '#/components/schemas/exportMappingConfigType'
        mappingType:
          description: Code for the export mapping type.
          maxLength: 20
          minLength: 0
          type: string
        hasDefaultValue:
          description: Specify whether the mapping type has default value.
          type: boolean
        description:
          description: Description of the export mapping type.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    exportMappingMasterInfoType:
      description: Contains information about the various mapping types and the mapping
        codes.
      properties:
        mappingTypes:
          description: Provides information about the mapping type.
          items:
            $ref: '#/components/schemas/exportMappingType'
          maxItems: 4000
          type: array
        mappingCodes:
          description: Provides information about the mapping type.
          items:
            $ref: '#/components/schemas/exportMappingCodeType'
          maxItems: 4000
          type: array
        mappingTypesCount:
          type: integer
        mappingCodesCount:
          type: integer
      type: object
    exportMappingLinkedCodeType:
      description: Details of linked code.
      properties:
        linkedCode:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        exportMappingId:
          $ref: '#/components/schemas/uniqueID_Type'
        exportMappingCode:
          description: Mapping code attached to linked code.
          maxLength: 100
          minLength: 0
          type: string
        defaultMappedValue:
          description: Default value.
          maxLength: 2000
          minLength: 0
          type: string
        mappedValue:
          description: Linked code.
          maxLength: 2000
          minLength: 0
          type: string
        mappingTypeDescription:
          description: Description of the export mapping type.
          maxLength: 2000
          minLength: 0
          type: string
        mappingCodeDescription:
          description: Description of the export mapping code.
          maxLength: 2000
          minLength: 0
          type: string
        lovName:
          description: Name of the LOV group to be used.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    generatedExports:
      description: Response object including a list of generated exports.
      properties:
        generatedExports:
          $ref: '#/components/schemas/generatedExportListType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchExportMappings:
      description: Response to fetch the export definitions for a given export.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        exportMappings:
          description: The export file ID to delete definition.
          items:
            $ref: '#/components/schemas/exportMappingType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappings:
      description: Request to create export definitions for a given export.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        exportMapping:
          description: The details of the export definition being created.
          items:
            $ref: '#/components/schemas/exportMappingType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingsDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchExportMappingCodes:
      properties:
        exportMappingCodes:
          description: The details of the export mapping code being fetched.
          items:
            $ref: '#/components/schemas/exportMappingCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingCodesDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingLinkedCodes:
      description: Response to fetch codes linked to export mapping codes.
      properties:
        linkedCodes:
          description: The linked codes for the given hotel.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          type: array
        masterInfo:
          $ref: '#/components/schemas/exportMappingMasterInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingLinkedTypes:
      description: Request to fetch codes linked to export mapping codes.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        linkedCodes:
          description: The linked codes for the given hotel.
          items:
            $ref: '#/components/schemas/exportMappingLinkedCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportMappingLinkedTypesDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exportGenerateConfigurationType_nightAudit:
      description: A flag to set export to be run in Night Audit.
      properties:
        runInNightAudit:
          description: A flag to set export to be run in Night Audit.
          type: boolean
        nightAuditFrequency:
          description: "The frequency at which export should be generated. Eg. Nightly,\
            \ End of Month or End of Year."
          maxLength: 20
          minLength: 0
          type: string
        nightAuditExportDetail:
          description: "Day of the week, when the export routine is run in the night\
            \ audit and the NA_FREQUENCY is set to 'Day of Week'."
          maxLength: 20
          minLength: 0
          type: string
      type: object
x-original-swagger-version: "2.0"
