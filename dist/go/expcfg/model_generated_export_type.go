/*
OPERA Cloud Export Configuration API

APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package expcfg

import (
	"encoding/json"
)

// checks if the GeneratedExportType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratedExportType{}

// GeneratedExportType Information of one generated export.
type GeneratedExportType struct {
	DataHeader *ExportHeaderSummaryType `json:"dataHeader,omitempty"`
	ExportDataId *UniqueIDType `json:"exportDataId,omitempty"`
	// The date that the export was generated.
	GeneratedDate *string `json:"generatedDate,omitempty"`
	// The total number of records generated.
	TotalRecords *int32 `json:"totalRecords,omitempty"`
	// A flag that shows whether the there is credit card information in the export. Certain restrictions apply when this is detected.
	HasCreditCardData *bool `json:"hasCreditCardData,omitempty"`
	// The generated file name.
	GeneratedFileName *string `json:"generatedFileName,omitempty"`
	// The zip file name based on the formula used in the setup.
	ZipFileName *string `json:"zipFileName,omitempty"`
	// The generated file extension.
	GeneratedFileExtension *string `json:"generatedFileExtension,omitempty"`
	// The generated file location.
	GeneratedFileLocation *string `json:"generatedFileLocation,omitempty"`
	// The generated file path.
	GeneratedFilePath *string `json:"generatedFilePath,omitempty"`
	// The beginning date for the export.
	DataFromDate *string `json:"dataFromDate,omitempty"`
	// The ending date for the export.
	DataToDate *string `json:"dataToDate,omitempty"`
	// A flag that shows whether the checksum functionality is enabled.
	ChecksumEnabled *bool `json:"checksumEnabled,omitempty"`
	// The errors generated during the export.
	GeneratedErrors *string `json:"generatedErrors,omitempty"`
	// A flag to indicate if export file has to be uploaded automatically by IAS to HTTP site
	HTTPUpload *bool `json:"hTTPUpload,omitempty"`
	Status *GeneratedExportStatusType `json:"status,omitempty"`
	// A Flag that indicates whether job completed succesfully or not.
	JobCompleted *bool `json:"jobCompleted,omitempty"`
}

// NewGeneratedExportType instantiates a new GeneratedExportType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratedExportType() *GeneratedExportType {
	this := GeneratedExportType{}
	return &this
}

// NewGeneratedExportTypeWithDefaults instantiates a new GeneratedExportType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratedExportTypeWithDefaults() *GeneratedExportType {
	this := GeneratedExportType{}
	return &this
}

// GetDataHeader returns the DataHeader field value if set, zero value otherwise.
func (o *GeneratedExportType) GetDataHeader() ExportHeaderSummaryType {
	if o == nil || IsNil(o.DataHeader) {
		var ret ExportHeaderSummaryType
		return ret
	}
	return *o.DataHeader
}

// GetDataHeaderOk returns a tuple with the DataHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetDataHeaderOk() (*ExportHeaderSummaryType, bool) {
	if o == nil || IsNil(o.DataHeader) {
		return nil, false
	}
	return o.DataHeader, true
}

// HasDataHeader returns a boolean if a field has been set.
func (o *GeneratedExportType) HasDataHeader() bool {
	if o != nil && !IsNil(o.DataHeader) {
		return true
	}

	return false
}

// SetDataHeader gets a reference to the given ExportHeaderSummaryType and assigns it to the DataHeader field.
func (o *GeneratedExportType) SetDataHeader(v ExportHeaderSummaryType) {
	o.DataHeader = &v
}

// GetExportDataId returns the ExportDataId field value if set, zero value otherwise.
func (o *GeneratedExportType) GetExportDataId() UniqueIDType {
	if o == nil || IsNil(o.ExportDataId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ExportDataId
}

// GetExportDataIdOk returns a tuple with the ExportDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetExportDataIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ExportDataId) {
		return nil, false
	}
	return o.ExportDataId, true
}

// HasExportDataId returns a boolean if a field has been set.
func (o *GeneratedExportType) HasExportDataId() bool {
	if o != nil && !IsNil(o.ExportDataId) {
		return true
	}

	return false
}

// SetExportDataId gets a reference to the given UniqueIDType and assigns it to the ExportDataId field.
func (o *GeneratedExportType) SetExportDataId(v UniqueIDType) {
	o.ExportDataId = &v
}

// GetGeneratedDate returns the GeneratedDate field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedDate() string {
	if o == nil || IsNil(o.GeneratedDate) {
		var ret string
		return ret
	}
	return *o.GeneratedDate
}

// GetGeneratedDateOk returns a tuple with the GeneratedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedDateOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedDate) {
		return nil, false
	}
	return o.GeneratedDate, true
}

// HasGeneratedDate returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedDate() bool {
	if o != nil && !IsNil(o.GeneratedDate) {
		return true
	}

	return false
}

// SetGeneratedDate gets a reference to the given string and assigns it to the GeneratedDate field.
func (o *GeneratedExportType) SetGeneratedDate(v string) {
	o.GeneratedDate = &v
}

// GetTotalRecords returns the TotalRecords field value if set, zero value otherwise.
func (o *GeneratedExportType) GetTotalRecords() int32 {
	if o == nil || IsNil(o.TotalRecords) {
		var ret int32
		return ret
	}
	return *o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetTotalRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRecords) {
		return nil, false
	}
	return o.TotalRecords, true
}

// HasTotalRecords returns a boolean if a field has been set.
func (o *GeneratedExportType) HasTotalRecords() bool {
	if o != nil && !IsNil(o.TotalRecords) {
		return true
	}

	return false
}

// SetTotalRecords gets a reference to the given int32 and assigns it to the TotalRecords field.
func (o *GeneratedExportType) SetTotalRecords(v int32) {
	o.TotalRecords = &v
}

// GetHasCreditCardData returns the HasCreditCardData field value if set, zero value otherwise.
func (o *GeneratedExportType) GetHasCreditCardData() bool {
	if o == nil || IsNil(o.HasCreditCardData) {
		var ret bool
		return ret
	}
	return *o.HasCreditCardData
}

// GetHasCreditCardDataOk returns a tuple with the HasCreditCardData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetHasCreditCardDataOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCreditCardData) {
		return nil, false
	}
	return o.HasCreditCardData, true
}

// HasHasCreditCardData returns a boolean if a field has been set.
func (o *GeneratedExportType) HasHasCreditCardData() bool {
	if o != nil && !IsNil(o.HasCreditCardData) {
		return true
	}

	return false
}

// SetHasCreditCardData gets a reference to the given bool and assigns it to the HasCreditCardData field.
func (o *GeneratedExportType) SetHasCreditCardData(v bool) {
	o.HasCreditCardData = &v
}

// GetGeneratedFileName returns the GeneratedFileName field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedFileName() string {
	if o == nil || IsNil(o.GeneratedFileName) {
		var ret string
		return ret
	}
	return *o.GeneratedFileName
}

// GetGeneratedFileNameOk returns a tuple with the GeneratedFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedFileName) {
		return nil, false
	}
	return o.GeneratedFileName, true
}

// HasGeneratedFileName returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedFileName() bool {
	if o != nil && !IsNil(o.GeneratedFileName) {
		return true
	}

	return false
}

// SetGeneratedFileName gets a reference to the given string and assigns it to the GeneratedFileName field.
func (o *GeneratedExportType) SetGeneratedFileName(v string) {
	o.GeneratedFileName = &v
}

// GetZipFileName returns the ZipFileName field value if set, zero value otherwise.
func (o *GeneratedExportType) GetZipFileName() string {
	if o == nil || IsNil(o.ZipFileName) {
		var ret string
		return ret
	}
	return *o.ZipFileName
}

// GetZipFileNameOk returns a tuple with the ZipFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetZipFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZipFileName) {
		return nil, false
	}
	return o.ZipFileName, true
}

// HasZipFileName returns a boolean if a field has been set.
func (o *GeneratedExportType) HasZipFileName() bool {
	if o != nil && !IsNil(o.ZipFileName) {
		return true
	}

	return false
}

// SetZipFileName gets a reference to the given string and assigns it to the ZipFileName field.
func (o *GeneratedExportType) SetZipFileName(v string) {
	o.ZipFileName = &v
}

// GetGeneratedFileExtension returns the GeneratedFileExtension field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedFileExtension() string {
	if o == nil || IsNil(o.GeneratedFileExtension) {
		var ret string
		return ret
	}
	return *o.GeneratedFileExtension
}

// GetGeneratedFileExtensionOk returns a tuple with the GeneratedFileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedFileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedFileExtension) {
		return nil, false
	}
	return o.GeneratedFileExtension, true
}

// HasGeneratedFileExtension returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedFileExtension() bool {
	if o != nil && !IsNil(o.GeneratedFileExtension) {
		return true
	}

	return false
}

// SetGeneratedFileExtension gets a reference to the given string and assigns it to the GeneratedFileExtension field.
func (o *GeneratedExportType) SetGeneratedFileExtension(v string) {
	o.GeneratedFileExtension = &v
}

// GetGeneratedFileLocation returns the GeneratedFileLocation field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedFileLocation() string {
	if o == nil || IsNil(o.GeneratedFileLocation) {
		var ret string
		return ret
	}
	return *o.GeneratedFileLocation
}

// GetGeneratedFileLocationOk returns a tuple with the GeneratedFileLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedFileLocationOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedFileLocation) {
		return nil, false
	}
	return o.GeneratedFileLocation, true
}

// HasGeneratedFileLocation returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedFileLocation() bool {
	if o != nil && !IsNil(o.GeneratedFileLocation) {
		return true
	}

	return false
}

// SetGeneratedFileLocation gets a reference to the given string and assigns it to the GeneratedFileLocation field.
func (o *GeneratedExportType) SetGeneratedFileLocation(v string) {
	o.GeneratedFileLocation = &v
}

// GetGeneratedFilePath returns the GeneratedFilePath field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedFilePath() string {
	if o == nil || IsNil(o.GeneratedFilePath) {
		var ret string
		return ret
	}
	return *o.GeneratedFilePath
}

// GetGeneratedFilePathOk returns a tuple with the GeneratedFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedFilePathOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedFilePath) {
		return nil, false
	}
	return o.GeneratedFilePath, true
}

// HasGeneratedFilePath returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedFilePath() bool {
	if o != nil && !IsNil(o.GeneratedFilePath) {
		return true
	}

	return false
}

// SetGeneratedFilePath gets a reference to the given string and assigns it to the GeneratedFilePath field.
func (o *GeneratedExportType) SetGeneratedFilePath(v string) {
	o.GeneratedFilePath = &v
}

// GetDataFromDate returns the DataFromDate field value if set, zero value otherwise.
func (o *GeneratedExportType) GetDataFromDate() string {
	if o == nil || IsNil(o.DataFromDate) {
		var ret string
		return ret
	}
	return *o.DataFromDate
}

// GetDataFromDateOk returns a tuple with the DataFromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetDataFromDateOk() (*string, bool) {
	if o == nil || IsNil(o.DataFromDate) {
		return nil, false
	}
	return o.DataFromDate, true
}

// HasDataFromDate returns a boolean if a field has been set.
func (o *GeneratedExportType) HasDataFromDate() bool {
	if o != nil && !IsNil(o.DataFromDate) {
		return true
	}

	return false
}

// SetDataFromDate gets a reference to the given string and assigns it to the DataFromDate field.
func (o *GeneratedExportType) SetDataFromDate(v string) {
	o.DataFromDate = &v
}

// GetDataToDate returns the DataToDate field value if set, zero value otherwise.
func (o *GeneratedExportType) GetDataToDate() string {
	if o == nil || IsNil(o.DataToDate) {
		var ret string
		return ret
	}
	return *o.DataToDate
}

// GetDataToDateOk returns a tuple with the DataToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetDataToDateOk() (*string, bool) {
	if o == nil || IsNil(o.DataToDate) {
		return nil, false
	}
	return o.DataToDate, true
}

// HasDataToDate returns a boolean if a field has been set.
func (o *GeneratedExportType) HasDataToDate() bool {
	if o != nil && !IsNil(o.DataToDate) {
		return true
	}

	return false
}

// SetDataToDate gets a reference to the given string and assigns it to the DataToDate field.
func (o *GeneratedExportType) SetDataToDate(v string) {
	o.DataToDate = &v
}

// GetChecksumEnabled returns the ChecksumEnabled field value if set, zero value otherwise.
func (o *GeneratedExportType) GetChecksumEnabled() bool {
	if o == nil || IsNil(o.ChecksumEnabled) {
		var ret bool
		return ret
	}
	return *o.ChecksumEnabled
}

// GetChecksumEnabledOk returns a tuple with the ChecksumEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetChecksumEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ChecksumEnabled) {
		return nil, false
	}
	return o.ChecksumEnabled, true
}

// HasChecksumEnabled returns a boolean if a field has been set.
func (o *GeneratedExportType) HasChecksumEnabled() bool {
	if o != nil && !IsNil(o.ChecksumEnabled) {
		return true
	}

	return false
}

// SetChecksumEnabled gets a reference to the given bool and assigns it to the ChecksumEnabled field.
func (o *GeneratedExportType) SetChecksumEnabled(v bool) {
	o.ChecksumEnabled = &v
}

// GetGeneratedErrors returns the GeneratedErrors field value if set, zero value otherwise.
func (o *GeneratedExportType) GetGeneratedErrors() string {
	if o == nil || IsNil(o.GeneratedErrors) {
		var ret string
		return ret
	}
	return *o.GeneratedErrors
}

// GetGeneratedErrorsOk returns a tuple with the GeneratedErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetGeneratedErrorsOk() (*string, bool) {
	if o == nil || IsNil(o.GeneratedErrors) {
		return nil, false
	}
	return o.GeneratedErrors, true
}

// HasGeneratedErrors returns a boolean if a field has been set.
func (o *GeneratedExportType) HasGeneratedErrors() bool {
	if o != nil && !IsNil(o.GeneratedErrors) {
		return true
	}

	return false
}

// SetGeneratedErrors gets a reference to the given string and assigns it to the GeneratedErrors field.
func (o *GeneratedExportType) SetGeneratedErrors(v string) {
	o.GeneratedErrors = &v
}

// GetHTTPUpload returns the HTTPUpload field value if set, zero value otherwise.
func (o *GeneratedExportType) GetHTTPUpload() bool {
	if o == nil || IsNil(o.HTTPUpload) {
		var ret bool
		return ret
	}
	return *o.HTTPUpload
}

// GetHTTPUploadOk returns a tuple with the HTTPUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetHTTPUploadOk() (*bool, bool) {
	if o == nil || IsNil(o.HTTPUpload) {
		return nil, false
	}
	return o.HTTPUpload, true
}

// HasHTTPUpload returns a boolean if a field has been set.
func (o *GeneratedExportType) HasHTTPUpload() bool {
	if o != nil && !IsNil(o.HTTPUpload) {
		return true
	}

	return false
}

// SetHTTPUpload gets a reference to the given bool and assigns it to the HTTPUpload field.
func (o *GeneratedExportType) SetHTTPUpload(v bool) {
	o.HTTPUpload = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GeneratedExportType) GetStatus() GeneratedExportStatusType {
	if o == nil || IsNil(o.Status) {
		var ret GeneratedExportStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetStatusOk() (*GeneratedExportStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GeneratedExportType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given GeneratedExportStatusType and assigns it to the Status field.
func (o *GeneratedExportType) SetStatus(v GeneratedExportStatusType) {
	o.Status = &v
}

// GetJobCompleted returns the JobCompleted field value if set, zero value otherwise.
func (o *GeneratedExportType) GetJobCompleted() bool {
	if o == nil || IsNil(o.JobCompleted) {
		var ret bool
		return ret
	}
	return *o.JobCompleted
}

// GetJobCompletedOk returns a tuple with the JobCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedExportType) GetJobCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.JobCompleted) {
		return nil, false
	}
	return o.JobCompleted, true
}

// HasJobCompleted returns a boolean if a field has been set.
func (o *GeneratedExportType) HasJobCompleted() bool {
	if o != nil && !IsNil(o.JobCompleted) {
		return true
	}

	return false
}

// SetJobCompleted gets a reference to the given bool and assigns it to the JobCompleted field.
func (o *GeneratedExportType) SetJobCompleted(v bool) {
	o.JobCompleted = &v
}

func (o GeneratedExportType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratedExportType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataHeader) {
		toSerialize["dataHeader"] = o.DataHeader
	}
	if !IsNil(o.ExportDataId) {
		toSerialize["exportDataId"] = o.ExportDataId
	}
	if !IsNil(o.GeneratedDate) {
		toSerialize["generatedDate"] = o.GeneratedDate
	}
	if !IsNil(o.TotalRecords) {
		toSerialize["totalRecords"] = o.TotalRecords
	}
	if !IsNil(o.HasCreditCardData) {
		toSerialize["hasCreditCardData"] = o.HasCreditCardData
	}
	if !IsNil(o.GeneratedFileName) {
		toSerialize["generatedFileName"] = o.GeneratedFileName
	}
	if !IsNil(o.ZipFileName) {
		toSerialize["zipFileName"] = o.ZipFileName
	}
	if !IsNil(o.GeneratedFileExtension) {
		toSerialize["generatedFileExtension"] = o.GeneratedFileExtension
	}
	if !IsNil(o.GeneratedFileLocation) {
		toSerialize["generatedFileLocation"] = o.GeneratedFileLocation
	}
	if !IsNil(o.GeneratedFilePath) {
		toSerialize["generatedFilePath"] = o.GeneratedFilePath
	}
	if !IsNil(o.DataFromDate) {
		toSerialize["dataFromDate"] = o.DataFromDate
	}
	if !IsNil(o.DataToDate) {
		toSerialize["dataToDate"] = o.DataToDate
	}
	if !IsNil(o.ChecksumEnabled) {
		toSerialize["checksumEnabled"] = o.ChecksumEnabled
	}
	if !IsNil(o.GeneratedErrors) {
		toSerialize["generatedErrors"] = o.GeneratedErrors
	}
	if !IsNil(o.HTTPUpload) {
		toSerialize["hTTPUpload"] = o.HTTPUpload
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.JobCompleted) {
		toSerialize["jobCompleted"] = o.JobCompleted
	}
	return toSerialize, nil
}

type NullableGeneratedExportType struct {
	value *GeneratedExportType
	isSet bool
}

func (v NullableGeneratedExportType) Get() *GeneratedExportType {
	return v.value
}

func (v *NullableGeneratedExportType) Set(val *GeneratedExportType) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratedExportType) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratedExportType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratedExportType(val *GeneratedExportType) *NullableGeneratedExportType {
	return &NullableGeneratedExportType{value: val, isSet: true}
}

func (v NullableGeneratedExportType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratedExportType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


