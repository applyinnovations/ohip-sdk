/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the CurrencyExchangeRatesDetailsExchangeRatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurrencyExchangeRatesDetailsExchangeRatesInner{}

// CurrencyExchangeRatesDetailsExchangeRatesInner struct for CurrencyExchangeRatesDetailsExchangeRatesInner
type CurrencyExchangeRatesDetailsExchangeRatesInner struct {
	// Exchange Rate information for a currency code.
	ExchangeInfo []CurrencyExchangeRateType `json:"exchangeInfo,omitempty"`
	// Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewCurrencyExchangeRatesDetailsExchangeRatesInner instantiates a new CurrencyExchangeRatesDetailsExchangeRatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrencyExchangeRatesDetailsExchangeRatesInner() *CurrencyExchangeRatesDetailsExchangeRatesInner {
	this := CurrencyExchangeRatesDetailsExchangeRatesInner{}
	return &this
}

// NewCurrencyExchangeRatesDetailsExchangeRatesInnerWithDefaults instantiates a new CurrencyExchangeRatesDetailsExchangeRatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrencyExchangeRatesDetailsExchangeRatesInnerWithDefaults() *CurrencyExchangeRatesDetailsExchangeRatesInner {
	this := CurrencyExchangeRatesDetailsExchangeRatesInner{}
	return &this
}

// GetExchangeInfo returns the ExchangeInfo field value if set, zero value otherwise.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) GetExchangeInfo() []CurrencyExchangeRateType {
	if o == nil || IsNil(o.ExchangeInfo) {
		var ret []CurrencyExchangeRateType
		return ret
	}
	return o.ExchangeInfo
}

// GetExchangeInfoOk returns a tuple with the ExchangeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) GetExchangeInfoOk() ([]CurrencyExchangeRateType, bool) {
	if o == nil || IsNil(o.ExchangeInfo) {
		return nil, false
	}
	return o.ExchangeInfo, true
}

// HasExchangeInfo returns a boolean if a field has been set.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) HasExchangeInfo() bool {
	if o != nil && !IsNil(o.ExchangeInfo) {
		return true
	}

	return false
}

// SetExchangeInfo gets a reference to the given []CurrencyExchangeRateType and assigns it to the ExchangeInfo field.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) SetExchangeInfo(v []CurrencyExchangeRateType) {
	o.ExchangeInfo = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CurrencyExchangeRatesDetailsExchangeRatesInner) SetHotelId(v string) {
	o.HotelId = &v
}

func (o CurrencyExchangeRatesDetailsExchangeRatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurrencyExchangeRatesDetailsExchangeRatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeInfo) {
		toSerialize["exchangeInfo"] = o.ExchangeInfo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableCurrencyExchangeRatesDetailsExchangeRatesInner struct {
	value *CurrencyExchangeRatesDetailsExchangeRatesInner
	isSet bool
}

func (v NullableCurrencyExchangeRatesDetailsExchangeRatesInner) Get() *CurrencyExchangeRatesDetailsExchangeRatesInner {
	return v.value
}

func (v *NullableCurrencyExchangeRatesDetailsExchangeRatesInner) Set(val *CurrencyExchangeRatesDetailsExchangeRatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrencyExchangeRatesDetailsExchangeRatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrencyExchangeRatesDetailsExchangeRatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrencyExchangeRatesDetailsExchangeRatesInner(val *CurrencyExchangeRatesDetailsExchangeRatesInner) *NullableCurrencyExchangeRatesDetailsExchangeRatesInner {
	return &NullableCurrencyExchangeRatesDetailsExchangeRatesInner{value: val, isSet: true}
}

func (v NullableCurrencyExchangeRatesDetailsExchangeRatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrencyExchangeRatesDetailsExchangeRatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


