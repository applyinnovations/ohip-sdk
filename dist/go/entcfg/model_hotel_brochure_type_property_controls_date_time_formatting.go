/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the HotelBrochureTypePropertyControlsDateTimeFormatting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelBrochureTypePropertyControlsDateTimeFormatting{}

// HotelBrochureTypePropertyControlsDateTimeFormatting Date Time Formatting information configuration of the hotel
type HotelBrochureTypePropertyControlsDateTimeFormatting struct {
	// Long date format of the hotel.
	LongDateFormat *string `json:"longDateFormat,omitempty"`
	// Short date format of the hotel.
	ShortDateFormat *string `json:"shortDateFormat,omitempty"`
	// Time format for the hotel.
	TimeFormat *string `json:"timeFormat,omitempty"`
	// Time zone region of the hotel.
	TimeZoneRegion *string `json:"timeZoneRegion,omitempty"`
}

// NewHotelBrochureTypePropertyControlsDateTimeFormatting instantiates a new HotelBrochureTypePropertyControlsDateTimeFormatting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelBrochureTypePropertyControlsDateTimeFormatting() *HotelBrochureTypePropertyControlsDateTimeFormatting {
	this := HotelBrochureTypePropertyControlsDateTimeFormatting{}
	return &this
}

// NewHotelBrochureTypePropertyControlsDateTimeFormattingWithDefaults instantiates a new HotelBrochureTypePropertyControlsDateTimeFormatting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelBrochureTypePropertyControlsDateTimeFormattingWithDefaults() *HotelBrochureTypePropertyControlsDateTimeFormatting {
	this := HotelBrochureTypePropertyControlsDateTimeFormatting{}
	return &this
}

// GetLongDateFormat returns the LongDateFormat field value if set, zero value otherwise.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetLongDateFormat() string {
	if o == nil || IsNil(o.LongDateFormat) {
		var ret string
		return ret
	}
	return *o.LongDateFormat
}

// GetLongDateFormatOk returns a tuple with the LongDateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetLongDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.LongDateFormat) {
		return nil, false
	}
	return o.LongDateFormat, true
}

// HasLongDateFormat returns a boolean if a field has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) HasLongDateFormat() bool {
	if o != nil && !IsNil(o.LongDateFormat) {
		return true
	}

	return false
}

// SetLongDateFormat gets a reference to the given string and assigns it to the LongDateFormat field.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) SetLongDateFormat(v string) {
	o.LongDateFormat = &v
}

// GetShortDateFormat returns the ShortDateFormat field value if set, zero value otherwise.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetShortDateFormat() string {
	if o == nil || IsNil(o.ShortDateFormat) {
		var ret string
		return ret
	}
	return *o.ShortDateFormat
}

// GetShortDateFormatOk returns a tuple with the ShortDateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetShortDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDateFormat) {
		return nil, false
	}
	return o.ShortDateFormat, true
}

// HasShortDateFormat returns a boolean if a field has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) HasShortDateFormat() bool {
	if o != nil && !IsNil(o.ShortDateFormat) {
		return true
	}

	return false
}

// SetShortDateFormat gets a reference to the given string and assigns it to the ShortDateFormat field.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) SetShortDateFormat(v string) {
	o.ShortDateFormat = &v
}

// GetTimeFormat returns the TimeFormat field value if set, zero value otherwise.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetTimeFormat() string {
	if o == nil || IsNil(o.TimeFormat) {
		var ret string
		return ret
	}
	return *o.TimeFormat
}

// GetTimeFormatOk returns a tuple with the TimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetTimeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.TimeFormat) {
		return nil, false
	}
	return o.TimeFormat, true
}

// HasTimeFormat returns a boolean if a field has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) HasTimeFormat() bool {
	if o != nil && !IsNil(o.TimeFormat) {
		return true
	}

	return false
}

// SetTimeFormat gets a reference to the given string and assigns it to the TimeFormat field.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) SetTimeFormat(v string) {
	o.TimeFormat = &v
}

// GetTimeZoneRegion returns the TimeZoneRegion field value if set, zero value otherwise.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetTimeZoneRegion() string {
	if o == nil || IsNil(o.TimeZoneRegion) {
		var ret string
		return ret
	}
	return *o.TimeZoneRegion
}

// GetTimeZoneRegionOk returns a tuple with the TimeZoneRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) GetTimeZoneRegionOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZoneRegion) {
		return nil, false
	}
	return o.TimeZoneRegion, true
}

// HasTimeZoneRegion returns a boolean if a field has been set.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) HasTimeZoneRegion() bool {
	if o != nil && !IsNil(o.TimeZoneRegion) {
		return true
	}

	return false
}

// SetTimeZoneRegion gets a reference to the given string and assigns it to the TimeZoneRegion field.
func (o *HotelBrochureTypePropertyControlsDateTimeFormatting) SetTimeZoneRegion(v string) {
	o.TimeZoneRegion = &v
}

func (o HotelBrochureTypePropertyControlsDateTimeFormatting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelBrochureTypePropertyControlsDateTimeFormatting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LongDateFormat) {
		toSerialize["longDateFormat"] = o.LongDateFormat
	}
	if !IsNil(o.ShortDateFormat) {
		toSerialize["shortDateFormat"] = o.ShortDateFormat
	}
	if !IsNil(o.TimeFormat) {
		toSerialize["timeFormat"] = o.TimeFormat
	}
	if !IsNil(o.TimeZoneRegion) {
		toSerialize["timeZoneRegion"] = o.TimeZoneRegion
	}
	return toSerialize, nil
}

type NullableHotelBrochureTypePropertyControlsDateTimeFormatting struct {
	value *HotelBrochureTypePropertyControlsDateTimeFormatting
	isSet bool
}

func (v NullableHotelBrochureTypePropertyControlsDateTimeFormatting) Get() *HotelBrochureTypePropertyControlsDateTimeFormatting {
	return v.value
}

func (v *NullableHotelBrochureTypePropertyControlsDateTimeFormatting) Set(val *HotelBrochureTypePropertyControlsDateTimeFormatting) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelBrochureTypePropertyControlsDateTimeFormatting) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelBrochureTypePropertyControlsDateTimeFormatting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelBrochureTypePropertyControlsDateTimeFormatting(val *HotelBrochureTypePropertyControlsDateTimeFormatting) *NullableHotelBrochureTypePropertyControlsDateTimeFormatting {
	return &NullableHotelBrochureTypePropertyControlsDateTimeFormatting{value: val, isSet: true}
}

func (v NullableHotelBrochureTypePropertyControlsDateTimeFormatting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelBrochureTypePropertyControlsDateTimeFormatting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


