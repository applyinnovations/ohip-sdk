/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the HotelBrochureTypePrimaryDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelBrochureTypePrimaryDetails{}

// HotelBrochureTypePrimaryDetails Primary Information of the hotel.
type HotelBrochureTypePrimaryDetails struct {
	// Legal owner of the hotel.
	LegalOwner *string `json:"legalOwner,omitempty"`
}

// NewHotelBrochureTypePrimaryDetails instantiates a new HotelBrochureTypePrimaryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelBrochureTypePrimaryDetails() *HotelBrochureTypePrimaryDetails {
	this := HotelBrochureTypePrimaryDetails{}
	return &this
}

// NewHotelBrochureTypePrimaryDetailsWithDefaults instantiates a new HotelBrochureTypePrimaryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelBrochureTypePrimaryDetailsWithDefaults() *HotelBrochureTypePrimaryDetails {
	this := HotelBrochureTypePrimaryDetails{}
	return &this
}

// GetLegalOwner returns the LegalOwner field value if set, zero value otherwise.
func (o *HotelBrochureTypePrimaryDetails) GetLegalOwner() string {
	if o == nil || IsNil(o.LegalOwner) {
		var ret string
		return ret
	}
	return *o.LegalOwner
}

// GetLegalOwnerOk returns a tuple with the LegalOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelBrochureTypePrimaryDetails) GetLegalOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.LegalOwner) {
		return nil, false
	}
	return o.LegalOwner, true
}

// HasLegalOwner returns a boolean if a field has been set.
func (o *HotelBrochureTypePrimaryDetails) HasLegalOwner() bool {
	if o != nil && !IsNil(o.LegalOwner) {
		return true
	}

	return false
}

// SetLegalOwner gets a reference to the given string and assigns it to the LegalOwner field.
func (o *HotelBrochureTypePrimaryDetails) SetLegalOwner(v string) {
	o.LegalOwner = &v
}

func (o HotelBrochureTypePrimaryDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelBrochureTypePrimaryDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LegalOwner) {
		toSerialize["legalOwner"] = o.LegalOwner
	}
	return toSerialize, nil
}

type NullableHotelBrochureTypePrimaryDetails struct {
	value *HotelBrochureTypePrimaryDetails
	isSet bool
}

func (v NullableHotelBrochureTypePrimaryDetails) Get() *HotelBrochureTypePrimaryDetails {
	return v.value
}

func (v *NullableHotelBrochureTypePrimaryDetails) Set(val *HotelBrochureTypePrimaryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelBrochureTypePrimaryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelBrochureTypePrimaryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelBrochureTypePrimaryDetails(val *HotelBrochureTypePrimaryDetails) *NullableHotelBrochureTypePrimaryDetails {
	return &NullableHotelBrochureTypePrimaryDetails{value: val, isSet: true}
}

func (v NullableHotelBrochureTypePrimaryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelBrochureTypePrimaryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


