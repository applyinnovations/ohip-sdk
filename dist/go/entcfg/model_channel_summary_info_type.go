/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.4
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the ChannelSummaryInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelSummaryInfoType{}

// ChannelSummaryInfoType Depicts channel information such as the type and code.
type ChannelSummaryInfoType struct {
	BookingChannel *BookingChannelType `json:"bookingChannel,omitempty"`
	// Indicates the transaction identifier.
	MessageId *string `json:"messageId,omitempty"`
	// Used to indicate whether to return summarized or detailed rate room information.
	SummaryOnly *bool `json:"summaryOnly,omitempty"`
}

// NewChannelSummaryInfoType instantiates a new ChannelSummaryInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelSummaryInfoType() *ChannelSummaryInfoType {
	this := ChannelSummaryInfoType{}
	return &this
}

// NewChannelSummaryInfoTypeWithDefaults instantiates a new ChannelSummaryInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelSummaryInfoTypeWithDefaults() *ChannelSummaryInfoType {
	this := ChannelSummaryInfoType{}
	return &this
}

// GetBookingChannel returns the BookingChannel field value if set, zero value otherwise.
func (o *ChannelSummaryInfoType) GetBookingChannel() BookingChannelType {
	if o == nil || IsNil(o.BookingChannel) {
		var ret BookingChannelType
		return ret
	}
	return *o.BookingChannel
}

// GetBookingChannelOk returns a tuple with the BookingChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSummaryInfoType) GetBookingChannelOk() (*BookingChannelType, bool) {
	if o == nil || IsNil(o.BookingChannel) {
		return nil, false
	}
	return o.BookingChannel, true
}

// HasBookingChannel returns a boolean if a field has been set.
func (o *ChannelSummaryInfoType) HasBookingChannel() bool {
	if o != nil && !IsNil(o.BookingChannel) {
		return true
	}

	return false
}

// SetBookingChannel gets a reference to the given BookingChannelType and assigns it to the BookingChannel field.
func (o *ChannelSummaryInfoType) SetBookingChannel(v BookingChannelType) {
	o.BookingChannel = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *ChannelSummaryInfoType) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSummaryInfoType) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *ChannelSummaryInfoType) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *ChannelSummaryInfoType) SetMessageId(v string) {
	o.MessageId = &v
}

// GetSummaryOnly returns the SummaryOnly field value if set, zero value otherwise.
func (o *ChannelSummaryInfoType) GetSummaryOnly() bool {
	if o == nil || IsNil(o.SummaryOnly) {
		var ret bool
		return ret
	}
	return *o.SummaryOnly
}

// GetSummaryOnlyOk returns a tuple with the SummaryOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSummaryInfoType) GetSummaryOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.SummaryOnly) {
		return nil, false
	}
	return o.SummaryOnly, true
}

// HasSummaryOnly returns a boolean if a field has been set.
func (o *ChannelSummaryInfoType) HasSummaryOnly() bool {
	if o != nil && !IsNil(o.SummaryOnly) {
		return true
	}

	return false
}

// SetSummaryOnly gets a reference to the given bool and assigns it to the SummaryOnly field.
func (o *ChannelSummaryInfoType) SetSummaryOnly(v bool) {
	o.SummaryOnly = &v
}

func (o ChannelSummaryInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelSummaryInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingChannel) {
		toSerialize["bookingChannel"] = o.BookingChannel
	}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	if !IsNil(o.SummaryOnly) {
		toSerialize["summaryOnly"] = o.SummaryOnly
	}
	return toSerialize, nil
}

type NullableChannelSummaryInfoType struct {
	value *ChannelSummaryInfoType
	isSet bool
}

func (v NullableChannelSummaryInfoType) Get() *ChannelSummaryInfoType {
	return v.value
}

func (v *NullableChannelSummaryInfoType) Set(val *ChannelSummaryInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelSummaryInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelSummaryInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelSummaryInfoType(val *ChannelSummaryInfoType) *NullableChannelSummaryInfoType {
	return &NullableChannelSummaryInfoType{value: val, isSet: true}
}

func (v NullableChannelSummaryInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelSummaryInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


