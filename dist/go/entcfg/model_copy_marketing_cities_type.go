/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.4
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the CopyMarketingCitiesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyMarketingCitiesType{}

// CopyMarketingCitiesType Copy instructions for template marketing cities to hotel(s).
type CopyMarketingCitiesType struct {
	HotelCodes []string `json:"hotelCodes,omitempty"`
	// Marketing city template to be copied to the hotel(s).
	TemplateMarketingCities []TemplateMarketingCityInfoType `json:"templateMarketingCities,omitempty"`
}

// NewCopyMarketingCitiesType instantiates a new CopyMarketingCitiesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyMarketingCitiesType() *CopyMarketingCitiesType {
	this := CopyMarketingCitiesType{}
	return &this
}

// NewCopyMarketingCitiesTypeWithDefaults instantiates a new CopyMarketingCitiesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyMarketingCitiesTypeWithDefaults() *CopyMarketingCitiesType {
	this := CopyMarketingCitiesType{}
	return &this
}

// GetHotelCodes returns the HotelCodes field value if set, zero value otherwise.
func (o *CopyMarketingCitiesType) GetHotelCodes() []string {
	if o == nil || IsNil(o.HotelCodes) {
		var ret []string
		return ret
	}
	return o.HotelCodes
}

// GetHotelCodesOk returns a tuple with the HotelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyMarketingCitiesType) GetHotelCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.HotelCodes) {
		return nil, false
	}
	return o.HotelCodes, true
}

// HasHotelCodes returns a boolean if a field has been set.
func (o *CopyMarketingCitiesType) HasHotelCodes() bool {
	if o != nil && !IsNil(o.HotelCodes) {
		return true
	}

	return false
}

// SetHotelCodes gets a reference to the given []string and assigns it to the HotelCodes field.
func (o *CopyMarketingCitiesType) SetHotelCodes(v []string) {
	o.HotelCodes = v
}

// GetTemplateMarketingCities returns the TemplateMarketingCities field value if set, zero value otherwise.
func (o *CopyMarketingCitiesType) GetTemplateMarketingCities() []TemplateMarketingCityInfoType {
	if o == nil || IsNil(o.TemplateMarketingCities) {
		var ret []TemplateMarketingCityInfoType
		return ret
	}
	return o.TemplateMarketingCities
}

// GetTemplateMarketingCitiesOk returns a tuple with the TemplateMarketingCities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyMarketingCitiesType) GetTemplateMarketingCitiesOk() ([]TemplateMarketingCityInfoType, bool) {
	if o == nil || IsNil(o.TemplateMarketingCities) {
		return nil, false
	}
	return o.TemplateMarketingCities, true
}

// HasTemplateMarketingCities returns a boolean if a field has been set.
func (o *CopyMarketingCitiesType) HasTemplateMarketingCities() bool {
	if o != nil && !IsNil(o.TemplateMarketingCities) {
		return true
	}

	return false
}

// SetTemplateMarketingCities gets a reference to the given []TemplateMarketingCityInfoType and assigns it to the TemplateMarketingCities field.
func (o *CopyMarketingCitiesType) SetTemplateMarketingCities(v []TemplateMarketingCityInfoType) {
	o.TemplateMarketingCities = v
}

func (o CopyMarketingCitiesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyMarketingCitiesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelCodes) {
		toSerialize["hotelCodes"] = o.HotelCodes
	}
	if !IsNil(o.TemplateMarketingCities) {
		toSerialize["templateMarketingCities"] = o.TemplateMarketingCities
	}
	return toSerialize, nil
}

type NullableCopyMarketingCitiesType struct {
	value *CopyMarketingCitiesType
	isSet bool
}

func (v NullableCopyMarketingCitiesType) Get() *CopyMarketingCitiesType {
	return v.value
}

func (v *NullableCopyMarketingCitiesType) Set(val *CopyMarketingCitiesType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyMarketingCitiesType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyMarketingCitiesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyMarketingCitiesType(val *CopyMarketingCitiesType) *NullableCopyMarketingCitiesType {
	return &NullableCopyMarketingCitiesType{value: val, isSet: true}
}

func (v NullableCopyMarketingCitiesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyMarketingCitiesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


