/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the HotelInfoTypeAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelInfoTypeAddress{}

// HotelInfoTypeAddress Provides address information.
type HotelInfoTypeAddress struct {
	// Indicator to define if the Address is validated by the Address Validation System.
	IsValidated *bool `json:"isValidated,omitempty"`
	// When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.
	AddressLine []string `json:"addressLine,omitempty"`
	// City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).
	CityName *string `json:"cityName,omitempty"`
	// Post Office Code number.
	PostalCode *string `json:"postalCode,omitempty"`
	// Post Office City Extension Code number. City Extension mainly used for UK addresses.
	CityExtension *string `json:"cityExtension,omitempty"`
	// County or District Name (e.g., Fairfax). This is read only.
	County *string `json:"county,omitempty"`
	// State or Province name (e.g., Texas).
	State *string `json:"state,omitempty"`
	Country *CountryNameType `json:"country,omitempty"`
	// Language identification.
	Language *string `json:"language,omitempty"`
	// Defines the type of address (e.g. home, business, other).
	Type *string `json:"type,omitempty"`
	// Describes the type code
	TypeDescription *string `json:"typeDescription,omitempty"`
	// When true, indicates a primary information.
	PrimaryInd *bool `json:"primaryInd,omitempty"`
	// Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.
	UpdateReservations *bool `json:"updateReservations,omitempty"`
	// The postal barcode for the address.
	BarCode *string `json:"barCode,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
	// The region code of the hotel.
	RegionCode *string `json:"regionCode,omitempty"`
}

// NewHotelInfoTypeAddress instantiates a new HotelInfoTypeAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelInfoTypeAddress() *HotelInfoTypeAddress {
	this := HotelInfoTypeAddress{}
	return &this
}

// NewHotelInfoTypeAddressWithDefaults instantiates a new HotelInfoTypeAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelInfoTypeAddressWithDefaults() *HotelInfoTypeAddress {
	this := HotelInfoTypeAddress{}
	return &this
}

// GetIsValidated returns the IsValidated field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetIsValidated() bool {
	if o == nil || IsNil(o.IsValidated) {
		var ret bool
		return ret
	}
	return *o.IsValidated
}

// GetIsValidatedOk returns a tuple with the IsValidated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetIsValidatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsValidated) {
		return nil, false
	}
	return o.IsValidated, true
}

// HasIsValidated returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasIsValidated() bool {
	if o != nil && !IsNil(o.IsValidated) {
		return true
	}

	return false
}

// SetIsValidated gets a reference to the given bool and assigns it to the IsValidated field.
func (o *HotelInfoTypeAddress) SetIsValidated(v bool) {
	o.IsValidated = &v
}

// GetAddressLine returns the AddressLine field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetAddressLine() []string {
	if o == nil || IsNil(o.AddressLine) {
		var ret []string
		return ret
	}
	return o.AddressLine
}

// GetAddressLineOk returns a tuple with the AddressLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetAddressLineOk() ([]string, bool) {
	if o == nil || IsNil(o.AddressLine) {
		return nil, false
	}
	return o.AddressLine, true
}

// HasAddressLine returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasAddressLine() bool {
	if o != nil && !IsNil(o.AddressLine) {
		return true
	}

	return false
}

// SetAddressLine gets a reference to the given []string and assigns it to the AddressLine field.
func (o *HotelInfoTypeAddress) SetAddressLine(v []string) {
	o.AddressLine = v
}

// GetCityName returns the CityName field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCityName() string {
	if o == nil || IsNil(o.CityName) {
		var ret string
		return ret
	}
	return *o.CityName
}

// GetCityNameOk returns a tuple with the CityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CityName) {
		return nil, false
	}
	return o.CityName, true
}

// HasCityName returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCityName() bool {
	if o != nil && !IsNil(o.CityName) {
		return true
	}

	return false
}

// SetCityName gets a reference to the given string and assigns it to the CityName field.
func (o *HotelInfoTypeAddress) SetCityName(v string) {
	o.CityName = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *HotelInfoTypeAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCityExtension returns the CityExtension field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCityExtension() string {
	if o == nil || IsNil(o.CityExtension) {
		var ret string
		return ret
	}
	return *o.CityExtension
}

// GetCityExtensionOk returns a tuple with the CityExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCityExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.CityExtension) {
		return nil, false
	}
	return o.CityExtension, true
}

// HasCityExtension returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCityExtension() bool {
	if o != nil && !IsNil(o.CityExtension) {
		return true
	}

	return false
}

// SetCityExtension gets a reference to the given string and assigns it to the CityExtension field.
func (o *HotelInfoTypeAddress) SetCityExtension(v string) {
	o.CityExtension = &v
}

// GetCounty returns the County field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCounty() string {
	if o == nil || IsNil(o.County) {
		var ret string
		return ret
	}
	return *o.County
}

// GetCountyOk returns a tuple with the County field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCountyOk() (*string, bool) {
	if o == nil || IsNil(o.County) {
		return nil, false
	}
	return o.County, true
}

// HasCounty returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCounty() bool {
	if o != nil && !IsNil(o.County) {
		return true
	}

	return false
}

// SetCounty gets a reference to the given string and assigns it to the County field.
func (o *HotelInfoTypeAddress) SetCounty(v string) {
	o.County = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *HotelInfoTypeAddress) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCountry() CountryNameType {
	if o == nil || IsNil(o.Country) {
		var ret CountryNameType
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCountryOk() (*CountryNameType, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryNameType and assigns it to the Country field.
func (o *HotelInfoTypeAddress) SetCountry(v CountryNameType) {
	o.Country = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *HotelInfoTypeAddress) SetLanguage(v string) {
	o.Language = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *HotelInfoTypeAddress) SetType(v string) {
	o.Type = &v
}

// GetTypeDescription returns the TypeDescription field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetTypeDescription() string {
	if o == nil || IsNil(o.TypeDescription) {
		var ret string
		return ret
	}
	return *o.TypeDescription
}

// GetTypeDescriptionOk returns a tuple with the TypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetTypeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TypeDescription) {
		return nil, false
	}
	return o.TypeDescription, true
}

// HasTypeDescription returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasTypeDescription() bool {
	if o != nil && !IsNil(o.TypeDescription) {
		return true
	}

	return false
}

// SetTypeDescription gets a reference to the given string and assigns it to the TypeDescription field.
func (o *HotelInfoTypeAddress) SetTypeDescription(v string) {
	o.TypeDescription = &v
}

// GetPrimaryInd returns the PrimaryInd field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetPrimaryInd() bool {
	if o == nil || IsNil(o.PrimaryInd) {
		var ret bool
		return ret
	}
	return *o.PrimaryInd
}

// GetPrimaryIndOk returns a tuple with the PrimaryInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetPrimaryIndOk() (*bool, bool) {
	if o == nil || IsNil(o.PrimaryInd) {
		return nil, false
	}
	return o.PrimaryInd, true
}

// HasPrimaryInd returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasPrimaryInd() bool {
	if o != nil && !IsNil(o.PrimaryInd) {
		return true
	}

	return false
}

// SetPrimaryInd gets a reference to the given bool and assigns it to the PrimaryInd field.
func (o *HotelInfoTypeAddress) SetPrimaryInd(v bool) {
	o.PrimaryInd = &v
}

// GetUpdateReservations returns the UpdateReservations field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetUpdateReservations() bool {
	if o == nil || IsNil(o.UpdateReservations) {
		var ret bool
		return ret
	}
	return *o.UpdateReservations
}

// GetUpdateReservationsOk returns a tuple with the UpdateReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetUpdateReservationsOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateReservations) {
		return nil, false
	}
	return o.UpdateReservations, true
}

// HasUpdateReservations returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasUpdateReservations() bool {
	if o != nil && !IsNil(o.UpdateReservations) {
		return true
	}

	return false
}

// SetUpdateReservations gets a reference to the given bool and assigns it to the UpdateReservations field.
func (o *HotelInfoTypeAddress) SetUpdateReservations(v bool) {
	o.UpdateReservations = &v
}

// GetBarCode returns the BarCode field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetBarCode() string {
	if o == nil || IsNil(o.BarCode) {
		var ret string
		return ret
	}
	return *o.BarCode
}

// GetBarCodeOk returns a tuple with the BarCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetBarCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BarCode) {
		return nil, false
	}
	return o.BarCode, true
}

// HasBarCode returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasBarCode() bool {
	if o != nil && !IsNil(o.BarCode) {
		return true
	}

	return false
}

// SetBarCode gets a reference to the given string and assigns it to the BarCode field.
func (o *HotelInfoTypeAddress) SetBarCode(v string) {
	o.BarCode = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *HotelInfoTypeAddress) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *HotelInfoTypeAddress) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *HotelInfoTypeAddress) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *HotelInfoTypeAddress) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *HotelInfoTypeAddress) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *HotelInfoTypeAddress) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInfoTypeAddress) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *HotelInfoTypeAddress) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *HotelInfoTypeAddress) SetRegionCode(v string) {
	o.RegionCode = &v
}

func (o HotelInfoTypeAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelInfoTypeAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsValidated) {
		toSerialize["isValidated"] = o.IsValidated
	}
	if !IsNil(o.AddressLine) {
		toSerialize["addressLine"] = o.AddressLine
	}
	if !IsNil(o.CityName) {
		toSerialize["cityName"] = o.CityName
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.CityExtension) {
		toSerialize["cityExtension"] = o.CityExtension
	}
	if !IsNil(o.County) {
		toSerialize["county"] = o.County
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TypeDescription) {
		toSerialize["typeDescription"] = o.TypeDescription
	}
	if !IsNil(o.PrimaryInd) {
		toSerialize["primaryInd"] = o.PrimaryInd
	}
	if !IsNil(o.UpdateReservations) {
		toSerialize["updateReservations"] = o.UpdateReservations
	}
	if !IsNil(o.BarCode) {
		toSerialize["barCode"] = o.BarCode
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	if !IsNil(o.RegionCode) {
		toSerialize["regionCode"] = o.RegionCode
	}
	return toSerialize, nil
}

type NullableHotelInfoTypeAddress struct {
	value *HotelInfoTypeAddress
	isSet bool
}

func (v NullableHotelInfoTypeAddress) Get() *HotelInfoTypeAddress {
	return v.value
}

func (v *NullableHotelInfoTypeAddress) Set(val *HotelInfoTypeAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelInfoTypeAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelInfoTypeAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelInfoTypeAddress(val *HotelInfoTypeAddress) *NullableHotelInfoTypeAddress {
	return &NullableHotelInfoTypeAddress{value: val, isSet: true}
}

func (v NullableHotelInfoTypeAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelInfoTypeAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


