/*
Opera Cloud Rate Plan Asynchronous Service API

APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtpasync

import (
	"encoding/json"
)

// checks if the RatePlanSellControlsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RatePlanSellControlsType{}

// RatePlanSellControlsType struct for RatePlanSellControlsType
type RatePlanSellControlsType struct {
	// Minimum number of nights the guest has to stay through to consume this rate plan code.
	MinimumStayThrough *int32 `json:"minimumStayThrough,omitempty"`
	// Minimum number of nights the guest has to stay to consume this rate plan code.
	MinimumLengthOfStay *int32 `json:"minimumLengthOfStay,omitempty"`
}

// NewRatePlanSellControlsType instantiates a new RatePlanSellControlsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatePlanSellControlsType() *RatePlanSellControlsType {
	this := RatePlanSellControlsType{}
	return &this
}

// NewRatePlanSellControlsTypeWithDefaults instantiates a new RatePlanSellControlsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatePlanSellControlsTypeWithDefaults() *RatePlanSellControlsType {
	this := RatePlanSellControlsType{}
	return &this
}

// GetMinimumStayThrough returns the MinimumStayThrough field value if set, zero value otherwise.
func (o *RatePlanSellControlsType) GetMinimumStayThrough() int32 {
	if o == nil || IsNil(o.MinimumStayThrough) {
		var ret int32
		return ret
	}
	return *o.MinimumStayThrough
}

// GetMinimumStayThroughOk returns a tuple with the MinimumStayThrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanSellControlsType) GetMinimumStayThroughOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumStayThrough) {
		return nil, false
	}
	return o.MinimumStayThrough, true
}

// HasMinimumStayThrough returns a boolean if a field has been set.
func (o *RatePlanSellControlsType) HasMinimumStayThrough() bool {
	if o != nil && !IsNil(o.MinimumStayThrough) {
		return true
	}

	return false
}

// SetMinimumStayThrough gets a reference to the given int32 and assigns it to the MinimumStayThrough field.
func (o *RatePlanSellControlsType) SetMinimumStayThrough(v int32) {
	o.MinimumStayThrough = &v
}

// GetMinimumLengthOfStay returns the MinimumLengthOfStay field value if set, zero value otherwise.
func (o *RatePlanSellControlsType) GetMinimumLengthOfStay() int32 {
	if o == nil || IsNil(o.MinimumLengthOfStay) {
		var ret int32
		return ret
	}
	return *o.MinimumLengthOfStay
}

// GetMinimumLengthOfStayOk returns a tuple with the MinimumLengthOfStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanSellControlsType) GetMinimumLengthOfStayOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumLengthOfStay) {
		return nil, false
	}
	return o.MinimumLengthOfStay, true
}

// HasMinimumLengthOfStay returns a boolean if a field has been set.
func (o *RatePlanSellControlsType) HasMinimumLengthOfStay() bool {
	if o != nil && !IsNil(o.MinimumLengthOfStay) {
		return true
	}

	return false
}

// SetMinimumLengthOfStay gets a reference to the given int32 and assigns it to the MinimumLengthOfStay field.
func (o *RatePlanSellControlsType) SetMinimumLengthOfStay(v int32) {
	o.MinimumLengthOfStay = &v
}

func (o RatePlanSellControlsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RatePlanSellControlsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinimumStayThrough) {
		toSerialize["minimumStayThrough"] = o.MinimumStayThrough
	}
	if !IsNil(o.MinimumLengthOfStay) {
		toSerialize["minimumLengthOfStay"] = o.MinimumLengthOfStay
	}
	return toSerialize, nil
}

type NullableRatePlanSellControlsType struct {
	value *RatePlanSellControlsType
	isSet bool
}

func (v NullableRatePlanSellControlsType) Get() *RatePlanSellControlsType {
	return v.value
}

func (v *NullableRatePlanSellControlsType) Set(val *RatePlanSellControlsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRatePlanSellControlsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRatePlanSellControlsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatePlanSellControlsType(val *RatePlanSellControlsType) *NullableRatePlanSellControlsType {
	return &NullableRatePlanSellControlsType{value: val, isSet: true}
}

func (v NullableRatePlanSellControlsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatePlanSellControlsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


