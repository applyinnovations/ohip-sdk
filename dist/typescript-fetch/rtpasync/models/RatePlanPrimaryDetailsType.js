"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RatePlanPrimaryDetailsTypeToJSON = exports.RatePlanPrimaryDetailsTypeFromJSONTyped = exports.RatePlanPrimaryDetailsTypeFromJSON = exports.instanceOfRatePlanPrimaryDetailsType = void 0;
const runtime_1 = require("../runtime");
const RateCodeLockStatusType_1 = require("./RateCodeLockStatusType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the RatePlanPrimaryDetailsType interface.
 */
function instanceOfRatePlanPrimaryDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRatePlanPrimaryDetailsType = instanceOfRatePlanPrimaryDetailsType;
function RatePlanPrimaryDetailsTypeFromJSON(json) {
    return RatePlanPrimaryDetailsTypeFromJSONTyped(json, false);
}
exports.RatePlanPrimaryDetailsTypeFromJSON = RatePlanPrimaryDetailsTypeFromJSON;
function RatePlanPrimaryDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'startSellDate': !(0, runtime_1.exists)(json, 'startSellDate') ? undefined : json['startSellDate'],
        'endSellDate': !(0, runtime_1.exists)(json, 'endSellDate') ? undefined : json['endSellDate'],
        'privilegedRate': !(0, runtime_1.exists)(json, 'privilegedRate') ? undefined : json['privilegedRate'],
        'privilegedRateRestriction': !(0, runtime_1.exists)(json, 'privilegedRateRestriction') ? undefined : json['privilegedRateRestriction'],
        'lockStatus': !(0, runtime_1.exists)(json, 'lockStatus') ? undefined : (0, RateCodeLockStatusType_1.RateCodeLockStatusTypeFromJSON)(json['lockStatus']),
    };
}
exports.RatePlanPrimaryDetailsTypeFromJSONTyped = RatePlanPrimaryDetailsTypeFromJSONTyped;
function RatePlanPrimaryDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'startSellDate': value.startSellDate,
        'endSellDate': value.endSellDate,
        'privilegedRate': value.privilegedRate,
        'privilegedRateRestriction': value.privilegedRateRestriction,
        'lockStatus': (0, RateCodeLockStatusType_1.RateCodeLockStatusTypeToJSON)(value.lockStatus),
    };
}
exports.RatePlanPrimaryDetailsTypeToJSON = RatePlanPrimaryDetailsTypeToJSON;
