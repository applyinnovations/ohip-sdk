/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DailyRatePlanScheduleType } from './DailyRatePlanScheduleType';
import {
    DailyRatePlanScheduleTypeFromJSON,
    DailyRatePlanScheduleTypeFromJSONTyped,
    DailyRatePlanScheduleTypeToJSON,
} from './DailyRatePlanScheduleType';

/**
 * Daily rate plan schedules.
 * @export
 * @interface DailyRatePlanSchedules
 */
export interface DailyRatePlanSchedules {
    /**
     * Collection of daily rate plan schedules.
     * @type {Array<DailyRatePlanScheduleType>}
     * @memberof DailyRatePlanSchedules
     */
    dailyRatePlanSchedule?: Array<DailyRatePlanScheduleType>;
}

/**
 * Check if a given object implements the DailyRatePlanSchedules interface.
 */
export function instanceOfDailyRatePlanSchedules(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DailyRatePlanSchedulesFromJSON(json: any): DailyRatePlanSchedules {
    return DailyRatePlanSchedulesFromJSONTyped(json, false);
}

export function DailyRatePlanSchedulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): DailyRatePlanSchedules {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyRatePlanSchedule': !exists(json, 'dailyRatePlanSchedule') ? undefined : ((json['dailyRatePlanSchedule'] as Array<any>).map(DailyRatePlanScheduleTypeFromJSON)),
    };
}

export function DailyRatePlanSchedulesToJSON(value?: DailyRatePlanSchedules | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dailyRatePlanSchedule': value.dailyRatePlanSchedule === undefined ? undefined : ((value.dailyRatePlanSchedule as Array<any>).map(DailyRatePlanScheduleTypeToJSON)),
    };
}

