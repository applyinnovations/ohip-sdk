/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RatePlanDistributionType } from './RatePlanDistributionType';
/**
 * The Rate plan code Details.
 * @export
 * @interface RatePlanType
 */
export interface RatePlanType {
    /**
     * Flag to identify if Rate Code is Advanced Daily Base Rate Code
     * @type {boolean}
     * @memberof RatePlanType
     */
    advancedDailyBase?: boolean;
    /**
     * Flag to identify if Rate Code is Advanced Daily Rate
     * @type {boolean}
     * @memberof RatePlanType
     */
    advancedDailyRate?: boolean;
    /**
     * Is rate plan code of BAR Rate type?
     * @type {boolean}
     * @memberof RatePlanType
     */
    barRate?: boolean;
    /**
     * Is rate plan code complimentary?
     * @type {boolean}
     * @memberof RatePlanType
     */
    complimentary?: boolean;
    /**
     * Is rate plan code a daily rate?
     * @type {boolean}
     * @memberof RatePlanType
     */
    daily?: boolean;
    /**
     * Indicates if rate Calendar factors such as adder/multiplier should be used for price calculation.
     * @type {boolean}
     * @memberof RatePlanType
     */
    dayType?: boolean;
    /**
     * Is rate plan code for day use?
     * @type {boolean}
     * @memberof RatePlanType
     */
    dayUse?: boolean;
    /**
     * Is rate plan code discounted?
     * @type {boolean}
     * @memberof RatePlanType
     */
    discountAllowed?: boolean;
    /**
     *
     * @type {RatePlanDistributionType}
     * @memberof RatePlanType
     */
    distribution?: RatePlanDistributionType;
    /**
     * Is rate plan code for house use?
     * @type {boolean}
     * @memberof RatePlanType
     */
    houseUse?: boolean;
    /**
     * Is rate plan code flagged as eligible for memberships? This flag controls whether the guest stay, which this rate plan is attached to, qualifies for point calculations for Frequent Flyer or Frequent Guest programs. If the rate plan associated to the reservation has not been flagged for Membership then the guest will not earn any points/miles for their stay.
     * @type {boolean}
     * @memberof RatePlanType
     */
    membershipEligible?: boolean;
    /**
     * This is a placeholder element for future use. Functionality may not be available for the current implementation.
     * @type {boolean}
     * @memberof RatePlanType
     */
    mobileCheckinAllowed?: boolean;
    /**
     * This is a placeholder element for future use. Functionality may not be available for the current implementation.
     * @type {boolean}
     * @memberof RatePlanType
     */
    mobileCheckoutAllowed?: boolean;
    /**
     * Is rate plan code only available as a negotiated rate that must be associated with a guest, company, or travel agent profile ?
     * @type {boolean}
     * @memberof RatePlanType
     */
    negotiated?: boolean;
    /**
     * Is rate plan code flagged as an owner rate plan? Owner rate plans have special functionality for no-shows depending on the Rolling Noshow Preference application setting.
     * @type {boolean}
     * @memberof RatePlanType
     */
    ownerRate?: boolean;
    /**
     * Is Rate amount printed on the reports for the rate plan?
     * @type {boolean}
     * @memberof RatePlanType
     */
    printRate?: boolean;
    /**
     * Rate plan Code
     * @type {string}
     * @memberof RatePlanType
     */
    ratePlanCode?: string;
    /**
     * Is redemption allowed on the rate code?
     * @type {boolean}
     * @memberof RatePlanType
     */
    redemption?: boolean;
    /**
     * Is rate amount suppressed for the rate plan?
     * @type {boolean}
     * @memberof RatePlanType
     */
    supressRate?: boolean;
    /**
     * Is rate plan code a tiered rate?
     * @type {boolean}
     * @memberof RatePlanType
     */
    tiered?: boolean;
}
/**
 * Check if a given object implements the RatePlanType interface.
 */
export declare function instanceOfRatePlanType(value: object): boolean;
export declare function RatePlanTypeFromJSON(json: any): RatePlanType;
export declare function RatePlanTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanType;
export declare function RatePlanTypeToJSON(value?: RatePlanType | null): any;
