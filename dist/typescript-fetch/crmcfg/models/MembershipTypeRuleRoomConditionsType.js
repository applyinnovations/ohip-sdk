"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipTypeRuleRoomConditionsTypeToJSON = exports.MembershipTypeRuleRoomConditionsTypeFromJSONTyped = exports.MembershipTypeRuleRoomConditionsTypeFromJSON = exports.instanceOfMembershipTypeRuleRoomConditionsType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the MembershipTypeRuleRoomConditionsType interface.
 */
function instanceOfMembershipTypeRuleRoomConditionsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipTypeRuleRoomConditionsType = instanceOfMembershipTypeRuleRoomConditionsType;
function MembershipTypeRuleRoomConditionsTypeFromJSON(json) {
    return MembershipTypeRuleRoomConditionsTypeFromJSONTyped(json, false);
}
exports.MembershipTypeRuleRoomConditionsTypeFromJSON = MembershipTypeRuleRoomConditionsTypeFromJSON;
function MembershipTypeRuleRoomConditionsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomClass': !(0, runtime_1.exists)(json, 'roomClass') ? undefined : json['roomClass'],
        'roomGroup': !(0, runtime_1.exists)(json, 'roomGroup') ? undefined : json['roomGroup'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'roomsToCharge': !(0, runtime_1.exists)(json, 'roomsToCharge') ? undefined : json['roomsToCharge'],
    };
}
exports.MembershipTypeRuleRoomConditionsTypeFromJSONTyped = MembershipTypeRuleRoomConditionsTypeFromJSONTyped;
function MembershipTypeRuleRoomConditionsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomClass': value.roomClass,
        'roomGroup': value.roomGroup,
        'roomType': value.roomType,
        'roomsToCharge': value.roomsToCharge,
    };
}
exports.MembershipTypeRuleRoomConditionsTypeToJSON = MembershipTypeRuleRoomConditionsTypeToJSON;
