"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigCopyPreferencesTypeToJSON = exports.ConfigCopyPreferencesTypeFromJSONTyped = exports.ConfigCopyPreferencesTypeFromJSON = exports.instanceOfConfigCopyPreferencesType = void 0;
const runtime_1 = require("../runtime");
const ConfigTemplatePreferenceIDType_1 = require("./ConfigTemplatePreferenceIDType");
/**
 * Check if a given object implements the ConfigCopyPreferencesType interface.
 */
function instanceOfConfigCopyPreferencesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigCopyPreferencesType = instanceOfConfigCopyPreferencesType;
function ConfigCopyPreferencesTypeFromJSON(json) {
    return ConfigCopyPreferencesTypeFromJSONTyped(json, false);
}
exports.ConfigCopyPreferencesTypeFromJSON = ConfigCopyPreferencesTypeFromJSON;
function ConfigCopyPreferencesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelCodes': !(0, runtime_1.exists)(json, 'hotelCodes') ? undefined : json['hotelCodes'],
        'templatePreferences': !(0, runtime_1.exists)(json, 'templatePreferences') ? undefined : (json['templatePreferences'].map(ConfigTemplatePreferenceIDType_1.ConfigTemplatePreferenceIDTypeFromJSON)),
    };
}
exports.ConfigCopyPreferencesTypeFromJSONTyped = ConfigCopyPreferencesTypeFromJSONTyped;
function ConfigCopyPreferencesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelCodes': value.hotelCodes,
        'templatePreferences': value.templatePreferences === undefined ? undefined : (value.templatePreferences.map(ConfigTemplatePreferenceIDType_1.ConfigTemplatePreferenceIDTypeToJSON)),
    };
}
exports.ConfigCopyPreferencesTypeToJSON = ConfigCopyPreferencesTypeToJSON;
