"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwardsExceptionCriteriaTypeToJSON = exports.AwardsExceptionCriteriaTypeFromJSONTyped = exports.AwardsExceptionCriteriaTypeFromJSON = exports.instanceOfAwardsExceptionCriteriaType = void 0;
const runtime_1 = require("../runtime");
const MultipleRoomsType_1 = require("./MultipleRoomsType");
/**
 * Check if a given object implements the AwardsExceptionCriteriaType interface.
 */
function instanceOfAwardsExceptionCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAwardsExceptionCriteriaType = instanceOfAwardsExceptionCriteriaType;
function AwardsExceptionCriteriaTypeFromJSON(json) {
    return AwardsExceptionCriteriaTypeFromJSONTyped(json, false);
}
exports.AwardsExceptionCriteriaTypeFromJSON = AwardsExceptionCriteriaTypeFromJSON;
function AwardsExceptionCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'multipleRooms': !(0, runtime_1.exists)(json, 'multipleRooms') ? undefined : (0, MultipleRoomsType_1.MultipleRoomsTypeFromJSON)(json['multipleRooms']),
        'bBSingleProperty': !(0, runtime_1.exists)(json, 'bBSingleProperty') ? undefined : json['bBSingleProperty'],
        'bBSingleGroup': !(0, runtime_1.exists)(json, 'bBSingleGroup') ? undefined : json['bBSingleGroup'],
        'bBCrossMembership': !(0, runtime_1.exists)(json, 'bBCrossMembership') ? undefined : json['bBCrossMembership'],
        'externalProcessingException': !(0, runtime_1.exists)(json, 'externalProcessingException') ? undefined : json['externalProcessingException'],
    };
}
exports.AwardsExceptionCriteriaTypeFromJSONTyped = AwardsExceptionCriteriaTypeFromJSONTyped;
function AwardsExceptionCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'multipleRooms': (0, MultipleRoomsType_1.MultipleRoomsTypeToJSON)(value.multipleRooms),
        'bBSingleProperty': value.bBSingleProperty,
        'bBSingleGroup': value.bBSingleGroup,
        'bBCrossMembership': value.bBCrossMembership,
        'externalProcessingException': value.externalProcessingException,
    };
}
exports.AwardsExceptionCriteriaTypeToJSON = AwardsExceptionCriteriaTypeToJSON;
