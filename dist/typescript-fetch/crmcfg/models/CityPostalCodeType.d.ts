/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about the City and Postal Code.
 * @export
 * @interface CityPostalCodeType
 */
export interface CityPostalCodeType {
    /**
     * The name of the city which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    city?: string;
    /**
     * The identifier of the city and postal code.
     * @type {number}
     * @memberof CityPostalCodeType
     */
    cityPostalCodeId?: number;
    /**
     * The Country which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    countryCode?: string;
    /**
     * The District which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    districtCode?: string;
    /**
     * The Fiscal Region Code which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    fiscalRegionCode?: string;
    /**
     * The start range of the city and postal code.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    postalCodeFrom?: string;
    /**
     * The end range of the city and postal code.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    postalCodeTo?: string;
    /**
     * The State which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    stateCode?: string;
    /**
     * The Territoty which the City and Postal belongs to.
     * @type {string}
     * @memberof CityPostalCodeType
     */
    territoryCode?: string;
}
/**
 * Check if a given object implements the CityPostalCodeType interface.
 */
export declare function instanceOfCityPostalCodeType(value: object): boolean;
export declare function CityPostalCodeTypeFromJSON(json: any): CityPostalCodeType;
export declare function CityPostalCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityPostalCodeType;
export declare function CityPostalCodeTypeToJSON(value?: CityPostalCodeType | null): any;
