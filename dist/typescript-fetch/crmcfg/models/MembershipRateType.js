"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipRateTypeToJSON = exports.MembershipRateTypeFromJSONTyped = exports.MembershipRateTypeFromJSON = exports.instanceOfMembershipRateType = void 0;
const runtime_1 = require("../runtime");
const RateRuleMembershipType_1 = require("./RateRuleMembershipType");
/**
 * Check if a given object implements the MembershipRateType interface.
 */
function instanceOfMembershipRateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipRateType = instanceOfMembershipRateType;
function MembershipRateTypeFromJSON(json) {
    return MembershipRateTypeFromJSONTyped(json, false);
}
exports.MembershipRateTypeFromJSON = MembershipRateTypeFromJSON;
function MembershipRateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'ruleCode': !(0, runtime_1.exists)(json, 'ruleCode') ? undefined : json['ruleCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'beginDate': !(0, runtime_1.exists)(json, 'beginDate') ? undefined : json['beginDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'ratePlanCodes': !(0, runtime_1.exists)(json, 'ratePlanCodes') ? undefined : json['ratePlanCodes'],
        'memberships': !(0, runtime_1.exists)(json, 'memberships') ? undefined : (json['memberships'].map(RateRuleMembershipType_1.RateRuleMembershipTypeFromJSON)),
        'latestTOB': !(0, runtime_1.exists)(json, 'latestTOB') ? undefined : json['latestTOB'],
        'daysToDOA': !(0, runtime_1.exists)(json, 'daysToDOA') ? undefined : json['daysToDOA'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'guaranteed': !(0, runtime_1.exists)(json, 'guaranteed') ? undefined : json['guaranteed'],
    };
}
exports.MembershipRateTypeFromJSONTyped = MembershipRateTypeFromJSONTyped;
function MembershipRateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'ruleCode': value.ruleCode,
        'description': value.description,
        'beginDate': value.beginDate,
        'endDate': value.endDate,
        'ratePlanCodes': value.ratePlanCodes,
        'memberships': value.memberships === undefined ? undefined : (value.memberships.map(RateRuleMembershipType_1.RateRuleMembershipTypeToJSON)),
        'latestTOB': value.latestTOB,
        'daysToDOA': value.daysToDOA,
        'inactive': value.inactive,
        'guaranteed': value.guaranteed,
    };
}
exports.MembershipRateTypeToJSON = MembershipRateTypeToJSON;
