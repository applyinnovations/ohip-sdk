"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserDefinedEnrollmentFieldTypeToJSON = exports.UserDefinedEnrollmentFieldTypeFromJSONTyped = exports.UserDefinedEnrollmentFieldTypeFromJSON = exports.instanceOfUserDefinedEnrollmentFieldType = void 0;
const runtime_1 = require("../runtime");
const UserDefinedEnrollmentFieldNameType_1 = require("./UserDefinedEnrollmentFieldNameType");
/**
 * Check if a given object implements the UserDefinedEnrollmentFieldType interface.
 */
function instanceOfUserDefinedEnrollmentFieldType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfUserDefinedEnrollmentFieldType = instanceOfUserDefinedEnrollmentFieldType;
function UserDefinedEnrollmentFieldTypeFromJSON(json) {
    return UserDefinedEnrollmentFieldTypeFromJSONTyped(json, false);
}
exports.UserDefinedEnrollmentFieldTypeFromJSON = UserDefinedEnrollmentFieldTypeFromJSON;
function UserDefinedEnrollmentFieldTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'fieldName': !(0, runtime_1.exists)(json, 'fieldName') ? undefined : (0, UserDefinedEnrollmentFieldNameType_1.UserDefinedEnrollmentFieldNameTypeFromJSON)(json['fieldName']),
        'fieldType': !(0, runtime_1.exists)(json, 'fieldType') ? undefined : json['fieldType'],
        'requiredField': !(0, runtime_1.exists)(json, 'requiredField') ? undefined : json['requiredField'],
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
    };
}
exports.UserDefinedEnrollmentFieldTypeFromJSONTyped = UserDefinedEnrollmentFieldTypeFromJSONTyped;
function UserDefinedEnrollmentFieldTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'fieldName': (0, UserDefinedEnrollmentFieldNameType_1.UserDefinedEnrollmentFieldNameTypeToJSON)(value.fieldName),
        'fieldType': value.fieldType,
        'requiredField': value.requiredField,
        'active': value.active,
    };
}
exports.UserDefinedEnrollmentFieldTypeToJSON = UserDefinedEnrollmentFieldTypeToJSON;
