/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ManagedByOptions } from './ManagedByOptions';
import type { TranslationTextType2000 } from './TranslationTextType2000';
/**
 * Contains Common Master configuration detail.
 * @export
 * @interface ProfileInactiveReasonType
 */
export interface ProfileInactiveReasonType {
    /**
     * Common Master unique code.
     * @type {string}
     * @memberof ProfileInactiveReasonType
     */
    code?: string;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof ProfileInactiveReasonType
     */
    description?: TranslationTextType2000;
    /**
     * Common Master record sequence number.
     * @type {number}
     * @memberof ProfileInactiveReasonType
     */
    displayOrder?: number;
    /**
     *
     * @type {ManagedByOptions}
     * @memberof ProfileInactiveReasonType
     */
    managedBy?: ManagedByOptions;
}
/**
 * Check if a given object implements the ProfileInactiveReasonType interface.
 */
export declare function instanceOfProfileInactiveReasonType(value: object): boolean;
export declare function ProfileInactiveReasonTypeFromJSON(json: any): ProfileInactiveReasonType;
export declare function ProfileInactiveReasonTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileInactiveReasonType;
export declare function ProfileInactiveReasonTypeToJSON(value?: ProfileInactiveReasonType | null): any;
