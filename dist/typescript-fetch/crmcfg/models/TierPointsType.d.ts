/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { NumberOfYearsType } from './NumberOfYearsType';
import type { PointsCalculationDateType } from './PointsCalculationDateType';
import type { UpgradeDowngradeForCalendarPeriodType } from './UpgradeDowngradeForCalendarPeriodType';
/**
 * Base parent type for membership points comprising common elements between award points and tier points.
 * @export
 * @interface TierPointsType
 */
export interface TierPointsType {
    /**
     * Indicates if points will be displayed for guests who are not members.
     * @type {boolean}
     * @memberof TierPointsType
     */
    nonMemberPoints?: boolean;
    /**
     *
     * @type {PointsCalculationDateType}
     * @memberof TierPointsType
     */
    basedOn?: PointsCalculationDateType;
    /**
     * Month for Upgrade/Downgrade in a Calendar Period.
     * @type {string}
     * @memberof TierPointsType
     */
    tierExpirationMonth?: string;
    /**
     * Requalify on Upgrade
     * @type {boolean}
     * @memberof TierPointsType
     */
    requalifyOnUpgrade?: boolean;
    /**
     * Downgrade/Renew the membership level automatically.
     * @type {boolean}
     * @memberof TierPointsType
     */
    downgradeRenewalInAutoJob?: boolean;
    /**
     *
     * @type {NumberOfYearsType}
     * @memberof TierPointsType
     */
    upgradePeriodRolling?: NumberOfYearsType;
    /**
     *
     * @type {NumberOfYearsType}
     * @memberof TierPointsType
     */
    downgradePeriodRolling?: NumberOfYearsType;
    /**
     *
     * @type {UpgradeDowngradeForCalendarPeriodType}
     * @memberof TierPointsType
     */
    upgradePeriodCalendar?: UpgradeDowngradeForCalendarPeriodType;
    /**
     *
     * @type {UpgradeDowngradeForCalendarPeriodType}
     * @memberof TierPointsType
     */
    downgradePeriodCalendar?: UpgradeDowngradeForCalendarPeriodType;
    /**
     * TMR (Tier Management Reset) Level Rules configuration enabled or not.
     * @type {boolean}
     * @memberof TierPointsType
     */
    enableTierManagementReset?: boolean;
}
/**
 * Check if a given object implements the TierPointsType interface.
 */
export declare function instanceOfTierPointsType(value: object): boolean;
export declare function TierPointsTypeFromJSON(json: any): TierPointsType;
export declare function TierPointsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TierPointsType;
export declare function TierPointsTypeToJSON(value?: TierPointsType | null): any;
