"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressFormatTypeToJSON = exports.AddressFormatTypeFromJSONTyped = exports.AddressFormatTypeFromJSON = exports.instanceOfAddressFormatType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the AddressFormatType interface.
 */
function instanceOfAddressFormatType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAddressFormatType = instanceOfAddressFormatType;
function AddressFormatTypeFromJSON(json) {
    return AddressFormatTypeFromJSONTyped(json, false);
}
exports.AddressFormatTypeFromJSON = AddressFormatTypeFromJSON;
function AddressFormatTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'canDelete': !(0, runtime_1.exists)(json, 'canDelete') ? undefined : json['canDelete'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'displayOrder': !(0, runtime_1.exists)(json, 'displayOrder') ? undefined : json['displayOrder'],
        'formatCode': !(0, runtime_1.exists)(json, 'formatCode') ? undefined : json['formatCode'],
        'formatDefinition': !(0, runtime_1.exists)(json, 'formatDefinition') ? undefined : json['formatDefinition'],
        'formattedExample': !(0, runtime_1.exists)(json, 'formattedExample') ? undefined : json['formattedExample'],
        'salesFormat': !(0, runtime_1.exists)(json, 'salesFormat') ? undefined : json['salesFormat'],
    };
}
exports.AddressFormatTypeFromJSONTyped = AddressFormatTypeFromJSONTyped;
function AddressFormatTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'canDelete': value.canDelete,
        'description': value.description,
        'displayOrder': value.displayOrder,
        'formatCode': value.formatCode,
        'formatDefinition': value.formatDefinition,
        'formattedExample': value.formattedExample,
        'salesFormat': value.salesFormat,
    };
}
exports.AddressFormatTypeToJSON = AddressFormatTypeToJSON;
