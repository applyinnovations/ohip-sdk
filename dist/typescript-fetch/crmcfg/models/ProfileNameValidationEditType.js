"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileNameValidationEditTypeToJSON = exports.ProfileNameValidationEditTypeFromJSONTyped = exports.ProfileNameValidationEditTypeFromJSON = exports.instanceOfProfileNameValidationEditType = void 0;
const runtime_1 = require("../runtime");
const ProfileNameValidationType_1 = require("./ProfileNameValidationType");
const ProfileNameValidationTypeType_1 = require("./ProfileNameValidationTypeType");
/**
 * Check if a given object implements the ProfileNameValidationEditType interface.
 */
function instanceOfProfileNameValidationEditType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileNameValidationEditType = instanceOfProfileNameValidationEditType;
function ProfileNameValidationEditTypeFromJSON(json) {
    return ProfileNameValidationEditTypeFromJSONTyped(json, false);
}
exports.ProfileNameValidationEditTypeFromJSON = ProfileNameValidationEditTypeFromJSON;
function ProfileNameValidationEditTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'newProfileName': !(0, runtime_1.exists)(json, 'newProfileName') ? undefined : (0, ProfileNameValidationType_1.ProfileNameValidationTypeFromJSON)(json['newProfileName']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : (0, ProfileNameValidationTypeType_1.ProfileNameValidationTypeTypeFromJSON)(json['type']),
    };
}
exports.ProfileNameValidationEditTypeFromJSONTyped = ProfileNameValidationEditTypeFromJSONTyped;
function ProfileNameValidationEditTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'newProfileName': (0, ProfileNameValidationType_1.ProfileNameValidationTypeToJSON)(value.newProfileName),
        'type': (0, ProfileNameValidationTypeType_1.ProfileNameValidationTypeTypeToJSON)(value.type),
    };
}
exports.ProfileNameValidationEditTypeToJSON = ProfileNameValidationEditTypeToJSON;
