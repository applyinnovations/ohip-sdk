"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileLinkTypeToJSON = exports.ProfileLinkTypeFromJSONTyped = exports.ProfileLinkTypeFromJSON = exports.instanceOfProfileLinkType = void 0;
const runtime_1 = require("../runtime");
const ProfileLinkInheritRates_1 = require("./ProfileLinkInheritRates");
/**
 * Check if a given object implements the ProfileLinkType interface.
 */
function instanceOfProfileLinkType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileLinkType = instanceOfProfileLinkType;
function ProfileLinkTypeFromJSON(json) {
    return ProfileLinkTypeFromJSONTyped(json, false);
}
exports.ProfileLinkTypeFromJSON = ProfileLinkTypeFromJSON;
function ProfileLinkTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'fromType': !(0, runtime_1.exists)(json, 'fromType') ? undefined : json['fromType'],
        'toType': !(0, runtime_1.exists)(json, 'toType') ? undefined : json['toType'],
        'fromCode': !(0, runtime_1.exists)(json, 'fromCode') ? undefined : json['fromCode'],
        'toCode': !(0, runtime_1.exists)(json, 'toCode') ? undefined : json['toCode'],
        'fromDescription': !(0, runtime_1.exists)(json, 'fromDescription') ? undefined : json['fromDescription'],
        'toDescription': !(0, runtime_1.exists)(json, 'toDescription') ? undefined : json['toDescription'],
        'defaultProfileLink': !(0, runtime_1.exists)(json, 'defaultProfileLink') ? undefined : json['defaultProfileLink'],
        'globalProfileLink': !(0, runtime_1.exists)(json, 'globalProfileLink') ? undefined : json['globalProfileLink'],
        'inheritRates': !(0, runtime_1.exists)(json, 'inheritRates') ? undefined : (0, ProfileLinkInheritRates_1.ProfileLinkInheritRatesFromJSON)(json['inheritRates']),
        '_protected': !(0, runtime_1.exists)(json, 'protected') ? undefined : json['protected'],
        'hasHierarchy': !(0, runtime_1.exists)(json, 'hasHierarchy') ? undefined : json['hasHierarchy'],
    };
}
exports.ProfileLinkTypeFromJSONTyped = ProfileLinkTypeFromJSONTyped;
function ProfileLinkTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'fromType': value.fromType,
        'toType': value.toType,
        'fromCode': value.fromCode,
        'toCode': value.toCode,
        'fromDescription': value.fromDescription,
        'toDescription': value.toDescription,
        'defaultProfileLink': value.defaultProfileLink,
        'globalProfileLink': value.globalProfileLink,
        'inheritRates': (0, ProfileLinkInheritRates_1.ProfileLinkInheritRatesToJSON)(value.inheritRates),
        'protected': value._protected,
        'hasHierarchy': value.hasHierarchy,
    };
}
exports.ProfileLinkTypeToJSON = ProfileLinkTypeToJSON;
