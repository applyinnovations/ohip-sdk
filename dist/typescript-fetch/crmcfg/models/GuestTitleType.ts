/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information representation of Guest Title.
 * @export
 * @interface GuestTitleType
 */
export interface GuestTitleType {
    /**
     * Code of the Guest Title.
     * @type {string}
     * @memberof GuestTitleType
     */
    code?: string;
    /**
     * Description of the Guest Title.
     * @type {string}
     * @memberof GuestTitleType
     */
    description?: string;
    /**
     * Guest Title record sequence number.
     * @type {number}
     * @memberof GuestTitleType
     */
    displayOrder?: number;
    /**
     * Business Title for advanced title configuration.
     * @type {string}
     * @memberof GuestTitleType
     */
    greeting?: string;
    /**
     * Language code of the Guest Title.
     * @type {string}
     * @memberof GuestTitleType
     */
    languageCode?: string;
    /**
     * Description of the Guest Title.
     * @type {string}
     * @memberof GuestTitleType
     */
    newLanguageCode?: string;
    /**
     * Description of the Guest Title.
     * @type {number}
     * @memberof GuestTitleType
     */
    newTitleType?: number;
    /**
     * Title Type for advanced title configuration.
     * @type {number}
     * @memberof GuestTitleType
     */
    titleType?: number;
}

/**
 * Check if a given object implements the GuestTitleType interface.
 */
export function instanceOfGuestTitleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GuestTitleTypeFromJSON(json: any): GuestTitleType {
    return GuestTitleTypeFromJSONTyped(json, false);
}

export function GuestTitleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestTitleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displayOrder': !exists(json, 'displayOrder') ? undefined : json['displayOrder'],
        'greeting': !exists(json, 'greeting') ? undefined : json['greeting'],
        'languageCode': !exists(json, 'languageCode') ? undefined : json['languageCode'],
        'newLanguageCode': !exists(json, 'newLanguageCode') ? undefined : json['newLanguageCode'],
        'newTitleType': !exists(json, 'newTitleType') ? undefined : json['newTitleType'],
        'titleType': !exists(json, 'titleType') ? undefined : json['titleType'],
    };
}

export function GuestTitleTypeToJSON(value?: GuestTitleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'displayOrder': value.displayOrder,
        'greeting': value.greeting,
        'languageCode': value.languageCode,
        'newLanguageCode': value.newLanguageCode,
        'newTitleType': value.newTitleType,
        'titleType': value.titleType,
    };
}

