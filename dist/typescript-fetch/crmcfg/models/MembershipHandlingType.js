"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipHandlingTypeToJSON = exports.MembershipHandlingTypeFromJSONTyped = exports.MembershipHandlingTypeFromJSON = exports.instanceOfMembershipHandlingType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the MembershipHandlingType interface.
 */
function instanceOfMembershipHandlingType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipHandlingType = instanceOfMembershipHandlingType;
function MembershipHandlingTypeFromJSON(json) {
    return MembershipHandlingTypeFromJSONTyped(json, false);
}
exports.MembershipHandlingTypeFromJSON = MembershipHandlingTypeFromJSON;
function MembershipHandlingTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'allowCardNumberOverride': !(0, runtime_1.exists)(json, 'allowCardNumberOverride') ? undefined : json['allowCardNumberOverride'],
        'alternateNameProtected': !(0, runtime_1.exists)(json, 'alternateNameProtected') ? undefined : json['alternateNameProtected'],
        'autoGenerateReferenceNo': !(0, runtime_1.exists)(json, 'autoGenerateReferenceNo') ? undefined : json['autoGenerateReferenceNo'],
        'autoPopulateNumberFromName': !(0, runtime_1.exists)(json, 'autoPopulateNumberFromName') ? undefined : json['autoPopulateNumberFromName'],
        'defaultMembershipStatus': !(0, runtime_1.exists)(json, 'defaultMembershipStatus') ? undefined : json['defaultMembershipStatus'],
        'enrollmentCodeRequired': !(0, runtime_1.exists)(json, 'enrollmentCodeRequired') ? undefined : json['enrollmentCodeRequired'],
        'externalDatabase': !(0, runtime_1.exists)(json, 'externalDatabase') ? undefined : json['externalDatabase'],
        'fulfillment': !(0, runtime_1.exists)(json, 'fulfillment') ? undefined : json['fulfillment'],
        'levelRequired': !(0, runtime_1.exists)(json, 'levelRequired') ? undefined : json['levelRequired'],
        'moveMemPromotions': !(0, runtime_1.exists)(json, 'moveMemPromotions') ? undefined : json['moveMemPromotions'],
        'nameOnCardFromAltName': !(0, runtime_1.exists)(json, 'nameOnCardFromAltName') ? undefined : json['nameOnCardFromAltName'],
        'nameProtected': !(0, runtime_1.exists)(json, 'nameProtected') ? undefined : json['nameProtected'],
        'saveCardNumberHistory': !(0, runtime_1.exists)(json, 'saveCardNumberHistory') ? undefined : json['saveCardNumberHistory'],
        'statementUDFSet': !(0, runtime_1.exists)(json, 'statementUDFSet') ? undefined : json['statementUDFSet'],
    };
}
exports.MembershipHandlingTypeFromJSONTyped = MembershipHandlingTypeFromJSONTyped;
function MembershipHandlingTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'allowCardNumberOverride': value.allowCardNumberOverride,
        'alternateNameProtected': value.alternateNameProtected,
        'autoGenerateReferenceNo': value.autoGenerateReferenceNo,
        'autoPopulateNumberFromName': value.autoPopulateNumberFromName,
        'defaultMembershipStatus': value.defaultMembershipStatus,
        'enrollmentCodeRequired': value.enrollmentCodeRequired,
        'externalDatabase': value.externalDatabase,
        'fulfillment': value.fulfillment,
        'levelRequired': value.levelRequired,
        'moveMemPromotions': value.moveMemPromotions,
        'nameOnCardFromAltName': value.nameOnCardFromAltName,
        'nameProtected': value.nameProtected,
        'saveCardNumberHistory': value.saveCardNumberHistory,
        'statementUDFSet': value.statementUDFSet,
    };
}
exports.MembershipHandlingTypeToJSON = MembershipHandlingTypeToJSON;
