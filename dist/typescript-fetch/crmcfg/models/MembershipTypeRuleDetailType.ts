/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipTypeRuleConditionsType } from './MembershipTypeRuleConditionsType';
import {
    MembershipTypeRuleConditionsTypeFromJSON,
    MembershipTypeRuleConditionsTypeFromJSONTyped,
    MembershipTypeRuleConditionsTypeToJSON,
} from './MembershipTypeRuleConditionsType';
import type { MembershipTypeRuleDefinitionType } from './MembershipTypeRuleDefinitionType';
import {
    MembershipTypeRuleDefinitionTypeFromJSON,
    MembershipTypeRuleDefinitionTypeFromJSONTyped,
    MembershipTypeRuleDefinitionTypeToJSON,
} from './MembershipTypeRuleDefinitionType';
import type { MembershipTypeRulePointsDefinitionType } from './MembershipTypeRulePointsDefinitionType';
import {
    MembershipTypeRulePointsDefinitionTypeFromJSON,
    MembershipTypeRulePointsDefinitionTypeFromJSONTyped,
    MembershipTypeRulePointsDefinitionTypeToJSON,
} from './MembershipTypeRulePointsDefinitionType';
import type { MembershipTypeRulePrimaryDetailsType } from './MembershipTypeRulePrimaryDetailsType';
import {
    MembershipTypeRulePrimaryDetailsTypeFromJSON,
    MembershipTypeRulePrimaryDetailsTypeFromJSONTyped,
    MembershipTypeRulePrimaryDetailsTypeToJSON,
} from './MembershipTypeRulePrimaryDetailsType';

/**
 * Membership type Rule details.
 * @export
 * @interface MembershipTypeRuleDetailType
 */
export interface MembershipTypeRuleDetailType {
    /**
     * 
     * @type {MembershipTypeRuleConditionsType}
     * @memberof MembershipTypeRuleDetailType
     */
    ruleConditions?: MembershipTypeRuleConditionsType;
    /**
     * 
     * @type {MembershipTypeRuleDefinitionType}
     * @memberof MembershipTypeRuleDetailType
     */
    ruleDefinition?: MembershipTypeRuleDefinitionType;
    /**
     * 
     * @type {MembershipTypeRulePointsDefinitionType}
     * @memberof MembershipTypeRuleDetailType
     */
    rulePointsDefinition?: MembershipTypeRulePointsDefinitionType;
    /**
     * 
     * @type {MembershipTypeRulePrimaryDetailsType}
     * @memberof MembershipTypeRuleDetailType
     */
    rulePrimaryDetails?: MembershipTypeRulePrimaryDetailsType;
}

/**
 * Check if a given object implements the MembershipTypeRuleDetailType interface.
 */
export function instanceOfMembershipTypeRuleDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipTypeRuleDetailTypeFromJSON(json: any): MembershipTypeRuleDetailType {
    return MembershipTypeRuleDetailTypeFromJSONTyped(json, false);
}

export function MembershipTypeRuleDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipTypeRuleDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ruleConditions': !exists(json, 'ruleConditions') ? undefined : MembershipTypeRuleConditionsTypeFromJSON(json['ruleConditions']),
        'ruleDefinition': !exists(json, 'ruleDefinition') ? undefined : MembershipTypeRuleDefinitionTypeFromJSON(json['ruleDefinition']),
        'rulePointsDefinition': !exists(json, 'rulePointsDefinition') ? undefined : MembershipTypeRulePointsDefinitionTypeFromJSON(json['rulePointsDefinition']),
        'rulePrimaryDetails': !exists(json, 'rulePrimaryDetails') ? undefined : MembershipTypeRulePrimaryDetailsTypeFromJSON(json['rulePrimaryDetails']),
    };
}

export function MembershipTypeRuleDetailTypeToJSON(value?: MembershipTypeRuleDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ruleConditions': MembershipTypeRuleConditionsTypeToJSON(value.ruleConditions),
        'ruleDefinition': MembershipTypeRuleDefinitionTypeToJSON(value.ruleDefinition),
        'rulePointsDefinition': MembershipTypeRulePointsDefinitionTypeToJSON(value.rulePointsDefinition),
        'rulePrimaryDetails': MembershipTypeRulePrimaryDetailsTypeToJSON(value.rulePrimaryDetails),
    };
}

