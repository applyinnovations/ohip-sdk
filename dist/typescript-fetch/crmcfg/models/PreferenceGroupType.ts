/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Preference group identification details.
 * @export
 * @interface PreferenceGroupType
 */
export interface PreferenceGroupType {
    /**
     * This is a placeholder element for future use. Functionality may not be available for the current implementation.
     * @type {boolean}
     * @memberof PreferenceGroupType
     */
    allowSubTypes?: boolean;
    /**
     * Code identifying the preference group.
     * @type {string}
     * @memberof PreferenceGroupType
     */
    code?: string;
    /**
     * Description of the preference group.
     * @type {string}
     * @memberof PreferenceGroupType
     */
    description?: string;
    /**
     * When this mandatory reservation is true then user cannot set or change reservation preference flag and also this is a non editable field. SPECIALS AND ROOM FEATURES preference groups will have true for this field
     * @type {boolean}
     * @memberof PreferenceGroupType
     */
    mandatoryReservation?: boolean;
    /**
     * Maximum number of preferences which can be created in this preference group.
     * @type {number}
     * @memberof PreferenceGroupType
     */
    maxQuantity?: number;
    /**
     * Indicates if the preference group can be used in reservations.
     * @type {boolean}
     * @memberof PreferenceGroupType
     */
    reservationPreference?: boolean;
    /**
     * Display sequence for the preference group.
     * @type {number}
     * @memberof PreferenceGroupType
     */
    sequence?: number;
}

/**
 * Check if a given object implements the PreferenceGroupType interface.
 */
export function instanceOfPreferenceGroupType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PreferenceGroupTypeFromJSON(json: any): PreferenceGroupType {
    return PreferenceGroupTypeFromJSONTyped(json, false);
}

export function PreferenceGroupTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferenceGroupType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allowSubTypes': !exists(json, 'allowSubTypes') ? undefined : json['allowSubTypes'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'mandatoryReservation': !exists(json, 'mandatoryReservation') ? undefined : json['mandatoryReservation'],
        'maxQuantity': !exists(json, 'maxQuantity') ? undefined : json['maxQuantity'],
        'reservationPreference': !exists(json, 'reservationPreference') ? undefined : json['reservationPreference'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
    };
}

export function PreferenceGroupTypeToJSON(value?: PreferenceGroupType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allowSubTypes': value.allowSubTypes,
        'code': value.code,
        'description': value.description,
        'mandatoryReservation': value.mandatoryReservation,
        'maxQuantity': value.maxQuantity,
        'reservationPreference': value.reservationPreference,
        'sequence': value.sequence,
    };
}

