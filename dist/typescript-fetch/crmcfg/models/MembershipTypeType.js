"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipTypeTypeToJSON = exports.MembershipTypeTypeFromJSONTyped = exports.MembershipTypeTypeFromJSON = exports.instanceOfMembershipTypeType = void 0;
const runtime_1 = require("../runtime");
const AttachMembershipToReservationRuleType_1 = require("./AttachMembershipToReservationRuleType");
const AutoGenerateCardNumberType_1 = require("./AutoGenerateCardNumberType");
const AwardPointsType_1 = require("./AwardPointsType");
const CardNumberDetailsType_1 = require("./CardNumberDetailsType");
const EnrollmentMatchRuleType_1 = require("./EnrollmentMatchRuleType");
const MembershipActionType_1 = require("./MembershipActionType");
const MembershipAwardGenerationMethodType_1 = require("./MembershipAwardGenerationMethodType");
const MembershipHandlingType_1 = require("./MembershipHandlingType");
const MembershipLevelsType_1 = require("./MembershipLevelsType");
const MembershipTypeAdditionalInfoType_1 = require("./MembershipTypeAdditionalInfoType");
const TierPointsType_1 = require("./TierPointsType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the MembershipTypeType interface.
 */
function instanceOfMembershipTypeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipTypeType = instanceOfMembershipTypeType;
function MembershipTypeTypeFromJSON(json) {
    return MembershipTypeTypeFromJSONTyped(json, false);
}
exports.MembershipTypeTypeFromJSON = MembershipTypeTypeFromJSON;
function MembershipTypeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'additionalDetails': !(0, runtime_1.exists)(json, 'additionalDetails') ? undefined : (0, MembershipTypeAdditionalInfoType_1.MembershipTypeAdditionalInfoTypeFromJSON)(json['additionalDetails']),
        'allowShares': !(0, runtime_1.exists)(json, 'allowShares') ? undefined : json['allowShares'],
        'attachMembershipToReservationRule': !(0, runtime_1.exists)(json, 'attachMembershipToReservationRule') ? undefined : (json['attachMembershipToReservationRule'].map(AttachMembershipToReservationRuleType_1.AttachMembershipToReservationRuleTypeFromJSON)),
        'awardGenerationMethod': !(0, runtime_1.exists)(json, 'awardGenerationMethod') ? undefined : (0, MembershipAwardGenerationMethodType_1.MembershipAwardGenerationMethodTypeFromJSON)(json['awardGenerationMethod']),
        'awardPointsDetail': !(0, runtime_1.exists)(json, 'awardPointsDetail') ? undefined : (0, AwardPointsType_1.AwardPointsTypeFromJSON)(json['awardPointsDetail']),
        'bookerProgramYn': !(0, runtime_1.exists)(json, 'bookerProgramYn') ? undefined : json['bookerProgramYn'],
        'cardDetails': !(0, runtime_1.exists)(json, 'cardDetails') ? undefined : (0, CardNumberDetailsType_1.CardNumberDetailsTypeFromJSON)(json['cardDetails']),
        'cardNumberAutoGenerateDetails': !(0, runtime_1.exists)(json, 'cardNumberAutoGenerateDetails') ? undefined : (0, AutoGenerateCardNumberType_1.AutoGenerateCardNumberTypeFromJSON)(json['cardNumberAutoGenerateDetails']),
        'centralSetup': !(0, runtime_1.exists)(json, 'centralSetup') ? undefined : json['centralSetup'],
        'companyYn': !(0, runtime_1.exists)(json, 'companyYn') ? undefined : json['companyYn'],
        'contactYn': !(0, runtime_1.exists)(json, 'contactYn') ? undefined : json['contactYn'],
        'currency': !(0, runtime_1.exists)(json, 'currency') ? undefined : json['currency'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'enrollmentAddressAllowed': !(0, runtime_1.exists)(json, 'enrollmentAddressAllowed') ? undefined : json['enrollmentAddressAllowed'],
        'enrollmentBirthdateAllowed': !(0, runtime_1.exists)(json, 'enrollmentBirthdateAllowed') ? undefined : json['enrollmentBirthdateAllowed'],
        'enrollmentCodeRequiredYn': !(0, runtime_1.exists)(json, 'enrollmentCodeRequiredYn') ? undefined : json['enrollmentCodeRequiredYn'],
        'enrollmentCommunicationAllowed': !(0, runtime_1.exists)(json, 'enrollmentCommunicationAllowed') ? undefined : json['enrollmentCommunicationAllowed'],
        'enrollmentFeeAllowed': !(0, runtime_1.exists)(json, 'enrollmentFeeAllowed') ? undefined : json['enrollmentFeeAllowed'],
        'enrollmentMatchRule': !(0, runtime_1.exists)(json, 'enrollmentMatchRule') ? undefined : (0, EnrollmentMatchRuleType_1.EnrollmentMatchRuleTypeFromJSON)(json['enrollmentMatchRule']),
        'exchangeType': !(0, runtime_1.exists)(json, 'exchangeType') ? undefined : json['exchangeType'],
        'excludeProfileFromPurge': !(0, runtime_1.exists)(json, 'excludeProfileFromPurge') ? undefined : json['excludeProfileFromPurge'],
        'externalDatabase': !(0, runtime_1.exists)(json, 'externalDatabase') ? undefined : json['externalDatabase'],
        'externallyControlled': !(0, runtime_1.exists)(json, 'externallyControlled') ? undefined : json['externallyControlled'],
        'folioMessageFBAPosting': !(0, runtime_1.exists)(json, 'folioMessageFBAPosting') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['folioMessageFBAPosting']),
        'groupYn': !(0, runtime_1.exists)(json, 'groupYn') ? undefined : json['groupYn'],
        'handlingDetails': !(0, runtime_1.exists)(json, 'handlingDetails') ? undefined : (0, MembershipHandlingType_1.MembershipHandlingTypeFromJSON)(json['handlingDetails']),
        'hasPointCalculationRule': !(0, runtime_1.exists)(json, 'hasPointCalculationRule') ? undefined : json['hasPointCalculationRule'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'isLoyaltyProgram': !(0, runtime_1.exists)(json, 'isLoyaltyProgram') ? undefined : json['isLoyaltyProgram'],
        'memberFolioMessage': !(0, runtime_1.exists)(json, 'memberFolioMessage') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['memberFolioMessage']),
        'membershipAction': !(0, runtime_1.exists)(json, 'membershipAction') ? undefined : (0, MembershipActionType_1.MembershipActionTypeFromJSON)(json['membershipAction']),
        'membershipClass': !(0, runtime_1.exists)(json, 'membershipClass') ? undefined : json['membershipClass'],
        'membershipLevels': !(0, runtime_1.exists)(json, 'membershipLevels') ? undefined : (0, MembershipLevelsType_1.MembershipLevelsTypeFromJSON)(json['membershipLevels']),
        'membershipType': !(0, runtime_1.exists)(json, 'membershipType') ? undefined : json['membershipType'],
        'multiplier': !(0, runtime_1.exists)(json, 'multiplier') ? undefined : json['multiplier'],
        'nonMemberFolioMessage': !(0, runtime_1.exists)(json, 'nonMemberFolioMessage') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['nonMemberFolioMessage']),
        'pointCost': !(0, runtime_1.exists)(json, 'pointCost') ? undefined : json['pointCost'],
        'pointsLabel': !(0, runtime_1.exists)(json, 'pointsLabel') ? undefined : json['pointsLabel'],
        'primaryMembership': !(0, runtime_1.exists)(json, 'primaryMembership') ? undefined : json['primaryMembership'],
        'printFolioMsgOnConfirmation': !(0, runtime_1.exists)(json, 'printFolioMsgOnConfirmation') ? undefined : json['printFolioMsgOnConfirmation'],
        'ranking': !(0, runtime_1.exists)(json, 'ranking') ? undefined : json['ranking'],
        'reIssueNewCard': !(0, runtime_1.exists)(json, 'reIssueNewCard') ? undefined : json['reIssueNewCard'],
        'sendCheckoutToInterface': !(0, runtime_1.exists)(json, 'sendCheckoutToInterface') ? undefined : json['sendCheckoutToInterface'],
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'sourceYn': !(0, runtime_1.exists)(json, 'sourceYn') ? undefined : json['sourceYn'],
        'tierPointsDetails': !(0, runtime_1.exists)(json, 'tierPointsDetails') ? undefined : (0, TierPointsType_1.TierPointsTypeFromJSON)(json['tierPointsDetails']),
        'travelAgentYn': !(0, runtime_1.exists)(json, 'travelAgentYn') ? undefined : json['travelAgentYn'],
    };
}
exports.MembershipTypeTypeFromJSONTyped = MembershipTypeTypeFromJSONTyped;
function MembershipTypeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'additionalDetails': (0, MembershipTypeAdditionalInfoType_1.MembershipTypeAdditionalInfoTypeToJSON)(value.additionalDetails),
        'allowShares': value.allowShares,
        'attachMembershipToReservationRule': value.attachMembershipToReservationRule === undefined ? undefined : (value.attachMembershipToReservationRule.map(AttachMembershipToReservationRuleType_1.AttachMembershipToReservationRuleTypeToJSON)),
        'awardGenerationMethod': (0, MembershipAwardGenerationMethodType_1.MembershipAwardGenerationMethodTypeToJSON)(value.awardGenerationMethod),
        'awardPointsDetail': (0, AwardPointsType_1.AwardPointsTypeToJSON)(value.awardPointsDetail),
        'bookerProgramYn': value.bookerProgramYn,
        'cardDetails': (0, CardNumberDetailsType_1.CardNumberDetailsTypeToJSON)(value.cardDetails),
        'cardNumberAutoGenerateDetails': (0, AutoGenerateCardNumberType_1.AutoGenerateCardNumberTypeToJSON)(value.cardNumberAutoGenerateDetails),
        'centralSetup': value.centralSetup,
        'companyYn': value.companyYn,
        'contactYn': value.contactYn,
        'currency': value.currency,
        'description': value.description,
        'enrollmentAddressAllowed': value.enrollmentAddressAllowed,
        'enrollmentBirthdateAllowed': value.enrollmentBirthdateAllowed,
        'enrollmentCodeRequiredYn': value.enrollmentCodeRequiredYn,
        'enrollmentCommunicationAllowed': value.enrollmentCommunicationAllowed,
        'enrollmentFeeAllowed': value.enrollmentFeeAllowed,
        'enrollmentMatchRule': (0, EnrollmentMatchRuleType_1.EnrollmentMatchRuleTypeToJSON)(value.enrollmentMatchRule),
        'exchangeType': value.exchangeType,
        'excludeProfileFromPurge': value.excludeProfileFromPurge,
        'externalDatabase': value.externalDatabase,
        'externallyControlled': value.externallyControlled,
        'folioMessageFBAPosting': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.folioMessageFBAPosting),
        'groupYn': value.groupYn,
        'handlingDetails': (0, MembershipHandlingType_1.MembershipHandlingTypeToJSON)(value.handlingDetails),
        'hasPointCalculationRule': value.hasPointCalculationRule,
        'inactive': value.inactive,
        'isLoyaltyProgram': value.isLoyaltyProgram,
        'memberFolioMessage': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.memberFolioMessage),
        'membershipAction': (0, MembershipActionType_1.MembershipActionTypeToJSON)(value.membershipAction),
        'membershipClass': value.membershipClass,
        'membershipLevels': (0, MembershipLevelsType_1.MembershipLevelsTypeToJSON)(value.membershipLevels),
        'membershipType': value.membershipType,
        'multiplier': value.multiplier,
        'nonMemberFolioMessage': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.nonMemberFolioMessage),
        'pointCost': value.pointCost,
        'pointsLabel': value.pointsLabel,
        'primaryMembership': value.primaryMembership,
        'printFolioMsgOnConfirmation': value.printFolioMsgOnConfirmation,
        'ranking': value.ranking,
        'reIssueNewCard': value.reIssueNewCard,
        'sendCheckoutToInterface': value.sendCheckoutToInterface,
        'sequence': value.sequence,
        'sourceYn': value.sourceYn,
        'tierPointsDetails': (0, TierPointsType_1.TierPointsTypeToJSON)(value.tierPointsDetails),
        'travelAgentYn': value.travelAgentYn,
    };
}
exports.MembershipTypeTypeToJSON = MembershipTypeTypeToJSON;
