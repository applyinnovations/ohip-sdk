"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipAwardFinancialTransactionInfoTypeToJSON = exports.MembershipAwardFinancialTransactionInfoTypeFromJSONTyped = exports.MembershipAwardFinancialTransactionInfoTypeFromJSON = exports.instanceOfMembershipAwardFinancialTransactionInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the MembershipAwardFinancialTransactionInfoType interface.
 */
function instanceOfMembershipAwardFinancialTransactionInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipAwardFinancialTransactionInfoType = instanceOfMembershipAwardFinancialTransactionInfoType;
function MembershipAwardFinancialTransactionInfoTypeFromJSON(json) {
    return MembershipAwardFinancialTransactionInfoTypeFromJSONTyped(json, false);
}
exports.MembershipAwardFinancialTransactionInfoTypeFromJSON = MembershipAwardFinancialTransactionInfoTypeFromJSON;
function MembershipAwardFinancialTransactionInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pointsRequired': !(0, runtime_1.exists)(json, 'pointsRequired') ? undefined : json['pointsRequired'],
        'awardValue': !(0, runtime_1.exists)(json, 'awardValue') ? undefined : json['awardValue'],
        'messageLine1': !(0, runtime_1.exists)(json, 'messageLine1') ? undefined : json['messageLine1'],
        'messageLine2': !(0, runtime_1.exists)(json, 'messageLine2') ? undefined : json['messageLine2'],
        'messageLine3': !(0, runtime_1.exists)(json, 'messageLine3') ? undefined : json['messageLine3'],
        'messageLine4': !(0, runtime_1.exists)(json, 'messageLine4') ? undefined : json['messageLine4'],
        'displaySet': !(0, runtime_1.exists)(json, 'displaySet') ? undefined : json['displaySet'],
        'exchangeRate': !(0, runtime_1.exists)(json, 'exchangeRate') ? undefined : json['exchangeRate'],
        'maxPercentAllowed': !(0, runtime_1.exists)(json, 'maxPercentAllowed') ? undefined : json['maxPercentAllowed'],
        'ignoreFinancialTransaction': !(0, runtime_1.exists)(json, 'ignoreFinancialTransaction') ? undefined : json['ignoreFinancialTransaction'],
    };
}
exports.MembershipAwardFinancialTransactionInfoTypeFromJSONTyped = MembershipAwardFinancialTransactionInfoTypeFromJSONTyped;
function MembershipAwardFinancialTransactionInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'pointsRequired': value.pointsRequired,
        'awardValue': value.awardValue,
        'messageLine1': value.messageLine1,
        'messageLine2': value.messageLine2,
        'messageLine3': value.messageLine3,
        'messageLine4': value.messageLine4,
        'displaySet': value.displaySet,
        'exchangeRate': value.exchangeRate,
        'maxPercentAllowed': value.maxPercentAllowed,
        'ignoreFinancialTransaction': value.ignoreFinancialTransaction,
    };
}
exports.MembershipAwardFinancialTransactionInfoTypeToJSON = MembershipAwardFinancialTransactionInfoTypeToJSON;
