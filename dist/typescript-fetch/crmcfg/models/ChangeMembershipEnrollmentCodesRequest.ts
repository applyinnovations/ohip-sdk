/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { MembershipEnrollmentCodeType } from './MembershipEnrollmentCodeType';
import {
    MembershipEnrollmentCodeTypeFromJSON,
    MembershipEnrollmentCodeTypeFromJSONTyped,
    MembershipEnrollmentCodeTypeToJSON,
} from './MembershipEnrollmentCodeType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface ChangeMembershipEnrollmentCodesRequest
 */
export interface ChangeMembershipEnrollmentCodesRequest {
    /**
     * List of Membership Enrollment Codes.
     * @type {Array<MembershipEnrollmentCodeType>}
     * @memberof ChangeMembershipEnrollmentCodesRequest
     */
    membershipEnrollmentCodes?: Array<MembershipEnrollmentCodeType>;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof ChangeMembershipEnrollmentCodesRequest
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof ChangeMembershipEnrollmentCodesRequest
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the ChangeMembershipEnrollmentCodesRequest interface.
 */
export function instanceOfChangeMembershipEnrollmentCodesRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeMembershipEnrollmentCodesRequestFromJSON(json: any): ChangeMembershipEnrollmentCodesRequest {
    return ChangeMembershipEnrollmentCodesRequestFromJSONTyped(json, false);
}

export function ChangeMembershipEnrollmentCodesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeMembershipEnrollmentCodesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'membershipEnrollmentCodes': !exists(json, 'membershipEnrollmentCodes') ? undefined : ((json['membershipEnrollmentCodes'] as Array<any>).map(MembershipEnrollmentCodeTypeFromJSON)),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function ChangeMembershipEnrollmentCodesRequestToJSON(value?: ChangeMembershipEnrollmentCodesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'membershipEnrollmentCodes': value.membershipEnrollmentCodes === undefined ? undefined : ((value.membershipEnrollmentCodes as Array<any>).map(MembershipEnrollmentCodeTypeToJSON)),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

