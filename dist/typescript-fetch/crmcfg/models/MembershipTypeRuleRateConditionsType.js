"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipTypeRuleRateConditionsTypeToJSON = exports.MembershipTypeRuleRateConditionsTypeFromJSONTyped = exports.MembershipTypeRuleRateConditionsTypeFromJSON = exports.instanceOfMembershipTypeRuleRateConditionsType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the MembershipTypeRuleRateConditionsType interface.
 */
function instanceOfMembershipTypeRuleRateConditionsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipTypeRuleRateConditionsType = instanceOfMembershipTypeRuleRateConditionsType;
function MembershipTypeRuleRateConditionsTypeFromJSON(json) {
    return MembershipTypeRuleRateConditionsTypeFromJSONTyped(json, false);
}
exports.MembershipTypeRuleRateConditionsTypeFromJSON = MembershipTypeRuleRateConditionsTypeFromJSON;
function MembershipTypeRuleRateConditionsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'rateCode': !(0, runtime_1.exists)(json, 'rateCode') ? undefined : json['rateCode'],
        'rateGroup': !(0, runtime_1.exists)(json, 'rateGroup') ? undefined : json['rateGroup'],
        'revenueGroup': !(0, runtime_1.exists)(json, 'revenueGroup') ? undefined : json['revenueGroup'],
        'averageRateAmount': !(0, runtime_1.exists)(json, 'averageRateAmount') ? undefined : json['averageRateAmount'],
        'minimumRevenue': !(0, runtime_1.exists)(json, 'minimumRevenue') ? undefined : json['minimumRevenue'],
        'transactionGroup': !(0, runtime_1.exists)(json, 'transactionGroup') ? undefined : json['transactionGroup'],
        'qualifyingRates': !(0, runtime_1.exists)(json, 'qualifyingRates') ? undefined : json['qualifyingRates'],
        'excludeRateGroup': !(0, runtime_1.exists)(json, 'excludeRateGroup') ? undefined : json['excludeRateGroup'],
        'excludeRevenueGroup': !(0, runtime_1.exists)(json, 'excludeRevenueGroup') ? undefined : json['excludeRevenueGroup'],
        'includeTransactionGroup': !(0, runtime_1.exists)(json, 'includeTransactionGroup') ? undefined : json['includeTransactionGroup'],
        'allMembershipRates': !(0, runtime_1.exists)(json, 'allMembershipRates') ? undefined : json['allMembershipRates'],
        'allMembershipTrx': !(0, runtime_1.exists)(json, 'allMembershipTrx') ? undefined : json['allMembershipTrx'],
    };
}
exports.MembershipTypeRuleRateConditionsTypeFromJSONTyped = MembershipTypeRuleRateConditionsTypeFromJSONTyped;
function MembershipTypeRuleRateConditionsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'rateCode': value.rateCode,
        'rateGroup': value.rateGroup,
        'revenueGroup': value.revenueGroup,
        'averageRateAmount': value.averageRateAmount,
        'minimumRevenue': value.minimumRevenue,
        'transactionGroup': value.transactionGroup,
        'qualifyingRates': value.qualifyingRates,
        'excludeRateGroup': value.excludeRateGroup,
        'excludeRevenueGroup': value.excludeRevenueGroup,
        'includeTransactionGroup': value.includeTransactionGroup,
        'allMembershipRates': value.allMembershipRates,
        'allMembershipTrx': value.allMembershipTrx,
    };
}
exports.MembershipTypeRuleRateConditionsTypeToJSON = MembershipTypeRuleRateConditionsTypeToJSON;
