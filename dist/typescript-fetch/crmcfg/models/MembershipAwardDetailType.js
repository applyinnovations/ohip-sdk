"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipAwardDetailTypeToJSON = exports.MembershipAwardDetailTypeFromJSONTyped = exports.MembershipAwardDetailTypeFromJSON = exports.instanceOfMembershipAwardDetailType = void 0;
const runtime_1 = require("../runtime");
const DateRangeType_1 = require("./DateRangeType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the MembershipAwardDetailType interface.
 */
function instanceOfMembershipAwardDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipAwardDetailType = instanceOfMembershipAwardDetailType;
function MembershipAwardDetailTypeFromJSON(json) {
    return MembershipAwardDetailTypeFromJSONTyped(json, false);
}
exports.MembershipAwardDetailTypeFromJSON = MembershipAwardDetailTypeFromJSON;
function MembershipAwardDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'awardCode': !(0, runtime_1.exists)(json, 'awardCode') ? undefined : json['awardCode'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'dateRange': !(0, runtime_1.exists)(json, 'dateRange') ? undefined : (0, DateRangeType_1.DateRangeTypeFromJSON)(json['dateRange']),
        'fromRoom': !(0, runtime_1.exists)(json, 'fromRoom') ? undefined : json['fromRoom'],
        'fromRoomGroup': !(0, runtime_1.exists)(json, 'fromRoomGroup') ? undefined : json['fromRoomGroup'],
        'groupUpgrade': !(0, runtime_1.exists)(json, 'groupUpgrade') ? undefined : json['groupUpgrade'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'membershipType': !(0, runtime_1.exists)(json, 'membershipType') ? undefined : json['membershipType'],
        'pointsRequired': !(0, runtime_1.exists)(json, 'pointsRequired') ? undefined : json['pointsRequired'],
        'toRoom': !(0, runtime_1.exists)(json, 'toRoom') ? undefined : json['toRoom'],
        'toRoomGroup': !(0, runtime_1.exists)(json, 'toRoomGroup') ? undefined : json['toRoomGroup'],
        'upgradeId': !(0, runtime_1.exists)(json, 'upgradeId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['upgradeId']),
    };
}
exports.MembershipAwardDetailTypeFromJSONTyped = MembershipAwardDetailTypeFromJSONTyped;
function MembershipAwardDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'awardCode': value.awardCode,
        'code': value.code,
        'dateRange': (0, DateRangeType_1.DateRangeTypeToJSON)(value.dateRange),
        'fromRoom': value.fromRoom,
        'fromRoomGroup': value.fromRoomGroup,
        'groupUpgrade': value.groupUpgrade,
        'hotelId': value.hotelId,
        'inactive': value.inactive,
        'membershipType': value.membershipType,
        'pointsRequired': value.pointsRequired,
        'toRoom': value.toRoom,
        'toRoomGroup': value.toRoomGroup,
        'upgradeId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.upgradeId),
    };
}
exports.MembershipAwardDetailTypeToJSON = MembershipAwardDetailTypeToJSON;
