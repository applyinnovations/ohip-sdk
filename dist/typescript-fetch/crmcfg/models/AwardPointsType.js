"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwardPointsTypeToJSON = exports.AwardPointsTypeFromJSONTyped = exports.AwardPointsTypeFromJSON = exports.instanceOfAwardPointsType = void 0;
const runtime_1 = require("../runtime");
const AwardPointsValidityDurationType_1 = require("./AwardPointsValidityDurationType");
const AwardsExceptionCriteriaType_1 = require("./AwardsExceptionCriteriaType");
const CalendarGracePeriodType_1 = require("./CalendarGracePeriodType");
const CalendarPeriodType_1 = require("./CalendarPeriodType");
const NumberOfYearsType_1 = require("./NumberOfYearsType");
/**
 * Check if a given object implements the AwardPointsType interface.
 */
function instanceOfAwardPointsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAwardPointsType = instanceOfAwardPointsType;
function AwardPointsTypeFromJSON(json) {
    return AwardPointsTypeFromJSONTyped(json, false);
}
exports.AwardPointsTypeFromJSON = AwardPointsTypeFromJSON;
function AwardPointsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'nonMemberPoints': !(0, runtime_1.exists)(json, 'nonMemberPoints') ? undefined : json['nonMemberPoints'],
        'delayInDays': !(0, runtime_1.exists)(json, 'delayInDays') ? undefined : json['delayInDays'],
        'yearsToExpire': !(0, runtime_1.exists)(json, 'yearsToExpire') ? undefined : json['yearsToExpire'],
        'calendarPeriod': !(0, runtime_1.exists)(json, 'calendarPeriod') ? undefined : (0, CalendarPeriodType_1.CalendarPeriodTypeFromJSON)(json['calendarPeriod']),
        'expiryPeriod': !(0, runtime_1.exists)(json, 'expiryPeriod') ? undefined : (0, NumberOfYearsType_1.NumberOfYearsTypeFromJSON)(json['expiryPeriod']),
        'expiryMonth': !(0, runtime_1.exists)(json, 'expiryMonth') ? undefined : json['expiryMonth'],
        'monthsToAwardPointsExpiry': !(0, runtime_1.exists)(json, 'monthsToAwardPointsExpiry') ? undefined : json['monthsToAwardPointsExpiry'],
        'awardPointsExpiryDate': !(0, runtime_1.exists)(json, 'awardPointsExpiryDate') ? undefined : (0, AwardPointsValidityDurationType_1.AwardPointsValidityDurationTypeFromJSON)(json['awardPointsExpiryDate']),
        'awardRedeemThreshold': !(0, runtime_1.exists)(json, 'awardRedeemThreshold') ? undefined : json['awardRedeemThreshold'],
        'activityPeriodMonths': !(0, runtime_1.exists)(json, 'activityPeriodMonths') ? undefined : json['activityPeriodMonths'],
        'activityPeriodYears': !(0, runtime_1.exists)(json, 'activityPeriodYears') ? undefined : (0, NumberOfYearsType_1.NumberOfYearsTypeFromJSON)(json['activityPeriodYears']),
        'gracePeriodMonths': !(0, runtime_1.exists)(json, 'gracePeriodMonths') ? undefined : json['gracePeriodMonths'],
        'gracePeriodYear': !(0, runtime_1.exists)(json, 'gracePeriodYear') ? undefined : (0, CalendarGracePeriodType_1.CalendarGracePeriodTypeFromJSON)(json['gracePeriodYear']),
        'requiredOnStayPeriod': !(0, runtime_1.exists)(json, 'requiredOnStayPeriod') ? undefined : json['requiredOnStayPeriod'],
        'exceptionCriteria': !(0, runtime_1.exists)(json, 'exceptionCriteria') ? undefined : (0, AwardsExceptionCriteriaType_1.AwardsExceptionCriteriaTypeFromJSON)(json['exceptionCriteria']),
    };
}
exports.AwardPointsTypeFromJSONTyped = AwardPointsTypeFromJSONTyped;
function AwardPointsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'nonMemberPoints': value.nonMemberPoints,
        'delayInDays': value.delayInDays,
        'yearsToExpire': value.yearsToExpire,
        'calendarPeriod': (0, CalendarPeriodType_1.CalendarPeriodTypeToJSON)(value.calendarPeriod),
        'expiryPeriod': (0, NumberOfYearsType_1.NumberOfYearsTypeToJSON)(value.expiryPeriod),
        'expiryMonth': value.expiryMonth,
        'monthsToAwardPointsExpiry': value.monthsToAwardPointsExpiry,
        'awardPointsExpiryDate': (0, AwardPointsValidityDurationType_1.AwardPointsValidityDurationTypeToJSON)(value.awardPointsExpiryDate),
        'awardRedeemThreshold': value.awardRedeemThreshold,
        'activityPeriodMonths': value.activityPeriodMonths,
        'activityPeriodYears': (0, NumberOfYearsType_1.NumberOfYearsTypeToJSON)(value.activityPeriodYears),
        'gracePeriodMonths': value.gracePeriodMonths,
        'gracePeriodYear': (0, CalendarGracePeriodType_1.CalendarGracePeriodTypeToJSON)(value.gracePeriodYear),
        'requiredOnStayPeriod': value.requiredOnStayPeriod,
        'exceptionCriteria': (0, AwardsExceptionCriteriaType_1.AwardsExceptionCriteriaTypeToJSON)(value.exceptionCriteria),
    };
}
exports.AwardPointsTypeToJSON = AwardPointsTypeToJSON;
