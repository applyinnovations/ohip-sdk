"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipTypeRuleDetailTypeToJSON = exports.MembershipTypeRuleDetailTypeFromJSONTyped = exports.MembershipTypeRuleDetailTypeFromJSON = exports.instanceOfMembershipTypeRuleDetailType = void 0;
const runtime_1 = require("../runtime");
const MembershipTypeRuleConditionsType_1 = require("./MembershipTypeRuleConditionsType");
const MembershipTypeRuleDefinitionType_1 = require("./MembershipTypeRuleDefinitionType");
const MembershipTypeRulePointsDefinitionType_1 = require("./MembershipTypeRulePointsDefinitionType");
const MembershipTypeRulePrimaryDetailsType_1 = require("./MembershipTypeRulePrimaryDetailsType");
/**
 * Check if a given object implements the MembershipTypeRuleDetailType interface.
 */
function instanceOfMembershipTypeRuleDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipTypeRuleDetailType = instanceOfMembershipTypeRuleDetailType;
function MembershipTypeRuleDetailTypeFromJSON(json) {
    return MembershipTypeRuleDetailTypeFromJSONTyped(json, false);
}
exports.MembershipTypeRuleDetailTypeFromJSON = MembershipTypeRuleDetailTypeFromJSON;
function MembershipTypeRuleDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'rulePrimaryDetails': !(0, runtime_1.exists)(json, 'rulePrimaryDetails') ? undefined : (0, MembershipTypeRulePrimaryDetailsType_1.MembershipTypeRulePrimaryDetailsTypeFromJSON)(json['rulePrimaryDetails']),
        'ruleDefinition': !(0, runtime_1.exists)(json, 'ruleDefinition') ? undefined : (0, MembershipTypeRuleDefinitionType_1.MembershipTypeRuleDefinitionTypeFromJSON)(json['ruleDefinition']),
        'rulePointsDefinition': !(0, runtime_1.exists)(json, 'rulePointsDefinition') ? undefined : (0, MembershipTypeRulePointsDefinitionType_1.MembershipTypeRulePointsDefinitionTypeFromJSON)(json['rulePointsDefinition']),
        'ruleConditions': !(0, runtime_1.exists)(json, 'ruleConditions') ? undefined : (0, MembershipTypeRuleConditionsType_1.MembershipTypeRuleConditionsTypeFromJSON)(json['ruleConditions']),
    };
}
exports.MembershipTypeRuleDetailTypeFromJSONTyped = MembershipTypeRuleDetailTypeFromJSONTyped;
function MembershipTypeRuleDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'rulePrimaryDetails': (0, MembershipTypeRulePrimaryDetailsType_1.MembershipTypeRulePrimaryDetailsTypeToJSON)(value.rulePrimaryDetails),
        'ruleDefinition': (0, MembershipTypeRuleDefinitionType_1.MembershipTypeRuleDefinitionTypeToJSON)(value.ruleDefinition),
        'rulePointsDefinition': (0, MembershipTypeRulePointsDefinitionType_1.MembershipTypeRulePointsDefinitionTypeToJSON)(value.rulePointsDefinition),
        'ruleConditions': (0, MembershipTypeRuleConditionsType_1.MembershipTypeRuleConditionsTypeToJSON)(value.ruleConditions),
    };
}
exports.MembershipTypeRuleDetailTypeToJSON = MembershipTypeRuleDetailTypeToJSON;
