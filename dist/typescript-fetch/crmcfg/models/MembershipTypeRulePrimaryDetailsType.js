"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipTypeRulePrimaryDetailsTypeToJSON = exports.MembershipTypeRulePrimaryDetailsTypeFromJSONTyped = exports.MembershipTypeRulePrimaryDetailsTypeFromJSON = exports.instanceOfMembershipTypeRulePrimaryDetailsType = void 0;
const runtime_1 = require("../runtime");
const MembershipTypeRuleBasedOnType_1 = require("./MembershipTypeRuleBasedOnType");
const MembershipTypeRuleIDType_1 = require("./MembershipTypeRuleIDType");
const MembershipTypeRuleTransactionCodeType_1 = require("./MembershipTypeRuleTransactionCodeType");
const RulePointsTypeType_1 = require("./RulePointsTypeType");
/**
 * Check if a given object implements the MembershipTypeRulePrimaryDetailsType interface.
 */
function instanceOfMembershipTypeRulePrimaryDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipTypeRulePrimaryDetailsType = instanceOfMembershipTypeRulePrimaryDetailsType;
function MembershipTypeRulePrimaryDetailsTypeFromJSON(json) {
    return MembershipTypeRulePrimaryDetailsTypeFromJSONTyped(json, false);
}
exports.MembershipTypeRulePrimaryDetailsTypeFromJSON = MembershipTypeRulePrimaryDetailsTypeFromJSON;
function MembershipTypeRulePrimaryDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'membershipTypeRuleId': !(0, runtime_1.exists)(json, 'membershipTypeRuleId') ? undefined : (0, MembershipTypeRuleIDType_1.MembershipTypeRuleIDTypeFromJSON)(json['membershipTypeRuleId']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'ruleBasedOn': !(0, runtime_1.exists)(json, 'ruleBasedOn') ? undefined : (0, MembershipTypeRuleBasedOnType_1.MembershipTypeRuleBasedOnTypeFromJSON)(json['ruleBasedOn']),
        'ruleStartDate': !(0, runtime_1.exists)(json, 'ruleStartDate') ? undefined : json['ruleStartDate'],
        'ruleEndDate': !(0, runtime_1.exists)(json, 'ruleEndDate') ? undefined : json['ruleEndDate'],
        'pointsType': !(0, runtime_1.exists)(json, 'pointsType') ? undefined : (0, RulePointsTypeType_1.RulePointsTypeTypeFromJSON)(json['pointsType']),
        'inactiveDate': !(0, runtime_1.exists)(json, 'inactiveDate') ? undefined : json['inactiveDate'],
        'transactionCode': !(0, runtime_1.exists)(json, 'transactionCode') ? undefined : (0, MembershipTypeRuleTransactionCodeType_1.MembershipTypeRuleTransactionCodeTypeFromJSON)(json['transactionCode']),
    };
}
exports.MembershipTypeRulePrimaryDetailsTypeFromJSONTyped = MembershipTypeRulePrimaryDetailsTypeFromJSONTyped;
function MembershipTypeRulePrimaryDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'membershipTypeRuleId': (0, MembershipTypeRuleIDType_1.MembershipTypeRuleIDTypeToJSON)(value.membershipTypeRuleId),
        'description': value.description,
        'ruleBasedOn': (0, MembershipTypeRuleBasedOnType_1.MembershipTypeRuleBasedOnTypeToJSON)(value.ruleBasedOn),
        'ruleStartDate': value.ruleStartDate,
        'ruleEndDate': value.ruleEndDate,
        'pointsType': (0, RulePointsTypeType_1.RulePointsTypeTypeToJSON)(value.pointsType),
        'inactiveDate': value.inactiveDate,
        'transactionCode': (0, MembershipTypeRuleTransactionCodeType_1.MembershipTypeRuleTransactionCodeTypeToJSON)(value.transactionCode),
    };
}
exports.MembershipTypeRulePrimaryDetailsTypeToJSON = MembershipTypeRulePrimaryDetailsTypeToJSON;
