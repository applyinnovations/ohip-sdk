"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipLevelTypeToJSON = exports.MembershipLevelTypeFromJSONTyped = exports.MembershipLevelTypeFromJSON = exports.instanceOfMembershipLevelType = void 0;
const runtime_1 = require("../runtime");
const ColorType_1 = require("./ColorType");
const HotelFolioTextsType_1 = require("./HotelFolioTextsType");
/**
 * Check if a given object implements the MembershipLevelType interface.
 */
function instanceOfMembershipLevelType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipLevelType = instanceOfMembershipLevelType;
function MembershipLevelTypeFromJSON(json) {
    return MembershipLevelTypeFromJSONTyped(json, false);
}
exports.MembershipLevelTypeFromJSON = MembershipLevelTypeFromJSON;
function MembershipLevelTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'autoRenewGrace': !(0, runtime_1.exists)(json, 'autoRenewGrace') ? undefined : json['autoRenewGrace'],
        'cardValidYears': !(0, runtime_1.exists)(json, 'cardValidYears') ? undefined : json['cardValidYears'],
        'changesRestricted': !(0, runtime_1.exists)(json, 'changesRestricted') ? undefined : json['changesRestricted'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'displayColor': !(0, runtime_1.exists)(json, 'displayColor') ? undefined : (0, ColorType_1.ColorTypeFromJSON)(json['displayColor']),
        'feeRequired': !(0, runtime_1.exists)(json, 'feeRequired') ? undefined : json['feeRequired'],
        'folioTexts': !(0, runtime_1.exists)(json, 'folioTexts') ? undefined : (0, HotelFolioTextsType_1.HotelFolioTextsTypeFromJSON)(json['folioTexts']),
        'fulfillment': !(0, runtime_1.exists)(json, 'fulfillment') ? undefined : json['fulfillment'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'label': !(0, runtime_1.exists)(json, 'label') ? undefined : json['label'],
        'maxDowngradeLevel': !(0, runtime_1.exists)(json, 'maxDowngradeLevel') ? undefined : json['maxDowngradeLevel'],
        'numberOfTransactions': !(0, runtime_1.exists)(json, 'numberOfTransactions') ? undefined : json['numberOfTransactions'],
        'rank': !(0, runtime_1.exists)(json, 'rank') ? undefined : json['rank'],
        'renewCard': !(0, runtime_1.exists)(json, 'renewCard') ? undefined : json['renewCard'],
        'restrictedLevel': !(0, runtime_1.exists)(json, 'restrictedLevel') ? undefined : json['restrictedLevel'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'vip': !(0, runtime_1.exists)(json, 'vip') ? undefined : json['vip'],
    };
}
exports.MembershipLevelTypeFromJSONTyped = MembershipLevelTypeFromJSONTyped;
function MembershipLevelTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'autoRenewGrace': value.autoRenewGrace,
        'cardValidYears': value.cardValidYears,
        'changesRestricted': value.changesRestricted,
        'code': value.code,
        'description': value.description,
        'displayColor': (0, ColorType_1.ColorTypeToJSON)(value.displayColor),
        'feeRequired': value.feeRequired,
        'folioTexts': (0, HotelFolioTextsType_1.HotelFolioTextsTypeToJSON)(value.folioTexts),
        'fulfillment': value.fulfillment,
        'inactive': value.inactive,
        'label': value.label,
        'maxDowngradeLevel': value.maxDowngradeLevel,
        'numberOfTransactions': value.numberOfTransactions,
        'rank': value.rank,
        'renewCard': value.renewCard,
        'restrictedLevel': value.restrictedLevel,
        'type': value.type,
        'vip': value.vip,
    };
}
exports.MembershipLevelTypeToJSON = MembershipLevelTypeToJSON;
