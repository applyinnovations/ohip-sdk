/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CityPostalCodeType } from './CityPostalCodeType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Request object for updating city and postal codes.
 * @export
 * @interface CityPostalCodesToBeChanged
 */
export interface CityPostalCodesToBeChanged {
    /**
     * Lists of City and Postal Codes.
     * @type {Array<CityPostalCodeType>}
     * @memberof CityPostalCodesToBeChanged
     */
    cityPostalCodes?: Array<CityPostalCodeType>;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof CityPostalCodesToBeChanged
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof CityPostalCodesToBeChanged
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the CityPostalCodesToBeChanged interface.
 */
export declare function instanceOfCityPostalCodesToBeChanged(value: object): boolean;
export declare function CityPostalCodesToBeChangedFromJSON(json: any): CityPostalCodesToBeChanged;
export declare function CityPostalCodesToBeChangedFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityPostalCodesToBeChanged;
export declare function CityPostalCodesToBeChangedToJSON(value?: CityPostalCodesToBeChanged | null): any;
