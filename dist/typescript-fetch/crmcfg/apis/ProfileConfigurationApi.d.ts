/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AddressFormats, CopyExclusivePreferencesRequest, CopyPreferencesRequest, CreditRatings, ExclusivePreferences, HotelPreferences, PostProfileNameValidationsRequest, PreferenceGroups, ProfileLinks, ProfileNameValidations, PutAddressFormatsRequest, PutCreditRatingsRequest, PutExclusivePreferencesRequest, PutPreferenceGroupsRequest, PutPreferencesRequest, PutProfileLinksRequest, PutProfileNameValidationsRequest, PutTemplateExclusivePreferencesRequest, PutTemplatePreferencesRequest, Status, TemplateExclusivePreferences, TemplatePreferences } from '../models';
export interface CopyExclusivePreferencesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exclusivePreferencesCopy?: CopyExclusivePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyPreferencesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferencesCopy?: CopyPreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAddressFormatsRequest {
    formatCodes?: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCreditRatingsRequest {
    creditRatings?: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteExclusivePreferencesRequest {
    hotelId?: string;
    exclusivePreferenceCode?: string;
    exclusivePreferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteHotelAndGlobalPreferencesRequest {
    preferenceCode?: string;
    preferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePreferenceGroupsRequest {
    preferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePreferencesRequest {
    hotelId?: string;
    preferenceCode?: string;
    preferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteProfileLinksRequest {
    fromType?: string;
    toType?: string;
    fromCode?: string;
    toCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteProfileNameValidationsRequest {
    profileType?: DeleteProfileNameValidationsProfileTypeEnum;
    profileName?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteProfileRelationshipsRequest {
    fromType?: string;
    toType?: string;
    fromCode?: string;
    toCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTemplateExclusivePreferencesRequest {
    exclusivePreferenceCode?: string;
    exclusivePreferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTemplatePreferencesRequest {
    preferenceCode?: string;
    preferenceGroup?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAddressFormatsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCreditRatingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetExclusivePreferencesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exclusivePreferenceCodes?: Array<string>;
    preferenceGroupsCodes?: Array<string>;
    preferenceCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPreferenceGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferenceGroupsCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPreferencesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferenceCodes?: Array<string>;
    preferenceGroupsCodes?: Array<string>;
    createdByUserIds?: Array<number>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetProfileLinksRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fromType?: string;
    toType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetProfileNameValidationsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    typeCodes?: Array<string>;
    wildCard?: string;
    name?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetProfileRelationshipsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fromType?: string;
    toType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateExclusivePreferencesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exclusivePreferenceCodes?: Array<string>;
    preferenceGroupsCodes?: Array<string>;
    preferenceCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplatePreferencesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferenceCodes?: Array<string>;
    preferenceGroupsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAddressFormatsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    addressFormats?: PutAddressFormatsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCreditRatingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditRatings?: PutCreditRatingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostExclusivePreferencesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exclusivePreferences?: PutExclusivePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPreferenceGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferenceGroups?: PutPreferenceGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPreferencesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelPreferences?: PutPreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProfileLinksRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileLinks?: PutProfileLinksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProfileNameValidationsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileNameValidations?: PostProfileNameValidationsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProfileRelationshipsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileLinks?: PutProfileLinksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateExclusivePreferencesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateExclusivePreferences?: PutTemplateExclusivePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplatePreferencesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templatePreferences?: PutTemplatePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAddressFormatsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    addressFormats?: PutAddressFormatsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCreditRatingsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditRatings?: PutCreditRatingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutExclusivePreferencesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exclusivePreferences?: PutExclusivePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPreferenceGroupsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    preferenceGroups?: PutPreferenceGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPreferencesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelPreferences?: PutPreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutProfileLinksOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileLinks?: PutProfileLinksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutProfileNameValidationsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileNameValidationsToChange?: PutProfileNameValidationsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutProfileRelationshipsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileLinks?: PutProfileLinksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTemplateExclusivePreferencesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateExclusivePreferences?: PutTemplateExclusivePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTemplatePreferencesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templatePreferences?: PutTemplatePreferencesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ProfileConfigurationApi extends runtime.BaseAPI {
    /**
     * You can use this API to copy Exclusive Preferences. <p><strong>OperationId:</strong>copyExclusivePreferences</p>
     * Copy Exclusive Preferences
     */
    copyExclusivePreferencesRaw(requestParameters: CopyExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to copy Exclusive Preferences. <p><strong>OperationId:</strong>copyExclusivePreferences</p>
     * Copy Exclusive Preferences
     */
    copyExclusivePreferences(requestParameters: CopyExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to copy preferences. <p><strong>OperationId:</strong>copyPreferences</p>
     * Copy preferences
     */
    copyPreferencesRaw(requestParameters: CopyPreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to copy preferences. <p><strong>OperationId:</strong>copyPreferences</p>
     * Copy preferences
     */
    copyPreferences(requestParameters: CopyPreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete address formats. <p><strong>OperationId:</strong>deleteAddressFormats</p>
     * Delete address formats
     */
    deleteAddressFormatsRaw(requestParameters: DeleteAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete address formats. <p><strong>OperationId:</strong>deleteAddressFormats</p>
     * Delete address formats
     */
    deleteAddressFormats(requestParameters: DeleteAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete credit ratings. <p><strong>OperationId:</strong>deleteCreditRatings</p>
     * Delete credit ratings
     */
    deleteCreditRatingsRaw(requestParameters: DeleteCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete credit ratings. <p><strong>OperationId:</strong>deleteCreditRatings</p>
     * Delete credit ratings
     */
    deleteCreditRatings(requestParameters: DeleteCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>deleteExclusivePreferences</p>
     * Delete Exclusive Preferences
     */
    deleteExclusivePreferencesRaw(requestParameters: DeleteExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>deleteExclusivePreferences</p>
     * Delete Exclusive Preferences
     */
    deleteExclusivePreferences(requestParameters: DeleteExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete preferences, this API allows us to delete both the Global and Hotel level preferences. <p><strong>OperationId:</strong>deleteHotelAndGlobalPreferences</p>
     * Delete preferences
     */
    deleteHotelAndGlobalPreferencesRaw(requestParameters: DeleteHotelAndGlobalPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete preferences, this API allows us to delete both the Global and Hotel level preferences. <p><strong>OperationId:</strong>deleteHotelAndGlobalPreferences</p>
     * Delete preferences
     */
    deleteHotelAndGlobalPreferences(requestParameters: DeleteHotelAndGlobalPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This will allow you to delete an existing Preference Group. <p><strong>OperationId:</strong>deletePreferenceGroups</p>
     * Delete preference groups
     */
    deletePreferenceGroupsRaw(requestParameters: DeletePreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This will allow you to delete an existing Preference Group. <p><strong>OperationId:</strong>deletePreferenceGroups</p>
     * Delete preference groups
     */
    deletePreferenceGroups(requestParameters: DeletePreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete preferences. <p><strong>OperationId:</strong>deletePreferences</p>
     * Delete preferences
     */
    deletePreferencesRaw(requestParameters: DeletePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete preferences. <p><strong>OperationId:</strong>deletePreferences</p>
     * Delete preferences
     */
    deletePreferences(requestParameters: DeletePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete profile links.<br><p><strong><mark>This API is deprecated. Please use deleteProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>deleteProfileLinks</p>
     * Delete profile links
     */
    deleteProfileLinksRaw(requestParameters: DeleteProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete profile links.<br><p><strong><mark>This API is deprecated. Please use deleteProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>deleteProfileLinks</p>
     * Delete profile links
     */
    deleteProfileLinks(requestParameters: DeleteProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete Profile Name Validations. <p><strong>OperationId:</strong>deleteProfileNameValidations</p>
     * Delete Profile Name Validations
     */
    deleteProfileNameValidationsRaw(requestParameters: DeleteProfileNameValidationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete Profile Name Validations. <p><strong>OperationId:</strong>deleteProfileNameValidations</p>
     * Delete Profile Name Validations
     */
    deleteProfileNameValidations(requestParameters: DeleteProfileNameValidationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete profile relationships. <p><strong>OperationId:</strong>deleteProfileRelationships</p>
     * Delete profile relationships
     */
    deleteProfileRelationshipsRaw(requestParameters: DeleteProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete profile relationships. <p><strong>OperationId:</strong>deleteProfileRelationships</p>
     * Delete profile relationships
     */
    deleteProfileRelationships(requestParameters: DeleteProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete template Exclusive Preferences. <p><strong>OperationId:</strong>deleteTemplateExclusivePreferences</p>
     * Delete template Exclusive Preferences
     */
    deleteTemplateExclusivePreferencesRaw(requestParameters: DeleteTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete template Exclusive Preferences. <p><strong>OperationId:</strong>deleteTemplateExclusivePreferences</p>
     * Delete template Exclusive Preferences
     */
    deleteTemplateExclusivePreferences(requestParameters: DeleteTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete template preferences. <p><strong>OperationId:</strong>deleteTemplatePreferences</p>
     * Delete template preferences
     */
    deleteTemplatePreferencesRaw(requestParameters: DeleteTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete template preferences. <p><strong>OperationId:</strong>deleteTemplatePreferences</p>
     * Delete template preferences
     */
    deleteTemplatePreferences(requestParameters: DeleteTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to get address formats. <p><strong>OperationId:</strong>getAddressFormats</p>
     * Get address formats
     */
    getAddressFormatsRaw(requestParameters: GetAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddressFormats>>;
    /**
     * You can use this API to get address formats. <p><strong>OperationId:</strong>getAddressFormats</p>
     * Get address formats
     */
    getAddressFormats(requestParameters: GetAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddressFormats>;
    /**
     * You can use this API to get credit ratings. <p><strong>OperationId:</strong>getCreditRatings</p>
     * Get credit ratings
     */
    getCreditRatingsRaw(requestParameters: GetCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditRatings>>;
    /**
     * You can use this API to get credit ratings. <p><strong>OperationId:</strong>getCreditRatings</p>
     * Get credit ratings
     */
    getCreditRatings(requestParameters: GetCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditRatings>;
    /**
     * You can use this API to get Exclusive preferences at hotel Level. <p><strong>OperationId:</strong>getExclusivePreferences</p>
     * Get Exclusive preferences
     */
    getExclusivePreferencesRaw(requestParameters: GetExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExclusivePreferences>>;
    /**
     * You can use this API to get Exclusive preferences at hotel Level. <p><strong>OperationId:</strong>getExclusivePreferences</p>
     * Get Exclusive preferences
     */
    getExclusivePreferences(requestParameters: GetExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExclusivePreferences>;
    /**
     * The API can be used to retrieve preference groups that match the given criteria in the request. <p><strong>OperationId:</strong>getPreferenceGroups</p>
     * Get Preference Groups
     */
    getPreferenceGroupsRaw(requestParameters: GetPreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PreferenceGroups>>;
    /**
     * The API can be used to retrieve preference groups that match the given criteria in the request. <p><strong>OperationId:</strong>getPreferenceGroups</p>
     * Get Preference Groups
     */
    getPreferenceGroups(requestParameters: GetPreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PreferenceGroups>;
    /**
     * Use this API to get all configured guest preferences. Use preference grouping code or preference code to narrow down the results.<p><strong>OperationId:</strong>getPreferences</p>
     * Get preferences
     */
    getPreferencesRaw(requestParameters: GetPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelPreferences>>;
    /**
     * Use this API to get all configured guest preferences. Use preference grouping code or preference code to narrow down the results.<p><strong>OperationId:</strong>getPreferences</p>
     * Get preferences
     */
    getPreferences(requestParameters: GetPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelPreferences>;
    /**
     * You can use this API to get profile links.<br><p><strong><mark>This API is deprecated. Please use getProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>getProfileLinks</p>
     * Get profile links
     */
    getProfileLinksRaw(requestParameters: GetProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileLinks>>;
    /**
     * You can use this API to get profile links.<br><p><strong><mark>This API is deprecated. Please use getProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>getProfileLinks</p>
     * Get profile links
     */
    getProfileLinks(requestParameters: GetProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileLinks>;
    /**
     * You can use this API to get Profile Name Validations. <p><strong>OperationId:</strong>getProfileNameValidations</p>
     * Get Profile Name Validations
     */
    getProfileNameValidationsRaw(requestParameters: GetProfileNameValidationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileNameValidations>>;
    /**
     * You can use this API to get Profile Name Validations. <p><strong>OperationId:</strong>getProfileNameValidations</p>
     * Get Profile Name Validations
     */
    getProfileNameValidations(requestParameters: GetProfileNameValidationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileNameValidations>;
    /**
     * You can use this API to get profile relationships. <p><strong>OperationId:</strong>getProfileRelationships</p>
     * Get profile relationships
     */
    getProfileRelationshipsRaw(requestParameters: GetProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileLinks>>;
    /**
     * You can use this API to get profile relationships. <p><strong>OperationId:</strong>getProfileRelationships</p>
     * Get profile relationships
     */
    getProfileRelationships(requestParameters: GetProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileLinks>;
    /**
     * You can use this API to get template Exclusive Preferences. <p><strong>OperationId:</strong>getTemplateExclusivePreferences</p>
     * Get template Exclusive Preferences
     */
    getTemplateExclusivePreferencesRaw(requestParameters: GetTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateExclusivePreferences>>;
    /**
     * You can use this API to get template Exclusive Preferences. <p><strong>OperationId:</strong>getTemplateExclusivePreferences</p>
     * Get template Exclusive Preferences
     */
    getTemplateExclusivePreferences(requestParameters: GetTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateExclusivePreferences>;
    /**
     * You can use this API to get template Preferences. <p><strong>OperationId:</strong>getTemplatePreferences</p>
     * Get template Preferences
     */
    getTemplatePreferencesRaw(requestParameters: GetTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatePreferences>>;
    /**
     * You can use this API to get template Preferences. <p><strong>OperationId:</strong>getTemplatePreferences</p>
     * Get template Preferences
     */
    getTemplatePreferences(requestParameters: GetTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatePreferences>;
    /**
     * You can use this API to create address formats. <p><strong>OperationId:</strong>postAddressFormats</p>
     * Create address formats
     */
    postAddressFormatsRaw(requestParameters: PostAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create address formats. <p><strong>OperationId:</strong>postAddressFormats</p>
     * Create address formats
     */
    postAddressFormats(requestParameters: PostAddressFormatsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create credit ratings. <p><strong>OperationId:</strong>postCreditRatings</p>
     * Create credit ratings
     */
    postCreditRatingsRaw(requestParameters: PostCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create credit ratings. <p><strong>OperationId:</strong>postCreditRatings</p>
     * Create credit ratings
     */
    postCreditRatings(requestParameters: PostCreditRatingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>postExclusivePreferences</p>
     * Create Exclusive Preferences
     */
    postExclusivePreferencesRaw(requestParameters: PostExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>postExclusivePreferences</p>
     * Create Exclusive Preferences
     */
    postExclusivePreferences(requestParameters: PostExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new Preference group. <p><strong>OperationId:</strong>postPreferenceGroups</p>
     * Create new preference groups
     */
    postPreferenceGroupsRaw(requestParameters: PostPreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new Preference group. <p><strong>OperationId:</strong>postPreferenceGroups</p>
     * Create new preference groups
     */
    postPreferenceGroups(requestParameters: PostPreferenceGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This will allow you to create new preferences. <p><strong>OperationId:</strong>postPreferences</p>
     * Create preferences
     */
    postPreferencesRaw(requestParameters: PostPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This will allow you to create new preferences. <p><strong>OperationId:</strong>postPreferences</p>
     * Create preferences
     */
    postPreferences(requestParameters: PostPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create profile links.<br><p><strong><mark>This API is deprecated. Please use postProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>postProfileLinks</p>
     * Create profile links
     */
    postProfileLinksRaw(requestParameters: PostProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create profile links.<br><p><strong><mark>This API is deprecated. Please use postProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>postProfileLinks</p>
     * Create profile links
     */
    postProfileLinks(requestParameters: PostProfileLinksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Profile Name Validations. <p><strong>OperationId:</strong>postProfileNameValidations</p>
     * Create Profile Name Validations
     */
    postProfileNameValidationsRaw(requestParameters: PostProfileNameValidationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Profile Name Validations. <p><strong>OperationId:</strong>postProfileNameValidations</p>
     * Create Profile Name Validations
     */
    postProfileNameValidations(requestParameters: PostProfileNameValidationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create profile relationships. <p><strong>OperationId:</strong>postProfileRelationships</p>
     * Create profile relationships
     */
    postProfileRelationshipsRaw(requestParameters: PostProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create profile relationships. <p><strong>OperationId:</strong>postProfileRelationships</p>
     * Create profile relationships
     */
    postProfileRelationships(requestParameters: PostProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create template Exclusive Preferences. <p><strong>OperationId:</strong>postTemplateExclusivePreferences</p>
     * Create template Exclusive Preferences
     */
    postTemplateExclusivePreferencesRaw(requestParameters: PostTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create template Exclusive Preferences. <p><strong>OperationId:</strong>postTemplateExclusivePreferences</p>
     * Create template Exclusive Preferences
     */
    postTemplateExclusivePreferences(requestParameters: PostTemplateExclusivePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create template preferences. <p><strong>OperationId:</strong>postTemplatePreferences</p>
     * Create template preferences
     */
    postTemplatePreferencesRaw(requestParameters: PostTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create template preferences. <p><strong>OperationId:</strong>postTemplatePreferences</p>
     * Create template preferences
     */
    postTemplatePreferences(requestParameters: PostTemplatePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change address formats. <p><strong>OperationId:</strong>putAddressFormats</p>
     * Change address formats
     */
    putAddressFormatsRaw(requestParameters: PutAddressFormatsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change address formats. <p><strong>OperationId:</strong>putAddressFormats</p>
     * Change address formats
     */
    putAddressFormats(requestParameters: PutAddressFormatsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change credit ratings. <p><strong>OperationId:</strong>putCreditRatings</p>
     * Change credit ratings
     */
    putCreditRatingsRaw(requestParameters: PutCreditRatingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change credit ratings. <p><strong>OperationId:</strong>putCreditRatings</p>
     * Change credit ratings
     */
    putCreditRatings(requestParameters: PutCreditRatingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>putExclusivePreferences</p>
     * Change Exclusive Preferences
     */
    putExclusivePreferencesRaw(requestParameters: PutExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Exclusive Preferences at hotel Level. <p><strong>OperationId:</strong>putExclusivePreferences</p>
     * Change Exclusive Preferences
     */
    putExclusivePreferences(requestParameters: PutExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API can be used to modify the preference groups. Changes can be made concurrently to multiple groups. <p><strong>OperationId:</strong>putPreferenceGroups</p>
     * Change Preference Groups
     */
    putPreferenceGroupsRaw(requestParameters: PutPreferenceGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API can be used to modify the preference groups. Changes can be made concurrently to multiple groups. <p><strong>OperationId:</strong>putPreferenceGroups</p>
     * Change Preference Groups
     */
    putPreferenceGroups(requestParameters: PutPreferenceGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update and change existing preferences. <p><strong>OperationId:</strong>putPreferences</p>
     * Change preferences
     */
    putPreferencesRaw(requestParameters: PutPreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update and change existing preferences. <p><strong>OperationId:</strong>putPreferences</p>
     * Change preferences
     */
    putPreferences(requestParameters: PutPreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change profile links.<br><p><strong><mark>This API is deprecated. Please use putProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>putProfileLinks</p>
     * Change profile links
     */
    putProfileLinksRaw(requestParameters: PutProfileLinksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change profile links.<br><p><strong><mark>This API is deprecated. Please use putProfileRelationships instead</mark></strong></p> <p><strong>OperationId:</strong>putProfileLinks</p>
     * Change profile links
     */
    putProfileLinks(requestParameters: PutProfileLinksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Profile Name Validations. <p><strong>OperationId:</strong>putProfileNameValidations</p>
     * Change Profile Name Validations
     */
    putProfileNameValidationsRaw(requestParameters: PutProfileNameValidationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Profile Name Validations. <p><strong>OperationId:</strong>putProfileNameValidations</p>
     * Change Profile Name Validations
     */
    putProfileNameValidations(requestParameters: PutProfileNameValidationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change profile relationships. <p><strong>OperationId:</strong>putProfileRelationships</p>
     * Change profile relationships
     */
    putProfileRelationshipsRaw(requestParameters: PutProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change profile relationships. <p><strong>OperationId:</strong>putProfileRelationships</p>
     * Change profile relationships
     */
    putProfileRelationships(requestParameters: PutProfileRelationshipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change template Exclusive Preferences. <p><strong>OperationId:</strong>putTemplateExclusivePreferences</p>
     * Change template Exclusive Preferences
     */
    putTemplateExclusivePreferencesRaw(requestParameters: PutTemplateExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change template Exclusive Preferences. <p><strong>OperationId:</strong>putTemplateExclusivePreferences</p>
     * Change template Exclusive Preferences
     */
    putTemplateExclusivePreferences(requestParameters: PutTemplateExclusivePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change template preferences. <p><strong>OperationId:</strong>putTemplatePreferences</p>
     * Change template preferences
     */
    putTemplatePreferencesRaw(requestParameters: PutTemplatePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change template preferences. <p><strong>OperationId:</strong>putTemplatePreferences</p>
     * Change template preferences
     */
    putTemplatePreferences(requestParameters: PutTemplatePreferencesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const DeleteProfileNameValidationsProfileTypeEnum: {
    readonly Company: "Company";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
};
export type DeleteProfileNameValidationsProfileTypeEnum = typeof DeleteProfileNameValidationsProfileTypeEnum[keyof typeof DeleteProfileNameValidationsProfileTypeEnum];
