/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AccountOwnersDetails, AccountPrioritiesDetails, AccountTypesDetails, AddressTypesDetails, AlternateLanguageGuestTitlesDetails, BusinessSegmentsDetails, ChangeAlternateLanguageGuestTitlesRequest, ChangeBusinessSegmentsRequest, ChangeCityPostalCodesRequest, ChangeEcertificateLocationTypesRequest, ChangeGuestStatusesRequest, ChangeGuestTypesRequest, ChangeImmigrationStatusesRequest, ChangeMailingActionCodesRequest, ChangeMembershipClaimOriginsRequest, ChangeMembershipClaimTypesRequest, ChangeMembershipEnrollmentCodesRequest, ChangeMembershipStatusCodesRequest, ChangeOwnerTeamsRequest, ChangeTravelAgentTypesRequest, CityPostalCodesDetails, CompanyTypesDetails, CompetitionCodesDetails, DistanceTypesDetails, DistrictsDetails, EcertificateLocationTypesDetails, GenderTypes, GenderTypesToChange, GuestStatusesDetails, GuestTitlesDetails, GuestTypesDetails, IdentificationTypesDetails, ImmigrationStatusesDetails, IndustryCodesDetails, InfluenceCodesDetails, KeywordTypesDetails, MailingActionCodesDetails, MembershipClaimOriginsDetails, MembershipClaimTypesDetails, MembershipEnrollmentCodesDetails, MembershipStatusCodesDetails, NationalitiesDetails, OwnerTeamsDetails, PayDaysDetails, PostAccountPrioritiesRequest, PostAccountTypesRequest, PostAddressTypesRequest, PostAlternateLanguageGuestTitlesRequest, PostBusinessSegmentsRequest, PostCityPostalCodesRequest, PostCompanyTypesRequest, PostCompetitionCodesRequest, PostDistanceTypesRequest, PostDistrictsRequest, PostEcertificateLocationTypesRequest, PostGenderTypesRequest, PostGuestStatusesRequest, PostGuestTitlesRequest, PostGuestTypesRequest, PostIdentificationTypesRequest, PostImmigrationStatusesRequest, PostIndustryCodesRequest, PostInfluenceCodesRequest, PostKeywordTypesRequest, PostMailingActionCodesRequest, PostMembershipClaimOriginsRequest, PostMembershipClaimTypesRequest, PostMembershipEnrollmentCodesRequest, PostMembershipStatusCodesRequest, PostNationalitiesRequest, PostOwnerTeamsRequest, PostPayDaysRequest, PostProfileInactiveReasonsRequest, PostProfileRestrictionReasonsRequest, PostSourcesRequest, PostStatesRequest, PostTerritoriesRequest, PostTitlesRequest, PostTravelAgentTypesRequest, PostVIPLevelsRequest, ProfileInactiveReasonsDetails, ProfileRestrictionReasonsDetails, PutAccountPrioritiesRequest, PutAccountTypesRequest, PutAddressTypesRequest, PutCompanyTypesRequest, PutCompetitionCodesRequest, PutDistanceTypesRequest, PutDistrictsRequest, PutGenderTypesRequest, PutGuestTitlesRequest, PutIdentificationTypesRequest, PutIndustryCodesRequest, PutInfluenceCodesRequest, PutKeywordTypesRequest, PutNationalitiesRequest, PutPayDaysRequest, PutProfileInactiveReasonsRequest, PutProfileRestrictionReasonsRequest, PutSourcesRequest, PutTerritoriesRequest, PutTitlesRequest, PutVIPLevelsRequest, SourcesDetails, StatesDetails, Status, TerritoriesDetails, TitlesDetails, TravelAgentTypesDetails, VIPLevelsDetails } from '../models';
export interface ChangeAlternateLanguageGuestTitlesOperationRequest {
    guestTitlesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    alternateLanguageGuestTitlesToBeChanged?: ChangeAlternateLanguageGuestTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeBusinessSegmentsOperationRequest {
    businessSegmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    businessSegmentsToBeChanged?: ChangeBusinessSegmentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCityPostalCodesOperationRequest {
    postalCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cityPostalCodesToBeChanged?: ChangeCityPostalCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeEcertificateLocationTypesOperationRequest {
    locationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ecertificateLocationTypesToBeChanged?: ChangeEcertificateLocationTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeGuestStatusesOperationRequest {
    guestStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestStatusesToBeChanged?: ChangeGuestStatusesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeGuestTypesOperationRequest {
    guestTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestTypesToBeChanged?: ChangeGuestTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeImmigrationStatusesOperationRequest {
    immigrationStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    immigrationStatusesToBeChanged?: ChangeImmigrationStatusesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMailingActionCodesOperationRequest {
    mailingActionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    mailingActionCodesToBeChanged?: ChangeMailingActionCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMembershipClaimOriginsOperationRequest {
    membershipClaimOriginCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipClaimOriginsToBeChanged?: ChangeMembershipClaimOriginsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMembershipClaimTypesOperationRequest {
    membershipClaimTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipClaimTypesToBeChanged?: ChangeMembershipClaimTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMembershipEnrollmentCodesOperationRequest {
    enrollmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipEnrollmentCodesToBeChanged?: ChangeMembershipEnrollmentCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMembershipStatusCodesOperationRequest {
    membershipStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipStatusCodesToBeChanged?: ChangeMembershipStatusCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeOwnerTeamsOperationRequest {
    ownerTeamCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ownerTeamsToBeChanged?: ChangeOwnerTeamsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTravelAgentTypesOperationRequest {
    fiscalAgentTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    travelAgentTypesToBeChanged?: ChangeTravelAgentTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAccountPrioritiesRequest {
    accountPriorityId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAccountTypesRequest {
    accountTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAddressTypesRequest {
    addressTypeId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCompanyTypesRequest {
    companyTypesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCompetitionCodesRequest {
    competitionCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteDistanceTypesRequest {
    distanceTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteDistrictsRequest {
    districtsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteGenderTypesRequest {
    genderTypeId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    code?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteGuestTitlesRequest {
    guestTitlesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languageCode?: Array<string>;
    titleType?: Array<number>;
    description?: Array<string>;
    greeting?: Array<string>;
    displayOrder?: Array<number>;
    newTitleType?: Array<number>;
    newLanguageCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteIdentificationTypesRequest {
    identificationTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteIndustryCodesRequest {
    industryCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteInfluenceCodesRequest {
    influenceCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteKeywordTypesRequest {
    keywordTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteNationalitiesRequest {
    nationalitiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePayDaysRequest {
    payDaysId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteProfileInactiveReasonsRequest {
    profileInactiveReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteProfileRestrictionReasonsRequest {
    profileRestrictionReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteSourcesRequest {
    sourcesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTerritoriesRequest {
    territoriesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTitlesRequest {
    titlesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteVIPLevelsRequest {
    vipLevelsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAccountOwnersRequest {
    chainCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    findExactOwnerCodeMatch?: boolean;
    maxFetchRecords?: number;
    hotelId?: string;
    ownerCode?: string;
    name?: string;
    givenName?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAccountPrioritiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAccountTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAddressTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAlternateLanguageGuestTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    titleCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBusinessSegmentsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCityPostalCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    postalCodeFrom?: string;
    postalCodeTo?: string;
    cityWildCard?: string;
    codes?: Array<string>;
    wildCard?: string;
    stateCodes?: Array<string>;
    stateWildCard?: string;
    territoryCodes?: Array<string>;
    territoryWildCard?: string;
    districtCodes?: Array<string>;
    districtWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompanyTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompetitionCodesRequest {
    fetchInactive?: boolean;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDistanceTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDistrictsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetEcertificateLocationTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGenderTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    code?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuestStatusesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuestTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    titleCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuestTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetIdentificationTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetImmigrationStatusesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetIndustryCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetInfluenceCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetKeywordTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMailingActionCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMembershipClaimOriginsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMembershipClaimTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMembershipEnrollmentCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMembershipStatusCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetNationalitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOwnerTeamsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPayDaysRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetProfileInactiveReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetProfileRestrictionReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetSourcesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetStatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    stateWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTerritoriesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTravelAgentTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetVIPLevelsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAccountPrioritiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    accountPrioritiesCriteria?: PostAccountPrioritiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAccountTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    accountTypesCriteria?: PostAccountTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAddressTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    addressTypesCriteria?: PostAddressTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAlternateLanguageGuestTitlesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    alternateLanguageGuestTitlesCriteria?: PostAlternateLanguageGuestTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBusinessSegmentsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    businessSegmentsCriteria?: PostBusinessSegmentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCityPostalCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cityPostalCodesCriteria?: PostCityPostalCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCompanyTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    companyTypesCriteria?: PostCompanyTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCompetitionCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    competitionCodesCriteria?: PostCompetitionCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDistanceTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    distanceTypesCriteria?: PostDistanceTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDistrictsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    districtsCriteria?: PostDistrictsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostEcertificateLocationTypesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ecertificateLocationTypesCriteria?: PostEcertificateLocationTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGenderTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    genderTypesCriteria?: PostGenderTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGuestStatusesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestStatusesCriteria?: PostGuestStatusesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGuestTitlesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestTitlesCriteria?: PostGuestTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGuestTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestTypesCriteria?: PostGuestTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostIdentificationTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    identificationTypesCriteria?: PostIdentificationTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostImmigrationStatusesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    immigrationStatusesCriteria?: PostImmigrationStatusesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostIndustryCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    industryCodesCriteria?: PostIndustryCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostInfluenceCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    influenceCodesCriteria?: PostInfluenceCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostKeywordTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    keywordTypesCriteria?: PostKeywordTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMailingActionCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    mailingActionCodesCriteria?: PostMailingActionCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMembershipClaimOriginsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipClaimOriginsCriteria?: PostMembershipClaimOriginsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMembershipClaimTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipClaimTypesCriteria?: PostMembershipClaimTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMembershipEnrollmentCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipEnrollmentCodesCriteria?: PostMembershipEnrollmentCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMembershipStatusCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    membershipStatusCodesCriteria?: PostMembershipStatusCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostNationalitiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    nationalitiesCriteria?: PostNationalitiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOwnerTeamsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ownerTeamsCriteria?: PostOwnerTeamsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPayDaysOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    payDaysCriteria?: PostPayDaysRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProfileInactiveReasonsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileInactiveReasonsCriteria?: PostProfileInactiveReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProfileRestrictionReasonsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileRestrictionReasonsCriteria?: PostProfileRestrictionReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostSourcesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    sourcesCriteria?: PostSourcesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostStatesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    statesCriteria?: PostStatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTerritoriesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    territoriesCriteria?: PostTerritoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTitlesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    titlesCriteria?: PostTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTravelAgentTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    travelAgentTypesCriteria?: PostTravelAgentTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostVIPLevelsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    vIPLevelsCriteria?: PostVIPLevelsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAccountPrioritiesOperationRequest {
    accountPriorityId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    accountPrioritiesToBeChanged?: PutAccountPrioritiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAccountTypesOperationRequest {
    accountTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    accountTypesToBeChanged?: PutAccountTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAddressTypesOperationRequest {
    addressTypeId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    addressTypesToBeChanged?: PutAddressTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCompanyTypesOperationRequest {
    companyTypesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    companyTypesToBeChanged?: PutCompanyTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCompetitionCodesOperationRequest {
    competitionCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    competitionCodesToBeChanged?: PutCompetitionCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutDistanceTypesOperationRequest {
    distanceTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    distanceTypesToBeChanged?: PutDistanceTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutDistrictsOperationRequest {
    districtsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    districtsToBeChanged?: PutDistrictsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutGenderTypesOperationRequest {
    genderTypeId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    genderTypesToChange?: PutGenderTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutGuestTitlesOperationRequest {
    guestTitlesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestTitlesToBeChanged?: PutGuestTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutIdentificationTypesOperationRequest {
    identificationTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    identificationTypesToBeChanged?: PutIdentificationTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutIndustryCodesOperationRequest {
    industryCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    industryCodesToBeChanged?: PutIndustryCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutInfluenceCodesOperationRequest {
    influenceCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    influenceCodesToBeChanged?: PutInfluenceCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutKeywordTypesOperationRequest {
    keywordTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    keywordTypesToBeChanged?: PutKeywordTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutNationalitiesOperationRequest {
    nationalitiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    nationalitiesToBeChanged?: PutNationalitiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPayDaysOperationRequest {
    payDaysId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    payDaysToBeChanged?: PutPayDaysRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutProfileInactiveReasonsOperationRequest {
    profileInactiveReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileInactiveReasonsToBeChanged?: PutProfileInactiveReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutProfileRestrictionReasonsOperationRequest {
    profileRestrictionReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    profileRestrictionReasonsToBeChanged?: PutProfileRestrictionReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutSourcesOperationRequest {
    sourcesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    sourcesToBeChanged?: PutSourcesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTerritoriesOperationRequest {
    territoriesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    territoriesToBeChanged?: PutTerritoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTitlesOperationRequest {
    titlesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    titlesToBeChanged?: PutTitlesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutVIPLevelsOperationRequest {
    vipLevelsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    vIPLevelsToBeChanged?: PutVIPLevelsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAlternateLanguageGuestTitlesRequest {
    guestTitlesCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languageCode?: Array<string>;
    titleTypes?: Array<number>;
    titleDescription?: Array<string>;
    greeting?: Array<string>;
    displayOrder?: Array<number>;
    newTitleType?: Array<number>;
    newLanguageCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBusinessSegmentsRequest {
    businessSegmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCityPostalCodesRequest {
    postalCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveEcertificateLocationTypesRequest {
    locationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveGuestStatusesRequest {
    guestStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveGuestTypesRequest {
    guestTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveImmigrationStatusesRequest {
    immigrationStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMailingActionCodesRequest {
    mailingActionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMembershipClaimOriginsRequest {
    membershipClaimOriginCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMembershipClaimTypesRequest {
    membershipClaimTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMembershipEnrollmentCodesRequest {
    enrollmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMembershipStatusCodesRequest {
    membershipStatusCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveOwnerTeamsRequest {
    ownerTeamCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTravelAgentTypesRequest {
    fiscalAgentTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ChainConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to modify Alternate Language Guest Titles. <p><strong>OperationId:</strong>changeAlternateLanguageGuestTitles</p>
     * Change Alternate Language Guest Titles
     */
    changeAlternateLanguageGuestTitlesRaw(requestParameters: ChangeAlternateLanguageGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to modify Alternate Language Guest Titles. <p><strong>OperationId:</strong>changeAlternateLanguageGuestTitles</p>
     * Change Alternate Language Guest Titles
     */
    changeAlternateLanguageGuestTitles(requestParameters: ChangeAlternateLanguageGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Business Segments. <p><strong>OperationId:</strong>changeBusinessSegments</p>
     * Change Business Segments
     */
    changeBusinessSegmentsRaw(requestParameters: ChangeBusinessSegmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Business Segments. <p><strong>OperationId:</strong>changeBusinessSegments</p>
     * Change Business Segments
     */
    changeBusinessSegments(requestParameters: ChangeBusinessSegmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update City Postal Codes. <p><strong>OperationId:</strong>changeCityPostalCodes</p>
     * Change City Postal Codes
     */
    changeCityPostalCodesRaw(requestParameters: ChangeCityPostalCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update City Postal Codes. <p><strong>OperationId:</strong>changeCityPostalCodes</p>
     * Change City Postal Codes
     */
    changeCityPostalCodes(requestParameters: ChangeCityPostalCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Ecertificate Location Types. <p><strong>OperationId:</strong>changeEcertificateLocationTypes</p>
     * Change Ecertificate Location Types
     */
    changeEcertificateLocationTypesRaw(requestParameters: ChangeEcertificateLocationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Ecertificate Location Types. <p><strong>OperationId:</strong>changeEcertificateLocationTypes</p>
     * Change Ecertificate Location Types
     */
    changeEcertificateLocationTypes(requestParameters: ChangeEcertificateLocationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Guest Statuses. <p><strong>OperationId:</strong>changeGuestStatuses</p>
     * Change Guest Statuses
     */
    changeGuestStatusesRaw(requestParameters: ChangeGuestStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Guest Statuses. <p><strong>OperationId:</strong>changeGuestStatuses</p>
     * Change Guest Statuses
     */
    changeGuestStatuses(requestParameters: ChangeGuestStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Guest Types. <p><strong>OperationId:</strong>changeGuestTypes</p>
     * Change Guest Types
     */
    changeGuestTypesRaw(requestParameters: ChangeGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Guest Types. <p><strong>OperationId:</strong>changeGuestTypes</p>
     * Change Guest Types
     */
    changeGuestTypes(requestParameters: ChangeGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Immigration Statuses. <p><strong>OperationId:</strong>changeImmigrationStatuses</p>
     * Change Immigration Statuses
     */
    changeImmigrationStatusesRaw(requestParameters: ChangeImmigrationStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Immigration Statuses. <p><strong>OperationId:</strong>changeImmigrationStatuses</p>
     * Change Immigration Statuses
     */
    changeImmigrationStatuses(requestParameters: ChangeImmigrationStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Mailing Action Codes. <p><strong>OperationId:</strong>changeMailingActionCodes</p>
     * Change Mailing Action Codes
     */
    changeMailingActionCodesRaw(requestParameters: ChangeMailingActionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Mailing Action Codes. <p><strong>OperationId:</strong>changeMailingActionCodes</p>
     * Change Mailing Action Codes
     */
    changeMailingActionCodes(requestParameters: ChangeMailingActionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Membership Claim Origins. <p><strong>OperationId:</strong>changeMembershipClaimOrigins</p>
     * Change Membership Claim Origins
     */
    changeMembershipClaimOriginsRaw(requestParameters: ChangeMembershipClaimOriginsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Membership Claim Origins. <p><strong>OperationId:</strong>changeMembershipClaimOrigins</p>
     * Change Membership Claim Origins
     */
    changeMembershipClaimOrigins(requestParameters: ChangeMembershipClaimOriginsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Membership Claim Types. <p><strong>OperationId:</strong>changeMembershipClaimTypes</p>
     * Change Membership Claim Types
     */
    changeMembershipClaimTypesRaw(requestParameters: ChangeMembershipClaimTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Membership Claim Types. <p><strong>OperationId:</strong>changeMembershipClaimTypes</p>
     * Change Membership Claim Types
     */
    changeMembershipClaimTypes(requestParameters: ChangeMembershipClaimTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Membership Enrollment Codes. <p><strong>OperationId:</strong>changeMembershipEnrollmentCodes</p>
     * Change Membership Enrollment Codes
     */
    changeMembershipEnrollmentCodesRaw(requestParameters: ChangeMembershipEnrollmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Membership Enrollment Codes. <p><strong>OperationId:</strong>changeMembershipEnrollmentCodes</p>
     * Change Membership Enrollment Codes
     */
    changeMembershipEnrollmentCodes(requestParameters: ChangeMembershipEnrollmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Membership Status Codes. <p><strong>OperationId:</strong>changeMembershipStatusCodes</p>
     * Change Membership Status Codes
     */
    changeMembershipStatusCodesRaw(requestParameters: ChangeMembershipStatusCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Membership Status Codes. <p><strong>OperationId:</strong>changeMembershipStatusCodes</p>
     * Change Membership Status Codes
     */
    changeMembershipStatusCodes(requestParameters: ChangeMembershipStatusCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Owner Teams. <p><strong>OperationId:</strong>changeOwnerTeams</p>
     * Change Owner Teams
     */
    changeOwnerTeamsRaw(requestParameters: ChangeOwnerTeamsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Owner Teams. <p><strong>OperationId:</strong>changeOwnerTeams</p>
     * Change Owner Teams
     */
    changeOwnerTeams(requestParameters: ChangeOwnerTeamsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Travel Agent Types. <p><strong>OperationId:</strong>changeTravelAgentTypes</p>
     * Change Travel Agent Types
     */
    changeTravelAgentTypesRaw(requestParameters: ChangeTravelAgentTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Travel Agent Types. <p><strong>OperationId:</strong>changeTravelAgentTypes</p>
     * Change Travel Agent Types
     */
    changeTravelAgentTypes(requestParameters: ChangeTravelAgentTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to remove Account Priorities. <p><strong>OperationId:</strong>deleteAccountPriorities</p>
     * Remove Account Priorities
     */
    deleteAccountPrioritiesRaw(requestParameters: DeleteAccountPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to remove Account Priorities. <p><strong>OperationId:</strong>deleteAccountPriorities</p>
     * Remove Account Priorities
     */
    deleteAccountPriorities(requestParameters: DeleteAccountPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to remove Account Types. <p><strong>OperationId:</strong>deleteAccountTypes</p>
     * Remove Account Types
     */
    deleteAccountTypesRaw(requestParameters: DeleteAccountTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to remove Account Types. <p><strong>OperationId:</strong>deleteAccountTypes</p>
     * Remove Account Types
     */
    deleteAccountTypes(requestParameters: DeleteAccountTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete an existing Address type. <p><strong>OperationId:</strong>deleteAddressTypes</p>
     * Delete an existing Address type
     */
    deleteAddressTypesRaw(requestParameters: DeleteAddressTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete an existing Address type. <p><strong>OperationId:</strong>deleteAddressTypes</p>
     * Delete an existing Address type
     */
    deleteAddressTypes(requestParameters: DeleteAddressTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Company Types. <p><strong>OperationId:</strong>deleteCompanyTypes</p>
     * Delete Company Types
     */
    deleteCompanyTypesRaw(requestParameters: DeleteCompanyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Company Types. <p><strong>OperationId:</strong>deleteCompanyTypes</p>
     * Delete Company Types
     */
    deleteCompanyTypes(requestParameters: DeleteCompanyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to remove Competition Codes. <p><strong>OperationId:</strong>deleteCompetitionCodes</p>
     * Remove Competition Codes
     */
    deleteCompetitionCodesRaw(requestParameters: DeleteCompetitionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to remove Competition Codes. <p><strong>OperationId:</strong>deleteCompetitionCodes</p>
     * Remove Competition Codes
     */
    deleteCompetitionCodes(requestParameters: DeleteCompetitionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Distance Types. <p><strong>OperationId:</strong>deleteDistanceTypes</p>
     * Delete Distance Types
     */
    deleteDistanceTypesRaw(requestParameters: DeleteDistanceTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Distance Types. <p><strong>OperationId:</strong>deleteDistanceTypes</p>
     * Delete Distance Types
     */
    deleteDistanceTypes(requestParameters: DeleteDistanceTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Districts. <p><strong>OperationId:</strong>deleteDistricts</p>
     * Delete Districts
     */
    deleteDistrictsRaw(requestParameters: DeleteDistrictsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Districts. <p><strong>OperationId:</strong>deleteDistricts</p>
     * Delete Districts
     */
    deleteDistricts(requestParameters: DeleteDistrictsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Gender Types. <p><strong>OperationId:</strong>deleteGenderTypes</p>
     * Delete Gender Types
     */
    deleteGenderTypesRaw(requestParameters: DeleteGenderTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Gender Types. <p><strong>OperationId:</strong>deleteGenderTypes</p>
     * Delete Gender Types
     */
    deleteGenderTypes(requestParameters: DeleteGenderTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Guest Titles. <p><strong>OperationId:</strong>deleteGuestTitles</p>
     * Delete Guest Titles
     */
    deleteGuestTitlesRaw(requestParameters: DeleteGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Guest Titles. <p><strong>OperationId:</strong>deleteGuestTitles</p>
     * Delete Guest Titles
     */
    deleteGuestTitles(requestParameters: DeleteGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Identification Types. <p><strong>OperationId:</strong>deleteIdentificationTypes</p>
     * Delete Identification Types
     */
    deleteIdentificationTypesRaw(requestParameters: DeleteIdentificationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Identification Types. <p><strong>OperationId:</strong>deleteIdentificationTypes</p>
     * Delete Identification Types
     */
    deleteIdentificationTypes(requestParameters: DeleteIdentificationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Industry Codes. <p><strong>OperationId:</strong>deleteIndustryCodes</p>
     * Delete Industry Codes
     */
    deleteIndustryCodesRaw(requestParameters: DeleteIndustryCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Industry Codes. <p><strong>OperationId:</strong>deleteIndustryCodes</p>
     * Delete Industry Codes
     */
    deleteIndustryCodes(requestParameters: DeleteIndustryCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Influence Codes. <p><strong>OperationId:</strong>deleteInfluenceCodes</p>
     * Delete Influence Codes
     */
    deleteInfluenceCodesRaw(requestParameters: DeleteInfluenceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Influence Codes. <p><strong>OperationId:</strong>deleteInfluenceCodes</p>
     * Delete Influence Codes
     */
    deleteInfluenceCodes(requestParameters: DeleteInfluenceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Keyword Types. <p><strong>OperationId:</strong>deleteKeywordTypes</p>
     * Delete Keyword Types
     */
    deleteKeywordTypesRaw(requestParameters: DeleteKeywordTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Keyword Types. <p><strong>OperationId:</strong>deleteKeywordTypes</p>
     * Delete Keyword Types
     */
    deleteKeywordTypes(requestParameters: DeleteKeywordTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Nationalities. <p><strong>OperationId:</strong>deleteNationalities</p>
     * Delete Nationalities
     */
    deleteNationalitiesRaw(requestParameters: DeleteNationalitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Nationalities. <p><strong>OperationId:</strong>deleteNationalities</p>
     * Delete Nationalities
     */
    deleteNationalities(requestParameters: DeleteNationalitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Pay Days. <p><strong>OperationId:</strong>deletePayDays</p>
     * Delete Pay Days
     */
    deletePayDaysRaw(requestParameters: DeletePayDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Pay Days. <p><strong>OperationId:</strong>deletePayDays</p>
     * Delete Pay Days
     */
    deletePayDays(requestParameters: DeletePayDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Profile Inactive Reasons. <p><strong>OperationId:</strong>deleteProfileInactiveReasons</p>
     * Delete Profile Inactive Reasons
     */
    deleteProfileInactiveReasonsRaw(requestParameters: DeleteProfileInactiveReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Profile Inactive Reasons. <p><strong>OperationId:</strong>deleteProfileInactiveReasons</p>
     * Delete Profile Inactive Reasons
     */
    deleteProfileInactiveReasons(requestParameters: DeleteProfileInactiveReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Profile Restriction Reasons. <p><strong>OperationId:</strong>deleteProfileRestrictionReasons</p>
     * Delete Profile Restriction Reasons
     */
    deleteProfileRestrictionReasonsRaw(requestParameters: DeleteProfileRestrictionReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Profile Restriction Reasons. <p><strong>OperationId:</strong>deleteProfileRestrictionReasons</p>
     * Delete Profile Restriction Reasons
     */
    deleteProfileRestrictionReasons(requestParameters: DeleteProfileRestrictionReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Sources. <p><strong>OperationId:</strong>deleteSources</p>
     * Delete Sources
     */
    deleteSourcesRaw(requestParameters: DeleteSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Sources. <p><strong>OperationId:</strong>deleteSources</p>
     * Delete Sources
     */
    deleteSources(requestParameters: DeleteSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Territories. <p><strong>OperationId:</strong>deleteTerritories</p>
     * Delete Territories
     */
    deleteTerritoriesRaw(requestParameters: DeleteTerritoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Territories. <p><strong>OperationId:</strong>deleteTerritories</p>
     * Delete Territories
     */
    deleteTerritories(requestParameters: DeleteTerritoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Titles. <p><strong>OperationId:</strong>deleteTitles</p>
     * Delete Titles
     */
    deleteTitlesRaw(requestParameters: DeleteTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Titles. <p><strong>OperationId:</strong>deleteTitles</p>
     * Delete Titles
     */
    deleteTitles(requestParameters: DeleteTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete VIP Levels. <p><strong>OperationId:</strong>deleteVIPLevels</p>
     * Delete VIP Levels
     */
    deleteVIPLevelsRaw(requestParameters: DeleteVIPLevelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete VIP Levels. <p><strong>OperationId:</strong>deleteVIPLevels</p>
     * Delete VIP Levels
     */
    deleteVIPLevels(requestParameters: DeleteVIPLevelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Account Owners. <p><strong>OperationId:</strong>getAccountOwners</p>
     * Get Account Owners
     */
    getAccountOwnersRaw(requestParameters: GetAccountOwnersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountOwnersDetails>>;
    /**
     * Use this API to get Account Owners. <p><strong>OperationId:</strong>getAccountOwners</p>
     * Get Account Owners
     */
    getAccountOwners(requestParameters: GetAccountOwnersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountOwnersDetails>;
    /**
     * Use this API to get Account Priorities. <p><strong>OperationId:</strong>getAccountPriorities</p>
     * Get Account Priorities
     */
    getAccountPrioritiesRaw(requestParameters: GetAccountPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountPrioritiesDetails>>;
    /**
     * Use this API to get Account Priorities. <p><strong>OperationId:</strong>getAccountPriorities</p>
     * Get Account Priorities
     */
    getAccountPriorities(requestParameters: GetAccountPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountPrioritiesDetails>;
    /**
     * Use this API to get Account Types. <p><strong>OperationId:</strong>getAccountTypes</p>
     * Get Account Types
     */
    getAccountTypesRaw(requestParameters: GetAccountTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountTypesDetails>>;
    /**
     * Use this API to get Account Types. <p><strong>OperationId:</strong>getAccountTypes</p>
     * Get Account Types
     */
    getAccountTypes(requestParameters: GetAccountTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountTypesDetails>;
    /**
     * Use this API to get Address types. <p><strong>OperationId:</strong>getAddressTypes</p>
     * Get Address types
     */
    getAddressTypesRaw(requestParameters: GetAddressTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddressTypesDetails>>;
    /**
     * Use this API to get Address types. <p><strong>OperationId:</strong>getAddressTypes</p>
     * Get Address types
     */
    getAddressTypes(requestParameters: GetAddressTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddressTypesDetails>;
    /**
     * Use this API to get Alternate Language Guest Titles. <p><strong>OperationId:</strong>getAlternateLanguageGuestTitles</p>
     * Get Alternate Language Guest Titles
     */
    getAlternateLanguageGuestTitlesRaw(requestParameters: GetAlternateLanguageGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlternateLanguageGuestTitlesDetails>>;
    /**
     * Use this API to get Alternate Language Guest Titles. <p><strong>OperationId:</strong>getAlternateLanguageGuestTitles</p>
     * Get Alternate Language Guest Titles
     */
    getAlternateLanguageGuestTitles(requestParameters: GetAlternateLanguageGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlternateLanguageGuestTitlesDetails>;
    /**
     * Use this API to get Business Segments. <p><strong>OperationId:</strong>getBusinessSegments</p>
     * Get Business Segments
     */
    getBusinessSegmentsRaw(requestParameters: GetBusinessSegmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BusinessSegmentsDetails>>;
    /**
     * Use this API to get Business Segments. <p><strong>OperationId:</strong>getBusinessSegments</p>
     * Get Business Segments
     */
    getBusinessSegments(requestParameters: GetBusinessSegmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BusinessSegmentsDetails>;
    /**
     * Use this API to get City Postal Codes. Associate countries (and states or provinces if configured for the country) with cities and with postal codes can be utilized to validate addresses.<p><strong>OperationId:</strong>getCityPostalCodes</p>
     * Get city postal codes
     */
    getCityPostalCodesRaw(requestParameters: GetCityPostalCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CityPostalCodesDetails>>;
    /**
     * Use this API to get City Postal Codes. Associate countries (and states or provinces if configured for the country) with cities and with postal codes can be utilized to validate addresses.<p><strong>OperationId:</strong>getCityPostalCodes</p>
     * Get city postal codes
     */
    getCityPostalCodes(requestParameters: GetCityPostalCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CityPostalCodesDetails>;
    /**
     * Use this API to get Company Types. <p><strong>OperationId:</strong>getCompanyTypes</p>
     * Get Company Types
     */
    getCompanyTypesRaw(requestParameters: GetCompanyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompanyTypesDetails>>;
    /**
     * Use this API to get Company Types. <p><strong>OperationId:</strong>getCompanyTypes</p>
     * Get Company Types
     */
    getCompanyTypes(requestParameters: GetCompanyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompanyTypesDetails>;
    /**
     * Use this API to get Competition Codes.  Competition codes enable you to identify other hospitality businesses that are competing with you for an account&apos;s business opportunities.<p><strong>OperationId:</strong>getCompetitionCodes</p>
     * Get competition codes
     */
    getCompetitionCodesRaw(requestParameters: GetCompetitionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompetitionCodesDetails>>;
    /**
     * Use this API to get Competition Codes.  Competition codes enable you to identify other hospitality businesses that are competing with you for an account&apos;s business opportunities.<p><strong>OperationId:</strong>getCompetitionCodes</p>
     * Get competition codes
     */
    getCompetitionCodes(requestParameters: GetCompetitionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompetitionCodesDetails>;
    /**
     * Use this API to get Distance Types. <p><strong>OperationId:</strong>getDistanceTypes</p>
     * Get Distance Types
     */
    getDistanceTypesRaw(requestParameters: GetDistanceTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DistanceTypesDetails>>;
    /**
     * Use this API to get Distance Types. <p><strong>OperationId:</strong>getDistanceTypes</p>
     * Get Distance Types
     */
    getDistanceTypes(requestParameters: GetDistanceTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DistanceTypesDetails>;
    /**
     * Use this API to get Districts. <p><strong>OperationId:</strong>getDistricts</p>
     * Get Districts
     */
    getDistrictsRaw(requestParameters: GetDistrictsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DistrictsDetails>>;
    /**
     * Use this API to get Districts. <p><strong>OperationId:</strong>getDistricts</p>
     * Get Districts
     */
    getDistricts(requestParameters: GetDistrictsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DistrictsDetails>;
    /**
     * Use this API to get Ecertificate Location Types. <p><strong>OperationId:</strong>getEcertificateLocationTypes</p>
     * Get Ecertificate Location Types
     */
    getEcertificateLocationTypesRaw(requestParameters: GetEcertificateLocationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EcertificateLocationTypesDetails>>;
    /**
     * Use this API to get Ecertificate Location Types. <p><strong>OperationId:</strong>getEcertificateLocationTypes</p>
     * Get Ecertificate Location Types
     */
    getEcertificateLocationTypes(requestParameters: GetEcertificateLocationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EcertificateLocationTypesDetails>;
    /**
     * Use this API to get Gender Types. <p><strong>OperationId:</strong>getGenderTypes</p>
     * Get Gender Types
     */
    getGenderTypesRaw(requestParameters: GetGenderTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenderTypes>>;
    /**
     * Use this API to get Gender Types. <p><strong>OperationId:</strong>getGenderTypes</p>
     * Get Gender Types
     */
    getGenderTypes(requestParameters: GetGenderTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenderTypes>;
    /**
     * Use this API to get Guest Statuses. <p><strong>OperationId:</strong>getGuestStatuses</p>
     * Get Guest Statuses
     */
    getGuestStatusesRaw(requestParameters: GetGuestStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestStatusesDetails>>;
    /**
     * Use this API to get Guest Statuses. <p><strong>OperationId:</strong>getGuestStatuses</p>
     * Get Guest Statuses
     */
    getGuestStatuses(requestParameters: GetGuestStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestStatusesDetails>;
    /**
     * Use this API to get Guest Titles. <p><strong>OperationId:</strong>getGuestTitles</p>
     * Get Guest Titles
     */
    getGuestTitlesRaw(requestParameters: GetGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestTitlesDetails>>;
    /**
     * Use this API to get Guest Titles. <p><strong>OperationId:</strong>getGuestTitles</p>
     * Get Guest Titles
     */
    getGuestTitles(requestParameters: GetGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestTitlesDetails>;
    /**
     * Use this API to get Guest Types. <p><strong>OperationId:</strong>getGuestTypes</p>
     * Get Guest Types
     */
    getGuestTypesRaw(requestParameters: GetGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestTypesDetails>>;
    /**
     * Use this API to get Guest Types. <p><strong>OperationId:</strong>getGuestTypes</p>
     * Get Guest Types
     */
    getGuestTypes(requestParameters: GetGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestTypesDetails>;
    /**
     * Use this API to get Identification Types such as passport, driver license, military ID, and so on.<p><strong>OperationId:</strong>getIdentificationTypes</p>
     * Get identification types
     */
    getIdentificationTypesRaw(requestParameters: GetIdentificationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IdentificationTypesDetails>>;
    /**
     * Use this API to get Identification Types such as passport, driver license, military ID, and so on.<p><strong>OperationId:</strong>getIdentificationTypes</p>
     * Get identification types
     */
    getIdentificationTypes(requestParameters: GetIdentificationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IdentificationTypesDetails>;
    /**
     * Use this API to get Immigration Statuses. <p><strong>OperationId:</strong>getImmigrationStatuses</p>
     * Get Immigration Statuses
     */
    getImmigrationStatusesRaw(requestParameters: GetImmigrationStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImmigrationStatusesDetails>>;
    /**
     * Use this API to get Immigration Statuses. <p><strong>OperationId:</strong>getImmigrationStatuses</p>
     * Get Immigration Statuses
     */
    getImmigrationStatuses(requestParameters: GetImmigrationStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImmigrationStatusesDetails>;
    /**
     * Use this API to get Industry Codes. <p><strong>OperationId:</strong>getIndustryCodes</p>
     * Get Industry Codes
     */
    getIndustryCodesRaw(requestParameters: GetIndustryCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IndustryCodesDetails>>;
    /**
     * Use this API to get Industry Codes. <p><strong>OperationId:</strong>getIndustryCodes</p>
     * Get Industry Codes
     */
    getIndustryCodes(requestParameters: GetIndustryCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IndustryCodesDetails>;
    /**
     * Use this API to get Influence Codes. <p><strong>OperationId:</strong>getInfluenceCodes</p>
     * Get Influence Codes
     */
    getInfluenceCodesRaw(requestParameters: GetInfluenceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InfluenceCodesDetails>>;
    /**
     * Use this API to get Influence Codes. <p><strong>OperationId:</strong>getInfluenceCodes</p>
     * Get Influence Codes
     */
    getInfluenceCodes(requestParameters: GetInfluenceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InfluenceCodesDetails>;
    /**
     * Use this API to get Keyword Types. <p><strong>OperationId:</strong>getKeywordTypes</p>
     * Get Keyword Types
     */
    getKeywordTypesRaw(requestParameters: GetKeywordTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KeywordTypesDetails>>;
    /**
     * Use this API to get Keyword Types. <p><strong>OperationId:</strong>getKeywordTypes</p>
     * Get Keyword Types
     */
    getKeywordTypes(requestParameters: GetKeywordTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KeywordTypesDetails>;
    /**
     * Use this API to get Mailing Action Codes. <p><strong>OperationId:</strong>getMailingActionCodes</p>
     * Get Mailing Action Codes
     */
    getMailingActionCodesRaw(requestParameters: GetMailingActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MailingActionCodesDetails>>;
    /**
     * Use this API to get Mailing Action Codes. <p><strong>OperationId:</strong>getMailingActionCodes</p>
     * Get Mailing Action Codes
     */
    getMailingActionCodes(requestParameters: GetMailingActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MailingActionCodesDetails>;
    /**
     * Use this API to get Membership Claim Origins. <p><strong>OperationId:</strong>getMembershipClaimOrigins</p>
     * Get Membership Claim Origins
     */
    getMembershipClaimOriginsRaw(requestParameters: GetMembershipClaimOriginsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MembershipClaimOriginsDetails>>;
    /**
     * Use this API to get Membership Claim Origins. <p><strong>OperationId:</strong>getMembershipClaimOrigins</p>
     * Get Membership Claim Origins
     */
    getMembershipClaimOrigins(requestParameters: GetMembershipClaimOriginsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MembershipClaimOriginsDetails>;
    /**
     * Use this API to get Membership Claim Types. <p><strong>OperationId:</strong>getMembershipClaimTypes</p>
     * Get Membership Claim Types
     */
    getMembershipClaimTypesRaw(requestParameters: GetMembershipClaimTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MembershipClaimTypesDetails>>;
    /**
     * Use this API to get Membership Claim Types. <p><strong>OperationId:</strong>getMembershipClaimTypes</p>
     * Get Membership Claim Types
     */
    getMembershipClaimTypes(requestParameters: GetMembershipClaimTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MembershipClaimTypesDetails>;
    /**
     * Use this API to get Membership Enrollment Codes. <p><strong>OperationId:</strong>getMembershipEnrollmentCodes</p>
     * Get Membership Enrollment Codes
     */
    getMembershipEnrollmentCodesRaw(requestParameters: GetMembershipEnrollmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MembershipEnrollmentCodesDetails>>;
    /**
     * Use this API to get Membership Enrollment Codes. <p><strong>OperationId:</strong>getMembershipEnrollmentCodes</p>
     * Get Membership Enrollment Codes
     */
    getMembershipEnrollmentCodes(requestParameters: GetMembershipEnrollmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MembershipEnrollmentCodesDetails>;
    /**
     * Use this API to get Membership Status Codes. <p><strong>OperationId:</strong>getMembershipStatusCodes</p>
     * Get Membership Status Codes
     */
    getMembershipStatusCodesRaw(requestParameters: GetMembershipStatusCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MembershipStatusCodesDetails>>;
    /**
     * Use this API to get Membership Status Codes. <p><strong>OperationId:</strong>getMembershipStatusCodes</p>
     * Get Membership Status Codes
     */
    getMembershipStatusCodes(requestParameters: GetMembershipStatusCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MembershipStatusCodesDetails>;
    /**
     * Use this API to get Nationalities codes and description configured in OPERA.<p><strong>OperationId:</strong>getNationalities</p>
     * Get nationalities
     */
    getNationalitiesRaw(requestParameters: GetNationalitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NationalitiesDetails>>;
    /**
     * Use this API to get Nationalities codes and description configured in OPERA.<p><strong>OperationId:</strong>getNationalities</p>
     * Get nationalities
     */
    getNationalities(requestParameters: GetNationalitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NationalitiesDetails>;
    /**
     * Use this API to get Owner Teams. <p><strong>OperationId:</strong>getOwnerTeams</p>
     * Get Owner Teams
     */
    getOwnerTeamsRaw(requestParameters: GetOwnerTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OwnerTeamsDetails>>;
    /**
     * Use this API to get Owner Teams. <p><strong>OperationId:</strong>getOwnerTeams</p>
     * Get Owner Teams
     */
    getOwnerTeams(requestParameters: GetOwnerTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OwnerTeamsDetails>;
    /**
     * Use this API to get Pay Days. <p><strong>OperationId:</strong>getPayDays</p>
     * Get Pay Days
     */
    getPayDaysRaw(requestParameters: GetPayDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PayDaysDetails>>;
    /**
     * Use this API to get Pay Days. <p><strong>OperationId:</strong>getPayDays</p>
     * Get Pay Days
     */
    getPayDays(requestParameters: GetPayDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PayDaysDetails>;
    /**
     * Use this API to get Profile Inactive Reasons. <p><strong>OperationId:</strong>getProfileInactiveReasons</p>
     * Get Profile Inactive Reasons
     */
    getProfileInactiveReasonsRaw(requestParameters: GetProfileInactiveReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileInactiveReasonsDetails>>;
    /**
     * Use this API to get Profile Inactive Reasons. <p><strong>OperationId:</strong>getProfileInactiveReasons</p>
     * Get Profile Inactive Reasons
     */
    getProfileInactiveReasons(requestParameters: GetProfileInactiveReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileInactiveReasonsDetails>;
    /**
     * Use this API to get Profile Restriction Reasons. <p><strong>OperationId:</strong>getProfileRestrictionReasons</p>
     * Get Profile Restriction Reasons
     */
    getProfileRestrictionReasonsRaw(requestParameters: GetProfileRestrictionReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProfileRestrictionReasonsDetails>>;
    /**
     * Use this API to get Profile Restriction Reasons. <p><strong>OperationId:</strong>getProfileRestrictionReasons</p>
     * Get Profile Restriction Reasons
     */
    getProfileRestrictionReasons(requestParameters: GetProfileRestrictionReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProfileRestrictionReasonsDetails>;
    /**
     * Use this API to get Sources. <p><strong>OperationId:</strong>getSources</p>
     * Get Sources
     */
    getSourcesRaw(requestParameters: GetSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SourcesDetails>>;
    /**
     * Use this API to get Sources. <p><strong>OperationId:</strong>getSources</p>
     * Get Sources
     */
    getSources(requestParameters: GetSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SourcesDetails>;
    /**
     * Use this API to get States. <p><strong>OperationId:</strong>getStates</p>
     * Get States
     */
    getStatesRaw(requestParameters: GetStatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StatesDetails>>;
    /**
     * Use this API to get States. <p><strong>OperationId:</strong>getStates</p>
     * Get States
     */
    getStates(requestParameters: GetStatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StatesDetails>;
    /**
     * Use this API to get Territories. <p><strong>OperationId:</strong>getTerritories</p>
     * Get Territories
     */
    getTerritoriesRaw(requestParameters: GetTerritoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TerritoriesDetails>>;
    /**
     * Use this API to get Territories. <p><strong>OperationId:</strong>getTerritories</p>
     * Get Territories
     */
    getTerritories(requestParameters: GetTerritoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TerritoriesDetails>;
    /**
     * Use this API to get Titles. <p><strong>OperationId:</strong>getTitles</p>
     * Get Titles
     */
    getTitlesRaw(requestParameters: GetTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TitlesDetails>>;
    /**
     * Use this API to get Titles. <p><strong>OperationId:</strong>getTitles</p>
     * Get Titles
     */
    getTitles(requestParameters: GetTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TitlesDetails>;
    /**
     * Use this API to get Travel Agent Types. <p><strong>OperationId:</strong>getTravelAgentTypes</p>
     * Get Travel Agent Types
     */
    getTravelAgentTypesRaw(requestParameters: GetTravelAgentTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TravelAgentTypesDetails>>;
    /**
     * Use this API to get Travel Agent Types. <p><strong>OperationId:</strong>getTravelAgentTypes</p>
     * Get Travel Agent Types
     */
    getTravelAgentTypes(requestParameters: GetTravelAgentTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TravelAgentTypesDetails>;
    /**
     * Use this API to get VIP Levels. <p><strong>OperationId:</strong>getVIPLevels</p>
     * Get VIP Levels
     */
    getVIPLevelsRaw(requestParameters: GetVIPLevelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VIPLevelsDetails>>;
    /**
     * Use this API to get VIP Levels. <p><strong>OperationId:</strong>getVIPLevels</p>
     * Get VIP Levels
     */
    getVIPLevels(requestParameters: GetVIPLevelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VIPLevelsDetails>;
    /**
     * Use this API to create Account Priorities. <p><strong>OperationId:</strong>postAccountPriorities</p>
     * Create Account Priorities
     */
    postAccountPrioritiesRaw(requestParameters: PostAccountPrioritiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Account Priorities. <p><strong>OperationId:</strong>postAccountPriorities</p>
     * Create Account Priorities
     */
    postAccountPriorities(requestParameters: PostAccountPrioritiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Account Types. <p><strong>OperationId:</strong>postAccountTypes</p>
     * Create Account Types
     */
    postAccountTypesRaw(requestParameters: PostAccountTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Account Types. <p><strong>OperationId:</strong>postAccountTypes</p>
     * Create Account Types
     */
    postAccountTypes(requestParameters: PostAccountTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new Address type. <p><strong>OperationId:</strong>postAddressTypes</p>
     * Create a new Address type
     */
    postAddressTypesRaw(requestParameters: PostAddressTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new Address type. <p><strong>OperationId:</strong>postAddressTypes</p>
     * Create a new Address type
     */
    postAddressTypes(requestParameters: PostAddressTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Alternate Language Guest Titles. <p><strong>OperationId:</strong>postAlternateLanguageGuestTitles</p>
     * Create Alternate Language Guest Titles
     */
    postAlternateLanguageGuestTitlesRaw(requestParameters: PostAlternateLanguageGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Alternate Language Guest Titles. <p><strong>OperationId:</strong>postAlternateLanguageGuestTitles</p>
     * Create Alternate Language Guest Titles
     */
    postAlternateLanguageGuestTitles(requestParameters: PostAlternateLanguageGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Business Segments. <p><strong>OperationId:</strong>postBusinessSegments</p>
     * Create Business Segments
     */
    postBusinessSegmentsRaw(requestParameters: PostBusinessSegmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Business Segments. <p><strong>OperationId:</strong>postBusinessSegments</p>
     * Create Business Segments
     */
    postBusinessSegments(requestParameters: PostBusinessSegmentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create City Postal Codes. <p><strong>OperationId:</strong>postCityPostalCodes</p>
     * Create CityPostalCodes
     */
    postCityPostalCodesRaw(requestParameters: PostCityPostalCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create City Postal Codes. <p><strong>OperationId:</strong>postCityPostalCodes</p>
     * Create CityPostalCodes
     */
    postCityPostalCodes(requestParameters: PostCityPostalCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Company Types. <p><strong>OperationId:</strong>postCompanyTypes</p>
     * Create Company Types
     */
    postCompanyTypesRaw(requestParameters: PostCompanyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Company Types. <p><strong>OperationId:</strong>postCompanyTypes</p>
     * Create Company Types
     */
    postCompanyTypes(requestParameters: PostCompanyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Competition Codes. Competition codes enable you to identify other hospitality businesses that are competing with you for an account&apos;s business opportunities.<p><strong>OperationId:</strong>postCompetitionCodes</p>
     * Create competition codes
     */
    postCompetitionCodesRaw(requestParameters: PostCompetitionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Competition Codes. Competition codes enable you to identify other hospitality businesses that are competing with you for an account&apos;s business opportunities.<p><strong>OperationId:</strong>postCompetitionCodes</p>
     * Create competition codes
     */
    postCompetitionCodes(requestParameters: PostCompetitionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Distance Types. <p><strong>OperationId:</strong>postDistanceTypes</p>
     * Create Distance Types
     */
    postDistanceTypesRaw(requestParameters: PostDistanceTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Distance Types. <p><strong>OperationId:</strong>postDistanceTypes</p>
     * Create Distance Types
     */
    postDistanceTypes(requestParameters: PostDistanceTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Districts. <p><strong>OperationId:</strong>postDistricts</p>
     * Create Districts
     */
    postDistrictsRaw(requestParameters: PostDistrictsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Districts. <p><strong>OperationId:</strong>postDistricts</p>
     * Create Districts
     */
    postDistricts(requestParameters: PostDistrictsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Ecertificate Location Types. <p><strong>OperationId:</strong>postEcertificateLocationTypes</p>
     * Create Ecertificate Location Types
     */
    postEcertificateLocationTypesRaw(requestParameters: PostEcertificateLocationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Ecertificate Location Types. <p><strong>OperationId:</strong>postEcertificateLocationTypes</p>
     * Create Ecertificate Location Types
     */
    postEcertificateLocationTypes(requestParameters: PostEcertificateLocationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Gender Types. <p><strong>OperationId:</strong>postGenderTypes</p>
     * Create Gender Types
     */
    postGenderTypesRaw(requestParameters: PostGenderTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Gender Types. <p><strong>OperationId:</strong>postGenderTypes</p>
     * Create Gender Types
     */
    postGenderTypes(requestParameters: PostGenderTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Guest Statuses. <p><strong>OperationId:</strong>postGuestStatuses</p>
     * Create Guest Statuses
     */
    postGuestStatusesRaw(requestParameters: PostGuestStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Guest Statuses. <p><strong>OperationId:</strong>postGuestStatuses</p>
     * Create Guest Statuses
     */
    postGuestStatuses(requestParameters: PostGuestStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Guest Titles. <p><strong>OperationId:</strong>postGuestTitles</p>
     * Create Guest Titles
     */
    postGuestTitlesRaw(requestParameters: PostGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Guest Titles. <p><strong>OperationId:</strong>postGuestTitles</p>
     * Create Guest Titles
     */
    postGuestTitles(requestParameters: PostGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Guest Types. <p><strong>OperationId:</strong>postGuestTypes</p>
     * Create Guest Types
     */
    postGuestTypesRaw(requestParameters: PostGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Guest Types. <p><strong>OperationId:</strong>postGuestTypes</p>
     * Create Guest Types
     */
    postGuestTypes(requestParameters: PostGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Identification Types. <p><strong>OperationId:</strong>postIdentificationTypes</p>
     * Create Identification Types
     */
    postIdentificationTypesRaw(requestParameters: PostIdentificationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Identification Types. <p><strong>OperationId:</strong>postIdentificationTypes</p>
     * Create Identification Types
     */
    postIdentificationTypes(requestParameters: PostIdentificationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Immigration Statuses. <p><strong>OperationId:</strong>postImmigrationStatuses</p>
     * Create Immigration Statuses
     */
    postImmigrationStatusesRaw(requestParameters: PostImmigrationStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Immigration Statuses. <p><strong>OperationId:</strong>postImmigrationStatuses</p>
     * Create Immigration Statuses
     */
    postImmigrationStatuses(requestParameters: PostImmigrationStatusesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Industry Codes. <p><strong>OperationId:</strong>postIndustryCodes</p>
     * Create Industry Codes
     */
    postIndustryCodesRaw(requestParameters: PostIndustryCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Industry Codes. <p><strong>OperationId:</strong>postIndustryCodes</p>
     * Create Industry Codes
     */
    postIndustryCodes(requestParameters: PostIndustryCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Influence Codes. <p><strong>OperationId:</strong>postInfluenceCodes</p>
     * Create Influence Codes
     */
    postInfluenceCodesRaw(requestParameters: PostInfluenceCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Influence Codes. <p><strong>OperationId:</strong>postInfluenceCodes</p>
     * Create Influence Codes
     */
    postInfluenceCodes(requestParameters: PostInfluenceCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Keyword Types. <p><strong>OperationId:</strong>postKeywordTypes</p>
     * Create Keyword Types
     */
    postKeywordTypesRaw(requestParameters: PostKeywordTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Keyword Types. <p><strong>OperationId:</strong>postKeywordTypes</p>
     * Create Keyword Types
     */
    postKeywordTypes(requestParameters: PostKeywordTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Mailing Action Codes. <p><strong>OperationId:</strong>postMailingActionCodes</p>
     * Create Mailing Action Codes
     */
    postMailingActionCodesRaw(requestParameters: PostMailingActionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Mailing Action Codes. <p><strong>OperationId:</strong>postMailingActionCodes</p>
     * Create Mailing Action Codes
     */
    postMailingActionCodes(requestParameters: PostMailingActionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Membership Claim Origins. <p><strong>OperationId:</strong>postMembershipClaimOrigins</p>
     * Create Membership Claim Origins
     */
    postMembershipClaimOriginsRaw(requestParameters: PostMembershipClaimOriginsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Membership Claim Origins. <p><strong>OperationId:</strong>postMembershipClaimOrigins</p>
     * Create Membership Claim Origins
     */
    postMembershipClaimOrigins(requestParameters: PostMembershipClaimOriginsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Membership Claim Types. <p><strong>OperationId:</strong>postMembershipClaimTypes</p>
     * Create Membership Claim Types
     */
    postMembershipClaimTypesRaw(requestParameters: PostMembershipClaimTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Membership Claim Types. <p><strong>OperationId:</strong>postMembershipClaimTypes</p>
     * Create Membership Claim Types
     */
    postMembershipClaimTypes(requestParameters: PostMembershipClaimTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Membership Enrollment Codes. <p><strong>OperationId:</strong>postMembershipEnrollmentCodes</p>
     * Create Membership Enrollment Codes
     */
    postMembershipEnrollmentCodesRaw(requestParameters: PostMembershipEnrollmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Membership Enrollment Codes. <p><strong>OperationId:</strong>postMembershipEnrollmentCodes</p>
     * Create Membership Enrollment Codes
     */
    postMembershipEnrollmentCodes(requestParameters: PostMembershipEnrollmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Membership Status Codes. <p><strong>OperationId:</strong>postMembershipStatusCodes</p>
     * Create Membership Status Codes
     */
    postMembershipStatusCodesRaw(requestParameters: PostMembershipStatusCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Membership Status Codes. <p><strong>OperationId:</strong>postMembershipStatusCodes</p>
     * Create Membership Status Codes
     */
    postMembershipStatusCodes(requestParameters: PostMembershipStatusCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Nationalities. <p><strong>OperationId:</strong>postNationalities</p>
     * Create Nationalities
     */
    postNationalitiesRaw(requestParameters: PostNationalitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Nationalities. <p><strong>OperationId:</strong>postNationalities</p>
     * Create Nationalities
     */
    postNationalities(requestParameters: PostNationalitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Owner Teams. <p><strong>OperationId:</strong>postOwnerTeams</p>
     * Create Owner Teams
     */
    postOwnerTeamsRaw(requestParameters: PostOwnerTeamsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Owner Teams. <p><strong>OperationId:</strong>postOwnerTeams</p>
     * Create Owner Teams
     */
    postOwnerTeams(requestParameters: PostOwnerTeamsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Pay Days. <p><strong>OperationId:</strong>postPayDays</p>
     * Create Pay Days
     */
    postPayDaysRaw(requestParameters: PostPayDaysOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Pay Days. <p><strong>OperationId:</strong>postPayDays</p>
     * Create Pay Days
     */
    postPayDays(requestParameters: PostPayDaysOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Profile Inactive Reasons. <p><strong>OperationId:</strong>postProfileInactiveReasons</p>
     * Create Profile Inactive Reasons
     */
    postProfileInactiveReasonsRaw(requestParameters: PostProfileInactiveReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Profile Inactive Reasons. <p><strong>OperationId:</strong>postProfileInactiveReasons</p>
     * Create Profile Inactive Reasons
     */
    postProfileInactiveReasons(requestParameters: PostProfileInactiveReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Profile Restriction Reasons. <p><strong>OperationId:</strong>postProfileRestrictionReasons</p>
     * Create Profile Restriction Reasons
     */
    postProfileRestrictionReasonsRaw(requestParameters: PostProfileRestrictionReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Profile Restriction Reasons. <p><strong>OperationId:</strong>postProfileRestrictionReasons</p>
     * Create Profile Restriction Reasons
     */
    postProfileRestrictionReasons(requestParameters: PostProfileRestrictionReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Sources. <p><strong>OperationId:</strong>postSources</p>
     * Create Sources
     */
    postSourcesRaw(requestParameters: PostSourcesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Sources. <p><strong>OperationId:</strong>postSources</p>
     * Create Sources
     */
    postSources(requestParameters: PostSourcesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create States. <p><strong>OperationId:</strong>postStates</p>
     * Create States
     */
    postStatesRaw(requestParameters: PostStatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create States. <p><strong>OperationId:</strong>postStates</p>
     * Create States
     */
    postStates(requestParameters: PostStatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Territories. <p><strong>OperationId:</strong>postTerritories</p>
     * Create Territories
     */
    postTerritoriesRaw(requestParameters: PostTerritoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Territories. <p><strong>OperationId:</strong>postTerritories</p>
     * Create Territories
     */
    postTerritories(requestParameters: PostTerritoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Titles. <p><strong>OperationId:</strong>postTitles</p>
     * Create Titles
     */
    postTitlesRaw(requestParameters: PostTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Titles. <p><strong>OperationId:</strong>postTitles</p>
     * Create Titles
     */
    postTitles(requestParameters: PostTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Travel Agent Types. <p><strong>OperationId:</strong>postTravelAgentTypes</p>
     * Create Travel Agent Types
     */
    postTravelAgentTypesRaw(requestParameters: PostTravelAgentTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Travel Agent Types. <p><strong>OperationId:</strong>postTravelAgentTypes</p>
     * Create Travel Agent Types
     */
    postTravelAgentTypes(requestParameters: PostTravelAgentTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create VIP Levels. <p><strong>OperationId:</strong>postVIPLevels</p>
     * Create VIP Levels
     */
    postVIPLevelsRaw(requestParameters: PostVIPLevelsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create VIP Levels. <p><strong>OperationId:</strong>postVIPLevels</p>
     * Create VIP Levels
     */
    postVIPLevels(requestParameters: PostVIPLevelsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Account Priorities. <p><strong>OperationId:</strong>putAccountPriorities</p>
     * Change Account Priorities
     */
    putAccountPrioritiesRaw(requestParameters: PutAccountPrioritiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Account Priorities. <p><strong>OperationId:</strong>putAccountPriorities</p>
     * Change Account Priorities
     */
    putAccountPriorities(requestParameters: PutAccountPrioritiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Account Types. <p><strong>OperationId:</strong>putAccountTypes</p>
     * Change Account Types
     */
    putAccountTypesRaw(requestParameters: PutAccountTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Account Types. <p><strong>OperationId:</strong>putAccountTypes</p>
     * Change Account Types
     */
    putAccountTypes(requestParameters: PutAccountTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update an existing Address type. <p><strong>OperationId:</strong>putAddressTypes</p>
     * Change an existing Address type
     */
    putAddressTypesRaw(requestParameters: PutAddressTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update an existing Address type. <p><strong>OperationId:</strong>putAddressTypes</p>
     * Change an existing Address type
     */
    putAddressTypes(requestParameters: PutAddressTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Company Types. <p><strong>OperationId:</strong>putCompanyTypes</p>
     * Change Company Types
     */
    putCompanyTypesRaw(requestParameters: PutCompanyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Company Types. <p><strong>OperationId:</strong>putCompanyTypes</p>
     * Change Company Types
     */
    putCompanyTypes(requestParameters: PutCompanyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Competition Codes. <p><strong>OperationId:</strong>putCompetitionCodes</p>
     * Change Competition Codes
     */
    putCompetitionCodesRaw(requestParameters: PutCompetitionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Competition Codes. <p><strong>OperationId:</strong>putCompetitionCodes</p>
     * Change Competition Codes
     */
    putCompetitionCodes(requestParameters: PutCompetitionCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Distance Types. <p><strong>OperationId:</strong>putDistanceTypes</p>
     * Change Distance Types
     */
    putDistanceTypesRaw(requestParameters: PutDistanceTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Distance Types. <p><strong>OperationId:</strong>putDistanceTypes</p>
     * Change Distance Types
     */
    putDistanceTypes(requestParameters: PutDistanceTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Districts. <p><strong>OperationId:</strong>putDistricts</p>
     * Change Districts
     */
    putDistrictsRaw(requestParameters: PutDistrictsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Districts. <p><strong>OperationId:</strong>putDistricts</p>
     * Change Districts
     */
    putDistricts(requestParameters: PutDistrictsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Gender Type. <p><strong>OperationId:</strong>putGenderTypes</p>
     * Change Gender Types
     */
    putGenderTypesRaw(requestParameters: PutGenderTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenderTypesToChange>>;
    /**
     * Use this API to update Gender Type. <p><strong>OperationId:</strong>putGenderTypes</p>
     * Change Gender Types
     */
    putGenderTypes(requestParameters: PutGenderTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenderTypesToChange>;
    /**
     * Use this API to update Guest Titles. <p><strong>OperationId:</strong>putGuestTitles</p>
     * Change Guest Titles
     */
    putGuestTitlesRaw(requestParameters: PutGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Guest Titles. <p><strong>OperationId:</strong>putGuestTitles</p>
     * Change Guest Titles
     */
    putGuestTitles(requestParameters: PutGuestTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Identification Types. <p><strong>OperationId:</strong>putIdentificationTypes</p>
     * Change Identification Types
     */
    putIdentificationTypesRaw(requestParameters: PutIdentificationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Identification Types. <p><strong>OperationId:</strong>putIdentificationTypes</p>
     * Change Identification Types
     */
    putIdentificationTypes(requestParameters: PutIdentificationTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Industry Codes. <p><strong>OperationId:</strong>putIndustryCodes</p>
     * Change Industry Codes
     */
    putIndustryCodesRaw(requestParameters: PutIndustryCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Industry Codes. <p><strong>OperationId:</strong>putIndustryCodes</p>
     * Change Industry Codes
     */
    putIndustryCodes(requestParameters: PutIndustryCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Influence Codes. <p><strong>OperationId:</strong>putInfluenceCodes</p>
     * Change Influence Codes
     */
    putInfluenceCodesRaw(requestParameters: PutInfluenceCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Influence Codes. <p><strong>OperationId:</strong>putInfluenceCodes</p>
     * Change Influence Codes
     */
    putInfluenceCodes(requestParameters: PutInfluenceCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Keyword Types. <p><strong>OperationId:</strong>putKeywordTypes</p>
     * Change Keyword Types
     */
    putKeywordTypesRaw(requestParameters: PutKeywordTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Keyword Types. <p><strong>OperationId:</strong>putKeywordTypes</p>
     * Change Keyword Types
     */
    putKeywordTypes(requestParameters: PutKeywordTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Nationalities. <p><strong>OperationId:</strong>putNationalities</p>
     * Change Nationalities
     */
    putNationalitiesRaw(requestParameters: PutNationalitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Nationalities. <p><strong>OperationId:</strong>putNationalities</p>
     * Change Nationalities
     */
    putNationalities(requestParameters: PutNationalitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Pay Days. <p><strong>OperationId:</strong>putPayDays</p>
     * Change Pay Days
     */
    putPayDaysRaw(requestParameters: PutPayDaysOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Pay Days. <p><strong>OperationId:</strong>putPayDays</p>
     * Change Pay Days
     */
    putPayDays(requestParameters: PutPayDaysOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Profile Inactive Reasons. <p><strong>OperationId:</strong>putProfileInactiveReasons</p>
     * Change Profile Inactive Reasons
     */
    putProfileInactiveReasonsRaw(requestParameters: PutProfileInactiveReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Profile Inactive Reasons. <p><strong>OperationId:</strong>putProfileInactiveReasons</p>
     * Change Profile Inactive Reasons
     */
    putProfileInactiveReasons(requestParameters: PutProfileInactiveReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Profile Restriction Reasons. <p><strong>OperationId:</strong>putProfileRestrictionReasons</p>
     * Change Profile Restriction Reasons
     */
    putProfileRestrictionReasonsRaw(requestParameters: PutProfileRestrictionReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Profile Restriction Reasons. <p><strong>OperationId:</strong>putProfileRestrictionReasons</p>
     * Change Profile Restriction Reasons
     */
    putProfileRestrictionReasons(requestParameters: PutProfileRestrictionReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Sources. <p><strong>OperationId:</strong>putSources</p>
     * Change Sources
     */
    putSourcesRaw(requestParameters: PutSourcesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Sources. <p><strong>OperationId:</strong>putSources</p>
     * Change Sources
     */
    putSources(requestParameters: PutSourcesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Territories. <p><strong>OperationId:</strong>putTerritories</p>
     * Change Territories
     */
    putTerritoriesRaw(requestParameters: PutTerritoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Territories. <p><strong>OperationId:</strong>putTerritories</p>
     * Change Territories
     */
    putTerritories(requestParameters: PutTerritoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Titles. <p><strong>OperationId:</strong>putTitles</p>
     * Change Titles
     */
    putTitlesRaw(requestParameters: PutTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Titles. <p><strong>OperationId:</strong>putTitles</p>
     * Change Titles
     */
    putTitles(requestParameters: PutTitlesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update VIP Levels. <p><strong>OperationId:</strong>putVIPLevels</p>
     * Change VIP Levels
     */
    putVIPLevelsRaw(requestParameters: PutVIPLevelsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update VIP Levels. <p><strong>OperationId:</strong>putVIPLevels</p>
     * Change VIP Levels
     */
    putVIPLevels(requestParameters: PutVIPLevelsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Alternate Language Guest Titles. <p><strong>OperationId:</strong>removeAlternateLanguageGuestTitles</p>
     * Delete Alternate Language Guest Titles
     */
    removeAlternateLanguageGuestTitlesRaw(requestParameters: RemoveAlternateLanguageGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Alternate Language Guest Titles. <p><strong>OperationId:</strong>removeAlternateLanguageGuestTitles</p>
     * Delete Alternate Language Guest Titles
     */
    removeAlternateLanguageGuestTitles(requestParameters: RemoveAlternateLanguageGuestTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Business Segments. <p><strong>OperationId:</strong>removeBusinessSegments</p>
     * Delete Business Segments
     */
    removeBusinessSegmentsRaw(requestParameters: RemoveBusinessSegmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Business Segments. <p><strong>OperationId:</strong>removeBusinessSegments</p>
     * Delete Business Segments
     */
    removeBusinessSegments(requestParameters: RemoveBusinessSegmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete City Postal Codes. <p><strong>OperationId:</strong>removeCityPostalCodes</p>
     * Delete City Postal Codes
     */
    removeCityPostalCodesRaw(requestParameters: RemoveCityPostalCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete City Postal Codes. <p><strong>OperationId:</strong>removeCityPostalCodes</p>
     * Delete City Postal Codes
     */
    removeCityPostalCodes(requestParameters: RemoveCityPostalCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Ecertificate Location Types. <p><strong>OperationId:</strong>removeEcertificateLocationTypes</p>
     * Delete Ecertificate Location Types
     */
    removeEcertificateLocationTypesRaw(requestParameters: RemoveEcertificateLocationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Ecertificate Location Types. <p><strong>OperationId:</strong>removeEcertificateLocationTypes</p>
     * Delete Ecertificate Location Types
     */
    removeEcertificateLocationTypes(requestParameters: RemoveEcertificateLocationTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Guest Statuses. <p><strong>OperationId:</strong>removeGuestStatuses</p>
     * Delete Guest Statuses
     */
    removeGuestStatusesRaw(requestParameters: RemoveGuestStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Guest Statuses. <p><strong>OperationId:</strong>removeGuestStatuses</p>
     * Delete Guest Statuses
     */
    removeGuestStatuses(requestParameters: RemoveGuestStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Guest Types. <p><strong>OperationId:</strong>removeGuestTypes</p>
     * Delete Guest Types
     */
    removeGuestTypesRaw(requestParameters: RemoveGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Guest Types. <p><strong>OperationId:</strong>removeGuestTypes</p>
     * Delete Guest Types
     */
    removeGuestTypes(requestParameters: RemoveGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Immigration Statuses. <p><strong>OperationId:</strong>removeImmigrationStatuses</p>
     * Delete Immigration Statuses
     */
    removeImmigrationStatusesRaw(requestParameters: RemoveImmigrationStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Immigration Statuses. <p><strong>OperationId:</strong>removeImmigrationStatuses</p>
     * Delete Immigration Statuses
     */
    removeImmigrationStatuses(requestParameters: RemoveImmigrationStatusesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Mailing Action Codes. <p><strong>OperationId:</strong>removeMailingActionCodes</p>
     * Delete Mailing Action Codes
     */
    removeMailingActionCodesRaw(requestParameters: RemoveMailingActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Mailing Action Codes. <p><strong>OperationId:</strong>removeMailingActionCodes</p>
     * Delete Mailing Action Codes
     */
    removeMailingActionCodes(requestParameters: RemoveMailingActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Membership Claim Origins. <p><strong>OperationId:</strong>removeMembershipClaimOrigins</p>
     * Delete Membership Claim Origins
     */
    removeMembershipClaimOriginsRaw(requestParameters: RemoveMembershipClaimOriginsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Membership Claim Origins. <p><strong>OperationId:</strong>removeMembershipClaimOrigins</p>
     * Delete Membership Claim Origins
     */
    removeMembershipClaimOrigins(requestParameters: RemoveMembershipClaimOriginsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Membership Claim Types. <p><strong>OperationId:</strong>removeMembershipClaimTypes</p>
     * Delete Membership Claim Types
     */
    removeMembershipClaimTypesRaw(requestParameters: RemoveMembershipClaimTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Membership Claim Types. <p><strong>OperationId:</strong>removeMembershipClaimTypes</p>
     * Delete Membership Claim Types
     */
    removeMembershipClaimTypes(requestParameters: RemoveMembershipClaimTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Membership Enrollment Codes. <p><strong>OperationId:</strong>removeMembershipEnrollmentCodes</p>
     * Delete Membership Enrollment Codes
     */
    removeMembershipEnrollmentCodesRaw(requestParameters: RemoveMembershipEnrollmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Membership Enrollment Codes. <p><strong>OperationId:</strong>removeMembershipEnrollmentCodes</p>
     * Delete Membership Enrollment Codes
     */
    removeMembershipEnrollmentCodes(requestParameters: RemoveMembershipEnrollmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Membership Status Codes. <p><strong>OperationId:</strong>removeMembershipStatusCodes</p>
     * Delete Membership Status Codes
     */
    removeMembershipStatusCodesRaw(requestParameters: RemoveMembershipStatusCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Membership Status Codes. <p><strong>OperationId:</strong>removeMembershipStatusCodes</p>
     * Delete Membership Status Codes
     */
    removeMembershipStatusCodes(requestParameters: RemoveMembershipStatusCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Owner Teams. <p><strong>OperationId:</strong>removeOwnerTeams</p>
     * Delete Owner Teams
     */
    removeOwnerTeamsRaw(requestParameters: RemoveOwnerTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Owner Teams. <p><strong>OperationId:</strong>removeOwnerTeams</p>
     * Delete Owner Teams
     */
    removeOwnerTeams(requestParameters: RemoveOwnerTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Travel Agent Types. <p><strong>OperationId:</strong>removeTravelAgentTypes</p>
     * Delete Travel Agent Types
     */
    removeTravelAgentTypesRaw(requestParameters: RemoveTravelAgentTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Travel Agent Types. <p><strong>OperationId:</strong>removeTravelAgentTypes</p>
     * Delete Travel Agent Types
     */
    removeTravelAgentTypes(requestParameters: RemoveTravelAgentTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
