"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelInfoTypeCommunicationToJSON = exports.HotelInfoTypeCommunicationFromJSONTyped = exports.HotelInfoTypeCommunicationFromJSON = exports.instanceOfHotelInfoTypeCommunication = void 0;
const runtime_1 = require("../runtime");
const TelephoneType_1 = require("./TelephoneType");
const URLType_1 = require("./URLType");
/**
 * Check if a given object implements the HotelInfoTypeCommunication interface.
 */
function instanceOfHotelInfoTypeCommunication(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelInfoTypeCommunication = instanceOfHotelInfoTypeCommunication;
function HotelInfoTypeCommunicationFromJSON(json) {
    return HotelInfoTypeCommunicationFromJSONTyped(json, false);
}
exports.HotelInfoTypeCommunicationFromJSON = HotelInfoTypeCommunicationFromJSON;
function HotelInfoTypeCommunicationFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'emailAddress': !(0, runtime_1.exists)(json, 'emailAddress') ? undefined : json['emailAddress'],
        'faxNumber': !(0, runtime_1.exists)(json, 'faxNumber') ? undefined : (0, TelephoneType_1.TelephoneTypeFromJSON)(json['faxNumber']),
        'phoneNumber': !(0, runtime_1.exists)(json, 'phoneNumber') ? undefined : (0, TelephoneType_1.TelephoneTypeFromJSON)(json['phoneNumber']),
        'tollFreeNumber': !(0, runtime_1.exists)(json, 'tollFreeNumber') ? undefined : (0, TelephoneType_1.TelephoneTypeFromJSON)(json['tollFreeNumber']),
        'webPage': !(0, runtime_1.exists)(json, 'webPage') ? undefined : (0, URLType_1.URLTypeFromJSON)(json['webPage']),
    };
}
exports.HotelInfoTypeCommunicationFromJSONTyped = HotelInfoTypeCommunicationFromJSONTyped;
function HotelInfoTypeCommunicationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'emailAddress': value.emailAddress,
        'faxNumber': (0, TelephoneType_1.TelephoneTypeToJSON)(value.faxNumber),
        'phoneNumber': (0, TelephoneType_1.TelephoneTypeToJSON)(value.phoneNumber),
        'tollFreeNumber': (0, TelephoneType_1.TelephoneTypeToJSON)(value.tollFreeNumber),
        'webPage': (0, URLType_1.URLTypeToJSON)(value.webPage),
    };
}
exports.HotelInfoTypeCommunicationToJSON = HotelInfoTypeCommunicationToJSON;
