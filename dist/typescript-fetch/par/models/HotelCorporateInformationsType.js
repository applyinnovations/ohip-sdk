"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelCorporateInformationsTypeToJSON = exports.HotelCorporateInformationsTypeFromJSONTyped = exports.HotelCorporateInformationsTypeFromJSON = exports.instanceOfHotelCorporateInformationsType = void 0;
const runtime_1 = require("../runtime");
const PrimaryCodesType_1 = require("./PrimaryCodesType");
/**
 * Check if a given object implements the HotelCorporateInformationsType interface.
 */
function instanceOfHotelCorporateInformationsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelCorporateInformationsType = instanceOfHotelCorporateInformationsType;
function HotelCorporateInformationsTypeFromJSON(json) {
    return HotelCorporateInformationsTypeFromJSONTyped(json, false);
}
exports.HotelCorporateInformationsTypeFromJSON = HotelCorporateInformationsTypeFromJSON;
function HotelCorporateInformationsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'brandCode': !(0, runtime_1.exists)(json, 'brandCode') ? undefined : json['brandCode'],
        'businessUnit': !(0, runtime_1.exists)(json, 'businessUnit') ? undefined : (0, PrimaryCodesType_1.PrimaryCodesTypeFromJSON)(json['businessUnit']),
        'departmentCode': !(0, runtime_1.exists)(json, 'departmentCode') ? undefined : (0, PrimaryCodesType_1.PrimaryCodesTypeFromJSON)(json['departmentCode']),
        'division': !(0, runtime_1.exists)(json, 'division') ? undefined : (0, PrimaryCodesType_1.PrimaryCodesTypeFromJSON)(json['division']),
        'hotelCategory': !(0, runtime_1.exists)(json, 'hotelCategory') ? undefined : json['hotelCategory'],
        'opertingUnit': !(0, runtime_1.exists)(json, 'opertingUnit') ? undefined : (0, PrimaryCodesType_1.PrimaryCodesTypeFromJSON)(json['opertingUnit']),
    };
}
exports.HotelCorporateInformationsTypeFromJSONTyped = HotelCorporateInformationsTypeFromJSONTyped;
function HotelCorporateInformationsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'brandCode': value.brandCode,
        'businessUnit': (0, PrimaryCodesType_1.PrimaryCodesTypeToJSON)(value.businessUnit),
        'departmentCode': (0, PrimaryCodesType_1.PrimaryCodesTypeToJSON)(value.departmentCode),
        'division': (0, PrimaryCodesType_1.PrimaryCodesTypeToJSON)(value.division),
        'hotelCategory': value.hotelCategory,
        'opertingUnit': (0, PrimaryCodesType_1.PrimaryCodesTypeToJSON)(value.opertingUnit),
    };
}
exports.HotelCorporateInformationsTypeToJSON = HotelCorporateInformationsTypeToJSON;
