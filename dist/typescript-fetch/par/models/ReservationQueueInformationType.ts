/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QueueTextInfoType } from './QueueTextInfoType';
import {
    QueueTextInfoTypeFromJSON,
    QueueTextInfoTypeFromJSONTyped,
    QueueTextInfoTypeToJSON,
} from './QueueTextInfoType';
import type { ReservationQueueInformationTypeTimeSpan } from './ReservationQueueInformationTypeTimeSpan';
import {
    ReservationQueueInformationTypeTimeSpanFromJSON,
    ReservationQueueInformationTypeTimeSpanFromJSONTyped,
    ReservationQueueInformationTypeTimeSpanToJSON,
} from './ReservationQueueInformationTypeTimeSpan';

/**
 * Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.
 * @export
 * @interface ReservationQueueInformationType
 */
export interface ReservationQueueInformationType {
    /**
     * 
     * @type {ReservationQueueInformationTypeTimeSpan}
     * @memberof ReservationQueueInformationType
     */
    timeSpan?: ReservationQueueInformationTypeTimeSpan;
    /**
     * 
     * @type {QueueTextInfoType}
     * @memberof ReservationQueueInformationType
     */
    guestTextInfo?: QueueTextInfoType;
    /**
     * The Queue Priority given to this reservation.
     * @type {number}
     * @memberof ReservationQueueInformationType
     */
    priority?: number;
    /**
     * The average time, in seconds, a reservation was on queue prior to Check-In.
     * @type {number}
     * @memberof ReservationQueueInformationType
     */
    averageQueueTimeToCheckIn?: number;
    /**
     * The average time, in seconds, of the reservations currently in queue.
     * @type {number}
     * @memberof ReservationQueueInformationType
     */
    averageQueueTimeCurrentReservations?: number;
    /**
     * The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.
     * @type {Date}
     * @memberof ReservationQueueInformationType
     */
    queueDate?: Date;
}

/**
 * Check if a given object implements the ReservationQueueInformationType interface.
 */
export function instanceOfReservationQueueInformationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReservationQueueInformationTypeFromJSON(json: any): ReservationQueueInformationType {
    return ReservationQueueInformationTypeFromJSONTyped(json, false);
}

export function ReservationQueueInformationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationQueueInformationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timeSpan': !exists(json, 'timeSpan') ? undefined : ReservationQueueInformationTypeTimeSpanFromJSON(json['timeSpan']),
        'guestTextInfo': !exists(json, 'guestTextInfo') ? undefined : QueueTextInfoTypeFromJSON(json['guestTextInfo']),
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'averageQueueTimeToCheckIn': !exists(json, 'averageQueueTimeToCheckIn') ? undefined : json['averageQueueTimeToCheckIn'],
        'averageQueueTimeCurrentReservations': !exists(json, 'averageQueueTimeCurrentReservations') ? undefined : json['averageQueueTimeCurrentReservations'],
        'queueDate': !exists(json, 'queueDate') ? undefined : (new Date(json['queueDate'])),
    };
}

export function ReservationQueueInformationTypeToJSON(value?: ReservationQueueInformationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timeSpan': ReservationQueueInformationTypeTimeSpanToJSON(value.timeSpan),
        'guestTextInfo': QueueTextInfoTypeToJSON(value.guestTextInfo),
        'priority': value.priority,
        'averageQueueTimeToCheckIn': value.averageQueueTimeToCheckIn,
        'averageQueueTimeCurrentReservations': value.averageQueueTimeCurrentReservations,
        'queueDate': value.queueDate === undefined ? undefined : (value.queueDate.toISOString().substr(0,10)),
    };
}

