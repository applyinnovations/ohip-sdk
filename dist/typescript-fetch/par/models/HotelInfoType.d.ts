/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AlternateHotelsType } from './AlternateHotelsType';
import type { HotelAttractionsType } from './HotelAttractionsType';
import type { HotelContactsType } from './HotelContactsType';
import type { HotelCorporateInformationsType } from './HotelCorporateInformationsType';
import type { HotelEventSpacesType } from './HotelEventSpacesType';
import type { HotelInfoTypeAccommodationDetails } from './HotelInfoTypeAccommodationDetails';
import type { HotelInfoTypeAddress } from './HotelInfoTypeAddress';
import type { HotelInfoTypeCommunication } from './HotelInfoTypeCommunication';
import type { HotelInfoTypeGeneralInformation } from './HotelInfoTypeGeneralInformation';
import type { HotelInfoTypePrimaryDetails } from './HotelInfoTypePrimaryDetails';
import type { HotelInfoTypePropertyControls } from './HotelInfoTypePropertyControls';
import type { HotelNotesType } from './HotelNotesType';
import type { HotelRateRangesType } from './HotelRateRangesType';
import type { HotelRestaurantsType } from './HotelRestaurantsType';
import type { MeetingRoomsType } from './MeetingRoomsType';
/**
 * Contains the basic configuration information about a Hotel.
 * @export
 * @interface HotelInfoType
 */
export interface HotelInfoType {
    /**
     *
     * @type {HotelInfoTypeAccommodationDetails}
     * @memberof HotelInfoType
     */
    accommodationDetails?: HotelInfoTypeAccommodationDetails;
    /**
     *
     * @type {HotelInfoTypeAddress}
     * @memberof HotelInfoType
     */
    address?: HotelInfoTypeAddress;
    /**
     *
     * @type {AlternateHotelsType}
     * @memberof HotelInfoType
     */
    alternateHotels?: AlternateHotelsType;
    /**
     *
     * @type {HotelAttractionsType}
     * @memberof HotelInfoType
     */
    attractions?: HotelAttractionsType;
    /**
     * The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.
     * @type {string}
     * @memberof HotelInfoType
     */
    chainCode?: string;
    /**
     * The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).
     * @type {string}
     * @memberof HotelInfoType
     */
    chainName?: string;
    /**
     *
     * @type {HotelInfoTypeCommunication}
     * @memberof HotelInfoType
     */
    communication?: HotelInfoTypeCommunication;
    /**
     *
     * @type {HotelInfoTypeGeneralInformation}
     * @memberof HotelInfoType
     */
    generalInformation?: HotelInfoTypeGeneralInformation;
    /**
     * The IATA city code; for example DCA, ORD.
     * @type {string}
     * @memberof HotelInfoType
     */
    hotelCityCode?: string;
    /**
     * A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.
     * @type {string}
     * @memberof HotelInfoType
     */
    hotelCodeContext?: string;
    /**
     *
     * @type {HotelContactsType}
     * @memberof HotelInfoType
     */
    hotelContacts?: HotelContactsType;
    /**
     *
     * @type {HotelCorporateInformationsType}
     * @memberof HotelInfoType
     */
    hotelCorporateInformations?: HotelCorporateInformationsType;
    /**
     *
     * @type {HotelEventSpacesType}
     * @memberof HotelInfoType
     */
    hotelEventSpaces?: HotelEventSpacesType;
    /**
     * The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.
     * @type {string}
     * @memberof HotelInfoType
     */
    hotelId?: string;
    /**
     * A text field used to communicate the proper name of the hotel.
     * @type {string}
     * @memberof HotelInfoType
     */
    hotelName?: string;
    /**
     *
     * @type {HotelNotesType}
     * @memberof HotelInfoType
     */
    hotelNotes?: HotelNotesType;
    /**
     *
     * @type {HotelRateRangesType}
     * @memberof HotelInfoType
     */
    hotelRateRanges?: HotelRateRangesType;
    /**
     *
     * @type {HotelRestaurantsType}
     * @memberof HotelInfoType
     */
    hotelRestaurants?: HotelRestaurantsType;
    /**
     *
     * @type {MeetingRoomsType}
     * @memberof HotelInfoType
     */
    meetingRooms?: MeetingRoomsType;
    /**
     *
     * @type {HotelInfoTypePrimaryDetails}
     * @memberof HotelInfoType
     */
    primaryDetails?: HotelInfoTypePrimaryDetails;
    /**
     *
     * @type {HotelInfoTypePropertyControls}
     * @memberof HotelInfoType
     */
    propertyControls?: HotelInfoTypePropertyControls;
}
/**
 * Check if a given object implements the HotelInfoType interface.
 */
export declare function instanceOfHotelInfoType(value: object): boolean;
export declare function HotelInfoTypeFromJSON(json: any): HotelInfoType;
export declare function HotelInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelInfoType;
export declare function HotelInfoTypeToJSON(value?: HotelInfoType | null): any;
