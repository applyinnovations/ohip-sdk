/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AddressType } from './AddressType';
import type { ChannelSummaryInfoType } from './ChannelSummaryInfoType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { CurrencyExchangeRateType } from './CurrencyExchangeRateType';
import type { HotelAmenityType } from './HotelAmenityType';
import type { RateRoomDetailsType } from './RateRoomDetailsType';
import type { RelativePositionType } from './RelativePositionType';
import type { SellMessagesType } from './SellMessagesType';
import type { TelephoneType } from './TelephoneType';
/**
 *
 * @export
 * @interface HotelSummaryInfoType
 */
export interface HotelSummaryInfoType {
    /**
     *
     * @type {AddressType}
     * @memberof HotelSummaryInfoType
     */
    address?: AddressType;
    /**
     *
     * @type {Array<TelephoneType>}
     * @memberof HotelSummaryInfoType
     */
    contactNumbers?: Array<TelephoneType>;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof HotelSummaryInfoType
     */
    minRate?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof HotelSummaryInfoType
     */
    maxRate?: CurrencyAmountType;
    /**
     *
     * @type {RelativePositionType}
     * @memberof HotelSummaryInfoType
     */
    relativePosition?: RelativePositionType;
    /**
     *
     * @type {Array<HotelAmenityType>}
     * @memberof HotelSummaryInfoType
     */
    hotelAmenities?: Array<HotelAmenityType>;
    /**
     * True if the hotel has any scheduled events within the requested date range.
     * @type {boolean}
     * @memberof HotelSummaryInfoType
     */
    event?: boolean;
    /**
     *
     * @type {RateRoomDetailsType}
     * @memberof HotelSummaryInfoType
     */
    rateRoomDetails?: RateRoomDetailsType;
    /**
     *
     * @type {ChannelSummaryInfoType}
     * @memberof HotelSummaryInfoType
     */
    channelSummaryInfo?: ChannelSummaryInfoType;
    /**
     *
     * @type {SellMessagesType}
     * @memberof HotelSummaryInfoType
     */
    sellMessages?: SellMessagesType;
    /**
     * Exchange Rate information for a currency code.
     * @type {Array<CurrencyExchangeRateType>}
     * @memberof HotelSummaryInfoType
     */
    currencyExchangeRates?: Array<CurrencyExchangeRateType>;
    /**
     * The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    chainCode?: string;
    /**
     * The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    hotelId?: string;
    /**
     * The IATA city code; for example DCA, ORD.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    hotelCityCode?: string;
    /**
     * A text field used to communicate the proper name of the hotel.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    hotelName?: string;
    /**
     * A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    hotelCodeContext?: string;
    /**
     * The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    chainName?: string;
    /**
     *
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    hotelType?: string;
    /**
     *
     * @type {boolean}
     * @memberof HotelSummaryInfoType
     */
    negotiated?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof HotelSummaryInfoType
     */
    alternate?: boolean;
    /**
     *
     * @type {number}
     * @memberof HotelSummaryInfoType
     */
    displayOrder?: number;
    /**
     *
     * @type {number}
     * @memberof HotelSummaryInfoType
     */
    inventoryRooms?: number;
    /**
     *
     * @type {number}
     * @memberof HotelSummaryInfoType
     */
    availableRooms?: number;
    /**
     * The official check in time of the Hotel.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    checkInTime?: string;
    /**
     * The official check out time of the Hotel.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    checkOutTime?: string;
    /**
     * Time zone region of the hotel.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    timeZoneRegion?: string;
    /**
     * Provides the hotel's currency code.
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    currencyCode?: string;
    /**
     * Represents the total number of events in a calendar for a hotel.
     * @type {number}
     * @memberof HotelSummaryInfoType
     */
    numberOfEvents?: number;
    /**
     * Website address for a resort or property
     * @type {string}
     * @memberof HotelSummaryInfoType
     */
    websiteAddress?: string;
}
/**
 * Check if a given object implements the HotelSummaryInfoType interface.
 */
export declare function instanceOfHotelSummaryInfoType(value: object): boolean;
export declare function HotelSummaryInfoTypeFromJSON(json: any): HotelSummaryInfoType;
export declare function HotelSummaryInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelSummaryInfoType;
export declare function HotelSummaryInfoTypeToJSON(value?: HotelSummaryInfoType | null): any;
