"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomTypeInfoTypeToJSON = exports.RoomTypeInfoTypeFromJSONTyped = exports.RoomTypeInfoTypeFromJSON = exports.instanceOfRoomTypeInfoType = void 0;
const runtime_1 = require("../runtime");
const BookingChannelMappingType_1 = require("./BookingChannelMappingType");
const RoomFeatureType_1 = require("./RoomFeatureType");
const RoomTypeAttributesType_1 = require("./RoomTypeAttributesType");
/**
 * Check if a given object implements the RoomTypeInfoType interface.
 */
function instanceOfRoomTypeInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomTypeInfoType = instanceOfRoomTypeInfoType;
function RoomTypeInfoTypeFromJSON(json) {
    return RoomTypeInfoTypeFromJSONTyped(json, false);
}
exports.RoomTypeInfoTypeFromJSON = RoomTypeInfoTypeFromJSON;
function RoomTypeInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'longDescription': !(0, runtime_1.exists)(json, 'longDescription') ? undefined : json['longDescription'],
        'webName': !(0, runtime_1.exists)(json, 'webName') ? undefined : json['webName'],
        'webPage': !(0, runtime_1.exists)(json, 'webPage') ? undefined : json['webPage'],
        'roomFeatures': !(0, runtime_1.exists)(json, 'roomFeatures') ? undefined : (json['roomFeatures'].map(RoomFeatureType_1.RoomFeatureTypeFromJSON)),
        'roomTypeAttributes': !(0, runtime_1.exists)(json, 'roomTypeAttributes') ? undefined : (0, RoomTypeAttributesType_1.RoomTypeAttributesTypeFromJSON)(json['roomTypeAttributes']),
        'bookingChannelMappings': !(0, runtime_1.exists)(json, 'bookingChannelMappings') ? undefined : (json['bookingChannelMappings'].map(BookingChannelMappingType_1.BookingChannelMappingTypeFromJSON)),
        'bedTypeCodes': !(0, runtime_1.exists)(json, 'bedTypeCodes') ? undefined : json['bedTypeCodes'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'roomClass': !(0, runtime_1.exists)(json, 'roomClass') ? undefined : json['roomClass'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'suite': !(0, runtime_1.exists)(json, 'suite') ? undefined : json['suite'],
        'component': !(0, runtime_1.exists)(json, 'component') ? undefined : json['component'],
        'invBlockCode': !(0, runtime_1.exists)(json, 'invBlockCode') ? undefined : json['invBlockCode'],
        'roomViewCode': !(0, runtime_1.exists)(json, 'roomViewCode') ? undefined : json['roomViewCode'],
        'promotionCode': !(0, runtime_1.exists)(json, 'promotionCode') ? undefined : json['promotionCode'],
        'roomQualifierCode': !(0, runtime_1.exists)(json, 'roomQualifierCode') ? undefined : json['roomQualifierCode'],
        'roomQualifierMatchIndicator': !(0, runtime_1.exists)(json, 'roomQualifierMatchIndicator') ? undefined : json['roomQualifierMatchIndicator'],
    };
}
exports.RoomTypeInfoTypeFromJSONTyped = RoomTypeInfoTypeFromJSONTyped;
function RoomTypeInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'longDescription': value.longDescription,
        'webName': value.webName,
        'webPage': value.webPage,
        'roomFeatures': value.roomFeatures === undefined ? undefined : (value.roomFeatures.map(RoomFeatureType_1.RoomFeatureTypeToJSON)),
        'roomTypeAttributes': (0, RoomTypeAttributesType_1.RoomTypeAttributesTypeToJSON)(value.roomTypeAttributes),
        'bookingChannelMappings': value.bookingChannelMappings === undefined ? undefined : (value.bookingChannelMappings.map(BookingChannelMappingType_1.BookingChannelMappingTypeToJSON)),
        'bedTypeCodes': value.bedTypeCodes,
        'roomType': value.roomType,
        'hotelId': value.hotelId,
        'roomClass': value.roomClass,
        'description': value.description,
        'suite': value.suite,
        'component': value.component,
        'invBlockCode': value.invBlockCode,
        'roomViewCode': value.roomViewCode,
        'promotionCode': value.promotionCode,
        'roomQualifierCode': value.roomQualifierCode,
        'roomQualifierMatchIndicator': value.roomQualifierMatchIndicator,
    };
}
exports.RoomTypeInfoTypeToJSON = RoomTypeInfoTypeToJSON;
