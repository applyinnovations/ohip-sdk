"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RatePlanChannelInfoTypeRatePlanIdToJSON = exports.RatePlanChannelInfoTypeRatePlanIdFromJSONTyped = exports.RatePlanChannelInfoTypeRatePlanIdFromJSON = exports.instanceOfRatePlanChannelInfoTypeRatePlanId = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the RatePlanChannelInfoTypeRatePlanId interface.
 */
function instanceOfRatePlanChannelInfoTypeRatePlanId(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRatePlanChannelInfoTypeRatePlanId = instanceOfRatePlanChannelInfoTypeRatePlanId;
function RatePlanChannelInfoTypeRatePlanIdFromJSON(json) {
    return RatePlanChannelInfoTypeRatePlanIdFromJSONTyped(json, false);
}
exports.RatePlanChannelInfoTypeRatePlanIdFromJSON = RatePlanChannelInfoTypeRatePlanIdFromJSON;
function RatePlanChannelInfoTypeRatePlanIdFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'idContext': !(0, runtime_1.exists)(json, 'idContext') ? undefined : json['idContext'],
        'idExtension': !(0, runtime_1.exists)(json, 'idExtension') ? undefined : json['idExtension'],
        'instance': !(0, runtime_1.exists)(json, 'instance') ? undefined : json['instance'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
    };
}
exports.RatePlanChannelInfoTypeRatePlanIdFromJSONTyped = RatePlanChannelInfoTypeRatePlanIdFromJSONTyped;
function RatePlanChannelInfoTypeRatePlanIdToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'idContext': value.idContext,
        'idExtension': value.idExtension,
        'instance': value.instance,
        'type': value.type,
        'url': value.url,
    };
}
exports.RatePlanChannelInfoTypeRatePlanIdToJSON = RatePlanChannelInfoTypeRatePlanIdToJSON;
