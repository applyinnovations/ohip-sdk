"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestrictionSetHistoryTypeToJSON = exports.RestrictionSetHistoryTypeFromJSONTyped = exports.RestrictionSetHistoryTypeFromJSON = exports.instanceOfRestrictionSetHistoryType = void 0;
const runtime_1 = require("../runtime");
const RestrictionControlType_1 = require("./RestrictionControlType");
const RestrictionStatusType_1 = require("./RestrictionStatusType");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the RestrictionSetHistoryType interface.
 */
function instanceOfRestrictionSetHistoryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRestrictionSetHistoryType = instanceOfRestrictionSetHistoryType;
function RestrictionSetHistoryTypeFromJSON(json) {
    return RestrictionSetHistoryTypeFromJSONTyped(json, false);
}
exports.RestrictionSetHistoryTypeFromJSON = RestrictionSetHistoryTypeFromJSON;
function RestrictionSetHistoryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'actionType': !(0, runtime_1.exists)(json, 'actionType') ? undefined : json['actionType'],
        'actualTimeSpan': !(0, runtime_1.exists)(json, 'actualTimeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['actualTimeSpan']),
        'appliedDate': !(0, runtime_1.exists)(json, 'appliedDate') ? undefined : json['appliedDate'],
        'end': !(0, runtime_1.exists)(json, 'end') ? undefined : (new Date(json['end'])),
        'friday': !(0, runtime_1.exists)(json, 'friday') ? undefined : json['friday'],
        'logUserId': !(0, runtime_1.exists)(json, 'logUserId') ? undefined : json['logUserId'],
        'logUserName': !(0, runtime_1.exists)(json, 'logUserName') ? undefined : json['logUserName'],
        'monday': !(0, runtime_1.exists)(json, 'monday') ? undefined : json['monday'],
        'onRequest': !(0, runtime_1.exists)(json, 'onRequest') ? undefined : json['onRequest'],
        'restrictionControl': !(0, runtime_1.exists)(json, 'restrictionControl') ? undefined : (0, RestrictionControlType_1.RestrictionControlTypeFromJSON)(json['restrictionControl']),
        'restrictionStatus': !(0, runtime_1.exists)(json, 'restrictionStatus') ? undefined : (0, RestrictionStatusType_1.RestrictionStatusTypeFromJSON)(json['restrictionStatus']),
        'saturday': !(0, runtime_1.exists)(json, 'saturday') ? undefined : json['saturday'],
        'start': !(0, runtime_1.exists)(json, 'start') ? undefined : (new Date(json['start'])),
        'sunday': !(0, runtime_1.exists)(json, 'sunday') ? undefined : json['sunday'],
        'thursday': !(0, runtime_1.exists)(json, 'thursday') ? undefined : json['thursday'],
        'tuesday': !(0, runtime_1.exists)(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !(0, runtime_1.exists)(json, 'wednesday') ? undefined : json['wednesday'],
    };
}
exports.RestrictionSetHistoryTypeFromJSONTyped = RestrictionSetHistoryTypeFromJSONTyped;
function RestrictionSetHistoryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'actionType': value.actionType,
        'actualTimeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.actualTimeSpan),
        'appliedDate': value.appliedDate,
        'end': value.end === undefined ? undefined : (value.end.toISOString().substring(0, 10)),
        'friday': value.friday,
        'logUserId': value.logUserId,
        'logUserName': value.logUserName,
        'monday': value.monday,
        'onRequest': value.onRequest,
        'restrictionControl': (0, RestrictionControlType_1.RestrictionControlTypeToJSON)(value.restrictionControl),
        'restrictionStatus': (0, RestrictionStatusType_1.RestrictionStatusTypeToJSON)(value.restrictionStatus),
        'saturday': value.saturday,
        'start': value.start === undefined ? undefined : (value.start.toISOString().substring(0, 10)),
        'sunday': value.sunday,
        'thursday': value.thursday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
    };
}
exports.RestrictionSetHistoryTypeToJSON = RestrictionSetHistoryTypeToJSON;
