"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlternateAvailDateTypeToJSON = exports.AlternateAvailDateTypeFromJSONTyped = exports.AlternateAvailDateTypeFromJSON = exports.instanceOfAlternateAvailDateType = void 0;
const runtime_1 = require("../runtime");
const AvailabilityStatusType_1 = require("./AvailabilityStatusType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the AlternateAvailDateType interface.
 */
function instanceOfAlternateAvailDateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAlternateAvailDateType = instanceOfAlternateAvailDateType;
function AlternateAvailDateTypeFromJSON(json) {
    return AlternateAvailDateTypeFromJSONTyped(json, false);
}
exports.AlternateAvailDateTypeFromJSON = AlternateAvailDateTypeFromJSON;
function AlternateAvailDateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'date': !(0, runtime_1.exists)(json, 'date') ? undefined : json['date'],
        'rateAmount': !(0, runtime_1.exists)(json, 'rateAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['rateAmount']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, AvailabilityStatusType_1.AvailabilityStatusTypeFromJSON)(json['status']),
    };
}
exports.AlternateAvailDateTypeFromJSONTyped = AlternateAvailDateTypeFromJSONTyped;
function AlternateAvailDateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'date': value.date,
        'rateAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.rateAmount),
        'status': (0, AvailabilityStatusType_1.AvailabilityStatusTypeToJSON)(value.status),
    };
}
exports.AlternateAvailDateTypeToJSON = AlternateAvailDateTypeToJSON;
