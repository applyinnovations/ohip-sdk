/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HotelAmenityType
 */
export interface HotelAmenityType {
    /**
     * 
     * @type {string}
     * @memberof HotelAmenityType
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelAmenityType
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelAmenityType
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof HotelAmenityType
     */
    displayOrder?: number;
}

/**
 * Check if a given object implements the HotelAmenityType interface.
 */
export function instanceOfHotelAmenityType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelAmenityTypeFromJSON(json: any): HotelAmenityType {
    return HotelAmenityTypeFromJSONTyped(json, false);
}

export function HotelAmenityTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelAmenityType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'displayOrder': !exists(json, 'displayOrder') ? undefined : json['displayOrder'],
    };
}

export function HotelAmenityTypeToJSON(value?: HotelAmenityType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'code': value.code,
        'type': value.type,
        'displayOrder': value.displayOrder,
    };
}

