"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileSubscriptionTypeToJSON = exports.ProfileSubscriptionTypeFromJSONTyped = exports.ProfileSubscriptionTypeFromJSON = exports.instanceOfProfileSubscriptionType = void 0;
const runtime_1 = require("../runtime");
const ProfileId_1 = require("./ProfileId");
const ProfileSubscriptionTypeProfileInfo_1 = require("./ProfileSubscriptionTypeProfileInfo");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ProfileSubscriptionType interface.
 */
function instanceOfProfileSubscriptionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileSubscriptionType = instanceOfProfileSubscriptionType;
function ProfileSubscriptionTypeFromJSON(json) {
    return ProfileSubscriptionTypeFromJSONTyped(json, false);
}
exports.ProfileSubscriptionTypeFromJSON = ProfileSubscriptionTypeFromJSON;
function ProfileSubscriptionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'externalProfileId': !(0, runtime_1.exists)(json, 'externalProfileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['externalProfileId']),
        'profileInfo': !(0, runtime_1.exists)(json, 'profileInfo') ? undefined : (0, ProfileSubscriptionTypeProfileInfo_1.ProfileSubscriptionTypeProfileInfoFromJSON)(json['profileInfo']),
        'distributed': !(0, runtime_1.exists)(json, 'distributed') ? undefined : json['distributed'],
        'force': !(0, runtime_1.exists)(json, 'force') ? undefined : json['force'],
        'subscriptionDate': !(0, runtime_1.exists)(json, 'subscriptionDate') ? undefined : json['subscriptionDate'],
        'lastDistributionDate': !(0, runtime_1.exists)(json, 'lastDistributionDate') ? undefined : json['lastDistributionDate'],
        'lastExternalUpdateDate': !(0, runtime_1.exists)(json, 'lastExternalUpdateDate') ? undefined : json['lastExternalUpdateDate'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
    };
}
exports.ProfileSubscriptionTypeFromJSONTyped = ProfileSubscriptionTypeFromJSONTyped;
function ProfileSubscriptionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'externalProfileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.externalProfileId),
        'profileInfo': (0, ProfileSubscriptionTypeProfileInfo_1.ProfileSubscriptionTypeProfileInfoToJSON)(value.profileInfo),
        'distributed': value.distributed,
        'force': value.force,
        'subscriptionDate': value.subscriptionDate,
        'lastDistributionDate': value.lastDistributionDate,
        'lastExternalUpdateDate': value.lastExternalUpdateDate,
        'inactive': value.inactive,
    };
}
exports.ProfileSubscriptionTypeToJSON = ProfileSubscriptionTypeToJSON;
