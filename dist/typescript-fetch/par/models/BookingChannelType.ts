/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BookingChannelType
 */
export interface BookingChannelType {
    /**
     * 
     * @type {string}
     * @memberof BookingChannelType
     */
    channelCode?: string;
    /**
     * 
     * @type {string}
     * @memberof BookingChannelType
     */
    channelName?: string;
    /**
     * 
     * @type {string}
     * @memberof BookingChannelType
     */
    channelType?: string;
}

/**
 * Check if a given object implements the BookingChannelType interface.
 */
export function instanceOfBookingChannelType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BookingChannelTypeFromJSON(json: any): BookingChannelType {
    return BookingChannelTypeFromJSONTyped(json, false);
}

export function BookingChannelTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookingChannelType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelCode': !exists(json, 'channelCode') ? undefined : json['channelCode'],
        'channelName': !exists(json, 'channelName') ? undefined : json['channelName'],
        'channelType': !exists(json, 'channelType') ? undefined : json['channelType'],
    };
}

export function BookingChannelTypeToJSON(value?: BookingChannelType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelCode': value.channelCode,
        'channelName': value.channelName,
        'channelType': value.channelType,
    };
}

