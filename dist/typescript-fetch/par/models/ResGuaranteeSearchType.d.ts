/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockId } from './BlockId';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { ResAttachedProfileType } from './ResAttachedProfileType';
import type { ResGuaranteeFetchInstructionsType } from './ResGuaranteeFetchInstructionsType';
import type { ReservationPackageType } from './ReservationPackageType';
import type { RoomStaySearchType } from './RoomStaySearchType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Contains Search criteria to get applicable Reservation Guarantee Codes.
 * @export
 * @interface ResGuaranteeSearchType
 */
export interface ResGuaranteeSearchType {
    /**
     * Hotel Code to request Guarantee Codes.
     * @type {string}
     * @memberof ResGuaranteeSearchType
     */
    hotelId?: string;
    /**
     * Arrival Date of the guest.
     * @type {string}
     * @memberof ResGuaranteeSearchType
     */
    arrivalDate?: string;
    /**
     * Rate Plan Code to find associated Guarantee Codes.
     * @type {string}
     * @memberof ResGuaranteeSearchType
     */
    ratePlanCode?: string;
    /**
     *
     * @type {BlockId}
     * @memberof ResGuaranteeSearchType
     */
    blockId?: BlockId;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ResGuaranteeSearchType
     */
    resGuestId?: UniqueIDType;
    /**
     *
     * @type {Array<ResAttachedProfileType>}
     * @memberof ResGuaranteeSearchType
     */
    resAttachedProfiles?: Array<ResAttachedProfileType>;
    /**
     * Guarantee Code should be supplied only for the code verification purpose, if the supplied code is valid for the rest of the criteria it will return the response with the Guarantee Code information.
     * @type {string}
     * @memberof ResGuaranteeSearchType
     */
    guaranteeCode?: string;
    /**
     *
     * @type {ResGuaranteeFetchInstructionsType}
     * @memberof ResGuaranteeSearchType
     */
    fetchInstruction?: ResGuaranteeFetchInstructionsType;
    /**
     *
     * @type {RoomStaySearchType}
     * @memberof ResGuaranteeSearchType
     */
    roomStayDetails?: RoomStaySearchType;
    /**
     * Room Type for the reservation
     * @type {string}
     * @memberof ResGuaranteeSearchType
     */
    roomType?: string;
    /**
     * A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
     * @type {Array<ReservationPackageType>}
     * @memberof ResGuaranteeSearchType
     */
    reservationPackages?: Array<ReservationPackageType>;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ResGuaranteeSearchType
     */
    resvRateAmount?: CurrencyAmountType;
}
/**
 * Check if a given object implements the ResGuaranteeSearchType interface.
 */
export declare function instanceOfResGuaranteeSearchType(value: object): boolean;
export declare function ResGuaranteeSearchTypeFromJSON(json: any): ResGuaranteeSearchType;
export declare function ResGuaranteeSearchTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResGuaranteeSearchType;
export declare function ResGuaranteeSearchTypeToJSON(value?: ResGuaranteeSearchType | null): any;
