/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { HotelContactRoleType } from './HotelContactRoleType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Contact identification details.
 * @export
 * @interface HotelContactType
 */
export interface HotelContactType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof HotelContactType
     */
    nameId?: UniqueIDType;
    /**
     * The code of the hotel.
     * @type {string}
     * @memberof HotelContactType
     */
    hotelId?: string;
    /**
     * Name of the hotel contact.
     * @type {string}
     * @memberof HotelContactType
     */
    name?: string;
    /**
     * Lists of HotelContactRoles of the hotel.
     * @type {Array<HotelContactRoleType>}
     * @memberof HotelContactType
     */
    roles?: Array<HotelContactRoleType>;
    /**
     * The contact's code in the hotel.
     * @type {string}
     * @memberof HotelContactType
     */
    ownerCode?: string;
    /**
     * The preferred method of communication for the contact.
     * @type {string}
     * @memberof HotelContactType
     */
    communicationMethod?: string;
    /**
     * Details about the preferred communication method. Example: email address, fax number, etc.
     * @type {string}
     * @memberof HotelContactType
     */
    communicationAddress?: string;
    /**
     * Primary flag.
     * @type {boolean}
     * @memberof HotelContactType
     */
    primary?: boolean;
}
/**
 * Check if a given object implements the HotelContactType interface.
 */
export declare function instanceOfHotelContactType(value: object): boolean;
export declare function HotelContactTypeFromJSON(json: any): HotelContactType;
export declare function HotelContactTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelContactType;
export declare function HotelContactTypeToJSON(value?: HotelContactType | null): any;
