"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchHotelsDetailsHotelsToJSON = exports.SearchHotelsDetailsHotelsFromJSONTyped = exports.SearchHotelsDetailsHotelsFromJSON = exports.instanceOfSearchHotelsDetailsHotels = void 0;
const runtime_1 = require("../runtime");
const HotelSummaryInfoType_1 = require("./HotelSummaryInfoType");
/**
 * Check if a given object implements the SearchHotelsDetailsHotels interface.
 */
function instanceOfSearchHotelsDetailsHotels(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSearchHotelsDetailsHotels = instanceOfSearchHotelsDetailsHotels;
function SearchHotelsDetailsHotelsFromJSON(json) {
    return SearchHotelsDetailsHotelsFromJSONTyped(json, false);
}
exports.SearchHotelsDetailsHotelsFromJSON = SearchHotelsDetailsHotelsFromJSON;
function SearchHotelsDetailsHotelsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotel': !(0, runtime_1.exists)(json, 'hotel') ? undefined : (json['hotel'].map(HotelSummaryInfoType_1.HotelSummaryInfoTypeFromJSON)),
    };
}
exports.SearchHotelsDetailsHotelsFromJSONTyped = SearchHotelsDetailsHotelsFromJSONTyped;
function SearchHotelsDetailsHotelsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotel': value.hotel === undefined ? undefined : (value.hotel.map(HotelSummaryInfoType_1.HotelSummaryInfoTypeToJSON)),
    };
}
exports.SearchHotelsDetailsHotelsToJSON = SearchHotelsDetailsHotelsToJSON;
