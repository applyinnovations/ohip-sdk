"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesInfoTypeToJSON = exports.SalesInfoTypeFromJSONTyped = exports.SalesInfoTypeFromJSON = exports.instanceOfSalesInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SalesInfoType interface.
 */
function instanceOfSalesInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSalesInfoType = instanceOfSalesInfoType;
function SalesInfoTypeFromJSON(json) {
    return SalesInfoTypeFromJSONTyped(json, false);
}
exports.SalesInfoTypeFromJSON = SalesInfoTypeFromJSON;
function SalesInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'scope': !(0, runtime_1.exists)(json, 'scope') ? undefined : json['scope'],
        'scopeCity': !(0, runtime_1.exists)(json, 'scopeCity') ? undefined : json['scopeCity'],
        'accountType': !(0, runtime_1.exists)(json, 'accountType') ? undefined : json['accountType'],
        'accountSource': !(0, runtime_1.exists)(json, 'accountSource') ? undefined : json['accountSource'],
        'industryCode': !(0, runtime_1.exists)(json, 'industryCode') ? undefined : json['industryCode'],
        'businessSegments': !(0, runtime_1.exists)(json, 'businessSegments') ? undefined : json['businessSegments'],
        'priority': !(0, runtime_1.exists)(json, 'priority') ? undefined : json['priority'],
        'roomsPotential': !(0, runtime_1.exists)(json, 'roomsPotential') ? undefined : json['roomsPotential'],
        'actionCode': !(0, runtime_1.exists)(json, 'actionCode') ? undefined : json['actionCode'],
        'competitionCode': !(0, runtime_1.exists)(json, 'competitionCode') ? undefined : json['competitionCode'],
        'influence': !(0, runtime_1.exists)(json, 'influence') ? undefined : json['influence'],
        'preferredRoom': !(0, runtime_1.exists)(json, 'preferredRoom') ? undefined : json['preferredRoom'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.SalesInfoTypeFromJSONTyped = SalesInfoTypeFromJSONTyped;
function SalesInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'scope': value.scope,
        'scopeCity': value.scopeCity,
        'accountType': value.accountType,
        'accountSource': value.accountSource,
        'industryCode': value.industryCode,
        'businessSegments': value.businessSegments,
        'priority': value.priority,
        'roomsPotential': value.roomsPotential,
        'actionCode': value.actionCode,
        'competitionCode': value.competitionCode,
        'influence': value.influence,
        'preferredRoom': value.preferredRoom,
        'hotelId': value.hotelId,
    };
}
exports.SalesInfoTypeToJSON = SalesInfoTypeToJSON;
