"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyTypeToJSON = exports.CompanyTypeFromJSONTyped = exports.CompanyTypeFromJSON = exports.instanceOfCompanyType = void 0;
const runtime_1 = require("../runtime");
const IATAInfoType_1 = require("./IATAInfoType");
/**
 * Check if a given object implements the CompanyType interface.
 */
function instanceOfCompanyType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCompanyType = instanceOfCompanyType;
function CompanyTypeFromJSON(json) {
    return CompanyTypeFromJSONTyped(json, false);
}
exports.CompanyTypeFromJSON = CompanyTypeFromJSON;
function CompanyTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'alternateLanguage': !(0, runtime_1.exists)(json, 'alternateLanguage') ? undefined : json['alternateLanguage'],
        'alternateName': !(0, runtime_1.exists)(json, 'alternateName') ? undefined : json['alternateName'],
        'blacklist': !(0, runtime_1.exists)(json, 'blacklist') ? undefined : json['blacklist'],
        'businessLocale': !(0, runtime_1.exists)(json, 'businessLocale') ? undefined : json['businessLocale'],
        'businessTitle': !(0, runtime_1.exists)(json, 'businessTitle') ? undefined : json['businessTitle'],
        'commissionCode': !(0, runtime_1.exists)(json, 'commissionCode') ? undefined : json['commissionCode'],
        'companyName': !(0, runtime_1.exists)(json, 'companyName') ? undefined : json['companyName'],
        'companyName2': !(0, runtime_1.exists)(json, 'companyName2') ? undefined : json['companyName2'],
        'companyName3': !(0, runtime_1.exists)(json, 'companyName3') ? undefined : json['companyName3'],
        'corporateIdType': !(0, runtime_1.exists)(json, 'corporateIdType') ? undefined : json['corporateIdType'],
        'creditRating': !(0, runtime_1.exists)(json, 'creditRating') ? undefined : json['creditRating'],
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'currencySymbol': !(0, runtime_1.exists)(json, 'currencySymbol') ? undefined : json['currencySymbol'],
        'decimalPlaces': !(0, runtime_1.exists)(json, 'decimalPlaces') ? undefined : json['decimalPlaces'],
        'iATAInfo': !(0, runtime_1.exists)(json, 'iATAInfo') ? undefined : (0, IATAInfoType_1.IATAInfoTypeFromJSON)(json['iATAInfo']),
        'language': !(0, runtime_1.exists)(json, 'language') ? undefined : json['language'],
        'nationality': !(0, runtime_1.exists)(json, 'nationality') ? undefined : json['nationality'],
        'nationalityDescription': !(0, runtime_1.exists)(json, 'nationalityDescription') ? undefined : json['nationalityDescription'],
        'vipDescription': !(0, runtime_1.exists)(json, 'vipDescription') ? undefined : json['vipDescription'],
        'vipStatus': !(0, runtime_1.exists)(json, 'vipStatus') ? undefined : json['vipStatus'],
    };
}
exports.CompanyTypeFromJSONTyped = CompanyTypeFromJSONTyped;
function CompanyTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'alternateLanguage': value.alternateLanguage,
        'alternateName': value.alternateName,
        'blacklist': value.blacklist,
        'businessLocale': value.businessLocale,
        'businessTitle': value.businessTitle,
        'commissionCode': value.commissionCode,
        'companyName': value.companyName,
        'companyName2': value.companyName2,
        'companyName3': value.companyName3,
        'corporateIdType': value.corporateIdType,
        'creditRating': value.creditRating,
        'currencyCode': value.currencyCode,
        'currencySymbol': value.currencySymbol,
        'decimalPlaces': value.decimalPlaces,
        'iATAInfo': (0, IATAInfoType_1.IATAInfoTypeToJSON)(value.iATAInfo),
        'language': value.language,
        'nationality': value.nationality,
        'nationalityDescription': value.nationalityDescription,
        'vipDescription': value.vipDescription,
        'vipStatus': value.vipStatus,
    };
}
exports.CompanyTypeToJSON = CompanyTypeToJSON;
