/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AlternateAvailability, AvailabilityRatePlanInfo, AvailableUpsells, ChangeHurdleRates, ChangeHurdleRatesDetails, ClearAllRestrictions, CreateHurdleRates, CreateRestriction, GuaranteeablePreferences, HotelAvailability, HurdleRates, RateAnalysisDetails, ReservationGuaranteesPolicies, RestrictionsByDateRange, RestrictionsHistory, SearchHotelsDetails, Status, ValidateReservationGuarantees } from '../models/index';
export interface AnalyzeRateAvailabilityRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCode?: string;
    roomType?: string;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    numberOfRooms?: number;
    adults?: number;
    children?: number;
    childAge?: Array<number>;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    blockId?: string;
    blockIdType?: string;
    reservationId?: Array<string>;
    reservationIdType?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ClearAllRestrictionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    clearAllRestrictions?: ClearAllRestrictions;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteHurdleRatesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hurdleDate?: Array<Date>;
    roomType?: Array<string>;
    roomCategory?: Array<string>;
    yieldCategory?: Array<string>;
    lengthOfStay?: Array<number>;
    yieldMarketCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRestrictionRequest {
    restrictionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    restrictionEndDate?: Date;
    restrictionStartDate?: Date;
    bookingChannelCode?: string;
    ratePlanCategory?: string;
    ratePlanCode?: string;
    roomClass?: string;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAlternateAvailabilityRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCode?: string;
    redemption?: boolean;
    roomType?: string;
    roomNumber?: string;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    quantity?: number;
    adults?: number;
    children?: number;
    childAge?: Array<number>;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    reservationGuestId?: string;
    reservationGuestIdType?: string;
    reservationProfileType?: Set<GetAlternateAvailabilityReservationProfileTypeEnum>;
    blockCode?: string;
    blockName?: string;
    blockId?: string;
    blockIdType?: string;
    membershipLevel?: string;
    membershipType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAvailabilityRatePlanInfoRequest {
    ratePlanCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCodeList?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAvailabilityRatePlanInfoByMultipleRatePlansRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCodeList?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAvailableUpsellsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationId?: string;
    profileId?: string;
    reservationStatus?: GetAvailableUpsellsReservationStatusEnum;
    startDate?: Date;
    endDate?: Date;
    ratePlanCode?: string;
    roomType?: string;
    adults?: number;
    children?: number;
    rateAmount?: number;
    guaranteeCode?: string;
    marketCode?: string;
    fixedRate?: boolean;
    rateDate?: Array<Date>;
    requiredAmount?: Array<number>;
    numberOfRooms?: number;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuaranteeablePreferencesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    startDate?: Date;
    endDate?: Date;
    roomType?: string;
    availableCode?: Array<string>;
    requestedCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelAvailabilityRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cro?: Array<string>;
    includeClosedRates?: Array<boolean>;
    includeDefaultRatePlanSet?: Array<boolean>;
    initialRatePlanSet?: Array<boolean>;
    limit?: Array<number>;
    pagePointerKey?: Array<string>;
    ratePlanSet?: Array<string>;
    redeemAwards?: Array<boolean>;
    roomStayStartDate?: Date;
    roomStayEndDate?: Date;
    roomStayQuantity?: number;
    adults?: number;
    children?: number;
    childAge?: Array<number>;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    fullStayTimeSpanStartDate?: Date;
    fullStayTimeSpanEndDate?: Date;
    prevailingRate?: boolean;
    rateCategory?: string;
    rateClass?: string;
    rateGroup?: string;
    ratePlanCode?: Array<string>;
    promotionCode?: Array<string>;
    roomType?: Array<string>;
    feature?: Array<string>;
    reservationGuestId?: string;
    reservationGuestIdType?: string;
    reservationProfileType?: Set<GetHotelAvailabilityReservationProfileTypeEnum>;
    attachedProfileId?: Array<string>;
    hotelReservationId?: string;
    hotelReservationIdType?: string;
    ratePlanInfo?: boolean;
    returnOnlyAvailableRateCodes?: boolean;
    resGuaranteeInfo?: boolean;
    roomTypeInfo?: boolean;
    membershipIdNumber?: Array<number>;
    membershipLevel?: Array<string>;
    membershipType?: Array<string>;
    pointsAvailable?: Array<number>;
    smokingPreference?: Array<string>;
    hotelPackage?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelAvailabilityCRORequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cro?: Array<string>;
    hotelIds?: Array<string>;
    includeClosedRates?: Array<boolean>;
    includeDefaultRatePlanSet?: Array<boolean>;
    initialRatePlanSet?: Array<boolean>;
    limit?: Array<number>;
    pagePointerKey?: Array<string>;
    ratePlanSet?: Array<string>;
    redeemAwards?: Array<boolean>;
    roomStayStartDate?: Date;
    roomStayEndDate?: Date;
    roomStayQuantity?: number;
    adults?: number;
    children?: number;
    childAge?: Array<number>;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    fullStayTimeSpanStartDate?: Date;
    fullStayTimeSpanEndDate?: Date;
    prevailingRate?: boolean;
    rateCategory?: string;
    rateClass?: string;
    rateGroup?: string;
    ratePlanCode?: Array<string>;
    promotionCode?: Array<string>;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    feature?: Array<string>;
    reservationGuestId?: string;
    reservationGuestIdType?: string;
    reservationProfileType?: Set<GetHotelAvailabilityCROReservationProfileTypeEnum>;
    attachedProfileId?: Array<string>;
    hotelReservationId?: string;
    hotelReservationIdType?: string;
    ratePlanInfo?: boolean;
    returnOnlyAvailableRateCodes?: boolean;
    resGuaranteeInfo?: boolean;
    roomTypeInfo?: boolean;
    membershipIdNumber?: Array<number>;
    membershipLevel?: Array<string>;
    membershipType?: Array<string>;
    pointsAvailable?: Array<number>;
    smokingPreference?: Array<string>;
    hotelPackage?: Array<string>;
    yieldMarketCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cro?: string;
    limit?: number;
    startDate?: Date;
    endDate?: Date;
    quantity?: number;
    adults?: number;
    children?: number;
    alternateHotels?: boolean;
    hotelId?: Array<string>;
    regionCode?: string;
    city?: Array<string>;
    hotelType?: Array<string>;
    hotelAmenity?: Array<string>;
    attraction?: Array<string>;
    hotelPackage?: Array<string>;
    prevailingRate?: boolean;
    rateCategory?: string;
    rateClass?: string;
    rateGroup?: string;
    ratePlanCode?: Array<string>;
    ratePlanId?: Array<string>;
    promotionCode?: Array<string>;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    bedType?: Array<string>;
    feature?: Array<string>;
    reservationGuestId?: string;
    reservationGuestIdType?: string;
    reservationProfileType?: Set<GetHotelsReservationProfileTypeEnum>;
    id?: Array<string>;
    currencyExchangeRates?: boolean;
    ratePlanInfo?: boolean;
    resGuaranteeInfo?: boolean;
    returnAllRates?: boolean;
    roomTypeInfo?: boolean;
    sellMessages?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHurdleRatesRequest {
    hotelId?: string;
    hurdleDate?: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    limit?: number;
    roomTypesCode?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationGuaranteesRequest {
    hotelId?: string;
    arrivalDate?: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ratePlanCode?: string;
    blockId?: string;
    reservationGuestId?: string;
    companyId?: string;
    travelAgentId?: string;
    sourceId?: string;
    groupId?: string;
    guaranteeCode?: string;
    calculateEstimateAmount?: boolean;
    startDate?: Date;
    endDate?: Date;
    numberOfRooms?: number;
    numberOfAdults?: number;
    numberOfChildren?: number;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRestrictionsByDateRangeRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    chainName?: string;
    end?: Date;
    fetchSizeByDay?: number;
    limit?: number;
    restrictionInfo?: GetRestrictionsByDateRangeRestrictionInfoEnum;
    restrictionSearchCriteriaStartDate?: Date;
    bookingChannelCode?: string;
    ratePlanCategory?: string;
    ratePlanCode?: string;
    roomClass?: string;
    roomType?: string;
    filterCodeCategory?: GetRestrictionsByDateRangeFilterCodeCategoryEnum;
    filterCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRestrictionsHistoryRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    chainName?: string;
    date?: Date;
    bookingChannelCode?: string;
    ratePlanCategory?: string;
    ratePlanCode?: string;
    roomClass?: string;
    roomType?: string;
    filterCodeCategory?: GetRestrictionsHistoryFilterCodeCategoryEnum;
    filterCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHurdleRatesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    createHurdleRates?: CreateHurdleRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRestrictionRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    createRestriction?: CreateRestriction;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutHurdleRatesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    changeHurdleRates?: ChangeHurdleRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ValidateReservationGuaranteesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    validateReservationGuarantees?: ValidateReservationGuarantees;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class AvailabilityApi extends runtime.BaseAPI {
    /**
     * This API allows to Analyze Rate Availability. Rate analysis request to include the rate code, room type and room span to analyze whether a rate is closed and the reasons. <p><strong>OperationId:</strong>analyzeRateAvailability</p>
     * Analyze Rate Availability
     */
    analyzeRateAvailabilityRaw(requestParameters: AnalyzeRateAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RateAnalysisDetails>>;
    /**
     * This API allows to Analyze Rate Availability. Rate analysis request to include the rate code, room type and room span to analyze whether a rate is closed and the reasons. <p><strong>OperationId:</strong>analyzeRateAvailability</p>
     * Analyze Rate Availability
     */
    analyzeRateAvailability(requestParameters: AnalyzeRateAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RateAnalysisDetails>;
    /**
     * Use this API to clear all Restrictions for a hotel on given date. The hotel code and the date will need to be passed as part of the request.<p><strong>OperationId:</strong>clearAllRestrictions</p>
     * Clear all restrictions
     */
    clearAllRestrictionsRaw(requestParameters: ClearAllRestrictionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClearAllRestrictions>>;
    /**
     * Use this API to clear all Restrictions for a hotel on given date. The hotel code and the date will need to be passed as part of the request.<p><strong>OperationId:</strong>clearAllRestrictions</p>
     * Clear all restrictions
     */
    clearAllRestrictions(requestParameters: ClearAllRestrictionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClearAllRestrictions>;
    /**
     * This API allows to delete hurdles rates. <p><strong>OperationId:</strong>deleteHurdleRates</p>
     * Delete Hurdle Rates
     */
    deleteHurdleRatesRaw(requestParameters: DeleteHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows to delete hurdles rates. <p><strong>OperationId:</strong>deleteHurdleRates</p>
     * Delete Hurdle Rates
     */
    deleteHurdleRates(requestParameters: DeleteHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows to Delete a given restriction. The date range is passed along with the restriction control type details which can include house, room type, room class or rate plan information. The unique criteria has been defined with one of these combinations: restrictionType, restrictionStartDate, restrictionEndDate, bookingChannelCode, ratePlanCategory, ratePlanCode, roomClass, roomType.<p><strong>OperationId:</strong>deleteRestriction</p>
     * Delete a Restriction
     */
    deleteRestrictionRaw(requestParameters: DeleteRestrictionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows to Delete a given restriction. The date range is passed along with the restriction control type details which can include house, room type, room class or rate plan information. The unique criteria has been defined with one of these combinations: restrictionType, restrictionStartDate, restrictionEndDate, bookingChannelCode, ratePlanCategory, ratePlanCode, roomClass, roomType.<p><strong>OperationId:</strong>deleteRestriction</p>
     * Delete a Restriction
     */
    deleteRestriction(requestParameters: DeleteRestrictionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get alternate dates for closed rates. Filter criteria include dates, room stay information, profile, block or guest information.<p><strong>OperationId:</strong>getAlternateAvailability</p>
     * Get alternate availability
     */
    getAlternateAvailabilityRaw(requestParameters: GetAlternateAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlternateAvailability>>;
    /**
     * Use this API to get alternate dates for closed rates. Filter criteria include dates, room stay information, profile, block or guest information.<p><strong>OperationId:</strong>getAlternateAvailability</p>
     * Get alternate availability
     */
    getAlternateAvailability(requestParameters: GetAlternateAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlternateAvailability>;
    /**
     * This API fetches the ratePlan information like description, short information, long information, Web URL for the ratePlan and Commission Code. The rate plan code list can be passed as part of the criteria in the request. <p><strong>OperationId:</strong>getAvailabilityRatePlanInfo</p>
     * Get Rate Plan Information
     */
    getAvailabilityRatePlanInfoRaw(requestParameters: GetAvailabilityRatePlanInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AvailabilityRatePlanInfo>>;
    /**
     * This API fetches the ratePlan information like description, short information, long information, Web URL for the ratePlan and Commission Code. The rate plan code list can be passed as part of the criteria in the request. <p><strong>OperationId:</strong>getAvailabilityRatePlanInfo</p>
     * Get Rate Plan Information
     */
    getAvailabilityRatePlanInfo(requestParameters: GetAvailabilityRatePlanInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AvailabilityRatePlanInfo>;
    /**
     * Operation description<p><strong>OperationId:</strong>getAvailabilityRatePlanInfoByMultipleRatePlans</p>
     * Use this API to get Rate Plan information such as commission codes, market codes, and rate category.
     */
    getAvailabilityRatePlanInfoByMultipleRatePlansRaw(requestParameters: GetAvailabilityRatePlanInfoByMultipleRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AvailabilityRatePlanInfo>>;
    /**
     * Operation description<p><strong>OperationId:</strong>getAvailabilityRatePlanInfoByMultipleRatePlans</p>
     * Use this API to get Rate Plan information such as commission codes, market codes, and rate category.
     */
    getAvailabilityRatePlanInfoByMultipleRatePlans(requestParameters: GetAvailabilityRatePlanInfoByMultipleRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AvailabilityRatePlanInfo>;
    /**
     * This API allows to fetch for Available Up-sells for specific hotel and date range. <p><strong>OperationId:</strong>getAvailableUpsells</p>
     * Get for Available Up-sells
     */
    getAvailableUpsellsRaw(requestParameters: GetAvailableUpsellsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AvailableUpsells>>;
    /**
     * This API allows to fetch for Available Up-sells for specific hotel and date range. <p><strong>OperationId:</strong>getAvailableUpsells</p>
     * Get for Available Up-sells
     */
    getAvailableUpsells(requestParameters: GetAvailableUpsellsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AvailableUpsells>;
    /**
     * Get Guarantee-able Preference Codes for a specified property. <p><strong>OperationId:</strong>getGuaranteeablePreferences</p>
     * Get Guarantee-able Preference Codes
     */
    getGuaranteeablePreferencesRaw(requestParameters: GetGuaranteeablePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuaranteeablePreferences>>;
    /**
     * Get Guarantee-able Preference Codes for a specified property. <p><strong>OperationId:</strong>getGuaranteeablePreferences</p>
     * Get Guarantee-able Preference Codes
     */
    getGuaranteeablePreferences(requestParameters: GetGuaranteeablePreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuaranteeablePreferences>;
    /**
     * Use this API to get hotel availability for multiple hotels, given dates, Rate Plans, Rate Category, Rate Group, Membership Rates, and number of people. By default five records are returned unless a higher number is specified in the limit query parameter.<p><strong>OperationId:</strong>getHotelAvailability</p>
     * Get hotel availability
     */
    getHotelAvailabilityRaw(requestParameters: GetHotelAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelAvailability>>;
    /**
     * Use this API to get hotel availability for multiple hotels, given dates, Rate Plans, Rate Category, Rate Group, Membership Rates, and number of people. By default five records are returned unless a higher number is specified in the limit query parameter.<p><strong>OperationId:</strong>getHotelAvailability</p>
     * Get hotel availability
     */
    getHotelAvailability(requestParameters: GetHotelAvailabilityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelAvailability>;
    /**
     *  This API fetches hotel availablity for multiple hotels, given dates, RatePlans, Rate Category, Rate Group, Membership Rates, Number of People. <p><strong>OperationId:</strong>getHotelAvailabilityCRO</p>
     * Get Hotel Availability
     */
    getHotelAvailabilityCRORaw(requestParameters: GetHotelAvailabilityCRORequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelAvailability>>;
    /**
     *  This API fetches hotel availablity for multiple hotels, given dates, RatePlans, Rate Category, Rate Group, Membership Rates, Number of People. <p><strong>OperationId:</strong>getHotelAvailabilityCRO</p>
     * Get Hotel Availability
     */
    getHotelAvailabilityCRO(requestParameters: GetHotelAvailabilityCRORequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelAvailability>;
    /**
     * This API is to search hotels for the sales process. <p><strong>OperationId:</strong>getHotels</p>
     * Search hotels for the sales process
     */
    getHotelsRaw(requestParameters: GetHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchHotelsDetails>>;
    /**
     * This API is to search hotels for the sales process. <p><strong>OperationId:</strong>getHotels</p>
     * Search hotels for the sales process
     */
    getHotels(requestParameters: GetHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchHotelsDetails>;
    /**
     * This API allows to fetch existing Hurdle Rates. <p><strong>OperationId:</strong>getHurdleRates</p>
     * Get Hurdle Rates
     */
    getHurdleRatesRaw(requestParameters: GetHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HurdleRates>>;
    /**
     * This API allows to fetch existing Hurdle Rates. <p><strong>OperationId:</strong>getHurdleRates</p>
     * Get Hurdle Rates
     */
    getHurdleRates(requestParameters: GetHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HurdleRates>;
    /**
     * Use this API to get the required guarantee types in order to complete a booking. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.<p><strong>OperationId:</strong>getReservationGuarantees</p>
     * Get reservation guarantees
     */
    getReservationGuaranteesRaw(requestParameters: GetReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationGuaranteesPolicies>>;
    /**
     * Use this API to get the required guarantee types in order to complete a booking. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.<p><strong>OperationId:</strong>getReservationGuarantees</p>
     * Get reservation guarantees
     */
    getReservationGuarantees(requestParameters: GetReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationGuaranteesPolicies>;
    /**
     * Use this API to get the Restrictions for a hotel in given date range. The search criteria can include filter codes or restriction control types, date range and the hotel information.<p><strong>OperationId:</strong>getRestrictionsByDateRange</p>
     * Get hotel restrictions
     */
    getRestrictionsByDateRangeRaw(requestParameters: GetRestrictionsByDateRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RestrictionsByDateRange>>;
    /**
     * Use this API to get the Restrictions for a hotel in given date range. The search criteria can include filter codes or restriction control types, date range and the hotel information.<p><strong>OperationId:</strong>getRestrictionsByDateRange</p>
     * Get hotel restrictions
     */
    getRestrictionsByDateRange(requestParameters: GetRestrictionsByDateRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RestrictionsByDateRange>;
    /**
     * This API allows to fetch the Restriction history. Specify filter codes or restriction control types. The date range can be passed as part of the request. <p><strong>OperationId:</strong>getRestrictionsHistory</p>
     * Get the Restriction history
     */
    getRestrictionsHistoryRaw(requestParameters: GetRestrictionsHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RestrictionsHistory>>;
    /**
     * This API allows to fetch the Restriction history. Specify filter codes or restriction control types. The date range can be passed as part of the request. <p><strong>OperationId:</strong>getRestrictionsHistory</p>
     * Get the Restriction history
     */
    getRestrictionsHistory(requestParameters: GetRestrictionsHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RestrictionsHistory>;
    /**
     * This API allows to create hurdle rates. <p><strong>OperationId:</strong>postHurdleRates</p>
     * Create Hurdle Rates
     */
    postHurdleRatesRaw(requestParameters: PostHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows to create hurdle rates. <p><strong>OperationId:</strong>postHurdleRates</p>
     * Create Hurdle Rates
     */
    postHurdleRates(requestParameters: PostHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create restrictions on various levels such as house level, rate class, rate category, rate plan, room class, room type, and booking channel code.<p><strong>OperationId:</strong>postRestriction</p>
     * Create a restriction
     */
    postRestrictionRaw(requestParameters: PostRestrictionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create restrictions on various levels such as house level, rate class, rate category, rate plan, room class, room type, and booking channel code.<p><strong>OperationId:</strong>postRestriction</p>
     * Create a restriction
     */
    postRestriction(requestParameters: PostRestrictionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows to update an existing Hurdle Rate. <p><strong>OperationId:</strong>putHurdleRates</p>
     * Change Hurdle Rates
     */
    putHurdleRatesRaw(requestParameters: PutHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangeHurdleRatesDetails>>;
    /**
     * This API allows to update an existing Hurdle Rate. <p><strong>OperationId:</strong>putHurdleRates</p>
     * Change Hurdle Rates
     */
    putHurdleRates(requestParameters: PutHurdleRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangeHurdleRatesDetails>;
    /**
     * This API allows to Fetch Reservation Guarantee. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.  <p><strong>OperationId:</strong>validateReservationGuarantees</p>
     * Get Reservation Guarantee
     */
    validateReservationGuaranteesRaw(requestParameters: ValidateReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationGuaranteesPolicies>>;
    /**
     * This API allows to Fetch Reservation Guarantee. The criteria can include the rate plan code, arrival date, guarantee code and the profile information.  <p><strong>OperationId:</strong>validateReservationGuarantees</p>
     * Get Reservation Guarantee
     */
    validateReservationGuarantees(requestParameters: ValidateReservationGuaranteesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationGuaranteesPolicies>;
}
/**
 * @export
 */
export declare const GetAlternateAvailabilityReservationProfileTypeEnum: {
    readonly Guest: "Guest";
    readonly Company: "Company";
    readonly Group: "Group";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
    readonly ReservationContact: "ReservationContact";
    readonly BillingContact: "BillingContact";
    readonly Addressee: "Addressee";
};
export type GetAlternateAvailabilityReservationProfileTypeEnum = typeof GetAlternateAvailabilityReservationProfileTypeEnum[keyof typeof GetAlternateAvailabilityReservationProfileTypeEnum];
/**
 * @export
 */
export declare const GetAvailableUpsellsReservationStatusEnum: {
    readonly Reserved: "Reserved";
    readonly Requested: "Requested";
    readonly NoShow: "NoShow";
    readonly Cancelled: "Cancelled";
    readonly InHouse: "InHouse";
    readonly CheckedOut: "CheckedOut";
    readonly Waitlisted: "Waitlisted";
    readonly DueIn: "DueIn";
    readonly DueOut: "DueOut";
    readonly Walkin: "Walkin";
    readonly PendingCheckout: "PendingCheckout";
};
export type GetAvailableUpsellsReservationStatusEnum = typeof GetAvailableUpsellsReservationStatusEnum[keyof typeof GetAvailableUpsellsReservationStatusEnum];
/**
 * @export
 */
export declare const GetHotelAvailabilityReservationProfileTypeEnum: {
    readonly Guest: "Guest";
    readonly Company: "Company";
    readonly Group: "Group";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
    readonly ReservationContact: "ReservationContact";
    readonly BillingContact: "BillingContact";
    readonly Addressee: "Addressee";
};
export type GetHotelAvailabilityReservationProfileTypeEnum = typeof GetHotelAvailabilityReservationProfileTypeEnum[keyof typeof GetHotelAvailabilityReservationProfileTypeEnum];
/**
 * @export
 */
export declare const GetHotelAvailabilityCROReservationProfileTypeEnum: {
    readonly Guest: "Guest";
    readonly Company: "Company";
    readonly Group: "Group";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
    readonly ReservationContact: "ReservationContact";
    readonly BillingContact: "BillingContact";
    readonly Addressee: "Addressee";
};
export type GetHotelAvailabilityCROReservationProfileTypeEnum = typeof GetHotelAvailabilityCROReservationProfileTypeEnum[keyof typeof GetHotelAvailabilityCROReservationProfileTypeEnum];
/**
 * @export
 */
export declare const GetHotelsReservationProfileTypeEnum: {
    readonly Guest: "Guest";
    readonly Company: "Company";
    readonly Group: "Group";
    readonly TravelAgent: "TravelAgent";
    readonly Source: "Source";
    readonly ReservationContact: "ReservationContact";
    readonly BillingContact: "BillingContact";
    readonly Addressee: "Addressee";
};
export type GetHotelsReservationProfileTypeEnum = typeof GetHotelsReservationProfileTypeEnum[keyof typeof GetHotelsReservationProfileTypeEnum];
/**
 * @export
 */
export declare const GetRestrictionsByDateRangeRestrictionInfoEnum: {
    readonly Detail: "Detail";
    readonly Overview: "Overview";
    readonly Year: "Year";
};
export type GetRestrictionsByDateRangeRestrictionInfoEnum = typeof GetRestrictionsByDateRangeRestrictionInfoEnum[keyof typeof GetRestrictionsByDateRangeRestrictionInfoEnum];
/**
 * @export
 */
export declare const GetRestrictionsByDateRangeFilterCodeCategoryEnum: {
    readonly BookingChannelCode: "BookingChannelCode";
    readonly RoomClass: "RoomClass";
    readonly RoomType: "RoomType";
    readonly RatePlanCategory: "RatePlanCategory";
    readonly RatePlanCode: "RatePlanCode";
};
export type GetRestrictionsByDateRangeFilterCodeCategoryEnum = typeof GetRestrictionsByDateRangeFilterCodeCategoryEnum[keyof typeof GetRestrictionsByDateRangeFilterCodeCategoryEnum];
/**
 * @export
 */
export declare const GetRestrictionsHistoryFilterCodeCategoryEnum: {
    readonly BookingChannelCode: "BookingChannelCode";
    readonly RoomClass: "RoomClass";
    readonly RoomType: "RoomType";
    readonly RatePlanCategory: "RatePlanCategory";
    readonly RatePlanCode: "RatePlanCode";
};
export type GetRestrictionsHistoryFilterCodeCategoryEnum = typeof GetRestrictionsHistoryFilterCodeCategoryEnum[keyof typeof GetRestrictionsHistoryFilterCodeCategoryEnum];
