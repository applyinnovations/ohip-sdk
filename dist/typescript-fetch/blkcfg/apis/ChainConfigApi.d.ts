/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BlockCancellationReasonsCriteria, BlockCancellationReasonsDetails, BlockCancellationReasonsToBeChanged, BlockLostBookingCodesCriteria, BlockLostBookingCodesDetails, BlockLostBookingCodesToBeChanged, BlockRateOverrideReasonsCriteria, BlockRateOverrideReasonsDetails, BlockRateOverrideReasonsToBeChanged, BlockRefusedReasonsCriteria, BlockRefusedReasonsDetails, BlockRefusedReasonsToBeChanged, DestinationCodesCriteria, DestinationCodesDetails, DestinationCodesToBeChanged, ReservationMethodsCriteria, ReservationMethodsDetails, ReservationMethodsToBeChanged, Status } from '../models/index';
export interface DeleteBlockCancellationReasonsRequest {
    blockCancellationReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockCancellationReasonsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteBlockLostBookingCodesRequest {
    blockLostBookingCodesId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockLostBookingCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteBlockRateOverrideReasonsRequest {
    blockRateOverrideReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRateOverrideReasonsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteBlockRefusedReasonsRequest {
    blockRefusedReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRefusedReasonsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteDestinationCodesRequest {
    destinationCodesId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    destinationCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteReservationMethodsRequest {
    reservationMethodsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationMethodsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockCancellationReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockLostBookingCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockRateOverrideReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockRefusedReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDestinationCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationMethodsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockCancellationReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockCancellationReasonsCriteria: BlockCancellationReasonsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockLostBookingCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockLostBookingCodesCriteria: BlockLostBookingCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockRateOverrideReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRateOverrideReasonsCriteria: BlockRateOverrideReasonsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockRefusedReasonspostBloRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRefusedReasonsCriteria: BlockRefusedReasonsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDestinationCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    destinationCodesCriteria: DestinationCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostReservationMethodsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationMethodsCriteria: ReservationMethodsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBlockCancellationReasonsRequest {
    blockCancellationReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockCancellationReasonsToBeChanged: BlockCancellationReasonsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBlockLostBookingCodesRequest {
    blockLostBookingCodesId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockLostBookingCodesToBeChanged: BlockLostBookingCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBlockRateOverrideReasonsRequest {
    blockRateOverrideReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRateOverrideReasonsToBeChanged: BlockRateOverrideReasonsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBlockRefusedReasonsRequest {
    blockRefusedReasonsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRefusedReasonsToBeChanged: BlockRefusedReasonsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutDestinationCodesRequest {
    destinationCodesId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    destinationCodesToBeChanged: DestinationCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutReservationMethodsRequest {
    reservationMethodsId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationMethodsToBeChanged: ReservationMethodsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ChainConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to delete Block Cancellation Reason. <p><strong>OperationId:</strong>deleteBlockCancellationReasons</p>
     * Delete Block Cancellation Reason
     */
    deleteBlockCancellationReasonsRaw(requestParameters: DeleteBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Cancellation Reason. <p><strong>OperationId:</strong>deleteBlockCancellationReasons</p>
     * Delete Block Cancellation Reason
     */
    deleteBlockCancellationReasons(requestParameters: DeleteBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Block Lost Booking Code. <p><strong>OperationId:</strong>deleteBlockLostBookingCodes</p>
     * Delete Block Lost Booking Code
     */
    deleteBlockLostBookingCodesRaw(requestParameters: DeleteBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Lost Booking Code. <p><strong>OperationId:</strong>deleteBlockLostBookingCodes</p>
     * Delete Block Lost Booking Code
     */
    deleteBlockLostBookingCodes(requestParameters: DeleteBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Block Rate Override Reason. <p><strong>OperationId:</strong>deleteBlockRateOverrideReasons</p>
     * Delete Block Rate Override Reason
     */
    deleteBlockRateOverrideReasonsRaw(requestParameters: DeleteBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Rate Override Reason. <p><strong>OperationId:</strong>deleteBlockRateOverrideReasons</p>
     * Delete Block Rate Override Reason
     */
    deleteBlockRateOverrideReasons(requestParameters: DeleteBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Block Refused Reason. <p><strong>OperationId:</strong>deleteBlockRefusedReasons</p>
     * Delete Block Refused Reason
     */
    deleteBlockRefusedReasonsRaw(requestParameters: DeleteBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Refused Reason. <p><strong>OperationId:</strong>deleteBlockRefusedReasons</p>
     * Delete Block Refused Reason
     */
    deleteBlockRefusedReasons(requestParameters: DeleteBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Destination Codes. <p><strong>OperationId:</strong>deleteDestinationCodes</p>
     * Delete Destination Codes
     */
    deleteDestinationCodesRaw(requestParameters: DeleteDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Destination Codes. <p><strong>OperationId:</strong>deleteDestinationCodes</p>
     * Delete Destination Codes
     */
    deleteDestinationCodes(requestParameters: DeleteDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Reservation Methods. <p><strong>OperationId:</strong>deleteReservationMethods</p>
     * Delete Reservation Methods
     */
    deleteReservationMethodsRaw(requestParameters: DeleteReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Reservation Methods. <p><strong>OperationId:</strong>deleteReservationMethods</p>
     * Delete Reservation Methods
     */
    deleteReservationMethods(requestParameters: DeleteReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Block Cancellation Reasons. <p><strong>OperationId:</strong>getBlockCancellationReasons</p>
     * Get Block Cancellation Reasons
     */
    getBlockCancellationReasonsRaw(requestParameters: GetBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockCancellationReasonsDetails>>;
    /**
     * Use this API to get Block Cancellation Reasons. <p><strong>OperationId:</strong>getBlockCancellationReasons</p>
     * Get Block Cancellation Reasons
     */
    getBlockCancellationReasons(requestParameters: GetBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockCancellationReasonsDetails>;
    /**
     * Use this API to get Block Lost Booking Codes. <p><strong>OperationId:</strong>getBlockLostBookingCodes</p>
     * Get Block Lost Booking Codes
     */
    getBlockLostBookingCodesRaw(requestParameters: GetBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockLostBookingCodesDetails>>;
    /**
     * Use this API to get Block Lost Booking Codes. <p><strong>OperationId:</strong>getBlockLostBookingCodes</p>
     * Get Block Lost Booking Codes
     */
    getBlockLostBookingCodes(requestParameters: GetBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockLostBookingCodesDetails>;
    /**
     * Use this API to get Block Rate Override Reasons. <p><strong>OperationId:</strong>getBlockRateOverrideReasons</p>
     * Get Block Rate Override Reasons
     */
    getBlockRateOverrideReasonsRaw(requestParameters: GetBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockRateOverrideReasonsDetails>>;
    /**
     * Use this API to get Block Rate Override Reasons. <p><strong>OperationId:</strong>getBlockRateOverrideReasons</p>
     * Get Block Rate Override Reasons
     */
    getBlockRateOverrideReasons(requestParameters: GetBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockRateOverrideReasonsDetails>;
    /**
     * Use this API to get Block Refused Reasons. <p><strong>OperationId:</strong>getBlockRefusedReasons</p>
     * Get Block Refused Reasons
     */
    getBlockRefusedReasonsRaw(requestParameters: GetBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockRefusedReasonsDetails>>;
    /**
     * Use this API to get Block Refused Reasons. <p><strong>OperationId:</strong>getBlockRefusedReasons</p>
     * Get Block Refused Reasons
     */
    getBlockRefusedReasons(requestParameters: GetBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockRefusedReasonsDetails>;
    /**
     * Use this API to get Destination Codes. <p><strong>OperationId:</strong>getDestinationCodes</p>
     * Get Destination Codes
     */
    getDestinationCodesRaw(requestParameters: GetDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DestinationCodesDetails>>;
    /**
     * Use this API to get Destination Codes. <p><strong>OperationId:</strong>getDestinationCodes</p>
     * Get Destination Codes
     */
    getDestinationCodes(requestParameters: GetDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DestinationCodesDetails>;
    /**
     * Use this API to get Reservation Methods. <p><strong>OperationId:</strong>getReservationMethods</p>
     * Get Reservation Methods
     */
    getReservationMethodsRaw(requestParameters: GetReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationMethodsDetails>>;
    /**
     * Use this API to get Reservation Methods. <p><strong>OperationId:</strong>getReservationMethods</p>
     * Get Reservation Methods
     */
    getReservationMethods(requestParameters: GetReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationMethodsDetails>;
    /**
     * Use this API to create Block Cancellation Reasons. <p><strong>OperationId:</strong>postBlockCancellationReasons</p>
     * Create Block Cancellation Reasons
     */
    postBlockCancellationReasonsRaw(requestParameters: PostBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Cancellation Reasons. <p><strong>OperationId:</strong>postBlockCancellationReasons</p>
     * Create Block Cancellation Reasons
     */
    postBlockCancellationReasons(requestParameters: PostBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Block Lost Booking Codes. <p><strong>OperationId:</strong>postBlockLostBookingCodes</p>
     * Create Block Lost Booking Codes
     */
    postBlockLostBookingCodesRaw(requestParameters: PostBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Lost Booking Codes. <p><strong>OperationId:</strong>postBlockLostBookingCodes</p>
     * Create Block Lost Booking Codes
     */
    postBlockLostBookingCodes(requestParameters: PostBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Block Rate Override Reasons. <p><strong>OperationId:</strong>postBlockRateOverrideReasons</p>
     * Create Block Rate Override Reasons
     */
    postBlockRateOverrideReasonsRaw(requestParameters: PostBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Rate Override Reasons. <p><strong>OperationId:</strong>postBlockRateOverrideReasons</p>
     * Create Block Rate Override Reasons
     */
    postBlockRateOverrideReasons(requestParameters: PostBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Block Refused Reasons. <p><strong>OperationId:</strong>postBlockRefusedReasonspostBlo</p>
     * Create Block Refused Reasons
     */
    postBlockRefusedReasonspostBloRaw(requestParameters: PostBlockRefusedReasonspostBloRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Refused Reasons. <p><strong>OperationId:</strong>postBlockRefusedReasonspostBlo</p>
     * Create Block Refused Reasons
     */
    postBlockRefusedReasonspostBlo(requestParameters: PostBlockRefusedReasonspostBloRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows creation on Destination Codes. Destination Codes are used in OPERA Cloud during the block cancellation process, and they usually represent either a competitor hotel / chain, or a geographic destination that a specific block has been lost to.  <p><strong>OperationId:</strong>postDestinationCodes</p>
     * Create Destination Codes
     */
    postDestinationCodesRaw(requestParameters: PostDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows creation on Destination Codes. Destination Codes are used in OPERA Cloud during the block cancellation process, and they usually represent either a competitor hotel / chain, or a geographic destination that a specific block has been lost to.  <p><strong>OperationId:</strong>postDestinationCodes</p>
     * Create Destination Codes
     */
    postDestinationCodes(requestParameters: PostDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Reservation Methods. <p><strong>OperationId:</strong>postReservationMethods</p>
     * Create Reservation Methods
     */
    postReservationMethodsRaw(requestParameters: PostReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Reservation Methods. <p><strong>OperationId:</strong>postReservationMethods</p>
     * Create Reservation Methods
     */
    postReservationMethods(requestParameters: PostReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Block Cancellation Reason. <p><strong>OperationId:</strong>putBlockCancellationReasons</p>
     * Change Block Cancellation Reason
     */
    putBlockCancellationReasonsRaw(requestParameters: PutBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Cancellation Reason. <p><strong>OperationId:</strong>putBlockCancellationReasons</p>
     * Change Block Cancellation Reason
     */
    putBlockCancellationReasons(requestParameters: PutBlockCancellationReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Block Lost Booking Code. <p><strong>OperationId:</strong>putBlockLostBookingCodes</p>
     * Change Block Lost Booking Code
     */
    putBlockLostBookingCodesRaw(requestParameters: PutBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Lost Booking Code. <p><strong>OperationId:</strong>putBlockLostBookingCodes</p>
     * Change Block Lost Booking Code
     */
    putBlockLostBookingCodes(requestParameters: PutBlockLostBookingCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Block Rate Override Reason. <p><strong>OperationId:</strong>putBlockRateOverrideReasons</p>
     * Change Block Rate Override Reason
     */
    putBlockRateOverrideReasonsRaw(requestParameters: PutBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Rate Override Reason. <p><strong>OperationId:</strong>putBlockRateOverrideReasons</p>
     * Change Block Rate Override Reason
     */
    putBlockRateOverrideReasons(requestParameters: PutBlockRateOverrideReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Block Refused Reason. <p><strong>OperationId:</strong>putBlockRefusedReasons</p>
     * Change Block Refused Reason
     */
    putBlockRefusedReasonsRaw(requestParameters: PutBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Refused Reason. <p><strong>OperationId:</strong>putBlockRefusedReasons</p>
     * Change Block Refused Reason
     */
    putBlockRefusedReasons(requestParameters: PutBlockRefusedReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Destination Codes. <p><strong>OperationId:</strong>putDestinationCodes</p>
     * Change Destination Codes
     */
    putDestinationCodesRaw(requestParameters: PutDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Destination Codes. <p><strong>OperationId:</strong>putDestinationCodes</p>
     * Change Destination Codes
     */
    putDestinationCodes(requestParameters: PutDestinationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Reservation Methods. <p><strong>OperationId:</strong>putReservationMethods</p>
     * Change Reservation Methods
     */
    putReservationMethodsRaw(requestParameters: PutReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Reservation Methods. <p><strong>OperationId:</strong>putReservationMethods</p>
     * Change Reservation Methods
     */
    putReservationMethods(requestParameters: PutReservationMethodsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
