/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface BlockSalesAllowanceActivityLogType
 */
export interface BlockSalesAllowanceActivityLogType {
    /**
     *
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    hotelId?: string;
    /**
     * Date on which change happened.
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    logDate?: string;
    /**
     * sales Allowance Date
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    salesAllowanceDate?: string;
    /**
     * Value of sales allowance before the change.
     * @type {number}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    oldQuantity?: number;
    /**
     * Value of sales allowance after the change.
     * @type {number}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    newQuantity?: number;
    /**
     *
     * @type {number}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    refActionId?: number;
    /**
     * ID of user who made the change.
     * @type {number}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    logUserId?: number;
    /**
     * Name of user who made the change.
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    logUserName?: string;
    /**
     * Action type.
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    actionType?: string;
    /**
     * The IP Address of the machine that performed the activity
     * @type {string}
     * @memberof BlockSalesAllowanceActivityLogType
     */
    ipAddress?: string;
}
/**
 * Check if a given object implements the BlockSalesAllowanceActivityLogType interface.
 */
export declare function instanceOfBlockSalesAllowanceActivityLogType(value: object): boolean;
export declare function BlockSalesAllowanceActivityLogTypeFromJSON(json: any): BlockSalesAllowanceActivityLogType;
export declare function BlockSalesAllowanceActivityLogTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockSalesAllowanceActivityLogType;
export declare function BlockSalesAllowanceActivityLogTypeToJSON(value?: BlockSalesAllowanceActivityLogType | null): any;
