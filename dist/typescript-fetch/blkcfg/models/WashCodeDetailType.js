"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WashCodeDetailTypeToJSON = exports.WashCodeDetailTypeFromJSONTyped = exports.WashCodeDetailTypeFromJSON = exports.instanceOfWashCodeDetailType = void 0;
const runtime_1 = require("../runtime");
const WashByRoomType_1 = require("./WashByRoomType");
/**
 * Check if a given object implements the WashCodeDetailType interface.
 */
function instanceOfWashCodeDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfWashCodeDetailType = instanceOfWashCodeDetailType;
function WashCodeDetailTypeFromJSON(json) {
    return WashCodeDetailTypeFromJSONTyped(json, false);
}
exports.WashCodeDetailTypeFromJSON = WashCodeDetailTypeFromJSON;
function WashCodeDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'daysPriorToArrival': !(0, runtime_1.exists)(json, 'daysPriorToArrival') ? undefined : json['daysPriorToArrival'],
        'washByPercent': !(0, runtime_1.exists)(json, 'washByPercent') ? undefined : json['washByPercent'],
        'washByRoom': !(0, runtime_1.exists)(json, 'washByRoom') ? undefined : (0, WashByRoomType_1.WashByRoomTypeFromJSON)(json['washByRoom']),
    };
}
exports.WashCodeDetailTypeFromJSONTyped = WashCodeDetailTypeFromJSONTyped;
function WashCodeDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'daysPriorToArrival': value.daysPriorToArrival,
        'washByPercent': value.washByPercent,
        'washByRoom': (0, WashByRoomType_1.WashByRoomTypeToJSON)(value.washByRoom),
    };
}
exports.WashCodeDetailTypeToJSON = WashCodeDetailTypeToJSON;
