/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { SalesManagerType } from './SalesManagerType';
/**
 * Collection of Sales Managers information.
 * @export
 * @interface SalesManagersType
 */
export interface SalesManagersType {
    /**
     * Sales Manager's information.
     * @type {Array<SalesManagerType>}
     * @memberof SalesManagersType
     */
    salesManager?: Array<SalesManagerType>;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof SalesManagersType
     */
    totalPages?: number;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof SalesManagersType
     */
    offset?: number;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof SalesManagersType
     */
    limit?: number;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof SalesManagersType
     */
    hasMore?: boolean;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof SalesManagersType
     */
    totalResults?: number;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof SalesManagersType
     */
    count?: number;
}
/**
 * Check if a given object implements the SalesManagersType interface.
 */
export declare function instanceOfSalesManagersType(value: object): boolean;
export declare function SalesManagersTypeFromJSON(json: any): SalesManagersType;
export declare function SalesManagersTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesManagersType;
export declare function SalesManagersTypeToJSON(value?: SalesManagersType | null): any;
