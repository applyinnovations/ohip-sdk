/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Object to create block cutoff schedule details by providing date range, room type, days of week and cutoff days.
 * @export
 * @interface BlockCutoffScheduleRangeType
 */
export interface BlockCutoffScheduleRangeType {
    /**
     * Contains Hotel Code.
     * @type {string}
     * @memberof BlockCutoffScheduleRangeType
     */
    hotelId?: string;
    /**
     * Contains Cutoff Schedule Code Id.
     * @type {number}
     * @memberof BlockCutoffScheduleRangeType
     */
    cutoffCodeId?: number;
    /**
     * Contains Room Types.
     * @type {Array<string>}
     * @memberof BlockCutoffScheduleRangeType
     */
    roomTypes?: Array<string>;
    /**
     * Number of cutoff Days.
     * @type {number}
     * @memberof BlockCutoffScheduleRangeType
     */
    cutoffDays?: number;
    /**
     * Flag to indicate if the cutoff schedule already exists for criteria then overwrite the records.
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    overwriteExistingcutoffschedule?: boolean;
    /**
     * The starting value of the date range.
     * @type {string}
     * @memberof BlockCutoffScheduleRangeType
     */
    stayDateFrom?: string;
    /**
     * The ending value of the date range.
     * @type {string}
     * @memberof BlockCutoffScheduleRangeType
     */
    stayDateTo?: string;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    sunday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    monday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    tuesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    wednesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    thursday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    friday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof BlockCutoffScheduleRangeType
     */
    saturday?: boolean;
}
/**
 * Check if a given object implements the BlockCutoffScheduleRangeType interface.
 */
export declare function instanceOfBlockCutoffScheduleRangeType(value: object): boolean;
export declare function BlockCutoffScheduleRangeTypeFromJSON(json: any): BlockCutoffScheduleRangeType;
export declare function BlockCutoffScheduleRangeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockCutoffScheduleRangeType;
export declare function BlockCutoffScheduleRangeTypeToJSON(value?: BlockCutoffScheduleRangeType | null): any;
