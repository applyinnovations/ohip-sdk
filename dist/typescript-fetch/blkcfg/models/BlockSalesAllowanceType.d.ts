/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Contains single entry information for Block's Sales Allowance.
 * @export
 * @interface BlockSalesAllowanceType
 */
export interface BlockSalesAllowanceType {
    /**
     * Contains allocated number of rooms for allowance.
     * @type {number}
     * @memberof BlockSalesAllowanceType
     */
    allowance?: number;
    /**
     * Contains number of rooms are booked/consumed from sales allowance.
     * @type {number}
     * @memberof BlockSalesAllowanceType
     */
    booked?: number;
    /**
     * Contains cutoff date for sales allowance.
     * @type {Date}
     * @memberof BlockSalesAllowanceType
     */
    cutoffDate?: Date;
    /**
     * Contains Hotel Code.
     * @type {string}
     * @memberof BlockSalesAllowanceType
     */
    hotelId?: string;
    /**
     * Contains number of rooms are overbooked from sales allowance.
     * @type {number}
     * @memberof BlockSalesAllowanceType
     */
    overBooked?: number;
    /**
     * Contains room pool code.
     * @type {string}
     * @memberof BlockSalesAllowanceType
     */
    roomPool?: string;
    /**
     * Contains room type.
     * @type {string}
     * @memberof BlockSalesAllowanceType
     */
    roomType?: string;
    /**
     * Contains sales allowance date.
     * @type {Date}
     * @memberof BlockSalesAllowanceType
     */
    salesAllowanceDate?: Date;
}
/**
 * Check if a given object implements the BlockSalesAllowanceType interface.
 */
export declare function instanceOfBlockSalesAllowanceType(value: object): boolean;
export declare function BlockSalesAllowanceTypeFromJSON(json: any): BlockSalesAllowanceType;
export declare function BlockSalesAllowanceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockSalesAllowanceType;
export declare function BlockSalesAllowanceTypeToJSON(value?: BlockSalesAllowanceType | null): any;
