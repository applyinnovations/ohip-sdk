"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WashCodeTypeToJSON = exports.WashCodeTypeFromJSONTyped = exports.WashCodeTypeFromJSON = exports.instanceOfWashCodeType = void 0;
const runtime_1 = require("../runtime");
const WashCodeDetailType_1 = require("./WashCodeDetailType");
/**
 * Check if a given object implements the WashCodeType interface.
 */
function instanceOfWashCodeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfWashCodeType = instanceOfWashCodeType;
function WashCodeTypeFromJSON(json) {
    return WashCodeTypeFromJSONTyped(json, false);
}
exports.WashCodeTypeFromJSON = WashCodeTypeFromJSON;
function WashCodeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'washCodeDetails': !(0, runtime_1.exists)(json, 'washCodeDetails') ? undefined : (json['washCodeDetails'].map(WashCodeDetailType_1.WashCodeDetailTypeFromJSON)),
    };
}
exports.WashCodeTypeFromJSONTyped = WashCodeTypeFromJSONTyped;
function WashCodeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'description': value.description,
        'hotelId': value.hotelId,
        'washCodeDetails': value.washCodeDetails === undefined ? undefined : (value.washCodeDetails.map(WashCodeDetailType_1.WashCodeDetailTypeToJSON)),
    };
}
exports.WashCodeTypeToJSON = WashCodeTypeToJSON;
