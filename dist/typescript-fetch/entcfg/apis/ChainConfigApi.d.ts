/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AttractionClassesDetails, BrandCodesDetails, ChainDetails, ChangeBrandCodesRequest, ChangeCorporateBusinessUnitsRequest, ChangeCorporateDepartmentCodesRequest, ChangeCorporateDivisionsRequest, ChangeCorporateOperatingUnitsRequest, ChangeCountryGuestTypesRequest, ChangeCountryMainGroupsRequest, ChangeHotelCategoriesRequest, ChangeNoteTypesRequest, ChangePropertyDetailCategoriesRequest, ChangeRegionsCodeRequest, ChangeTemplateCodesRequest, ChangeUserDefinedFieldGroupsRequest, ChangeUserDefinedFieldValuesRequest, CommunicationMethodsEntDetailsDetails, CorporateBusinessUnitsDetails, CorporateDepartmentCodesDetails, CorporateDivisionsDetails, CorporateOperatingUnitsDetails, CountryGuestTypesDetails, CountryMainGroupsDetails, DefaultNoteDetails, HotelCategoriesDetails, MarketingCitiesByRegionDetails, MarketingRegionsDetails, NoteTypesDetails, PostAttractionClassesRequest, PostBrandCodesRequest, PostCommunicationMethodsEntDetailsRequest, PostCorporateBusinessUnitsRequest, PostCorporateDepartmentCodesRequest, PostCorporateDivisionsRequest, PostCorporateOperatingUnitsRequest, PostCountryGuestTypesRequest, PostCountryMainGroupsRequest, PostHotelCategoriesRequest, PostMarketingRegionsRequest, PostNoteTypesRequest, PostPropertyDetailCategoriesRequest, PostPropertyTypesRequest, PostRegionsCodeRequest, PostRoomAmenitiesRequest, PostTemplateCodesRequest, PostUserDefinedFieldGroupsRequest, PostUserDefinedFieldValuesRequest, PropertyDetailCategoriesDetails, PropertyTypesDetails, PutAttractionClassesRequest, PutChainRequest, PutCommunicationMethodsEntDetailsRequest, PutMarketingRegionsRequest, PutPropertyTypesRequest, PutRoomAmenitiesRequest, RegionsCodeDetails, RoomAmenitiesDetails, Status, TemplateCodesDetails, UserDefinedFieldGroupsDetails, UserDefinedFieldValuesDetails } from '../models';
export interface ChangeBrandCodesOperationRequest {
    brandCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    brandCodesToBeChanged?: ChangeBrandCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCorporateBusinessUnitsOperationRequest {
    businessUnitCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateBusinessUnitsToBeChanged?: ChangeCorporateBusinessUnitsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCorporateDepartmentCodesOperationRequest {
    departmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateDepartmentCodesToBeChanged?: ChangeCorporateDepartmentCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCorporateDivisionsOperationRequest {
    divisionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateDivisionsToBeChanged?: ChangeCorporateDivisionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCorporateOperatingUnitsOperationRequest {
    operatingUnitCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateOperatingUnitsToBeChanged?: ChangeCorporateOperatingUnitsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCountryGuestTypesOperationRequest {
    guestTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryGuestTypesToBeChanged?: ChangeCountryGuestTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCountryMainGroupsOperationRequest {
    groupCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryMainGroupsToBeChanged?: ChangeCountryMainGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelCategoriesOperationRequest {
    categoryCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelCategoriesToBeChanged?: ChangeHotelCategoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeNoteTypesOperationRequest {
    noteTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    noteTypesToBeChanged?: ChangeNoteTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangePropertyDetailCategoriesOperationRequest {
    categoryCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyDetailCategoriesToBeChanged?: ChangePropertyDetailCategoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRegionsCodeOperationRequest {
    regionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    regionsCodeToBeChanged?: ChangeRegionsCodeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateCodesOperationRequest {
    code?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCodesToBeChanged?: ChangeTemplateCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeUserDefinedFieldGroupsOperationRequest {
    udfGroupCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    userDefinedFieldGroupsToBeChanged?: ChangeUserDefinedFieldGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeUserDefinedFieldValuesOperationRequest {
    udfValue?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    userDefinedFieldValuesToBeChanged?: ChangeUserDefinedFieldValuesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAttractionClassesRequest {
    attractionClassCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCommunicationMethodsEntDetailsRequest {
    communicationMethodsEntDetailsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    communicationMethodsEntDetailsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteMarketingRegionsRequest {
    marketingRegionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    marketingRegionsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePropertyTypesRequest {
    propertyTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyTypesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomAmenitiesRequest {
    roomAmenitiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomAmenitiesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAttractionClassesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBrandCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetChainRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    enforceSecurity?: boolean;
    includeActive?: boolean;
    includeInactive?: boolean;
    limit?: number;
    chainCodes?: Array<string>;
    chainName?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCommunicationMethodsEntDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCorporateBusinessUnitsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCorporateDepartmentCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCorporateDivisionsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCorporateOperatingUnitsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCountryGuestTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCountryMainGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDefaultNoteRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    noteType?: string;
    noteCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelCategoriesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMarketingCitiesByRegionRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    regionCode?: string;
    marketingCity?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMarketingRegionsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetNoteTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    noteGroup?: string;
    includeInactive?: boolean;
    includeDepartmentDetails?: boolean;
    noteCode?: string;
    codes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPropertyDetailCategoriesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPropertyTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRegionsCodeRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomAmenitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetUserDefinedFieldGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    groupCodes?: Array<string>;
    descriptionWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetUserDefinedFieldValuesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    groupCode?: string;
    valueCodes?: Array<string>;
    descriptionWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAttractionClassesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionClassesCriteria?: PostAttractionClassesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBrandCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    brandCodesCriteria?: PostBrandCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCommunicationMethodsEntDetailsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    communicationMethodsEntDetailsCriteria?: PostCommunicationMethodsEntDetailsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCorporateBusinessUnitsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateBusinessUnitsCriteria?: PostCorporateBusinessUnitsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCorporateDepartmentCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateDepartmentCodesCriteria?: PostCorporateDepartmentCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCorporateDivisionsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateDivisionsCriteria?: PostCorporateDivisionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCorporateOperatingUnitsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateOperatingUnitsCriteria?: PostCorporateOperatingUnitsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCountryGuestTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryGuestTypesCriteria?: PostCountryGuestTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCountryMainGroupsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryMainGroupsCriteria?: PostCountryMainGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelCategoriesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelCategoriesCriteria?: PostHotelCategoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMarketingRegionsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    marketingRegionsCriteria?: PostMarketingRegionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostNoteTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    noteTypesCriteria?: PostNoteTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPropertyDetailCategoriesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyDetailCategoriesCriteria?: PostPropertyDetailCategoriesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPropertyTypesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyTypesCriteria?: PostPropertyTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRegionsCodeOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    regionsCodeCriteria?: PostRegionsCodeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomAmenitiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomAmenitiesCriteria?: PostRoomAmenitiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateCodesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCodesCriteria?: PostTemplateCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostUserDefinedFieldGroupsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    userDefinedFieldGroupsCriteria?: PostUserDefinedFieldGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostUserDefinedFieldValuesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    userDefinedFieldValuesCriteria?: PostUserDefinedFieldValuesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAttractionClassesOperationRequest {
    attractionClassCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionClassesToBeChanged?: PutAttractionClassesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutChainOperationRequest {
    chainCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    chainToBeChanged?: PutChainRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCommunicationMethodsEntDetailsOperationRequest {
    communicationMethodsEntDetailsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    communicationMethodsEntDetailsToBeChanged?: PutCommunicationMethodsEntDetailsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutMarketingRegionsOperationRequest {
    marketingRegionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    marketingRegionsToBeChanged?: PutMarketingRegionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPropertyTypesOperationRequest {
    propertyTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyTypesToBeChanged?: PutPropertyTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomAmenitiesOperationRequest {
    roomAmenitiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomAmenitiesToBeChanged?: PutRoomAmenitiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBrandCodesRequest {
    brandCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    brandCodesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCorporateBusinessUnitsRequest {
    businessUnitCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateBusinessUnitsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCorporateDepartmentCodesRequest {
    departmentCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCorporateDivisionsRequest {
    divisionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateDivisionsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCorporateOperatingUnitsRequest {
    operatingUnitCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    corporateOperatingUnitsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCountryGuestTypesRequest {
    guestTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryGuestTypesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCountryMainGroupsRequest {
    groupCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countryMainGroupsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelCategoriesRequest {
    categoryCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveNoteTypesRequest {
    noteTypeCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    noteGroup?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemovePropertyDetailCategoriesRequest {
    categoryCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    propertyDetailCategoriesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveRegionsCodeRequest {
    regionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateCodesRequest {
    code?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveUserDefinedFieldGroupsRequest {
    udfGroupCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveUserDefinedFieldValuesRequest {
    udfValue?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    groupCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ChainConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update brand codes based on brandCode, brandCodesToBeChanged. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>changeBrandCodes</p>
     * Change Brand Code
     */
    changeBrandCodesRaw(requestParameters: ChangeBrandCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update brand codes based on brandCode, brandCodesToBeChanged. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>changeBrandCodes</p>
     * Change Brand Code
     */
    changeBrandCodes(requestParameters: ChangeBrandCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Corporate Business Units based on businessUnitCode, corporateBusinessUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateBusinessUnits</p>
     * Change Corporate Business Units
     */
    changeCorporateBusinessUnitsRaw(requestParameters: ChangeCorporateBusinessUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Corporate Business Units based on businessUnitCode, corporateBusinessUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateBusinessUnits</p>
     * Change Corporate Business Units
     */
    changeCorporateBusinessUnits(requestParameters: ChangeCorporateBusinessUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update corporate department codes based on departmentCode, corporateDepartmentCodesToBeChanged. <p><strong>OperationId:</strong>changeCorporateDepartmentCodes</p>
     * Change Corporate Department Codes
     */
    changeCorporateDepartmentCodesRaw(requestParameters: ChangeCorporateDepartmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update corporate department codes based on departmentCode, corporateDepartmentCodesToBeChanged. <p><strong>OperationId:</strong>changeCorporateDepartmentCodes</p>
     * Change Corporate Department Codes
     */
    changeCorporateDepartmentCodes(requestParameters: ChangeCorporateDepartmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update corporate divisions based on divisionCode, corporateDivisionsToBeChanged. <p><strong>OperationId:</strong>changeCorporateDivisions</p>
     * Change Corporate Divisions
     */
    changeCorporateDivisionsRaw(requestParameters: ChangeCorporateDivisionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update corporate divisions based on divisionCode, corporateDivisionsToBeChanged. <p><strong>OperationId:</strong>changeCorporateDivisions</p>
     * Change Corporate Divisions
     */
    changeCorporateDivisions(requestParameters: ChangeCorporateDivisionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update corporate operating units based on operatingUnitCode, corporateOperatingUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateOperatingUnits</p>
     * Change Corporate Operating Units
     */
    changeCorporateOperatingUnitsRaw(requestParameters: ChangeCorporateOperatingUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update corporate operating units based on operatingUnitCode, corporateOperatingUnitsToBeChanged. <p><strong>OperationId:</strong>changeCorporateOperatingUnits</p>
     * Change Corporate Operating Units
     */
    changeCorporateOperatingUnits(requestParameters: ChangeCorporateOperatingUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update country guest types based on guestTypeCode, countryGuestTypesToBeChanged. <p><strong>OperationId:</strong>changeCountryGuestTypes</p>
     * Change Country Guest Types
     */
    changeCountryGuestTypesRaw(requestParameters: ChangeCountryGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update country guest types based on guestTypeCode, countryGuestTypesToBeChanged. <p><strong>OperationId:</strong>changeCountryGuestTypes</p>
     * Change Country Guest Types
     */
    changeCountryGuestTypes(requestParameters: ChangeCountryGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update country main groups based on groupCode, countryMainGroupsToBeChanged. <p><strong>OperationId:</strong>changeCountryMainGroups</p>
     * Change Country Main Groups
     */
    changeCountryMainGroupsRaw(requestParameters: ChangeCountryMainGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update country main groups based on groupCode, countryMainGroupsToBeChanged. <p><strong>OperationId:</strong>changeCountryMainGroups</p>
     * Change Country Main Groups
     */
    changeCountryMainGroups(requestParameters: ChangeCountryMainGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update hotel categories based on categoryCode, hotelCategoriesToBeChanged. <p><strong>OperationId:</strong>changeHotelCategories</p>
     * Change Hotel Categories
     */
    changeHotelCategoriesRaw(requestParameters: ChangeHotelCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update hotel categories based on categoryCode, hotelCategoriesToBeChanged. <p><strong>OperationId:</strong>changeHotelCategories</p>
     * Change Hotel Categories
     */
    changeHotelCategories(requestParameters: ChangeHotelCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update note types based on noteTypeCode, noteTypesToBeChanged. <p><strong>OperationId:</strong>changeNoteTypes</p>
     * Change Note Types
     */
    changeNoteTypesRaw(requestParameters: ChangeNoteTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update note types based on noteTypeCode, noteTypesToBeChanged. <p><strong>OperationId:</strong>changeNoteTypes</p>
     * Change Note Types
     */
    changeNoteTypes(requestParameters: ChangeNoteTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update property detail categories based on categoryCode, propertyDetailCategoriesToBeChanged. <p><strong>OperationId:</strong>changePropertyDetailCategories</p>
     * Change Property Detail Categories
     */
    changePropertyDetailCategoriesRaw(requestParameters: ChangePropertyDetailCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update property detail categories based on categoryCode, propertyDetailCategoriesToBeChanged. <p><strong>OperationId:</strong>changePropertyDetailCategories</p>
     * Change Property Detail Categories
     */
    changePropertyDetailCategories(requestParameters: ChangePropertyDetailCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update region codes based on regionCode, regionsCodeToBeChanged. <p><strong>OperationId:</strong>changeRegionsCode</p>
     * Change Regions Code
     */
    changeRegionsCodeRaw(requestParameters: ChangeRegionsCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update region codes based on regionCode, regionsCodeToBeChanged. <p><strong>OperationId:</strong>changeRegionsCode</p>
     * Change Regions Code
     */
    changeRegionsCode(requestParameters: ChangeRegionsCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update template codes based on code, templateCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCodes</p>
     * Change Template Codes
     */
    changeTemplateCodesRaw(requestParameters: ChangeTemplateCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update template codes based on code, templateCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCodes</p>
     * Change Template Codes
     */
    changeTemplateCodes(requestParameters: ChangeTemplateCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update user defined field groups based on udfGroupCode, userDefinedFieldGroupsToBeChanged. <p><strong>OperationId:</strong>changeUserDefinedFieldGroups</p>
     * Change User Defined Field Groups
     */
    changeUserDefinedFieldGroupsRaw(requestParameters: ChangeUserDefinedFieldGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update user defined field groups based on udfGroupCode, userDefinedFieldGroupsToBeChanged. <p><strong>OperationId:</strong>changeUserDefinedFieldGroups</p>
     * Change User Defined Field Groups
     */
    changeUserDefinedFieldGroups(requestParameters: ChangeUserDefinedFieldGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update user defined field values based on udfValue, userDefinedFieldValuesToBeChanged. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>changeUserDefinedFieldValues</p>
     * Change a User Defined Field Value
     */
    changeUserDefinedFieldValuesRaw(requestParameters: ChangeUserDefinedFieldValuesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update user defined field values based on udfValue, userDefinedFieldValuesToBeChanged. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>changeUserDefinedFieldValues</p>
     * Change a User Defined Field Value
     */
    changeUserDefinedFieldValues(requestParameters: ChangeUserDefinedFieldValuesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Attraction Classes. <p><strong>OperationId:</strong>deleteAttractionClasses</p>
     * Delete Attraction Classes
     */
    deleteAttractionClassesRaw(requestParameters: DeleteAttractionClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Attraction Classes. <p><strong>OperationId:</strong>deleteAttractionClasses</p>
     * Delete Attraction Classes
     */
    deleteAttractionClasses(requestParameters: DeleteAttractionClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Communication Methods Ent Details. <p><strong>OperationId:</strong>deleteCommunicationMethodsEntDetails</p>
     * Delete Communication Methods Ent Details
     */
    deleteCommunicationMethodsEntDetailsRaw(requestParameters: DeleteCommunicationMethodsEntDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Communication Methods Ent Details. <p><strong>OperationId:</strong>deleteCommunicationMethodsEntDetails</p>
     * Delete Communication Methods Ent Details
     */
    deleteCommunicationMethodsEntDetails(requestParameters: DeleteCommunicationMethodsEntDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Marketing Regions. <p><strong>OperationId:</strong>deleteMarketingRegions</p>
     * Delete Marketing Regions
     */
    deleteMarketingRegionsRaw(requestParameters: DeleteMarketingRegionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Marketing Regions. <p><strong>OperationId:</strong>deleteMarketingRegions</p>
     * Delete Marketing Regions
     */
    deleteMarketingRegions(requestParameters: DeleteMarketingRegionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Property Types. <p><strong>OperationId:</strong>deletePropertyTypes</p>
     * Delete Property Types
     */
    deletePropertyTypesRaw(requestParameters: DeletePropertyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Property Types. <p><strong>OperationId:</strong>deletePropertyTypes</p>
     * Delete Property Types
     */
    deletePropertyTypes(requestParameters: DeletePropertyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Room Amenities. <p><strong>OperationId:</strong>deleteRoomAmenities</p>
     * Delete Room Amenities
     */
    deleteRoomAmenitiesRaw(requestParameters: DeleteRoomAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Room Amenities. <p><strong>OperationId:</strong>deleteRoomAmenities</p>
     * Delete Room Amenities
     */
    deleteRoomAmenities(requestParameters: DeleteRoomAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Attraction Classes. <p><strong>OperationId:</strong>getAttractionClasses</p>
     * Get Attraction Classes
     */
    getAttractionClassesRaw(requestParameters: GetAttractionClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AttractionClassesDetails>>;
    /**
     * Use this API to get Attraction Classes. <p><strong>OperationId:</strong>getAttractionClasses</p>
     * Get Attraction Classes
     */
    getAttractionClasses(requestParameters: GetAttractionClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AttractionClassesDetails>;
    /**
     * Use this API to return brand codes based on search criteria such as codes, wildCard, description. Brand codes are used for different hotel brands within a hotel corporation.<p><strong>OperationId:</strong>getBrandCodes</p>
     * Get brand codes
     */
    getBrandCodesRaw(requestParameters: GetBrandCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BrandCodesDetails>>;
    /**
     * Use this API to return brand codes based on search criteria such as codes, wildCard, description. Brand codes are used for different hotel brands within a hotel corporation.<p><strong>OperationId:</strong>getBrandCodes</p>
     * Get brand codes
     */
    getBrandCodes(requestParameters: GetBrandCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BrandCodesDetails>;
    /**
     * Use this API to get Chains. <p><strong>OperationId:</strong>getChain</p>
     * Get Chains
     */
    getChainRaw(requestParameters: GetChainRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChainDetails>>;
    /**
     * Use this API to get Chains. <p><strong>OperationId:</strong>getChain</p>
     * Get Chains
     */
    getChain(requestParameters: GetChainRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChainDetails>;
    /**
     * Use this API to get Communication Methods Ent Details. <p><strong>OperationId:</strong>getCommunicationMethodsEntDetails</p>
     * Get Communication Methods Ent Details
     */
    getCommunicationMethodsEntDetailsRaw(requestParameters: GetCommunicationMethodsEntDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CommunicationMethodsEntDetailsDetails>>;
    /**
     * Use this API to get Communication Methods Ent Details. <p><strong>OperationId:</strong>getCommunicationMethodsEntDetails</p>
     * Get Communication Methods Ent Details
     */
    getCommunicationMethodsEntDetails(requestParameters: GetCommunicationMethodsEntDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CommunicationMethodsEntDetailsDetails>;
    /**
     * Use this API to get Corporate Business Units. <p><strong>OperationId:</strong>getCorporateBusinessUnits</p>
     * Get Corporate Business Units
     */
    getCorporateBusinessUnitsRaw(requestParameters: GetCorporateBusinessUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CorporateBusinessUnitsDetails>>;
    /**
     * Use this API to get Corporate Business Units. <p><strong>OperationId:</strong>getCorporateBusinessUnits</p>
     * Get Corporate Business Units
     */
    getCorporateBusinessUnits(requestParameters: GetCorporateBusinessUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CorporateBusinessUnitsDetails>;
    /**
     * Use this API to get Corporate Department Codes. <p><strong>OperationId:</strong>getCorporateDepartmentCodes</p>
     * Get Corporate Department Codes
     */
    getCorporateDepartmentCodesRaw(requestParameters: GetCorporateDepartmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CorporateDepartmentCodesDetails>>;
    /**
     * Use this API to get Corporate Department Codes. <p><strong>OperationId:</strong>getCorporateDepartmentCodes</p>
     * Get Corporate Department Codes
     */
    getCorporateDepartmentCodes(requestParameters: GetCorporateDepartmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CorporateDepartmentCodesDetails>;
    /**
     * Use this API to get Corporate Divisions. <p><strong>OperationId:</strong>getCorporateDivisions</p>
     * Get Corporate Divisions
     */
    getCorporateDivisionsRaw(requestParameters: GetCorporateDivisionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CorporateDivisionsDetails>>;
    /**
     * Use this API to get Corporate Divisions. <p><strong>OperationId:</strong>getCorporateDivisions</p>
     * Get Corporate Divisions
     */
    getCorporateDivisions(requestParameters: GetCorporateDivisionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CorporateDivisionsDetails>;
    /**
     * Use this API to get Corporate Operating Units. <p><strong>OperationId:</strong>getCorporateOperatingUnits</p>
     * Get Corporate Operating Units
     */
    getCorporateOperatingUnitsRaw(requestParameters: GetCorporateOperatingUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CorporateOperatingUnitsDetails>>;
    /**
     * Use this API to get Corporate Operating Units. <p><strong>OperationId:</strong>getCorporateOperatingUnits</p>
     * Get Corporate Operating Units
     */
    getCorporateOperatingUnits(requestParameters: GetCorporateOperatingUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CorporateOperatingUnitsDetails>;
    /**
     * Use this API to get Country Guest Types. <p><strong>OperationId:</strong>getCountryGuestTypes</p>
     * Get Country Guest Types
     */
    getCountryGuestTypesRaw(requestParameters: GetCountryGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CountryGuestTypesDetails>>;
    /**
     * Use this API to get Country Guest Types. <p><strong>OperationId:</strong>getCountryGuestTypes</p>
     * Get Country Guest Types
     */
    getCountryGuestTypes(requestParameters: GetCountryGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CountryGuestTypesDetails>;
    /**
     * Use this API to get Country Main Groups. <p><strong>OperationId:</strong>getCountryMainGroups</p>
     * Get Country Main Groups
     */
    getCountryMainGroupsRaw(requestParameters: GetCountryMainGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CountryMainGroupsDetails>>;
    /**
     * Use this API to get Country Main Groups. <p><strong>OperationId:</strong>getCountryMainGroups</p>
     * Get Country Main Groups
     */
    getCountryMainGroups(requestParameters: GetCountryMainGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CountryMainGroupsDetails>;
    /**
     * Use this API to get Default Note text. <p><strong>OperationId:</strong>getDefaultNote</p>
     * Get Default Note text
     */
    getDefaultNoteRaw(requestParameters: GetDefaultNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DefaultNoteDetails>>;
    /**
     * Use this API to get Default Note text. <p><strong>OperationId:</strong>getDefaultNote</p>
     * Get Default Note text
     */
    getDefaultNote(requestParameters: GetDefaultNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DefaultNoteDetails>;
    /**
     * . <p><strong>OperationId:</strong>getHotelCategories</p>
     * Get Hotel Categories
     */
    getHotelCategoriesRaw(requestParameters: GetHotelCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelCategoriesDetails>>;
    /**
     * . <p><strong>OperationId:</strong>getHotelCategories</p>
     * Get Hotel Categories
     */
    getHotelCategories(requestParameters: GetHotelCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelCategoriesDetails>;
    /**
     * Use this API to get marketing cities by region. <p><strong>OperationId:</strong>getMarketingCitiesByRegion</p>
     * Get marketing cities by region
     */
    getMarketingCitiesByRegionRaw(requestParameters: GetMarketingCitiesByRegionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketingCitiesByRegionDetails>>;
    /**
     * Use this API to get marketing cities by region. <p><strong>OperationId:</strong>getMarketingCitiesByRegion</p>
     * Get marketing cities by region
     */
    getMarketingCitiesByRegion(requestParameters: GetMarketingCitiesByRegionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketingCitiesByRegionDetails>;
    /**
     * Use this API to get Marketing Regions. <p><strong>OperationId:</strong>getMarketingRegions</p>
     * Get Marketing Regions
     */
    getMarketingRegionsRaw(requestParameters: GetMarketingRegionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketingRegionsDetails>>;
    /**
     * Use this API to get Marketing Regions. <p><strong>OperationId:</strong>getMarketingRegions</p>
     * Get Marketing Regions
     */
    getMarketingRegions(requestParameters: GetMarketingRegionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketingRegionsDetails>;
    /**
     * Use this API to get Note Types. <p><strong>OperationId:</strong>getNoteTypes</p>
     * Get Note Types
     */
    getNoteTypesRaw(requestParameters: GetNoteTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NoteTypesDetails>>;
    /**
     * Use this API to get Note Types. <p><strong>OperationId:</strong>getNoteTypes</p>
     * Get Note Types
     */
    getNoteTypes(requestParameters: GetNoteTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NoteTypesDetails>;
    /**
     * Use this API to get Property Detail Categories. <p><strong>OperationId:</strong>getPropertyDetailCategories</p>
     * Get Property Detail Categories
     */
    getPropertyDetailCategoriesRaw(requestParameters: GetPropertyDetailCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PropertyDetailCategoriesDetails>>;
    /**
     * Use this API to get Property Detail Categories. <p><strong>OperationId:</strong>getPropertyDetailCategories</p>
     * Get Property Detail Categories
     */
    getPropertyDetailCategories(requestParameters: GetPropertyDetailCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PropertyDetailCategoriesDetails>;
    /**
     * Use this API to get Property Types based on search criteria such as codes, wildCard, description.  Property types are used for different hotel types i.e. Resort, Business, CityCenter, Motel, BedAndBreakfast.<p><strong>OperationId:</strong>getPropertyTypes</p>
     * Get property types
     */
    getPropertyTypesRaw(requestParameters: GetPropertyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PropertyTypesDetails>>;
    /**
     * Use this API to get Property Types based on search criteria such as codes, wildCard, description.  Property types are used for different hotel types i.e. Resort, Business, CityCenter, Motel, BedAndBreakfast.<p><strong>OperationId:</strong>getPropertyTypes</p>
     * Get property types
     */
    getPropertyTypes(requestParameters: GetPropertyTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PropertyTypesDetails>;
    /**
     * Use this API to return region codes based on search criteria such as fetchInactive, codes, wildCard, description. <p><strong>OperationId:</strong>getRegionsCode</p>
     * Get Regions Code
     */
    getRegionsCodeRaw(requestParameters: GetRegionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RegionsCodeDetails>>;
    /**
     * Use this API to return region codes based on search criteria such as fetchInactive, codes, wildCard, description. <p><strong>OperationId:</strong>getRegionsCode</p>
     * Get Regions Code
     */
    getRegionsCode(requestParameters: GetRegionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RegionsCodeDetails>;
    /**
     * Use this API to get Room Amenities. <p><strong>OperationId:</strong>getRoomAmenities</p>
     * Get Room Amenities
     */
    getRoomAmenitiesRaw(requestParameters: GetRoomAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomAmenitiesDetails>>;
    /**
     * Use this API to get Room Amenities. <p><strong>OperationId:</strong>getRoomAmenities</p>
     * Get Room Amenities
     */
    getRoomAmenities(requestParameters: GetRoomAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomAmenitiesDetails>;
    /**
     *  Use this API to get Template Codes. <p><strong>OperationId:</strong>getTemplateCodes</p>
     *  Get Template Codes
     */
    getTemplateCodesRaw(requestParameters: GetTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateCodesDetails>>;
    /**
     *  Use this API to get Template Codes. <p><strong>OperationId:</strong>getTemplateCodes</p>
     *  Get Template Codes
     */
    getTemplateCodes(requestParameters: GetTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateCodesDetails>;
    /**
     * Use this API to get User Defined Field Groups. <p><strong>OperationId:</strong>getUserDefinedFieldGroups</p>
     * Get User Defined Field Groups
     */
    getUserDefinedFieldGroupsRaw(requestParameters: GetUserDefinedFieldGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDefinedFieldGroupsDetails>>;
    /**
     * Use this API to get User Defined Field Groups. <p><strong>OperationId:</strong>getUserDefinedFieldGroups</p>
     * Get User Defined Field Groups
     */
    getUserDefinedFieldGroups(requestParameters: GetUserDefinedFieldGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDefinedFieldGroupsDetails>;
    /**
     * Use this API to return User Defined Field (UDF) Values based on search criteria such as groupCode, valueCode, descriptionWildCard.  The LOV Group and LOV Values functionality allows a property to create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in OPERA Cloud.<p><strong>OperationId:</strong>getUserDefinedFieldValues</p>
     * Get user defined field (UDF) values
     */
    getUserDefinedFieldValuesRaw(requestParameters: GetUserDefinedFieldValuesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDefinedFieldValuesDetails>>;
    /**
     * Use this API to return User Defined Field (UDF) Values based on search criteria such as groupCode, valueCode, descriptionWildCard.  The LOV Group and LOV Values functionality allows a property to create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in OPERA Cloud.<p><strong>OperationId:</strong>getUserDefinedFieldValues</p>
     * Get user defined field (UDF) values
     */
    getUserDefinedFieldValues(requestParameters: GetUserDefinedFieldValuesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDefinedFieldValuesDetails>;
    /**
     * Use this API to create Attraction Classes. <p><strong>OperationId:</strong>postAttractionClasses</p>
     * Create Attraction Classes
     */
    postAttractionClassesRaw(requestParameters: PostAttractionClassesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Attraction Classes. <p><strong>OperationId:</strong>postAttractionClasses</p>
     * Create Attraction Classes
     */
    postAttractionClasses(requestParameters: PostAttractionClassesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Brand Codes. <p><strong>OperationId:</strong>postBrandCodes</p>
     * Create Brand Codes
     */
    postBrandCodesRaw(requestParameters: PostBrandCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Brand Codes. <p><strong>OperationId:</strong>postBrandCodes</p>
     * Create Brand Codes
     */
    postBrandCodes(requestParameters: PostBrandCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Communication Methods Ent Details. <p><strong>OperationId:</strong>postCommunicationMethodsEntDetails</p>
     * Create Communication Methods Ent Details
     */
    postCommunicationMethodsEntDetailsRaw(requestParameters: PostCommunicationMethodsEntDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Communication Methods Ent Details. <p><strong>OperationId:</strong>postCommunicationMethodsEntDetails</p>
     * Create Communication Methods Ent Details
     */
    postCommunicationMethodsEntDetails(requestParameters: PostCommunicationMethodsEntDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Corporate Business Units. <p><strong>OperationId:</strong>postCorporateBusinessUnits</p>
     * Create Corporate Business Units
     */
    postCorporateBusinessUnitsRaw(requestParameters: PostCorporateBusinessUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Corporate Business Units. <p><strong>OperationId:</strong>postCorporateBusinessUnits</p>
     * Create Corporate Business Units
     */
    postCorporateBusinessUnits(requestParameters: PostCorporateBusinessUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Corporate Department Codes. <p><strong>OperationId:</strong>postCorporateDepartmentCodes</p>
     * Create Corporate Department Codes
     */
    postCorporateDepartmentCodesRaw(requestParameters: PostCorporateDepartmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Corporate Department Codes. <p><strong>OperationId:</strong>postCorporateDepartmentCodes</p>
     * Create Corporate Department Codes
     */
    postCorporateDepartmentCodes(requestParameters: PostCorporateDepartmentCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Corporate Divisions. <p><strong>OperationId:</strong>postCorporateDivisions</p>
     * Create Corporate Divisions
     */
    postCorporateDivisionsRaw(requestParameters: PostCorporateDivisionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Corporate Divisions. <p><strong>OperationId:</strong>postCorporateDivisions</p>
     * Create Corporate Divisions
     */
    postCorporateDivisions(requestParameters: PostCorporateDivisionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Corporate Operating Units. <p><strong>OperationId:</strong>postCorporateOperatingUnits</p>
     * Create Corporate Operating Units
     */
    postCorporateOperatingUnitsRaw(requestParameters: PostCorporateOperatingUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Corporate Operating Units. <p><strong>OperationId:</strong>postCorporateOperatingUnits</p>
     * Create Corporate Operating Units
     */
    postCorporateOperatingUnits(requestParameters: PostCorporateOperatingUnitsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Country Guest Types. <p><strong>OperationId:</strong>postCountryGuestTypes</p>
     * Create Country Guest Types
     */
    postCountryGuestTypesRaw(requestParameters: PostCountryGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Country Guest Types. <p><strong>OperationId:</strong>postCountryGuestTypes</p>
     * Create Country Guest Types
     */
    postCountryGuestTypes(requestParameters: PostCountryGuestTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Country Main Groups. <p><strong>OperationId:</strong>postCountryMainGroups</p>
     * Create Country Main Groups
     */
    postCountryMainGroupsRaw(requestParameters: PostCountryMainGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Country Main Groups. <p><strong>OperationId:</strong>postCountryMainGroups</p>
     * Create Country Main Groups
     */
    postCountryMainGroups(requestParameters: PostCountryMainGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * . <p><strong>OperationId:</strong>postHotelCategories</p>
     * Create Hotel Categories
     */
    postHotelCategoriesRaw(requestParameters: PostHotelCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * . <p><strong>OperationId:</strong>postHotelCategories</p>
     * Create Hotel Categories
     */
    postHotelCategories(requestParameters: PostHotelCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Marketing Regions. <p><strong>OperationId:</strong>postMarketingRegions</p>
     * Create Marketing Regions
     */
    postMarketingRegionsRaw(requestParameters: PostMarketingRegionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Marketing Regions. <p><strong>OperationId:</strong>postMarketingRegions</p>
     * Create Marketing Regions
     */
    postMarketingRegions(requestParameters: PostMarketingRegionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Note Types. <p><strong>OperationId:</strong>postNoteTypes</p>
     * Create Note Types
     */
    postNoteTypesRaw(requestParameters: PostNoteTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Note Types. <p><strong>OperationId:</strong>postNoteTypes</p>
     * Create Note Types
     */
    postNoteTypes(requestParameters: PostNoteTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Property Detail Categories. <p><strong>OperationId:</strong>postPropertyDetailCategories</p>
     * Create Property Detail Categories
     */
    postPropertyDetailCategoriesRaw(requestParameters: PostPropertyDetailCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Property Detail Categories. <p><strong>OperationId:</strong>postPropertyDetailCategories</p>
     * Create Property Detail Categories
     */
    postPropertyDetailCategories(requestParameters: PostPropertyDetailCategoriesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Property Types. <p><strong>OperationId:</strong>postPropertyTypes</p>
     * Create Property Types
     */
    postPropertyTypesRaw(requestParameters: PostPropertyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Property Types. <p><strong>OperationId:</strong>postPropertyTypes</p>
     * Create Property Types
     */
    postPropertyTypes(requestParameters: PostPropertyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create region codes. <p><strong>OperationId:</strong>postRegionsCode</p>
     * Create Regions Code
     */
    postRegionsCodeRaw(requestParameters: PostRegionsCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create region codes. <p><strong>OperationId:</strong>postRegionsCode</p>
     * Create Regions Code
     */
    postRegionsCode(requestParameters: PostRegionsCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Room Amenities. <p><strong>OperationId:</strong>postRoomAmenities</p>
     * Create Room Amenities
     */
    postRoomAmenitiesRaw(requestParameters: PostRoomAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Room Amenities. <p><strong>OperationId:</strong>postRoomAmenities</p>
     * Create Room Amenities
     */
    postRoomAmenities(requestParameters: PostRoomAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Template Codes. <p><strong>OperationId:</strong>postTemplateCodes</p>
     * Create Template Codes
     */
    postTemplateCodesRaw(requestParameters: PostTemplateCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Template Codes. <p><strong>OperationId:</strong>postTemplateCodes</p>
     * Create Template Codes
     */
    postTemplateCodes(requestParameters: PostTemplateCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create User Defined Field Groups. <p><strong>OperationId:</strong>postUserDefinedFieldGroups</p>
     * Create User Defined Field Groups
     */
    postUserDefinedFieldGroupsRaw(requestParameters: PostUserDefinedFieldGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create User Defined Field Groups. <p><strong>OperationId:</strong>postUserDefinedFieldGroups</p>
     * Create User Defined Field Groups
     */
    postUserDefinedFieldGroups(requestParameters: PostUserDefinedFieldGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new User Defined Field (UDF) Value. The LOV Group and LOV Values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF).  This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>postUserDefinedFieldValues</p>
     * Create User Defined Field (UDF) Values
     */
    postUserDefinedFieldValuesRaw(requestParameters: PostUserDefinedFieldValuesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new User Defined Field (UDF) Value. The LOV Group and LOV Values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF).  This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>postUserDefinedFieldValues</p>
     * Create User Defined Field (UDF) Values
     */
    postUserDefinedFieldValues(requestParameters: PostUserDefinedFieldValuesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Attraction Classes. <p><strong>OperationId:</strong>putAttractionClasses</p>
     * Change Attraction Classes
     */
    putAttractionClassesRaw(requestParameters: PutAttractionClassesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Attraction Classes. <p><strong>OperationId:</strong>putAttractionClasses</p>
     * Change Attraction Classes
     */
    putAttractionClasses(requestParameters: PutAttractionClassesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Chain. <p><strong>OperationId:</strong>putChain</p>
     * Change Chain
     */
    putChainRaw(requestParameters: PutChainOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Chain. <p><strong>OperationId:</strong>putChain</p>
     * Change Chain
     */
    putChain(requestParameters: PutChainOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Communication Methods Ent Details. <p><strong>OperationId:</strong>putCommunicationMethodsEntDetails</p>
     * Change Communication Methods Ent Details
     */
    putCommunicationMethodsEntDetailsRaw(requestParameters: PutCommunicationMethodsEntDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Communication Methods Ent Details. <p><strong>OperationId:</strong>putCommunicationMethodsEntDetails</p>
     * Change Communication Methods Ent Details
     */
    putCommunicationMethodsEntDetails(requestParameters: PutCommunicationMethodsEntDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Marketing Regions. <p><strong>OperationId:</strong>putMarketingRegions</p>
     * Change Marketing Regions
     */
    putMarketingRegionsRaw(requestParameters: PutMarketingRegionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Marketing Regions. <p><strong>OperationId:</strong>putMarketingRegions</p>
     * Change Marketing Regions
     */
    putMarketingRegions(requestParameters: PutMarketingRegionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Property Types. <p><strong>OperationId:</strong>putPropertyTypes</p>
     * Change Property Types
     */
    putPropertyTypesRaw(requestParameters: PutPropertyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Property Types. <p><strong>OperationId:</strong>putPropertyTypes</p>
     * Change Property Types
     */
    putPropertyTypes(requestParameters: PutPropertyTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Room Amenities. <p><strong>OperationId:</strong>putRoomAmenities</p>
     * Change Room Amenities
     */
    putRoomAmenitiesRaw(requestParameters: PutRoomAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Room Amenities. <p><strong>OperationId:</strong>putRoomAmenities</p>
     * Change Room Amenities
     */
    putRoomAmenities(requestParameters: PutRoomAmenitiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete brand codes based on brandCode, brandCodesCodes. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>removeBrandCodes</p>
     * Delete Brand Code
     */
    removeBrandCodesRaw(requestParameters: RemoveBrandCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete brand codes based on brandCode, brandCodesCodes. Brand codes are used for different hotel brands within a hotel corporation. <p><strong>OperationId:</strong>removeBrandCodes</p>
     * Delete Brand Code
     */
    removeBrandCodes(requestParameters: RemoveBrandCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Corporate Business Units. <p><strong>OperationId:</strong>removeCorporateBusinessUnits</p>
     * Delete Corporate Business Units
     */
    removeCorporateBusinessUnitsRaw(requestParameters: RemoveCorporateBusinessUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Corporate Business Units. <p><strong>OperationId:</strong>removeCorporateBusinessUnits</p>
     * Delete Corporate Business Units
     */
    removeCorporateBusinessUnits(requestParameters: RemoveCorporateBusinessUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete corporate department codes based on departmentCode. <p><strong>OperationId:</strong>removeCorporateDepartmentCodes</p>
     * Delete Corporate Department Codes
     */
    removeCorporateDepartmentCodesRaw(requestParameters: RemoveCorporateDepartmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete corporate department codes based on departmentCode. <p><strong>OperationId:</strong>removeCorporateDepartmentCodes</p>
     * Delete Corporate Department Codes
     */
    removeCorporateDepartmentCodes(requestParameters: RemoveCorporateDepartmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete corporate divisions based on divisionCode, corporateDivisionsCodes. <p><strong>OperationId:</strong>removeCorporateDivisions</p>
     * Delete Corporate Divisions
     */
    removeCorporateDivisionsRaw(requestParameters: RemoveCorporateDivisionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete corporate divisions based on divisionCode, corporateDivisionsCodes. <p><strong>OperationId:</strong>removeCorporateDivisions</p>
     * Delete Corporate Divisions
     */
    removeCorporateDivisions(requestParameters: RemoveCorporateDivisionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete corporate operating units based on operatingUnitCode, corporateOperatingUnitsCodes. <p><strong>OperationId:</strong>removeCorporateOperatingUnits</p>
     * Delete Corporate Operating Units
     */
    removeCorporateOperatingUnitsRaw(requestParameters: RemoveCorporateOperatingUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete corporate operating units based on operatingUnitCode, corporateOperatingUnitsCodes. <p><strong>OperationId:</strong>removeCorporateOperatingUnits</p>
     * Delete Corporate Operating Units
     */
    removeCorporateOperatingUnits(requestParameters: RemoveCorporateOperatingUnitsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete country guest types based on guestTypeCode, countryGuestTypesCodes. <p><strong>OperationId:</strong>removeCountryGuestTypes</p>
     * Delete Country Guest Types
     */
    removeCountryGuestTypesRaw(requestParameters: RemoveCountryGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete country guest types based on guestTypeCode, countryGuestTypesCodes. <p><strong>OperationId:</strong>removeCountryGuestTypes</p>
     * Delete Country Guest Types
     */
    removeCountryGuestTypes(requestParameters: RemoveCountryGuestTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete country main groups based on groupCode, countryMainGroupsCodes. <p><strong>OperationId:</strong>removeCountryMainGroups</p>
     * Delete Country Main Groups
     */
    removeCountryMainGroupsRaw(requestParameters: RemoveCountryMainGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete country main groups based on groupCode, countryMainGroupsCodes. <p><strong>OperationId:</strong>removeCountryMainGroups</p>
     * Delete Country Main Groups
     */
    removeCountryMainGroups(requestParameters: RemoveCountryMainGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete hotel categories based on categoryCode. <p><strong>OperationId:</strong>removeHotelCategories</p>
     * Delete Hotel Categories
     */
    removeHotelCategoriesRaw(requestParameters: RemoveHotelCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete hotel categories based on categoryCode. <p><strong>OperationId:</strong>removeHotelCategories</p>
     * Delete Hotel Categories
     */
    removeHotelCategories(requestParameters: RemoveHotelCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete note types based on noteTypeCode, noteGroup. <p><strong>OperationId:</strong>removeNoteTypes</p>
     * Delete Note Types
     */
    removeNoteTypesRaw(requestParameters: RemoveNoteTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete note types based on noteTypeCode, noteGroup. <p><strong>OperationId:</strong>removeNoteTypes</p>
     * Delete Note Types
     */
    removeNoteTypes(requestParameters: RemoveNoteTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete property detail categories based on categoryCode, propertyDetailCategoriesCodes. <p><strong>OperationId:</strong>removePropertyDetailCategories</p>
     * Delete Property Detail Categories
     */
    removePropertyDetailCategoriesRaw(requestParameters: RemovePropertyDetailCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete property detail categories based on categoryCode, propertyDetailCategoriesCodes. <p><strong>OperationId:</strong>removePropertyDetailCategories</p>
     * Delete Property Detail Categories
     */
    removePropertyDetailCategories(requestParameters: RemovePropertyDetailCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete region codes based on regionCode. <p><strong>OperationId:</strong>removeRegionsCode</p>
     * Delete Regions Code
     */
    removeRegionsCodeRaw(requestParameters: RemoveRegionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete region codes based on regionCode. <p><strong>OperationId:</strong>removeRegionsCode</p>
     * Delete Regions Code
     */
    removeRegionsCode(requestParameters: RemoveRegionsCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete template codes based on code, templateCodes. <p><strong>OperationId:</strong>removeTemplateCodes</p>
     * Delete Template Codes
     */
    removeTemplateCodesRaw(requestParameters: RemoveTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete template codes based on code, templateCodes. <p><strong>OperationId:</strong>removeTemplateCodes</p>
     * Delete Template Codes
     */
    removeTemplateCodes(requestParameters: RemoveTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete user defined field groups based on udfGroupCode. <p><strong>OperationId:</strong>removeUserDefinedFieldGroups</p>
     * Delete User Defined Field Groups
     */
    removeUserDefinedFieldGroupsRaw(requestParameters: RemoveUserDefinedFieldGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete user defined field groups based on udfGroupCode. <p><strong>OperationId:</strong>removeUserDefinedFieldGroups</p>
     * Delete User Defined Field Groups
     */
    removeUserDefinedFieldGroups(requestParameters: RemoveUserDefinedFieldGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete user defined field values based on udfValue, groupCode. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>removeUserDefinedFieldValues</p>
     * Delete a User Defined Field Value
     */
    removeUserDefinedFieldValuesRaw(requestParameters: RemoveUserDefinedFieldValuesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete user defined field values based on udfValue, groupCode. The LOV group and LOV values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>removeUserDefinedFieldValues</p>
     * Delete a User Defined Field Value
     */
    removeUserDefinedFieldValues(requestParameters: RemoveUserDefinedFieldValuesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
