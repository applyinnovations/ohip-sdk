/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AirportsCriteria, AirportsDetails, AirportsToBeChanged, AlternateHotelsCriteria, AlternateHotelsToBeChanged, AmenitiesCriteria, AmenitiesDetails, AmenitiesToBeChanged, AttractionTemplatesCriteria, AttractionTemplatesDetails, AttractionTemplatesToBeChanged, AttractionsCriteria, AttractionsDetails, AttractionsToBeChanged, ConfigActivityLogDetails, CopyDepartments, CopyHotelDetails, CopyMarketingCities, CopyTemplateCodes, CopyYieldAdjustmentCodes, CopyYieldCategories, CountriesDetails, CountriesToBeChanged, CreateConfigActivityLogCriteria, CreditCardTypesCriteria, CreditCardTypesDetails, CreditCardTypesToBeChanged, CurrencyExchangeRatesDetails, DepartmentsCriteria, DepartmentsDetails, DepartmentsToBeChanged, HotelBrochureDetails, HotelCalendarDetails, HotelContactsCriteria, HotelContactsToBeChanged, HotelDayTypeCodesCriteria, HotelDayTypeCodesDetails, HotelDayTypeCodesToBeChanged, HotelDetails, HotelDetailsDetails, HotelNotesCriteria, HotelNotesToBeChanged, HotelRateRangesCriteria, HotelRateRangesToBeChanged, HotelRestaurantsCriteria, HotelRestaurantsToBeChanged, HotelsDetails, JobTitlesCriteria, JobTitlesDetails, JobTitlesToBeChanged, LanguagesCriteria, LanguagesDetails, LanguagesToBeChanged, MarketingCitiesCriteria, MarketingCitiesDetails, MarketingCitiesToBeChanged, OperaHotelContextDetails, OperaParametersDetails, OperaSettingsDetails, SetDayTypes, SetHotelEvents, Status, TelephoneBookCategoriesCriteria, TelephoneBookCategoriesDetails, TelephoneBookCategoriesToBeChanged, TelephoneBookEntriesCriteria, TelephoneBookEntriesDetails, TelephoneBookEntriesToBeChanged, TemplateAirportsCriteria, TemplateAirportsDetails, TemplateAirportsToBeChanged, TemplateAmenitiesCriteria, TemplateAmenitiesDetails, TemplateAmenitiesToBeChanged, TemplateCountriesCriteria, TemplateCountriesDetails, TemplateCountriesToBeChanged, TemplateDayTypeCodesCriteria, TemplateDayTypeCodesDetails, TemplateDayTypeCodesToBeChanged, TemplateHotelDetailsCriteria, TemplateHotelDetailsDetails, TemplateHotelDetailsToBeChanged, TemplateJobTitlesCriteria, TemplateJobTitlesDetails, TemplateJobTitlesToBeChanged, TemplateMarketingCitiesCriteria, TemplateMarketingCitiesDetails, TemplateMarketingCitiesToBeChanged, TransportationCriteria, TransportationDetails, TransportationTemplatesCriteria, TransportationTemplatesDetails, TransportationTemplatesToBeChanged, TransportationToBeChanged, YieldAdjustmentCodesCriteria, YieldAdjustmentCodesDetails, YieldAdjustmentCodesToBeChanged, YieldCategoriesCriteria, YieldCategoriesDetails, YieldCategoriesToBeChanged, YieldMarketTypesCriteria, YieldMarketTypesDetails, YieldMarketTypesToBeChanged } from '../models/index';
export interface ChangeAirportsRequest {
    airportCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    airportsToBeChanged: AirportsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeAlternateHotelsRequest {
    alternateHotelId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    alternateHotelsToBeChanged: AlternateHotelsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeAmenitiesRequest {
    featureCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    amenitiesToBeChanged: AmenitiesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeAttractionTemplatesRequest {
    attractionCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionTemplatesToBeChanged: AttractionTemplatesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeAttractionsRequest {
    attractionCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionsToBeChanged: AttractionsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCountriesRequest {
    countryCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countriesToBeChanged: CountriesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeCreditCardTypesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesToBeChanged: CreditCardTypesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeDepartmentsRequest {
    departmentCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    departmentsToBeChanged: DepartmentsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelContactsRequest {
    contactId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelContactsToBeChanged: HotelContactsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelDayTypeCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelDayTypeCodesToBeChanged: HotelDayTypeCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelNotesRequest {
    noteCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelNotesToBeChanged: HotelNotesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelRateRangesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRateRangesToBeChanged: HotelRateRangesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelRestaurantsRequest {
    restaurantCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRestaurantsToBeChanged: HotelRestaurantsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeJobTitlesRequest {
    jobTitleCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    jobTitlesToBeChanged: JobTitlesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeLanguagesRequest {
    languageCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languagesToBeChanged: LanguagesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeMarketingCitiesRequest {
    cityCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    marketingCitiesToBeChanged: MarketingCitiesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTelephoneBookCategoriesRequest {
    categoryCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    telephoneBookCategoriesToBeChanged: TelephoneBookCategoriesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTelephoneBookEntriesRequest {
    entryId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    telephoneBookEntriesToBeChanged: TelephoneBookEntriesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateAirportsRequest {
    airportCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateAirportsToBeChanged: TemplateAirportsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateAmenitiesRequest {
    featureCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateAmenitiesToBeChanged: TemplateAmenitiesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateCountriesRequest {
    countryCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCountriesToBeChanged: TemplateCountriesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateDayTypeCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateDayTypeCodesToBeChanged: TemplateDayTypeCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateHotelDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateHotelDetailsToBeChanged: TemplateHotelDetailsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateJobTitlesRequest {
    jobTitleCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateJobTitlesToBeChanged: TemplateJobTitlesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateMarketingCitiesRequest {
    cityCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateMarketingCitiesToBeChanged: TemplateMarketingCitiesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTransportationRequest {
    transportationCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationToBeChanged: TransportationToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTransportationTemplatesRequest {
    transportationCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationTemplatesToBeChanged: TransportationTemplatesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeYieldAdjustmentCodesRequest {
    yieldAdjustmentCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldAdjustmentCodesToBeChanged: YieldAdjustmentCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeYieldCategoriesRequest {
    code: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldCategoriesToBeChanged: YieldCategoriesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeYieldMarketTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldMarketTypesToBeChanged: YieldMarketTypesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyDepartmentsRequest {
    sourceHotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyDepartments: CopyDepartments;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyHotelDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyHotelDetails: CopyHotelDetails;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyMarketingCitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyMarketingCities: CopyMarketingCities;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyTemplateCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyTemplateCodes: CopyTemplateCodes;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyYieldAdjustmentCodesRequest {
    sourceHotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyYieldAdjustmentCodes: CopyYieldAdjustmentCodes;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyYieldCategoriesRequest {
    sourceHotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyYieldCategories: CopyYieldCategories;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAirportsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    limit?: number;
    pageNumber?: number;
    airportCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAmenitiesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    general?: boolean;
    meeting?: boolean;
    amenityCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAttractionTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionCodes?: Array<string>;
    wildCard?: string;
    classCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAttractionsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    attractionCodes?: Array<string>;
    wildCard?: string;
    classCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetConfigActivityLogRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    pageNumber?: number;
    hotelId?: string;
    module?: GetConfigActivityLogModuleEnum;
    parameterName?: Array<string>;
    parameterValue?: Array<string>;
    activityGroup?: string;
    activityType?: string;
    fromDate?: string;
    toDate?: string;
    searchText?: string;
    userByIds?: Array<number>;
    userForIds?: Array<number>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCountriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    pageNumber?: number;
    countriesCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCreditCardTypesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCurrencyExchangeRatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    exchangeType?: GetCurrencyExchangeRatesExchangeTypeEnum;
    hotelIds?: Array<string>;
    currencyCode?: string;
    currencyCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDepartmentsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    departmentCodes?: Array<string>;
    departmentWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInstructions?: Set<GetHotelFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelBrochureRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInstructions?: Set<GetHotelBrochureFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelCalendarRequest {
    hotelId: string;
    startDate: string;
    endDate: string;
    fetchInstructions: Set<GetHotelCalendarFetchInstructionsEnum>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelDayTypeCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    dayTypesCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelDetailsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    hotelDetailCodes?: Array<string>;
    hotelDetailCategoriesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    name?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetJobTitlesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    jobTitleCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetLanguagesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languageCodes?: Array<string>;
    description?: string;
    useAsAlternateLanguage?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMarketingCitiesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    includeInactive?: boolean;
    limit?: number;
    pageNumber?: number;
    marketingCitys?: Array<string>;
    regionCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOperaHotelContextRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOperaParametersRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    parameterName?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOperaSettingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    cROCode?: string;
    parameterNameWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPropertyCalendarRequest {
    startDate: string;
    endDate: string;
    fetchInstructions: Set<GetPropertyCalendarFetchInstructionsEnum>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTelephoneBookCategoriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTelephoneBookEntriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    category?: string;
    name?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateAirportsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    airportCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateAmenitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    general?: boolean;
    meeting?: boolean;
    amenityCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateCountriesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    countriesCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateDayTypeCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    dayTypesCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateHotelDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelDetailCodes?: Array<string>;
    hotelDetailCategoriesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateJobTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    jobTitleCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateMarketingCitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeInactive?: boolean;
    limit?: number;
    pageNumber?: number;
    marketingCitys?: Array<string>;
    regionCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTransportationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    transportationCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTransportationTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetYieldAdjustmentCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    yieldAdjustmentCodes?: Array<string>;
    wildCard?: string;
    type?: GetYieldAdjustmentCodesTypeEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetYieldCategoriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldCategoriesCodes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetYieldMarketTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldMarketTypesCodes?: Array<string>;
    wildCard?: string;
    hotelId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAirportsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    airportsCriteria: AirportsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAlternateHotelsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    alternateHotelsCriteria: AlternateHotelsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAmenitiesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    amenitiesCriteria: AmenitiesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAttractionTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionTemplatesCriteria: AttractionTemplatesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAttractionsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionsCriteria: AttractionsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostConfigActivityLogRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    createConfigActivityLogCriteria: CreateConfigActivityLogCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCreditCardTypesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesCriteria: CreditCardTypesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDepartmentsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    departmentsCriteria: DepartmentsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelContactsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelContactsCriteria: HotelContactsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelDayTypeCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelDayTypeCodesCriteria: HotelDayTypeCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelNotesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelNotesCriteria: HotelNotesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelRateRangesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRateRangesCriteria: HotelRateRangesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelRestaurantsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRestaurantsCriteria: HotelRestaurantsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostJobTitlesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    jobTitlesCriteria: JobTitlesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostLanguagesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    languagesCriteria: LanguagesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMarketingCitiesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    marketingCitiesCriteria: MarketingCitiesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTelephoneBookCategoriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    telephoneBookCategoriesCriteria: TelephoneBookCategoriesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTelephoneBookEntriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    telephoneBookEntriesCriteria: TelephoneBookEntriesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateAirportsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateAirportsCriteria: TemplateAirportsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateAmenitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateAmenitiesCriteria: TemplateAmenitiesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateCountriesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCountriesCriteria: TemplateCountriesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateDayTypeCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateDayTypeCodesCriteria: TemplateDayTypeCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateHotelDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateHotelDetailsCriteria: TemplateHotelDetailsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateJobTitlesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateJobTitlesCriteria: TemplateJobTitlesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateMarketingCitiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateMarketingCitiesCriteria: TemplateMarketingCitiesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTransportationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationCriteria: TransportationCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTransportationTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transportationTemplatesCriteria: TransportationTemplatesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostYieldAdjustmentCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldAdjustmentCodesCriteria: YieldAdjustmentCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostYieldCategoriesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldCategoriesCriteria: YieldCategoriesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostYieldMarketTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    yieldMarketTypesCriteria: YieldMarketTypesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAirportsRequest {
    airportCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAlternateHotelsRequest {
    alternateHotelId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAmenitiesRequest {
    featureCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    beginDate?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAttractionTemplatesRequest {
    attractionCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAttractionsRequest {
    attractionCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attractionCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveAttractionsByCodeRequest {
    attractionCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveCreditCardTypesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditCardTypesCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveDayTypesRequest {
    dayType: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: Array<string>;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    startDate?: string;
    endDate?: string;
    duration?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveDepartmentsRequest {
    departmentCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelContactsRequest {
    contactId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idExtension?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelDayTypeCodesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelEventsRequest {
    eventId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    startDate?: string;
    endDate?: string;
    duration?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelNotesRequest {
    noteCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelRateRangesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    startDate?: string;
    endDate?: string;
    duration?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelRestaurantsRequest {
    restaurantCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveJobTitlesRequest {
    jobTitleCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveLanguagesRequest {
    languageCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveMarketingCitiesRequest {
    cityCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    regionCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTelephoneBookCategoriesRequest {
    categoryCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    description?: Array<string>;
    orderBy?: Array<number>;
    generic?: Array<boolean>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTelephoneBookEntriesRequest {
    entryId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTelephoneBookEntriesWithoutHotelIdRequest {
    entryId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateAirportsRequest {
    airportCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateAmenitiesRequest {
    featureCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateCountriesRequest {
    countryCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateDayTypeCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateDayTypeCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateHotelDetailsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateHotelDetailCode?: Array<string>;
    templateHotelDetailCategory?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateJobTitlesRequest {
    jobTitleCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateMarketingCitiesRequest {
    cityCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    regionCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTransportationRequest {
    transportationCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    label?: Array<string>;
    orderBy?: Array<number>;
    createDateTime?: string;
    creatorId?: string;
    extension?: string;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    phoneNumberOrderSequence?: number;
    phoneNumber?: string;
    phoneTechType?: string;
    phoneUseType?: string;
    phoneUseTypeDescription?: string;
    phoneNumberPrimaryInd?: boolean;
    purgeDate?: string;
    distance?: number;
    distanceType?: string;
    drivingTime?: string;
    description?: Array<string>;
    comments?: Array<string>;
    priceRange?: Array<string>;
    websiteOrderSequence?: number;
    websitePrimaryInd?: boolean;
    type?: string;
    typeDescription?: string;
    keyOptionsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTransportationTemplatesRequest {
    transportationCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveYieldAdjustmentCodesRequest {
    yieldAdjustmentCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveYieldCategoriesRequest {
    code: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveYieldMarketTypesRequest {
    code: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetDayTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    setDayTypes: SetDayTypes;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetHotelEventsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    setHotelEvents: SetHotelEvents;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HotelConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update airports for a specific property based on airportCode, hotelId, airportsToBeChanged. <p><strong>OperationId:</strong>changeAirports</p>
     * Change resort airports
     */
    changeAirportsRaw(requestParameters: ChangeAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update airports for a specific property based on airportCode, hotelId, airportsToBeChanged. <p><strong>OperationId:</strong>changeAirports</p>
     * Change resort airports
     */
    changeAirports(requestParameters: ChangeAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update alternate hotels for a specific property based on  alternateHotelId, hotelId, alternateHotelsToBeChanged. <p><strong>OperationId:</strong>changeAlternateHotels</p>
     * Update Alternate Hotels
     */
    changeAlternateHotelsRaw(requestParameters: ChangeAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update alternate hotels for a specific property based on  alternateHotelId, hotelId, alternateHotelsToBeChanged. <p><strong>OperationId:</strong>changeAlternateHotels</p>
     * Update Alternate Hotels
     */
    changeAlternateHotels(requestParameters: ChangeAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update amenities for a specific property based on featureCode, hotelId, amenitiesToBeChanged. <p><strong>OperationId:</strong>changeAmenities</p>
     * Change amenities
     */
    changeAmenitiesRaw(requestParameters: ChangeAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update amenities for a specific property based on featureCode, hotelId, amenitiesToBeChanged. <p><strong>OperationId:</strong>changeAmenities</p>
     * Change amenities
     */
    changeAmenities(requestParameters: ChangeAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update attraction templates based on attractionCode, attractionTemplatesToBeChanged. <p><strong>OperationId:</strong>changeAttractionTemplates</p>
     * Change Attraction Template
     */
    changeAttractionTemplatesRaw(requestParameters: ChangeAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update attraction templates based on attractionCode, attractionTemplatesToBeChanged. <p><strong>OperationId:</strong>changeAttractionTemplates</p>
     * Change Attraction Template
     */
    changeAttractionTemplates(requestParameters: ChangeAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update attractions for a specific property based on attractionCode, hotelId, attractionsToBeChanged. <p><strong>OperationId:</strong>changeAttractions</p>
     * Update an Attraction
     */
    changeAttractionsRaw(requestParameters: ChangeAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update attractions for a specific property based on attractionCode, hotelId, attractionsToBeChanged. <p><strong>OperationId:</strong>changeAttractions</p>
     * Update an Attraction
     */
    changeAttractions(requestParameters: ChangeAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update country codes for a specific property based on countryCode, hotelId, countriesToBeChanged. <p><strong>OperationId:</strong>changeCountries</p>
     * Update a Country Code
     */
    changeCountriesRaw(requestParameters: ChangeCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update country codes for a specific property based on countryCode, hotelId, countriesToBeChanged. <p><strong>OperationId:</strong>changeCountries</p>
     * Update a Country Code
     */
    changeCountries(requestParameters: ChangeCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update credit card types for a specific property based on hotelId, creditCardTypesToBeChanged. <p><strong>OperationId:</strong>changeCreditCardTypes</p>
     * Change Credit Card Types
     */
    changeCreditCardTypesRaw(requestParameters: ChangeCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update credit card types for a specific property based on hotelId, creditCardTypesToBeChanged. <p><strong>OperationId:</strong>changeCreditCardTypes</p>
     * Change Credit Card Types
     */
    changeCreditCardTypes(requestParameters: ChangeCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update departments based on departmentCode, departmentsToBeChanged. <p><strong>OperationId:</strong>changeDepartments</p>
     * Change Departments
     */
    changeDepartmentsRaw(requestParameters: ChangeDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update departments based on departmentCode, departmentsToBeChanged. <p><strong>OperationId:</strong>changeDepartments</p>
     * Change Departments
     */
    changeDepartments(requestParameters: ChangeDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update hotel contacts for a specific property based on contactId, hotelId, hotelContactsToBeChanged. <p><strong>OperationId:</strong>changeHotelContacts</p>
     * Change Hotel Contact
     */
    changeHotelContactsRaw(requestParameters: ChangeHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update hotel contacts for a specific property based on contactId, hotelId, hotelContactsToBeChanged. <p><strong>OperationId:</strong>changeHotelContacts</p>
     * Change Hotel Contact
     */
    changeHotelContacts(requestParameters: ChangeHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update day type codes for a specific property based on hotelId, hotelDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeHotelDayTypeCodes</p>
     * Change Hotel Day Type Codes
     */
    changeHotelDayTypeCodesRaw(requestParameters: ChangeHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update day type codes for a specific property based on hotelId, hotelDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeHotelDayTypeCodes</p>
     * Change Hotel Day Type Codes
     */
    changeHotelDayTypeCodes(requestParameters: ChangeHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update note information for a specific property based on noteCode, hotelId, hotelNotesToBeChanged. <p><strong>OperationId:</strong>changeHotelNotes</p>
     * Update Note information
     */
    changeHotelNotesRaw(requestParameters: ChangeHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update note information for a specific property based on noteCode, hotelId, hotelNotesToBeChanged. <p><strong>OperationId:</strong>changeHotelNotes</p>
     * Update Note information
     */
    changeHotelNotes(requestParameters: ChangeHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update rate range information for a specific property based on hotelId, hotelRateRangesToBeChanged. <p><strong>OperationId:</strong>changeHotelRateRanges</p>
     * Update Rate Range information
     */
    changeHotelRateRangesRaw(requestParameters: ChangeHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update rate range information for a specific property based on hotelId, hotelRateRangesToBeChanged. <p><strong>OperationId:</strong>changeHotelRateRanges</p>
     * Update Rate Range information
     */
    changeHotelRateRanges(requestParameters: ChangeHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update restaurant information for a specific property based on restaurantCode, hotelId, hotelRestaurantsToBeChanged. <p><strong>OperationId:</strong>changeHotelRestaurants</p>
     * Update the restaurant information
     */
    changeHotelRestaurantsRaw(requestParameters: ChangeHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update restaurant information for a specific property based on restaurantCode, hotelId, hotelRestaurantsToBeChanged. <p><strong>OperationId:</strong>changeHotelRestaurants</p>
     * Update the restaurant information
     */
    changeHotelRestaurants(requestParameters: ChangeHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update job titles for a specific property based on jobTitleCode, hotelId, jobTitlesToBeChanged. <p><strong>OperationId:</strong>changeJobTitles</p>
     * Change resort job titles
     */
    changeJobTitlesRaw(requestParameters: ChangeJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update job titles for a specific property based on jobTitleCode, hotelId, jobTitlesToBeChanged. <p><strong>OperationId:</strong>changeJobTitles</p>
     * Change resort job titles
     */
    changeJobTitles(requestParameters: ChangeJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update languages based on languageCode, languagesToBeChanged. <p><strong>OperationId:</strong>changeLanguages</p>
     * Update a Language
     */
    changeLanguagesRaw(requestParameters: ChangeLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update languages based on languageCode, languagesToBeChanged. <p><strong>OperationId:</strong>changeLanguages</p>
     * Update a Language
     */
    changeLanguages(requestParameters: ChangeLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update marketing cities for a specific property based on cityCode, hotelId, marketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeMarketingCities</p>
     * Change resort marketing cities
     */
    changeMarketingCitiesRaw(requestParameters: ChangeMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update marketing cities for a specific property based on cityCode, hotelId, marketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeMarketingCities</p>
     * Change resort marketing cities
     */
    changeMarketingCities(requestParameters: ChangeMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update telephone book categories for a specific property based on categoryCode, hotelId, telephoneBookCategoriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookCategories</p>
     * Change Telephone Book Category
     */
    changeTelephoneBookCategoriesRaw(requestParameters: ChangeTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update telephone book categories for a specific property based on categoryCode, hotelId, telephoneBookCategoriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookCategories</p>
     * Change Telephone Book Category
     */
    changeTelephoneBookCategories(requestParameters: ChangeTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update telephone book entries for a specific property based on entryId, hotelId, telephoneBookEntriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookEntries</p>
     * Create Telephone Book Entries
     */
    changeTelephoneBookEntriesRaw(requestParameters: ChangeTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update telephone book entries for a specific property based on entryId, hotelId, telephoneBookEntriesToBeChanged. <p><strong>OperationId:</strong>changeTelephoneBookEntries</p>
     * Create Telephone Book Entries
     */
    changeTelephoneBookEntries(requestParameters: ChangeTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update airport templates based on airportCode, templateAirportsToBeChanged. <p><strong>OperationId:</strong>changeTemplateAirports</p>
     * Change template airports
     */
    changeTemplateAirportsRaw(requestParameters: ChangeTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update airport templates based on airportCode, templateAirportsToBeChanged. <p><strong>OperationId:</strong>changeTemplateAirports</p>
     * Change template airports
     */
    changeTemplateAirports(requestParameters: ChangeTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update amenity templates based on featureCode, templateAmenitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateAmenities</p>
     * Change template amenities
     */
    changeTemplateAmenitiesRaw(requestParameters: ChangeTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update amenity templates based on featureCode, templateAmenitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateAmenities</p>
     * Change template amenities
     */
    changeTemplateAmenities(requestParameters: ChangeTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update country templates based on countryCode, templateCountriesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCountries</p>
     * Change template Countries
     */
    changeTemplateCountriesRaw(requestParameters: ChangeTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update country templates based on countryCode, templateCountriesToBeChanged. <p><strong>OperationId:</strong>changeTemplateCountries</p>
     * Change template Countries
     */
    changeTemplateCountries(requestParameters: ChangeTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update day type code templates based on templateDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateDayTypeCodes</p>
     * Change Template Day Type Codes
     */
    changeTemplateDayTypeCodesRaw(requestParameters: ChangeTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update day type code templates based on templateDayTypeCodesToBeChanged. <p><strong>OperationId:</strong>changeTemplateDayTypeCodes</p>
     * Change Template Day Type Codes
     */
    changeTemplateDayTypeCodes(requestParameters: ChangeTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update template hotel details based on templateHotelDetailsToBeChanged. <p><strong>OperationId:</strong>changeTemplateHotelDetails</p>
     * Change hotel details specified at the template level
     */
    changeTemplateHotelDetailsRaw(requestParameters: ChangeTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update template hotel details based on templateHotelDetailsToBeChanged. <p><strong>OperationId:</strong>changeTemplateHotelDetails</p>
     * Change hotel details specified at the template level
     */
    changeTemplateHotelDetails(requestParameters: ChangeTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update job title templates based on jobTitleCode, templateJobTitlesToBeChanged. <p><strong>OperationId:</strong>changeTemplateJobTitles</p>
     * Change template job titles
     */
    changeTemplateJobTitlesRaw(requestParameters: ChangeTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update job title templates based on jobTitleCode, templateJobTitlesToBeChanged. <p><strong>OperationId:</strong>changeTemplateJobTitles</p>
     * Change template job titles
     */
    changeTemplateJobTitles(requestParameters: ChangeTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update marketing city templates based on cityCode, templateMarketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateMarketingCities</p>
     * Change template marketing cities
     */
    changeTemplateMarketingCitiesRaw(requestParameters: ChangeTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update marketing city templates based on cityCode, templateMarketingCitiesToBeChanged. <p><strong>OperationId:</strong>changeTemplateMarketingCities</p>
     * Change template marketing cities
     */
    changeTemplateMarketingCities(requestParameters: ChangeTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update transportation for a specific property based on transportationCode, hotelId, transportationToBeChanged. <p><strong>OperationId:</strong>changeTransportation</p>
     *  modify transportation
     */
    changeTransportationRaw(requestParameters: ChangeTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update transportation for a specific property based on transportationCode, hotelId, transportationToBeChanged. <p><strong>OperationId:</strong>changeTransportation</p>
     *  modify transportation
     */
    changeTransportation(requestParameters: ChangeTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update transportation templates based on transportationCode,  transportationTemplatesToBeChanged. <p><strong>OperationId:</strong>changeTransportationTemplates</p>
     * Change transportation templates
     */
    changeTransportationTemplatesRaw(requestParameters: ChangeTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update transportation templates based on transportationCode,  transportationTemplatesToBeChanged. <p><strong>OperationId:</strong>changeTransportationTemplates</p>
     * Change transportation templates
     */
    changeTransportationTemplates(requestParameters: ChangeTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update yield adjustment codes for a specific property based on yieldAdjustmentCode, hotelId, yieldAdjustmentCodesToBeChanged. <p><strong>OperationId:</strong>changeYieldAdjustmentCodes</p>
     * Change Yield Adjustment Codes
     */
    changeYieldAdjustmentCodesRaw(requestParameters: ChangeYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update yield adjustment codes for a specific property based on yieldAdjustmentCode, hotelId, yieldAdjustmentCodesToBeChanged. <p><strong>OperationId:</strong>changeYieldAdjustmentCodes</p>
     * Change Yield Adjustment Codes
     */
    changeYieldAdjustmentCodes(requestParameters: ChangeYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update yield categories for a specific property based on code, hotelId, yieldCategoriesToBeChanged. <p><strong>OperationId:</strong>changeYieldCategories</p>
     * Change Yield Category
     */
    changeYieldCategoriesRaw(requestParameters: ChangeYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update yield categories for a specific property based on code, hotelId, yieldCategoriesToBeChanged. <p><strong>OperationId:</strong>changeYieldCategories</p>
     * Change Yield Category
     */
    changeYieldCategories(requestParameters: ChangeYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update yield market types based on yieldMarketTypesToBeChanged. <p><strong>OperationId:</strong>changeYieldMarketTypes</p>
     * Change Yield Market Types
     */
    changeYieldMarketTypesRaw(requestParameters: ChangeYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update yield market types based on yieldMarketTypesToBeChanged. <p><strong>OperationId:</strong>changeYieldMarketTypes</p>
     * Change Yield Market Types
     */
    changeYieldMarketTypes(requestParameters: ChangeYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>
     *  copy Departments
     */
    copyDepartmentsRaw(requestParameters: CopyDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>
     *  copy Departments
     */
    copyDepartments(requestParameters: CopyDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to copy template hotel details to other properties. <p><strong>OperationId:</strong>copyHotelDetails</p>
     * Copy template hotel details to other properties
     */
    copyHotelDetailsRaw(requestParameters: CopyHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to copy template hotel details to other properties. <p><strong>OperationId:</strong>copyHotelDetails</p>
     * Copy template hotel details to other properties
     */
    copyHotelDetails(requestParameters: CopyHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy marketing cities to resorts. <p><strong>OperationId:</strong>copyMarketingCities</p>
     * Copy marketing cities to resorts
     */
    copyMarketingCitiesRaw(requestParameters: CopyMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy marketing cities to resorts. <p><strong>OperationId:</strong>copyMarketingCities</p>
     * Copy marketing cities to resorts
     */
    copyMarketingCities(requestParameters: CopyMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to Copy a Template Rate Category in order to create a new Template Rate Category. <p><strong>OperationId:</strong>copyTemplateCodes</p>
     * Copy Template Codes
     */
    copyTemplateCodesRaw(requestParameters: CopyTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to Copy a Template Rate Category in order to create a new Template Rate Category. <p><strong>OperationId:</strong>copyTemplateCodes</p>
     * Copy Template Codes
     */
    copyTemplateCodes(requestParameters: CopyTemplateCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Yield Adjustment Codes. <p><strong>OperationId:</strong>copyYieldAdjustmentCodes</p>
     *  copy Yield Adjustment Codes
     */
    copyYieldAdjustmentCodesRaw(requestParameters: CopyYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Yield Adjustment Codes. <p><strong>OperationId:</strong>copyYieldAdjustmentCodes</p>
     *  copy Yield Adjustment Codes
     */
    copyYieldAdjustmentCodes(requestParameters: CopyYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Yield Category. <p><strong>OperationId:</strong>copyYieldCategories</p>
     *  copy Yield Category
     */
    copyYieldCategoriesRaw(requestParameters: CopyYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Yield Category. <p><strong>OperationId:</strong>copyYieldCategories</p>
     *  copy Yield Category
     */
    copyYieldCategories(requestParameters: CopyYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>
     * Get resort airports
     */
    getAirportsRaw(requestParameters: GetAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AirportsDetails>>;
    /**
     * Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>
     * Get resort airports
     */
    getAirports(requestParameters: GetAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AirportsDetails>;
    /**
     * Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>
     * Get amenities
     */
    getAmenitiesRaw(requestParameters: GetAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AmenitiesDetails>>;
    /**
     * Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>
     * Get amenities
     */
    getAmenities(requestParameters: GetAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AmenitiesDetails>;
    /**
     * This API accepts the attraction template request search criteria and fetches the attraction templates that match the criteria. <p><strong>OperationId:</strong>getAttractionTemplates</p>
     * Get Attraction Template
     */
    getAttractionTemplatesRaw(requestParameters: GetAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AttractionTemplatesDetails>>;
    /**
     * This API accepts the attraction template request search criteria and fetches the attraction templates that match the criteria. <p><strong>OperationId:</strong>getAttractionTemplates</p>
     * Get Attraction Template
     */
    getAttractionTemplates(requestParameters: GetAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AttractionTemplatesDetails>;
    /**
     * Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>
     * Get Attractions
     */
    getAttractionsRaw(requestParameters: GetAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AttractionsDetails>>;
    /**
     * Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>
     * Get Attractions
     */
    getAttractions(requestParameters: GetAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AttractionsDetails>;
    /**
     * Use this API to Fetch Configuration Activity logs from Activity Group or Type. <p><strong>OperationId:</strong>getConfigActivityLog</p>
     * Get Configuration Activity Logs
     */
    getConfigActivityLogRaw(requestParameters: GetConfigActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfigActivityLogDetails>>;
    /**
     * Use this API to Fetch Configuration Activity logs from Activity Group or Type. <p><strong>OperationId:</strong>getConfigActivityLog</p>
     * Get Configuration Activity Logs
     */
    getConfigActivityLog(requestParameters: GetConfigActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfigActivityLogDetails>;
    /**
     * Use this API to get Countries. <p><strong>OperationId:</strong>getCountries</p>
     * Get Countries
     */
    getCountriesRaw(requestParameters: GetCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CountriesDetails>>;
    /**
     * Use this API to get Countries. <p><strong>OperationId:</strong>getCountries</p>
     * Get Countries
     */
    getCountries(requestParameters: GetCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CountriesDetails>;
    /**
     * Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>
     * Get Credit Card Types
     */
    getCreditCardTypesRaw(requestParameters: GetCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditCardTypesDetails>>;
    /**
     * Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>
     * Get Credit Card Types
     */
    getCreditCardTypes(requestParameters: GetCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditCardTypesDetails>;
    /**
     * Fetch the currency exchange rates when using this API. <p><strong>OperationId:</strong>getCurrencyExchangeRates</p>
     * Get Currency Exchange Rates
     */
    getCurrencyExchangeRatesRaw(requestParameters: GetCurrencyExchangeRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CurrencyExchangeRatesDetails>>;
    /**
     * Fetch the currency exchange rates when using this API. <p><strong>OperationId:</strong>getCurrencyExchangeRates</p>
     * Get Currency Exchange Rates
     */
    getCurrencyExchangeRates(requestParameters: GetCurrencyExchangeRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CurrencyExchangeRatesDetails>;
    /**
     * Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>
     * Get Departments
     */
    getDepartmentsRaw(requestParameters: GetDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepartmentsDetails>>;
    /**
     * Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>
     * Get Departments
     */
    getDepartments(requestParameters: GetDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepartmentsDetails>;
    /**
     * Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>
     * Get hotel property configuration details
     */
    getHotelRaw(requestParameters: GetHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelDetails>>;
    /**
     * Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>
     * Get hotel property configuration details
     */
    getHotel(requestParameters: GetHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelDetails>;
    /**
     * This API Use this API to gets the hotel brochure information based on the search criteria. The Hotel code and a set of instructions can be sent as part of the request message. <p><strong>OperationId:</strong>getHotelBrochure</p>
     * Get Hotel Brochure
     */
    getHotelBrochureRaw(requestParameters: GetHotelBrochureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelBrochureDetails>>;
    /**
     * This API Use this API to gets the hotel brochure information based on the search criteria. The Hotel code and a set of instructions can be sent as part of the request message. <p><strong>OperationId:</strong>getHotelBrochure</p>
     * Get Hotel Brochure
     */
    getHotelBrochure(requestParameters: GetHotelBrochureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelBrochureDetails>;
    /**
     * Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getHotelCalendar</p>
     * Get Hotel Calendar
     */
    getHotelCalendarRaw(requestParameters: GetHotelCalendarRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelCalendarDetails>>;
    /**
     * Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getHotelCalendar</p>
     * Get Hotel Calendar
     */
    getHotelCalendar(requestParameters: GetHotelCalendarRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelCalendarDetails>;
    /**
     * Use this API to get Hotel Day Type Codes. <p><strong>OperationId:</strong>getHotelDayTypeCodes</p>
     * Get Hotel Day Type Codes
     */
    getHotelDayTypeCodesRaw(requestParameters: GetHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelDayTypeCodesDetails>>;
    /**
     * Use this API to get Hotel Day Type Codes. <p><strong>OperationId:</strong>getHotelDayTypeCodes</p>
     * Get Hotel Day Type Codes
     */
    getHotelDayTypeCodes(requestParameters: GetHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelDayTypeCodesDetails>;
    /**
     * Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>
     * Get hotel details
     */
    getHotelDetailsRaw(requestParameters: GetHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelDetailsDetails>>;
    /**
     * Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>
     * Get hotel details
     */
    getHotelDetails(requestParameters: GetHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelDetailsDetails>;
    /**
     * Use this API to return hotel configuration information based on search criteria such as hotelId, name.<p><strong>OperationId:</strong>getHotels</p>
     * Get property configuration
     */
    getHotelsRaw(requestParameters: GetHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelsDetails>>;
    /**
     * Use this API to return hotel configuration information based on search criteria such as hotelId, name.<p><strong>OperationId:</strong>getHotels</p>
     * Get property configuration
     */
    getHotels(requestParameters: GetHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelsDetails>;
    /**
     * Use this API to get resort job titles. <p><strong>OperationId:</strong>getJobTitles</p>
     * Get resort job titles
     */
    getJobTitlesRaw(requestParameters: GetJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobTitlesDetails>>;
    /**
     * Use this API to get resort job titles. <p><strong>OperationId:</strong>getJobTitles</p>
     * Get resort job titles
     */
    getJobTitles(requestParameters: GetJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobTitlesDetails>;
    /**
     * Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>
     * Get Languages
     */
    getLanguagesRaw(requestParameters: GetLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LanguagesDetails>>;
    /**
     * Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>
     * Get Languages
     */
    getLanguages(requestParameters: GetLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LanguagesDetails>;
    /**
     * Use this API to get resort marketing cities. <p><strong>OperationId:</strong>getMarketingCities</p>
     * Get resort marketing cities
     */
    getMarketingCitiesRaw(requestParameters: GetMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MarketingCitiesDetails>>;
    /**
     * Use this API to get resort marketing cities. <p><strong>OperationId:</strong>getMarketingCities</p>
     * Get resort marketing cities
     */
    getMarketingCities(requestParameters: GetMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MarketingCitiesDetails>;
    /**
     * This API will retrieve general contextual information for the specified hotel such as business date. <p><strong>OperationId:</strong>getOperaHotelContext</p>
     * Get Opera Hotel Context
     */
    getOperaHotelContextRaw(requestParameters: GetOperaHotelContextRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperaHotelContextDetails>>;
    /**
     * This API will retrieve general contextual information for the specified hotel such as business date. <p><strong>OperationId:</strong>getOperaHotelContext</p>
     * Get Opera Hotel Context
     */
    getOperaHotelContext(requestParameters: GetOperaHotelContextRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperaHotelContextDetails>;
    /**
     * Use this API to get OPERA Parameters. <p><strong>OperationId:</strong>getOperaParameters</p>
     * Get OPERA Parameters
     */
    getOperaParametersRaw(requestParameters: GetOperaParametersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperaParametersDetails>>;
    /**
     * Use this API to get OPERA Parameters. <p><strong>OperationId:</strong>getOperaParameters</p>
     * Get OPERA Parameters
     */
    getOperaParameters(requestParameters: GetOperaParametersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperaParametersDetails>;
    /**
     * Use this API to return OPERA controls based on search criteria such as hotelId, cROCode, parameterNameWildCard.<p><strong>OperationId:</strong>getOperaSettings</p>
     * Get OPERA controls
     */
    getOperaSettingsRaw(requestParameters: GetOperaSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperaSettingsDetails>>;
    /**
     * Use this API to return OPERA controls based on search criteria such as hotelId, cROCode, parameterNameWildCard.<p><strong>OperationId:</strong>getOperaSettings</p>
     * Get OPERA controls
     */
    getOperaSettings(requestParameters: GetOperaSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperaSettingsDetails>;
    /**
     * Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getPropertyCalendar</p>
     * Get Hotel Calendar
     */
    getPropertyCalendarRaw(requestParameters: GetPropertyCalendarRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelCalendarDetails>>;
    /**
     * Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getPropertyCalendar</p>
     * Get Hotel Calendar
     */
    getPropertyCalendar(requestParameters: GetPropertyCalendarRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelCalendarDetails>;
    /**
     * Use this API to get Telephone Book Category. <p><strong>OperationId:</strong>getTelephoneBookCategories</p>
     * Get Telephone Book Category
     */
    getTelephoneBookCategoriesRaw(requestParameters: GetTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TelephoneBookCategoriesDetails>>;
    /**
     * Use this API to get Telephone Book Category. <p><strong>OperationId:</strong>getTelephoneBookCategories</p>
     * Get Telephone Book Category
     */
    getTelephoneBookCategories(requestParameters: GetTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TelephoneBookCategoriesDetails>;
    /**
     * Use this API to get Telephone Book Entries. <p><strong>OperationId:</strong>getTelephoneBookEntries</p>
     * Get Telephone Book Entries
     */
    getTelephoneBookEntriesRaw(requestParameters: GetTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TelephoneBookEntriesDetails>>;
    /**
     * Use this API to get Telephone Book Entries. <p><strong>OperationId:</strong>getTelephoneBookEntries</p>
     * Get Telephone Book Entries
     */
    getTelephoneBookEntries(requestParameters: GetTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TelephoneBookEntriesDetails>;
    /**
     * Use this API to get template airports. <p><strong>OperationId:</strong>getTemplateAirports</p>
     * Get template airports
     */
    getTemplateAirportsRaw(requestParameters: GetTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateAirportsDetails>>;
    /**
     * Use this API to get template airports. <p><strong>OperationId:</strong>getTemplateAirports</p>
     * Get template airports
     */
    getTemplateAirports(requestParameters: GetTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateAirportsDetails>;
    /**
     *  Use this API to get template amenities. <p><strong>OperationId:</strong>getTemplateAmenities</p>
     *  Get template amenities
     */
    getTemplateAmenitiesRaw(requestParameters: GetTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateAmenitiesDetails>>;
    /**
     *  Use this API to get template amenities. <p><strong>OperationId:</strong>getTemplateAmenities</p>
     *  Get template amenities
     */
    getTemplateAmenities(requestParameters: GetTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateAmenitiesDetails>;
    /**
     * Use this API to get template Countries. <p><strong>OperationId:</strong>getTemplateCountries</p>
     * Get template Countries
     */
    getTemplateCountriesRaw(requestParameters: GetTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateCountriesDetails>>;
    /**
     * Use this API to get template Countries. <p><strong>OperationId:</strong>getTemplateCountries</p>
     * Get template Countries
     */
    getTemplateCountries(requestParameters: GetTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateCountriesDetails>;
    /**
     * Use this API to get Template Day Type Codes. <p><strong>OperationId:</strong>getTemplateDayTypeCodes</p>
     * Get Template Day Type Codes
     */
    getTemplateDayTypeCodesRaw(requestParameters: GetTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateDayTypeCodesDetails>>;
    /**
     * Use this API to get Template Day Type Codes. <p><strong>OperationId:</strong>getTemplateDayTypeCodes</p>
     * Get Template Day Type Codes
     */
    getTemplateDayTypeCodes(requestParameters: GetTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateDayTypeCodesDetails>;
    /**
     * Use this API to get hotel details specified at the template level. <p><strong>OperationId:</strong>getTemplateHotelDetails</p>
     * Get hotel details specified at the template level
     */
    getTemplateHotelDetailsRaw(requestParameters: GetTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateHotelDetailsDetails>>;
    /**
     * Use this API to get hotel details specified at the template level. <p><strong>OperationId:</strong>getTemplateHotelDetails</p>
     * Get hotel details specified at the template level
     */
    getTemplateHotelDetails(requestParameters: GetTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateHotelDetailsDetails>;
    /**
     * Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>
     * Get template job titles
     */
    getTemplateJobTitlesRaw(requestParameters: GetTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateJobTitlesDetails>>;
    /**
     * Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>
     * Get template job titles
     */
    getTemplateJobTitles(requestParameters: GetTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateJobTitlesDetails>;
    /**
     * Use this API to get template marketing cities. <p><strong>OperationId:</strong>getTemplateMarketingCities</p>
     * Get template marketing cities
     */
    getTemplateMarketingCitiesRaw(requestParameters: GetTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateMarketingCitiesDetails>>;
    /**
     * Use this API to get template marketing cities. <p><strong>OperationId:</strong>getTemplateMarketingCities</p>
     * Get template marketing cities
     */
    getTemplateMarketingCities(requestParameters: GetTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateMarketingCitiesDetails>;
    /**
     * Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>
     * Get transportation
     */
    getTransportationRaw(requestParameters: GetTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransportationDetails>>;
    /**
     * Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>
     * Get transportation
     */
    getTransportation(requestParameters: GetTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransportationDetails>;
    /**
     * Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>
     * Get transportation templates
     */
    getTransportationTemplatesRaw(requestParameters: GetTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransportationTemplatesDetails>>;
    /**
     * Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>
     * Get transportation templates
     */
    getTransportationTemplates(requestParameters: GetTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransportationTemplatesDetails>;
    /**
     * Use this API to get Yield Adjustment Codes. <p><strong>OperationId:</strong>getYieldAdjustmentCodes</p>
     * Get Yield Adjustment Codes
     */
    getYieldAdjustmentCodesRaw(requestParameters: GetYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<YieldAdjustmentCodesDetails>>;
    /**
     * Use this API to get Yield Adjustment Codes. <p><strong>OperationId:</strong>getYieldAdjustmentCodes</p>
     * Get Yield Adjustment Codes
     */
    getYieldAdjustmentCodes(requestParameters: GetYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<YieldAdjustmentCodesDetails>;
    /**
     * Use this API to get Yield Category. <p><strong>OperationId:</strong>getYieldCategories</p>
     * Get Yield Category
     */
    getYieldCategoriesRaw(requestParameters: GetYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<YieldCategoriesDetails>>;
    /**
     * Use this API to get Yield Category. <p><strong>OperationId:</strong>getYieldCategories</p>
     * Get Yield Category
     */
    getYieldCategories(requestParameters: GetYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<YieldCategoriesDetails>;
    /**
     * Use this API to get Yield Market Types. <p><strong>OperationId:</strong>getYieldMarketTypes</p>
     * Get Yield Market Types
     */
    getYieldMarketTypesRaw(requestParameters: GetYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<YieldMarketTypesDetails>>;
    /**
     * Use this API to get Yield Market Types. <p><strong>OperationId:</strong>getYieldMarketTypes</p>
     * Get Yield Market Types
     */
    getYieldMarketTypes(requestParameters: GetYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<YieldMarketTypesDetails>;
    /**
     * Use this API to create new resort airports. <p><strong>OperationId:</strong>postAirports</p>
     * Create new resort airports
     */
    postAirportsRaw(requestParameters: PostAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new resort airports. <p><strong>OperationId:</strong>postAirports</p>
     * Create new resort airports
     */
    postAirports(requestParameters: PostAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API Use this API to creates the hotels Alternate Hotel information. <p><strong>OperationId:</strong>postAlternateHotels</p>
     * Create Alternate Hotels
     */
    postAlternateHotelsRaw(requestParameters: PostAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API Use this API to creates the hotels Alternate Hotel information. <p><strong>OperationId:</strong>postAlternateHotels</p>
     * Create Alternate Hotels
     */
    postAlternateHotels(requestParameters: PostAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>
     * Create amenities
     */
    postAmenitiesRaw(requestParameters: PostAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>
     * Create amenities
     */
    postAmenities(requestParameters: PostAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to create a new attraction template based on the request. . <p><strong>OperationId:</strong>postAttractionTemplates</p>
     * Create Attraction Template
     */
    postAttractionTemplatesRaw(requestParameters: PostAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to create a new attraction template based on the request. . <p><strong>OperationId:</strong>postAttractionTemplates</p>
     * Create Attraction Template
     */
    postAttractionTemplates(requestParameters: PostAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>
     * Create Attractions
     */
    postAttractionsRaw(requestParameters: PostAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>
     * Create Attractions
     */
    postAttractions(requestParameters: PostAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new Activity Log. <p><strong>OperationId:</strong>postConfigActivityLog</p>
     * Create a new Config Activity Log
     */
    postConfigActivityLogRaw(requestParameters: PostConfigActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new Activity Log. <p><strong>OperationId:</strong>postConfigActivityLog</p>
     * Create a new Config Activity Log
     */
    postConfigActivityLog(requestParameters: PostConfigActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>
     * Create Credit Card Types
     */
    postCreditCardTypesRaw(requestParameters: PostCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>
     * Create Credit Card Types
     */
    postCreditCardTypes(requestParameters: PostCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>
     * Create Departments
     */
    postDepartmentsRaw(requestParameters: PostDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>
     * Create Departments
     */
    postDepartments(requestParameters: PostDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>
     * Create Hotel Contacts
     */
    postHotelContactsRaw(requestParameters: PostHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>
     * Create Hotel Contacts
     */
    postHotelContacts(requestParameters: PostHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Hotel Day Type Codes. <p><strong>OperationId:</strong>postHotelDayTypeCodes</p>
     * Create Hotel Day Type Codes
     */
    postHotelDayTypeCodesRaw(requestParameters: PostHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Day Type Codes. <p><strong>OperationId:</strong>postHotelDayTypeCodes</p>
     * Create Hotel Day Type Codes
     */
    postHotelDayTypeCodes(requestParameters: PostHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>
     * Create Note information
     */
    postHotelNotesRaw(requestParameters: PostHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>
     * Create Note information
     */
    postHotelNotes(requestParameters: PostHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Rate Range information. <p><strong>OperationId:</strong>postHotelRateRanges</p>
     * Create Rate Range information
     */
    postHotelRateRangesRaw(requestParameters: PostHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Rate Range information. <p><strong>OperationId:</strong>postHotelRateRanges</p>
     * Create Rate Range information
     */
    postHotelRateRanges(requestParameters: PostHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create restaurant information. <p><strong>OperationId:</strong>postHotelRestaurants</p>
     * Create restaurant information
     */
    postHotelRestaurantsRaw(requestParameters: PostHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create restaurant information. <p><strong>OperationId:</strong>postHotelRestaurants</p>
     * Create restaurant information
     */
    postHotelRestaurants(requestParameters: PostHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new resort job titles. <p><strong>OperationId:</strong>postJobTitles</p>
     * Create new resort job titles
     */
    postJobTitlesRaw(requestParameters: PostJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new resort job titles. <p><strong>OperationId:</strong>postJobTitles</p>
     * Create new resort job titles
     */
    postJobTitles(requestParameters: PostJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Languages. <p><strong>OperationId:</strong>postLanguages</p>
     * Create Languages
     */
    postLanguagesRaw(requestParameters: PostLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Languages. <p><strong>OperationId:</strong>postLanguages</p>
     * Create Languages
     */
    postLanguages(requestParameters: PostLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new resort marketing cities. <p><strong>OperationId:</strong>postMarketingCities</p>
     * Create new resort marketing cities
     */
    postMarketingCitiesRaw(requestParameters: PostMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new resort marketing cities. <p><strong>OperationId:</strong>postMarketingCities</p>
     * Create new resort marketing cities
     */
    postMarketingCities(requestParameters: PostMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Telephone Book Category. <p><strong>OperationId:</strong>postTelephoneBookCategories</p>
     * Create Telephone Book Category
     */
    postTelephoneBookCategoriesRaw(requestParameters: PostTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Telephone Book Category. <p><strong>OperationId:</strong>postTelephoneBookCategories</p>
     * Create Telephone Book Category
     */
    postTelephoneBookCategories(requestParameters: PostTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Telephone Book Entries. <p><strong>OperationId:</strong>postTelephoneBookEntries</p>
     * Create Telephone Book Entries
     */
    postTelephoneBookEntriesRaw(requestParameters: PostTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Telephone Book Entries. <p><strong>OperationId:</strong>postTelephoneBookEntries</p>
     * Create Telephone Book Entries
     */
    postTelephoneBookEntries(requestParameters: PostTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new template airports. <p><strong>OperationId:</strong>postTemplateAirports</p>
     * Create new template airports
     */
    postTemplateAirportsRaw(requestParameters: PostTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new template airports. <p><strong>OperationId:</strong>postTemplateAirports</p>
     * Create new template airports
     */
    postTemplateAirports(requestParameters: PostTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template amenities. <p><strong>OperationId:</strong>postTemplateAmenities</p>
     * Create template amenities
     */
    postTemplateAmenitiesRaw(requestParameters: PostTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template amenities. <p><strong>OperationId:</strong>postTemplateAmenities</p>
     * Create template amenities
     */
    postTemplateAmenities(requestParameters: PostTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template Countries. <p><strong>OperationId:</strong>postTemplateCountries</p>
     * Create template Countries
     */
    postTemplateCountriesRaw(requestParameters: PostTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template Countries. <p><strong>OperationId:</strong>postTemplateCountries</p>
     * Create template Countries
     */
    postTemplateCountries(requestParameters: PostTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Template Day Type Codes. <p><strong>OperationId:</strong>postTemplateDayTypeCodes</p>
     * Create Template Day Type Codes
     */
    postTemplateDayTypeCodesRaw(requestParameters: PostTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Template Day Type Codes. <p><strong>OperationId:</strong>postTemplateDayTypeCodes</p>
     * Create Template Day Type Codes
     */
    postTemplateDayTypeCodes(requestParameters: PostTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create hotel details at the template level. <p><strong>OperationId:</strong>postTemplateHotelDetails</p>
     * Create hotel details at the template level
     */
    postTemplateHotelDetailsRaw(requestParameters: PostTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create hotel details at the template level. <p><strong>OperationId:</strong>postTemplateHotelDetails</p>
     * Create hotel details at the template level
     */
    postTemplateHotelDetails(requestParameters: PostTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new template job titles. <p><strong>OperationId:</strong>postTemplateJobTitles</p>
     * Create new template job titles
     */
    postTemplateJobTitlesRaw(requestParameters: PostTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new template job titles. <p><strong>OperationId:</strong>postTemplateJobTitles</p>
     * Create new template job titles
     */
    postTemplateJobTitles(requestParameters: PostTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new template marketing cities. <p><strong>OperationId:</strong>postTemplateMarketingCities</p>
     * Create new template marketing cities
     */
    postTemplateMarketingCitiesRaw(requestParameters: PostTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new template marketing cities. <p><strong>OperationId:</strong>postTemplateMarketingCities</p>
     * Create new template marketing cities
     */
    postTemplateMarketingCities(requestParameters: PostTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>
     * Create transportation
     */
    postTransportationRaw(requestParameters: PostTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>
     * Create transportation
     */
    postTransportation(requestParameters: PostTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create transportation templates. <p><strong>OperationId:</strong>postTransportationTemplates</p>
     * Create transportation templates
     */
    postTransportationTemplatesRaw(requestParameters: PostTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create transportation templates. <p><strong>OperationId:</strong>postTransportationTemplates</p>
     * Create transportation templates
     */
    postTransportationTemplates(requestParameters: PostTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Yield Adjustment Codes. <p><strong>OperationId:</strong>postYieldAdjustmentCodes</p>
     * Create Yield Adjustment Codes
     */
    postYieldAdjustmentCodesRaw(requestParameters: PostYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Yield Adjustment Codes. <p><strong>OperationId:</strong>postYieldAdjustmentCodes</p>
     * Create Yield Adjustment Codes
     */
    postYieldAdjustmentCodes(requestParameters: PostYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Yield Category. <p><strong>OperationId:</strong>postYieldCategories</p>
     * Create Yield Category
     */
    postYieldCategoriesRaw(requestParameters: PostYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Yield Category. <p><strong>OperationId:</strong>postYieldCategories</p>
     * Create Yield Category
     */
    postYieldCategories(requestParameters: PostYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Yield Market Types. <p><strong>OperationId:</strong>postYieldMarketTypes</p>
     * Create Yield Market Types
     */
    postYieldMarketTypesRaw(requestParameters: PostYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Yield Market Types. <p><strong>OperationId:</strong>postYieldMarketTypes</p>
     * Create Yield Market Types
     */
    postYieldMarketTypes(requestParameters: PostYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete airports for a specific property based on airportCode, hotelId. <p><strong>OperationId:</strong>removeAirports</p>
     * Delete resort airports
     */
    removeAirportsRaw(requestParameters: RemoveAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete airports for a specific property based on airportCode, hotelId. <p><strong>OperationId:</strong>removeAirports</p>
     * Delete resort airports
     */
    removeAirports(requestParameters: RemoveAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete the alternate hotels for a specific property based on alternateHotelId, hotelId. <p><strong>OperationId:</strong>removeAlternateHotels</p>
     * Delete Alternate Hotels
     */
    removeAlternateHotelsRaw(requestParameters: RemoveAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete the alternate hotels for a specific property based on alternateHotelId, hotelId. <p><strong>OperationId:</strong>removeAlternateHotels</p>
     * Delete Alternate Hotels
     */
    removeAlternateHotels(requestParameters: RemoveAlternateHotelsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete amenities for a specific property based on featureCode, hotelId, beginDate. <p><strong>OperationId:</strong>removeAmenities</p>
     * Delete amenities
     */
    removeAmenitiesRaw(requestParameters: RemoveAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete amenities for a specific property based on featureCode, hotelId, beginDate. <p><strong>OperationId:</strong>removeAmenities</p>
     * Delete amenities
     */
    removeAmenities(requestParameters: RemoveAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete attraction templates based on attractionCode. <p><strong>OperationId:</strong>removeAttractionTemplates</p>
     * Delete an existing attraction template
     */
    removeAttractionTemplatesRaw(requestParameters: RemoveAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete attraction templates based on attractionCode. <p><strong>OperationId:</strong>removeAttractionTemplates</p>
     * Delete an existing attraction template
     */
    removeAttractionTemplates(requestParameters: RemoveAttractionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete attractions for a specific property based on attractionCode, hotelId, attractionCodes. <p><strong>OperationId:</strong>removeAttractions</p>
     * Delete Attractions
     */
    removeAttractionsRaw(requestParameters: RemoveAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete attractions for a specific property based on attractionCode, hotelId, attractionCodes. <p><strong>OperationId:</strong>removeAttractions</p>
     * Delete Attractions
     */
    removeAttractions(requestParameters: RemoveAttractionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete attractions by code based on attractionCode. <p><strong>OperationId:</strong>removeAttractionsByCode</p>
     * Delete Attractions
     */
    removeAttractionsByCodeRaw(requestParameters: RemoveAttractionsByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete attractions by code based on attractionCode. <p><strong>OperationId:</strong>removeAttractionsByCode</p>
     * Delete Attractions
     */
    removeAttractionsByCode(requestParameters: RemoveAttractionsByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete credit card types for a specific property based on hotelId, creditCardTypesCode. <p><strong>OperationId:</strong>removeCreditCardTypes</p>
     * Delete Credit Card Types
     */
    removeCreditCardTypesRaw(requestParameters: RemoveCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete credit card types for a specific property based on hotelId, creditCardTypesCode. <p><strong>OperationId:</strong>removeCreditCardTypes</p>
     * Delete Credit Card Types
     */
    removeCreditCardTypes(requestParameters: RemoveCreditCardTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete day types for a date range based on criteria such as dayType, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeDayTypes</p>
     * Delete day type for a date range
     */
    removeDayTypesRaw(requestParameters: RemoveDayTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete day types for a date range based on criteria such as dayType, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeDayTypes</p>
     * Delete day type for a date range
     */
    removeDayTypes(requestParameters: RemoveDayTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete departments based on departmentCode, hotelId. <p><strong>OperationId:</strong>removeDepartments</p>
     * Delete Departments
     */
    removeDepartmentsRaw(requestParameters: RemoveDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete departments based on departmentCode, hotelId. <p><strong>OperationId:</strong>removeDepartments</p>
     * Delete Departments
     */
    removeDepartments(requestParameters: RemoveDepartmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete hotel contacts for a specific property based on contactId, hotelId, idExtension. <p><strong>OperationId:</strong>removeHotelContacts</p>
     * Delete Hotel contact
     */
    removeHotelContactsRaw(requestParameters: RemoveHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete hotel contacts for a specific property based on contactId, hotelId, idExtension. <p><strong>OperationId:</strong>removeHotelContacts</p>
     * Delete Hotel contact
     */
    removeHotelContacts(requestParameters: RemoveHotelContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete day type codes for a specific property based on hotelId, hotelIds. <p><strong>OperationId:</strong>removeHotelDayTypeCodes</p>
     * Delete Hotel Day Type Codes
     */
    removeHotelDayTypeCodesRaw(requestParameters: RemoveHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete day type codes for a specific property based on hotelId, hotelIds. <p><strong>OperationId:</strong>removeHotelDayTypeCodes</p>
     * Delete Hotel Day Type Codes
     */
    removeHotelDayTypeCodes(requestParameters: RemoveHotelDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete events for a specific property based on parameters such as eventId, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelEvents</p>
     * Delete Hotel Events
     */
    removeHotelEventsRaw(requestParameters: RemoveHotelEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete events for a specific property based on parameters such as eventId, hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelEvents</p>
     * Delete Hotel Events
     */
    removeHotelEvents(requestParameters: RemoveHotelEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete note information based on noteCode. <p><strong>OperationId:</strong>removeHotelNotes</p>
     * Delete Note information
     */
    removeHotelNotesRaw(requestParameters: RemoveHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete note information based on noteCode. <p><strong>OperationId:</strong>removeHotelNotes</p>
     * Delete Note information
     */
    removeHotelNotes(requestParameters: RemoveHotelNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete rate range information for a specific property based on hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelRateRanges</p>
     * Delete Rate Range information
     */
    removeHotelRateRangesRaw(requestParameters: RemoveHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete rate range information for a specific property based on hotelId, startDate, endDate, duration. <p><strong>OperationId:</strong>removeHotelRateRanges</p>
     * Delete Rate Range information
     */
    removeHotelRateRanges(requestParameters: RemoveHotelRateRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete restaurant information for a specific property based on restaurantCode, hotelId. <p><strong>OperationId:</strong>removeHotelRestaurants</p>
     * Delete restaurant information
     */
    removeHotelRestaurantsRaw(requestParameters: RemoveHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete restaurant information for a specific property based on restaurantCode, hotelId. <p><strong>OperationId:</strong>removeHotelRestaurants</p>
     * Delete restaurant information
     */
    removeHotelRestaurants(requestParameters: RemoveHotelRestaurantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete job titles for a specific property based on jobTitleCode, hotelId. <p><strong>OperationId:</strong>removeJobTitles</p>
     * Delete resort job titles
     */
    removeJobTitlesRaw(requestParameters: RemoveJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete job titles for a specific property based on jobTitleCode, hotelId. <p><strong>OperationId:</strong>removeJobTitles</p>
     * Delete resort job titles
     */
    removeJobTitles(requestParameters: RemoveJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete languages based on languageCode. <p><strong>OperationId:</strong>removeLanguages</p>
     * Delete a Language
     */
    removeLanguagesRaw(requestParameters: RemoveLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete languages based on languageCode. <p><strong>OperationId:</strong>removeLanguages</p>
     * Delete a Language
     */
    removeLanguages(requestParameters: RemoveLanguagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete marketing cities for a specific property based on  cityCode, hotelId, regionCode. <p><strong>OperationId:</strong>removeMarketingCities</p>
     * Delete resort marketing cities
     */
    removeMarketingCitiesRaw(requestParameters: RemoveMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete marketing cities for a specific property based on  cityCode, hotelId, regionCode. <p><strong>OperationId:</strong>removeMarketingCities</p>
     * Delete resort marketing cities
     */
    removeMarketingCities(requestParameters: RemoveMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete telephone book categories for a specific property based on categoryCode, hotelId, description, orderBy, generic. <p><strong>OperationId:</strong>removeTelephoneBookCategories</p>
     * Delete Telephone Book Category
     */
    removeTelephoneBookCategoriesRaw(requestParameters: RemoveTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete telephone book categories for a specific property based on categoryCode, hotelId, description, orderBy, generic. <p><strong>OperationId:</strong>removeTelephoneBookCategories</p>
     * Delete Telephone Book Category
     */
    removeTelephoneBookCategories(requestParameters: RemoveTelephoneBookCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete telephone book entries for a specific property based on entryId, hotelId, idContext. <p><strong>OperationId:</strong>removeTelephoneBookEntries</p>
     * Delete Telephone Book Entries
     */
    removeTelephoneBookEntriesRaw(requestParameters: RemoveTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete telephone book entries for a specific property based on entryId, hotelId, idContext. <p><strong>OperationId:</strong>removeTelephoneBookEntries</p>
     * Delete Telephone Book Entries
     */
    removeTelephoneBookEntries(requestParameters: RemoveTelephoneBookEntriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete telephone book entries. <p><strong>OperationId:</strong>removeTelephoneBookEntriesWithoutHotelId</p>
     * Delete Telephone Book Entries
     */
    removeTelephoneBookEntriesWithoutHotelIdRaw(requestParameters: RemoveTelephoneBookEntriesWithoutHotelIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete telephone book entries. <p><strong>OperationId:</strong>removeTelephoneBookEntriesWithoutHotelId</p>
     * Delete Telephone Book Entries
     */
    removeTelephoneBookEntriesWithoutHotelId(requestParameters: RemoveTelephoneBookEntriesWithoutHotelIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete airport templates based on airportCode. <p><strong>OperationId:</strong>removeTemplateAirports</p>
     * Delete template airports
     */
    removeTemplateAirportsRaw(requestParameters: RemoveTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete airport templates based on airportCode. <p><strong>OperationId:</strong>removeTemplateAirports</p>
     * Delete template airports
     */
    removeTemplateAirports(requestParameters: RemoveTemplateAirportsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete amenity templates based on featureCode. <p><strong>OperationId:</strong>removeTemplateAmenities</p>
     * Delete template amenities
     */
    removeTemplateAmenitiesRaw(requestParameters: RemoveTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete amenity templates based on featureCode. <p><strong>OperationId:</strong>removeTemplateAmenities</p>
     * Delete template amenities
     */
    removeTemplateAmenities(requestParameters: RemoveTemplateAmenitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete country templates based on countryCode. <p><strong>OperationId:</strong>removeTemplateCountries</p>
     * Delete template Countries
     */
    removeTemplateCountriesRaw(requestParameters: RemoveTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete country templates based on countryCode. <p><strong>OperationId:</strong>removeTemplateCountries</p>
     * Delete template Countries
     */
    removeTemplateCountries(requestParameters: RemoveTemplateCountriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete day type code templates based on templateDayTypeCodes. <p><strong>OperationId:</strong>removeTemplateDayTypeCodes</p>
     * Delete Template Day Type Codes
     */
    removeTemplateDayTypeCodesRaw(requestParameters: RemoveTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete day type code templates based on templateDayTypeCodes. <p><strong>OperationId:</strong>removeTemplateDayTypeCodes</p>
     * Delete Template Day Type Codes
     */
    removeTemplateDayTypeCodes(requestParameters: RemoveTemplateDayTypeCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete template hotel details based on templateHotelDetailCode, templateHotelDetailCategory. <p><strong>OperationId:</strong>removeTemplateHotelDetails</p>
     * Delete hotel details specified at the template level
     */
    removeTemplateHotelDetailsRaw(requestParameters: RemoveTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete template hotel details based on templateHotelDetailCode, templateHotelDetailCategory. <p><strong>OperationId:</strong>removeTemplateHotelDetails</p>
     * Delete hotel details specified at the template level
     */
    removeTemplateHotelDetails(requestParameters: RemoveTemplateHotelDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete job title templates based on jobTitleCode. <p><strong>OperationId:</strong>removeTemplateJobTitles</p>
     * Delete template job titles
     */
    removeTemplateJobTitlesRaw(requestParameters: RemoveTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete job title templates based on jobTitleCode. <p><strong>OperationId:</strong>removeTemplateJobTitles</p>
     * Delete template job titles
     */
    removeTemplateJobTitles(requestParameters: RemoveTemplateJobTitlesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete marketing city templates based on cityCode, regionCode. <p><strong>OperationId:</strong>removeTemplateMarketingCities</p>
     * Delete template marketing cities
     */
    removeTemplateMarketingCitiesRaw(requestParameters: RemoveTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete marketing city templates based on cityCode, regionCode. <p><strong>OperationId:</strong>removeTemplateMarketingCities</p>
     * Delete template marketing cities
     */
    removeTemplateMarketingCities(requestParameters: RemoveTemplateMarketingCitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete transportation for a specific property based on parameters such as transportationCode, hotelId, label, orderBy, createDateTime, creatorId, extension, lastModifierId, lastModifyDateTime, etc. <p><strong>OperationId:</strong>removeTransportation</p>
     * Delete transportation
     */
    removeTransportationRaw(requestParameters: RemoveTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete transportation for a specific property based on parameters such as transportationCode, hotelId, label, orderBy, createDateTime, creatorId, extension, lastModifierId, lastModifyDateTime, etc. <p><strong>OperationId:</strong>removeTransportation</p>
     * Delete transportation
     */
    removeTransportation(requestParameters: RemoveTransportationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete transportation templates based on transportationCode. <p><strong>OperationId:</strong>removeTransportationTemplates</p>
     * Delete transportation templates
     */
    removeTransportationTemplatesRaw(requestParameters: RemoveTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete transportation templates based on transportationCode. <p><strong>OperationId:</strong>removeTransportationTemplates</p>
     * Delete transportation templates
     */
    removeTransportationTemplates(requestParameters: RemoveTransportationTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete yield adjstment codes for a specific property based on yieldAdjustmentCode, hotelId. <p><strong>OperationId:</strong>removeYieldAdjustmentCodes</p>
     * Delete Yield Adjustment Codes
     */
    removeYieldAdjustmentCodesRaw(requestParameters: RemoveYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete yield adjstment codes for a specific property based on yieldAdjustmentCode, hotelId. <p><strong>OperationId:</strong>removeYieldAdjustmentCodes</p>
     * Delete Yield Adjustment Codes
     */
    removeYieldAdjustmentCodes(requestParameters: RemoveYieldAdjustmentCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete yield categories for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldCategories</p>
     * Delete Yield Category
     */
    removeYieldCategoriesRaw(requestParameters: RemoveYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete yield categories for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldCategories</p>
     * Delete Yield Category
     */
    removeYieldCategories(requestParameters: RemoveYieldCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete yield market types for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldMarketTypes</p>
     * Delete Yield Market Types
     */
    removeYieldMarketTypesRaw(requestParameters: RemoveYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete yield market types for a specific property based on code, hotelId. <p><strong>OperationId:</strong>removeYieldMarketTypes</p>
     * Delete Yield Market Types
     */
    removeYieldMarketTypes(requestParameters: RemoveYieldMarketTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update day types for a date range based on setDayTypes. <p><strong>OperationId:</strong>setDayTypes</p>
     * Set day type for a date range
     */
    setDayTypesRaw(requestParameters: SetDayTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update day types for a date range based on setDayTypes. <p><strong>OperationId:</strong>setDayTypes</p>
     * Set day type for a date range
     */
    setDayTypes(requestParameters: SetDayTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update events for a specific property based on hotelId, setHotelEvents. <p><strong>OperationId:</strong>setHotelEvents</p>
     * Set hotel events
     */
    setHotelEventsRaw(requestParameters: SetHotelEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update events for a specific property based on hotelId, setHotelEvents. <p><strong>OperationId:</strong>setHotelEvents</p>
     * Set hotel events
     */
    setHotelEvents(requestParameters: SetHotelEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const GetConfigActivityLogModuleEnum: {
    readonly Reservation: "Reservation";
    readonly Contract: "Contract";
    readonly Allotment: "Allotment";
    readonly Outlookview: "Outlookview";
    readonly Profile: "Profile";
    readonly Accountreceivables: "Accountreceivables";
    readonly GdsConvRateCodes: "GdsConvRateCodes";
    readonly RateCode: "RateCode";
    readonly Billing: "Billing";
    readonly Activity: "Activity";
};
export type GetConfigActivityLogModuleEnum = typeof GetConfigActivityLogModuleEnum[keyof typeof GetConfigActivityLogModuleEnum];
/**
 * @export
 */
export declare const GetCurrencyExchangeRatesExchangeTypeEnum: {
    readonly Posting: "Posting";
    readonly Settlement: "Settlement";
    readonly Exchangecash: "Exchangecash";
    readonly Travelagent: "Travelagent";
    readonly Forecast: "Forecast";
    readonly Membership: "Membership";
    readonly Exchangecheck: "Exchangecheck";
    readonly Certificate: "Certificate";
};
export type GetCurrencyExchangeRatesExchangeTypeEnum = typeof GetCurrencyExchangeRatesExchangeTypeEnum[keyof typeof GetCurrencyExchangeRatesExchangeTypeEnum];
/**
 * @export
 */
export declare const GetHotelFetchInstructionsEnum: {
    readonly General: "General";
    readonly Attraction: "Attraction";
    readonly Transportation: "Transportation";
    readonly Package: "Package";
    readonly Dining: "Dining";
    readonly Feature: "Feature";
    readonly Directions: "Directions";
    readonly GeneralNotes: "GeneralNotes";
    readonly Airports: "Airports";
    readonly Alternatehotels: "Alternatehotels";
    readonly Miscellaneous: "Miscellaneous";
    readonly Raterange: "Raterange";
    readonly Contacts: "Contacts";
    readonly EventSpaces: "EventSpaces";
    readonly Notes: "Notes";
    readonly Corporateinformation: "Corporateinformation";
    readonly Meetingrooms: "Meetingrooms";
};
export type GetHotelFetchInstructionsEnum = typeof GetHotelFetchInstructionsEnum[keyof typeof GetHotelFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetHotelBrochureFetchInstructionsEnum: {
    readonly General: "General";
    readonly Attraction: "Attraction";
    readonly Transportation: "Transportation";
    readonly Package: "Package";
    readonly Dining: "Dining";
    readonly Feature: "Feature";
    readonly Directions: "Directions";
    readonly GeneralNotes: "GeneralNotes";
    readonly Airports: "Airports";
    readonly Alternatehotels: "Alternatehotels";
    readonly Miscellaneous: "Miscellaneous";
    readonly Raterange: "Raterange";
    readonly Contacts: "Contacts";
    readonly EventSpaces: "EventSpaces";
    readonly Notes: "Notes";
    readonly Corporateinformation: "Corporateinformation";
    readonly Meetingrooms: "Meetingrooms";
};
export type GetHotelBrochureFetchInstructionsEnum = typeof GetHotelBrochureFetchInstructionsEnum[keyof typeof GetHotelBrochureFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetHotelCalendarFetchInstructionsEnum: {
    readonly DayType: "DayType";
    readonly Event: "Event";
};
export type GetHotelCalendarFetchInstructionsEnum = typeof GetHotelCalendarFetchInstructionsEnum[keyof typeof GetHotelCalendarFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetPropertyCalendarFetchInstructionsEnum: {
    readonly DayType: "DayType";
    readonly Event: "Event";
};
export type GetPropertyCalendarFetchInstructionsEnum = typeof GetPropertyCalendarFetchInstructionsEnum[keyof typeof GetPropertyCalendarFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetYieldAdjustmentCodesTypeEnum: {
    readonly PerStay: "PerStay";
    readonly PerNight: "PerNight";
    readonly PerPersonPerNight: "PerPersonPerNight";
    readonly PerPersonPerStay: "PerPersonPerStay";
};
export type GetYieldAdjustmentCodesTypeEnum = typeof GetYieldAdjustmentCodesTypeEnum[keyof typeof GetYieldAdjustmentCodesTypeEnum];
