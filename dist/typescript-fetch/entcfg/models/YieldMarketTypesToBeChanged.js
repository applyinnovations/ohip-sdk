"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.YieldMarketTypesToBeChangedToJSON = exports.YieldMarketTypesToBeChangedFromJSONTyped = exports.YieldMarketTypesToBeChangedFromJSON = exports.instanceOfYieldMarketTypesToBeChanged = void 0;
const runtime_1 = require("../runtime");
const InstanceLink_1 = require("./InstanceLink");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the YieldMarketTypesToBeChanged interface.
 */
function instanceOfYieldMarketTypesToBeChanged(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfYieldMarketTypesToBeChanged = instanceOfYieldMarketTypesToBeChanged;
function YieldMarketTypesToBeChangedFromJSON(json) {
    return YieldMarketTypesToBeChangedFromJSONTyped(json, false);
}
exports.YieldMarketTypesToBeChangedFromJSON = YieldMarketTypesToBeChangedFromJSON;
function YieldMarketTypesToBeChangedFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'alternativeCode': !(0, runtime_1.exists)(json, 'alternativeCode') ? undefined : json['alternativeCode'],
        '_default': !(0, runtime_1.exists)(json, 'default') ? undefined : json['default'],
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (json['links'].map(InstanceLink_1.InstanceLinkFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.YieldMarketTypesToBeChangedFromJSONTyped = YieldMarketTypesToBeChangedFromJSONTyped;
function YieldMarketTypesToBeChangedToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'hotelId': value.hotelId,
        'description': value.description,
        'alternativeCode': value.alternativeCode,
        'default': value._default,
        'links': value.links === undefined ? undefined : (value.links.map(InstanceLink_1.InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.YieldMarketTypesToBeChangedToJSON = YieldMarketTypesToBeChangedToJSON;
