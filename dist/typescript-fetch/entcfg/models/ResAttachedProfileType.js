"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResAttachedProfileTypeToJSON = exports.ResAttachedProfileTypeFromJSONTyped = exports.ResAttachedProfileTypeFromJSON = exports.instanceOfResAttachedProfileType = void 0;
const runtime_1 = require("../runtime");
const ResProfileTypeType_1 = require("./ResProfileTypeType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ResAttachedProfileType interface.
 */
function instanceOfResAttachedProfileType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResAttachedProfileType = instanceOfResAttachedProfileType;
function ResAttachedProfileTypeFromJSON(json) {
    return ResAttachedProfileTypeFromJSONTyped(json, false);
}
exports.ResAttachedProfileTypeFromJSON = ResAttachedProfileTypeFromJSON;
function ResAttachedProfileTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'profileIdList': !(0, runtime_1.exists)(json, 'profileIdList') ? undefined : (json['profileIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'reservationProfileType': !(0, runtime_1.exists)(json, 'reservationProfileType') ? undefined : (0, ResProfileTypeType_1.ResProfileTypeTypeFromJSON)(json['reservationProfileType']),
    };
}
exports.ResAttachedProfileTypeFromJSONTyped = ResAttachedProfileTypeFromJSONTyped;
function ResAttachedProfileTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'profileIdList': value.profileIdList === undefined ? undefined : (value.profileIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'reservationProfileType': (0, ResProfileTypeType_1.ResProfileTypeTypeToJSON)(value.reservationProfileType),
    };
}
exports.ResAttachedProfileTypeToJSON = ResAttachedProfileTypeToJSON;
