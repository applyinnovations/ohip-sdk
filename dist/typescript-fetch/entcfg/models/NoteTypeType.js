"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoteTypeTypeToJSON = exports.NoteTypeTypeFromJSONTyped = exports.NoteTypeTypeFromJSON = exports.instanceOfNoteTypeType = void 0;
const runtime_1 = require("../runtime");
const CodeListType_1 = require("./CodeListType");
const DefaultNoteTextsDetailType_1 = require("./DefaultNoteTextsDetailType");
const GenericHotelCodeCodeListType_1 = require("./GenericHotelCodeCodeListType");
/**
 * Check if a given object implements the NoteTypeType interface.
 */
function instanceOfNoteTypeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfNoteTypeType = instanceOfNoteTypeType;
function NoteTypeTypeFromJSON(json) {
    return NoteTypeTypeFromJSONTyped(json, false);
}
exports.NoteTypeTypeFromJSON = NoteTypeTypeFromJSON;
function NoteTypeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'defaultNoteText': !(0, runtime_1.exists)(json, 'defaultNoteText') ? undefined : json['defaultNoteText'],
        'defaultNoteType': !(0, runtime_1.exists)(json, 'defaultNoteType') ? undefined : json['defaultNoteType'],
        'defaultText': !(0, runtime_1.exists)(json, 'defaultText') ? undefined : json['defaultText'],
        'departmentNotes': !(0, runtime_1.exists)(json, 'departmentNotes') ? undefined : json['departmentNotes'],
        'departments': !(0, runtime_1.exists)(json, 'departments') ? undefined : (0, GenericHotelCodeCodeListType_1.GenericHotelCodeCodeListTypeFromJSON)(json['departments']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'globalAllowed': !(0, runtime_1.exists)(json, 'globalAllowed') ? undefined : json['globalAllowed'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'internal': !(0, runtime_1.exists)(json, 'internal') ? undefined : json['internal'],
        'noteGroup': !(0, runtime_1.exists)(json, 'noteGroup') ? undefined : json['noteGroup'],
        'notificationAreas': !(0, runtime_1.exists)(json, 'notificationAreas') ? undefined : (0, CodeListType_1.CodeListTypeFromJSON)(json['notificationAreas']),
        'overrideInternal': !(0, runtime_1.exists)(json, 'overrideInternal') ? undefined : json['overrideInternal'],
        'propertyDefaultNoteTexts': !(0, runtime_1.exists)(json, 'propertyDefaultNoteTexts') ? undefined : (0, DefaultNoteTextsDetailType_1.DefaultNoteTextsDetailTypeFromJSON)(json['propertyDefaultNoteTexts']),
    };
}
exports.NoteTypeTypeFromJSONTyped = NoteTypeTypeFromJSONTyped;
function NoteTypeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'defaultNoteText': value.defaultNoteText,
        'defaultNoteType': value.defaultNoteType,
        'defaultText': value.defaultText,
        'departmentNotes': value.departmentNotes,
        'departments': (0, GenericHotelCodeCodeListType_1.GenericHotelCodeCodeListTypeToJSON)(value.departments),
        'description': value.description,
        'displaySequence': value.displaySequence,
        'globalAllowed': value.globalAllowed,
        'inactive': value.inactive,
        'internal': value.internal,
        'noteGroup': value.noteGroup,
        'notificationAreas': (0, CodeListType_1.CodeListTypeToJSON)(value.notificationAreas),
        'overrideInternal': value.overrideInternal,
        'propertyDefaultNoteTexts': (0, DefaultNoteTextsDetailType_1.DefaultNoteTextsDetailTypeToJSON)(value.propertyDefaultNoteTexts),
    };
}
exports.NoteTypeTypeToJSON = NoteTypeTypeToJSON;
