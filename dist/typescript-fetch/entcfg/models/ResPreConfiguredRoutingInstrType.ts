/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthorizerInfoType } from './AuthorizerInfoType';
import {
    AuthorizerInfoTypeFromJSON,
    AuthorizerInfoTypeFromJSONTyped,
    AuthorizerInfoTypeToJSON,
} from './AuthorizerInfoType';
import type { ResProfileTypeType } from './ResProfileTypeType';
import {
    ResProfileTypeTypeFromJSON,
    ResProfileTypeTypeFromJSONTyped,
    ResProfileTypeTypeToJSON,
} from './ResProfileTypeType';

/**
 * Instruction to attach Pre-Configured Routing Instructions to a Reservation.
 * @export
 * @interface ResPreConfiguredRoutingInstrType
 */
export interface ResPreConfiguredRoutingInstrType {
    /**
     * 
     * @type {AuthorizerInfoType}
     * @memberof ResPreConfiguredRoutingInstrType
     */
    authorizerInfo?: AuthorizerInfoType;
    /**
     * Rate Code with attached Routing Instruction.
     * @type {string}
     * @memberof ResPreConfiguredRoutingInstrType
     */
    ratePlanCode?: string;
    /**
     * 
     * @type {ResProfileTypeType}
     * @memberof ResPreConfiguredRoutingInstrType
     */
    profileType?: ResProfileTypeType;
    /**
     * Promotion Code with attached Complimentary Routing.
     * @type {string}
     * @memberof ResPreConfiguredRoutingInstrType
     */
    promotionCode?: string;
}

/**
 * Check if a given object implements the ResPreConfiguredRoutingInstrType interface.
 */
export function instanceOfResPreConfiguredRoutingInstrType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResPreConfiguredRoutingInstrTypeFromJSON(json: any): ResPreConfiguredRoutingInstrType {
    return ResPreConfiguredRoutingInstrTypeFromJSONTyped(json, false);
}

export function ResPreConfiguredRoutingInstrTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResPreConfiguredRoutingInstrType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authorizerInfo': !exists(json, 'authorizerInfo') ? undefined : AuthorizerInfoTypeFromJSON(json['authorizerInfo']),
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'profileType': !exists(json, 'profileType') ? undefined : ResProfileTypeTypeFromJSON(json['profileType']),
        'promotionCode': !exists(json, 'promotionCode') ? undefined : json['promotionCode'],
    };
}

export function ResPreConfiguredRoutingInstrTypeToJSON(value?: ResPreConfiguredRoutingInstrType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authorizerInfo': AuthorizerInfoTypeToJSON(value.authorizerInfo),
        'ratePlanCode': value.ratePlanCode,
        'profileType': ResProfileTypeTypeToJSON(value.profileType),
        'promotionCode': value.promotionCode,
    };
}

