/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Guest Preference details for the profile.
 * @export
 * @interface PreferenceType
 */
export interface PreferenceType {
    /**
     * Preference value for display purposes.
     * @type {string}
     * @memberof PreferenceType
     */
    preferenceValue?: string;
    /**
     * Preference Description for display purposes.
     * @type {string}
     * @memberof PreferenceType
     */
    description?: string;
    /**
     * Whether this preference is property specific or not.
     * @type {boolean}
     * @memberof PreferenceType
     */
    global?: boolean;
    /**
     * Source of the preference.
     * @type {string}
     * @memberof PreferenceType
     */
    source?: string;
    /**
     * If specified preference belongs to the Hotels listed, otherwise it is a global preference.
     * @type {Array<string>}
     * @memberof PreferenceType
     */
    hotels?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PreferenceType
     */
    preferenceId?: string;
    /**
     * Specifies the count of preferences excluded for the attached reservation preference.
     * @type {number}
     * @memberof PreferenceType
     */
    excludedPreferencesCount?: number;
}
/**
 * Check if a given object implements the PreferenceType interface.
 */
export declare function instanceOfPreferenceType(value: object): boolean;
export declare function PreferenceTypeFromJSON(json: any): PreferenceType;
export declare function PreferenceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferenceType;
export declare function PreferenceTypeToJSON(value?: PreferenceType | null): any;
