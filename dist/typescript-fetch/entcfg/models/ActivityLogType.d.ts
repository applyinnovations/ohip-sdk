/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ActivityLogType
 */
export interface ActivityLogType {
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    hotelId?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    module?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    logDate?: string;
    /**
     *
     * @type {number}
     * @memberof ActivityLogType
     */
    refActionId?: number;
    /**
     *
     * @type {number}
     * @memberof ActivityLogType
     */
    logUserId?: number;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    logUserName?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    machineStation?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    croCode?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    actionType?: string;
    /**
     *
     * @type {string}
     * @memberof ActivityLogType
     */
    actionDescription?: string;
    /**
     * The IP Address of the machine that performed the activity
     * @type {string}
     * @memberof ActivityLogType
     */
    iPAddress?: string;
    /**
     * The selected device code
     * @type {string}
     * @memberof ActivityLogType
     */
    deviceCode?: string;
}
/**
 * Check if a given object implements the ActivityLogType interface.
 */
export declare function instanceOfActivityLogType(value: object): boolean;
export declare function ActivityLogTypeFromJSON(json: any): ActivityLogType;
export declare function ActivityLogTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityLogType;
export declare function ActivityLogTypeToJSON(value?: ActivityLogType | null): any;
