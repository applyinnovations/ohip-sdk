/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Currency Formatting information configuration of the hotel.
 * @export
 * @interface HotelBrochureTypePropertyControlsCurrencyFormatting
 */
export interface HotelBrochureTypePropertyControlsCurrencyFormatting {
    /**
     * The base currency code for this hotel..
     * @type {string}
     * @memberof HotelBrochureTypePropertyControlsCurrencyFormatting
     */
    currencyCode?: string;
    /**
     * Format for the local currency.
     * @type {string}
     * @memberof HotelBrochureTypePropertyControlsCurrencyFormatting
     */
    currencyFormat?: string;
    /**
     * Symbol to designate the default currency of the hotel.
     * @type {string}
     * @memberof HotelBrochureTypePropertyControlsCurrencyFormatting
     */
    currencySymbol?: string;
    /**
     * Number of decimal positions used for this currency type.
     * @type {number}
     * @memberof HotelBrochureTypePropertyControlsCurrencyFormatting
     */
    decimalPositions?: number;
}

/**
 * Check if a given object implements the HotelBrochureTypePropertyControlsCurrencyFormatting interface.
 */
export function instanceOfHotelBrochureTypePropertyControlsCurrencyFormatting(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelBrochureTypePropertyControlsCurrencyFormattingFromJSON(json: any): HotelBrochureTypePropertyControlsCurrencyFormatting {
    return HotelBrochureTypePropertyControlsCurrencyFormattingFromJSONTyped(json, false);
}

export function HotelBrochureTypePropertyControlsCurrencyFormattingFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelBrochureTypePropertyControlsCurrencyFormatting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'currencyFormat': !exists(json, 'currencyFormat') ? undefined : json['currencyFormat'],
        'currencySymbol': !exists(json, 'currencySymbol') ? undefined : json['currencySymbol'],
        'decimalPositions': !exists(json, 'decimalPositions') ? undefined : json['decimalPositions'],
    };
}

export function HotelBrochureTypePropertyControlsCurrencyFormattingToJSON(value?: HotelBrochureTypePropertyControlsCurrencyFormatting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currencyCode': value.currencyCode,
        'currencyFormat': value.currencyFormat,
        'currencySymbol': value.currencySymbol,
        'decimalPositions': value.decimalPositions,
    };
}

