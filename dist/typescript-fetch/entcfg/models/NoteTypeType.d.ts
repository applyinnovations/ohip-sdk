/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DefaultNoteTextDetailType } from './DefaultNoteTextDetailType';
import type { GenericHotelCodeCodeType } from './GenericHotelCodeCodeType';
/**
 * Note Types Information Type.
 * @export
 * @interface NoteTypeType
 */
export interface NoteTypeType {
    /**
     * Notes Group of the Note Types code.
     * @type {string}
     * @memberof NoteTypeType
     */
    noteGroup?: string;
    /**
     * Code of the Note Types.
     * @type {string}
     * @memberof NoteTypeType
     */
    code?: string;
    /**
     * Description of the Note Types Code.
     * @type {string}
     * @memberof NoteTypeType
     */
    description?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof NoteTypeType
     */
    notificationAreas?: Array<string>;
    /**
     * Display Sequence.
     * @type {number}
     * @memberof NoteTypeType
     */
    displaySequence?: number;
    /**
     * Indicates if the Note Types Code is inactive.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    inactive?: boolean;
    /**
     * Indicates if the Note Types Code is internal.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    internal?: boolean;
    /**
     * Indicates if the Note Types Code is override internal.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    overrideInternal?: boolean;
    /**
     * Indicates if the Note Types Code is default.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    defaultNoteType?: boolean;
    /**
     * Indicates if the Note Types Code has department notes.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    departmentNotes?: boolean;
    /**
     * Indicates if the Note Types Code is globally allowed.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    globalAllowed?: boolean;
    /**
     * List of HotelCode and Code combinations.
     * @type {Array<GenericHotelCodeCodeType>}
     * @memberof NoteTypeType
     */
    departments?: Array<GenericHotelCodeCodeType>;
    /**
     * Indicates if the Note Types Code has at least one default text defined.
     * @type {boolean}
     * @memberof NoteTypeType
     */
    defaultText?: boolean;
    /**
     * Default Note Text if Note Type has default note.
     * @type {string}
     * @memberof NoteTypeType
     */
    defaultNoteText?: string;
    /**
     * Collection of individual Default Note Text details.
     * @type {Array<DefaultNoteTextDetailType>}
     * @memberof NoteTypeType
     */
    propertyDefaultNoteTexts?: Array<DefaultNoteTextDetailType>;
}
/**
 * Check if a given object implements the NoteTypeType interface.
 */
export declare function instanceOfNoteTypeType(value: object): boolean;
export declare function NoteTypeTypeFromJSON(json: any): NoteTypeType;
export declare function NoteTypeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoteTypeType;
export declare function NoteTypeTypeToJSON(value?: NoteTypeType | null): any;
