/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AmenityTypeType } from './AmenityTypeType';
/**
 * Base details used for amenities.
 * @export
 * @interface ConfigTemplateAmenityType
 */
export interface ConfigTemplateAmenityType {
    /**
     * The description about amenity of the hotel.
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    description?: string;
    /**
     * The comments about amenity of the hotel.
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    comments?: string;
    /**
     * Specifies the feature code (aka amenity code).
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    featureCode?: string;
    /**
     * Display Order sequence.
     * @type {number}
     * @memberof ConfigTemplateAmenityType
     */
    orderSequence?: number;
    /**
     *
     * @type {AmenityTypeType}
     * @memberof ConfigTemplateAmenityType
     */
    amenityType?: AmenityTypeType;
    /**
     * The date the amenity is scheduled to become active.
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    beginDate?: string;
    /**
     * The date the amenity is scheduled to become inactive.
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    endDate?: string;
    /**
     * The new chain code which is used in the change method.
     * @type {string}
     * @memberof ConfigTemplateAmenityType
     */
    newChainCode?: string;
}
/**
 * Check if a given object implements the ConfigTemplateAmenityType interface.
 */
export declare function instanceOfConfigTemplateAmenityType(value: object): boolean;
export declare function ConfigTemplateAmenityTypeFromJSON(json: any): ConfigTemplateAmenityType;
export declare function ConfigTemplateAmenityTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigTemplateAmenityType;
export declare function ConfigTemplateAmenityTypeToJSON(value?: ConfigTemplateAmenityType | null): any;
