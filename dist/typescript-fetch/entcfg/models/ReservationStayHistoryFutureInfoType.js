"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReservationStayHistoryFutureInfoTypeToJSON = exports.ReservationStayHistoryFutureInfoTypeFromJSONTyped = exports.ReservationStayHistoryFutureInfoTypeFromJSON = exports.instanceOfReservationStayHistoryFutureInfoType = void 0;
const runtime_1 = require("../runtime");
const StayFutureListType_1 = require("./StayFutureListType");
const StayHistoryListType_1 = require("./StayHistoryListType");
/**
 * Check if a given object implements the ReservationStayHistoryFutureInfoType interface.
 */
function instanceOfReservationStayHistoryFutureInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReservationStayHistoryFutureInfoType = instanceOfReservationStayHistoryFutureInfoType;
function ReservationStayHistoryFutureInfoTypeFromJSON(json) {
    return ReservationStayHistoryFutureInfoTypeFromJSONTyped(json, false);
}
exports.ReservationStayHistoryFutureInfoTypeFromJSON = ReservationStayHistoryFutureInfoTypeFromJSON;
function ReservationStayHistoryFutureInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'historyList': !(0, runtime_1.exists)(json, 'historyList') ? undefined : (0, StayHistoryListType_1.StayHistoryListTypeFromJSON)(json['historyList']),
        'futureList': !(0, runtime_1.exists)(json, 'futureList') ? undefined : (0, StayFutureListType_1.StayFutureListTypeFromJSON)(json['futureList']),
    };
}
exports.ReservationStayHistoryFutureInfoTypeFromJSONTyped = ReservationStayHistoryFutureInfoTypeFromJSONTyped;
function ReservationStayHistoryFutureInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'historyList': (0, StayHistoryListType_1.StayHistoryListTypeToJSON)(value.historyList),
        'futureList': (0, StayFutureListType_1.StayFutureListTypeToJSON)(value.futureList),
    };
}
exports.ReservationStayHistoryFutureInfoTypeToJSON = ReservationStayHistoryFutureInfoTypeToJSON;
