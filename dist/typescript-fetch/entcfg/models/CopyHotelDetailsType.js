"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyHotelDetailsTypeToJSON = exports.CopyHotelDetailsTypeFromJSONTyped = exports.CopyHotelDetailsTypeFromJSON = exports.instanceOfCopyHotelDetailsType = void 0;
const runtime_1 = require("../runtime");
const CodeListType_1 = require("./CodeListType");
const TemplateHotelDetailsIDType_1 = require("./TemplateHotelDetailsIDType");
/**
 * Check if a given object implements the CopyHotelDetailsType interface.
 */
function instanceOfCopyHotelDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyHotelDetailsType = instanceOfCopyHotelDetailsType;
function CopyHotelDetailsTypeFromJSON(json) {
    return CopyHotelDetailsTypeFromJSONTyped(json, false);
}
exports.CopyHotelDetailsTypeFromJSON = CopyHotelDetailsTypeFromJSON;
function CopyHotelDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotels': !(0, runtime_1.exists)(json, 'hotels') ? undefined : (0, CodeListType_1.CodeListTypeFromJSON)(json['hotels']),
        'templateHotelDetails': !(0, runtime_1.exists)(json, 'templateHotelDetails') ? undefined : (0, TemplateHotelDetailsIDType_1.TemplateHotelDetailsIDTypeFromJSON)(json['templateHotelDetails']),
    };
}
exports.CopyHotelDetailsTypeFromJSONTyped = CopyHotelDetailsTypeFromJSONTyped;
function CopyHotelDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotels': (0, CodeListType_1.CodeListTypeToJSON)(value.hotels),
        'templateHotelDetails': (0, TemplateHotelDetailsIDType_1.TemplateHotelDetailsIDTypeToJSON)(value.templateHotelDetails),
    };
}
exports.CopyHotelDetailsTypeToJSON = CopyHotelDetailsTypeToJSON;
