/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This type definition of Telephone Category Type.
 * @export
 * @interface TelephoneCategoryType
 */
export interface TelephoneCategoryType {
    /**
     * 
     * @type {string}
     * @memberof TelephoneCategoryType
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneCategoryType
     */
    description?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TelephoneCategoryType
     */
    generic?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TelephoneCategoryType
     */
    hotelId?: string;
    /**
     * 
     * @type {number}
     * @memberof TelephoneCategoryType
     */
    orderBy?: number;
}

/**
 * Check if a given object implements the TelephoneCategoryType interface.
 */
export function instanceOfTelephoneCategoryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TelephoneCategoryTypeFromJSON(json: any): TelephoneCategoryType {
    return TelephoneCategoryTypeFromJSONTyped(json, false);
}

export function TelephoneCategoryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelephoneCategoryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'generic': !exists(json, 'generic') ? undefined : json['generic'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'orderBy': !exists(json, 'orderBy') ? undefined : json['orderBy'],
    };
}

export function TelephoneCategoryTypeToJSON(value?: TelephoneCategoryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'generic': value.generic,
        'hotelId': value.hotelId,
        'orderBy': value.orderBy,
    };
}

