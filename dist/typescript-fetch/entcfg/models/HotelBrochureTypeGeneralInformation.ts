/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { URLType } from './URLType';
import {
    URLTypeFromJSON,
    URLTypeFromJSONTyped,
    URLTypeToJSON,
} from './URLType';

/**
 * General Information of the hotel.
 * @export
 * @interface HotelBrochureTypeGeneralInformation
 */
export interface HotelBrochureTypeGeneralInformation {
    /**
     * 
     * @type {string}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    baseLanguage?: string;
    /**
     * The total number of beds in the Hotel.
     * @type {number}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    bedCount?: number;
    /**
     * The official check in time of the Hotel.
     * @type {string}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    checkInTime?: string;
    /**
     * The official check out time of the Hotel.
     * @type {string}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    checkOutTime?: string;
    /**
     * The total number of floors of the Hotel.
     * @type {number}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    floorCount?: number;
    /**
     * 
     * @type {URLType}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    hotelInfoWebsite?: URLType;
    /**
     * The type of the Hotel.
     * @type {string}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    hotelType?: string;
    /**
     * Latitude of the hotel.
     * @type {number}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    latitude?: number;
    /**
     * Longitude of the hotel.
     * @type {number}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    longitude?: number;
    /**
     * The total number of rooms in the Hotel.
     * @type {number}
     * @memberof HotelBrochureTypeGeneralInformation
     */
    roomCount?: number;
}

/**
 * Check if a given object implements the HotelBrochureTypeGeneralInformation interface.
 */
export function instanceOfHotelBrochureTypeGeneralInformation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelBrochureTypeGeneralInformationFromJSON(json: any): HotelBrochureTypeGeneralInformation {
    return HotelBrochureTypeGeneralInformationFromJSONTyped(json, false);
}

export function HotelBrochureTypeGeneralInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelBrochureTypeGeneralInformation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseLanguage': !exists(json, 'baseLanguage') ? undefined : json['baseLanguage'],
        'bedCount': !exists(json, 'bedCount') ? undefined : json['bedCount'],
        'checkInTime': !exists(json, 'checkInTime') ? undefined : json['checkInTime'],
        'checkOutTime': !exists(json, 'checkOutTime') ? undefined : json['checkOutTime'],
        'floorCount': !exists(json, 'floorCount') ? undefined : json['floorCount'],
        'hotelInfoWebsite': !exists(json, 'hotelInfoWebsite') ? undefined : URLTypeFromJSON(json['hotelInfoWebsite']),
        'hotelType': !exists(json, 'hotelType') ? undefined : json['hotelType'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'roomCount': !exists(json, 'roomCount') ? undefined : json['roomCount'],
    };
}

export function HotelBrochureTypeGeneralInformationToJSON(value?: HotelBrochureTypeGeneralInformation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'baseLanguage': value.baseLanguage,
        'bedCount': value.bedCount,
        'checkInTime': value.checkInTime,
        'checkOutTime': value.checkOutTime,
        'floorCount': value.floorCount,
        'hotelInfoWebsite': URLTypeToJSON(value.hotelInfoWebsite),
        'hotelType': value.hotelType,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'roomCount': value.roomCount,
    };
}

