"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StagedProfileTypeToJSON = exports.StagedProfileTypeFromJSONTyped = exports.StagedProfileTypeFromJSON = exports.instanceOfStagedProfileType = void 0;
const runtime_1 = require("../runtime");
const MailingActionsType_1 = require("./MailingActionsType");
const PrivacyInfoType_1 = require("./PrivacyInfoType");
const StagedProfileAddressType_1 = require("./StagedProfileAddressType");
const StagedProfileCommentInfoType_1 = require("./StagedProfileCommentInfoType");
const StagedProfileCompanyType_1 = require("./StagedProfileCompanyType");
const StagedProfileCustomerType_1 = require("./StagedProfileCustomerType");
const StagedProfileEmailType_1 = require("./StagedProfileEmailType");
const StagedProfileIdentificationsType_1 = require("./StagedProfileIdentificationsType");
const StagedProfileKeywordType_1 = require("./StagedProfileKeywordType");
const StagedProfileMembershipType_1 = require("./StagedProfileMembershipType");
const StagedProfileNegotiatedRateType_1 = require("./StagedProfileNegotiatedRateType");
const StagedProfilePhoneType_1 = require("./StagedProfilePhoneType");
const StagedProfilePreferenceType_1 = require("./StagedProfilePreferenceType");
const StagedProfileRoutingInstructionType_1 = require("./StagedProfileRoutingInstructionType");
const StagedProfileURLType_1 = require("./StagedProfileURLType");
const StagedProfileUserDefinedFieldsType_1 = require("./StagedProfileUserDefinedFieldsType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the StagedProfileType interface.
 */
function instanceOfStagedProfileType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStagedProfileType = instanceOfStagedProfileType;
function StagedProfileTypeFromJSON(json) {
    return StagedProfileTypeFromJSONTyped(json, false);
}
exports.StagedProfileTypeFromJSON = StagedProfileTypeFromJSON;
function StagedProfileTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'profileIdList': !(0, runtime_1.exists)(json, 'profileIdList') ? undefined : (json['profileIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'customer': !(0, runtime_1.exists)(json, 'customer') ? undefined : (0, StagedProfileCustomerType_1.StagedProfileCustomerTypeFromJSON)(json['customer']),
        'company': !(0, runtime_1.exists)(json, 'company') ? undefined : (0, StagedProfileCompanyType_1.StagedProfileCompanyTypeFromJSON)(json['company']),
        'addresses': !(0, runtime_1.exists)(json, 'addresses') ? undefined : (json['addresses'].map(StagedProfileAddressType_1.StagedProfileAddressTypeFromJSON)),
        'telephones': !(0, runtime_1.exists)(json, 'telephones') ? undefined : (json['telephones'].map(StagedProfilePhoneType_1.StagedProfilePhoneTypeFromJSON)),
        'emails': !(0, runtime_1.exists)(json, 'emails') ? undefined : (json['emails'].map(StagedProfileEmailType_1.StagedProfileEmailTypeFromJSON)),
        'uRLs': !(0, runtime_1.exists)(json, 'uRLs') ? undefined : (json['uRLs'].map(StagedProfileURLType_1.StagedProfileURLTypeFromJSON)),
        'memberships': !(0, runtime_1.exists)(json, 'memberships') ? undefined : (json['memberships'].map(StagedProfileMembershipType_1.StagedProfileMembershipTypeFromJSON)),
        'preferences': !(0, runtime_1.exists)(json, 'preferences') ? undefined : (json['preferences'].map(StagedProfilePreferenceType_1.StagedProfilePreferenceTypeFromJSON)),
        'keywords': !(0, runtime_1.exists)(json, 'keywords') ? undefined : (json['keywords'].map(StagedProfileKeywordType_1.StagedProfileKeywordTypeFromJSON)),
        'negotiatedRates': !(0, runtime_1.exists)(json, 'negotiatedRates') ? undefined : (json['negotiatedRates'].map(StagedProfileNegotiatedRateType_1.StagedProfileNegotiatedRateTypeFromJSON)),
        'identifications': !(0, runtime_1.exists)(json, 'identifications') ? undefined : (json['identifications'].map(StagedProfileIdentificationsType_1.StagedProfileIdentificationsTypeFromJSON)),
        'routingInstructions': !(0, runtime_1.exists)(json, 'routingInstructions') ? undefined : (json['routingInstructions'].map(StagedProfileRoutingInstructionType_1.StagedProfileRoutingInstructionTypeFromJSON)),
        'userDefinedFields': !(0, runtime_1.exists)(json, 'userDefinedFields') ? undefined : (0, StagedProfileUserDefinedFieldsType_1.StagedProfileUserDefinedFieldsTypeFromJSON)(json['userDefinedFields']),
        'mailingActions': !(0, runtime_1.exists)(json, 'mailingActions') ? undefined : (0, MailingActionsType_1.MailingActionsTypeFromJSON)(json['mailingActions']),
        'privacyInfo': !(0, runtime_1.exists)(json, 'privacyInfo') ? undefined : (0, PrivacyInfoType_1.PrivacyInfoTypeFromJSON)(json['privacyInfo']),
        'comments': !(0, runtime_1.exists)(json, 'comments') ? undefined : (json['comments'].map(StagedProfileCommentInfoType_1.StagedProfileCommentInfoTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'importDate': !(0, runtime_1.exists)(json, 'importDate') ? undefined : (new Date(json['importDate'])),
        'profileType': !(0, runtime_1.exists)(json, 'profileType') ? undefined : json['profileType'],
        'stageStatus': !(0, runtime_1.exists)(json, 'stageStatus') ? undefined : json['stageStatus'],
    };
}
exports.StagedProfileTypeFromJSONTyped = StagedProfileTypeFromJSONTyped;
function StagedProfileTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'profileIdList': value.profileIdList === undefined ? undefined : (value.profileIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'customer': (0, StagedProfileCustomerType_1.StagedProfileCustomerTypeToJSON)(value.customer),
        'company': (0, StagedProfileCompanyType_1.StagedProfileCompanyTypeToJSON)(value.company),
        'addresses': value.addresses === undefined ? undefined : (value.addresses.map(StagedProfileAddressType_1.StagedProfileAddressTypeToJSON)),
        'telephones': value.telephones === undefined ? undefined : (value.telephones.map(StagedProfilePhoneType_1.StagedProfilePhoneTypeToJSON)),
        'emails': value.emails === undefined ? undefined : (value.emails.map(StagedProfileEmailType_1.StagedProfileEmailTypeToJSON)),
        'uRLs': value.uRLs === undefined ? undefined : (value.uRLs.map(StagedProfileURLType_1.StagedProfileURLTypeToJSON)),
        'memberships': value.memberships === undefined ? undefined : (value.memberships.map(StagedProfileMembershipType_1.StagedProfileMembershipTypeToJSON)),
        'preferences': value.preferences === undefined ? undefined : (value.preferences.map(StagedProfilePreferenceType_1.StagedProfilePreferenceTypeToJSON)),
        'keywords': value.keywords === undefined ? undefined : (value.keywords.map(StagedProfileKeywordType_1.StagedProfileKeywordTypeToJSON)),
        'negotiatedRates': value.negotiatedRates === undefined ? undefined : (value.negotiatedRates.map(StagedProfileNegotiatedRateType_1.StagedProfileNegotiatedRateTypeToJSON)),
        'identifications': value.identifications === undefined ? undefined : (value.identifications.map(StagedProfileIdentificationsType_1.StagedProfileIdentificationsTypeToJSON)),
        'routingInstructions': value.routingInstructions === undefined ? undefined : (value.routingInstructions.map(StagedProfileRoutingInstructionType_1.StagedProfileRoutingInstructionTypeToJSON)),
        'userDefinedFields': (0, StagedProfileUserDefinedFieldsType_1.StagedProfileUserDefinedFieldsTypeToJSON)(value.userDefinedFields),
        'mailingActions': (0, MailingActionsType_1.MailingActionsTypeToJSON)(value.mailingActions),
        'privacyInfo': (0, PrivacyInfoType_1.PrivacyInfoTypeToJSON)(value.privacyInfo),
        'comments': value.comments === undefined ? undefined : (value.comments.map(StagedProfileCommentInfoType_1.StagedProfileCommentInfoTypeToJSON)),
        'hotelId': value.hotelId,
        'importDate': value.importDate === undefined ? undefined : (value.importDate.toISOString().substring(0, 10)),
        'profileType': value.profileType,
        'stageStatus': value.stageStatus,
    };
}
exports.StagedProfileTypeToJSON = StagedProfileTypeToJSON;
