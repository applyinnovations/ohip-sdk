"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileCommissionAccountCriteriaTypeToJSON = exports.ProfileCommissionAccountCriteriaTypeFromJSONTyped = exports.ProfileCommissionAccountCriteriaTypeFromJSON = exports.instanceOfProfileCommissionAccountCriteriaType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const ProfileId_1 = require("./ProfileId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ProfileCommissionAccountCriteriaType interface.
 */
function instanceOfProfileCommissionAccountCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileCommissionAccountCriteriaType = instanceOfProfileCommissionAccountCriteriaType;
function ProfileCommissionAccountCriteriaTypeFromJSON(json) {
    return ProfileCommissionAccountCriteriaTypeFromJSONTyped(json, false);
}
exports.ProfileCommissionAccountCriteriaTypeFromJSON = ProfileCommissionAccountCriteriaTypeFromJSON;
function ProfileCommissionAccountCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'bankAccountId': !(0, runtime_1.exists)(json, 'bankAccountId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['bankAccountId']),
        'commissionCode': !(0, runtime_1.exists)(json, 'commissionCode') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['commissionCode']),
        'validatePending': !(0, runtime_1.exists)(json, 'validatePending') ? undefined : json['validatePending'],
    };
}
exports.ProfileCommissionAccountCriteriaTypeFromJSONTyped = ProfileCommissionAccountCriteriaTypeFromJSONTyped;
function ProfileCommissionAccountCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'bankAccountId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.bankAccountId),
        'commissionCode': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.commissionCode),
        'validatePending': value.validatePending,
    };
}
exports.ProfileCommissionAccountCriteriaTypeToJSON = ProfileCommissionAccountCriteriaTypeToJSON;
