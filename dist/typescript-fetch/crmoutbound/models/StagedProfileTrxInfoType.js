"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StagedProfileTrxInfoTypeToJSON = exports.StagedProfileTrxInfoTypeFromJSONTyped = exports.StagedProfileTrxInfoTypeFromJSON = exports.instanceOfStagedProfileTrxInfoType = void 0;
const runtime_1 = require("../runtime");
const StagedProfileTrxInfoTypeArticles_1 = require("./StagedProfileTrxInfoTypeArticles");
/**
 * Check if a given object implements the StagedProfileTrxInfoType interface.
 */
function instanceOfStagedProfileTrxInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStagedProfileTrxInfoType = instanceOfStagedProfileTrxInfoType;
function StagedProfileTrxInfoTypeFromJSON(json) {
    return StagedProfileTrxInfoTypeFromJSONTyped(json, false);
}
exports.StagedProfileTrxInfoTypeFromJSON = StagedProfileTrxInfoTypeFromJSON;
function StagedProfileTrxInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'trxGroup': !(0, runtime_1.exists)(json, 'trxGroup') ? undefined : json['trxGroup'],
        'trxSubGroup': !(0, runtime_1.exists)(json, 'trxSubGroup') ? undefined : json['trxSubGroup'],
        'universalProductCode': !(0, runtime_1.exists)(json, 'universalProductCode') ? undefined : json['universalProductCode'],
        'routingInstructionsId': !(0, runtime_1.exists)(json, 'routingInstructionsId') ? undefined : json['routingInstructionsId'],
        'articles': !(0, runtime_1.exists)(json, 'articles') ? undefined : (0, StagedProfileTrxInfoTypeArticles_1.StagedProfileTrxInfoTypeArticlesFromJSON)(json['articles']),
        'trxCode': !(0, runtime_1.exists)(json, 'trxCode') ? undefined : json['trxCode'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'printTrxReceipt': !(0, runtime_1.exists)(json, 'printTrxReceipt') ? undefined : json['printTrxReceipt'],
        'errorDescription': !(0, runtime_1.exists)(json, 'errorDescription') ? undefined : json['errorDescription'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.StagedProfileTrxInfoTypeFromJSONTyped = StagedProfileTrxInfoTypeFromJSONTyped;
function StagedProfileTrxInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'trxGroup': value.trxGroup,
        'trxSubGroup': value.trxSubGroup,
        'universalProductCode': value.universalProductCode,
        'routingInstructionsId': value.routingInstructionsId,
        'articles': (0, StagedProfileTrxInfoTypeArticles_1.StagedProfileTrxInfoTypeArticlesToJSON)(value.articles),
        'trxCode': value.trxCode,
        'hotelId': value.hotelId,
        'printTrxReceipt': value.printTrxReceipt,
        'errorDescription': value.errorDescription,
        'id': value.id,
        'type': value.type,
    };
}
exports.StagedProfileTrxInfoTypeToJSON = StagedProfileTrxInfoTypeToJSON;
