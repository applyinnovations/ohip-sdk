"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MembershipClaimDetailsTypeToJSON = exports.MembershipClaimDetailsTypeFromJSONTyped = exports.MembershipClaimDetailsTypeFromJSON = exports.instanceOfMembershipClaimDetailsType = void 0;
const runtime_1 = require("../runtime");
const ClaimActivityLogType_1 = require("./ClaimActivityLogType");
const ClaimAdjustmentPointsType_1 = require("./ClaimAdjustmentPointsType");
const ClaimApprovalStatusType_1 = require("./ClaimApprovalStatusType");
const ClaimMembershipType_1 = require("./ClaimMembershipType");
const ClaimRecordType_1 = require("./ClaimRecordType");
const ClaimReservationInfoType_1 = require("./ClaimReservationInfoType");
const ClaimSourceType_1 = require("./ClaimSourceType");
const ProfileId_1 = require("./ProfileId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the MembershipClaimDetailsType interface.
 */
function instanceOfMembershipClaimDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMembershipClaimDetailsType = instanceOfMembershipClaimDetailsType;
function MembershipClaimDetailsTypeFromJSON(json) {
    return MembershipClaimDetailsTypeFromJSONTyped(json, false);
}
exports.MembershipClaimDetailsTypeFromJSON = MembershipClaimDetailsTypeFromJSON;
function MembershipClaimDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'claimNo': !(0, runtime_1.exists)(json, 'claimNo') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['claimNo']),
        'claimDate': !(0, runtime_1.exists)(json, 'claimDate') ? undefined : (new Date(json['claimDate'])),
        'closeDate': !(0, runtime_1.exists)(json, 'closeDate') ? undefined : (new Date(json['closeDate'])),
        'source': !(0, runtime_1.exists)(json, 'source') ? undefined : (0, ClaimSourceType_1.ClaimSourceTypeFromJSON)(json['source']),
        'callerName': !(0, runtime_1.exists)(json, 'callerName') ? undefined : json['callerName'],
        'owner': !(0, runtime_1.exists)(json, 'owner') ? undefined : json['owner'],
        'claimStatus': !(0, runtime_1.exists)(json, 'claimStatus') ? undefined : json['claimStatus'],
        'claimType': !(0, runtime_1.exists)(json, 'claimType') ? undefined : json['claimType'],
        'origin': !(0, runtime_1.exists)(json, 'origin') ? undefined : json['origin'],
        'callerInformation': !(0, runtime_1.exists)(json, 'callerInformation') ? undefined : json['callerInformation'],
        'replyBy': !(0, runtime_1.exists)(json, 'replyBy') ? undefined : (new Date(json['replyBy'])),
        'comments': !(0, runtime_1.exists)(json, 'comments') ? undefined : json['comments'],
        'approvalStatus': !(0, runtime_1.exists)(json, 'approvalStatus') ? undefined : (0, ClaimApprovalStatusType_1.ClaimApprovalStatusTypeFromJSON)(json['approvalStatus']),
        'recordType': !(0, runtime_1.exists)(json, 'recordType') ? undefined : (0, ClaimRecordType_1.ClaimRecordTypeFromJSON)(json['recordType']),
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'membership': !(0, runtime_1.exists)(json, 'membership') ? undefined : (0, ClaimMembershipType_1.ClaimMembershipTypeFromJSON)(json['membership']),
        'reservation': !(0, runtime_1.exists)(json, 'reservation') ? undefined : (0, ClaimReservationInfoType_1.ClaimReservationInfoTypeFromJSON)(json['reservation']),
        'claimPoints': !(0, runtime_1.exists)(json, 'claimPoints') ? undefined : (0, ClaimAdjustmentPointsType_1.ClaimAdjustmentPointsTypeFromJSON)(json['claimPoints']),
        'activityLog': !(0, runtime_1.exists)(json, 'activityLog') ? undefined : (json['activityLog'].map(ClaimActivityLogType_1.ClaimActivityLogTypeFromJSON)),
        'submitter': !(0, runtime_1.exists)(json, 'submitter') ? undefined : json['submitter'],
    };
}
exports.MembershipClaimDetailsTypeFromJSONTyped = MembershipClaimDetailsTypeFromJSONTyped;
function MembershipClaimDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'claimNo': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.claimNo),
        'claimDate': value.claimDate === undefined ? undefined : (value.claimDate.toISOString().substring(0, 10)),
        'closeDate': value.closeDate === undefined ? undefined : (value.closeDate.toISOString().substring(0, 10)),
        'source': (0, ClaimSourceType_1.ClaimSourceTypeToJSON)(value.source),
        'callerName': value.callerName,
        'owner': value.owner,
        'claimStatus': value.claimStatus,
        'claimType': value.claimType,
        'origin': value.origin,
        'callerInformation': value.callerInformation,
        'replyBy': value.replyBy === undefined ? undefined : (value.replyBy.toISOString().substring(0, 10)),
        'comments': value.comments,
        'approvalStatus': (0, ClaimApprovalStatusType_1.ClaimApprovalStatusTypeToJSON)(value.approvalStatus),
        'recordType': (0, ClaimRecordType_1.ClaimRecordTypeToJSON)(value.recordType),
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'membership': (0, ClaimMembershipType_1.ClaimMembershipTypeToJSON)(value.membership),
        'reservation': (0, ClaimReservationInfoType_1.ClaimReservationInfoTypeToJSON)(value.reservation),
        'claimPoints': (0, ClaimAdjustmentPointsType_1.ClaimAdjustmentPointsTypeToJSON)(value.claimPoints),
        'activityLog': value.activityLog === undefined ? undefined : (value.activityLog.map(ClaimActivityLogType_1.ClaimActivityLogTypeToJSON)),
        'submitter': value.submitter,
    };
}
exports.MembershipClaimDetailsTypeToJSON = MembershipClaimDetailsTypeToJSON;
