/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipDetailsType } from './MembershipDetailsType';
import {
    MembershipDetailsTypeFromJSON,
    MembershipDetailsTypeFromJSONTyped,
    MembershipDetailsTypeToJSON,
} from './MembershipDetailsType';
import type { MembershipTransactionDetailsType } from './MembershipTransactionDetailsType';
import {
    MembershipTransactionDetailsTypeFromJSON,
    MembershipTransactionDetailsTypeFromJSONTyped,
    MembershipTransactionDetailsTypeToJSON,
} from './MembershipTransactionDetailsType';

/**
 * Detailed transaction information related to a membership.
 * @export
 * @interface MembershipTransactionType
 */
export interface MembershipTransactionType {
    /**
     * 
     * @type {MembershipDetailsType}
     * @memberof MembershipTransactionType
     */
    membershipDetails?: MembershipDetailsType;
    /**
     * 
     * @type {MembershipTransactionDetailsType}
     * @memberof MembershipTransactionType
     */
    membershipTransactionDetails?: MembershipTransactionDetailsType;
}

/**
 * Check if a given object implements the MembershipTransactionType interface.
 */
export function instanceOfMembershipTransactionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipTransactionTypeFromJSON(json: any): MembershipTransactionType {
    return MembershipTransactionTypeFromJSONTyped(json, false);
}

export function MembershipTransactionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipTransactionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'membershipDetails': !exists(json, 'membershipDetails') ? undefined : MembershipDetailsTypeFromJSON(json['membershipDetails']),
        'membershipTransactionDetails': !exists(json, 'membershipTransactionDetails') ? undefined : MembershipTransactionDetailsTypeFromJSON(json['membershipTransactionDetails']),
    };
}

export function MembershipTransactionTypeToJSON(value?: MembershipTransactionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'membershipDetails': MembershipDetailsTypeToJSON(value.membershipDetails),
        'membershipTransactionDetails': MembershipTransactionDetailsTypeToJSON(value.membershipTransactionDetails),
    };
}

