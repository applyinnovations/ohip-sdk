"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BillingPrivilegesTypeToJSON = exports.BillingPrivilegesTypeFromJSONTyped = exports.BillingPrivilegesTypeFromJSON = exports.instanceOfBillingPrivilegesType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the BillingPrivilegesType interface.
 */
function instanceOfBillingPrivilegesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBillingPrivilegesType = instanceOfBillingPrivilegesType;
function BillingPrivilegesTypeFromJSON(json) {
    return BillingPrivilegesTypeFromJSONTyped(json, false);
}
exports.BillingPrivilegesTypeFromJSON = BillingPrivilegesTypeFromJSON;
function BillingPrivilegesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'postingRestriction': !(0, runtime_1.exists)(json, 'postingRestriction') ? undefined : json['postingRestriction'],
        'preStayCharging': !(0, runtime_1.exists)(json, 'preStayCharging') ? undefined : json['preStayCharging'],
        'postStayCharging': !(0, runtime_1.exists)(json, 'postStayCharging') ? undefined : json['postStayCharging'],
        'folioCloseDate': !(0, runtime_1.exists)(json, 'folioCloseDate') ? undefined : (new Date(json['folioCloseDate'])),
        'scheduledCheckout': !(0, runtime_1.exists)(json, 'scheduledCheckout') ? undefined : json['scheduledCheckout'],
        'scheduledCheckoutTime': !(0, runtime_1.exists)(json, 'scheduledCheckoutTime') ? undefined : (new Date(json['scheduledCheckoutTime'])),
        'directBillAuthorized': !(0, runtime_1.exists)(json, 'directBillAuthorized') ? undefined : json['directBillAuthorized'],
        'videoCheckout': !(0, runtime_1.exists)(json, 'videoCheckout') ? undefined : json['videoCheckout'],
        'allowAutoCheckin': !(0, runtime_1.exists)(json, 'allowAutoCheckin') ? undefined : json['allowAutoCheckin'],
        'autoSettlement': !(0, runtime_1.exists)(json, 'autoSettlement') ? undefined : json['autoSettlement'],
        'autoSettlementType': !(0, runtime_1.exists)(json, 'autoSettlementType') ? undefined : json['autoSettlementType'],
        'autoSettlementFreq': !(0, runtime_1.exists)(json, 'autoSettlementFreq') ? undefined : json['autoSettlementFreq'],
        'creditLimitAutoPay': !(0, runtime_1.exists)(json, 'creditLimitAutoPay') ? undefined : json['creditLimitAutoPay'],
    };
}
exports.BillingPrivilegesTypeFromJSONTyped = BillingPrivilegesTypeFromJSONTyped;
function BillingPrivilegesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'postingRestriction': value.postingRestriction,
        'preStayCharging': value.preStayCharging,
        'postStayCharging': value.postStayCharging,
        'folioCloseDate': value.folioCloseDate === undefined ? undefined : (value.folioCloseDate.toISOString().substring(0, 10)),
        'scheduledCheckout': value.scheduledCheckout,
        'scheduledCheckoutTime': value.scheduledCheckoutTime === undefined ? undefined : (value.scheduledCheckoutTime.toISOString().substring(0, 10)),
        'directBillAuthorized': value.directBillAuthorized,
        'videoCheckout': value.videoCheckout,
        'allowAutoCheckin': value.allowAutoCheckin,
        'autoSettlement': value.autoSettlement,
        'autoSettlementType': value.autoSettlementType,
        'autoSettlementFreq': value.autoSettlementFreq,
        'creditLimitAutoPay': value.creditLimitAutoPay,
    };
}
exports.BillingPrivilegesTypeToJSON = BillingPrivilegesTypeToJSON;
