"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StagedProfileCommentInfoTypeToJSON = exports.StagedProfileCommentInfoTypeFromJSONTyped = exports.StagedProfileCommentInfoTypeFromJSON = exports.instanceOfStagedProfileCommentInfoType = void 0;
const runtime_1 = require("../runtime");
const CommentType_1 = require("./CommentType");
/**
 * Check if a given object implements the StagedProfileCommentInfoType interface.
 */
function instanceOfStagedProfileCommentInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStagedProfileCommentInfoType = instanceOfStagedProfileCommentInfoType;
function StagedProfileCommentInfoTypeFromJSON(json) {
    return StagedProfileCommentInfoTypeFromJSONTyped(json, false);
}
exports.StagedProfileCommentInfoTypeFromJSON = StagedProfileCommentInfoTypeFromJSON;
function StagedProfileCommentInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'comment': !(0, runtime_1.exists)(json, 'comment') ? undefined : (0, CommentType_1.CommentTypeFromJSON)(json['comment']),
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lineNo': !(0, runtime_1.exists)(json, 'lineNo') ? undefined : json['lineNo'],
        'inActiveDate': !(0, runtime_1.exists)(json, 'inActiveDate') ? undefined : (new Date(json['inActiveDate'])),
        'errorDescription': !(0, runtime_1.exists)(json, 'errorDescription') ? undefined : json['errorDescription'],
        'valid': !(0, runtime_1.exists)(json, 'valid') ? undefined : json['valid'],
        'allRowsFetched': !(0, runtime_1.exists)(json, 'allRowsFetched') ? undefined : json['allRowsFetched'],
        'totalRows': !(0, runtime_1.exists)(json, 'totalRows') ? undefined : json['totalRows'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.StagedProfileCommentInfoTypeFromJSONTyped = StagedProfileCommentInfoTypeFromJSONTyped;
function StagedProfileCommentInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'comment': (0, CommentType_1.CommentTypeToJSON)(value.comment),
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'lineNo': value.lineNo,
        'inActiveDate': value.inActiveDate === undefined ? undefined : (value.inActiveDate.toISOString().substr(0, 10)),
        'errorDescription': value.errorDescription,
        'valid': value.valid,
        'allRowsFetched': value.allRowsFetched,
        'totalRows': value.totalRows,
        'id': value.id,
        'type': value.type,
    };
}
exports.StagedProfileCommentInfoTypeToJSON = StagedProfileCommentInfoTypeToJSON;
