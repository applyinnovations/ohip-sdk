"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimMembershipTypeToJSON = exports.ClaimMembershipTypeFromJSONTyped = exports.ClaimMembershipTypeFromJSON = exports.instanceOfClaimMembershipType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ClaimMembershipType interface.
 */
function instanceOfClaimMembershipType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfClaimMembershipType = instanceOfClaimMembershipType;
function ClaimMembershipTypeFromJSON(json) {
    return ClaimMembershipTypeFromJSONTyped(json, false);
}
exports.ClaimMembershipTypeFromJSON = ClaimMembershipTypeFromJSON;
function ClaimMembershipTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'nameOnCard': !(0, runtime_1.exists)(json, 'nameOnCard') ? undefined : json['nameOnCard'],
        'membershipClass': !(0, runtime_1.exists)(json, 'membershipClass') ? undefined : json['membershipClass'],
        'membershipId': !(0, runtime_1.exists)(json, 'membershipId') ? undefined : json['membershipId'],
        'membershipIdNo': !(0, runtime_1.exists)(json, 'membershipIdNo') ? undefined : json['membershipIdNo'],
        'membershipType': !(0, runtime_1.exists)(json, 'membershipType') ? undefined : json['membershipType'],
        'membershipLevel': !(0, runtime_1.exists)(json, 'membershipLevel') ? undefined : json['membershipLevel'],
        'effectiveDate': !(0, runtime_1.exists)(json, 'effectiveDate') ? undefined : json['effectiveDate'],
        'expireDate': !(0, runtime_1.exists)(json, 'expireDate') ? undefined : json['expireDate'],
        'expireDateExclusiveIndicator': !(0, runtime_1.exists)(json, 'expireDateExclusiveIndicator') ? undefined : json['expireDateExclusiveIndicator'],
    };
}
exports.ClaimMembershipTypeFromJSONTyped = ClaimMembershipTypeFromJSONTyped;
function ClaimMembershipTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'nameOnCard': value.nameOnCard,
        'membershipClass': value.membershipClass,
        'membershipId': value.membershipId,
        'membershipIdNo': value.membershipIdNo,
        'membershipType': value.membershipType,
        'membershipLevel': value.membershipLevel,
        'effectiveDate': value.effectiveDate,
        'expireDate': value.expireDate,
        'expireDateExclusiveIndicator': value.expireDateExclusiveIndicator,
    };
}
exports.ClaimMembershipTypeToJSON = ClaimMembershipTypeToJSON;
