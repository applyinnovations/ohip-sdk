/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CustomerType } from './CustomerType';
import type { GuestProfileTypeAddresses } from './GuestProfileTypeAddresses';
import type { ProfileEnrollmentTypeProfileMemberships } from './ProfileEnrollmentTypeProfileMemberships';
import type { ProfileEnrollmentTypeUrls } from './ProfileEnrollmentTypeUrls';
import type { ProfileStatusType } from './ProfileStatusType';
import type { ProfileTypeKeywords } from './ProfileTypeKeywords';
import type { ProfileTypeType } from './ProfileTypeType';
import type { ResCommunicationTypeEmails } from './ResCommunicationTypeEmails';
import type { ResCommunicationTypeTelephones } from './ResCommunicationTypeTelephones';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface ProfileEnrollmentType
 */
export interface ProfileEnrollmentType {
    /**
     *
     * @type {CustomerType}
     * @memberof ProfileEnrollmentType
     */
    customer?: CustomerType;
    /**
     *
     * @type {GuestProfileTypeAddresses}
     * @memberof ProfileEnrollmentType
     */
    addresses?: GuestProfileTypeAddresses;
    /**
     *
     * @type {ResCommunicationTypeTelephones}
     * @memberof ProfileEnrollmentType
     */
    telephones?: ResCommunicationTypeTelephones;
    /**
     *
     * @type {ResCommunicationTypeEmails}
     * @memberof ProfileEnrollmentType
     */
    emails?: ResCommunicationTypeEmails;
    /**
     *
     * @type {ProfileEnrollmentTypeUrls}
     * @memberof ProfileEnrollmentType
     */
    urls?: ProfileEnrollmentTypeUrls;
    /**
     *
     * @type {ProfileEnrollmentTypeProfileMemberships}
     * @memberof ProfileEnrollmentType
     */
    profileMemberships?: ProfileEnrollmentTypeProfileMemberships;
    /**
     *
     * @type {ProfileTypeKeywords}
     * @memberof ProfileEnrollmentType
     */
    keywords?: ProfileTypeKeywords;
    /**
     *
     * @type {ProfileTypeType}
     * @memberof ProfileEnrollmentType
     */
    profileType?: ProfileTypeType;
    /**
     *
     * @type {ProfileStatusType}
     * @memberof ProfileEnrollmentType
     */
    statusCode?: ProfileStatusType;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    registeredProperty?: string;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    requestForHotel?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    lastModifierId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ProfileEnrollmentType
     */
    profileId?: UniqueIDType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ProfileEnrollmentType
     */
    reservationId?: UniqueIDType;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof ProfileEnrollmentType
     */
    enrollmentCode?: CodeDescriptionType;
    /**
     * Enrollment details will be fetched from this External database.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    externalDatabaseID?: string;
    /**
     * Hotel Code, It is used to filter hotel specific children to this specific hotel code.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    hotelId?: string;
    /**
     * UserID/LoginID of the user who is enrolling the Guest.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    userId?: string;
    /**
     * EmployeeID of the user who is enrolling the Guest.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    employeeId?: string;
}
/**
 * Check if a given object implements the ProfileEnrollmentType interface.
 */
export declare function instanceOfProfileEnrollmentType(value: object): boolean;
export declare function ProfileEnrollmentTypeFromJSON(json: any): ProfileEnrollmentType;
export declare function ProfileEnrollmentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileEnrollmentType;
export declare function ProfileEnrollmentTypeToJSON(value?: ProfileEnrollmentType | null): any;
