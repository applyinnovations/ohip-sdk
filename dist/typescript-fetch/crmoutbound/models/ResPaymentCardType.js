"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResPaymentCardTypeToJSON = exports.ResPaymentCardTypeFromJSONTyped = exports.ResPaymentCardTypeFromJSON = exports.instanceOfResPaymentCardType = void 0;
const runtime_1 = require("../runtime");
const CardNumberTypeType_1 = require("./CardNumberTypeType");
const CardProcessingType_1 = require("./CardProcessingType");
const CardTypeType_1 = require("./CardTypeType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ResPaymentCardType interface.
 */
function instanceOfResPaymentCardType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResPaymentCardType = instanceOfResPaymentCardType;
function ResPaymentCardTypeFromJSON(json) {
    return ResPaymentCardTypeFromJSONTyped(json, false);
}
exports.ResPaymentCardTypeFromJSON = ResPaymentCardTypeFromJSON;
function ResPaymentCardTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cardId': !(0, runtime_1.exists)(json, 'cardId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['cardId']),
        'currentAuthorizedAmount': !(0, runtime_1.exists)(json, 'currentAuthorizedAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['currentAuthorizedAmount']),
        'approvalAmountNeeded': !(0, runtime_1.exists)(json, 'approvalAmountNeeded') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['approvalAmountNeeded']),
        'cardType': !(0, runtime_1.exists)(json, 'cardType') ? undefined : (0, CardTypeType_1.CardTypeTypeFromJSON)(json['cardType']),
        'userDefinedCardType': !(0, runtime_1.exists)(json, 'userDefinedCardType') ? undefined : json['userDefinedCardType'],
        'cardNumber': !(0, runtime_1.exists)(json, 'cardNumber') ? undefined : json['cardNumber'],
        'cardNumberMasked': !(0, runtime_1.exists)(json, 'cardNumberMasked') ? undefined : json['cardNumberMasked'],
        'cardNumberLast4Digits': !(0, runtime_1.exists)(json, 'cardNumberLast4Digits') ? undefined : json['cardNumberLast4Digits'],
        'expirationDate': !(0, runtime_1.exists)(json, 'expirationDate') ? undefined : (new Date(json['expirationDate'])),
        'expirationDateMasked': !(0, runtime_1.exists)(json, 'expirationDateMasked') ? undefined : json['expirationDateMasked'],
        'expirationDateExpired': !(0, runtime_1.exists)(json, 'expirationDateExpired') ? undefined : json['expirationDateExpired'],
        'cardHolderName': !(0, runtime_1.exists)(json, 'cardHolderName') ? undefined : json['cardHolderName'],
        'attachCreditCardToProfile': !(0, runtime_1.exists)(json, 'attachCreditCardToProfile') ? undefined : json['attachCreditCardToProfile'],
        'processing': !(0, runtime_1.exists)(json, 'processing') ? undefined : (0, CardProcessingType_1.CardProcessingTypeFromJSON)(json['processing']),
        'swiped': !(0, runtime_1.exists)(json, 'swiped') ? undefined : json['swiped'],
        'cardNumberType': !(0, runtime_1.exists)(json, 'cardNumberType') ? undefined : (0, CardNumberTypeType_1.CardNumberTypeTypeFromJSON)(json['cardNumberType']),
    };
}
exports.ResPaymentCardTypeFromJSONTyped = ResPaymentCardTypeFromJSONTyped;
function ResPaymentCardTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cardId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.cardId),
        'currentAuthorizedAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.currentAuthorizedAmount),
        'approvalAmountNeeded': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.approvalAmountNeeded),
        'cardType': (0, CardTypeType_1.CardTypeTypeToJSON)(value.cardType),
        'userDefinedCardType': value.userDefinedCardType,
        'cardNumber': value.cardNumber,
        'cardNumberMasked': value.cardNumberMasked,
        'cardNumberLast4Digits': value.cardNumberLast4Digits,
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate.toISOString().substring(0, 10)),
        'expirationDateMasked': value.expirationDateMasked,
        'expirationDateExpired': value.expirationDateExpired,
        'cardHolderName': value.cardHolderName,
        'attachCreditCardToProfile': value.attachCreditCardToProfile,
        'processing': (0, CardProcessingType_1.CardProcessingTypeToJSON)(value.processing),
        'swiped': value.swiped,
        'cardNumberType': (0, CardNumberTypeType_1.CardNumberTypeTypeToJSON)(value.cardNumberType),
    };
}
exports.ResPaymentCardTypeToJSON = ResPaymentCardTypeToJSON;
