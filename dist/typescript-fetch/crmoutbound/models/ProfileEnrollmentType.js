"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileEnrollmentTypeToJSON = exports.ProfileEnrollmentTypeFromJSONTyped = exports.ProfileEnrollmentTypeFromJSON = exports.instanceOfProfileEnrollmentType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const CustomerType_1 = require("./CustomerType");
const GuestProfileTypeAddresses_1 = require("./GuestProfileTypeAddresses");
const ProfileEnrollmentTypeProfileMemberships_1 = require("./ProfileEnrollmentTypeProfileMemberships");
const ProfileEnrollmentTypeUrls_1 = require("./ProfileEnrollmentTypeUrls");
const ProfileStatusType_1 = require("./ProfileStatusType");
const ProfileTypeKeywords_1 = require("./ProfileTypeKeywords");
const ProfileTypeType_1 = require("./ProfileTypeType");
const ResCommunicationTypeEmails_1 = require("./ResCommunicationTypeEmails");
const ResCommunicationTypeTelephones_1 = require("./ResCommunicationTypeTelephones");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ProfileEnrollmentType interface.
 */
function instanceOfProfileEnrollmentType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileEnrollmentType = instanceOfProfileEnrollmentType;
function ProfileEnrollmentTypeFromJSON(json) {
    return ProfileEnrollmentTypeFromJSONTyped(json, false);
}
exports.ProfileEnrollmentTypeFromJSON = ProfileEnrollmentTypeFromJSON;
function ProfileEnrollmentTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'customer': !(0, runtime_1.exists)(json, 'customer') ? undefined : (0, CustomerType_1.CustomerTypeFromJSON)(json['customer']),
        'addresses': !(0, runtime_1.exists)(json, 'addresses') ? undefined : (0, GuestProfileTypeAddresses_1.GuestProfileTypeAddressesFromJSON)(json['addresses']),
        'telephones': !(0, runtime_1.exists)(json, 'telephones') ? undefined : (0, ResCommunicationTypeTelephones_1.ResCommunicationTypeTelephonesFromJSON)(json['telephones']),
        'emails': !(0, runtime_1.exists)(json, 'emails') ? undefined : (0, ResCommunicationTypeEmails_1.ResCommunicationTypeEmailsFromJSON)(json['emails']),
        'urls': !(0, runtime_1.exists)(json, 'urls') ? undefined : (0, ProfileEnrollmentTypeUrls_1.ProfileEnrollmentTypeUrlsFromJSON)(json['urls']),
        'profileMemberships': !(0, runtime_1.exists)(json, 'profileMemberships') ? undefined : (0, ProfileEnrollmentTypeProfileMemberships_1.ProfileEnrollmentTypeProfileMembershipsFromJSON)(json['profileMemberships']),
        'keywords': !(0, runtime_1.exists)(json, 'keywords') ? undefined : (0, ProfileTypeKeywords_1.ProfileTypeKeywordsFromJSON)(json['keywords']),
        'profileType': !(0, runtime_1.exists)(json, 'profileType') ? undefined : (0, ProfileTypeType_1.ProfileTypeTypeFromJSON)(json['profileType']),
        'statusCode': !(0, runtime_1.exists)(json, 'statusCode') ? undefined : (0, ProfileStatusType_1.ProfileStatusTypeFromJSON)(json['statusCode']),
        'registeredProperty': !(0, runtime_1.exists)(json, 'registeredProperty') ? undefined : json['registeredProperty'],
        'requestForHotel': !(0, runtime_1.exists)(json, 'requestForHotel') ? undefined : json['requestForHotel'],
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['profileId']),
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationId']),
        'enrollmentCode': !(0, runtime_1.exists)(json, 'enrollmentCode') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['enrollmentCode']),
        'externalDatabaseID': !(0, runtime_1.exists)(json, 'externalDatabaseID') ? undefined : json['externalDatabaseID'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'userId': !(0, runtime_1.exists)(json, 'userId') ? undefined : json['userId'],
        'employeeId': !(0, runtime_1.exists)(json, 'employeeId') ? undefined : json['employeeId'],
    };
}
exports.ProfileEnrollmentTypeFromJSONTyped = ProfileEnrollmentTypeFromJSONTyped;
function ProfileEnrollmentTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'customer': (0, CustomerType_1.CustomerTypeToJSON)(value.customer),
        'addresses': (0, GuestProfileTypeAddresses_1.GuestProfileTypeAddressesToJSON)(value.addresses),
        'telephones': (0, ResCommunicationTypeTelephones_1.ResCommunicationTypeTelephonesToJSON)(value.telephones),
        'emails': (0, ResCommunicationTypeEmails_1.ResCommunicationTypeEmailsToJSON)(value.emails),
        'urls': (0, ProfileEnrollmentTypeUrls_1.ProfileEnrollmentTypeUrlsToJSON)(value.urls),
        'profileMemberships': (0, ProfileEnrollmentTypeProfileMemberships_1.ProfileEnrollmentTypeProfileMembershipsToJSON)(value.profileMemberships),
        'keywords': (0, ProfileTypeKeywords_1.ProfileTypeKeywordsToJSON)(value.keywords),
        'profileType': (0, ProfileTypeType_1.ProfileTypeTypeToJSON)(value.profileType),
        'statusCode': (0, ProfileStatusType_1.ProfileStatusTypeToJSON)(value.statusCode),
        'registeredProperty': value.registeredProperty,
        'requestForHotel': value.requestForHotel,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'profileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.profileId),
        'reservationId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationId),
        'enrollmentCode': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.enrollmentCode),
        'externalDatabaseID': value.externalDatabaseID,
        'hotelId': value.hotelId,
        'userId': value.userId,
        'employeeId': value.employeeId,
    };
}
exports.ProfileEnrollmentTypeToJSON = ProfileEnrollmentTypeToJSON;
