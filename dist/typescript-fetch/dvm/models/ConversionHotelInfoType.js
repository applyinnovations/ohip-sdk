"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud DataValueMapping Service API
 * APIs which offer external systems to config and use values different than what are configured in opera<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionHotelInfoTypeToJSON = exports.ConversionHotelInfoTypeFromJSONTyped = exports.ConversionHotelInfoTypeFromJSON = exports.instanceOfConversionHotelInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ConversionHotelInfoType interface.
 */
function instanceOfConversionHotelInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConversionHotelInfoType = instanceOfConversionHotelInfoType;
function ConversionHotelInfoTypeFromJSON(json) {
    return ConversionHotelInfoTypeFromJSONTyped(json, false);
}
exports.ConversionHotelInfoTypeFromJSON = ConversionHotelInfoTypeFromJSON;
function ConversionHotelInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'externalHotelCode': !(0, runtime_1.exists)(json, 'externalHotelCode') ? undefined : json['externalHotelCode'],
        'operaHotelCode': !(0, runtime_1.exists)(json, 'operaHotelCode') ? undefined : json['operaHotelCode'],
    };
}
exports.ConversionHotelInfoTypeFromJSONTyped = ConversionHotelInfoTypeFromJSONTyped;
function ConversionHotelInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'externalHotelCode': value.externalHotelCode,
        'operaHotelCode': value.operaHotelCode,
    };
}
exports.ConversionHotelInfoTypeToJSON = ConversionHotelInfoTypeToJSON;
