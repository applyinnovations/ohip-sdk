/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ProfileId } from './ProfileId';
import type { ProfileSubscriptionTypeProfileInfo } from './ProfileSubscriptionTypeProfileInfo';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system
 * @export
 * @interface ProfileSubscriptionType
 */
export interface ProfileSubscriptionType {
    /**
     * Indicates if the profile was distributed to the external system.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    distributed?: boolean;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ProfileSubscriptionType
     */
    externalProfileId?: UniqueIDType;
    /**
     * Indicates if the profile information should be overwritten by the external system.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    force?: boolean;
    /**
     * Indicates whether this subscription is active or inactive.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    inactive?: boolean;
    /**
     * Timestamp of the most recent distribution of this profile to the external system.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    lastDistributionDate?: string;
    /**
     * Timestamp of the most recent update of the subscription information by the external system.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    lastExternalUpdateDate?: string;
    /**
     *
     * @type {ProfileId}
     * @memberof ProfileSubscriptionType
     */
    profileId?: ProfileId;
    /**
     *
     * @type {ProfileSubscriptionTypeProfileInfo}
     * @memberof ProfileSubscriptionType
     */
    profileInfo?: ProfileSubscriptionTypeProfileInfo;
    /**
     * Timestamp when the profile was subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    subscriptionDate?: string;
    /**
     * Code of system where profile is subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    systemCode?: string;
    /**
     * Type of system where profile is subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    systemType?: string;
}
/**
 * Check if a given object implements the ProfileSubscriptionType interface.
 */
export declare function instanceOfProfileSubscriptionType(value: object): boolean;
export declare function ProfileSubscriptionTypeFromJSON(json: any): ProfileSubscriptionType;
export declare function ProfileSubscriptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileSubscriptionType;
export declare function ProfileSubscriptionTypeToJSON(value?: ProfileSubscriptionType | null): any;
