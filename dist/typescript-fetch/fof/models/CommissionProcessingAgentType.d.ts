/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CommissionProcessingInstructionsType } from './CommissionProcessingInstructionsType';
import type { CommissionProcessingReservationType } from './CommissionProcessingReservationType';
/**
 * An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).
 * @export
 * @interface CommissionProcessingAgentType
 */
export interface CommissionProcessingAgentType {
    /**
     * URL that identifies the location associated with the record identified by the UniqueID.
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    url?: string;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    type?: string;
    /**
     * The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    instance?: string;
    /**
     * Used to identify the source of the identifier (e.g., IATA, ABTA).
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    idContext?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    id?: string;
    /**
     * Additional identifying value assigned by the creating system.
     * @type {number}
     * @memberof CommissionProcessingAgentType
     */
    idExtension?: number;
    /**
     * Property from which the agent will be on hold for commission.
     * @type {string}
     * @memberof CommissionProcessingAgentType
     */
    hotelId?: string;
    /**
     *
     * @type {CommissionProcessingInstructionsType}
     * @memberof CommissionProcessingAgentType
     */
    instructions?: CommissionProcessingInstructionsType;
    /**
     * Commission processing instructions for a reservation.
     * @type {Array<CommissionProcessingReservationType>}
     * @memberof CommissionProcessingAgentType
     */
    reservations?: Array<CommissionProcessingReservationType>;
}
/**
 * Check if a given object implements the CommissionProcessingAgentType interface.
 */
export declare function instanceOfCommissionProcessingAgentType(value: object): boolean;
export declare function CommissionProcessingAgentTypeFromJSON(json: any): CommissionProcessingAgentType;
export declare function CommissionProcessingAgentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommissionProcessingAgentType;
export declare function CommissionProcessingAgentTypeToJSON(value?: CommissionProcessingAgentType | null): any;
