/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockId } from './BlockId';
import {
    BlockIdFromJSON,
    BlockIdFromJSONTyped,
    BlockIdToJSON,
} from './BlockId';

/**
 * Defines whether the item is setup due to a Rate Plan, Package or a Block.
 * @export
 * @interface ResInventoryItemSourceType
 */
export interface ResInventoryItemSourceType {
    /**
     * Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.
     * @type {string}
     * @memberof ResInventoryItemSourceType
     */
    ratePlanCode?: string;
    /**
     * Package Code, If populated specifies that the item is setup due to a Package.
     * @type {string}
     * @memberof ResInventoryItemSourceType
     */
    packageCode?: string;
    /**
     * 
     * @type {BlockId}
     * @memberof ResInventoryItemSourceType
     */
    blockId?: BlockId;
    /**
     * If true, it implies that the item has been attached to the reservation as part of a Welcome Offer
     * @type {boolean}
     * @memberof ResInventoryItemSourceType
     */
    welcomeOffer?: boolean;
    /**
     * Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.
     * @type {number}
     * @memberof ResInventoryItemSourceType
     */
    packageInternalID?: number;
}

/**
 * Check if a given object implements the ResInventoryItemSourceType interface.
 */
export function instanceOfResInventoryItemSourceType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResInventoryItemSourceTypeFromJSON(json: any): ResInventoryItemSourceType {
    return ResInventoryItemSourceTypeFromJSONTyped(json, false);
}

export function ResInventoryItemSourceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResInventoryItemSourceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'packageCode': !exists(json, 'packageCode') ? undefined : json['packageCode'],
        'blockId': !exists(json, 'blockId') ? undefined : BlockIdFromJSON(json['blockId']),
        'welcomeOffer': !exists(json, 'welcomeOffer') ? undefined : json['welcomeOffer'],
        'packageInternalID': !exists(json, 'packageInternalID') ? undefined : json['packageInternalID'],
    };
}

export function ResInventoryItemSourceTypeToJSON(value?: ResInventoryItemSourceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ratePlanCode': value.ratePlanCode,
        'packageCode': value.packageCode,
        'blockId': BlockIdToJSON(value.blockId),
        'welcomeOffer': value.welcomeOffer,
        'packageInternalID': value.packageInternalID,
    };
}

