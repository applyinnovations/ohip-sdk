/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExternalRoomKeyType } from './ExternalRoomKeyType';
import type { KeyOptionsType } from './KeyOptionsType';
import type { KeyTrackType } from './KeyTrackType';
import type { KeyUserType } from './KeyUserType';
import type { PrintDataType } from './PrintDataType';
import type { RoomKeyGuest } from './RoomKeyGuest';
import type { RoomKeyOutBoundType } from './RoomKeyOutBoundType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Request for generation of room key used for OutBound.
 * @export
 * @interface RoomKeysExternal
 */
export interface RoomKeysExternal {
    /**
     * Unique Id as defined by Door Lock System.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    encoderId: string;
    /**
     * The Unique PMS encoder name linked with the encoderId
     * @type {string}
     * @memberof RoomKeysExternal
     */
    encoderTerminal: string;
    /**
     * The PMS room number to generate a key for.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    roomId?: string;
    /**
     * Old Room Number is used when a room move (keyType RoomMove) is performed.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    oldRoomId?: string;
    /**
     * Number of keys to be created.
     * @type {number}
     * @memberof RoomKeysExternal
     */
    noOfKeys?: number;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof RoomKeysExternal
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * Indicates if Guest is a sharer or not
     * @type {boolean}
     * @memberof RoomKeysExternal
     */
    guestShareFlag?: boolean;
    /**
     * Indicates if old Guest room is a sharer or not when a room move (keyType RoomMove) is performed.
     * @type {boolean}
     * @memberof RoomKeysExternal
     */
    oldGuestShareFlag?: boolean;
    /**
     * The date/time the room key is valid from.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    keyValidityStart?: string;
    /**
     * The date/time the room key is valid to.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    keyValidityEnd?: string;
    /**
     *
     * @type {RoomKeyOutBoundType}
     * @memberof RoomKeysExternal
     */
    keyType: RoomKeyOutBoundType;
    /**
     *
     * @type {KeyTrackType}
     * @memberof RoomKeysExternal
     */
    keyTrack?: KeyTrackType;
    /**
     * OutBound Code of the Door Lock System (DLS).
     * @type {string}
     * @memberof RoomKeysExternal
     */
    outBoundCode?: string;
    /**
     * Collection of additional rooms to be included in key creation of reservation room.
     * @type {Array<string>}
     * @memberof RoomKeysExternal
     */
    additionalRooms?: Array<string>;
    /**
     * Collection of old additional rooms in key creation of reservation room when a room move (keyType RoomMove) is performed.
     * @type {Array<string>}
     * @memberof RoomKeysExternal
     */
    oldAdditionalRooms?: Array<string>;
    /**
     * Unique identifier for the PMS user.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    userId?: string;
    /**
     * Collection of of Room key guests for multiple guest room key functionality.
     * @type {Array<RoomKeyGuest>}
     * @memberof RoomKeysExternal
     */
    roomKeyGuests?: Array<RoomKeyGuest>;
    /**
     * Lists the access areas defined in PMS valid for the room key.
     * @type {Array<KeyOptionsType>}
     * @memberof RoomKeysExternal
     */
    keyOptions?: Array<KeyOptionsType>;
    /**
     * The date/time the room key is requested.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    keyRequestTime: string;
    /**
     *
     * @type {ExternalRoomKeyType}
     * @memberof RoomKeysExternal
     */
    roomKeyType: ExternalRoomKeyType;
    /**
     *
     * @type {KeyUserType}
     * @memberof RoomKeysExternal
     */
    keyUserType: KeyUserType;
    /**
     * Unique identifier of RFID card used for KeyPayload generation. Required when roomKeyType is KeyPayload.
     * @type {string}
     * @memberof RoomKeysExternal
     */
    cardSerialNumber?: string;
    /**
     *
     * @type {PrintDataType}
     * @memberof RoomKeysExternal
     */
    printData?: PrintDataType;
}
/**
 * Check if a given object implements the RoomKeysExternal interface.
 */
export declare function instanceOfRoomKeysExternal(value: object): boolean;
export declare function RoomKeysExternalFromJSON(json: any): RoomKeysExternal;
export declare function RoomKeysExternalFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomKeysExternal;
export declare function RoomKeysExternalToJSON(value?: RoomKeysExternal | null): any;
