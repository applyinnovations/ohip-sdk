/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrentServicingAttendantType } from './CurrentServicingAttendantType';
import type { HSKAttendantTimeLogsType } from './HSKAttendantTimeLogsType';
import type { HousekeepingType } from './HousekeepingType';
import type { RatePlanRatingType } from './RatePlanRatingType';
import type { ReservationInfoType } from './ReservationInfoType';
import type { ReservationShortInfoType } from './ReservationShortInfoType';
import type { RoomDiscrepancyType } from './RoomDiscrepancyType';
import type { RoomFeatureType } from './RoomFeatureType';
import type { RoomHoldType } from './RoomHoldType';
import type { RoomOutOfOrderType } from './RoomOutOfOrderType';
import type { RoomRoomType } from './RoomRoomType';
import type { RoomSectionType } from './RoomSectionType';
import type { RoomTypeShortInfoType } from './RoomTypeShortInfoType';
import type { SitePlanSectionType } from './SitePlanSectionType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import type { TurndownInfoType } from './TurndownInfoType';
/**
 * This type represents the primary room attributes.
 * @export
 * @interface HSKTaskSheetDetailsInfoTypeRoomsInner
 */
export interface HSKTaskSheetDetailsInfoTypeRoomsInner {
    /**
     *
     * @type {RoomTypeShortInfoType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomType?: RoomTypeShortInfoType;
    /**
     * Floor of the Room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    floor?: string;
    /**
     * Description for the Floor of the Room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    floorDescription?: string;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomFeatures?: Array<RoomFeatureType>;
    /**
     * Detail Long Description Of The Room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomDescription?: string;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    description?: TranslationTextType2000;
    /**
     * This indicates room smoking preference.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    smokingPreference?: string;
    /**
     * This indicates the description of the room smoking preference.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    smokingPreferenceDescription?: string;
    /**
     * Building associated with the room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    building?: string;
    /**
     *
     * @type {RatePlanRatingType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomAssignmentRating?: RatePlanRatingType;
    /**
     * Indicates whether the room is accessibility compliant.
     * @type {boolean}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    accessible?: boolean;
    /**
     * Code of the room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomId?: string;
    /**
     * Indicates whether the room is a Meeting Room
     * @type {boolean}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    meetingRoom?: boolean;
    /**
     *
     * @type {RoomSectionType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomSection?: RoomSectionType;
    /**
     *
     * @type {HousekeepingType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    housekeeping?: HousekeepingType;
    /**
     * Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).
     * @type {Array<RoomOutOfOrderType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    outOfOrder?: Array<RoomOutOfOrderType>;
    /**
     * Room Discrepancies between front office and housekeeping room status and number of persons in the room.
     * @type {Array<RoomDiscrepancyType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    discrepancy?: Array<RoomDiscrepancyType>;
    /**
     *
     * @type {SitePlanSectionType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    sitePlanSection?: SitePlanSectionType;
    /**
     * This flag indicates component room.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    componentRoomNumber?: string;
    /**
     * Collection of rooms.
     * @type {Array<RoomRoomType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    connectingRooms?: Array<RoomRoomType>;
    /**
     * Collection of rooms.
     * @type {Array<RoomRoomType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    componentRooms?: Array<RoomRoomType>;
    /**
     *
     * @type {Array<CurrentServicingAttendantType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    attendant?: Array<CurrentServicingAttendantType>;
    /**
     *
     * @type {RoomHoldType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    hold?: RoomHoldType;
    /**
     *
     * @type {TurndownInfoType}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    turndownInfo?: TurndownInfoType;
    /**
     *
     * @type {Array<ReservationShortInfoType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    resvInfo?: Array<ReservationShortInfoType>;
    /**
     * List of component room numbers.
     * @type {Array<string>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    componentRoomNumbers?: Array<string>;
    /**
     *
     * @type {Array<ReservationInfoType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    reservationInfo?: Array<ReservationInfoType>;
    /**
     * Information regarding the current servicing of the room.
     * @type {Array<CurrentServicingAttendantType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    servicingInfo?: Array<CurrentServicingAttendantType>;
    /**
     *
     * @type {Array<HSKAttendantTimeLogsType>}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    attendantTimeEntriesInfo?: Array<HSKAttendantTimeLogsType>;
    /**
     * Task Sheet instructions at the room level.
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    instructions?: string;
    /**
     * Total credits for this room.
     * @type {number}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    totalCredits?: number;
    /**
     * The wake up time of the current date
     * @type {string}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    wakeUpTime?: string;
    /**
     * The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.
     * @type {number}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    cleaningSequence?: number;
    /**
     * The sequence for this room from configuration.
     * @type {number}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    defaultSequence?: number;
    /**
     * The priority for this room.
     * @type {boolean}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    hasPriority?: boolean;
    /**
     * The actual time spent by the attendant when doing a service to the room.
     * @type {number}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    actualTimeInMins?: number;
    /**
     * The number of skip count for that room.
     * @type {number}
     * @memberof HSKTaskSheetDetailsInfoTypeRoomsInner
     */
    roomSkipCount?: number;
}
/**
 * Check if a given object implements the HSKTaskSheetDetailsInfoTypeRoomsInner interface.
 */
export declare function instanceOfHSKTaskSheetDetailsInfoTypeRoomsInner(value: object): boolean;
export declare function HSKTaskSheetDetailsInfoTypeRoomsInnerFromJSON(json: any): HSKTaskSheetDetailsInfoTypeRoomsInner;
export declare function HSKTaskSheetDetailsInfoTypeRoomsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): HSKTaskSheetDetailsInfoTypeRoomsInner;
export declare function HSKTaskSheetDetailsInfoTypeRoomsInnerToJSON(value?: HSKTaskSheetDetailsInfoTypeRoomsInner | null): any;
