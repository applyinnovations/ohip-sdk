/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ReservationId } from './ReservationId';
import type { TraceResolveType } from './TraceResolveType';
import type { TraceTimeInfoType } from './TraceTimeInfoType';
/**
 * Extended Trace object to hold information for a reservation.
 * @export
 * @interface HotelReservationTraceType
 */
export interface HotelReservationTraceType {
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    creatorId?: string;
    /**
     * Indicates the Department code.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    departmentId?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    id?: string;
    /**
     * Used to identify the source of the identifier (e.g., IATA, ABTA).
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    idContext?: string;
    /**
     * Additional identifying value assigned by the creating system.
     * @type {number}
     * @memberof HotelReservationTraceType
     */
    idExtension?: number;
    /**
     * The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    instance?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    lastModifyDateTime?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    purgeDate?: string;
    /**
     *
     * @type {ReservationId}
     * @memberof HotelReservationTraceType
     */
    reservationId?: ReservationId;
    /**
     *
     * @type {TraceResolveType}
     * @memberof HotelReservationTraceType
     */
    resolveInfo?: TraceResolveType;
    /**
     *
     * @type {TraceTimeInfoType}
     * @memberof HotelReservationTraceType
     */
    timeInfo?: TraceTimeInfoType;
    /**
     * The information this trace contains.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    traceText?: string;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    type?: string;
    /**
     * URL that identifies the location associated with the record identified by the UniqueID.
     * @type {string}
     * @memberof HotelReservationTraceType
     */
    url?: string;
}
/**
 * Check if a given object implements the HotelReservationTraceType interface.
 */
export declare function instanceOfHotelReservationTraceType(value: object): boolean;
export declare function HotelReservationTraceTypeFromJSON(json: any): HotelReservationTraceType;
export declare function HotelReservationTraceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelReservationTraceType;
export declare function HotelReservationTraceTypeToJSON(value?: HotelReservationTraceType | null): any;
