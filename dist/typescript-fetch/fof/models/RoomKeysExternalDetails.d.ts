/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExternalRoomKeyType } from './ExternalRoomKeyType';
import type { KeyOptionsResponseType } from './KeyOptionsResponseType';
import type { KeyTrackType } from './KeyTrackType';
import type { KeyUserType } from './KeyUserType';
import type { RoomKeyResponseCodeType } from './RoomKeyResponseCodeType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Response for the key request made to DLS from OPERA Cloud.
 * @export
 * @interface RoomKeysExternalDetails
 */
export interface RoomKeysExternalDetails {
    /**
     * Unique Id as defined by Door Lock System.
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    encoderId?: string;
    /**
     * The Unique PMS encoder name linked with the encoderId
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    encoderTerminal: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof RoomKeysExternalDetails
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * The PMS room number to generate a key for.
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    roomId: string;
    /**
     * KeyTrack Data.
     * @type {Array<KeyTrackType>}
     * @memberof RoomKeysExternalDetails
     */
    keyTrack?: Array<KeyTrackType>;
    /**
     * Date/Time Key is valid from - only send in response for keyType: 'Read' request
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    keyValidityStart: string;
    /**
     * Date/Time Key is valid to - only send in response for keyType: 'Read' request
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    keyValidityEnd: string;
    /**
     * Number of keys to be created.The value is always 1
     * @type {number}
     * @memberof RoomKeysExternalDetails
     */
    noOfKeys?: number;
    /**
     * A user-friendly text with information on why a request is not successful
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    responseText?: string;
    /**
     *
     * @type {RoomKeyResponseCodeType}
     * @memberof RoomKeysExternalDetails
     */
    responseCode: RoomKeyResponseCodeType;
    /**
     * Collection of additional rooms to be included in key creation of reservation room.
     * @type {Array<string>}
     * @memberof RoomKeysExternalDetails
     */
    additionalRooms?: Array<string>;
    /**
     * Lists all PMS access areas.
     * @type {Array<KeyOptionsResponseType>}
     * @memberof RoomKeysExternalDetails
     */
    keyOptions?: Array<KeyOptionsResponseType>;
    /**
     * Unique identifier for the PMS user.
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    userId?: string;
    /**
     * Base64 format of Mobile Key data provided by DLS System which the external system requested - only send in response for roomKeyType: 'MobileKey'
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    digitalKeyData?: string;
    /**
     * Image of the created key - only send in response for roomKeyType: 'KeyPayload'
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    keyImage?: string;
    /**
     * Unique identifier of RFID card used for KeyPayload generation - only send in response for roomKeyType: 'KeyPayload'.
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    cardSerialNumber?: string;
    /**
     * Date/Time the key has been generated by Door Locking system.
     * @type {string}
     * @memberof RoomKeysExternalDetails
     */
    keyCreationTime: string;
    /**
     *
     * @type {ExternalRoomKeyType}
     * @memberof RoomKeysExternalDetails
     */
    roomKeyType: ExternalRoomKeyType;
    /**
     *
     * @type {KeyUserType}
     * @memberof RoomKeysExternalDetails
     */
    keyUserType: KeyUserType;
}
/**
 * Check if a given object implements the RoomKeysExternalDetails interface.
 */
export declare function instanceOfRoomKeysExternalDetails(value: object): boolean;
export declare function RoomKeysExternalDetailsFromJSON(json: any): RoomKeysExternalDetails;
export declare function RoomKeysExternalDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomKeysExternalDetails;
export declare function RoomKeysExternalDetailsToJSON(value?: RoomKeysExternalDetails | null): any;
