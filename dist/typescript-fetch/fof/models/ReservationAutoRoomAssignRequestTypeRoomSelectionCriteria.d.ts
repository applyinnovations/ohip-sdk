/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { HotelRoomsOrderBy } from './HotelRoomsOrderBy';
import type { ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaRoomStatusFilter } from './ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaRoomStatusFilter';
import type { ReservationId } from './ReservationId';
import type { RoomFeatureType } from './RoomFeatureType';
import type { RoomRangeType } from './RoomRangeType';
import type { TimeSpanType } from './TimeSpanType';
/**
 * Search type for the rooms which will be used to assign.
 * @export
 * @interface ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
 */
export interface ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria {
    /**
     * This flag when set to true will include only connecting rooms.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    connectingRoomsOnly?: boolean;
    /**
     * When IncludeDueOut is enable,it is the departure time before which to search.
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    departureTime?: string;
    /**
     * It indicates to exclude rooms with the selected Floor(s).It allows alphanumeric values(e.g.,01,02,03,GROUND,five)
     * @type {Array<string>}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    excludeFloorPreferences?: Array<string>;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    excludeRoomFeatures?: Array<RoomFeatureType>;
    /**
     * The floor of room to be fetched.
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    floor?: string;
    /**
     *
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    hotelId?: string;
    /**
     *
     * @type {TimeSpanType}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    hotelRoomDateRange?: TimeSpanType;
    /**
     * This flag when set to true will include all room conditions, when set to false then room with "General Assignment" condition type will be excluded from the result.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeAllRoomConditions?: boolean;
    /**
     * This flag when set to true will includes attendent in Rooms
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeAttendentInRoom?: boolean;
    /**
     * This flag when set to true will include all component rooms
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeComponentRooms?: boolean;
    /**
     * Indicates if departure rooms are to be included in the auto assignment.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeDepartureRooms?: boolean;
    /**
     * This flag when set to true will include rooms assigned to due out reservations.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeDueOut?: boolean;
    /**
     * This flag when set to true will work for Available Rooms functionality
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includeOORoomCheck?: boolean;
    /**
     * This flag when set to true will include all pseudo rooms
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    includePseudoRooms?: boolean;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    limit?: number;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    offset?: number;
    /**
     *
     * @type {HotelRoomsOrderBy}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    orderBy?: HotelRoomsOrderBy;
    /**
     * When this flag is set to true, it will fetch only rooms that have exactly Y nights free with the reservation guest(s) points. This will prevent any gaps in room assignment. This is supported when OPERA Control Room Rotation and Forecast Rotation Points are active.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    perfectFitRoomsOnly?: boolean;
    /**
     * This flag when set to true will include only pseudo rooms
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    pseudoRoomsOnly?: boolean;
    /**
     *
     * @type {ReservationId}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    reservationId?: ReservationId;
    /**
     * The room class of hotel rooms to be fetched.
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomClass?: string;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomFeatures?: Array<RoomFeatureType>;
    /**
     *
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomNumberWildcard?: string;
    /**
     *
     * @type {RoomRangeType}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomRange?: RoomRangeType;
    /**
     *
     * @type {ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaRoomStatusFilter}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomStatusFilter?: ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaRoomStatusFilter;
    /**
     * The room types of hotel rooms to be fetched.
     * @type {Array<string>}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    roomTypes?: Array<string>;
    /**
     * The smoking preference of room to be fetched.
     * @type {string}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    smokingPreference?: string;
    /**
     * If the AI ROOM ASSIGNMENT application parameter is set to Y, this flag when set to true will use the AI Room Assignment algorithm to fetch the results in order of suitability.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    useAIRoomAssignment?: boolean;
    /**
     * Indicates if preferences on the profile associated to the reservation should be used to determine the room type. The preferences for FLOOR, SMOKING and ROOM FEATURES will be used.
     * @type {boolean}
     * @memberof ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria
     */
    useAssociatedProfilePreferences?: boolean;
}
/**
 * Check if a given object implements the ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria interface.
 */
export declare function instanceOfReservationAutoRoomAssignRequestTypeRoomSelectionCriteria(value: object): boolean;
export declare function ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaFromJSON(json: any): ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria;
export declare function ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria;
export declare function ReservationAutoRoomAssignRequestTypeRoomSelectionCriteriaToJSON(value?: ReservationAutoRoomAssignRequestTypeRoomSelectionCriteria | null): any;
