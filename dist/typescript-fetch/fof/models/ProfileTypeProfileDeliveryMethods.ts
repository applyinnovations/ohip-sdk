/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileDeliveryMethod } from './ProfileDeliveryMethod';
import {
    ProfileDeliveryMethodFromJSON,
    ProfileDeliveryMethodFromJSONTyped,
    ProfileDeliveryMethodToJSON,
} from './ProfileDeliveryMethod';

/**
 * List of Delivery methods configured against a Property for this Profile.
 * @export
 * @interface ProfileTypeProfileDeliveryMethods
 */
export interface ProfileTypeProfileDeliveryMethods {
    /**
     * Collection of delivery methods for this Profile.
     * @type {Array<ProfileDeliveryMethod>}
     * @memberof ProfileTypeProfileDeliveryMethods
     */
    profileDeliveryMethod?: Array<ProfileDeliveryMethod>;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof ProfileTypeProfileDeliveryMethods
     */
    hasMore?: boolean;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof ProfileTypeProfileDeliveryMethods
     */
    totalResults?: number;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof ProfileTypeProfileDeliveryMethods
     */
    count?: number;
}

/**
 * Check if a given object implements the ProfileTypeProfileDeliveryMethods interface.
 */
export function instanceOfProfileTypeProfileDeliveryMethods(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileTypeProfileDeliveryMethodsFromJSON(json: any): ProfileTypeProfileDeliveryMethods {
    return ProfileTypeProfileDeliveryMethodsFromJSONTyped(json, false);
}

export function ProfileTypeProfileDeliveryMethodsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileTypeProfileDeliveryMethods {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileDeliveryMethod': !exists(json, 'profileDeliveryMethod') ? undefined : ((json['profileDeliveryMethod'] as Array<any>).map(ProfileDeliveryMethodFromJSON)),
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !exists(json, 'count') ? undefined : json['count'],
    };
}

export function ProfileTypeProfileDeliveryMethodsToJSON(value?: ProfileTypeProfileDeliveryMethods | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileDeliveryMethod': value.profileDeliveryMethod === undefined ? undefined : ((value.profileDeliveryMethod as Array<any>).map(ProfileDeliveryMethodToJSON)),
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
    };
}

