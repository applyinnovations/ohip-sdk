/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeListType } from './CodeListType';
import type { KeyCardType } from './KeyCardType';
import type { KeyTrackType } from './KeyTrackType';
import type { Links } from './Links';
import type { RoomKeyGuest } from './RoomKeyGuest';
import type { RoomKeyType } from './RoomKeyType';
import type { UniqueIDListType } from './UniqueIDListType';
import type { UniqueIDType } from './UniqueIDType';
import type { WarningsType } from './WarningsType';
/**
 *
 * @export
 * @interface PostRoomKeyRequest
 */
export interface PostRoomKeyRequest {
    /**
     *
     * @type {CodeListType}
     * @memberof PostRoomKeyRequest
     */
    additionalRooms?: CodeListType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof PostRoomKeyRequest
     */
    encoderId?: UniqueIDType;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    encoderTerminal?: string;
    /**
     *
     * @type {KeyCardType}
     * @memberof PostRoomKeyRequest
     */
    keyCardType?: KeyCardType;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    keyCardUId?: string;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    keyOptions?: string;
    /**
     *
     * @type {KeyTrackType}
     * @memberof PostRoomKeyRequest
     */
    keyTrack?: KeyTrackType;
    /**
     *
     * @type {RoomKeyType}
     * @memberof PostRoomKeyRequest
     */
    keyType?: RoomKeyType;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    keyValidityEnd?: string;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    keyValidityStart?: string;
    /**
     *
     * @type {Links}
     * @memberof PostRoomKeyRequest
     */
    links?: Links;
    /**
     *
     * @type {number}
     * @memberof PostRoomKeyRequest
     */
    noOfKeys?: number;
    /**
     *
     * @type {UniqueIDListType}
     * @memberof PostRoomKeyRequest
     */
    reservationIdList?: UniqueIDListType;
    /**
     *
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    resort?: string;
    /**
     * Collection of of Room key guests for multiple guest room key functionality.
     * @type {Array<RoomKeyGuest>}
     * @memberof PostRoomKeyRequest
     */
    roomKeyGuests?: Array<RoomKeyGuest>;
    /**
     * A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.
     * @type {string}
     * @memberof PostRoomKeyRequest
     */
    roomNumber?: string;
    /**
     *
     * @type {WarningsType}
     * @memberof PostRoomKeyRequest
     */
    warnings?: WarningsType;
}
/**
 * Check if a given object implements the PostRoomKeyRequest interface.
 */
export declare function instanceOfPostRoomKeyRequest(value: object): boolean;
export declare function PostRoomKeyRequestFromJSON(json: any): PostRoomKeyRequest;
export declare function PostRoomKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostRoomKeyRequest;
export declare function PostRoomKeyRequestToJSON(value?: PostRoomKeyRequest | null): any;
