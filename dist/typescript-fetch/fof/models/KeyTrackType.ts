/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeyTrackType
 */
export interface KeyTrackType {
    /**
     * 
     * @type {string}
     * @memberof KeyTrackType
     */
    keyTrack1?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyTrackType
     */
    keyTrack2?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyTrackType
     */
    keyTrack3?: string;
    /**
     * 
     * @type {string}
     * @memberof KeyTrackType
     */
    keyTrack4?: string;
}

/**
 * Check if a given object implements the KeyTrackType interface.
 */
export function instanceOfKeyTrackType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KeyTrackTypeFromJSON(json: any): KeyTrackType {
    return KeyTrackTypeFromJSONTyped(json, false);
}

export function KeyTrackTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyTrackType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keyTrack1': !exists(json, 'keyTrack1') ? undefined : json['keyTrack1'],
        'keyTrack2': !exists(json, 'keyTrack2') ? undefined : json['keyTrack2'],
        'keyTrack3': !exists(json, 'keyTrack3') ? undefined : json['keyTrack3'],
        'keyTrack4': !exists(json, 'keyTrack4') ? undefined : json['keyTrack4'],
    };
}

export function KeyTrackTypeToJSON(value?: KeyTrackType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'keyTrack1': value.keyTrack1,
        'keyTrack2': value.keyTrack2,
        'keyTrack3': value.keyTrack3,
        'keyTrack4': value.keyTrack4,
    };
}

