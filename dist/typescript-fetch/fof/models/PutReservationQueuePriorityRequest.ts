/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface PutReservationQueuePriorityRequest
 */
export interface PutReservationQueuePriorityRequest {
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof PutReservationQueuePriorityRequest
     */
    links?: Array<InstanceLink>;
    /**
     * Priority which should be assigned to the reservation in Queue. If null, the topmost priority(1) will be assigned. All other reservations in the queue will be adjusted accordingly.
     * @type {number}
     * @memberof PutReservationQueuePriorityRequest
     */
    priority?: number;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof PutReservationQueuePriorityRequest
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the PutReservationQueuePriorityRequest interface.
 */
export function instanceOfPutReservationQueuePriorityRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PutReservationQueuePriorityRequestFromJSON(json: any): PutReservationQueuePriorityRequest {
    return PutReservationQueuePriorityRequestFromJSONTyped(json, false);
}

export function PutReservationQueuePriorityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutReservationQueuePriorityRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function PutReservationQueuePriorityRequestToJSON(value?: PutReservationQueuePriorityRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'priority': value.priority,
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

