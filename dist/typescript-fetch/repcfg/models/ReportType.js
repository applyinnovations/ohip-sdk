"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Report Master Data Management API
 * APIs for adding, updating, and deleting stationery reports in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportTypeToJSON = exports.ReportTypeFromJSONTyped = exports.ReportTypeFromJSON = exports.instanceOfReportType = void 0;
const runtime_1 = require("../runtime");
const ExternalUrlInfoType_1 = require("./ExternalUrlInfoType");
const ReportModuleTypeType_1 = require("./ReportModuleTypeType");
const TranslationTextType1000_1 = require("./TranslationTextType1000");
const UniqueIDType_1 = require("./UniqueIDType");
const WatermarkType_1 = require("./WatermarkType");
/**
 * Check if a given object implements the ReportType interface.
 */
function instanceOfReportType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReportType = instanceOfReportType;
function ReportTypeFromJSON(json) {
    return ReportTypeFromJSONTyped(json, false);
}
exports.ReportTypeFromJSON = ReportTypeFromJSON;
function ReportTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'moduleId': !(0, runtime_1.exists)(json, 'moduleId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['moduleId']),
        'reportName': !(0, runtime_1.exists)(json, 'reportName') ? undefined : json['reportName'],
        'moduleType': !(0, runtime_1.exists)(json, 'moduleType') ? undefined : (0, ReportModuleTypeType_1.ReportModuleTypeTypeFromJSON)(json['moduleType']),
        'reportDescription': !(0, runtime_1.exists)(json, 'reportDescription') ? undefined : (0, TranslationTextType1000_1.TranslationTextType1000FromJSON)(json['reportDescription']),
        'reportGroupId': !(0, runtime_1.exists)(json, 'reportGroupId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reportGroupId']),
        'reportGroup': !(0, runtime_1.exists)(json, 'reportGroup') ? undefined : json['reportGroup'],
        'attachedReports': !(0, runtime_1.exists)(json, 'attachedReports') ? undefined : (json['attachedReports'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'reportGroupDescription': !(0, runtime_1.exists)(json, 'reportGroupDescription') ? undefined : json['reportGroupDescription'],
        'translatableReportGroupDescription': !(0, runtime_1.exists)(json, 'translatableReportGroupDescription') ? undefined : (0, TranslationTextType1000_1.TranslationTextType1000FromJSON)(json['translatableReportGroupDescription']),
        'hotel': !(0, runtime_1.exists)(json, 'hotel') ? undefined : json['hotel'],
        'formToRun': !(0, runtime_1.exists)(json, 'formToRun') ? undefined : json['formToRun'],
        'languageCode': !(0, runtime_1.exists)(json, 'languageCode') ? undefined : json['languageCode'],
        'hasParameters': !(0, runtime_1.exists)(json, 'hasParameters') ? undefined : json['hasParameters'],
        'sample': !(0, runtime_1.exists)(json, 'sample') ? undefined : json['sample'],
        'customized': !(0, runtime_1.exists)(json, 'customized') ? undefined : json['customized'],
        'customizedRtfAttachId': !(0, runtime_1.exists)(json, 'customizedRtfAttachId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['customizedRtfAttachId']),
        'canRunSeperate': !(0, runtime_1.exists)(json, 'canRunSeperate') ? undefined : json['canRunSeperate'],
        'multiPropertyReport': !(0, runtime_1.exists)(json, 'multiPropertyReport') ? undefined : json['multiPropertyReport'],
        'procedureRequired': !(0, runtime_1.exists)(json, 'procedureRequired') ? undefined : json['procedureRequired'],
        'userDefinedReport': !(0, runtime_1.exists)(json, 'userDefinedReport') ? undefined : json['userDefinedReport'],
        'protectedReport': !(0, runtime_1.exists)(json, 'protectedReport') ? undefined : json['protectedReport'],
        'systemReport': !(0, runtime_1.exists)(json, 'systemReport') ? undefined : json['systemReport'],
        'destination': !(0, runtime_1.exists)(json, 'destination') ? undefined : json['destination'],
        'defaultPrinterName': !(0, runtime_1.exists)(json, 'defaultPrinterName') ? undefined : json['defaultPrinterName'],
        'copies': !(0, runtime_1.exists)(json, 'copies') ? undefined : json['copies'],
        'shiftReport': !(0, runtime_1.exists)(json, 'shiftReport') ? undefined : json['shiftReport'],
        'dataSourceType': !(0, runtime_1.exists)(json, 'dataSourceType') ? undefined : json['dataSourceType'],
        'dataSource': !(0, runtime_1.exists)(json, 'dataSource') ? undefined : json['dataSource'],
        'usedInApp': !(0, runtime_1.exists)(json, 'usedInApp') ? undefined : json['usedInApp'],
        'opera9Certified': !(0, runtime_1.exists)(json, 'opera9Certified') ? undefined : json['opera9Certified'],
        'watermarkDetails': !(0, runtime_1.exists)(json, 'watermarkDetails') ? undefined : (0, WatermarkType_1.WatermarkTypeFromJSON)(json['watermarkDetails']),
        'externalReportUrl': !(0, runtime_1.exists)(json, 'externalReportUrl') ? undefined : (0, ExternalUrlInfoType_1.ExternalUrlInfoTypeFromJSON)(json['externalReportUrl']),
        'rowsPerPage': !(0, runtime_1.exists)(json, 'rowsPerPage') ? undefined : json['rowsPerPage'],
        'columnsPerPage': !(0, runtime_1.exists)(json, 'columnsPerPage') ? undefined : json['columnsPerPage'],
        'excelOutput': !(0, runtime_1.exists)(json, 'excelOutput') ? undefined : json['excelOutput'],
    };
}
exports.ReportTypeFromJSONTyped = ReportTypeFromJSONTyped;
function ReportTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'moduleId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.moduleId),
        'reportName': value.reportName,
        'moduleType': (0, ReportModuleTypeType_1.ReportModuleTypeTypeToJSON)(value.moduleType),
        'reportDescription': (0, TranslationTextType1000_1.TranslationTextType1000ToJSON)(value.reportDescription),
        'reportGroupId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reportGroupId),
        'reportGroup': value.reportGroup,
        'attachedReports': value.attachedReports === undefined ? undefined : (value.attachedReports.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'reportGroupDescription': value.reportGroupDescription,
        'translatableReportGroupDescription': (0, TranslationTextType1000_1.TranslationTextType1000ToJSON)(value.translatableReportGroupDescription),
        'hotel': value.hotel,
        'formToRun': value.formToRun,
        'languageCode': value.languageCode,
        'hasParameters': value.hasParameters,
        'sample': value.sample,
        'customized': value.customized,
        'customizedRtfAttachId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.customizedRtfAttachId),
        'canRunSeperate': value.canRunSeperate,
        'multiPropertyReport': value.multiPropertyReport,
        'procedureRequired': value.procedureRequired,
        'userDefinedReport': value.userDefinedReport,
        'protectedReport': value.protectedReport,
        'systemReport': value.systemReport,
        'destination': value.destination,
        'defaultPrinterName': value.defaultPrinterName,
        'copies': value.copies,
        'shiftReport': value.shiftReport,
        'dataSourceType': value.dataSourceType,
        'dataSource': value.dataSource,
        'usedInApp': value.usedInApp,
        'opera9Certified': value.opera9Certified,
        'watermarkDetails': (0, WatermarkType_1.WatermarkTypeToJSON)(value.watermarkDetails),
        'externalReportUrl': (0, ExternalUrlInfoType_1.ExternalUrlInfoTypeToJSON)(value.externalReportUrl),
        'rowsPerPage': value.rowsPerPage,
        'columnsPerPage': value.columnsPerPage,
        'excelOutput': value.excelOutput,
    };
}
exports.ReportTypeToJSON = ReportTypeToJSON;
