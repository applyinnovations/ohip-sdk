"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Report Master Data Management API
 * APIs catering to the managing export master data configuration in a hotel.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigGenericReportTypeToJSON = exports.ConfigGenericReportTypeFromJSONTyped = exports.ConfigGenericReportTypeFromJSON = exports.instanceOfConfigGenericReportType = void 0;
const runtime_1 = require("../runtime");
const ConfigReportParameterType_1 = require("./ConfigReportParameterType");
const ExternalUrlInfoType_1 = require("./ExternalUrlInfoType");
const PrintReportType_1 = require("./PrintReportType");
const ReportModuleTypeType_1 = require("./ReportModuleTypeType");
const ReportRunnableApps_1 = require("./ReportRunnableApps");
const TranslationTextType1000_1 = require("./TranslationTextType1000");
const UniqueIDType_1 = require("./UniqueIDType");
const WatermarkType_1 = require("./WatermarkType");
/**
 * Check if a given object implements the ConfigGenericReportType interface.
 */
function instanceOfConfigGenericReportType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigGenericReportType = instanceOfConfigGenericReportType;
function ConfigGenericReportTypeFromJSON(json) {
    return ConfigGenericReportTypeFromJSONTyped(json, false);
}
exports.ConfigGenericReportTypeFromJSON = ConfigGenericReportTypeFromJSON;
function ConfigGenericReportTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : (0, TranslationTextType1000_1.TranslationTextType1000FromJSON)(json['name']),
        'reportName': !(0, runtime_1.exists)(json, 'reportName') ? undefined : json['reportName'],
        'userDefinedReport': !(0, runtime_1.exists)(json, 'userDefinedReport') ? undefined : json['userDefinedReport'],
        'moduleType': !(0, runtime_1.exists)(json, 'moduleType') ? undefined : (0, ReportModuleTypeType_1.ReportModuleTypeTypeFromJSON)(json['moduleType']),
        'usedInApp': !(0, runtime_1.exists)(json, 'usedInApp') ? undefined : (json['usedInApp'].map(ReportRunnableApps_1.ReportRunnableAppsFromJSON)),
        'dataSourceType': !(0, runtime_1.exists)(json, 'dataSourceType') ? undefined : json['dataSourceType'],
        'dataSource': !(0, runtime_1.exists)(json, 'dataSource') ? undefined : json['dataSource'],
        'mandatory': !(0, runtime_1.exists)(json, 'mandatory') ? undefined : json['mandatory'],
        'formToRun': !(0, runtime_1.exists)(json, 'formToRun') ? undefined : json['formToRun'],
        'reportLanguage': !(0, runtime_1.exists)(json, 'reportLanguage') ? undefined : json['reportLanguage'],
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
        '_protected': !(0, runtime_1.exists)(json, 'protected') ? undefined : json['protected'],
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'reportGroup': !(0, runtime_1.exists)(json, 'reportGroup') ? undefined : json['reportGroup'],
        'multiPropertyReport': !(0, runtime_1.exists)(json, 'multiPropertyReport') ? undefined : json['multiPropertyReport'],
        'excelOutput': !(0, runtime_1.exists)(json, 'excelOutput') ? undefined : json['excelOutput'],
        'attachedReports': !(0, runtime_1.exists)(json, 'attachedReports') ? undefined : (json['attachedReports'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'watermarkDetails': !(0, runtime_1.exists)(json, 'watermarkDetails') ? undefined : (0, WatermarkType_1.WatermarkTypeFromJSON)(json['watermarkDetails']),
        'parameters': !(0, runtime_1.exists)(json, 'parameters') ? undefined : (json['parameters'].map(ConfigReportParameterType_1.ConfigReportParameterTypeFromJSON)),
        'rowsPerPage': !(0, runtime_1.exists)(json, 'rowsPerPage') ? undefined : json['rowsPerPage'],
        'columnsPerPage': !(0, runtime_1.exists)(json, 'columnsPerPage') ? undefined : json['columnsPerPage'],
        'moduleId': !(0, runtime_1.exists)(json, 'moduleId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['moduleId']),
        'externalReportUrl': !(0, runtime_1.exists)(json, 'externalReportUrl') ? undefined : (0, ExternalUrlInfoType_1.ExternalUrlInfoTypeFromJSON)(json['externalReportUrl']),
        'printReport': !(0, runtime_1.exists)(json, 'printReport') ? undefined : (0, PrintReportType_1.PrintReportTypeFromJSON)(json['printReport']),
    };
}
exports.ConfigGenericReportTypeFromJSONTyped = ConfigGenericReportTypeFromJSONTyped;
function ConfigGenericReportTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': (0, TranslationTextType1000_1.TranslationTextType1000ToJSON)(value.name),
        'reportName': value.reportName,
        'userDefinedReport': value.userDefinedReport,
        'moduleType': (0, ReportModuleTypeType_1.ReportModuleTypeTypeToJSON)(value.moduleType),
        'usedInApp': value.usedInApp === undefined ? undefined : (value.usedInApp.map(ReportRunnableApps_1.ReportRunnableAppsToJSON)),
        'dataSourceType': value.dataSourceType,
        'dataSource': value.dataSource,
        'mandatory': value.mandatory,
        'formToRun': value.formToRun,
        'reportLanguage': value.reportLanguage,
        'active': value.active,
        'protected': value._protected,
        'sequence': value.sequence,
        'reportGroup': value.reportGroup,
        'multiPropertyReport': value.multiPropertyReport,
        'excelOutput': value.excelOutput,
        'attachedReports': value.attachedReports === undefined ? undefined : (value.attachedReports.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'watermarkDetails': (0, WatermarkType_1.WatermarkTypeToJSON)(value.watermarkDetails),
        'parameters': value.parameters === undefined ? undefined : (value.parameters.map(ConfigReportParameterType_1.ConfigReportParameterTypeToJSON)),
        'rowsPerPage': value.rowsPerPage,
        'columnsPerPage': value.columnsPerPage,
        'moduleId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.moduleId),
        'externalReportUrl': (0, ExternalUrlInfoType_1.ExternalUrlInfoTypeToJSON)(value.externalReportUrl),
        'printReport': (0, PrintReportType_1.PrintReportTypeToJSON)(value.printReport),
    };
}
exports.ConfigGenericReportTypeToJSON = ConfigGenericReportTypeToJSON;
