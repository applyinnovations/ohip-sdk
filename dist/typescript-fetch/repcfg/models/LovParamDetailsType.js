"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Report Master Data Management API
 * APIs catering to the managing export master data configuration in a hotel.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LovParamDetailsTypeToJSON = exports.LovParamDetailsTypeFromJSONTyped = exports.LovParamDetailsTypeFromJSON = exports.instanceOfLovParamDetailsType = void 0;
const runtime_1 = require("../runtime");
const ParamLOVType_1 = require("./ParamLOVType");
/**
 * Check if a given object implements the LovParamDetailsType interface.
 */
function instanceOfLovParamDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfLovParamDetailsType = instanceOfLovParamDetailsType;
function LovParamDetailsTypeFromJSON(json) {
    return LovParamDetailsTypeFromJSONTyped(json, false);
}
exports.LovParamDetailsTypeFromJSON = LovParamDetailsTypeFromJSON;
function LovParamDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'lovSql': !(0, runtime_1.exists)(json, 'lovSql') ? undefined : json['lovSql'],
        'lOVs': !(0, runtime_1.exists)(json, 'lOVs') ? undefined : (json['lOVs'].map(ParamLOVType_1.ParamLOVTypeFromJSON)),
        'lovValidate': !(0, runtime_1.exists)(json, 'lovValidate') ? undefined : json['lovValidate'],
        'lovMultiSelect': !(0, runtime_1.exists)(json, 'lovMultiSelect') ? undefined : json['lovMultiSelect'],
    };
}
exports.LovParamDetailsTypeFromJSONTyped = LovParamDetailsTypeFromJSONTyped;
function LovParamDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'lovSql': value.lovSql,
        'lOVs': value.lOVs === undefined ? undefined : (value.lOVs.map(ParamLOVType_1.ParamLOVTypeToJSON)),
        'lovValidate': value.lovValidate,
        'lovMultiSelect': value.lovMultiSelect,
    };
}
exports.LovParamDetailsTypeToJSON = LovParamDetailsTypeToJSON;
