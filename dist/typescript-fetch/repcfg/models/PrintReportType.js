"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Report Master Data Management API
 * APIs for adding, updating, and deleting stationery reports in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrintReportTypeToJSON = exports.PrintReportTypeFromJSONTyped = exports.PrintReportTypeFromJSON = exports.instanceOfPrintReportType = void 0;
const runtime_1 = require("../runtime");
const PrintDestinationType_1 = require("./PrintDestinationType");
/**
 * Check if a given object implements the PrintReportType interface.
 */
function instanceOfPrintReportType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPrintReportType = instanceOfPrintReportType;
function PrintReportTypeFromJSON(json) {
    return PrintReportTypeFromJSONTyped(json, false);
}
exports.PrintReportTypeFromJSON = PrintReportTypeFromJSON;
function PrintReportTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'destination': !(0, runtime_1.exists)(json, 'destination') ? undefined : (0, PrintDestinationType_1.PrintDestinationTypeFromJSON)(json['destination']),
        'copies': !(0, runtime_1.exists)(json, 'copies') ? undefined : json['copies'],
        'sent': !(0, runtime_1.exists)(json, 'sent') ? undefined : json['sent'],
    };
}
exports.PrintReportTypeFromJSONTyped = PrintReportTypeFromJSONTyped;
function PrintReportTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'destination': (0, PrintDestinationType_1.PrintDestinationTypeToJSON)(value.destination),
        'copies': value.copies,
        'sent': value.sent,
    };
}
exports.PrintReportTypeToJSON = PrintReportTypeToJSON;
