"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Report Master Data Management API
 * APIs catering to the managing export master data configuration in a hotel.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigGenericReportsTypeToJSON = exports.ConfigGenericReportsTypeFromJSONTyped = exports.ConfigGenericReportsTypeFromJSON = exports.instanceOfConfigGenericReportsType = void 0;
const runtime_1 = require("../runtime");
const ConfigGenericReportType_1 = require("./ConfigGenericReportType");
/**
 * Check if a given object implements the ConfigGenericReportsType interface.
 */
function instanceOfConfigGenericReportsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigGenericReportsType = instanceOfConfigGenericReportsType;
function ConfigGenericReportsTypeFromJSON(json) {
    return ConfigGenericReportsTypeFromJSONTyped(json, false);
}
exports.ConfigGenericReportsTypeFromJSON = ConfigGenericReportsTypeFromJSON;
function ConfigGenericReportsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'report': !(0, runtime_1.exists)(json, 'report') ? undefined : (json['report'].map(ConfigGenericReportType_1.ConfigGenericReportTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'chainCode': !(0, runtime_1.exists)(json, 'chainCode') ? undefined : json['chainCode'],
    };
}
exports.ConfigGenericReportsTypeFromJSONTyped = ConfigGenericReportsTypeFromJSONTyped;
function ConfigGenericReportsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'report': value.report === undefined ? undefined : (value.report.map(ConfigGenericReportType_1.ConfigGenericReportTypeToJSON)),
        'hotelId': value.hotelId,
        'chainCode': value.chainCode,
    };
}
exports.ConfigGenericReportsTypeToJSON = ConfigGenericReportsTypeToJSON;
