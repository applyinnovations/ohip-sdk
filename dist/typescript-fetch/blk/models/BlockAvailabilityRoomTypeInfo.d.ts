/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PackageElementType } from './PackageElementType';
import type { RoomTypeInfoType } from './RoomTypeInfoType';
/**
 * Room type information including packages and basic room type details.
 * @export
 * @interface BlockAvailabilityRoomTypeInfo
 */
export interface BlockAvailabilityRoomTypeInfo {
    /**
     * Indicates whether the room type is defined in the rate code for which availability is fetched.
     * @type {boolean}
     * @memberof BlockAvailabilityRoomTypeInfo
     */
    available?: boolean;
    /**
     * Package information.
     * @type {Array<PackageElementType>}
     * @memberof BlockAvailabilityRoomTypeInfo
     */
    packages?: Array<PackageElementType>;
    /**
     * Room type for which the details can be found in this node.
     * @type {string}
     * @memberof BlockAvailabilityRoomTypeInfo
     */
    roomType?: string;
    /**
     *
     * @type {RoomTypeInfoType}
     * @memberof BlockAvailabilityRoomTypeInfo
     */
    roomTypeInfo?: RoomTypeInfoType;
}
/**
 * Check if a given object implements the BlockAvailabilityRoomTypeInfo interface.
 */
export declare function instanceOfBlockAvailabilityRoomTypeInfo(value: object): boolean;
export declare function BlockAvailabilityRoomTypeInfoFromJSON(json: any): BlockAvailabilityRoomTypeInfo;
export declare function BlockAvailabilityRoomTypeInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockAvailabilityRoomTypeInfo;
export declare function BlockAvailabilityRoomTypeInfoToJSON(value?: BlockAvailabilityRoomTypeInfo | null): any;
