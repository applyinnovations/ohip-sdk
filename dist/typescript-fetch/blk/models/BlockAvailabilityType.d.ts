/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockAvailabilityInfoType } from './BlockAvailabilityInfoType';
import type { BlockAvailabilityMasterInfoType } from './BlockAvailabilityMasterInfoType';
import type { BlockHeaderInfoType } from './BlockHeaderInfoType';
/**
 * Holds block availability information.
 * @export
 * @interface BlockAvailabilityType
 */
export interface BlockAvailabilityType {
    /**
     * Provides room allocation/availability information for a stay date.
     * @type {Array<BlockAvailabilityInfoType>}
     * @memberof BlockAvailabilityType
     */
    blockAvailability?: Array<BlockAvailabilityInfoType>;
    /**
     *
     * @type {BlockAvailabilityMasterInfoType}
     * @memberof BlockAvailabilityType
     */
    blockAvailabilityMasterInfo?: BlockAvailabilityMasterInfoType;
    /**
     *
     * @type {BlockHeaderInfoType}
     * @memberof BlockAvailabilityType
     */
    blockHeaderInfo?: BlockHeaderInfoType;
}
/**
 * Check if a given object implements the BlockAvailabilityType interface.
 */
export declare function instanceOfBlockAvailabilityType(value: object): boolean;
export declare function BlockAvailabilityTypeFromJSON(json: any): BlockAvailabilityType;
export declare function BlockAvailabilityTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockAvailabilityType;
export declare function BlockAvailabilityTypeToJSON(value?: BlockAvailabilityType | null): any;
