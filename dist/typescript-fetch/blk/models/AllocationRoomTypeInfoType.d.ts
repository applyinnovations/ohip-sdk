/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BookingChannelMappingType } from './BookingChannelMappingType';
import type { RoomFeatureType } from './RoomFeatureType';
import type { RoomTypeAttributesType } from './RoomTypeAttributesType';
/**
 * The information about the room types contained in the block room allocation.
 * @export
 * @interface AllocationRoomTypeInfoType
 */
export interface AllocationRoomTypeInfoType {
    /**
     * Detail description of the Room Type.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    longDescription?: string;
    /**
     * Name corresponding to a RoomType.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    webName?: string;
    /**
     * URL providing more information about the Room Type.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    webPage?: string;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof AllocationRoomTypeInfoType
     */
    roomFeatures?: Array<RoomFeatureType>;
    /**
     *
     * @type {RoomTypeAttributesType}
     * @memberof AllocationRoomTypeInfoType
     */
    roomTypeAttributes?: RoomTypeAttributesType;
    /**
     * Booking Channels mapping for the Room Type.
     * @type {Array<BookingChannelMappingType>}
     * @memberof AllocationRoomTypeInfoType
     */
    bookingChannelMappings?: Array<BookingChannelMappingType>;
    /**
     * Bed type code associated with room.
     * @type {Array<string>}
     * @memberof AllocationRoomTypeInfoType
     */
    bedTypeCodes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    roomType?: string;
    /**
     *
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    hotelId?: string;
    /**
     *
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    roomClass?: string;
    /**
     *
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    description?: string;
    /**
     * Indicates room type is a suite.
     * @type {boolean}
     * @memberof AllocationRoomTypeInfoType
     */
    suite?: boolean;
    /**
     * Indicates room type is a Component Room.
     * @type {boolean}
     * @memberof AllocationRoomTypeInfoType
     */
    component?: boolean;
    /**
     * Block code.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    invBlockCode?: string;
    /**
     * Represents the room view code like City view, River view, Ocean view etc.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    roomViewCode?: string;
    /**
     * Represents the promotional code.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    promotionCode?: string;
    /**
     * Represents the room qualifier code like Deluxe,Economy,Suite etc.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    roomQualifierCode?: string;
    /**
     * Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.
     * @type {string}
     * @memberof AllocationRoomTypeInfoType
     */
    roomQualifierMatchIndicator?: string;
    /**
     * Used to specify an availability status for the room type.
     * @type {boolean}
     * @memberof AllocationRoomTypeInfoType
     */
    available?: boolean;
}
/**
 * Check if a given object implements the AllocationRoomTypeInfoType interface.
 */
export declare function instanceOfAllocationRoomTypeInfoType(value: object): boolean;
export declare function AllocationRoomTypeInfoTypeFromJSON(json: any): AllocationRoomTypeInfoType;
export declare function AllocationRoomTypeInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationRoomTypeInfoType;
export declare function AllocationRoomTypeInfoTypeToJSON(value?: AllocationRoomTypeInfoType | null): any;
