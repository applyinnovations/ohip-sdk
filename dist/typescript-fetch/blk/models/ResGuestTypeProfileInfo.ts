/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileCashieringDetailType } from './ProfileCashieringDetailType';
import {
    ProfileCashieringDetailTypeFromJSON,
    ProfileCashieringDetailTypeFromJSONTyped,
    ProfileCashieringDetailTypeToJSON,
} from './ProfileCashieringDetailType';
import type { ProfileType } from './ProfileType';
import {
    ProfileTypeFromJSON,
    ProfileTypeFromJSONTyped,
    ProfileTypeToJSON,
} from './ProfileType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * A collection of Profiles or Unique IDs of Profiles.
 * @export
 * @interface ResGuestTypeProfileInfo
 */
export interface ResGuestTypeProfileInfo {
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof ResGuestTypeProfileInfo
     */
    profileIdList?: Array<UniqueIDType>;
    /**
     * 
     * @type {ProfileType}
     * @memberof ResGuestTypeProfileInfo
     */
    profile?: ProfileType;
    /**
     * 
     * @type {ProfileCashieringDetailType}
     * @memberof ResGuestTypeProfileInfo
     */
    profileCashieringDetail?: ProfileCashieringDetailType;
    /**
     * Unique identifier of the police registration card number.
     * @type {string}
     * @memberof ResGuestTypeProfileInfo
     */
    registrationCardNo?: string;
}

/**
 * Check if a given object implements the ResGuestTypeProfileInfo interface.
 */
export function instanceOfResGuestTypeProfileInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResGuestTypeProfileInfoFromJSON(json: any): ResGuestTypeProfileInfo {
    return ResGuestTypeProfileInfoFromJSONTyped(json, false);
}

export function ResGuestTypeProfileInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResGuestTypeProfileInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileIdList': !exists(json, 'profileIdList') ? undefined : ((json['profileIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'profile': !exists(json, 'profile') ? undefined : ProfileTypeFromJSON(json['profile']),
        'profileCashieringDetail': !exists(json, 'profileCashieringDetail') ? undefined : ProfileCashieringDetailTypeFromJSON(json['profileCashieringDetail']),
        'registrationCardNo': !exists(json, 'registrationCardNo') ? undefined : json['registrationCardNo'],
    };
}

export function ResGuestTypeProfileInfoToJSON(value?: ResGuestTypeProfileInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileIdList': value.profileIdList === undefined ? undefined : ((value.profileIdList as Array<any>).map(UniqueIDTypeToJSON)),
        'profile': ProfileTypeToJSON(value.profile),
        'profileCashieringDetail': ProfileCashieringDetailTypeToJSON(value.profileCashieringDetail),
        'registrationCardNo': value.registrationCardNo,
    };
}

