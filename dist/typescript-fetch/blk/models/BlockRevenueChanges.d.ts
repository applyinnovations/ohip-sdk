/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockRevenueChangesDetailsType } from './BlockRevenueChangesDetailsType';
import type { Links } from './Links';
import type { WarningsType } from './WarningsType';
/**
 * Response Object of details fetched of revenue log changes of selected block
 * @export
 * @interface BlockRevenueChanges
 */
export interface BlockRevenueChanges {
    /**
     *
     * @type {BlockRevenueChangesDetailsType}
     * @memberof BlockRevenueChanges
     */
    blockRevenueChanges?: BlockRevenueChangesDetailsType;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof BlockRevenueChanges
     */
    count?: number;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof BlockRevenueChanges
     */
    hasMore?: boolean;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof BlockRevenueChanges
     */
    limit?: number;
    /**
     *
     * @type {Links}
     * @memberof BlockRevenueChanges
     */
    links?: Links;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof BlockRevenueChanges
     */
    offset?: number;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof BlockRevenueChanges
     */
    totalPages?: number;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof BlockRevenueChanges
     */
    totalResults?: number;
    /**
     *
     * @type {WarningsType}
     * @memberof BlockRevenueChanges
     */
    warnings?: WarningsType;
}
/**
 * Check if a given object implements the BlockRevenueChanges interface.
 */
export declare function instanceOfBlockRevenueChanges(value: object): boolean;
export declare function BlockRevenueChangesFromJSON(json: any): BlockRevenueChanges;
export declare function BlockRevenueChangesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockRevenueChanges;
export declare function BlockRevenueChangesToJSON(value?: BlockRevenueChanges | null): any;
