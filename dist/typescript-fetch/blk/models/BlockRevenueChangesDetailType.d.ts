/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockOwnersType } from './BlockOwnersType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { LogUserInfoType } from './LogUserInfoType';
/**
 *
 * @export
 * @interface BlockRevenueChangesDetailType
 */
export interface BlockRevenueChangesDetailType {
    /**
     * Unique Code to identify the owner.
     * @type {Array<BlockOwnersType>}
     * @memberof BlockRevenueChangesDetailType
     */
    blockOwner?: Array<BlockOwnersType>;
    /**
     * Change date.
     * @type {string}
     * @memberof BlockRevenueChangesDetailType
     */
    changeDate?: string;
    /**
     * Number of nights room is occupied.
     * @type {number}
     * @memberof BlockRevenueChangesDetailType
     */
    nights?: number;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof BlockRevenueChangesDetailType
     */
    roomRevenue?: CurrencyAmountType;
    /**
     * Unique Code to identify room status.
     * @type {string}
     * @memberof BlockRevenueChangesDetailType
     */
    roomStatus?: string;
    /**
     * Date of stay.
     * @type {string}
     * @memberof BlockRevenueChangesDetailType
     */
    stayDate?: string;
    /**
     *
     * @type {LogUserInfoType}
     * @memberof BlockRevenueChangesDetailType
     */
    userDetails?: LogUserInfoType;
}
/**
 * Check if a given object implements the BlockRevenueChangesDetailType interface.
 */
export declare function instanceOfBlockRevenueChangesDetailType(value: object): boolean;
export declare function BlockRevenueChangesDetailTypeFromJSON(json: any): BlockRevenueChangesDetailType;
export declare function BlockRevenueChangesDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockRevenueChangesDetailType;
export declare function BlockRevenueChangesDetailTypeToJSON(value?: BlockRevenueChangesDetailType | null): any;
