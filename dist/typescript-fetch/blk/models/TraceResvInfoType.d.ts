/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ResGuestType } from './ResGuestType';
import type { ReservationIdList } from './ReservationIdList';
import type { TimeSpanType } from './TimeSpanType';
/**
 * Reservation information related to the trace.
 * @export
 * @interface TraceResvInfoType
 */
export interface TraceResvInfoType {
    /**
     * Hotel Code where trace is set.
     * @type {string}
     * @memberof TraceResvInfoType
     */
    hotelId?: string;
    /**
     * Collection of guests associated with the reservation.
     * @type {Array<ResGuestType>}
     * @memberof TraceResvInfoType
     */
    reservationGuests?: Array<ResGuestType>;
    /**
     *
     * @type {ReservationIdList}
     * @memberof TraceResvInfoType
     */
    reservationIdList?: ReservationIdList;
    /**
     * Current Reservation Status.
     * @type {string}
     * @memberof TraceResvInfoType
     */
    reservationStatus?: string;
    /**
     * Room Id
     * @type {string}
     * @memberof TraceResvInfoType
     */
    roomId?: string;
    /**
     * Current Room Status.
     * @type {string}
     * @memberof TraceResvInfoType
     */
    roomStatus?: string;
    /**
     *
     * @type {TimeSpanType}
     * @memberof TraceResvInfoType
     */
    timeSpan?: TimeSpanType;
}
/**
 * Check if a given object implements the TraceResvInfoType interface.
 */
export declare function instanceOfTraceResvInfoType(value: object): boolean;
export declare function TraceResvInfoTypeFromJSON(json: any): TraceResvInfoType;
export declare function TraceResvInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TraceResvInfoType;
export declare function TraceResvInfoTypeToJSON(value?: TraceResvInfoType | null): any;
