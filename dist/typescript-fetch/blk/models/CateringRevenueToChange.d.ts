/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { EventId } from './EventId';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Request object for changing the catering revenue for a business block.
 * @export
 * @interface CateringRevenueToChange
 */
export interface CateringRevenueToChange {
    /**
     *
     * @type {EventId}
     * @memberof CateringRevenueToChange
     */
    eventId?: EventId;
    /**
     * Indicates if the expected revenue will be corrected.
     * @type {boolean}
     * @memberof CateringRevenueToChange
     */
    expectedRevenue?: boolean;
    /**
     * Indicates if the guaranteed revenue will be corrected.
     * @type {boolean}
     * @memberof CateringRevenueToChange
     */
    guaranteedRevenue?: boolean;
    /**
     * Indicates if the actual revenue will be corrected.
     * @type {boolean}
     * @memberof CateringRevenueToChange
     */
    actualRevenue?: boolean;
    /**
     * Indicates if the billed revenue will be corrected.
     * @type {boolean}
     * @memberof CateringRevenueToChange
     */
    billedRevenue?: boolean;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof CateringRevenueToChange
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof CateringRevenueToChange
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the CateringRevenueToChange interface.
 */
export declare function instanceOfCateringRevenueToChange(value: object): boolean;
export declare function CateringRevenueToChangeFromJSON(json: any): CateringRevenueToChange;
export declare function CateringRevenueToChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CateringRevenueToChange;
export declare function CateringRevenueToChangeToJSON(value?: CateringRevenueToChange | null): any;
