/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * List of daily details for Transaction Diversion rule.
 * @export
 * @interface TransactionDiversionDailyDetailType
 */
export interface TransactionDiversionDailyDetailType {
    /**
     * Transaction diversion rules that are posted.
     * @type {number}
     * @memberof TransactionDiversionDailyDetailType
     */
    posted?: number;
    /**
     * Transaction diversion rules that are diverted .
     * @type {number}
     * @memberof TransactionDiversionDailyDetailType
     */
    diverted?: number;
    /**
     * Daily details Date about when the rules are posted or diverted.
     * @type {Date}
     * @memberof TransactionDiversionDailyDetailType
     */
    date?: Date;
}

/**
 * Check if a given object implements the TransactionDiversionDailyDetailType interface.
 */
export function instanceOfTransactionDiversionDailyDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionDiversionDailyDetailTypeFromJSON(json: any): TransactionDiversionDailyDetailType {
    return TransactionDiversionDailyDetailTypeFromJSONTyped(json, false);
}

export function TransactionDiversionDailyDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDiversionDailyDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'posted': !exists(json, 'posted') ? undefined : json['posted'],
        'diverted': !exists(json, 'diverted') ? undefined : json['diverted'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
    };
}

export function TransactionDiversionDailyDetailTypeToJSON(value?: TransactionDiversionDailyDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'posted': value.posted,
        'diverted': value.diverted,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
    };
}

