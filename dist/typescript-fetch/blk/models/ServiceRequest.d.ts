/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { ProfileId } from './ProfileId';
import type { ServiceRequestStatusType } from './ServiceRequestStatusType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Service request.
 * @export
 * @interface ServiceRequest
 */
export interface ServiceRequest {
    /**
     *
     * @type {UniqueIDType}
     * @memberof ServiceRequest
     */
    serviceRequestId?: UniqueIDType;
    /**
     * Hotel Code of the service request.
     * @type {string}
     * @memberof ServiceRequest
     */
    hotelId?: string;
    /**
     * Service request code.
     * @type {string}
     * @memberof ServiceRequest
     */
    code?: string;
    /**
     *
     * @type {ServiceRequestStatusType}
     * @memberof ServiceRequest
     */
    status?: ServiceRequestStatusType;
    /**
     * The priority level of the service request.
     * @type {string}
     * @memberof ServiceRequest
     */
    priority?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof ServiceRequest
     */
    department?: CodeDescriptionType;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof ServiceRequest
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     *
     * @type {ProfileId}
     * @memberof ServiceRequest
     */
    profileId?: ProfileId;
    /**
     * The guest name.
     * @type {string}
     * @memberof ServiceRequest
     */
    guestName?: string;
    /**
     * The room number in which the service request was created.
     * @type {string}
     * @memberof ServiceRequest
     */
    room?: string;
    /**
     * The date-time in which the service request was opened.
     * @type {string}
     * @memberof ServiceRequest
     */
    openDate?: string;
    /**
     * The user who guaranteed the completion of the service request.
     * @type {string}
     * @memberof ServiceRequest
     */
    guaranteedBy?: string;
    /**
     * Description of the service request.
     * @type {string}
     * @memberof ServiceRequest
     */
    comment?: string;
    /**
     * Description of the action taken to complete the request.
     * @type {string}
     * @memberof ServiceRequest
     */
    action?: string;
    /**
     * Communication method picked from guest profile.
     * @type {string}
     * @memberof ServiceRequest
     */
    guestContactMethod?: string;
    /**
     * The date-time in which the service request was completed.
     * @type {string}
     * @memberof ServiceRequest
     */
    completionDate?: string;
    /**
     * The date-time in which the service request was closed.
     * @type {string}
     * @memberof ServiceRequest
     */
    closedDate?: string;
    /**
     * The user who closed the service request.
     * @type {string}
     * @memberof ServiceRequest
     */
    closedBy?: string;
    /**
     * The follow up description.
     * @type {string}
     * @memberof ServiceRequest
     */
    closeDescription?: string;
}
/**
 * Check if a given object implements the ServiceRequest interface.
 */
export declare function instanceOfServiceRequest(value: object): boolean;
export declare function ServiceRequestFromJSON(json: any): ServiceRequest;
export declare function ServiceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceRequest;
export declare function ServiceRequestToJSON(value?: ServiceRequest | null): any;
