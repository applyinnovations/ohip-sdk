/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockId } from './BlockId';
import type { ExternalIdType } from './ExternalIdType';
import type { TransactionActionEnumType } from './TransactionActionEnumType';
/**
 * Block information for changed blocks by date time
 * @export
 * @interface BlockChangesByDateTimeSummaryType
 */
export interface BlockChangesByDateTimeSummaryType {
    /**
     * The hotel code for changed block by date time.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    hotelId?: string;
    /**
     *
     * @type {BlockId}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    blockId?: BlockId;
    /**
     * The block code for changed block by date time.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    blockCode?: string;
    /**
     * List of external references.
     * @type {Array<ExternalIdType>}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    externalIdList?: Array<ExternalIdType>;
    /**
     * The start date for changed block by date time.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    startDate?: string;
    /**
     * The end date for changed block by date time.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    endDate?: string;
    /**
     * The booking status of the block.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    roomStatus?: string;
    /**
     * Status of the block and all its events.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    cateringStatus?: string;
    /**
     * Last change date and time for this block.
     * @type {string}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    lastChangeDateTime?: string;
    /**
     *
     * @type {TransactionActionEnumType}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    actionType?: TransactionActionEnumType;
    /**
     * Indicates whether there are any catering events, linked to the business block, that have been changed, deleted, or created within the timeframe.
     * @type {boolean}
     * @memberof BlockChangesByDateTimeSummaryType
     */
    eventsChanged?: boolean;
}
/**
 * Check if a given object implements the BlockChangesByDateTimeSummaryType interface.
 */
export declare function instanceOfBlockChangesByDateTimeSummaryType(value: object): boolean;
export declare function BlockChangesByDateTimeSummaryTypeFromJSON(json: any): BlockChangesByDateTimeSummaryType;
export declare function BlockChangesByDateTimeSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockChangesByDateTimeSummaryType;
export declare function BlockChangesByDateTimeSummaryTypeToJSON(value?: BlockChangesByDateTimeSummaryType | null): any;
