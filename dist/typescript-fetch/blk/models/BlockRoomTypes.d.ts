/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InstanceLink } from './InstanceLink';
import type { RoomAllocationMasterInfoType } from './RoomAllocationMasterInfoType';
import type { WarningType } from './WarningType';
/**
 * Response Object for FetchBlockRoomTypes operation.
 * @export
 * @interface BlockRoomTypes
 */
export interface BlockRoomTypes {
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof BlockRoomTypes
     */
    links?: Array<InstanceLink>;
    /**
     *
     * @type {RoomAllocationMasterInfoType}
     * @memberof BlockRoomTypes
     */
    roomTypes?: RoomAllocationMasterInfoType;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof BlockRoomTypes
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the BlockRoomTypes interface.
 */
export declare function instanceOfBlockRoomTypes(value: object): boolean;
export declare function BlockRoomTypesFromJSON(json: any): BlockRoomTypes;
export declare function BlockRoomTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockRoomTypes;
export declare function BlockRoomTypesToJSON(value?: BlockRoomTypes | null): any;
