/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { ProfileRoutingInstructionsType } from './ProfileRoutingInstructionsType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * The type contains routing instructions for the profile.
 * @export
 * @interface ProfileCashieringDetailType
 */
export interface ProfileCashieringDetailType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof ProfileCashieringDetailType
     */
    eCommerceId?: UniqueIDType;
    /**
     * Guest type code.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    fiscalGuestType?: string;
    /**
     * Hotel Code for which the routing instructions are provided for a profile.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    hotelId?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof ProfileCashieringDetailType
     */
    paymentMethod?: CodeDescriptionType;
    /**
     *
     * @type {ProfileRoutingInstructionsType}
     * @memberof ProfileCashieringDetailType
     */
    routingInstructions?: ProfileRoutingInstructionsType;
    /**
     * Tax type code.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    taxType?: string;
}
/**
 * Check if a given object implements the ProfileCashieringDetailType interface.
 */
export declare function instanceOfProfileCashieringDetailType(value: object): boolean;
export declare function ProfileCashieringDetailTypeFromJSON(json: any): ProfileCashieringDetailType;
export declare function ProfileCashieringDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileCashieringDetailType;
export declare function ProfileCashieringDetailTypeToJSON(value?: ProfileCashieringDetailType | null): any;
