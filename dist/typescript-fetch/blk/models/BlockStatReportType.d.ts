/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { HSKStatCategoryType } from './HSKStatCategoryType';
import type { HSKStatReportCodeType } from './HSKStatReportCodeType';
/**
 * Base abstraction defining all details needed to create a statistical report.
 * @export
 * @interface BlockStatReportType
 */
export interface BlockStatReportType {
    /**
     * Statistical date of the requested report.
     * @type {string}
     * @memberof BlockStatReportType
     */
    calendarDate?: string;
    /**
     * The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.
     * @type {string}
     * @memberof BlockStatReportType
     */
    chainCode?: string;
    /**
     * The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).
     * @type {string}
     * @memberof BlockStatReportType
     */
    chainName?: string;
    /**
     *
     * @type {string}
     * @memberof BlockStatReportType
     */
    description?: string;
    /**
     * The IATA city code; for example DCA, ORD.
     * @type {string}
     * @memberof BlockStatReportType
     */
    hotelCityCode?: string;
    /**
     * A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.
     * @type {string}
     * @memberof BlockStatReportType
     */
    hotelCodeContext?: string;
    /**
     * The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.
     * @type {string}
     * @memberof BlockStatReportType
     */
    hotelId?: string;
    /**
     * A text field used to communicate the proper name of the hotel.
     * @type {string}
     * @memberof BlockStatReportType
     */
    hotelName?: string;
    /**
     *
     * @type {HSKStatReportCodeType}
     * @memberof BlockStatReportType
     */
    reportCode?: HSKStatReportCodeType;
    /**
     *
     * @type {Array<HSKStatCategoryType>}
     * @memberof BlockStatReportType
     */
    statCategory?: Array<HSKStatCategoryType>;
}
/**
 * Check if a given object implements the BlockStatReportType interface.
 */
export declare function instanceOfBlockStatReportType(value: object): boolean;
export declare function BlockStatReportTypeFromJSON(json: any): BlockStatReportType;
export declare function BlockStatReportTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockStatReportType;
export declare function BlockStatReportTypeToJSON(value?: BlockStatReportType | null): any;
