/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ResCancellationPolicyType } from './ResCancellationPolicyType';
import type { ResDepositPolicyType } from './ResDepositPolicyType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * A collection of reservation deposit and cancellation policies.
 * @export
 * @interface ReservationPoliciesType
 */
export interface ReservationPoliciesType {
    /**
     * A list of reservation cancellation policies.
     * @type {Array<ResCancellationPolicyType>}
     * @memberof ReservationPoliciesType
     */
    cancellationPolicies?: Array<ResCancellationPolicyType>;
    /**
     * A list of deposit policies attached with the reservation.
     * @type {Array<ResDepositPolicyType>}
     * @memberof ReservationPoliciesType
     */
    depositPolicies?: Array<ResDepositPolicyType>;
    /**
     * Name identifier for the reservation.
     * @type {string}
     * @memberof ReservationPoliciesType
     */
    name?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof ReservationPoliciesType
     */
    reservationIdList?: Array<UniqueIDType>;
}
/**
 * Check if a given object implements the ReservationPoliciesType interface.
 */
export declare function instanceOfReservationPoliciesType(value: object): boolean;
export declare function ReservationPoliciesTypeFromJSON(json: any): ReservationPoliciesType;
export declare function ReservationPoliciesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationPoliciesType;
export declare function ReservationPoliciesTypeToJSON(value?: ReservationPoliciesType | null): any;
