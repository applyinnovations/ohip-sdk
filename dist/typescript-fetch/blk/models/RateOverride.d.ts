/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { InstanceLink } from './InstanceLink';
import type { UniqueIDType } from './UniqueIDType';
import type { WarningType } from './WarningType';
/**
 * Request object of change block rate override operation.
 * @export
 * @interface RateOverride
 */
export interface RateOverride {
    /**
     * Indicates whether rates of a block can be overridden. Applicable only for blocks with a Rate Code.
     * @type {boolean}
     * @memberof RateOverride
     */
    allowRateOverride?: boolean;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof RateOverride
     */
    blockIdList?: Array<UniqueIDType>;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof RateOverride
     */
    hotelId?: string;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof RateOverride
     */
    links?: Array<InstanceLink>;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof RateOverride
     */
    rateOverrideReason?: CodeDescriptionType;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof RateOverride
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the RateOverride interface.
 */
export declare function instanceOfRateOverride(value: object): boolean;
export declare function RateOverrideFromJSON(json: any): RateOverride;
export declare function RateOverrideFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateOverride;
export declare function RateOverrideToJSON(value?: RateOverride | null): any;
