/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookingChannelMappingType } from './BookingChannelMappingType';
import {
    BookingChannelMappingTypeFromJSON,
    BookingChannelMappingTypeFromJSONTyped,
    BookingChannelMappingTypeToJSON,
} from './BookingChannelMappingType';
import type { RoomFeatureType } from './RoomFeatureType';
import {
    RoomFeatureTypeFromJSON,
    RoomFeatureTypeFromJSONTyped,
    RoomFeatureTypeToJSON,
} from './RoomFeatureType';
import type { RoomTypeAttributesType } from './RoomTypeAttributesType';
import {
    RoomTypeAttributesTypeFromJSON,
    RoomTypeAttributesTypeFromJSONTyped,
    RoomTypeAttributesTypeToJSON,
} from './RoomTypeAttributesType';

/**
 * Extended room type to store room category.
 * @export
 * @interface StatisticsRoomTypeInfoType
 */
export interface StatisticsRoomTypeInfoType {
    /**
     * Detail description of the Room Type.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    longDescription?: string;
    /**
     * Name corresponding to a RoomType.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    webName?: string;
    /**
     * URL providing more information about the Room Type.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    webPage?: string;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomFeatures?: Array<RoomFeatureType>;
    /**
     * 
     * @type {RoomTypeAttributesType}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomTypeAttributes?: RoomTypeAttributesType;
    /**
     * Booking Channels mapping for the Room Type.
     * @type {Array<BookingChannelMappingType>}
     * @memberof StatisticsRoomTypeInfoType
     */
    bookingChannelMappings?: Array<BookingChannelMappingType>;
    /**
     * Bed type code associated with room.
     * @type {Array<string>}
     * @memberof StatisticsRoomTypeInfoType
     */
    bedTypeCodes?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomType?: string;
    /**
     * 
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomClass?: string;
    /**
     * 
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    description?: string;
    /**
     * Indicates room type is a suite.
     * @type {boolean}
     * @memberof StatisticsRoomTypeInfoType
     */
    suite?: boolean;
    /**
     * Indicates room type is a Component Room.
     * @type {boolean}
     * @memberof StatisticsRoomTypeInfoType
     */
    component?: boolean;
    /**
     * Block code.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    invBlockCode?: string;
    /**
     * Represents the room view code like City view, River view, Ocean view etc.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomViewCode?: string;
    /**
     * Represents the promotional code.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    promotionCode?: string;
    /**
     * Represents the room qualifier code like Deluxe,Economy,Suite etc.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomQualifierCode?: string;
    /**
     * Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomQualifierMatchIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof StatisticsRoomTypeInfoType
     */
    roomCategory?: string;
}

/**
 * Check if a given object implements the StatisticsRoomTypeInfoType interface.
 */
export function instanceOfStatisticsRoomTypeInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StatisticsRoomTypeInfoTypeFromJSON(json: any): StatisticsRoomTypeInfoType {
    return StatisticsRoomTypeInfoTypeFromJSONTyped(json, false);
}

export function StatisticsRoomTypeInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatisticsRoomTypeInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'longDescription': !exists(json, 'longDescription') ? undefined : json['longDescription'],
        'webName': !exists(json, 'webName') ? undefined : json['webName'],
        'webPage': !exists(json, 'webPage') ? undefined : json['webPage'],
        'roomFeatures': !exists(json, 'roomFeatures') ? undefined : ((json['roomFeatures'] as Array<any>).map(RoomFeatureTypeFromJSON)),
        'roomTypeAttributes': !exists(json, 'roomTypeAttributes') ? undefined : RoomTypeAttributesTypeFromJSON(json['roomTypeAttributes']),
        'bookingChannelMappings': !exists(json, 'bookingChannelMappings') ? undefined : ((json['bookingChannelMappings'] as Array<any>).map(BookingChannelMappingTypeFromJSON)),
        'bedTypeCodes': !exists(json, 'bedTypeCodes') ? undefined : json['bedTypeCodes'],
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'roomClass': !exists(json, 'roomClass') ? undefined : json['roomClass'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'suite': !exists(json, 'suite') ? undefined : json['suite'],
        'component': !exists(json, 'component') ? undefined : json['component'],
        'invBlockCode': !exists(json, 'invBlockCode') ? undefined : json['invBlockCode'],
        'roomViewCode': !exists(json, 'roomViewCode') ? undefined : json['roomViewCode'],
        'promotionCode': !exists(json, 'promotionCode') ? undefined : json['promotionCode'],
        'roomQualifierCode': !exists(json, 'roomQualifierCode') ? undefined : json['roomQualifierCode'],
        'roomQualifierMatchIndicator': !exists(json, 'roomQualifierMatchIndicator') ? undefined : json['roomQualifierMatchIndicator'],
        'roomCategory': !exists(json, 'roomCategory') ? undefined : json['roomCategory'],
    };
}

export function StatisticsRoomTypeInfoTypeToJSON(value?: StatisticsRoomTypeInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'longDescription': value.longDescription,
        'webName': value.webName,
        'webPage': value.webPage,
        'roomFeatures': value.roomFeatures === undefined ? undefined : ((value.roomFeatures as Array<any>).map(RoomFeatureTypeToJSON)),
        'roomTypeAttributes': RoomTypeAttributesTypeToJSON(value.roomTypeAttributes),
        'bookingChannelMappings': value.bookingChannelMappings === undefined ? undefined : ((value.bookingChannelMappings as Array<any>).map(BookingChannelMappingTypeToJSON)),
        'bedTypeCodes': value.bedTypeCodes,
        'roomType': value.roomType,
        'hotelId': value.hotelId,
        'roomClass': value.roomClass,
        'description': value.description,
        'suite': value.suite,
        'component': value.component,
        'invBlockCode': value.invBlockCode,
        'roomViewCode': value.roomViewCode,
        'promotionCode': value.promotionCode,
        'roomQualifierCode': value.roomQualifierCode,
        'roomQualifierMatchIndicator': value.roomQualifierMatchIndicator,
        'roomCategory': value.roomCategory,
    };
}

