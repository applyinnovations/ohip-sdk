/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockIdList } from './BlockIdList';
import type { CancellationDetailsType } from './CancellationDetailsType';
/**
 * ID information of the cancelled Block.
 * @export
 * @interface CancelBlockType
 */
export interface CancelBlockType {
    /**
     *
     * @type {BlockIdList}
     * @memberof CancelBlockType
     */
    blockIdList?: BlockIdList;
    /**
     *
     * @type {CancellationDetailsType}
     * @memberof CancelBlockType
     */
    cancellationDetails?: CancellationDetailsType;
    /**
     * Opera Hotel code for the cancel block operation.
     * @type {string}
     * @memberof CancelBlockType
     */
    hotelId?: string;
    /**
     *
     * @type {CancellationDetailsType}
     * @memberof CancelBlockType
     */
    pMReservationsCancellationDetails?: CancellationDetailsType;
    /**
     * Start date of the block to be cancelled.
     * @type {Date}
     * @memberof CancelBlockType
     */
    startDate?: Date;
}
/**
 * Check if a given object implements the CancelBlockType interface.
 */
export declare function instanceOfCancelBlockType(value: object): boolean;
export declare function CancelBlockTypeFromJSON(json: any): CancelBlockType;
export declare function CancelBlockTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CancelBlockType;
export declare function CancelBlockTypeToJSON(value?: CancelBlockType | null): any;
