/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockId } from './BlockId';
import type { BlockReservationsCriteriaType } from './BlockReservationsCriteriaType';
import type { ChangeBlockReservationsTypeReferenceReservation } from './ChangeBlockReservationsTypeReferenceReservation';
import type { ChangeBlockResvInstructionType } from './ChangeBlockResvInstructionType';
/**
 * Criteria used to perform batch changes to reservations that belong to a block.
 * @export
 * @interface ChangeBlockReservationsType
 */
export interface ChangeBlockReservationsType {
    /**
     *
     * @type {BlockId}
     * @memberof ChangeBlockReservationsType
     */
    blockId?: BlockId;
    /**
     * Indicates whether to borrow inventory from the house and overbook if required for any inventory needed to complete the apply to all operation.
     * @type {boolean}
     * @memberof ChangeBlockReservationsType
     */
    borrowForAll?: boolean;
    /**
     * Change instructions to be used.
     * @type {Array<ChangeBlockResvInstructionType>}
     * @memberof ChangeBlockReservationsType
     */
    changeBlockReservationsInstructions?: Array<ChangeBlockResvInstructionType>;
    /**
     * Opera Hotel code that the block belongs to.
     * @type {string}
     * @memberof ChangeBlockReservationsType
     */
    hotelId?: string;
    /**
     *
     * @type {ChangeBlockReservationsTypeReferenceReservation}
     * @memberof ChangeBlockReservationsType
     */
    referenceReservation?: ChangeBlockReservationsTypeReferenceReservation;
    /**
     *
     * @type {BlockReservationsCriteriaType}
     * @memberof ChangeBlockReservationsType
     */
    reservationFilter?: BlockReservationsCriteriaType;
}
/**
 * Check if a given object implements the ChangeBlockReservationsType interface.
 */
export declare function instanceOfChangeBlockReservationsType(value: object): boolean;
export declare function ChangeBlockReservationsTypeFromJSON(json: any): ChangeBlockReservationsType;
export declare function ChangeBlockReservationsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeBlockReservationsType;
export declare function ChangeBlockReservationsTypeToJSON(value?: ChangeBlockReservationsType | null): any;
