/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A monetary value expressed with a currency code.
 * @export
 * @interface ActivityListInnerDeposit
 */
export interface ActivityListInnerDeposit {
    /**
     * A monetary amount.
     * @type {number}
     * @memberof ActivityListInnerDeposit
     */
    amount?: number;
    /**
     * Provides a currency code to reflect the currency in which an amount may be expressed.
     * @type {string}
     * @memberof ActivityListInnerDeposit
     */
    currencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityListInnerDeposit
     */
    collectedBy?: ActivityListInnerDepositCollectedByEnum;
}


/**
 * @export
 */
export const ActivityListInnerDepositCollectedByEnum = {
    Vendor: 'Vendor',
    Agent: 'Agent',
    Other: 'Other'
} as const;
export type ActivityListInnerDepositCollectedByEnum = typeof ActivityListInnerDepositCollectedByEnum[keyof typeof ActivityListInnerDepositCollectedByEnum];


/**
 * Check if a given object implements the ActivityListInnerDeposit interface.
 */
export function instanceOfActivityListInnerDeposit(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityListInnerDepositFromJSON(json: any): ActivityListInnerDeposit {
    return ActivityListInnerDepositFromJSONTyped(json, false);
}

export function ActivityListInnerDepositFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityListInnerDeposit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'collectedBy': !exists(json, 'collectedBy') ? undefined : json['collectedBy'],
    };
}

export function ActivityListInnerDepositToJSON(value?: ActivityListInnerDeposit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'currencyCode': value.currencyCode,
        'collectedBy': value.collectedBy,
    };
}

