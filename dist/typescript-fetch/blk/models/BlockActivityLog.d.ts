/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ActivityLogListType } from './ActivityLogListType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Response object for fetching block activity log. This object contains collection of user activity log for the block, Success, Warnings and Errors related to this operation
 * @export
 * @interface BlockActivityLog
 */
export interface BlockActivityLog {
    /**
     *
     * @type {ActivityLogListType}
     * @memberof BlockActivityLog
     */
    activityLog?: ActivityLogListType;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof BlockActivityLog
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof BlockActivityLog
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the BlockActivityLog interface.
 */
export declare function instanceOfBlockActivityLog(value: object): boolean;
export declare function BlockActivityLogFromJSON(json: any): BlockActivityLog;
export declare function BlockActivityLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockActivityLog;
export declare function BlockActivityLogToJSON(value?: BlockActivityLog | null): any;
