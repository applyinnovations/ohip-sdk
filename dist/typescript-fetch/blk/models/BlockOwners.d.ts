/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockOwnersType } from './BlockOwnersType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Response object that returns all sales manager owners associated with a business block.
 * @export
 * @interface BlockOwners
 */
export interface BlockOwners {
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof BlockOwners
     */
    links?: Array<InstanceLink>;
    /**
     *
     * @type {BlockOwnersType}
     * @memberof BlockOwners
     */
    owners?: BlockOwnersType;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof BlockOwners
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the BlockOwners interface.
 */
export declare function instanceOfBlockOwners(value: object): boolean;
export declare function BlockOwnersFromJSON(json: any): BlockOwners;
export declare function BlockOwnersFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockOwners;
export declare function BlockOwnersToJSON(value?: BlockOwners | null): any;
