/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockAccessRestrictionType } from './BlockAccessRestrictionType';
/**
 *
 * @export
 * @interface HotelUseType
 */
export interface HotelUseType {
    /**
     * Block access exclusion/restriction type.
     * @type {Array<BlockAccessRestrictionType>}
     * @memberof HotelUseType
     */
    accessRestrictions?: Array<BlockAccessRestrictionType>;
    /**
     * Indicates whether this business block can be updated only by the Hotel to which it belongs. This is used to communicate to CRO that the business block can be only updated by the Hotel.
     * @type {boolean}
     * @memberof HotelUseType
     */
    hotelUseOnly?: boolean;
    /**
     * Explains the reason why the business block can be updated only by the Hotel.
     * @type {string}
     * @memberof HotelUseType
     */
    hotelUseReason?: string;
}
/**
 * Check if a given object implements the HotelUseType interface.
 */
export declare function instanceOfHotelUseType(value: object): boolean;
export declare function HotelUseTypeFromJSON(json: any): HotelUseType;
export declare function HotelUseTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelUseType;
export declare function HotelUseTypeToJSON(value?: HotelUseType | null): any;
