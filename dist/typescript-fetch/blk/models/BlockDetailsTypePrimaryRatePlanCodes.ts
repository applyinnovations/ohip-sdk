/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockRatePlanInfoType } from './BlockRatePlanInfoType';
import {
    BlockRatePlanInfoTypeFromJSON,
    BlockRatePlanInfoTypeFromJSONTyped,
    BlockRatePlanInfoTypeToJSON,
} from './BlockRatePlanInfoType';

/**
 * Primary rates for the block.
 * @export
 * @interface BlockDetailsTypePrimaryRatePlanCodes
 */
export interface BlockDetailsTypePrimaryRatePlanCodes {
    /**
     * 
     * @type {BlockRatePlanInfoType}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    blockRatePlanCode?: BlockRatePlanInfoType;
    /**
     * 
     * @type {BlockRatePlanInfoType}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    shoulderStartRatePlanCode?: BlockRatePlanInfoType;
    /**
     * 
     * @type {BlockRatePlanInfoType}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    shoulderEndRatePlanCode?: BlockRatePlanInfoType;
    /**
     * Total number of Block Rates.
     * @type {number}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    blockRatePlanCodeCount?: number;
    /**
     * Total number of Shoulder Start Rates.
     * @type {number}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    shoulderStartRatePlanCodeCount?: number;
    /**
     * Total number of Shoulder End Rates.
     * @type {number}
     * @memberof BlockDetailsTypePrimaryRatePlanCodes
     */
    shoulderEndRatePlanCodeCount?: number;
}

/**
 * Check if a given object implements the BlockDetailsTypePrimaryRatePlanCodes interface.
 */
export function instanceOfBlockDetailsTypePrimaryRatePlanCodes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockDetailsTypePrimaryRatePlanCodesFromJSON(json: any): BlockDetailsTypePrimaryRatePlanCodes {
    return BlockDetailsTypePrimaryRatePlanCodesFromJSONTyped(json, false);
}

export function BlockDetailsTypePrimaryRatePlanCodesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockDetailsTypePrimaryRatePlanCodes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockRatePlanCode': !exists(json, 'blockRatePlanCode') ? undefined : BlockRatePlanInfoTypeFromJSON(json['blockRatePlanCode']),
        'shoulderStartRatePlanCode': !exists(json, 'shoulderStartRatePlanCode') ? undefined : BlockRatePlanInfoTypeFromJSON(json['shoulderStartRatePlanCode']),
        'shoulderEndRatePlanCode': !exists(json, 'shoulderEndRatePlanCode') ? undefined : BlockRatePlanInfoTypeFromJSON(json['shoulderEndRatePlanCode']),
        'blockRatePlanCodeCount': !exists(json, 'blockRatePlanCodeCount') ? undefined : json['blockRatePlanCodeCount'],
        'shoulderStartRatePlanCodeCount': !exists(json, 'shoulderStartRatePlanCodeCount') ? undefined : json['shoulderStartRatePlanCodeCount'],
        'shoulderEndRatePlanCodeCount': !exists(json, 'shoulderEndRatePlanCodeCount') ? undefined : json['shoulderEndRatePlanCodeCount'],
    };
}

export function BlockDetailsTypePrimaryRatePlanCodesToJSON(value?: BlockDetailsTypePrimaryRatePlanCodes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockRatePlanCode': BlockRatePlanInfoTypeToJSON(value.blockRatePlanCode),
        'shoulderStartRatePlanCode': BlockRatePlanInfoTypeToJSON(value.shoulderStartRatePlanCode),
        'shoulderEndRatePlanCode': BlockRatePlanInfoTypeToJSON(value.shoulderEndRatePlanCode),
        'blockRatePlanCodeCount': value.blockRatePlanCodeCount,
        'shoulderStartRatePlanCodeCount': value.shoulderStartRatePlanCodeCount,
        'shoulderEndRatePlanCodeCount': value.shoulderEndRatePlanCodeCount,
    };
}

