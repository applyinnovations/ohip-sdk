"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockAllocationRangeTypeToJSON = exports.BlockAllocationRangeTypeFromJSONTyped = exports.BlockAllocationRangeTypeFromJSON = exports.instanceOfBlockAllocationRangeType = void 0;
const runtime_1 = require("../runtime");
const AllocationType_1 = require("./AllocationType");
const BlockAllocationRangeTypeOverbookListInner_1 = require("./BlockAllocationRangeTypeOverbookListInner");
const BlockGridInvType_1 = require("./BlockGridInvType");
const BlockGridRatesType_1 = require("./BlockGridRatesType");
const BlockId_1 = require("./BlockId");
const BlockRangeModeType_1 = require("./BlockRangeModeType");
/**
 * Check if a given object implements the BlockAllocationRangeType interface.
 */
function instanceOfBlockAllocationRangeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockAllocationRangeType = instanceOfBlockAllocationRangeType;
function BlockAllocationRangeTypeFromJSON(json) {
    return BlockAllocationRangeTypeFromJSONTyped(json, false);
}
exports.BlockAllocationRangeTypeFromJSON = BlockAllocationRangeTypeFromJSON;
function BlockAllocationRangeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, BlockId_1.BlockIdFromJSON)(json['blockId']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'roomTypes': !(0, runtime_1.exists)(json, 'roomTypes') ? undefined : json['roomTypes'],
        'beginDate': !(0, runtime_1.exists)(json, 'beginDate') ? undefined : json['beginDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'allocationType': !(0, runtime_1.exists)(json, 'allocationType') ? undefined : (0, AllocationType_1.AllocationTypeFromJSON)(json['allocationType']),
        'incrementFlag': !(0, runtime_1.exists)(json, 'incrementFlag') ? undefined : json['incrementFlag'],
        'blockInventory': !(0, runtime_1.exists)(json, 'blockInventory') ? undefined : (0, BlockGridInvType_1.BlockGridInvTypeFromJSON)(json['blockInventory']),
        'blockRates': !(0, runtime_1.exists)(json, 'blockRates') ? undefined : (0, BlockGridRatesType_1.BlockGridRatesTypeFromJSON)(json['blockRates']),
        'cutoffDate': !(0, runtime_1.exists)(json, 'cutoffDate') ? undefined : json['cutoffDate'],
        'cutoffDays': !(0, runtime_1.exists)(json, 'cutoffDays') ? undefined : json['cutoffDays'],
        'overrideCutoffSchedule': !(0, runtime_1.exists)(json, 'overrideCutoffSchedule') ? undefined : json['overrideCutoffSchedule'],
        'includedDays': !(0, runtime_1.exists)(json, 'includedDays') ? undefined : json['includedDays'],
        'rangeMode': !(0, runtime_1.exists)(json, 'rangeMode') ? undefined : (0, BlockRangeModeType_1.BlockRangeModeTypeFromJSON)(json['rangeMode']),
        'overbookList': !(0, runtime_1.exists)(json, 'overbookList') ? undefined : (json['overbookList'].map(BlockAllocationRangeTypeOverbookListInner_1.BlockAllocationRangeTypeOverbookListInnerFromJSON)),
        'genericRoomType': !(0, runtime_1.exists)(json, 'genericRoomType') ? undefined : json['genericRoomType'],
    };
}
exports.BlockAllocationRangeTypeFromJSONTyped = BlockAllocationRangeTypeFromJSONTyped;
function BlockAllocationRangeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockId': (0, BlockId_1.BlockIdToJSON)(value.blockId),
        'hotelId': value.hotelId,
        'roomTypes': value.roomTypes,
        'beginDate': value.beginDate,
        'endDate': value.endDate,
        'allocationType': (0, AllocationType_1.AllocationTypeToJSON)(value.allocationType),
        'incrementFlag': value.incrementFlag,
        'blockInventory': (0, BlockGridInvType_1.BlockGridInvTypeToJSON)(value.blockInventory),
        'blockRates': (0, BlockGridRatesType_1.BlockGridRatesTypeToJSON)(value.blockRates),
        'cutoffDate': value.cutoffDate,
        'cutoffDays': value.cutoffDays,
        'overrideCutoffSchedule': value.overrideCutoffSchedule,
        'includedDays': value.includedDays,
        'rangeMode': (0, BlockRangeModeType_1.BlockRangeModeTypeToJSON)(value.rangeMode),
        'overbookList': value.overbookList === undefined ? undefined : (value.overbookList.map(BlockAllocationRangeTypeOverbookListInner_1.BlockAllocationRangeTypeOverbookListInnerToJSON)),
        'genericRoomType': value.genericRoomType,
    };
}
exports.BlockAllocationRangeTypeToJSON = BlockAllocationRangeTypeToJSON;
