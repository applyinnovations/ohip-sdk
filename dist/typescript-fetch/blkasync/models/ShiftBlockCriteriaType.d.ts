/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ShiftBlockCriteriaType
 */
export interface ShiftBlockCriteriaType {
    /**
     * New start date of the business block.
     * @type {string}
     * @memberof ShiftBlockCriteriaType
     */
    newStartDate?: string;
    /**
     * When true, this will remove alternate dates for this block before shifting dates.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    removeAlternateDates?: boolean;
    /**
     * When true, this will validate alternate dates for this block before shifting dates.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    validateAlternateDates?: boolean;
    /**
     * When true, this will overbook allocated rooms if needed.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    overbookAll?: boolean;
    /**
     * When true, this will validate if there are rooms pre-allocated before shifting the block dates.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    validatePreAllocatedRooms?: boolean;
    /**
     * When true, this will validate if there are active traces before shifting the block dates.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    validateTraces?: boolean;
    /**
     * Indicates whether to ignore any warning during applying the changes to the events associated with the current block.
     * @type {boolean}
     * @memberof ShiftBlockCriteriaType
     */
    overrideEventsProcessingWarnings?: boolean;
}
/**
 * Check if a given object implements the ShiftBlockCriteriaType interface.
 */
export declare function instanceOfShiftBlockCriteriaType(value: object): boolean;
export declare function ShiftBlockCriteriaTypeFromJSON(json: any): ShiftBlockCriteriaType;
export declare function ShiftBlockCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShiftBlockCriteriaType;
export declare function ShiftBlockCriteriaTypeToJSON(value?: ShiftBlockCriteriaType | null): any;
