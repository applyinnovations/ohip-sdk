"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PersonNameTypeToJSON = exports.PersonNameTypeFromJSONTyped = exports.PersonNameTypeFromJSON = exports.instanceOfPersonNameType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the PersonNameType interface.
 */
function instanceOfPersonNameType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPersonNameType = instanceOfPersonNameType;
function PersonNameTypeFromJSON(json) {
    return PersonNameTypeFromJSONTyped(json, false);
}
exports.PersonNameTypeFromJSON = PersonNameTypeFromJSON;
function PersonNameTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'givenName': !(0, runtime_1.exists)(json, 'givenName') ? undefined : json['givenName'],
        'surname': !(0, runtime_1.exists)(json, 'surname') ? undefined : json['surname'],
    };
}
exports.PersonNameTypeFromJSONTyped = PersonNameTypeFromJSONTyped;
function PersonNameTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'givenName': value.givenName,
        'surname': value.surname,
    };
}
exports.PersonNameTypeToJSON = PersonNameTypeToJSON;
