"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockGridRatesTypeToJSON = exports.BlockGridRatesTypeFromJSONTyped = exports.BlockGridRatesTypeFromJSON = exports.instanceOfBlockGridRatesType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the BlockGridRatesType interface.
 */
function instanceOfBlockGridRatesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockGridRatesType = instanceOfBlockGridRatesType;
function BlockGridRatesTypeFromJSON(json) {
    return BlockGridRatesTypeFromJSONTyped(json, false);
}
exports.BlockGridRatesTypeFromJSON = BlockGridRatesTypeFromJSON;
function BlockGridRatesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'extraPerson': !(0, runtime_1.exists)(json, 'extraPerson') ? undefined : json['extraPerson'],
        'fourPerson': !(0, runtime_1.exists)(json, 'fourPerson') ? undefined : json['fourPerson'],
        'onePerson': !(0, runtime_1.exists)(json, 'onePerson') ? undefined : json['onePerson'],
        'threePerson': !(0, runtime_1.exists)(json, 'threePerson') ? undefined : json['threePerson'],
        'twoPerson': !(0, runtime_1.exists)(json, 'twoPerson') ? undefined : json['twoPerson'],
    };
}
exports.BlockGridRatesTypeFromJSONTyped = BlockGridRatesTypeFromJSONTyped;
function BlockGridRatesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'extraPerson': value.extraPerson,
        'fourPerson': value.fourPerson,
        'onePerson': value.onePerson,
        'threePerson': value.threePerson,
        'twoPerson': value.twoPerson,
    };
}
exports.BlockGridRatesTypeToJSON = BlockGridRatesTypeToJSON;
