"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockProfilesTypeToJSON = exports.BlockProfilesTypeFromJSONTyped = exports.BlockProfilesTypeFromJSON = exports.instanceOfBlockProfilesType = void 0;
const runtime_1 = require("../runtime");
const BlockProfileTypeType_1 = require("./BlockProfileTypeType");
const ProfileType_1 = require("./ProfileType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the BlockProfilesType interface.
 */
function instanceOfBlockProfilesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockProfilesType = instanceOfBlockProfilesType;
function BlockProfilesTypeFromJSON(json) {
    return BlockProfilesTypeFromJSONTyped(json, false);
}
exports.BlockProfilesTypeFromJSON = BlockProfilesTypeFromJSON;
function BlockProfilesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'profileIdList': !(0, runtime_1.exists)(json, 'profileIdList') ? undefined : (json['profileIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'profile': !(0, runtime_1.exists)(json, 'profile') ? undefined : (0, ProfileType_1.ProfileTypeFromJSON)(json['profile']),
        'blockProfileType': !(0, runtime_1.exists)(json, 'blockProfileType') ? undefined : (0, BlockProfileTypeType_1.BlockProfileTypeTypeFromJSON)(json['blockProfileType']),
    };
}
exports.BlockProfilesTypeFromJSONTyped = BlockProfilesTypeFromJSONTyped;
function BlockProfilesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'profileIdList': value.profileIdList === undefined ? undefined : (value.profileIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'profile': (0, ProfileType_1.ProfileTypeToJSON)(value.profile),
        'blockProfileType': (0, BlockProfileTypeType_1.BlockProfileTypeTypeToJSON)(value.blockProfileType),
    };
}
exports.BlockProfilesTypeToJSON = BlockProfilesTypeToJSON;
