/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RoomAllocationDateType } from './RoomAllocationDateType';
/**
 *
 * @export
 * @interface BlockAllocationSummaryType
 */
export interface BlockAllocationSummaryType {
    /**
     *
     * @type {Array<RoomAllocationDateType>}
     * @memberof BlockAllocationSummaryType
     */
    allocationDates?: Array<RoomAllocationDateType>;
    /**
     * Defined block code for the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockCode?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    blockId?: number;
    /**
     * Name of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockName?: string;
    /**
     * Indicates the internal type of the block like G, etc.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    blockType?: string;
    /**
     * Code that idenfies the reason for cancellation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cancellationCode?: string;
    /**
     * Cancellation Date.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cancellationDate?: string;
    /**
     * Description that explains the reason for cancellation.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cancellationDescription?: string;
    /**
     * Catering Owner
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwner?: number;
    /**
     * Primary Catering Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwnerCode?: string;
    /**
     * Property of Catering Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cateringOwnerResort?: string;
    /**
     * The business date the block was created.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    createDateTime?: string;
    /**
     *
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    cutOffDate?: string;
    /**
     *
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    cutOffDays?: number;
    /**
     *
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    endDate?: string;
    /**
     * Date Time when the block was modified last.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    lastModifiedDate?: string;
    /**
     * Market Code of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    marketCode?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    masterBlockId?: number;
    /**
     * Owner ID
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    owner?: number;
    /**
     * Block Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ownerCode?: string;
    /**
     * Property of Business Block Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ownerResort?: string;
    /**
     * Rate code associated with Block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    ratePlanCode?: string;
    /**
     * Booking Method.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    reservationMethod?: string;
    /**
     * Rooms Owner
     * @type {number}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwner?: number;
    /**
     * Primary Rooms Owner Code
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwnerCode?: string;
    /**
     * Property of Rooms Owner
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    roomsOwnerResort?: string;
    /**
     * Source of the Block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    sourceCode?: string;
    /**
     *
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    startDate?: string;
    /**
     * Booking Status of the block.
     * @type {string}
     * @memberof BlockAllocationSummaryType
     */
    status?: string;
}
/**
 * Check if a given object implements the BlockAllocationSummaryType interface.
 */
export declare function instanceOfBlockAllocationSummaryType(value: object): boolean;
export declare function BlockAllocationSummaryTypeFromJSON(json: any): BlockAllocationSummaryType;
export declare function BlockAllocationSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockAllocationSummaryType;
export declare function BlockAllocationSummaryTypeToJSON(value?: BlockAllocationSummaryType | null): any;
