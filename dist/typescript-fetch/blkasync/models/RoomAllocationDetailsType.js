"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomAllocationDetailsTypeToJSON = exports.RoomAllocationDetailsTypeFromJSONTyped = exports.RoomAllocationDetailsTypeFromJSON = exports.instanceOfRoomAllocationDetailsType = void 0;
const runtime_1 = require("../runtime");
const BlockActualRevenueType_1 = require("./BlockActualRevenueType");
const BlockGridInvType_1 = require("./BlockGridInvType");
const BlockGridRatesType_1 = require("./BlockGridRatesType");
const BlockPotenitalRevenueType_1 = require("./BlockPotenitalRevenueType");
/**
 * Check if a given object implements the RoomAllocationDetailsType interface.
 */
function instanceOfRoomAllocationDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomAllocationDetailsType = instanceOfRoomAllocationDetailsType;
function RoomAllocationDetailsTypeFromJSON(json) {
    return RoomAllocationDetailsTypeFromJSONTyped(json, false);
}
exports.RoomAllocationDetailsTypeFromJSON = RoomAllocationDetailsTypeFromJSON;
function RoomAllocationDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'originalRooms': !(0, runtime_1.exists)(json, 'originalRooms') ? undefined : json['originalRooms'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'currentRooms': !(0, runtime_1.exists)(json, 'currentRooms') ? undefined : json['currentRooms'],
        'pickupRooms': !(0, runtime_1.exists)(json, 'pickupRooms') ? undefined : json['pickupRooms'],
        'inventory': !(0, runtime_1.exists)(json, 'inventory') ? undefined : (0, BlockGridInvType_1.BlockGridInvTypeFromJSON)(json['inventory']),
        'rates': !(0, runtime_1.exists)(json, 'rates') ? undefined : (0, BlockGridRatesType_1.BlockGridRatesTypeFromJSON)(json['rates']),
        'actualRevenue': !(0, runtime_1.exists)(json, 'actualRevenue') ? undefined : (0, BlockActualRevenueType_1.BlockActualRevenueTypeFromJSON)(json['actualRevenue']),
        'potentialRevenue': !(0, runtime_1.exists)(json, 'potentialRevenue') ? undefined : (0, BlockPotenitalRevenueType_1.BlockPotenitalRevenueTypeFromJSON)(json['potentialRevenue']),
    };
}
exports.RoomAllocationDetailsTypeFromJSONTyped = RoomAllocationDetailsTypeFromJSONTyped;
function RoomAllocationDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'originalRooms': value.originalRooms,
        'roomType': value.roomType,
        'currentRooms': value.currentRooms,
        'pickupRooms': value.pickupRooms,
        'inventory': (0, BlockGridInvType_1.BlockGridInvTypeToJSON)(value.inventory),
        'rates': (0, BlockGridRatesType_1.BlockGridRatesTypeToJSON)(value.rates),
        'actualRevenue': (0, BlockActualRevenueType_1.BlockActualRevenueTypeToJSON)(value.actualRevenue),
        'potentialRevenue': (0, BlockPotenitalRevenueType_1.BlockPotenitalRevenueTypeToJSON)(value.potentialRevenue),
    };
}
exports.RoomAllocationDetailsTypeToJSON = RoomAllocationDetailsTypeToJSON;
