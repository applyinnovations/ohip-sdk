/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Allocation, AllocationRanges, BlockAllocationSummaryType, BlockToShift, Criteria, InstanceLink, ProcessDetails } from '../models/index';
export interface GetAllocationRangesProcessInfoRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetAllocationRangesProcessStatusRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetBlockAllocationProcessInfoRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetBlockAllocationProcessStatusRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetBlockAllocationSummaryRequest {
    requestId: string;
    hotelId: string;
    extSystemCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetBlockAllocationSummaryProcessStatusRequest {
    requestId: string;
    extSystemCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetShiftBlockProcessInfoRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface GetShiftBlockProcessStatusRequest {
    hotelId: string;
    blockId: string;
    requestId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    acceptLanguage?: string;
}
export interface StartAllocationRangesProcessRequest {
    hotelId: string;
    blockId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    allocationRanges: AllocationRanges;
    acceptLanguage?: string;
}
export interface StartBlockAllocationProcessRequest {
    hotelId: string;
    blockId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    allocation: Allocation;
    acceptLanguage?: string;
}
export interface StartBlockAllocationSummaryProcessRequest {
    hotelId: string;
    extSystemCode: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    criteria: Criteria;
    acceptLanguage?: string;
}
export interface StartShiftBlockProcessRequest {
    hotelId: string;
    blockId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockToShift: BlockToShift;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class BlockAsyncApi extends runtime.BaseAPI {
    /**
     * This API will fetch Block allocation ranges warnings for a hotel to allow for overbooking information to be returned as part of the response. <p><strong>OperationId:</strong>getAllocationRangesProcessInfo</p>
     * This API returns information about the set allocation ranges process.
     */
    getAllocationRangesProcessInfoRaw(requestParameters: GetAllocationRangesProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProcessDetails>>;
    /**
     * This API will fetch Block allocation ranges warnings for a hotel to allow for overbooking information to be returned as part of the response. <p><strong>OperationId:</strong>getAllocationRangesProcessInfo</p>
     * This API returns information about the set allocation ranges process.
     */
    getAllocationRangesProcessInfo(requestParameters: GetAllocationRangesProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProcessDetails>;
    /**
     *  <p><strong>OperationId:</strong>getAllocationRangesProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getAllocationRangesProcessStatusRaw(requestParameters: GetAllocationRangesProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     *  <p><strong>OperationId:</strong>getAllocationRangesProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getAllocationRangesProcessStatus(requestParameters: GetAllocationRangesProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * This API will fetch Block allocation warnings for a hotel to allow for overbooking information to be returned as part of the response. <p><strong>OperationId:</strong>getBlockAllocationProcessInfo</p>
     * This API returns information about the set allocation process.
     */
    getBlockAllocationProcessInfoRaw(requestParameters: GetBlockAllocationProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProcessDetails>>;
    /**
     * This API will fetch Block allocation warnings for a hotel to allow for overbooking information to be returned as part of the response. <p><strong>OperationId:</strong>getBlockAllocationProcessInfo</p>
     * This API returns information about the set allocation process.
     */
    getBlockAllocationProcessInfo(requestParameters: GetBlockAllocationProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProcessDetails>;
    /**
     *  <p><strong>OperationId:</strong>getBlockAllocationProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getBlockAllocationProcessStatusRaw(requestParameters: GetBlockAllocationProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     *  <p><strong>OperationId:</strong>getBlockAllocationProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getBlockAllocationProcessStatus(requestParameters: GetBlockAllocationProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * This API will fetch Block allocation information for a hotel, and specified date range.  The block allocated inventory, rates and room type statistics are returned as part of the response. <p><strong>OperationId:</strong>getBlockAllocationSummary</p>
     * This API returns a hotel\'s block allocation summary for a scheduled process.
     */
    getBlockAllocationSummaryRaw(requestParameters: GetBlockAllocationSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BlockAllocationSummaryType>>>;
    /**
     * This API will fetch Block allocation information for a hotel, and specified date range.  The block allocated inventory, rates and room type statistics are returned as part of the response. <p><strong>OperationId:</strong>getBlockAllocationSummary</p>
     * This API returns a hotel\'s block allocation summary for a scheduled process.
     */
    getBlockAllocationSummary(requestParameters: GetBlockAllocationSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BlockAllocationSummaryType>>;
    /**
     *  <p><strong>OperationId:</strong>getBlockAllocationSummaryProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getBlockAllocationSummaryProcessStatusRaw(requestParameters: GetBlockAllocationSummaryProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     *  <p><strong>OperationId:</strong>getBlockAllocationSummaryProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getBlockAllocationSummaryProcessStatus(requestParameters: GetBlockAllocationSummaryProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * This API will fetch shift Block warnings and errors to be returned as part of the response. <p><strong>OperationId:</strong>getShiftBlockProcessInfo</p>
     * This API returns information about the shift block process.
     */
    getShiftBlockProcessInfoRaw(requestParameters: GetShiftBlockProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProcessDetails>>;
    /**
     * This API will fetch shift Block warnings and errors to be returned as part of the response. <p><strong>OperationId:</strong>getShiftBlockProcessInfo</p>
     * This API returns information about the shift block process.
     */
    getShiftBlockProcessInfo(requestParameters: GetShiftBlockProcessInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProcessDetails>;
    /**
     *  <p><strong>OperationId:</strong>getShiftBlockProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getShiftBlockProcessStatusRaw(requestParameters: GetShiftBlockProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     *  <p><strong>OperationId:</strong>getShiftBlockProcessStatus</p>
     * This API returns the status of asynchronous process scheduled for given id.
     */
    getShiftBlockProcessStatus(requestParameters: GetShiftBlockProcessStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Use this API to set business block allocation for one or more date ranges, which are within business block date range, and for a list of room types. <p><strong>OperationId:</strong>startAllocationRangesProcess</p>
     * This API facilitates setting Block Allocation Ranges for a Hotel.
     */
    startAllocationRangesProcessRaw(requestParameters: StartAllocationRangesProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InstanceLink>>>;
    /**
     * Use this API to set business block allocation for one or more date ranges, which are within business block date range, and for a list of room types. <p><strong>OperationId:</strong>startAllocationRangesProcess</p>
     * This API facilitates setting Block Allocation Ranges for a Hotel.
     */
    startAllocationRangesProcess(requestParameters: StartAllocationRangesProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InstanceLink>>;
    /**
     * Use this API to add block room type allocations and rates to a specified Block. <p><strong>OperationId:</strong>startBlockAllocationProcess</p>
     * This API facilitates setting Block Allocations for a Hotel.
     */
    startBlockAllocationProcessRaw(requestParameters: StartBlockAllocationProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InstanceLink>>>;
    /**
     * Use this API to add block room type allocations and rates to a specified Block. <p><strong>OperationId:</strong>startBlockAllocationProcess</p>
     * This API facilitates setting Block Allocations for a Hotel.
     */
    startBlockAllocationProcess(requestParameters: StartBlockAllocationProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InstanceLink>>;
    /**
     * This API will fetch Block allocation information for a hotel, and specified date range. The block allocated inventory, rates and room type statistics are returned as part of the response. The maximum limit of date range (whether using start/endDate or startLastModifiedDate/endLastModifiedDate) is 94 days, but the recommendation is to use a date range proportionate to the size of the hotel.   Every identical request (employing the same query parameters) for the getBlockAllocationSummary operation when requesting data with start/endDate or startLastModifiedDate/endLastModifiedDate, necessitates a mandatory 30-minute interval between submissions. Please note that this limit applies regardless of whether the POST, HEAD, and GET cycle has been completed. The API returns a header parameter location that can be used in the getBlockAllocationSummaryProcessStatus operation.  Use event-driven APIs -(see https://docs.oracle.com/cd/F29336_01/doc.201/f27480/c_business_events.htm#OHIPU-BusinessEvents-F0AC1F1C) -to get real-time block updates. <p><strong>OperationId:</strong>startBlockAllocationSummaryProcess</p>
     * This API facilitates fetching block allocation summary for a Hotel.
     */
    startBlockAllocationSummaryProcessRaw(requestParameters: StartBlockAllocationSummaryProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InstanceLink>>>;
    /**
     * This API will fetch Block allocation information for a hotel, and specified date range. The block allocated inventory, rates and room type statistics are returned as part of the response. The maximum limit of date range (whether using start/endDate or startLastModifiedDate/endLastModifiedDate) is 94 days, but the recommendation is to use a date range proportionate to the size of the hotel.   Every identical request (employing the same query parameters) for the getBlockAllocationSummary operation when requesting data with start/endDate or startLastModifiedDate/endLastModifiedDate, necessitates a mandatory 30-minute interval between submissions. Please note that this limit applies regardless of whether the POST, HEAD, and GET cycle has been completed. The API returns a header parameter location that can be used in the getBlockAllocationSummaryProcessStatus operation.  Use event-driven APIs -(see https://docs.oracle.com/cd/F29336_01/doc.201/f27480/c_business_events.htm#OHIPU-BusinessEvents-F0AC1F1C) -to get real-time block updates. <p><strong>OperationId:</strong>startBlockAllocationSummaryProcess</p>
     * This API facilitates fetching block allocation summary for a Hotel.
     */
    startBlockAllocationSummaryProcess(requestParameters: StartBlockAllocationSummaryProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InstanceLink>>;
    /**
     * Use this API to move or shift the dates of a block in OPERA. <p><strong>OperationId:</strong>startShiftBlockProcess</p>
     * Shifts the Block start date.
     */
    startShiftBlockProcessRaw(requestParameters: StartShiftBlockProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<InstanceLink>>>;
    /**
     * Use this API to move or shift the dates of a block in OPERA. <p><strong>OperationId:</strong>startShiftBlockProcess</p>
     * Shifts the Block start date.
     */
    startShiftBlockProcess(requestParameters: StartShiftBlockProcessRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<InstanceLink>>;
}
