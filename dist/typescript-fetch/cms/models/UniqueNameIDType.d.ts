/**
 * OPERA Cloud API for Customer Management Service
 * This API deals with the different aspect of the CustomerManagement.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Defines descriptive name, unique identification, and basic information combination.
 * @export
 * @interface UniqueNameIDType
 */
export interface UniqueNameIDType {
    /**
     * Email address
     * @type {string}
     * @memberof UniqueNameIDType
     */
    email?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof UniqueNameIDType
     */
    id?: string;
    /**
     * Display name.
     * @type {string}
     * @memberof UniqueNameIDType
     */
    name?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof UniqueNameIDType
     */
    phoneNumber?: string;
    /**
     * When true, indicates a primary information.
     * @type {boolean}
     * @memberof UniqueNameIDType
     */
    primaryInd?: boolean;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof UniqueNameIDType
     */
    type?: string;
}
/**
 * Check if a given object implements the UniqueNameIDType interface.
 */
export declare function instanceOfUniqueNameIDType(value: object): boolean;
export declare function UniqueNameIDTypeFromJSON(json: any): UniqueNameIDType;
export declare function UniqueNameIDTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UniqueNameIDType;
export declare function UniqueNameIDTypeToJSON(value?: UniqueNameIDType | null): any;
