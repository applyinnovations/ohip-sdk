"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud API for Customer Management Service
 * This API deals with the different aspect of the CustomerManagement.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalendarTaskTypeToJSON = exports.CalendarTaskTypeFromJSONTyped = exports.CalendarTaskTypeFromJSON = exports.instanceOfCalendarTaskType = void 0;
const runtime_1 = require("../runtime");
const CalendarTaskClassType_1 = require("./CalendarTaskClassType");
const CalendarTaskPriorityType_1 = require("./CalendarTaskPriorityType");
const CalendarTaskTypeStatus_1 = require("./CalendarTaskTypeStatus");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const TimeSpanType_1 = require("./TimeSpanType");
const UniqueNameIDType_1 = require("./UniqueNameIDType");
/**
 * Check if a given object implements the CalendarTaskType interface.
 */
function instanceOfCalendarTaskType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCalendarTaskType = instanceOfCalendarTaskType;
function CalendarTaskTypeFromJSON(json) {
    return CalendarTaskTypeFromJSONTyped(json, false);
}
exports.CalendarTaskTypeFromJSON = CalendarTaskTypeFromJSON;
function CalendarTaskTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountIdList': !(0, runtime_1.exists)(json, 'accountIdList') ? undefined : (json['accountIdList'].map(UniqueNameIDType_1.UniqueNameIDTypeFromJSON)),
        'attachmentsCount': !(0, runtime_1.exists)(json, 'attachmentsCount') ? undefined : json['attachmentsCount'],
        'author': !(0, runtime_1.exists)(json, 'author') ? undefined : json['author'],
        'blockIdList': !(0, runtime_1.exists)(json, 'blockIdList') ? undefined : (json['blockIdList'].map(UniqueNameIDType_1.UniqueNameIDTypeFromJSON)),
        'classCode': !(0, runtime_1.exists)(json, 'classCode') ? undefined : (0, CalendarTaskClassType_1.CalendarTaskClassTypeFromJSON)(json['classCode']),
        'contactIdList': !(0, runtime_1.exists)(json, 'contactIdList') ? undefined : (json['contactIdList'].map(UniqueNameIDType_1.UniqueNameIDTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'idContext': !(0, runtime_1.exists)(json, 'idContext') ? undefined : json['idContext'],
        'idExtension': !(0, runtime_1.exists)(json, 'idExtension') ? undefined : json['idExtension'],
        'instance': !(0, runtime_1.exists)(json, 'instance') ? undefined : json['instance'],
        'notes': !(0, runtime_1.exists)(json, 'notes') ? undefined : json['notes'],
        'priorityInfo': !(0, runtime_1.exists)(json, 'priorityInfo') ? undefined : (0, CalendarTaskPriorityType_1.CalendarTaskPriorityTypeFromJSON)(json['priorityInfo']),
        'purpose': !(0, runtime_1.exists)(json, 'purpose') ? undefined : json['purpose'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, CalendarTaskTypeStatus_1.CalendarTaskTypeStatusFromJSON)(json['status']),
        'taskOwner': !(0, runtime_1.exists)(json, 'taskOwner') ? undefined : json['taskOwner'],
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'typeCode': !(0, runtime_1.exists)(json, 'typeCode') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['typeCode']),
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
    };
}
exports.CalendarTaskTypeFromJSONTyped = CalendarTaskTypeFromJSONTyped;
function CalendarTaskTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountIdList': value.accountIdList === undefined ? undefined : (value.accountIdList.map(UniqueNameIDType_1.UniqueNameIDTypeToJSON)),
        'attachmentsCount': value.attachmentsCount,
        'author': value.author,
        'blockIdList': value.blockIdList === undefined ? undefined : (value.blockIdList.map(UniqueNameIDType_1.UniqueNameIDTypeToJSON)),
        'classCode': (0, CalendarTaskClassType_1.CalendarTaskClassTypeToJSON)(value.classCode),
        'contactIdList': value.contactIdList === undefined ? undefined : (value.contactIdList.map(UniqueNameIDType_1.UniqueNameIDTypeToJSON)),
        'hotelId': value.hotelId,
        'id': value.id,
        'idContext': value.idContext,
        'idExtension': value.idExtension,
        'instance': value.instance,
        'notes': value.notes,
        'priorityInfo': (0, CalendarTaskPriorityType_1.CalendarTaskPriorityTypeToJSON)(value.priorityInfo),
        'purpose': value.purpose,
        'status': (0, CalendarTaskTypeStatus_1.CalendarTaskTypeStatusToJSON)(value.status),
        'taskOwner': value.taskOwner,
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
        'type': value.type,
        'typeCode': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.typeCode),
        'url': value.url,
    };
}
exports.CalendarTaskTypeToJSON = CalendarTaskTypeToJSON;
