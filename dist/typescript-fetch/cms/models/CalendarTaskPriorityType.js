"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud API for Customer Management Service
 * This API deals with the different aspect of the CustomerManagement.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalendarTaskPriorityTypeToJSON = exports.CalendarTaskPriorityTypeFromJSONTyped = exports.CalendarTaskPriorityTypeFromJSON = exports.instanceOfCalendarTaskPriorityType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const PriorityColorType_1 = require("./PriorityColorType");
/**
 * Check if a given object implements the CalendarTaskPriorityType interface.
 */
function instanceOfCalendarTaskPriorityType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCalendarTaskPriorityType = instanceOfCalendarTaskPriorityType;
function CalendarTaskPriorityTypeFromJSON(json) {
    return CalendarTaskPriorityTypeFromJSONTyped(json, false);
}
exports.CalendarTaskPriorityTypeFromJSON = CalendarTaskPriorityTypeFromJSON;
function CalendarTaskPriorityTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['code']),
        'priorityColor': !(0, runtime_1.exists)(json, 'priorityColor') ? undefined : (0, PriorityColorType_1.PriorityColorTypeFromJSON)(json['priorityColor']),
    };
}
exports.CalendarTaskPriorityTypeFromJSONTyped = CalendarTaskPriorityTypeFromJSONTyped;
function CalendarTaskPriorityTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.code),
        'priorityColor': (0, PriorityColorType_1.PriorityColorTypeToJSON)(value.priorityColor),
    };
}
exports.CalendarTaskPriorityTypeToJSON = CalendarTaskPriorityTypeToJSON;
