/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BlockRatePlans, CreateBestAvailableRates, DailyRatePlanScheduleRange, DistributedNegotiatedRates, GetBestAvailableRatesDetails, HotelPackageForecastGroups, HotelPackageForecastGroupsToChange, HotelPackageForecastGroupsToCreate, MassRateChangeStatus, MassRatePlanSchedules, NegotiatedRates, NegotiatedRatesDetails, OperaVersion, PackageFormulaRanges, PackageGroup, PackageGroupsInfo, PackageInfo, PackageRates, PackagesCopy, PackagesInfo, PromotionGroup, PromotionGroups, PromotionGroupsCopy, PropertyPromotionCode, PropertyPromotionCodes, RateAccessExclusions, RateActivityLog, RateGroups, RateGroupsInfo, RatePlan, RatePlanInfo, RatePlanPackages, RatePlanPostingRhythms, RatePlanScheduleToSplit, RatePlanScheduleYieldAdjustments, RatePlanSchedules, RatePlanSchedulesInfo, RatePlanSchedulesToCreate, RatePlansCopy, RatePlansCopyDetails, RatePlansSchedulesToManage, RatePlansSummary, RateStrategies, RateStrategiesToSet, RateStrategy, Status, TemplatePackageForecastGroups, TemplatePromotionCode, TemplatePromotionCodes, TieredRateSchedulesCopy, YieldAdjustments } from '../models/index';
export interface CopyPackagesRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packagesCopy: PackagesCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyPromotionGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    promotionGroupsCopy: PromotionGroupsCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyRatePlansRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlansCopy: RatePlansCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyTieredRateSchedulesRequest {
    destinationTierId: string;
    sourceTierId: string;
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    tieredRateSchedulesCopy: TieredRateSchedulesCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteBestAvailableRatesRequest {
    hotelId: string;
    code: Array<string>;
    end: Date;
    start: Date;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    lOS1?: boolean;
    lOS2?: boolean;
    lOS3?: boolean;
    lOS4?: boolean;
    lOS5?: boolean;
    lOS6?: boolean;
    lOS7?: boolean;
    lOS8?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteDailyRatePlanScheduleRangeRequest {
    ratePlanCode: string;
    hotelId: string;
    startDate: Date;
    endDate: Date;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    duration?: string;
    advancedDailyBaseRatePlanCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteHotelPackageForecastGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    code?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteMassRateChangeLogRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteNegotiatedRatesRequest {
    ratePlanId: string;
    startDate: string;
    profileId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePackageRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePackageFormulaRangesRequest {
    packageFormulaRangeId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    amount?: number;
    currencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePackageGroupsRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePromotionGroupRequest {
    groupCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRateAccessExclusionsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateCode?: string;
    allowCancelReservation?: Array<boolean>;
    allowCreateReservation?: Array<boolean>;
    allowModifyReservation?: Array<boolean>;
    excludeFromAvailability?: Array<boolean>;
    inactive?: Array<boolean>;
    sourceType?: Array<string>;
    sourceValue?: Array<string>;
    end?: Date;
    start?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRateGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRatePlanRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRatePlanPackagesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageCode?: Array<string>;
    packageGroup?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRatePlanPostingRhythmsRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    code?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRatePlanSchedulesRequest {
    ratePlanCode: string;
    hotelId: string;
    ratePlanScheduleIds: Array<string>;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    tierID?: number;
    seasonCode?: string;
    start?: Date;
    end?: Date;
    roomType?: Array<string>;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRatePlanServiceCacheRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRateStrategyRequest {
    rateStrategyId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTemplatePackageForecastGroupsRequest {
    packageForecastGroupCode: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DistributeNegotiatedRatesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    distributedNegotiatedRates: DistributedNegotiatedRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DownloadExternalRatePlanRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBestAvailableRatesRequest {
    hotelId: string;
    startDay: Date;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    rateCode?: Array<string>;
    endDay?: Date;
    daysOfWeek?: Set<GetBestAvailableRatesDaysOfWeekEnum>;
    lengthOfStay?: Set<GetBestAvailableRatesLengthOfStayEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelPackageForecastGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    hotelIds?: Array<string>;
    limit?: number;
    offset?: number;
    packageForecastGroupCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMassRateChangeStatusRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    detailStatus?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetNegotiatedRatesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    startDate?: Date;
    endDate?: Date;
    includeInactiveNegotiatedRates?: boolean;
    fetchInstructionsLimit?: number;
    fetchInstructions?: Set<GetNegotiatedRatesFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetNegotiatedRatesForGivenHotelAndRateRequest {
    rateCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    startDate?: Date;
    endDate?: Date;
    includeInactiveNegotiatedRates?: boolean;
    fetchInstructionsLimit?: number;
    fetchInstructions?: Set<GetNegotiatedRatesForGivenHotelAndRateFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetNegotiatedRatesForGivenProfileRequest {
    profileId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    startDate?: Date;
    endDate?: Date;
    hotelCode?: string;
    ratePlanCode?: string;
    includeInactiveNegotiatedRates?: boolean;
    fetchInstructionsLimit?: number;
    fetchInstructions?: Set<GetNegotiatedRatesForGivenProfileFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPackageRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    fetchInstructions?: Set<GetPackageFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPackageFormulaRangesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    taxRangeType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPackageGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    hotelIds?: Array<string>;
    limit?: number;
    code?: string;
    descriptionWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPackageRatesRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPackagesRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    hotelId?: Array<string>;
    packageCode?: Array<string>;
    descriptionWildCard?: string;
    startDate?: Date;
    endDate?: Date;
    adults?: number;
    children?: number;
    bucket1Count?: number;
    bucket2Count?: number;
    bucket3Count?: number;
    bucket4Count?: number;
    bucket5Count?: number;
    includeGroup?: boolean;
    sellSeparate?: boolean;
    ticketPostingRhythm?: boolean;
    excludeRedemptionPackages?: boolean;
    fetchInstructions?: Set<GetPackagesFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPromotionCodesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    promotionCode?: Array<string>;
    promotionGroup?: Array<string>;
    rateCodes?: string;
    description?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPromotionGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    code?: Array<string>;
    promotionGroupListCode?: Array<string>;
    rateCodes?: string;
    description?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRateActivityLogRequest {
    hotelId: string;
    module: GetRateActivityLogModuleEnum;
    parameterName: Array<string>;
    parameterValue: Array<string>;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    activityGroup?: string;
    activityType?: string;
    fromDate?: Date;
    toDate?: Date;
    searchText?: string;
    userId?: Array<number>;
    userForIdsUserId?: Array<number>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRateGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    code?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlanRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    fetchInstructions?: Set<GetRatePlanFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlanScheduleYieldAdjustmentsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    summaryInfo?: boolean;
    id?: string;
    ratePlanCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlanSchedulesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    excludeRatePlanPackage?: boolean;
    limit?: number;
    tierId?: number;
    ratePlanScheduleId?: string;
    ratePlanScheduleIdType?: string;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlansRequest {
    hotelId: Array<string>;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    includeRateInformation?: boolean;
    limit?: number;
    offset?: number;
    ratePlanCode?: Array<string>;
    rateCategory?: Array<string>;
    sellDate?: Date;
    displaySet?: string;
    id?: string;
    idExtension?: number;
    idContext?: string;
    type?: string;
    attributeName?: Array<string>;
    orderType?: Set<GetRatePlansOrderTypeEnum>;
    includeInactive?: boolean;
    dayUseOnly?: boolean;
    approvalStatus?: GetRatePlansApprovalStatusEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlansByHotelRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanCode?: string;
    fetchInstructions?: Set<GetRatePlansByHotelFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRatePlansForBlockRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanCode?: Array<string>;
    beginDate?: Date;
    endDate?: Date;
    companyId?: string;
    companyIdType?: string;
    sourceId?: string;
    sourceIdType?: string;
    agentId?: string;
    agentIdType?: string;
    negotiatedOnly?: boolean;
    currencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRateStrategiesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    restrictionDate?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplatePackageForecastGroupsRequest {
    includeInactive: boolean;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageForecastGroupCode?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplatePromotionCodesRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    offset?: number;
    hotelId?: Array<string>;
    promotionCode?: Array<string>;
    promotionGroup?: Array<string>;
    rateCodes?: string;
    description?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetYieldAdjustmentsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    currencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ManageRatePlansSchedulesRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlansSchedulesToManage: RatePlansSchedulesToManage;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PingRatePlanServiceRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBestAvailableRatesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    createBestAvailableRates: CreateBestAvailableRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelPackageForecastGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    hotelPackageForecastGroupsToCreate: HotelPackageForecastGroupsToCreate;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostNegotiatedRatesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    negotiatedRates: NegotiatedRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPackageRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageInfo: PackageInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPackageFormulaRangesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageFormulaRanges: PackageFormulaRanges;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPackageGroupRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageGroup: PackageGroup;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPromotionCodeRequest {
    promotionCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    propertyPromotionCode: PropertyPromotionCode;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPromotionGroupRequest {
    groupCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    promotionGroup: PromotionGroup;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRateGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateGroups: RateGroups;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRatePlanRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlan: RatePlan;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRatePlanPackagesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanPackages: RatePlanPackages;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRatePlanPostingRhythmsRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanPostingRhythms: RatePlanPostingRhythms;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRatePlanSchedulesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanSchedulesToCreate: RatePlanSchedulesToCreate;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRateStrategyRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateStrategy: RateStrategy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplatePackageForecastGroupsRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    templatePackageForecastGroups: TemplatePackageForecastGroups;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplatePromotionCodeRequest {
    promotionCode: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    templatePromotionCode: TemplatePromotionCode;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutHotelPackageForecastGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    hotelPackageForecastGroupsToChange: HotelPackageForecastGroupsToChange;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutNegotiatedRatesRequest {
    rateCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    negotiatedRates: NegotiatedRates;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPackageRequest {
    packageCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageInfo: PackageInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPackageFormulaRangesRequest {
    packageFormulaRangeId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageFormulaRanges: PackageFormulaRanges;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPackageGroupRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    packageGroup: PackageGroup;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPromotionCodeRequest {
    promotionCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    propertyPromotionCode: PropertyPromotionCode;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPromotionGroupRequest {
    groupCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    promotionGroup: PromotionGroup;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRateGroupsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateGroups: RateGroups;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRatePlanRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlan: RatePlan;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRatePlanPackagesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanPackages: RatePlanPackages;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRatePlanPostingRhythmsRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanPostingRhythms: RatePlanPostingRhythms;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRatePlanSchedulesRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanSchedules: RatePlanSchedules;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRateStrategyRequest {
    rateStrategyId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateStrategy: RateStrategy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTemplatePackageForecastGroupsRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    templatePackageForecastGroups: TemplatePackageForecastGroups;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTemplatePromotionCodeRequest {
    promotionCode: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    templatePromotionCode: TemplatePromotionCode;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetDailyRatePlanScheduleRangeRequest {
    ratePlanCode: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    dailyRatePlanScheduleRange: DailyRatePlanScheduleRange;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetMassRatePlanSchedulesRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    massRatePlanSchedules: MassRatePlanSchedules;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetRateAccessExclusionsRequest {
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateAccessExclusions: RateAccessExclusions;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetRateStrategiesRequest {
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    rateStrategiesToSet: RateStrategiesToSet;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SplitRatePlanScheduleRequest {
    scheduleId: string;
    hotelId: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    ratePlanScheduleToSplit: RatePlanScheduleToSplit;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class RatePlanApi extends runtime.BaseAPI {
    /**
     * This API allows you to copy package codes(s) from one hotel to another. <p><strong>OperationId:</strong>copyPackages</p>
     * Copy package code(s)
     */
    copyPackagesRaw(requestParameters: CopyPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to copy package codes(s) from one hotel to another. <p><strong>OperationId:</strong>copyPackages</p>
     * Copy package code(s)
     */
    copyPackages(requestParameters: CopyPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to copy promotions groups. <p><strong>OperationId:</strong>copyPromotionGroups</p>
     * Copy promotion groups
     */
    copyPromotionGroupsRaw(requestParameters: CopyPromotionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to copy promotions groups. <p><strong>OperationId:</strong>copyPromotionGroups</p>
     * Copy promotion groups
     */
    copyPromotionGroups(requestParameters: CopyPromotionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to copy Rate Plans. <p><strong>OperationId:</strong>copyRatePlans</p>
     * Copy rate plans
     */
    copyRatePlansRaw(requestParameters: CopyRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlansCopyDetails>>;
    /**
     * This API allows you to copy Rate Plans. <p><strong>OperationId:</strong>copyRatePlans</p>
     * Copy rate plans
     */
    copyRatePlans(requestParameters: CopyRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlansCopyDetails>;
    /**
     * This API allows you to copy tiered rate schedules. <p><strong>OperationId:</strong>copyTieredRateSchedules</p>
     * Copy tiered rate schedules
     */
    copyTieredRateSchedulesRaw(requestParameters: CopyTieredRateSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to copy tiered rate schedules. <p><strong>OperationId:</strong>copyTieredRateSchedules</p>
     * Copy tiered rate schedules
     */
    copyTieredRateSchedules(requestParameters: CopyTieredRateSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>deleteBestAvailableRates</p>
     * Delete Best Available Rates
     */
    deleteBestAvailableRatesRaw(requestParameters: DeleteBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>deleteBestAvailableRates</p>
     * Delete Best Available Rates
     */
    deleteBestAvailableRates(requestParameters: DeleteBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete daily Rate Plan schedules. <p><strong>OperationId:</strong>deleteDailyRatePlanScheduleRange</p>
     * Delete daily rate plan schedule range
     */
    deleteDailyRatePlanScheduleRangeRaw(requestParameters: DeleteDailyRatePlanScheduleRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete daily Rate Plan schedules. <p><strong>OperationId:</strong>deleteDailyRatePlanScheduleRange</p>
     * Delete daily rate plan schedule range
     */
    deleteDailyRatePlanScheduleRange(requestParameters: DeleteDailyRatePlanScheduleRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete package forecast groups. <p><strong>OperationId:</strong>deleteHotelPackageForecastGroups</p>
     * Delete Hotel Package Forecast Groups
     */
    deleteHotelPackageForecastGroupsRaw(requestParameters: DeleteHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete package forecast groups. <p><strong>OperationId:</strong>deleteHotelPackageForecastGroups</p>
     * Delete Hotel Package Forecast Groups
     */
    deleteHotelPackageForecastGroups(requestParameters: DeleteHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete mass rate change log. <p><strong>OperationId:</strong>deleteMassRateChangeLog</p>
     * Delete mass rate change log
     */
    deleteMassRateChangeLogRaw(requestParameters: DeleteMassRateChangeLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete mass rate change log. <p><strong>OperationId:</strong>deleteMassRateChangeLog</p>
     * Delete mass rate change log
     */
    deleteMassRateChangeLog(requestParameters: DeleteMassRateChangeLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete negotiated rate. <p><strong>OperationId:</strong>deleteNegotiatedRates</p>
     * Delete negotiated rates
     */
    deleteNegotiatedRatesRaw(requestParameters: DeleteNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete negotiated rate. <p><strong>OperationId:</strong>deleteNegotiatedRates</p>
     * Delete negotiated rates
     */
    deleteNegotiatedRates(requestParameters: DeleteNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete a package. <p><strong>OperationId:</strong>deletePackage</p>
     * Delete the package
     */
    deletePackageRaw(requestParameters: DeletePackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete a package. <p><strong>OperationId:</strong>deletePackage</p>
     * Delete the package
     */
    deletePackage(requestParameters: DeletePackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete package formula ranges. <p><strong>OperationId:</strong>deletePackageFormulaRanges</p>
     * Delete package formula ranges
     */
    deletePackageFormulaRangesRaw(requestParameters: DeletePackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete package formula ranges. <p><strong>OperationId:</strong>deletePackageFormulaRanges</p>
     * Delete package formula ranges
     */
    deletePackageFormulaRanges(requestParameters: DeletePackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete package group. <p><strong>OperationId:</strong>deletePackageGroups</p>
     * Delete package group
     */
    deletePackageGroupsRaw(requestParameters: DeletePackageGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete package group. <p><strong>OperationId:</strong>deletePackageGroups</p>
     * Delete package group
     */
    deletePackageGroups(requestParameters: DeletePackageGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete promotion groups. <p><strong>OperationId:</strong>deletePromotionGroup</p>
     * Delete promotion groups
     */
    deletePromotionGroupRaw(requestParameters: DeletePromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete promotion groups. <p><strong>OperationId:</strong>deletePromotionGroup</p>
     * Delete promotion groups
     */
    deletePromotionGroup(requestParameters: DeletePromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete rate access exclusions. <p><strong>OperationId:</strong>deleteRateAccessExclusions</p>
     * Delete rate access exclusions
     */
    deleteRateAccessExclusionsRaw(requestParameters: DeleteRateAccessExclusionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete rate access exclusions. <p><strong>OperationId:</strong>deleteRateAccessExclusions</p>
     * Delete rate access exclusions
     */
    deleteRateAccessExclusions(requestParameters: DeleteRateAccessExclusionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete rate groups. <p><strong>OperationId:</strong>deleteRateGroups</p>
     * Delete rate groups
     */
    deleteRateGroupsRaw(requestParameters: DeleteRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete rate groups. <p><strong>OperationId:</strong>deleteRateGroups</p>
     * Delete rate groups
     */
    deleteRateGroups(requestParameters: DeleteRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete Rate Plan for a given hotel id. <p><strong>OperationId:</strong>deleteRatePlan</p>
     * Delete rate plan
     */
    deleteRatePlanRaw(requestParameters: DeleteRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete Rate Plan for a given hotel id. <p><strong>OperationId:</strong>deleteRatePlan</p>
     * Delete rate plan
     */
    deleteRatePlan(requestParameters: DeleteRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete Rate Plan package. <p><strong>OperationId:</strong>deleteRatePlanPackages</p>
     * Delete rate plan packages
     */
    deleteRatePlanPackagesRaw(requestParameters: DeleteRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete Rate Plan package. <p><strong>OperationId:</strong>deleteRatePlanPackages</p>
     * Delete rate plan packages
     */
    deleteRatePlanPackages(requestParameters: DeleteRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete Rate Plan posting rhythms. <p><strong>OperationId:</strong>deleteRatePlanPostingRhythms</p>
     * Delete rate plan posting rhythms
     */
    deleteRatePlanPostingRhythmsRaw(requestParameters: DeleteRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete Rate Plan posting rhythms. <p><strong>OperationId:</strong>deleteRatePlanPostingRhythms</p>
     * Delete rate plan posting rhythms
     */
    deleteRatePlanPostingRhythms(requestParameters: DeleteRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Rate Plan schedules.<p><strong>OperationId:</strong>deleteRatePlanSchedules</p>
     * Delete rate plan schedule
     */
    deleteRatePlanSchedulesRaw(requestParameters: DeleteRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Rate Plan schedules.<p><strong>OperationId:</strong>deleteRatePlanSchedules</p>
     * Delete rate plan schedule
     */
    deleteRatePlanSchedules(requestParameters: DeleteRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete Rate Plan service cache. <p><strong>OperationId:</strong>deleteRatePlanServiceCache</p>
     * Delete the Rate plan service cache
     */
    deleteRatePlanServiceCacheRaw(requestParameters: DeleteRatePlanServiceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete Rate Plan service cache. <p><strong>OperationId:</strong>deleteRatePlanServiceCache</p>
     * Delete the Rate plan service cache
     */
    deleteRatePlanServiceCache(requestParameters: DeleteRatePlanServiceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete rate strategies. <p><strong>OperationId:</strong>deleteRateStrategy</p>
     * Delete rate strategies
     */
    deleteRateStrategyRaw(requestParameters: DeleteRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete rate strategies. <p><strong>OperationId:</strong>deleteRateStrategy</p>
     * Delete rate strategies
     */
    deleteRateStrategy(requestParameters: DeleteRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete Package Forecast groups template. <p><strong>OperationId:</strong>deleteTemplatePackageForecastGroups</p>
     * Delete Template Package Forecast Groups
     */
    deleteTemplatePackageForecastGroupsRaw(requestParameters: DeleteTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete Package Forecast groups template. <p><strong>OperationId:</strong>deleteTemplatePackageForecastGroups</p>
     * Delete Template Package Forecast Groups
     */
    deleteTemplatePackageForecastGroups(requestParameters: DeleteTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to distribute negotiated Rate. <p><strong>OperationId:</strong>distributeNegotiatedRates</p>
     * Distribute negotiated rates
     */
    distributeNegotiatedRatesRaw(requestParameters: DistributeNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to distribute negotiated Rate. <p><strong>OperationId:</strong>distributeNegotiatedRates</p>
     * Distribute negotiated rates
     */
    distributeNegotiatedRates(requestParameters: DistributeNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to fetch external Rate Plan. <p><strong>OperationId:</strong>downloadExternalRatePlan</p>
     * Get external rate plan
     */
    downloadExternalRatePlanRaw(requestParameters: DownloadExternalRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to fetch external Rate Plan. <p><strong>OperationId:</strong>downloadExternalRatePlan</p>
     * Get external rate plan
     */
    downloadExternalRatePlan(requestParameters: DownloadExternalRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>getBestAvailableRates</p>
     * Fetch Best Available Rates
     */
    getBestAvailableRatesRaw(requestParameters: GetBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetBestAvailableRatesDetails>>;
    /**
     * This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>getBestAvailableRates</p>
     * Fetch Best Available Rates
     */
    getBestAvailableRates(requestParameters: GetBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetBestAvailableRatesDetails>;
    /**
     * This API allows you to fetch package forecast groups. <p><strong>OperationId:</strong>getHotelPackageForecastGroups</p>
     * Get Hotel Package Forecast Groups
     */
    getHotelPackageForecastGroupsRaw(requestParameters: GetHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelPackageForecastGroups>>;
    /**
     * This API allows you to fetch package forecast groups. <p><strong>OperationId:</strong>getHotelPackageForecastGroups</p>
     * Get Hotel Package Forecast Groups
     */
    getHotelPackageForecastGroups(requestParameters: GetHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelPackageForecastGroups>;
    /**
     * This API allows you to fetch mass rate change status. <p><strong>OperationId:</strong>getMassRateChangeStatus</p>
     * Get mass rate change status
     */
    getMassRateChangeStatusRaw(requestParameters: GetMassRateChangeStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MassRateChangeStatus>>;
    /**
     * This API allows you to fetch mass rate change status. <p><strong>OperationId:</strong>getMassRateChangeStatus</p>
     * Get mass rate change status
     */
    getMassRateChangeStatus(requestParameters: GetMassRateChangeStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MassRateChangeStatus>;
    /**
     * This API allows you to fetch negotiated rates and profile for a given hotel id. <p><strong>OperationId:</strong>getNegotiatedRates</p>
     * Get negotiated rates and profiles
     */
    getNegotiatedRatesRaw(requestParameters: GetNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NegotiatedRates>>;
    /**
     * This API allows you to fetch negotiated rates and profile for a given hotel id. <p><strong>OperationId:</strong>getNegotiatedRates</p>
     * Get negotiated rates and profiles
     */
    getNegotiatedRates(requestParameters: GetNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NegotiatedRates>;
    /**
     * This API allows you to fetch a Rate Plan and Profile for given hotel id and negotiated rate code. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenHotelAndRate</p>
     * Fetch Negotiated Rates
     */
    getNegotiatedRatesForGivenHotelAndRateRaw(requestParameters: GetNegotiatedRatesForGivenHotelAndRateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NegotiatedRates>>;
    /**
     * This API allows you to fetch a Rate Plan and Profile for given hotel id and negotiated rate code. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenHotelAndRate</p>
     * Fetch Negotiated Rates
     */
    getNegotiatedRatesForGivenHotelAndRate(requestParameters: GetNegotiatedRatesForGivenHotelAndRateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NegotiatedRates>;
    /**
     * This API allows you to fetch negotiated Rates for a given profile. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenProfile</p>
     * Get negotiated rate details for given profile
     */
    getNegotiatedRatesForGivenProfileRaw(requestParameters: GetNegotiatedRatesForGivenProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NegotiatedRates>>;
    /**
     * This API allows you to fetch negotiated Rates for a given profile. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenProfile</p>
     * Get negotiated rate details for given profile
     */
    getNegotiatedRatesForGivenProfile(requestParameters: GetNegotiatedRatesForGivenProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NegotiatedRates>;
    /**
     * This API allows you to fetch package details for a given package. <p><strong>OperationId:</strong>getPackage</p>
     * Get package for given package
     */
    getPackageRaw(requestParameters: GetPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageInfo>>;
    /**
     * This API allows you to fetch package details for a given package. <p><strong>OperationId:</strong>getPackage</p>
     * Get package for given package
     */
    getPackage(requestParameters: GetPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageInfo>;
    /**
     * This API allows you to fetch package formula ranges. <p><strong>OperationId:</strong>getPackageFormulaRanges</p>
     * Get package formula ranges
     */
    getPackageFormulaRangesRaw(requestParameters: GetPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageFormulaRanges>>;
    /**
     * This API allows you to fetch package formula ranges. <p><strong>OperationId:</strong>getPackageFormulaRanges</p>
     * Get package formula ranges
     */
    getPackageFormulaRanges(requestParameters: GetPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageFormulaRanges>;
    /**
     * This API allows you to fetch package group. <p><strong>OperationId:</strong>getPackageGroups</p>
     * Get package groups
     */
    getPackageGroupsRaw(requestParameters: GetPackageGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageGroupsInfo>>;
    /**
     * This API allows you to fetch package group. <p><strong>OperationId:</strong>getPackageGroups</p>
     * Get package groups
     */
    getPackageGroups(requestParameters: GetPackageGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageGroupsInfo>;
    /**
     * This API allows you to fetch rate plan codes associated for a package. <p><strong>OperationId:</strong>getPackageRates</p>
     * Get package rates
     */
    getPackageRatesRaw(requestParameters: GetPackageRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackageRates>>;
    /**
     * This API allows you to fetch rate plan codes associated for a package. <p><strong>OperationId:</strong>getPackageRates</p>
     * Get package rates
     */
    getPackageRates(requestParameters: GetPackageRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackageRates>;
    /**
     * Use this API you to get configured packages for a hotel.<p><strong>OperationId:</strong>getPackages</p>
     * Get Packages
     */
    getPackagesRaw(requestParameters: GetPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackagesInfo>>;
    /**
     * Use this API you to get configured packages for a hotel.<p><strong>OperationId:</strong>getPackages</p>
     * Get Packages
     */
    getPackages(requestParameters: GetPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackagesInfo>;
    /**
     * This API allows you to fetch promotion codes. <p><strong>OperationId:</strong>getPromotionCodes</p>
     * Get promotion codes
     */
    getPromotionCodesRaw(requestParameters: GetPromotionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PropertyPromotionCodes>>;
    /**
     * This API allows you to fetch promotion codes. <p><strong>OperationId:</strong>getPromotionCodes</p>
     * Get promotion codes
     */
    getPromotionCodes(requestParameters: GetPromotionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PropertyPromotionCodes>;
    /**
     * This API allows you to fetch promotion codes. <p><strong>OperationId:</strong>getPromotionGroups</p>
     * Get promotion groups
     */
    getPromotionGroupsRaw(requestParameters: GetPromotionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotionGroups>>;
    /**
     * This API allows you to fetch promotion codes. <p><strong>OperationId:</strong>getPromotionGroups</p>
     * Get promotion groups
     */
    getPromotionGroups(requestParameters: GetPromotionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotionGroups>;
    /**
     * This API allows you to fetch Rate Activity Log. <p><strong>OperationId:</strong>getRateActivityLog</p>
     * Get rate activity log
     */
    getRateActivityLogRaw(requestParameters: GetRateActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RateActivityLog>>;
    /**
     * This API allows you to fetch Rate Activity Log. <p><strong>OperationId:</strong>getRateActivityLog</p>
     * Get rate activity log
     */
    getRateActivityLog(requestParameters: GetRateActivityLogRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RateActivityLog>;
    /**
     * This API allows you to update rate groups. <p><strong>OperationId:</strong>getRateGroups</p>
     * Get rate groups
     */
    getRateGroupsRaw(requestParameters: GetRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RateGroupsInfo>>;
    /**
     * This API allows you to update rate groups. <p><strong>OperationId:</strong>getRateGroups</p>
     * Get rate groups
     */
    getRateGroups(requestParameters: GetRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RateGroupsInfo>;
    /**
     * This API allows you to fetch Rate Plan for a given hotel id and Rate Plan Code. <p><strong>OperationId:</strong>getRatePlan</p>
     * Get rate plan
     */
    getRatePlanRaw(requestParameters: GetRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlanInfo>>;
    /**
     * This API allows you to fetch Rate Plan for a given hotel id and Rate Plan Code. <p><strong>OperationId:</strong>getRatePlan</p>
     * Get rate plan
     */
    getRatePlan(requestParameters: GetRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlanInfo>;
    /**
     * This API allows you to fetch Rate Plan  schedules for yield adjustments. <p><strong>OperationId:</strong>getRatePlanScheduleYieldAdjustments</p>
     * Get rate plan schedule yield adjustments
     */
    getRatePlanScheduleYieldAdjustmentsRaw(requestParameters: GetRatePlanScheduleYieldAdjustmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlanScheduleYieldAdjustments>>;
    /**
     * This API allows you to fetch Rate Plan  schedules for yield adjustments. <p><strong>OperationId:</strong>getRatePlanScheduleYieldAdjustments</p>
     * Get rate plan schedule yield adjustments
     */
    getRatePlanScheduleYieldAdjustments(requestParameters: GetRatePlanScheduleYieldAdjustmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlanScheduleYieldAdjustments>;
    /**
     * Use this API to get a rate plan&apos;s pricing schedules. The information includes the date range and room types for which the price is valid, rate amounts for multiple persons, and associated packages.<p><strong>OperationId:</strong>getRatePlanSchedules</p>
     * Get rate plan schedules
     */
    getRatePlanSchedulesRaw(requestParameters: GetRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlanSchedulesInfo>>;
    /**
     * Use this API to get a rate plan&apos;s pricing schedules. The information includes the date range and room types for which the price is valid, rate amounts for multiple persons, and associated packages.<p><strong>OperationId:</strong>getRatePlanSchedules</p>
     * Get rate plan schedules
     */
    getRatePlanSchedules(requestParameters: GetRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlanSchedulesInfo>;
    /**
     * Use this API to get configured Rate Plans for a property and filter this by search criteria.<p><strong>OperationId:</strong>getRatePlans</p>
     * Get rate plans
     */
    getRatePlansRaw(requestParameters: GetRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlansSummary>>;
    /**
     * Use this API to get configured Rate Plans for a property and filter this by search criteria.<p><strong>OperationId:</strong>getRatePlans</p>
     * Get rate plans
     */
    getRatePlans(requestParameters: GetRatePlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlansSummary>;
    /**
     * This API allows you to fetch Rate Plans for a given hotel id. <p><strong>OperationId:</strong>getRatePlansByHotel</p>
     * Get rate plans by Hotel Code
     */
    getRatePlansByHotelRaw(requestParameters: GetRatePlansByHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RatePlanInfo>>;
    /**
     * This API allows you to fetch Rate Plans for a given hotel id. <p><strong>OperationId:</strong>getRatePlansByHotel</p>
     * Get rate plans by Hotel Code
     */
    getRatePlansByHotel(requestParameters: GetRatePlansByHotelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RatePlanInfo>;
    /**
     * This API allows you to fetch Rate Plans on a specific block. <p><strong>OperationId:</strong>getRatePlansForBlock</p>
     * Get rate plans for a given block
     */
    getRatePlansForBlockRaw(requestParameters: GetRatePlansForBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockRatePlans>>;
    /**
     * This API allows you to fetch Rate Plans on a specific block. <p><strong>OperationId:</strong>getRatePlansForBlock</p>
     * Get rate plans for a given block
     */
    getRatePlansForBlock(requestParameters: GetRatePlansForBlockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockRatePlans>;
    /**
     * This API allows you to fetch rate strategies. <p><strong>OperationId:</strong>getRateStrategies</p>
     * Get rate strategies
     */
    getRateStrategiesRaw(requestParameters: GetRateStrategiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RateStrategies>>;
    /**
     * This API allows you to fetch rate strategies. <p><strong>OperationId:</strong>getRateStrategies</p>
     * Get rate strategies
     */
    getRateStrategies(requestParameters: GetRateStrategiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RateStrategies>;
    /**
     * This API allows you to fetch Package Forecast groups template. <p><strong>OperationId:</strong>getTemplatePackageForecastGroups</p>
     * Get Template Package Forecast Groups
     */
    getTemplatePackageForecastGroupsRaw(requestParameters: GetTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatePackageForecastGroups>>;
    /**
     * This API allows you to fetch Package Forecast groups template. <p><strong>OperationId:</strong>getTemplatePackageForecastGroups</p>
     * Get Template Package Forecast Groups
     */
    getTemplatePackageForecastGroups(requestParameters: GetTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatePackageForecastGroups>;
    /**
     * This API allows you to fetch Promotion Code template. <p><strong>OperationId:</strong>getTemplatePromotionCodes</p>
     * Get Template Promotion Codes
     */
    getTemplatePromotionCodesRaw(requestParameters: GetTemplatePromotionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplatePromotionCodes>>;
    /**
     * This API allows you to fetch Promotion Code template. <p><strong>OperationId:</strong>getTemplatePromotionCodes</p>
     * Get Template Promotion Codes
     */
    getTemplatePromotionCodes(requestParameters: GetTemplatePromotionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplatePromotionCodes>;
    /**
     * This API allows you to fetch yield adjustments. <p><strong>OperationId:</strong>getYieldAdjustments</p>
     * Get yield adjustments
     */
    getYieldAdjustmentsRaw(requestParameters: GetYieldAdjustmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<YieldAdjustments>>;
    /**
     * This API allows you to fetch yield adjustments. <p><strong>OperationId:</strong>getYieldAdjustments</p>
     * Get yield adjustments
     */
    getYieldAdjustments(requestParameters: GetYieldAdjustmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<YieldAdjustments>;
    /**
     * This API allows you to update Rate Plan schedules. <p><strong>OperationId:</strong>manageRatePlansSchedules</p>
     * Manages rate plan schedules
     */
    manageRatePlansSchedulesRaw(requestParameters: ManageRatePlansSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update Rate Plan schedules. <p><strong>OperationId:</strong>manageRatePlansSchedules</p>
     * Manages rate plan schedules
     */
    manageRatePlansSchedules(requestParameters: ManageRatePlansSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to fetch Rate Plan Service version. <p><strong>OperationId:</strong>pingRatePlanService</p>
     * Get Rate plan service version
     */
    pingRatePlanServiceRaw(requestParameters: PingRatePlanServiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OperaVersion>>;
    /**
     * This API allows you to fetch Rate Plan Service version. <p><strong>OperationId:</strong>pingRatePlanService</p>
     * Get Rate plan service version
     */
    pingRatePlanService(requestParameters: PingRatePlanServiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OperaVersion>;
    /**
     * This API allows to create Best Available rates for rate code(s). <p><strong>OperationId:</strong>postBestAvailableRates</p>
     * Create a Best Available Rates
     */
    postBestAvailableRatesRaw(requestParameters: PostBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows to create Best Available rates for rate code(s). <p><strong>OperationId:</strong>postBestAvailableRates</p>
     * Create a Best Available Rates
     */
    postBestAvailableRates(requestParameters: PostBestAvailableRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create package forecast groups. <p><strong>OperationId:</strong>postHotelPackageForecastGroups</p>
     * Create Hotel Package Forecast Groups
     */
    postHotelPackageForecastGroupsRaw(requestParameters: PostHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create package forecast groups. <p><strong>OperationId:</strong>postHotelPackageForecastGroups</p>
     * Create Hotel Package Forecast Groups
     */
    postHotelPackageForecastGroups(requestParameters: PostHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create negotiated rate for a given profile. <p><strong>OperationId:</strong>postNegotiatedRates</p>
     * Create negotiated rates
     */
    postNegotiatedRatesRaw(requestParameters: PostNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create negotiated rate for a given profile. <p><strong>OperationId:</strong>postNegotiatedRates</p>
     * Create negotiated rates
     */
    postNegotiatedRates(requestParameters: PostNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create a package. <p><strong>OperationId:</strong>postPackage</p>
     * Create package
     */
    postPackageRaw(requestParameters: PostPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create a package. <p><strong>OperationId:</strong>postPackage</p>
     * Create package
     */
    postPackage(requestParameters: PostPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create package formula ranges. <p><strong>OperationId:</strong>postPackageFormulaRanges</p>
     * Create package formula ranges
     */
    postPackageFormulaRangesRaw(requestParameters: PostPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create package formula ranges. <p><strong>OperationId:</strong>postPackageFormulaRanges</p>
     * Create package formula ranges
     */
    postPackageFormulaRanges(requestParameters: PostPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create package group. <p><strong>OperationId:</strong>postPackageGroup</p>
     * Create package group
     */
    postPackageGroupRaw(requestParameters: PostPackageGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create package group. <p><strong>OperationId:</strong>postPackageGroup</p>
     * Create package group
     */
    postPackageGroup(requestParameters: PostPackageGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create promotion codes. <p><strong>OperationId:</strong>postPromotionCode</p>
     * Create promotion codes
     */
    postPromotionCodeRaw(requestParameters: PostPromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create promotion codes. <p><strong>OperationId:</strong>postPromotionCode</p>
     * Create promotion codes
     */
    postPromotionCode(requestParameters: PostPromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create promotion groups. <p><strong>OperationId:</strong>postPromotionGroup</p>
     * Create promotion groups
     */
    postPromotionGroupRaw(requestParameters: PostPromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create promotion groups. <p><strong>OperationId:</strong>postPromotionGroup</p>
     * Create promotion groups
     */
    postPromotionGroup(requestParameters: PostPromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create rate groups. <p><strong>OperationId:</strong>postRateGroups</p>
     * Create rate groups
     */
    postRateGroupsRaw(requestParameters: PostRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create rate groups. <p><strong>OperationId:</strong>postRateGroups</p>
     * Create rate groups
     */
    postRateGroups(requestParameters: PostRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API you to get Rate Plans for a given hotel.<p><strong>OperationId:</strong>postRatePlan</p>
     * Create rate plans
     */
    postRatePlanRaw(requestParameters: PostRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API you to get Rate Plans for a given hotel.<p><strong>OperationId:</strong>postRatePlan</p>
     * Create rate plans
     */
    postRatePlan(requestParameters: PostRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create Rate Plan package. <p><strong>OperationId:</strong>postRatePlanPackages</p>
     * Create rate plan package
     */
    postRatePlanPackagesRaw(requestParameters: PostRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create Rate Plan package. <p><strong>OperationId:</strong>postRatePlanPackages</p>
     * Create rate plan package
     */
    postRatePlanPackages(requestParameters: PostRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create Rate Plan posting rhythms. <p><strong>OperationId:</strong>postRatePlanPostingRhythms</p>
     * Create rate plan posting rhythms
     */
    postRatePlanPostingRhythmsRaw(requestParameters: PostRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create Rate Plan posting rhythms. <p><strong>OperationId:</strong>postRatePlanPostingRhythms</p>
     * Create rate plan posting rhythms
     */
    postRatePlanPostingRhythms(requestParameters: PostRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create Rate Plan pricing schedule. <p><strong>OperationId:</strong>postRatePlanSchedules</p>
     * Create rate plan schedules
     */
    postRatePlanSchedulesRaw(requestParameters: PostRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create Rate Plan pricing schedule. <p><strong>OperationId:</strong>postRatePlanSchedules</p>
     * Create rate plan schedules
     */
    postRatePlanSchedules(requestParameters: PostRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create rate strategies. <p><strong>OperationId:</strong>postRateStrategy</p>
     * Create rate strategies
     */
    postRateStrategyRaw(requestParameters: PostRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create rate strategies. <p><strong>OperationId:</strong>postRateStrategy</p>
     * Create rate strategies
     */
    postRateStrategy(requestParameters: PostRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create Package Forecast groups template. <p><strong>OperationId:</strong>postTemplatePackageForecastGroups</p>
     * Create Template Package Forecast Groups
     */
    postTemplatePackageForecastGroupsRaw(requestParameters: PostTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create Package Forecast groups template. <p><strong>OperationId:</strong>postTemplatePackageForecastGroups</p>
     * Create Template Package Forecast Groups
     */
    postTemplatePackageForecastGroups(requestParameters: PostTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create Promotion Code template. <p><strong>OperationId:</strong>postTemplatePromotionCode</p>
     * Create Template Promotion Code
     */
    postTemplatePromotionCodeRaw(requestParameters: PostTemplatePromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create Promotion Code template. <p><strong>OperationId:</strong>postTemplatePromotionCode</p>
     * Create Template Promotion Code
     */
    postTemplatePromotionCode(requestParameters: PostTemplatePromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update package forecast groups. <p><strong>OperationId:</strong>putHotelPackageForecastGroups</p>
     * Change Hotel Package Forecast Groups
     */
    putHotelPackageForecastGroupsRaw(requestParameters: PutHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update package forecast groups. <p><strong>OperationId:</strong>putHotelPackageForecastGroups</p>
     * Change Hotel Package Forecast Groups
     */
    putHotelPackageForecastGroups(requestParameters: PutHotelPackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update negotiated rate for a given profile. <p><strong>OperationId:</strong>putNegotiatedRates</p>
     * Change negotiated rates
     */
    putNegotiatedRatesRaw(requestParameters: PutNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NegotiatedRatesDetails>>;
    /**
     * This API allows you to update negotiated rate for a given profile. <p><strong>OperationId:</strong>putNegotiatedRates</p>
     * Change negotiated rates
     */
    putNegotiatedRates(requestParameters: PutNegotiatedRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NegotiatedRatesDetails>;
    /**
     * This API allows you to update a package. <p><strong>OperationId:</strong>putPackage</p>
     * Change the package
     */
    putPackageRaw(requestParameters: PutPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update a package. <p><strong>OperationId:</strong>putPackage</p>
     * Change the package
     */
    putPackage(requestParameters: PutPackageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update package formula ranges. <p><strong>OperationId:</strong>putPackageFormulaRanges</p>
     * Change package formula ranges
     */
    putPackageFormulaRangesRaw(requestParameters: PutPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update package formula ranges. <p><strong>OperationId:</strong>putPackageFormulaRanges</p>
     * Change package formula ranges
     */
    putPackageFormulaRanges(requestParameters: PutPackageFormulaRangesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to change package group. <p><strong>OperationId:</strong>putPackageGroup</p>
     * Change package group
     */
    putPackageGroupRaw(requestParameters: PutPackageGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to change package group. <p><strong>OperationId:</strong>putPackageGroup</p>
     * Change package group
     */
    putPackageGroup(requestParameters: PutPackageGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update promotion codes. <p><strong>OperationId:</strong>putPromotionCode</p>
     * Change promotion codes
     */
    putPromotionCodeRaw(requestParameters: PutPromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update promotion codes. <p><strong>OperationId:</strong>putPromotionCode</p>
     * Change promotion codes
     */
    putPromotionCode(requestParameters: PutPromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update promotion groups. <p><strong>OperationId:</strong>putPromotionGroup</p>
     * Change promotion groups
     */
    putPromotionGroupRaw(requestParameters: PutPromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update promotion groups. <p><strong>OperationId:</strong>putPromotionGroup</p>
     * Change promotion groups
     */
    putPromotionGroup(requestParameters: PutPromotionGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update rate groups. <p><strong>OperationId:</strong>putRateGroups</p>
     * Change rate groups
     */
    putRateGroupsRaw(requestParameters: PutRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update rate groups. <p><strong>OperationId:</strong>putRateGroups</p>
     * Change rate groups
     */
    putRateGroups(requestParameters: PutRateGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Rate Plan information such as date range, linked room types, and rate controls for a given hotel. Use the putRatePlanSchedules operation to add or update the rate plan pricing schedule.<p><strong>OperationId:</strong>putRatePlan</p>
     * Change rate plan
     */
    putRatePlanRaw(requestParameters: PutRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Rate Plan information such as date range, linked room types, and rate controls for a given hotel. Use the putRatePlanSchedules operation to add or update the rate plan pricing schedule.<p><strong>OperationId:</strong>putRatePlan</p>
     * Change rate plan
     */
    putRatePlan(requestParameters: PutRatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update Rate Plan package. <p><strong>OperationId:</strong>putRatePlanPackages</p>
     * Change rate plan package
     */
    putRatePlanPackagesRaw(requestParameters: PutRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update Rate Plan package. <p><strong>OperationId:</strong>putRatePlanPackages</p>
     * Change rate plan package
     */
    putRatePlanPackages(requestParameters: PutRatePlanPackagesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update Rate Plan posting rhythms. <p><strong>OperationId:</strong>putRatePlanPostingRhythms</p>
     * Change rate plan posting rhythms
     */
    putRatePlanPostingRhythmsRaw(requestParameters: PutRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update Rate Plan posting rhythms. <p><strong>OperationId:</strong>putRatePlanPostingRhythms</p>
     * Change rate plan posting rhythms
     */
    putRatePlanPostingRhythms(requestParameters: PutRatePlanPostingRhythmsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to  update Rate Plan pricing schedules.<p><strong>OperationId:</strong>putRatePlanSchedules</p>
     * Change rate plan schedules
     */
    putRatePlanSchedulesRaw(requestParameters: PutRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to  update Rate Plan pricing schedules.<p><strong>OperationId:</strong>putRatePlanSchedules</p>
     * Change rate plan schedules
     */
    putRatePlanSchedules(requestParameters: PutRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update rate strategies. <p><strong>OperationId:</strong>putRateStrategy</p>
     * Change rate strategies
     */
    putRateStrategyRaw(requestParameters: PutRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update rate strategies. <p><strong>OperationId:</strong>putRateStrategy</p>
     * Change rate strategies
     */
    putRateStrategy(requestParameters: PutRateStrategyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update Package Forecast groups template. <p><strong>OperationId:</strong>putTemplatePackageForecastGroups</p>
     * Change Template Package Forecast Groups
     */
    putTemplatePackageForecastGroupsRaw(requestParameters: PutTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update Package Forecast groups template. <p><strong>OperationId:</strong>putTemplatePackageForecastGroups</p>
     * Change Template Package Forecast Groups
     */
    putTemplatePackageForecastGroups(requestParameters: PutTemplatePackageForecastGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update Promotion Code template. <p><strong>OperationId:</strong>putTemplatePromotionCode</p>
     * Change Template Promotion Code
     */
    putTemplatePromotionCodeRaw(requestParameters: PutTemplatePromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update Promotion Code template. <p><strong>OperationId:</strong>putTemplatePromotionCode</p>
     * Change Template Promotion Code
     */
    putTemplatePromotionCode(requestParameters: PutTemplatePromotionCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to set Rate Plan schedule range. <p><strong>OperationId:</strong>setDailyRatePlanScheduleRange</p>
     * Set daily rate plan schedule range
     */
    setDailyRatePlanScheduleRangeRaw(requestParameters: SetDailyRatePlanScheduleRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to set Rate Plan schedule range. <p><strong>OperationId:</strong>setDailyRatePlanScheduleRange</p>
     * Set daily rate plan schedule range
     */
    setDailyRatePlanScheduleRange(requestParameters: SetDailyRatePlanScheduleRangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to update mass Rate Plan schedules. <p><strong>OperationId:</strong>setMassRatePlanSchedules</p>
     * Set mass rate plan schedules
     */
    setMassRatePlanSchedulesRaw(requestParameters: SetMassRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to update mass Rate Plan schedules. <p><strong>OperationId:</strong>setMassRatePlanSchedules</p>
     * Set mass rate plan schedules
     */
    setMassRatePlanSchedules(requestParameters: SetMassRatePlanSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to set rate access exclusions. <p><strong>OperationId:</strong>setRateAccessExclusions</p>
     * Set rate access exclusions
     */
    setRateAccessExclusionsRaw(requestParameters: SetRateAccessExclusionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to set rate access exclusions. <p><strong>OperationId:</strong>setRateAccessExclusions</p>
     * Set rate access exclusions
     */
    setRateAccessExclusions(requestParameters: SetRateAccessExclusionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to set Rate strategies. <p><strong>OperationId:</strong>setRateStrategies</p>
     * Set rate strategies
     */
    setRateStrategiesRaw(requestParameters: SetRateStrategiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to set Rate strategies. <p><strong>OperationId:</strong>setRateStrategies</p>
     * Set rate strategies
     */
    setRateStrategies(requestParameters: SetRateStrategiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to split Rate Plan schedule. <p><strong>OperationId:</strong>splitRatePlanSchedule</p>
     * Split rate plan schedule
     */
    splitRatePlanScheduleRaw(requestParameters: SplitRatePlanScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to split Rate Plan schedule. <p><strong>OperationId:</strong>splitRatePlanSchedule</p>
     * Split rate plan schedule
     */
    splitRatePlanSchedule(requestParameters: SplitRatePlanScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const GetBestAvailableRatesDaysOfWeekEnum: {
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
    readonly Sunday: "Sunday";
};
export type GetBestAvailableRatesDaysOfWeekEnum = typeof GetBestAvailableRatesDaysOfWeekEnum[keyof typeof GetBestAvailableRatesDaysOfWeekEnum];
/**
 * @export
 */
export declare const GetBestAvailableRatesLengthOfStayEnum: {
    readonly One: "One";
    readonly Two: "Two";
    readonly Three: "Three";
    readonly Four: "Four";
    readonly Five: "Five";
    readonly Six: "Six";
    readonly Seven: "Seven";
    readonly Eight: "Eight";
};
export type GetBestAvailableRatesLengthOfStayEnum = typeof GetBestAvailableRatesLengthOfStayEnum[keyof typeof GetBestAvailableRatesLengthOfStayEnum];
/**
 * @export
 */
export declare const GetNegotiatedRatesFetchInstructionsEnum: {
    readonly Discounts: "Discounts";
};
export type GetNegotiatedRatesFetchInstructionsEnum = typeof GetNegotiatedRatesFetchInstructionsEnum[keyof typeof GetNegotiatedRatesFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetNegotiatedRatesForGivenHotelAndRateFetchInstructionsEnum: {
    readonly Discounts: "Discounts";
};
export type GetNegotiatedRatesForGivenHotelAndRateFetchInstructionsEnum = typeof GetNegotiatedRatesForGivenHotelAndRateFetchInstructionsEnum[keyof typeof GetNegotiatedRatesForGivenHotelAndRateFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetNegotiatedRatesForGivenProfileFetchInstructionsEnum: {
    readonly Discounts: "Discounts";
};
export type GetNegotiatedRatesForGivenProfileFetchInstructionsEnum = typeof GetNegotiatedRatesForGivenProfileFetchInstructionsEnum[keyof typeof GetNegotiatedRatesForGivenProfileFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetPackageFetchInstructionsEnum: {
    readonly Header: "Header";
    readonly PostingRules: "PostingRules";
    readonly CalculatedPrice: "CalculatedPrice";
    readonly Items: "Items";
    readonly Details: "Details";
    readonly UsageDetails: "UsageDetails";
};
export type GetPackageFetchInstructionsEnum = typeof GetPackageFetchInstructionsEnum[keyof typeof GetPackageFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetPackagesFetchInstructionsEnum: {
    readonly Header: "Header";
    readonly PostingRules: "PostingRules";
    readonly CalculatedPrice: "CalculatedPrice";
    readonly Items: "Items";
    readonly Details: "Details";
    readonly UsageDetails: "UsageDetails";
};
export type GetPackagesFetchInstructionsEnum = typeof GetPackagesFetchInstructionsEnum[keyof typeof GetPackagesFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetRateActivityLogModuleEnum: {
    readonly Reservation: "Reservation";
    readonly Contract: "Contract";
    readonly Allotment: "Allotment";
    readonly Outlookview: "Outlookview";
    readonly Profile: "Profile";
    readonly Accountreceivables: "Accountreceivables";
    readonly GdsConvRateCodes: "GdsConvRateCodes";
    readonly RateCode: "RateCode";
    readonly Billing: "Billing";
    readonly Activity: "Activity";
};
export type GetRateActivityLogModuleEnum = typeof GetRateActivityLogModuleEnum[keyof typeof GetRateActivityLogModuleEnum];
/**
 * @export
 */
export declare const GetRatePlanFetchInstructionsEnum: {
    readonly PrimaryDetails: "PrimaryDetails";
    readonly TransactionDetails: "TransactionDetails";
    readonly Packages: "Packages";
    readonly RateCommission: "RateCommission";
    readonly NegotiatedProfiles: "NegotiatedProfiles";
    readonly RateControls: "RateControls";
    readonly RoutingInstructions: "RoutingInstructions";
    readonly AccessExclusions: "AccessExclusions";
    readonly ApprovalNotes: "ApprovalNotes";
};
export type GetRatePlanFetchInstructionsEnum = typeof GetRatePlanFetchInstructionsEnum[keyof typeof GetRatePlanFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetRatePlansOrderTypeEnum: {
    readonly Asc: "Asc";
    readonly Desc: "Desc";
};
export type GetRatePlansOrderTypeEnum = typeof GetRatePlansOrderTypeEnum[keyof typeof GetRatePlansOrderTypeEnum];
/**
 * @export
 */
export declare const GetRatePlansApprovalStatusEnum: {
    readonly NewUnapproved: "NewUnapproved";
    readonly ChangedUnapproved: "ChangedUnapproved";
    readonly Rejected: "Rejected";
    readonly Approved: "Approved";
};
export type GetRatePlansApprovalStatusEnum = typeof GetRatePlansApprovalStatusEnum[keyof typeof GetRatePlansApprovalStatusEnum];
/**
 * @export
 */
export declare const GetRatePlansByHotelFetchInstructionsEnum: {
    readonly PrimaryDetails: "PrimaryDetails";
    readonly TransactionDetails: "TransactionDetails";
    readonly Packages: "Packages";
    readonly RateCommission: "RateCommission";
    readonly NegotiatedProfiles: "NegotiatedProfiles";
    readonly RateControls: "RateControls";
    readonly RoutingInstructions: "RoutingInstructions";
    readonly AccessExclusions: "AccessExclusions";
    readonly ApprovalNotes: "ApprovalNotes";
};
export type GetRatePlansByHotelFetchInstructionsEnum = typeof GetRatePlansByHotelFetchInstructionsEnum[keyof typeof GetRatePlansByHotelFetchInstructionsEnum];
