/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseType } from './BaseType';
import {
    BaseTypeFromJSON,
    BaseTypeFromJSONTyped,
    BaseTypeToJSON,
} from './BaseType';
import type { RateCodeLockStatusType } from './RateCodeLockStatusType';
import {
    RateCodeLockStatusTypeFromJSON,
    RateCodeLockStatusTypeFromJSONTyped,
    RateCodeLockStatusTypeToJSON,
} from './RateCodeLockStatusType';
import type { RatePlanApprovalStatusType } from './RatePlanApprovalStatusType';
import {
    RatePlanApprovalStatusTypeFromJSON,
    RatePlanApprovalStatusTypeFromJSONTyped,
    RatePlanApprovalStatusTypeToJSON,
} from './RatePlanApprovalStatusType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * 
 * @export
 * @interface RatePlanPrimaryDetailsType
 */
export interface RatePlanPrimaryDetailsType {
    /**
     * 
     * @type {RatePlanApprovalStatusType}
     * @memberof RatePlanPrimaryDetailsType
     */
    approvalStatus?: RatePlanApprovalStatusType;
    /**
     * 
     * @type {BaseType}
     * @memberof RatePlanPrimaryDetailsType
     */
    baseType?: BaseType;
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof RatePlanPrimaryDetailsType
     */
    description?: TranslationTextType2000;
    /**
     * End sell date of the rate plan.
     * @type {Date}
     * @memberof RatePlanPrimaryDetailsType
     */
    endSellDate?: Date;
    /**
     * 
     * @type {RateCodeLockStatusType}
     * @memberof RatePlanPrimaryDetailsType
     */
    lockStatus?: RateCodeLockStatusType;
    /**
     * The particular rate code is marked as privileged making it restrictive on who can update information.
     * @type {boolean}
     * @memberof RatePlanPrimaryDetailsType
     */
    privilegedRate?: boolean;
    /**
     * The restrictions marked on the rate code are marked as privileged making it restrictive on who can update information.
     * @type {boolean}
     * @memberof RatePlanPrimaryDetailsType
     */
    privilegedRateRestriction?: boolean;
    /**
     * Sell Sequence for the rate plan.
     * @type {number}
     * @memberof RatePlanPrimaryDetailsType
     */
    sellSequence?: number;
    /**
     * Start sell date of the rate plan.
     * @type {Date}
     * @memberof RatePlanPrimaryDetailsType
     */
    startSellDate?: Date;
}

/**
 * Check if a given object implements the RatePlanPrimaryDetailsType interface.
 */
export function instanceOfRatePlanPrimaryDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanPrimaryDetailsTypeFromJSON(json: any): RatePlanPrimaryDetailsType {
    return RatePlanPrimaryDetailsTypeFromJSONTyped(json, false);
}

export function RatePlanPrimaryDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanPrimaryDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'approvalStatus': !exists(json, 'approvalStatus') ? undefined : RatePlanApprovalStatusTypeFromJSON(json['approvalStatus']),
        'baseType': !exists(json, 'baseType') ? undefined : BaseTypeFromJSON(json['baseType']),
        'description': !exists(json, 'description') ? undefined : TranslationTextType2000FromJSON(json['description']),
        'endSellDate': !exists(json, 'endSellDate') ? undefined : (new Date(json['endSellDate'])),
        'lockStatus': !exists(json, 'lockStatus') ? undefined : RateCodeLockStatusTypeFromJSON(json['lockStatus']),
        'privilegedRate': !exists(json, 'privilegedRate') ? undefined : json['privilegedRate'],
        'privilegedRateRestriction': !exists(json, 'privilegedRateRestriction') ? undefined : json['privilegedRateRestriction'],
        'sellSequence': !exists(json, 'sellSequence') ? undefined : json['sellSequence'],
        'startSellDate': !exists(json, 'startSellDate') ? undefined : (new Date(json['startSellDate'])),
    };
}

export function RatePlanPrimaryDetailsTypeToJSON(value?: RatePlanPrimaryDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'approvalStatus': RatePlanApprovalStatusTypeToJSON(value.approvalStatus),
        'baseType': BaseTypeToJSON(value.baseType),
        'description': TranslationTextType2000ToJSON(value.description),
        'endSellDate': value.endSellDate === undefined ? undefined : (value.endSellDate.toISOString().substr(0,10)),
        'lockStatus': RateCodeLockStatusTypeToJSON(value.lockStatus),
        'privilegedRate': value.privilegedRate,
        'privilegedRateRestriction': value.privilegedRateRestriction,
        'sellSequence': value.sellSequence,
        'startSellDate': value.startSellDate === undefined ? undefined : (value.startSellDate.toISOString().substr(0,10)),
    };
}

