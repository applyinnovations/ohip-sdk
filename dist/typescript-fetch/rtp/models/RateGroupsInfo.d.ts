/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InstanceLink } from './InstanceLink';
import type { RateGroupType } from './RateGroupType';
import type { WarningType } from './WarningType';
/**
 *
 * @export
 * @interface RateGroupsInfo
 */
export interface RateGroupsInfo {
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof RateGroupsInfo
     */
    hasMore?: boolean;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof RateGroupsInfo
     */
    limit?: number;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof RateGroupsInfo
     */
    links?: Array<InstanceLink>;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof RateGroupsInfo
     */
    offset?: number;
    /**
     * Collection of Rate Groups.
     * @type {Array<RateGroupType>}
     * @memberof RateGroupsInfo
     */
    rateGroups?: Array<RateGroupType>;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof RateGroupsInfo
     */
    totalPages?: number;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof RateGroupsInfo
     */
    totalResults?: number;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof RateGroupsInfo
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the RateGroupsInfo interface.
 */
export declare function instanceOfRateGroupsInfo(value: object): boolean;
export declare function RateGroupsInfoFromJSON(json: any): RateGroupsInfo;
export declare function RateGroupsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateGroupsInfo;
export declare function RateGroupsInfoToJSON(value?: RateGroupsInfo | null): any;
