/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RatePlanBasedOnRateType } from './RatePlanBasedOnRateType';
import type { RatePlanPrimaryDetailsType } from './RatePlanPrimaryDetailsType';
import type { RateRoomTypeDetailType } from './RateRoomTypeDetailType';
import type { RateTierType } from './RateTierType';
/**
 * The Rate plan info type is used primarily by rate plan schedules to get basic rate plan header details.
 * @export
 * @interface RatePlanMasterInfoType
 */
export interface RatePlanMasterInfoType {
    /**
     *
     * @type {RatePlanPrimaryDetailsType}
     * @memberof RatePlanMasterInfoType
     */
    primaryDetails?: RatePlanPrimaryDetailsType;
    /**
     * Details of each room type
     * @type {Array<RateRoomTypeDetailType>}
     * @memberof RatePlanMasterInfoType
     */
    roomTypeList?: Array<RateRoomTypeDetailType>;
    /**
     * Rate plan type based on rates.
     * @type {Array<RatePlanBasedOnRateType>}
     * @memberof RatePlanMasterInfoType
     */
    ratePlanBasedOnRates?: Array<RatePlanBasedOnRateType>;
    /**
     * Details for each rate tier.
     * @type {Array<RateTierType>}
     * @memberof RatePlanMasterInfoType
     */
    rateTiers?: Array<RateTierType>;
    /**
     * Hotel Code of the rate plan.
     * @type {string}
     * @memberof RatePlanMasterInfoType
     */
    hotelId?: string;
    /**
     * Rate Plan Code of the rate plan.
     * @type {string}
     * @memberof RatePlanMasterInfoType
     */
    ratePlanCode?: string;
    /**
     * Is Rate plan tiered?
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    tiered?: boolean;
    /**
     * Is rate plan code a daily rate?
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    daily?: boolean;
    /**
     * Currency code used by the rate plan.
     * @type {string}
     * @memberof RatePlanMasterInfoType
     */
    currencyCode?: string;
    /**
     * Is rate plan code of BAR Rate type?
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    bARRate?: boolean;
    /**
     * Is rate plan code Complimentary?
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    complimentary?: boolean;
    /**
     * Is rate plan code for House Use?
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    houseUse?: boolean;
    /**
     * Flag to identify if Rate Code is Advanced Daily Base Rate Code
     * @type {boolean}
     * @memberof RatePlanMasterInfoType
     */
    advancedDailyBase?: boolean;
    /**
     * An amount that act as Floor value for Rate Plan.
     * @type {number}
     * @memberof RatePlanMasterInfoType
     */
    floorAmount?: number;
}
/**
 * Check if a given object implements the RatePlanMasterInfoType interface.
 */
export declare function instanceOfRatePlanMasterInfoType(value: object): boolean;
export declare function RatePlanMasterInfoTypeFromJSON(json: any): RatePlanMasterInfoType;
export declare function RatePlanMasterInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanMasterInfoType;
export declare function RatePlanMasterInfoTypeToJSON(value?: RatePlanMasterInfoType | null): any;
