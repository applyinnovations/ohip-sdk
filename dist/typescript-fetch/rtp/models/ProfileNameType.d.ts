/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PersonNameTypeType } from './PersonNameTypeType';
/**
 * This provides name information for a person.
 * @export
 * @interface ProfileNameType
 */
export interface ProfileNameType {
    /**
     * Full display Name.
     * @type {string}
     * @memberof ProfileNameType
     */
    fullName?: string;
    /**
     * Given name, first name or names.
     * @type {string}
     * @memberof ProfileNameType
     */
    givenName?: string;
    /**
     * The middle name of the person name.
     * @type {string}
     * @memberof ProfileNameType
     */
    middleName?: string;
    /**
     * Family name, last name or Company Name.
     * @type {string}
     * @memberof ProfileNameType
     */
    name?: string;
    /**
     * Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)
     * @type {string}
     * @memberof ProfileNameType
     */
    namePrefix?: string;
    /**
     * Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)
     * @type {string}
     * @memberof ProfileNameType
     */
    nameSuffix?: string;
    /**
     * Degree or honors (e.g., Ph.D., M.D.)
     * @type {string}
     * @memberof ProfileNameType
     */
    nameTitle?: string;
    /**
     *
     * @type {PersonNameTypeType}
     * @memberof ProfileNameType
     */
    nameType?: PersonNameTypeType;
}
/**
 * Check if a given object implements the ProfileNameType interface.
 */
export declare function instanceOfProfileNameType(value: object): boolean;
export declare function ProfileNameTypeFromJSON(json: any): ProfileNameType;
export declare function ProfileNameTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileNameType;
export declare function ProfileNameTypeToJSON(value?: ProfileNameType | null): any;
