/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ConfigPackageScheduleType } from './ConfigPackageScheduleType';
import type { PackageCodeHeaderType } from './PackageCodeHeaderType';
/**
 * Package code details applied to a rate plan.
 * @export
 * @interface RatePackageCodeType
 */
export interface RatePackageCodeType {
    /**
     * Flag to adjust the overlapping dates automatically. True will allow the system to adjust the overlapping dates automatically . False will not allow overlapping dates and throws error messages if overlapping dates are found
     * @type {boolean}
     * @memberof RatePackageCodeType
     */
    adjustOverlappingRange?: boolean;
    /**
     * Package Code.
     * @type {string}
     * @memberof RatePackageCodeType
     */
    code?: string;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof RatePackageCodeType
     */
    count?: number;
    /**
     * Package Code Description.
     * @type {string}
     * @memberof RatePackageCodeType
     */
    description?: string;
    /**
     * Indicates if it is a Package Group or not.
     * @type {boolean}
     * @memberof RatePackageCodeType
     */
    group?: boolean;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof RatePackageCodeType
     */
    hasMore?: boolean;
    /**
     *
     * @type {PackageCodeHeaderType}
     * @memberof RatePackageCodeType
     */
    header?: PackageCodeHeaderType;
    /**
     * Hotel code for the packages.
     * @type {string}
     * @memberof RatePackageCodeType
     */
    hotelId?: string;
    /**
     * Quantity of the package code included in the rate plan.
     * @type {number}
     * @memberof RatePackageCodeType
     */
    quantity?: number;
    /**
     * Package Code specific to a rate plan code.
     * @type {string}
     * @memberof RatePackageCodeType
     */
    ratePlanCode?: string;
    /**
     * Package code schedule price exception for the rate plan.
     * @type {Array<ConfigPackageScheduleType>}
     * @memberof RatePackageCodeType
     */
    scheduleExceptions?: Array<ConfigPackageScheduleType>;
    /**
     * Package code price schedule details.
     * @type {Array<ConfigPackageScheduleType>}
     * @memberof RatePackageCodeType
     */
    schedules?: Array<ConfigPackageScheduleType>;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof RatePackageCodeType
     */
    totalResults?: number;
}
/**
 * Check if a given object implements the RatePackageCodeType interface.
 */
export declare function instanceOfRatePackageCodeType(value: object): boolean;
export declare function RatePackageCodeTypeFromJSON(json: any): RatePackageCodeType;
export declare function RatePackageCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePackageCodeType;
export declare function RatePackageCodeTypeToJSON(value?: RatePackageCodeType | null): any;
