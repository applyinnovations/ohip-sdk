/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ConfigPackageScheduleType } from './ConfigPackageScheduleType';
import type { PackageCodeHeaderType } from './PackageCodeHeaderType';
/**
 *
 * @export
 * @interface PackageCodeType
 */
export interface PackageCodeType {
    /**
     * Flag to adjust the overlapping dates automatically. True will allow the system to adjust the overlapping dates automatically . False will not allow overlapping dates and throws error messages if overlapping dates are found
     * @type {boolean}
     * @memberof PackageCodeType
     */
    adjustOverlappingRange?: boolean;
    /**
     * Package Code.
     * @type {string}
     * @memberof PackageCodeType
     */
    code?: string;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof PackageCodeType
     */
    count?: number;
    /**
     * Package Code Description.
     * @type {string}
     * @memberof PackageCodeType
     */
    description?: string;
    /**
     * Indicates if it is a Package Group or not.
     * @type {boolean}
     * @memberof PackageCodeType
     */
    group?: boolean;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof PackageCodeType
     */
    hasMore?: boolean;
    /**
     *
     * @type {PackageCodeHeaderType}
     * @memberof PackageCodeType
     */
    header?: PackageCodeHeaderType;
    /**
     * Hotel code for the packages.
     * @type {string}
     * @memberof PackageCodeType
     */
    hotelId?: string;
    /**
     * Package Code specific to a rate plan code.
     * @type {string}
     * @memberof PackageCodeType
     */
    ratePlanCode?: string;
    /**
     * Flag to configure the package as Award Package so they can be redeemed for points on a reservation
     * @type {boolean}
     * @memberof PackageCodeType
     */
    redemption?: boolean;
    /**
     * Package code price schedule details.
     * @type {Array<ConfigPackageScheduleType>}
     * @memberof PackageCodeType
     */
    schedules?: Array<ConfigPackageScheduleType>;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof PackageCodeType
     */
    totalResults?: number;
}
/**
 * Check if a given object implements the PackageCodeType interface.
 */
export declare function instanceOfPackageCodeType(value: object): boolean;
export declare function PackageCodeTypeFromJSON(json: any): PackageCodeType;
export declare function PackageCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackageCodeType;
export declare function PackageCodeTypeToJSON(value?: PackageCodeType | null): any;
