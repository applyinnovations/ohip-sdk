/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A Rate which is of Advanced Dynamic Base Rate can have rate schedule based on an offset from its Base Rate or BAR Rate.
 * @export
 * @interface AdvancedBaseRateOffsetType
 */
export interface AdvancedBaseRateOffsetType {
    /**
     * Should this schedule be Advanced dynamically based on BAR rate.
     * @type {boolean}
     * @memberof AdvancedBaseRateOffsetType
     */
    applyBar?: boolean;
    /**
     * It signifies offset amount is of Flat or Percentage type. Valid Values are F/P.
     * @type {string}
     * @memberof AdvancedBaseRateOffsetType
     */
    flatOrPercentage?: string;
    /**
     * offset amount for the advanced dynamic base rate schedule.
     * @type {number}
     * @memberof AdvancedBaseRateOffsetType
     */
    offset?: number;
}
/**
 * Check if a given object implements the AdvancedBaseRateOffsetType interface.
 */
export declare function instanceOfAdvancedBaseRateOffsetType(value: object): boolean;
export declare function AdvancedBaseRateOffsetTypeFromJSON(json: any): AdvancedBaseRateOffsetType;
export declare function AdvancedBaseRateOffsetTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancedBaseRateOffsetType;
export declare function AdvancedBaseRateOffsetTypeToJSON(value?: AdvancedBaseRateOffsetType | null): any;
