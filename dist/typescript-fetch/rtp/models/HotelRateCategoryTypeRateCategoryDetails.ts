/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Begin date for the rate category.
 * @export
 * @interface HotelRateCategoryTypeRateCategoryDetails
 */
export interface HotelRateCategoryTypeRateCategoryDetails {
    /**
     * Begin date for the rate category.
     * @type {Date}
     * @memberof HotelRateCategoryTypeRateCategoryDetails
     */
    beginDate?: Date;
    /**
     * End date for the rate category.
     * @type {Date}
     * @memberof HotelRateCategoryTypeRateCategoryDetails
     */
    endDate?: Date;
    /**
     * Description of rate category.
     * @type {string}
     * @memberof HotelRateCategoryTypeRateCategoryDetails
     */
    description?: string;
    /**
     * Active date of the room category.
     * @type {string}
     * @memberof HotelRateCategoryTypeRateCategoryDetails
     */
    rateClass?: string;
    /**
     * Indicates rate category sell sequence.
     * @type {number}
     * @memberof HotelRateCategoryTypeRateCategoryDetails
     */
    sellSequence?: number;
}

/**
 * Check if a given object implements the HotelRateCategoryTypeRateCategoryDetails interface.
 */
export function instanceOfHotelRateCategoryTypeRateCategoryDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelRateCategoryTypeRateCategoryDetailsFromJSON(json: any): HotelRateCategoryTypeRateCategoryDetails {
    return HotelRateCategoryTypeRateCategoryDetailsFromJSONTyped(json, false);
}

export function HotelRateCategoryTypeRateCategoryDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelRateCategoryTypeRateCategoryDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'beginDate': !exists(json, 'beginDate') ? undefined : (new Date(json['beginDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'rateClass': !exists(json, 'rateClass') ? undefined : json['rateClass'],
        'sellSequence': !exists(json, 'sellSequence') ? undefined : json['sellSequence'],
    };
}

export function HotelRateCategoryTypeRateCategoryDetailsToJSON(value?: HotelRateCategoryTypeRateCategoryDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'beginDate': value.beginDate === undefined ? undefined : (value.beginDate.toISOString().substr(0,10)),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString().substr(0,10)),
        'description': value.description,
        'rateClass': value.rateClass,
        'sellSequence': value.sellSequence,
    };
}

