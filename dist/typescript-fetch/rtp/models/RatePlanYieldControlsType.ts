/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RatePlanYieldableType } from './RatePlanYieldableType';
import {
    RatePlanYieldableTypeFromJSON,
    RatePlanYieldableTypeFromJSONTyped,
    RatePlanYieldableTypeToJSON,
} from './RatePlanYieldableType';

/**
 * 
 * @export
 * @interface RatePlanYieldControlsType
 */
export interface RatePlanYieldControlsType {
    /**
     * 
     * @type {RatePlanYieldableType}
     * @memberof RatePlanYieldControlsType
     */
    yieldable?: RatePlanYieldableType;
    /**
     * This rate plan code is to be yielded as Yield as Rate Plan Code (if any).
     * @type {string}
     * @memberof RatePlanYieldControlsType
     */
    yieldAsRatePlanCode?: string;
    /**
     * Yield Market Code for the rate plan code.
     * @type {Array<string>}
     * @memberof RatePlanYieldControlsType
     */
    yieldMarketCodeList?: Array<string>;
    /**
     * The rate bucket the rate plan code belongs to.
     * @type {string}
     * @memberof RatePlanYieldControlsType
     */
    rateBucket?: string;
}

/**
 * Check if a given object implements the RatePlanYieldControlsType interface.
 */
export function instanceOfRatePlanYieldControlsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanYieldControlsTypeFromJSON(json: any): RatePlanYieldControlsType {
    return RatePlanYieldControlsTypeFromJSONTyped(json, false);
}

export function RatePlanYieldControlsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanYieldControlsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'yieldable': !exists(json, 'yieldable') ? undefined : RatePlanYieldableTypeFromJSON(json['yieldable']),
        'yieldAsRatePlanCode': !exists(json, 'yieldAsRatePlanCode') ? undefined : json['yieldAsRatePlanCode'],
        'yieldMarketCodeList': !exists(json, 'yieldMarketCodeList') ? undefined : json['yieldMarketCodeList'],
        'rateBucket': !exists(json, 'rateBucket') ? undefined : json['rateBucket'],
    };
}

export function RatePlanYieldControlsTypeToJSON(value?: RatePlanYieldControlsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'yieldable': RatePlanYieldableTypeToJSON(value.yieldable),
        'yieldAsRatePlanCode': value.yieldAsRatePlanCode,
        'yieldMarketCodeList': value.yieldMarketCodeList,
        'rateBucket': value.rateBucket,
    };
}

