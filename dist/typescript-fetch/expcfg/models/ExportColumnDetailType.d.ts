/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExportColumnInfoType } from './ExportColumnInfoType';
import type { ExportColumnXMLType } from './ExportColumnXMLType';
import type { UniqueIDType } from './UniqueIDType';
/**
 *
 * @export
 * @interface ExportColumnDetailType
 */
export interface ExportColumnDetailType {
    /**
     * Column Alignment.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    columnAlignment?: string;
    /**
     *
     * @type {ExportColumnInfoType}
     * @memberof ExportColumnDetailType
     */
    columnDataType?: ExportColumnInfoType;
    /**
     * Column format.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    columnFormat?: string;
    /**
     * Length of the column.
     * @type {number}
     * @memberof ExportColumnDetailType
     */
    columnLength?: number;
    /**
     * Name of the column to Export.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    columnName?: string;
    /**
     * Order by column.
     * @type {number}
     * @memberof ExportColumnDetailType
     */
    columnOrderBy?: number;
    /**
     * Type of the column.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    columnType?: string;
    /**
     *
     * @type {boolean}
     * @memberof ExportColumnDetailType
     */
    databaseColumn?: boolean;
    /**
     * Default value of the column.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    defaultValue?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ExportColumnDetailType
     */
    exportDataId?: UniqueIDType;
    /**
     * Filter on the Additional Source View for XML Complex Elements.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    filter?: string;
    /**
     * Formula for the Formula Column.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    formula?: string;
    /**
     *
     * @type {boolean}
     * @memberof ExportColumnDetailType
     */
    ignoreLength?: boolean;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ExportColumnDetailType
     */
    parentColumnId?: UniqueIDType;
    /**
     * Name of an additional database view that the column, and its descendants, may be derived from. This column, and its descendants, may also be derived from the export header's source view, as well as any ancestor's source view.
     * @type {string}
     * @memberof ExportColumnDetailType
     */
    sourceViewName?: string;
    /**
     *
     * @type {boolean}
     * @memberof ExportColumnDetailType
     */
    tagRequired?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ExportColumnDetailType
     */
    xMLAttribute?: boolean;
    /**
     *
     * @type {ExportColumnXMLType}
     * @memberof ExportColumnDetailType
     */
    xMLColumnType?: ExportColumnXMLType;
}
/**
 * Check if a given object implements the ExportColumnDetailType interface.
 */
export declare function instanceOfExportColumnDetailType(value: object): boolean;
export declare function ExportColumnDetailTypeFromJSON(json: any): ExportColumnDetailType;
export declare function ExportColumnDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportColumnDetailType;
export declare function ExportColumnDetailTypeToJSON(value?: ExportColumnDetailType | null): any;
