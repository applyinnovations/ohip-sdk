"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportXMLAttributeTypeToJSON = exports.ExportXMLAttributeTypeFromJSONTyped = exports.ExportXMLAttributeTypeFromJSON = exports.instanceOfExportXMLAttributeType = void 0;
const runtime_1 = require("../runtime");
const ExportColumnLengthType_1 = require("./ExportColumnLengthType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ExportXMLAttributeType interface.
 */
function instanceOfExportXMLAttributeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportXMLAttributeType = instanceOfExportXMLAttributeType;
function ExportXMLAttributeTypeFromJSON(json) {
    return ExportXMLAttributeTypeFromJSONTyped(json, false);
}
exports.ExportXMLAttributeTypeFromJSON = ExportXMLAttributeTypeFromJSON;
function ExportXMLAttributeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'value': !(0, runtime_1.exists)(json, 'value') ? undefined : json['value'],
        'length': !(0, runtime_1.exists)(json, 'length') ? undefined : (0, ExportColumnLengthType_1.ExportColumnLengthTypeFromJSON)(json['length']),
        'required': !(0, runtime_1.exists)(json, 'required') ? undefined : json['required'],
        'exportDataId': !(0, runtime_1.exists)(json, 'exportDataId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['exportDataId']),
        'parentDataID': !(0, runtime_1.exists)(json, 'parentDataID') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['parentDataID']),
    };
}
exports.ExportXMLAttributeTypeFromJSONTyped = ExportXMLAttributeTypeFromJSONTyped;
function ExportXMLAttributeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'value': value.value,
        'length': (0, ExportColumnLengthType_1.ExportColumnLengthTypeToJSON)(value.length),
        'required': value.required,
        'exportDataId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.exportDataId),
        'parentDataID': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.parentDataID),
    };
}
exports.ExportXMLAttributeTypeToJSON = ExportXMLAttributeTypeToJSON;
