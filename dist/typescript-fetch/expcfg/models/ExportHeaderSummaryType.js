"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportHeaderSummaryTypeToJSON = exports.ExportHeaderSummaryTypeFromJSONTyped = exports.ExportHeaderSummaryTypeFromJSON = exports.instanceOfExportHeaderSummaryType = void 0;
const runtime_1 = require("../runtime");
const ExportType_1 = require("./ExportType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ExportHeaderSummaryType interface.
 */
function instanceOfExportHeaderSummaryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportHeaderSummaryType = instanceOfExportHeaderSummaryType;
function ExportHeaderSummaryTypeFromJSON(json) {
    return ExportHeaderSummaryTypeFromJSONTyped(json, false);
}
exports.ExportHeaderSummaryTypeFromJSON = ExportHeaderSummaryTypeFromJSON;
function ExportHeaderSummaryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'exportFileId': !(0, runtime_1.exists)(json, 'exportFileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['exportFileId']),
        'fileType': !(0, runtime_1.exists)(json, 'fileType') ? undefined : json['fileType'],
        'sourceDescription': !(0, runtime_1.exists)(json, 'sourceDescription') ? undefined : json['sourceDescription'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'exportType': !(0, runtime_1.exists)(json, 'exportType') ? undefined : (0, ExportType_1.ExportTypeFromJSON)(json['exportType']),
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'masterExportId': !(0, runtime_1.exists)(json, 'masterExportId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['masterExportId']),
        'parameterForm': !(0, runtime_1.exists)(json, 'parameterForm') ? undefined : json['parameterForm'],
        'exportXml': !(0, runtime_1.exists)(json, 'exportXml') ? undefined : json['exportXml'],
        'logLevel': !(0, runtime_1.exists)(json, 'logLevel') ? undefined : json['logLevel'],
        'exportSequence': !(0, runtime_1.exists)(json, 'exportSequence') ? undefined : json['exportSequence'],
        'containsSensitiveData': !(0, runtime_1.exists)(json, 'containsSensitiveData') ? undefined : json['containsSensitiveData'],
    };
}
exports.ExportHeaderSummaryTypeFromJSONTyped = ExportHeaderSummaryTypeFromJSONTyped;
function ExportHeaderSummaryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'exportFileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.exportFileId),
        'fileType': value.fileType,
        'sourceDescription': value.sourceDescription,
        'description': value.description,
        'hotelId': value.hotelId,
        'exportType': (0, ExportType_1.ExportTypeToJSON)(value.exportType),
        'inactive': value.inactive,
        'masterExportId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.masterExportId),
        'parameterForm': value.parameterForm,
        'exportXml': value.exportXml,
        'logLevel': value.logLevel,
        'exportSequence': value.exportSequence,
        'containsSensitiveData': value.containsSensitiveData,
    };
}
exports.ExportHeaderSummaryTypeToJSON = ExportHeaderSummaryTypeToJSON;
