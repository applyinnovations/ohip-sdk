"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportListTypeToJSON = exports.ExportListTypeFromJSONTyped = exports.ExportListTypeFromJSON = exports.instanceOfExportListType = void 0;
const runtime_1 = require("../runtime");
const ExportConfigurationType_1 = require("./ExportConfigurationType");
/**
 * Check if a given object implements the ExportListType interface.
 */
function instanceOfExportListType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportListType = instanceOfExportListType;
function ExportListTypeFromJSON(json) {
    return ExportListTypeFromJSONTyped(json, false);
}
exports.ExportListTypeFromJSON = ExportListTypeFromJSON;
function ExportListTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        '_export': !(0, runtime_1.exists)(json, 'export') ? undefined : (json['export'].map(ExportConfigurationType_1.ExportConfigurationTypeFromJSON)),
        'hasMore': !(0, runtime_1.exists)(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !(0, runtime_1.exists)(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !(0, runtime_1.exists)(json, 'count') ? undefined : json['count'],
    };
}
exports.ExportListTypeFromJSONTyped = ExportListTypeFromJSONTyped;
function ExportListTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'export': value._export === undefined ? undefined : (value._export.map(ExportConfigurationType_1.ExportConfigurationTypeToJSON)),
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
    };
}
exports.ExportListTypeToJSON = ExportListTypeToJSON;
