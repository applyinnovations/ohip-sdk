/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExportXMLAttributeType } from './ExportXMLAttributeType';
import type { ExportXMLElementType } from './ExportXMLElementType';
/**
 * XML Columns type that hold information to all the element and attribute configuations
 * @export
 * @interface ExportXMLColumnsType
 */
export interface ExportXMLColumnsType {
    /**
     * XML attribute type that holds all the information related to attribute tag
     * @type {Array<ExportXMLAttributeType>}
     * @memberof ExportXMLColumnsType
     */
    attributes?: Array<ExportXMLAttributeType>;
    /**
     * XML element type that holds all the information related to element tag
     * @type {Array<ExportXMLElementType>}
     * @memberof ExportXMLColumnsType
     */
    elements?: Array<ExportXMLElementType>;
}
/**
 * Check if a given object implements the ExportXMLColumnsType interface.
 */
export declare function instanceOfExportXMLColumnsType(value: object): boolean;
export declare function ExportXMLColumnsTypeFromJSON(json: any): ExportXMLColumnsType;
export declare function ExportXMLColumnsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportXMLColumnsType;
export declare function ExportXMLColumnsTypeToJSON(value?: ExportXMLColumnsType | null): any;
