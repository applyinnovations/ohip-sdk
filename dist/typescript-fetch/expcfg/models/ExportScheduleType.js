"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportScheduleTypeToJSON = exports.ExportScheduleTypeFromJSONTyped = exports.ExportScheduleTypeFromJSON = exports.instanceOfExportScheduleType = void 0;
const runtime_1 = require("../runtime");
const ExportScheduleFrequencyType_1 = require("./ExportScheduleFrequencyType");
const ScheduleExportGroupType_1 = require("./ScheduleExportGroupType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ExportScheduleType interface.
 */
function instanceOfExportScheduleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportScheduleType = instanceOfExportScheduleType;
function ExportScheduleTypeFromJSON(json) {
    return ExportScheduleTypeFromJSONTyped(json, false);
}
exports.ExportScheduleTypeFromJSON = ExportScheduleTypeFromJSON;
function ExportScheduleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'jobName': !(0, runtime_1.exists)(json, 'jobName') ? undefined : json['jobName'],
        'exportFileId': !(0, runtime_1.exists)(json, 'exportFileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['exportFileId']),
        'exportName': !(0, runtime_1.exists)(json, 'exportName') ? undefined : json['exportName'],
        'exportDescription': !(0, runtime_1.exists)(json, 'exportDescription') ? undefined : json['exportDescription'],
        'exportGroup': !(0, runtime_1.exists)(json, 'exportGroup') ? undefined : (0, ScheduleExportGroupType_1.ScheduleExportGroupTypeFromJSON)(json['exportGroup']),
        'createdBy': !(0, runtime_1.exists)(json, 'createdBy') ? undefined : json['createdBy'],
        'runcount': !(0, runtime_1.exists)(json, 'runcount') ? undefined : json['runcount'],
        'nextScheduledRun': !(0, runtime_1.exists)(json, 'nextScheduledRun') ? undefined : json['nextScheduledRun'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'frequency': !(0, runtime_1.exists)(json, 'frequency') ? undefined : (0, ExportScheduleFrequencyType_1.ExportScheduleFrequencyTypeFromJSON)(json['frequency']),
    };
}
exports.ExportScheduleTypeFromJSONTyped = ExportScheduleTypeFromJSONTyped;
function ExportScheduleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'jobName': value.jobName,
        'exportFileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.exportFileId),
        'exportName': value.exportName,
        'exportDescription': value.exportDescription,
        'exportGroup': (0, ScheduleExportGroupType_1.ScheduleExportGroupTypeToJSON)(value.exportGroup),
        'createdBy': value.createdBy,
        'runcount': value.runcount,
        'nextScheduledRun': value.nextScheduledRun,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'status': value.status,
        'inactive': value.inactive,
        'frequency': (0, ExportScheduleFrequencyType_1.ExportScheduleFrequencyTypeToJSON)(value.frequency),
    };
}
exports.ExportScheduleTypeToJSON = ExportScheduleTypeToJSON;
