"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportDestinationTypeToJSON = exports.ExportDestinationTypeFromJSONTyped = exports.ExportDestinationTypeFromJSON = exports.instanceOfExportDestinationType = void 0;
const runtime_1 = require("../runtime");
const FileDeliveryConfigType_1 = require("./FileDeliveryConfigType");
const TransportMethodType_1 = require("./TransportMethodType");
/**
 * Check if a given object implements the ExportDestinationType interface.
 */
function instanceOfExportDestinationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportDestinationType = instanceOfExportDestinationType;
function ExportDestinationTypeFromJSON(json) {
    return ExportDestinationTypeFromJSONTyped(json, false);
}
exports.ExportDestinationTypeFromJSON = ExportDestinationTypeFromJSON;
function ExportDestinationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'encryptionKey': !(0, runtime_1.exists)(json, 'encryptionKey') ? undefined : json['encryptionKey'],
        'encryptionType': !(0, runtime_1.exists)(json, 'encryptionType') ? undefined : json['encryptionType'],
        'fileDeliveryConfig': !(0, runtime_1.exists)(json, 'fileDeliveryConfig') ? undefined : (0, FileDeliveryConfigType_1.FileDeliveryConfigTypeFromJSON)(json['fileDeliveryConfig']),
        'fileExtension': !(0, runtime_1.exists)(json, 'fileExtension') ? undefined : json['fileExtension'],
        'fileName': !(0, runtime_1.exists)(json, 'fileName') ? undefined : json['fileName'],
        'httpAddress': !(0, runtime_1.exists)(json, 'httpAddress') ? undefined : json['httpAddress'],
        'oXIInterfaceId': !(0, runtime_1.exists)(json, 'oXIInterfaceId') ? undefined : json['oXIInterfaceId'],
        'protocol': !(0, runtime_1.exists)(json, 'protocol') ? undefined : json['protocol'],
        'sOAPActionInformation': !(0, runtime_1.exists)(json, 'sOAPActionInformation') ? undefined : json['sOAPActionInformation'],
        'transportMethod': !(0, runtime_1.exists)(json, 'transportMethod') ? undefined : (0, TransportMethodType_1.TransportMethodTypeFromJSON)(json['transportMethod']),
        'uploadType': !(0, runtime_1.exists)(json, 'uploadType') ? undefined : json['uploadType'],
        'useOXIInterface': !(0, runtime_1.exists)(json, 'useOXIInterface') ? undefined : json['useOXIInterface'],
        'xMLDocumentName': !(0, runtime_1.exists)(json, 'xMLDocumentName') ? undefined : json['xMLDocumentName'],
        'zipFileLocation': !(0, runtime_1.exists)(json, 'zipFileLocation') ? undefined : json['zipFileLocation'],
        'zipFileName': !(0, runtime_1.exists)(json, 'zipFileName') ? undefined : json['zipFileName'],
    };
}
exports.ExportDestinationTypeFromJSONTyped = ExportDestinationTypeFromJSONTyped;
function ExportDestinationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'encryptionKey': value.encryptionKey,
        'encryptionType': value.encryptionType,
        'fileDeliveryConfig': (0, FileDeliveryConfigType_1.FileDeliveryConfigTypeToJSON)(value.fileDeliveryConfig),
        'fileExtension': value.fileExtension,
        'fileName': value.fileName,
        'httpAddress': value.httpAddress,
        'oXIInterfaceId': value.oXIInterfaceId,
        'protocol': value.protocol,
        'sOAPActionInformation': value.sOAPActionInformation,
        'transportMethod': (0, TransportMethodType_1.TransportMethodTypeToJSON)(value.transportMethod),
        'uploadType': value.uploadType,
        'useOXIInterface': value.useOXIInterface,
        'xMLDocumentName': value.xMLDocumentName,
        'zipFileLocation': value.zipFileLocation,
        'zipFileName': value.zipFileName,
    };
}
exports.ExportDestinationTypeToJSON = ExportDestinationTypeToJSON;
