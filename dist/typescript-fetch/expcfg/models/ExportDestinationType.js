"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportDestinationTypeToJSON = exports.ExportDestinationTypeFromJSONTyped = exports.ExportDestinationTypeFromJSON = exports.instanceOfExportDestinationType = void 0;
const runtime_1 = require("../runtime");
const FileDeliveryConfigType_1 = require("./FileDeliveryConfigType");
const TransportMethodType_1 = require("./TransportMethodType");
/**
 * Check if a given object implements the ExportDestinationType interface.
 */
function instanceOfExportDestinationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExportDestinationType = instanceOfExportDestinationType;
function ExportDestinationTypeFromJSON(json) {
    return ExportDestinationTypeFromJSONTyped(json, false);
}
exports.ExportDestinationTypeFromJSON = ExportDestinationTypeFromJSON;
function ExportDestinationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'transportMethod': !(0, runtime_1.exists)(json, 'transportMethod') ? undefined : (0, TransportMethodType_1.TransportMethodTypeFromJSON)(json['transportMethod']),
        'fileDeliveryConfig': !(0, runtime_1.exists)(json, 'fileDeliveryConfig') ? undefined : (0, FileDeliveryConfigType_1.FileDeliveryConfigTypeFromJSON)(json['fileDeliveryConfig']),
        'useOXIInterface': !(0, runtime_1.exists)(json, 'useOXIInterface') ? undefined : json['useOXIInterface'],
        'oXIInterfaceId': !(0, runtime_1.exists)(json, 'oXIInterfaceId') ? undefined : json['oXIInterfaceId'],
        'uploadType': !(0, runtime_1.exists)(json, 'uploadType') ? undefined : json['uploadType'],
        'protocol': !(0, runtime_1.exists)(json, 'protocol') ? undefined : json['protocol'],
        'httpAddress': !(0, runtime_1.exists)(json, 'httpAddress') ? undefined : json['httpAddress'],
        'sOAPActionInformation': !(0, runtime_1.exists)(json, 'sOAPActionInformation') ? undefined : json['sOAPActionInformation'],
        'encryptionType': !(0, runtime_1.exists)(json, 'encryptionType') ? undefined : json['encryptionType'],
        'encryptionKey': !(0, runtime_1.exists)(json, 'encryptionKey') ? undefined : json['encryptionKey'],
        'xMLDocumentName': !(0, runtime_1.exists)(json, 'xMLDocumentName') ? undefined : json['xMLDocumentName'],
        'fileName': !(0, runtime_1.exists)(json, 'fileName') ? undefined : json['fileName'],
        'fileExtension': !(0, runtime_1.exists)(json, 'fileExtension') ? undefined : json['fileExtension'],
        'zipFileName': !(0, runtime_1.exists)(json, 'zipFileName') ? undefined : json['zipFileName'],
        'zipFileLocation': !(0, runtime_1.exists)(json, 'zipFileLocation') ? undefined : json['zipFileLocation'],
    };
}
exports.ExportDestinationTypeFromJSONTyped = ExportDestinationTypeFromJSONTyped;
function ExportDestinationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'transportMethod': (0, TransportMethodType_1.TransportMethodTypeToJSON)(value.transportMethod),
        'fileDeliveryConfig': (0, FileDeliveryConfigType_1.FileDeliveryConfigTypeToJSON)(value.fileDeliveryConfig),
        'useOXIInterface': value.useOXIInterface,
        'oXIInterfaceId': value.oXIInterfaceId,
        'uploadType': value.uploadType,
        'protocol': value.protocol,
        'httpAddress': value.httpAddress,
        'sOAPActionInformation': value.sOAPActionInformation,
        'encryptionType': value.encryptionType,
        'encryptionKey': value.encryptionKey,
        'xMLDocumentName': value.xMLDocumentName,
        'fileName': value.fileName,
        'fileExtension': value.fileExtension,
        'zipFileName': value.zipFileName,
        'zipFileLocation': value.zipFileLocation,
    };
}
exports.ExportDestinationTypeToJSON = ExportDestinationTypeToJSON;
