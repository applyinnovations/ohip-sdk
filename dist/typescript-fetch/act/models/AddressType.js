"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressTypeToJSON = exports.AddressTypeFromJSONTyped = exports.AddressTypeFromJSON = exports.instanceOfAddressType = void 0;
const runtime_1 = require("../runtime");
const CountryNameType_1 = require("./CountryNameType");
/**
 * Check if a given object implements the AddressType interface.
 */
function instanceOfAddressType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAddressType = instanceOfAddressType;
function AddressTypeFromJSON(json) {
    return AddressTypeFromJSONTyped(json, false);
}
exports.AddressTypeFromJSON = AddressTypeFromJSON;
function AddressTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'isValidated': !(0, runtime_1.exists)(json, 'isValidated') ? undefined : json['isValidated'],
        'addressLine': !(0, runtime_1.exists)(json, 'addressLine') ? undefined : json['addressLine'],
        'cityName': !(0, runtime_1.exists)(json, 'cityName') ? undefined : json['cityName'],
        'postalCode': !(0, runtime_1.exists)(json, 'postalCode') ? undefined : json['postalCode'],
        'cityExtension': !(0, runtime_1.exists)(json, 'cityExtension') ? undefined : json['cityExtension'],
        'county': !(0, runtime_1.exists)(json, 'county') ? undefined : json['county'],
        'state': !(0, runtime_1.exists)(json, 'state') ? undefined : json['state'],
        'country': !(0, runtime_1.exists)(json, 'country') ? undefined : (0, CountryNameType_1.CountryNameTypeFromJSON)(json['country']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'typeDescription': !(0, runtime_1.exists)(json, 'typeDescription') ? undefined : json['typeDescription'],
    };
}
exports.AddressTypeFromJSONTyped = AddressTypeFromJSONTyped;
function AddressTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'isValidated': value.isValidated,
        'addressLine': value.addressLine,
        'cityName': value.cityName,
        'postalCode': value.postalCode,
        'cityExtension': value.cityExtension,
        'county': value.county,
        'state': value.state,
        'country': (0, CountryNameType_1.CountryNameTypeToJSON)(value.country),
        'type': value.type,
        'typeDescription': value.typeDescription,
    };
}
exports.AddressTypeToJSON = AddressTypeToJSON;
