"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityDetailsTypeLinkedContactsToJSON = exports.ActivityDetailsTypeLinkedContactsFromJSONTyped = exports.ActivityDetailsTypeLinkedContactsFromJSON = exports.instanceOfActivityDetailsTypeLinkedContacts = void 0;
const runtime_1 = require("../runtime");
const ActivityLinkedProfilesType_1 = require("./ActivityLinkedProfilesType");
/**
 * Check if a given object implements the ActivityDetailsTypeLinkedContacts interface.
 */
function instanceOfActivityDetailsTypeLinkedContacts(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfActivityDetailsTypeLinkedContacts = instanceOfActivityDetailsTypeLinkedContacts;
function ActivityDetailsTypeLinkedContactsFromJSON(json) {
    return ActivityDetailsTypeLinkedContactsFromJSONTyped(json, false);
}
exports.ActivityDetailsTypeLinkedContactsFromJSON = ActivityDetailsTypeLinkedContactsFromJSON;
function ActivityDetailsTypeLinkedContactsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityContact': !(0, runtime_1.exists)(json, 'activityContact') ? undefined : (json['activityContact'].map(ActivityLinkedProfilesType_1.ActivityLinkedProfilesTypeFromJSON)),
        'fullOverlay': !(0, runtime_1.exists)(json, 'fullOverlay') ? undefined : json['fullOverlay'],
    };
}
exports.ActivityDetailsTypeLinkedContactsFromJSONTyped = ActivityDetailsTypeLinkedContactsFromJSONTyped;
function ActivityDetailsTypeLinkedContactsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityContact': value.activityContact === undefined ? undefined : (value.activityContact.map(ActivityLinkedProfilesType_1.ActivityLinkedProfilesTypeToJSON)),
        'fullOverlay': value.fullOverlay,
    };
}
exports.ActivityDetailsTypeLinkedContactsToJSON = ActivityDetailsTypeLinkedContactsToJSON;
