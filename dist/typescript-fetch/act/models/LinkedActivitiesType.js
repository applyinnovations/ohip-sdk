"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkedActivitiesTypeToJSON = exports.LinkedActivitiesTypeFromJSONTyped = exports.LinkedActivitiesTypeFromJSON = exports.instanceOfLinkedActivitiesType = void 0;
const runtime_1 = require("../runtime");
const ActivityId_1 = require("./ActivityId");
/**
 * Check if a given object implements the LinkedActivitiesType interface.
 */
function instanceOfLinkedActivitiesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfLinkedActivitiesType = instanceOfLinkedActivitiesType;
function LinkedActivitiesTypeFromJSON(json) {
    return LinkedActivitiesTypeFromJSONTyped(json, false);
}
exports.LinkedActivitiesTypeFromJSON = LinkedActivitiesTypeFromJSON;
function LinkedActivitiesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityId': !(0, runtime_1.exists)(json, 'activityId') ? undefined : (0, ActivityId_1.ActivityIdFromJSON)(json['activityId']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'ownerCodeList': !(0, runtime_1.exists)(json, 'ownerCodeList') ? undefined : json['ownerCodeList'],
    };
}
exports.LinkedActivitiesTypeFromJSONTyped = LinkedActivitiesTypeFromJSONTyped;
function LinkedActivitiesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityId': (0, ActivityId_1.ActivityIdToJSON)(value.activityId),
        'hotelId': value.hotelId,
        'ownerCodeList': value.ownerCodeList,
    };
}
exports.LinkedActivitiesTypeToJSON = LinkedActivitiesTypeToJSON;
