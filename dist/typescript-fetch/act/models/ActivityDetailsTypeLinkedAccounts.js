"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityDetailsTypeLinkedAccountsToJSON = exports.ActivityDetailsTypeLinkedAccountsFromJSONTyped = exports.ActivityDetailsTypeLinkedAccountsFromJSON = exports.instanceOfActivityDetailsTypeLinkedAccounts = void 0;
const runtime_1 = require("../runtime");
const ActivityLinkedProfilesType_1 = require("./ActivityLinkedProfilesType");
/**
 * Check if a given object implements the ActivityDetailsTypeLinkedAccounts interface.
 */
function instanceOfActivityDetailsTypeLinkedAccounts(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfActivityDetailsTypeLinkedAccounts = instanceOfActivityDetailsTypeLinkedAccounts;
function ActivityDetailsTypeLinkedAccountsFromJSON(json) {
    return ActivityDetailsTypeLinkedAccountsFromJSONTyped(json, false);
}
exports.ActivityDetailsTypeLinkedAccountsFromJSON = ActivityDetailsTypeLinkedAccountsFromJSON;
function ActivityDetailsTypeLinkedAccountsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityAccount': !(0, runtime_1.exists)(json, 'activityAccount') ? undefined : (json['activityAccount'].map(ActivityLinkedProfilesType_1.ActivityLinkedProfilesTypeFromJSON)),
        'fullOverlay': !(0, runtime_1.exists)(json, 'fullOverlay') ? undefined : json['fullOverlay'],
    };
}
exports.ActivityDetailsTypeLinkedAccountsFromJSONTyped = ActivityDetailsTypeLinkedAccountsFromJSONTyped;
function ActivityDetailsTypeLinkedAccountsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityAccount': value.activityAccount === undefined ? undefined : (value.activityAccount.map(ActivityLinkedProfilesType_1.ActivityLinkedProfilesTypeToJSON)),
        'fullOverlay': value.fullOverlay,
    };
}
exports.ActivityDetailsTypeLinkedAccountsToJSON = ActivityDetailsTypeLinkedAccountsToJSON;
