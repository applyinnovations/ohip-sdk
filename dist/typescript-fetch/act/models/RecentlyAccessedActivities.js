"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecentlyAccessedActivitiesToJSON = exports.RecentlyAccessedActivitiesFromJSONTyped = exports.RecentlyAccessedActivitiesFromJSON = exports.instanceOfRecentlyAccessedActivities = void 0;
const runtime_1 = require("../runtime");
const InstanceLink_1 = require("./InstanceLink");
const RecentlyAccessedActivityType_1 = require("./RecentlyAccessedActivityType");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the RecentlyAccessedActivities interface.
 */
function instanceOfRecentlyAccessedActivities(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRecentlyAccessedActivities = instanceOfRecentlyAccessedActivities;
function RecentlyAccessedActivitiesFromJSON(json) {
    return RecentlyAccessedActivitiesFromJSONTyped(json, false);
}
exports.RecentlyAccessedActivitiesFromJSON = RecentlyAccessedActivitiesFromJSON;
function RecentlyAccessedActivitiesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activities': !(0, runtime_1.exists)(json, 'activities') ? undefined : (json['activities'].map(RecentlyAccessedActivityType_1.RecentlyAccessedActivityTypeFromJSON)),
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (json['links'].map(InstanceLink_1.InstanceLinkFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.RecentlyAccessedActivitiesFromJSONTyped = RecentlyAccessedActivitiesFromJSONTyped;
function RecentlyAccessedActivitiesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activities': value.activities === undefined ? undefined : (value.activities.map(RecentlyAccessedActivityType_1.RecentlyAccessedActivityTypeToJSON)),
        'links': value.links === undefined ? undefined : (value.links.map(InstanceLink_1.InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.RecentlyAccessedActivitiesToJSON = RecentlyAccessedActivitiesToJSON;
