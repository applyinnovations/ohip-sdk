"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityDetailsTypeToJSON = exports.ActivityDetailsTypeFromJSONTyped = exports.ActivityDetailsTypeFromJSON = exports.instanceOfActivityDetailsType = void 0;
const runtime_1 = require("../runtime");
const ActivityBlockInfoType_1 = require("./ActivityBlockInfoType");
const ActivityDetailsTypeLinkedAccounts_1 = require("./ActivityDetailsTypeLinkedAccounts");
const ActivityDetailsTypeLinkedContacts_1 = require("./ActivityDetailsTypeLinkedContacts");
const ActivityId_1 = require("./ActivityId");
const ActivityInfoType_1 = require("./ActivityInfoType");
const AttachmentType_1 = require("./AttachmentType");
const IndicatorType_1 = require("./IndicatorType");
const LinkedActivityDetailsType_1 = require("./LinkedActivityDetailsType");
/**
 * Check if a given object implements the ActivityDetailsType interface.
 */
function instanceOfActivityDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfActivityDetailsType = instanceOfActivityDetailsType;
function ActivityDetailsTypeFromJSON(json) {
    return ActivityDetailsTypeFromJSONTyped(json, false);
}
exports.ActivityDetailsTypeFromJSON = ActivityDetailsTypeFromJSON;
function ActivityDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityDetail': !(0, runtime_1.exists)(json, 'activityDetail') ? undefined : (0, ActivityInfoType_1.ActivityInfoTypeFromJSON)(json['activityDetail']),
        'activityId': !(0, runtime_1.exists)(json, 'activityId') ? undefined : (0, ActivityId_1.ActivityIdFromJSON)(json['activityId']),
        'indicators': !(0, runtime_1.exists)(json, 'indicators') ? undefined : (json['indicators'].map(IndicatorType_1.IndicatorTypeFromJSON)),
        'linkedAccounts': !(0, runtime_1.exists)(json, 'linkedAccounts') ? undefined : (0, ActivityDetailsTypeLinkedAccounts_1.ActivityDetailsTypeLinkedAccountsFromJSON)(json['linkedAccounts']),
        'linkedActivities': !(0, runtime_1.exists)(json, 'linkedActivities') ? undefined : (json['linkedActivities'].map(LinkedActivityDetailsType_1.LinkedActivityDetailsTypeFromJSON)),
        'linkedAttachments': !(0, runtime_1.exists)(json, 'linkedAttachments') ? undefined : (json['linkedAttachments'].map(AttachmentType_1.AttachmentTypeFromJSON)),
        'linkedBlocks': !(0, runtime_1.exists)(json, 'linkedBlocks') ? undefined : (json['linkedBlocks'].map(ActivityBlockInfoType_1.ActivityBlockInfoTypeFromJSON)),
        'linkedContacts': !(0, runtime_1.exists)(json, 'linkedContacts') ? undefined : (0, ActivityDetailsTypeLinkedContacts_1.ActivityDetailsTypeLinkedContactsFromJSON)(json['linkedContacts']),
    };
}
exports.ActivityDetailsTypeFromJSONTyped = ActivityDetailsTypeFromJSONTyped;
function ActivityDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityDetail': (0, ActivityInfoType_1.ActivityInfoTypeToJSON)(value.activityDetail),
        'activityId': (0, ActivityId_1.ActivityIdToJSON)(value.activityId),
        'indicators': value.indicators === undefined ? undefined : (value.indicators.map(IndicatorType_1.IndicatorTypeToJSON)),
        'linkedAccounts': (0, ActivityDetailsTypeLinkedAccounts_1.ActivityDetailsTypeLinkedAccountsToJSON)(value.linkedAccounts),
        'linkedActivities': value.linkedActivities === undefined ? undefined : (value.linkedActivities.map(LinkedActivityDetailsType_1.LinkedActivityDetailsTypeToJSON)),
        'linkedAttachments': value.linkedAttachments === undefined ? undefined : (value.linkedAttachments.map(AttachmentType_1.AttachmentTypeToJSON)),
        'linkedBlocks': value.linkedBlocks === undefined ? undefined : (value.linkedBlocks.map(ActivityBlockInfoType_1.ActivityBlockInfoTypeToJSON)),
        'linkedContacts': (0, ActivityDetailsTypeLinkedContacts_1.ActivityDetailsTypeLinkedContactsToJSON)(value.linkedContacts),
    };
}
exports.ActivityDetailsTypeToJSON = ActivityDetailsTypeToJSON;
