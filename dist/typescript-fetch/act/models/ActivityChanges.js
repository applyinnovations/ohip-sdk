"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActivityChangesToJSON = exports.ActivityChangesFromJSONTyped = exports.ActivityChangesFromJSON = exports.instanceOfActivityChanges = void 0;
const runtime_1 = require("../runtime");
const ActivityConfigClassType_1 = require("./ActivityConfigClassType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ActivityChanges interface.
 */
function instanceOfActivityChanges(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfActivityChanges = instanceOfActivityChanges;
function ActivityChangesFromJSON(json) {
    return ActivityChangesFromJSONTyped(json, false);
}
exports.ActivityChangesFromJSON = ActivityChangesFromJSON;
function ActivityChangesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityClass': !(0, runtime_1.exists)(json, 'activityClass') ? undefined : (0, ActivityConfigClassType_1.ActivityConfigClassTypeFromJSON)(json['activityClass']),
        'activityType': !(0, runtime_1.exists)(json, 'activityType') ? undefined : json['activityType'],
        'activityPurpose': !(0, runtime_1.exists)(json, 'activityPurpose') ? undefined : json['activityPurpose'],
        'activityTraceCode': !(0, runtime_1.exists)(json, 'activityTraceCode') ? undefined : json['activityTraceCode'],
        'activityOwner': !(0, runtime_1.exists)(json, 'activityOwner') ? undefined : json['activityOwner'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'startTime': !(0, runtime_1.exists)(json, 'startTime') ? undefined : json['startTime'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'endTime': !(0, runtime_1.exists)(json, 'endTime') ? undefined : json['endTime'],
        'notes': !(0, runtime_1.exists)(json, 'notes') ? undefined : json['notes'],
        'highPriority': !(0, runtime_1.exists)(json, 'highPriority') ? undefined : json['highPriority'],
        'activityAccount': !(0, runtime_1.exists)(json, 'activityAccount') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['activityAccount']),
        'activityContact': !(0, runtime_1.exists)(json, 'activityContact') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['activityContact']),
    };
}
exports.ActivityChangesFromJSONTyped = ActivityChangesFromJSONTyped;
function ActivityChangesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityClass': (0, ActivityConfigClassType_1.ActivityConfigClassTypeToJSON)(value.activityClass),
        'activityType': value.activityType,
        'activityPurpose': value.activityPurpose,
        'activityTraceCode': value.activityTraceCode,
        'activityOwner': value.activityOwner,
        'startDate': value.startDate,
        'startTime': value.startTime,
        'endDate': value.endDate,
        'endTime': value.endTime,
        'notes': value.notes,
        'highPriority': value.highPriority,
        'activityAccount': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.activityAccount),
        'activityContact': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.activityContact),
    };
}
exports.ActivityChangesToJSON = ActivityChangesToJSON;
