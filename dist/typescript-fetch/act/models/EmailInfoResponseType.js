"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailInfoResponseTypeToJSON = exports.EmailInfoResponseTypeFromJSONTyped = exports.EmailInfoResponseTypeFromJSON = exports.instanceOfEmailInfoResponseType = void 0;
const runtime_1 = require("../runtime");
const AccountId_1 = require("./AccountId");
const BlockId_1 = require("./BlockId");
const ContactId_1 = require("./ContactId");
const EmailID_1 = require("./EmailID");
/**
 * Check if a given object implements the EmailInfoResponseType interface.
 */
function instanceOfEmailInfoResponseType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEmailInfoResponseType = instanceOfEmailInfoResponseType;
function EmailInfoResponseTypeFromJSON(json) {
    return EmailInfoResponseTypeFromJSONTyped(json, false);
}
exports.EmailInfoResponseTypeFromJSON = EmailInfoResponseTypeFromJSON;
function EmailInfoResponseTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelCodes': !(0, runtime_1.exists)(json, 'hotelCodes') ? undefined : json['hotelCodes'],
        'emailID': !(0, runtime_1.exists)(json, 'emailID') ? undefined : (0, EmailID_1.EmailIDFromJSON)(json['emailID']),
        'accountId': !(0, runtime_1.exists)(json, 'accountId') ? undefined : (0, AccountId_1.AccountIdFromJSON)(json['accountId']),
        'contactId': !(0, runtime_1.exists)(json, 'contactId') ? undefined : (0, ContactId_1.ContactIdFromJSON)(json['contactId']),
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, BlockId_1.BlockIdFromJSON)(json['blockId']),
        'emailSubject': !(0, runtime_1.exists)(json, 'emailSubject') ? undefined : json['emailSubject'],
        'senderLastName': !(0, runtime_1.exists)(json, 'senderLastName') ? undefined : json['senderLastName'],
        'senderFirstName': !(0, runtime_1.exists)(json, 'senderFirstName') ? undefined : json['senderFirstName'],
        'senderEmailAddress': !(0, runtime_1.exists)(json, 'senderEmailAddress') ? undefined : json['senderEmailAddress'],
        'emailAttachmentId': !(0, runtime_1.exists)(json, 'emailAttachmentId') ? undefined : json['emailAttachmentId'],
        'emailReceivedDateTime': !(0, runtime_1.exists)(json, 'emailReceivedDateTime') ? undefined : json['emailReceivedDateTime'],
        'emailRecipients': !(0, runtime_1.exists)(json, 'emailRecipients') ? undefined : json['emailRecipients'],
        'hasEmailAttachments': !(0, runtime_1.exists)(json, 'hasEmailAttachments') ? undefined : json['hasEmailAttachments'],
    };
}
exports.EmailInfoResponseTypeFromJSONTyped = EmailInfoResponseTypeFromJSONTyped;
function EmailInfoResponseTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelCodes': value.hotelCodes,
        'emailID': (0, EmailID_1.EmailIDToJSON)(value.emailID),
        'accountId': (0, AccountId_1.AccountIdToJSON)(value.accountId),
        'contactId': (0, ContactId_1.ContactIdToJSON)(value.contactId),
        'blockId': (0, BlockId_1.BlockIdToJSON)(value.blockId),
        'emailSubject': value.emailSubject,
        'senderLastName': value.senderLastName,
        'senderFirstName': value.senderFirstName,
        'senderEmailAddress': value.senderEmailAddress,
        'emailAttachmentId': value.emailAttachmentId,
        'emailReceivedDateTime': value.emailReceivedDateTime,
        'emailRecipients': value.emailRecipients,
        'hasEmailAttachments': value.hasEmailAttachments,
    };
}
exports.EmailInfoResponseTypeToJSON = EmailInfoResponseTypeToJSON;
