"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity Management API
 * APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutoTraceOwnerAssignmentTypeToJSON = exports.AutoTraceOwnerAssignmentTypeFromJSONTyped = exports.AutoTraceOwnerAssignmentTypeFromJSON = exports.instanceOfAutoTraceOwnerAssignmentType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the AutoTraceOwnerAssignmentType interface.
 */
function instanceOfAutoTraceOwnerAssignmentType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAutoTraceOwnerAssignmentType = instanceOfAutoTraceOwnerAssignmentType;
function AutoTraceOwnerAssignmentTypeFromJSON(json) {
    return AutoTraceOwnerAssignmentTypeFromJSONTyped(json, false);
}
exports.AutoTraceOwnerAssignmentTypeFromJSON = AutoTraceOwnerAssignmentTypeFromJSON;
function AutoTraceOwnerAssignmentTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'autoTraceOwnerAssignmentId': !(0, runtime_1.exists)(json, 'autoTraceOwnerAssignmentId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['autoTraceOwnerAssignmentId']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'ownerCode': !(0, runtime_1.exists)(json, 'ownerCode') ? undefined : json['ownerCode'],
        'ownerName': !(0, runtime_1.exists)(json, 'ownerName') ? undefined : json['ownerName'],
        'traceOwnerCode': !(0, runtime_1.exists)(json, 'traceOwnerCode') ? undefined : json['traceOwnerCode'],
        'traceOwnerName': !(0, runtime_1.exists)(json, 'traceOwnerName') ? undefined : json['traceOwnerName'],
    };
}
exports.AutoTraceOwnerAssignmentTypeFromJSONTyped = AutoTraceOwnerAssignmentTypeFromJSONTyped;
function AutoTraceOwnerAssignmentTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'autoTraceOwnerAssignmentId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.autoTraceOwnerAssignmentId),
        'hotelId': value.hotelId,
        'ownerCode': value.ownerCode,
        'ownerName': value.ownerName,
        'traceOwnerCode': value.traceOwnerCode,
        'traceOwnerName': value.traceOwnerName,
    };
}
exports.AutoTraceOwnerAssignmentTypeToJSON = AutoTraceOwnerAssignmentTypeToJSON;
