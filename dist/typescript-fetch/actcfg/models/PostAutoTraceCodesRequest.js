"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity Management API
 * APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostAutoTraceCodesRequestToJSON = exports.PostAutoTraceCodesRequestFromJSONTyped = exports.PostAutoTraceCodesRequestFromJSON = exports.instanceOfPostAutoTraceCodesRequest = void 0;
const runtime_1 = require("../runtime");
const AutoTraceCodesListType_1 = require("./AutoTraceCodesListType");
const WarningsType_1 = require("./WarningsType");
/**
 * Check if a given object implements the PostAutoTraceCodesRequest interface.
 */
function instanceOfPostAutoTraceCodesRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPostAutoTraceCodesRequest = instanceOfPostAutoTraceCodesRequest;
function PostAutoTraceCodesRequestFromJSON(json) {
    return PostAutoTraceCodesRequestFromJSONTyped(json, false);
}
exports.PostAutoTraceCodesRequestFromJSON = PostAutoTraceCodesRequestFromJSON;
function PostAutoTraceCodesRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'autoTraceCodesConfig': !(0, runtime_1.exists)(json, 'autoTraceCodesConfig') ? undefined : (0, AutoTraceCodesListType_1.AutoTraceCodesListTypeFromJSON)(json['autoTraceCodesConfig']),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (0, WarningsType_1.WarningsTypeFromJSON)(json['warnings']),
    };
}
exports.PostAutoTraceCodesRequestFromJSONTyped = PostAutoTraceCodesRequestFromJSONTyped;
function PostAutoTraceCodesRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'autoTraceCodesConfig': (0, AutoTraceCodesListType_1.AutoTraceCodesListTypeToJSON)(value.autoTraceCodesConfig),
        'warnings': (0, WarningsType_1.WarningsTypeToJSON)(value.warnings),
    };
}
exports.PostAutoTraceCodesRequestToJSON = PostAutoTraceCodesRequestToJSON;
