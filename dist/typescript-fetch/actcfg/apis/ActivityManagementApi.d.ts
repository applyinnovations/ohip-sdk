/**
 * OPERA Cloud Activity Management API
 * APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ActivityResultsConfigDetails, ActivityResultsConfigInfo, ActivityTypesConfigCopy, ActivityTypesConfigDetails, ActivityTypesConfigInfo, AutoTraceCodesDetails, AutoTraceCodesInfo, AutoTraceDefinitionCopy, AutoTraceDefinitionsDetails, AutoTraceDefinitionsInfo, AutoTraceDefinitionsStatus, AutoTraceOwnerAssignmentsDetails, AutoTraceOwnerAssignmentsInfo, AutoTraceOwnerAssignmentsStatus, Status } from '../models/index';
export interface CopyActivityTypesConfigRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activityTypesConfigCopy?: ActivityTypesConfigCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyAutoTraceDefinitionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceDefinitionCopy?: AutoTraceDefinitionCopy;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteActivityResultsConfigRequest {
    activityResultCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteActivityTypesRequest {
    activityTypeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAutoTraceCodesRequest {
    autoTraceCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAutoTraceDefinitionsRequest {
    autoTraceDefinitionId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAutoTraceOwnerAssignmentsRequest {
    autoTraceOwnerAssignmentID?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetActivityResultsConfigRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetActivityTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    activityType?: Array<string>;
    description?: string;
    inactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAutoTraceCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    codes?: Array<string>;
    autoTraceGroups?: Set<GetAutoTraceCodesAutoTraceGroupsEnum>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAutoTraceDefinitionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    codes?: Array<string>;
    autoTraceGroups?: Set<GetAutoTraceDefinitionsAutoTraceGroupsEnum>;
    inactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAutoTraceOwnerAssignmentsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    codes?: Array<string>;
    traceOwnerCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostActivityResultsConfigRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activityResultsConfigInfo?: ActivityResultsConfigInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostActivityTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activityTypesConfigInfo?: ActivityTypesConfigInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAutoTraceCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceCodesInfo?: AutoTraceCodesInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAutoTraceDefinitionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceDefinitionsInfo?: AutoTraceDefinitionsInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAutoTraceOwnerAssignmentsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceOwnerAssignmentsInfo?: AutoTraceOwnerAssignmentsInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutActivityResultsConfigRequest {
    activityResultCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activityResultsConfigInfo?: ActivityResultsConfigInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutActivityTypesRequest {
    activityTypeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activityTypesConfigInfo?: ActivityTypesConfigInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAutoTraceCodesRequest {
    autoTraceCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceCodesInfo?: AutoTraceCodesInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAutoTraceDefinitionsRequest {
    autoTraceDefinitionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceDefinitionsInfo?: AutoTraceDefinitionsInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutAutoTraceOwnerAssignmentsRequest {
    autoTraceOwnerAssignmentID?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoTraceOwnerAssignmentsInfo?: AutoTraceOwnerAssignmentsInfo;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ActivityManagementApi extends runtime.BaseAPI {
    /**
     * With this API you can select  existing Activity Type Codes from the source property and copy them to another (target) property. <p><strong>OperationId:</strong>copyActivityTypesConfig</p>
     * Copy Activity Types configuration codes
     */
    copyActivityTypesConfigRaw(requestParameters: CopyActivityTypesConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * With this API you can select  existing Activity Type Codes from the source property and copy them to another (target) property. <p><strong>OperationId:</strong>copyActivityTypesConfig</p>
     * Copy Activity Types configuration codes
     */
    copyActivityTypesConfig(requestParameters: CopyActivityTypesConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy an existing auto trace definition code to another property. <p><strong>OperationId:</strong>copyAutoTraceDefinitions</p>
     * Copy an Auto Trace definition Code
     */
    copyAutoTraceDefinitionsRaw(requestParameters: CopyAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy an existing auto trace definition code to another property. <p><strong>OperationId:</strong>copyAutoTraceDefinitions</p>
     * Copy an Auto Trace definition Code
     */
    copyAutoTraceDefinitions(requestParameters: CopyAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Delete an Activity Result Code from OPERA Cloud. <p><strong>OperationId:</strong>deleteActivityResultsConfig</p>
     * Delete an Activity results code
     */
    deleteActivityResultsConfigRaw(requestParameters: DeleteActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Delete an Activity Result Code from OPERA Cloud. <p><strong>OperationId:</strong>deleteActivityResultsConfig</p>
     * Delete an Activity results code
     */
    deleteActivityResultsConfig(requestParameters: DeleteActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This will delete an Activity Type Code from the properties configuration. <p><strong>OperationId:</strong>deleteActivityTypes</p>
     * Delete an Activity Type Code
     */
    deleteActivityTypesRaw(requestParameters: DeleteActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This will delete an Activity Type Code from the properties configuration. <p><strong>OperationId:</strong>deleteActivityTypes</p>
     * Delete an Activity Type Code
     */
    deleteActivityTypes(requestParameters: DeleteActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Delete an Auto trace code. <p><strong>OperationId:</strong>deleteAutoTraceCodes</p>
     * Delete an Auto Trace code
     */
    deleteAutoTraceCodesRaw(requestParameters: DeleteAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Delete an Auto trace code. <p><strong>OperationId:</strong>deleteAutoTraceCodes</p>
     * Delete an Auto Trace code
     */
    deleteAutoTraceCodes(requestParameters: DeleteAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Delete an Auto trace definition code. <p><strong>OperationId:</strong>deleteAutoTraceDefinitions</p>
     * Delete an Auto Trace definitions Code
     */
    deleteAutoTraceDefinitionsRaw(requestParameters: DeleteAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Delete an Auto trace definition code. <p><strong>OperationId:</strong>deleteAutoTraceDefinitions</p>
     * Delete an Auto Trace definitions Code
     */
    deleteAutoTraceDefinitions(requestParameters: DeleteAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Delete a Trace owner assignment configured for a property. <p><strong>OperationId:</strong>deleteAutoTraceOwnerAssignments</p>
     * Delete an Auto Trace owner assignment
     */
    deleteAutoTraceOwnerAssignmentsRaw(requestParameters: DeleteAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Delete a Trace owner assignment configured for a property. <p><strong>OperationId:</strong>deleteAutoTraceOwnerAssignments</p>
     * Delete an Auto Trace owner assignment
     */
    deleteAutoTraceOwnerAssignments(requestParameters: DeleteAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Retrieve a list of all configured Activity Result codes and descriptions.  Activity Results appear on the Activities screen in the Results field after the Activity is completed.  And example could be Call Again - an activity is Completed but the result code as part of the completion is to Call Again. <p><strong>OperationId:</strong>getActivityResultsConfig</p>
     * Get all Configured Activity Result Codes
     */
    getActivityResultsConfigRaw(requestParameters: GetActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActivityResultsConfigDetails>>;
    /**
     * Retrieve a list of all configured Activity Result codes and descriptions.  Activity Results appear on the Activities screen in the Results field after the Activity is completed.  And example could be Call Again - an activity is Completed but the result code as part of the completion is to Call Again. <p><strong>OperationId:</strong>getActivityResultsConfig</p>
     * Get all Configured Activity Result Codes
     */
    getActivityResultsConfig(requestParameters: GetActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActivityResultsConfigDetails>;
    /**
     * Retrieve all configured Activity types for a specified hotel. <p><strong>OperationId:</strong>getActivityTypes</p>
     * Get all Activity Type Codes
     */
    getActivityTypesRaw(requestParameters: GetActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActivityTypesConfigDetails>>;
    /**
     * Retrieve all configured Activity types for a specified hotel. <p><strong>OperationId:</strong>getActivityTypes</p>
     * Get all Activity Type Codes
     */
    getActivityTypes(requestParameters: GetActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActivityTypesConfigDetails>;
    /**
     * Retrieve a list of all configured Auto Trace Codes for a property. <p><strong>OperationId:</strong>getAutoTraceCodes</p>
     * Get Auto Trace codes
     */
    getAutoTraceCodesRaw(requestParameters: GetAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoTraceCodesDetails>>;
    /**
     * Retrieve a list of all configured Auto Trace Codes for a property. <p><strong>OperationId:</strong>getAutoTraceCodes</p>
     * Get Auto Trace codes
     */
    getAutoTraceCodes(requestParameters: GetAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoTraceCodesDetails>;
    /**
     * Get a list of all Auto trace definitions for a property. <p><strong>OperationId:</strong>getAutoTraceDefinitions</p>
     * Get a list of Auto Trace definition Codes
     */
    getAutoTraceDefinitionsRaw(requestParameters: GetAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoTraceDefinitionsDetails>>;
    /**
     * Get a list of all Auto trace definitions for a property. <p><strong>OperationId:</strong>getAutoTraceDefinitions</p>
     * Get a list of Auto Trace definition Codes
     */
    getAutoTraceDefinitions(requestParameters: GetAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoTraceDefinitionsDetails>;
    /**
     * This API will provide a list of all configured Auto Trace Owner Mappings.   <p><strong>OperationId:</strong>getAutoTraceOwnerAssignments</p>
     * Get an Auto Trace owner mappings
     */
    getAutoTraceOwnerAssignmentsRaw(requestParameters: GetAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoTraceOwnerAssignmentsDetails>>;
    /**
     * This API will provide a list of all configured Auto Trace Owner Mappings.   <p><strong>OperationId:</strong>getAutoTraceOwnerAssignments</p>
     * Get an Auto Trace owner mappings
     */
    getAutoTraceOwnerAssignments(requestParameters: GetAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoTraceOwnerAssignmentsDetails>;
    /**
     * Create a new Activity Results Code, for example SUCCESS, END, CALLAGAIN.  These codes are used when you complete an activity.  You need to specify an Activity Result Code as part of that completion process. <p><strong>OperationId:</strong>postActivityResultsConfig</p>
     * Create an Activity results code
     */
    postActivityResultsConfigRaw(requestParameters: PostActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Create a new Activity Results Code, for example SUCCESS, END, CALLAGAIN.  These codes are used when you complete an activity.  You need to specify an Activity Result Code as part of that completion process. <p><strong>OperationId:</strong>postActivityResultsConfig</p>
     * Create an Activity results code
     */
    postActivityResultsConfig(requestParameters: PostActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Create a new Activity Type for a specified hotel. Examples could be  MEETING, LUNCH, EXTMEETING. <p><strong>OperationId:</strong>postActivityTypes</p>
     * Create a new Activity type in configuration
     */
    postActivityTypesRaw(requestParameters: PostActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Create a new Activity Type for a specified hotel. Examples could be  MEETING, LUNCH, EXTMEETING. <p><strong>OperationId:</strong>postActivityTypes</p>
     * Create a new Activity type in configuration
     */
    postActivityTypes(requestParameters: PostActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Create an Auto trace code. <p><strong>OperationId:</strong>postAutoTraceCodes</p>
     * Create an Auto Trace code
     */
    postAutoTraceCodesRaw(requestParameters: PostAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Create an Auto trace code. <p><strong>OperationId:</strong>postAutoTraceCodes</p>
     * Create an Auto Trace code
     */
    postAutoTraceCodes(requestParameters: PostAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Create a new Auto Trace Definition code for a specified property. <p><strong>OperationId:</strong>postAutoTraceDefinitions</p>
     * Create an Auto Trace Definition Code
     */
    postAutoTraceDefinitionsRaw(requestParameters: PostAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Create a new Auto Trace Definition code for a specified property. <p><strong>OperationId:</strong>postAutoTraceDefinitions</p>
     * Create an Auto Trace Definition Code
     */
    postAutoTraceDefinitions(requestParameters: PostAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can create Auto traces so that activities are created automatically under certain configured conditions. You first need a Trace code configured, and then using this API you can link the Owner code and Trace Code to a Trace Group (account, contact, activity, or block). <p><strong>OperationId:</strong>postAutoTraceOwnerAssignments</p>
     * Create an Auto Trace owner assignment
     */
    postAutoTraceOwnerAssignmentsRaw(requestParameters: PostAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can create Auto traces so that activities are created automatically under certain configured conditions. You first need a Trace code configured, and then using this API you can link the Owner code and Trace Code to a Trace Group (account, contact, activity, or block). <p><strong>OperationId:</strong>postAutoTraceOwnerAssignments</p>
     * Create an Auto Trace owner assignment
     */
    postAutoTraceOwnerAssignments(requestParameters: PostAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Change or update details of an existing Activity Results Code. <p><strong>OperationId:</strong>putActivityResultsConfig</p>
     * Change an Activity Result Code
     */
    putActivityResultsConfigRaw(requestParameters: PutActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Change or update details of an existing Activity Results Code. <p><strong>OperationId:</strong>putActivityResultsConfig</p>
     * Change an Activity Result Code
     */
    putActivityResultsConfig(requestParameters: PutActivityResultsConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Change or update details of an existing Activity Type for a property. <p><strong>OperationId:</strong>putActivityTypes</p>
     * Update Activity Types
     */
    putActivityTypesRaw(requestParameters: PutActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Change or update details of an existing Activity Type for a property. <p><strong>OperationId:</strong>putActivityTypes</p>
     * Update Activity Types
     */
    putActivityTypes(requestParameters: PutActivityTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Update an Auto Trace Code. <p><strong>OperationId:</strong>putAutoTraceCodes</p>
     * Change an Auto Trace code
     */
    putAutoTraceCodesRaw(requestParameters: PutAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Update an Auto Trace Code. <p><strong>OperationId:</strong>putAutoTraceCodes</p>
     * Change an Auto Trace code
     */
    putAutoTraceCodes(requestParameters: PutAutoTraceCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Change an Auto Trace Definition code for a specified property. <p><strong>OperationId:</strong>putAutoTraceDefinitions</p>
     * Change an Auto Trace definition Code
     */
    putAutoTraceDefinitionsRaw(requestParameters: PutAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoTraceDefinitionsStatus>>;
    /**
     * Change an Auto Trace Definition code for a specified property. <p><strong>OperationId:</strong>putAutoTraceDefinitions</p>
     * Change an Auto Trace definition Code
     */
    putAutoTraceDefinitions(requestParameters: PutAutoTraceDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoTraceDefinitionsStatus>;
    /**
     * Change a Trace owner assignment configured for a property. <p><strong>OperationId:</strong>putAutoTraceOwnerAssignments</p>
     * Change Trace owner assignments
     */
    putAutoTraceOwnerAssignmentsRaw(requestParameters: PutAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoTraceOwnerAssignmentsStatus>>;
    /**
     * Change a Trace owner assignment configured for a property. <p><strong>OperationId:</strong>putAutoTraceOwnerAssignments</p>
     * Change Trace owner assignments
     */
    putAutoTraceOwnerAssignments(requestParameters: PutAutoTraceOwnerAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoTraceOwnerAssignmentsStatus>;
}
/**
 * @export
 */
export declare const GetAutoTraceCodesAutoTraceGroupsEnum: {
    readonly Accounts: "Accounts";
    readonly Contacts: "Contacts";
    readonly Blocks: "Blocks";
    readonly Activities: "Activities";
};
export type GetAutoTraceCodesAutoTraceGroupsEnum = typeof GetAutoTraceCodesAutoTraceGroupsEnum[keyof typeof GetAutoTraceCodesAutoTraceGroupsEnum];
/**
 * @export
 */
export declare const GetAutoTraceDefinitionsAutoTraceGroupsEnum: {
    readonly Accounts: "Accounts";
    readonly Contacts: "Contacts";
    readonly Blocks: "Blocks";
    readonly Activities: "Activities";
};
export type GetAutoTraceDefinitionsAutoTraceGroupsEnum = typeof GetAutoTraceDefinitionsAutoTraceGroupsEnum[keyof typeof GetAutoTraceDefinitionsAutoTraceGroupsEnum];
