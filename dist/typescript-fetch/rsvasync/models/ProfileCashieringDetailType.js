"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileCashieringDetailTypeToJSON = exports.ProfileCashieringDetailTypeFromJSONTyped = exports.ProfileCashieringDetailTypeFromJSON = exports.instanceOfProfileCashieringDetailType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const ProfileRoutingInstructionsType_1 = require("./ProfileRoutingInstructionsType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ProfileCashieringDetailType interface.
 */
function instanceOfProfileCashieringDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfProfileCashieringDetailType = instanceOfProfileCashieringDetailType;
function ProfileCashieringDetailTypeFromJSON(json) {
    return ProfileCashieringDetailTypeFromJSONTyped(json, false);
}
exports.ProfileCashieringDetailTypeFromJSON = ProfileCashieringDetailTypeFromJSON;
function ProfileCashieringDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'paymentMethod': !(0, runtime_1.exists)(json, 'paymentMethod') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['paymentMethod']),
        'eCommerceId': !(0, runtime_1.exists)(json, 'eCommerceId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['eCommerceId']),
        'routingInstructions': !(0, runtime_1.exists)(json, 'routingInstructions') ? undefined : (0, ProfileRoutingInstructionsType_1.ProfileRoutingInstructionsTypeFromJSON)(json['routingInstructions']),
        'taxType': !(0, runtime_1.exists)(json, 'taxType') ? undefined : json['taxType'],
        'fiscalGuestType': !(0, runtime_1.exists)(json, 'fiscalGuestType') ? undefined : json['fiscalGuestType'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.ProfileCashieringDetailTypeFromJSONTyped = ProfileCashieringDetailTypeFromJSONTyped;
function ProfileCashieringDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'paymentMethod': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.paymentMethod),
        'eCommerceId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.eCommerceId),
        'routingInstructions': (0, ProfileRoutingInstructionsType_1.ProfileRoutingInstructionsTypeToJSON)(value.routingInstructions),
        'taxType': value.taxType,
        'fiscalGuestType': value.fiscalGuestType,
        'hotelId': value.hotelId,
    };
}
exports.ProfileCashieringDetailTypeToJSON = ProfileCashieringDetailTypeToJSON;
