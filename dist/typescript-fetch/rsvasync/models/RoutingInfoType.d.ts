/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RoutingInfoTypeComp } from './RoutingInfoTypeComp';
import type { RoutingInfoTypeFolio } from './RoutingInfoTypeFolio';
import type { RoutingInfoTypeRequest } from './RoutingInfoTypeRequest';
import type { RoutingInfoTypeRoom } from './RoutingInfoTypeRoom';
/**
 * A routing info object can either be of type Folio OR of type Room with its corresponding object.
 * @export
 * @interface RoutingInfoType
 */
export interface RoutingInfoType {
    /**
     *
     * @type {RoutingInfoTypeFolio}
     * @memberof RoutingInfoType
     */
    folio?: RoutingInfoTypeFolio;
    /**
     *
     * @type {RoutingInfoTypeRoom}
     * @memberof RoutingInfoType
     */
    room?: RoutingInfoTypeRoom;
    /**
     *
     * @type {RoutingInfoTypeComp}
     * @memberof RoutingInfoType
     */
    comp?: RoutingInfoTypeComp;
    /**
     *
     * @type {RoutingInfoTypeRequest}
     * @memberof RoutingInfoType
     */
    request?: RoutingInfoTypeRequest;
    /**
     * On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
     * @type {boolean}
     * @memberof RoutingInfoType
     */
    refreshFolio?: boolean;
}
/**
 * Check if a given object implements the RoutingInfoType interface.
 */
export declare function instanceOfRoutingInfoType(value: object): boolean;
export declare function RoutingInfoTypeFromJSON(json: any): RoutingInfoType;
export declare function RoutingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutingInfoType;
export declare function RoutingInfoTypeToJSON(value?: RoutingInfoType | null): any;
