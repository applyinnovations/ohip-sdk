/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BedTaxReportingType } from './BedTaxReportingType';
import type { BillingPrivilegesType } from './BillingPrivilegesType';
import type { FolioTextsTypeInner } from './FolioTextsTypeInner';
import type { ResCompAccountingType } from './ResCompAccountingType';
import type { ResPeriodicFolioType } from './ResPeriodicFolioType';
import type { ResPreConfiguredRoutingInstrType } from './ResPreConfiguredRoutingInstrType';
import type { ResRevenueBalanceType } from './ResRevenueBalanceType';
import type { ReservationTaxTypeInfo } from './ReservationTaxTypeInfo';
/**
 * Cashiering Information for the reservation.
 * @export
 * @interface ResCashieringType
 */
export interface ResCashieringType {
    /**
     *
     * @type {ResRevenueBalanceType}
     * @memberof ResCashieringType
     */
    revenuesAndBalances?: ResRevenueBalanceType;
    /**
     *
     * @type {BillingPrivilegesType}
     * @memberof ResCashieringType
     */
    billingPrivileges?: BillingPrivilegesType;
    /**
     *
     * @type {ReservationTaxTypeInfo}
     * @memberof ResCashieringType
     */
    taxType?: ReservationTaxTypeInfo;
    /**
     *
     * @type {BedTaxReportingType}
     * @memberof ResCashieringType
     */
    bedTaxReporting?: BedTaxReportingType;
    /**
     * This stores the description for the type of tax calculation especially with tax exemption, etc.
     * @type {Array<FolioTextsTypeInner>}
     * @memberof ResCashieringType
     */
    folioTexts?: Array<FolioTextsTypeInner>;
    /**
     *
     * @type {ResPeriodicFolioType}
     * @memberof ResCashieringType
     */
    periodicFolio?: ResPeriodicFolioType;
    /**
     *
     * @type {ResCompAccountingType}
     * @memberof ResCashieringType
     */
    compAccounting?: ResCompAccountingType;
    /**
     *
     * @type {ResPreConfiguredRoutingInstrType}
     * @memberof ResCashieringType
     */
    reservationPreConfiguredRoutingInstruction?: ResPreConfiguredRoutingInstrType;
    /**
     * The guest from whom payment has to be recovered (direct guest).
     * @type {boolean}
     * @memberof ResCashieringType
     */
    financiallyResponsible?: boolean;
    /**
     * In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.
     * @type {boolean}
     * @memberof ResCashieringType
     */
    proratedBilling?: boolean;
    /**
     * Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.
     * @type {string}
     * @memberof ResCashieringType
     */
    lastRoomAndTaxPostedDate?: string;
    /**
     * This attribute is to verify if reverse check-in is allowed for the reservation.
     * @type {boolean}
     * @memberof ResCashieringType
     */
    reverseCheckInAllowed?: boolean;
    /**
     * This attribute is to verify if reverse advance check-in is allowed for the reservation.
     * @type {boolean}
     * @memberof ResCashieringType
     */
    reverseAdvanceCheckInAllowed?: boolean;
    /**
     * Specifies whether reservation has a financial transaction associated with it.
     * @type {boolean}
     * @memberof ResCashieringType
     */
    transactionsPosted?: boolean;
}
/**
 * Check if a given object implements the ResCashieringType interface.
 */
export declare function instanceOfResCashieringType(value: object): boolean;
export declare function ResCashieringTypeFromJSON(json: any): ResCashieringType;
export declare function ResCashieringTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResCashieringType;
export declare function ResCashieringTypeToJSON(value?: ResCashieringType | null): any;
