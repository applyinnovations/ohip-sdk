"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageElementTypeToJSON = exports.PackageElementTypeFromJSONTyped = exports.PackageElementTypeFromJSON = exports.instanceOfPackageElementType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the PackageElementType interface.
 */
function instanceOfPackageElementType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPackageElementType = instanceOfPackageElementType;
function PackageElementTypeFromJSON(json) {
    return PackageElementTypeFromJSONTyped(json, false);
}
exports.PackageElementTypeFromJSON = PackageElementTypeFromJSON;
function PackageElementTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'allowance': !(0, runtime_1.exists)(json, 'allowance') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['allowance']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'packageCode': !(0, runtime_1.exists)(json, 'packageCode') ? undefined : json['packageCode'],
        'calculationRule': !(0, runtime_1.exists)(json, 'calculationRule') ? undefined : json['calculationRule'],
        'postingRhythm': !(0, runtime_1.exists)(json, 'postingRhythm') ? undefined : json['postingRhythm'],
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
        'includedInRate': !(0, runtime_1.exists)(json, 'includedInRate') ? undefined : json['includedInRate'],
        'addRateSeprateLine': !(0, runtime_1.exists)(json, 'addRateSeprateLine') ? undefined : json['addRateSeprateLine'],
        'addRateCombinedLine': !(0, runtime_1.exists)(json, 'addRateCombinedLine') ? undefined : json['addRateCombinedLine'],
        'startTime': !(0, runtime_1.exists)(json, 'startTime') ? undefined : json['startTime'],
        'endTime': !(0, runtime_1.exists)(json, 'endTime') ? undefined : json['endTime'],
        'sellSeparate': !(0, runtime_1.exists)(json, 'sellSeparate') ? undefined : json['sellSeparate'],
    };
}
exports.PackageElementTypeFromJSONTyped = PackageElementTypeFromJSONTyped;
function PackageElementTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'allowance': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.allowance),
        'description': value.description,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'packageCode': value.packageCode,
        'calculationRule': value.calculationRule,
        'postingRhythm': value.postingRhythm,
        'quantity': value.quantity,
        'includedInRate': value.includedInRate,
        'addRateSeprateLine': value.addRateSeprateLine,
        'addRateCombinedLine': value.addRateCombinedLine,
        'startTime': value.startTime,
        'endTime': value.endTime,
        'sellSeparate': value.sellSeparate,
    };
}
exports.PackageElementTypeToJSON = PackageElementTypeToJSON;
