"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResGuestAdditionalInfoTypeToJSON = exports.ResGuestAdditionalInfoTypeFromJSONTyped = exports.ResGuestAdditionalInfoTypeFromJSON = exports.instanceOfResGuestAdditionalInfoType = void 0;
const runtime_1 = require("../runtime");
const GuestLastStayInfoType_1 = require("./GuestLastStayInfoType");
/**
 * Check if a given object implements the ResGuestAdditionalInfoType interface.
 */
function instanceOfResGuestAdditionalInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResGuestAdditionalInfoType = instanceOfResGuestAdditionalInfoType;
function ResGuestAdditionalInfoTypeFromJSON(json) {
    return ResGuestAdditionalInfoTypeFromJSONTyped(json, false);
}
exports.ResGuestAdditionalInfoTypeFromJSON = ResGuestAdditionalInfoTypeFromJSON;
function ResGuestAdditionalInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'portOfEntry': !(0, runtime_1.exists)(json, 'portOfEntry') ? undefined : json['portOfEntry'],
        'dateOfEntry': !(0, runtime_1.exists)(json, 'dateOfEntry') ? undefined : json['dateOfEntry'],
        'nextDestination': !(0, runtime_1.exists)(json, 'nextDestination') ? undefined : json['nextDestination'],
        'preferredRoomType': !(0, runtime_1.exists)(json, 'preferredRoomType') ? undefined : json['preferredRoomType'],
        'lastStay': !(0, runtime_1.exists)(json, 'lastStay') ? undefined : (0, GuestLastStayInfoType_1.GuestLastStayInfoTypeFromJSON)(json['lastStay']),
        'purposeOfStay': !(0, runtime_1.exists)(json, 'purposeOfStay') ? undefined : json['purposeOfStay'],
        'guestClassification': !(0, runtime_1.exists)(json, 'guestClassification') ? undefined : json['guestClassification'],
        'guestStatus': !(0, runtime_1.exists)(json, 'guestStatus') ? undefined : json['guestStatus'],
    };
}
exports.ResGuestAdditionalInfoTypeFromJSONTyped = ResGuestAdditionalInfoTypeFromJSONTyped;
function ResGuestAdditionalInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'portOfEntry': value.portOfEntry,
        'dateOfEntry': value.dateOfEntry,
        'nextDestination': value.nextDestination,
        'preferredRoomType': value.preferredRoomType,
        'lastStay': (0, GuestLastStayInfoType_1.GuestLastStayInfoTypeToJSON)(value.lastStay),
        'purposeOfStay': value.purposeOfStay,
        'guestClassification': value.guestClassification,
        'guestStatus': value.guestStatus,
    };
}
exports.ResGuestAdditionalInfoTypeToJSON = ResGuestAdditionalInfoTypeToJSON;
