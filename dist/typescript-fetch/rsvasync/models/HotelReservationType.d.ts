/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CommentInfoType } from './CommentInfoType';
import type { ExternalReferenceType } from './ExternalReferenceType';
import type { FixedChargeType } from './FixedChargeType';
import type { HotelReservationTypeReservationProfiles } from './HotelReservationTypeReservationProfiles';
import type { HotelReservationsType } from './HotelReservationsType';
import type { PMSResStatusType } from './PMSResStatusType';
import type { PreferenceTypeType } from './PreferenceTypeType';
import type { ResCashieringType } from './ResCashieringType';
import type { ResGuestAdditionalInfoType } from './ResGuestAdditionalInfoType';
import type { ResGuestType } from './ResGuestType';
import type { ResSharedGuestInfoType } from './ResSharedGuestInfoType';
import type { ReservationPackageType } from './ReservationPackageType';
import type { ReservationPaymentMethodType } from './ReservationPaymentMethodType';
import type { RoomStayType } from './RoomStayType';
import type { UniqueIDType } from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
/**
 * The Reservation class contains the current reservation being validated.
 * @export
 * @interface HotelReservationType
 */
export interface HotelReservationType {
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof HotelReservationType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * This type contains unique information of external reference.
     * @type {Array<ExternalReferenceType>}
     * @memberof HotelReservationType
     */
    externalReferences?: Array<ExternalReferenceType>;
    /**
     *
     * @type {HotelReservationsType}
     * @memberof HotelReservationType
     */
    shares?: HotelReservationsType;
    /**
     * List of Notes for the Guest related to the reservation.
     * @type {Array<CommentInfoType>}
     * @memberof HotelReservationType
     */
    comments?: Array<CommentInfoType>;
    /**
     * List of Notes for the Guest related to the profile.
     * @type {Array<CommentInfoType>}
     * @memberof HotelReservationType
     */
    guestComments?: Array<CommentInfoType>;
    /**
     * Collection of shared guest reservations.
     * @type {Array<ResSharedGuestInfoType>}
     * @memberof HotelReservationType
     */
    sharedGuests?: Array<ResSharedGuestInfoType>;
    /**
     *
     * @type {RoomStayType}
     * @memberof HotelReservationType
     */
    roomStay?: RoomStayType;
    /**
     * Collection of guests associated with the reservation.
     * @type {Array<ResGuestType>}
     * @memberof HotelReservationType
     */
    reservationGuests?: Array<ResGuestType>;
    /**
     * A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
     * @type {Array<ReservationPackageType>}
     * @memberof HotelReservationType
     */
    reservationPackages?: Array<ReservationPackageType>;
    /**
     * Collection of reservation preferences.
     * @type {Array<PreferenceTypeType>}
     * @memberof HotelReservationType
     */
    preferenceCollection?: Array<PreferenceTypeType>;
    /**
     *
     * @type {HotelReservationTypeReservationProfiles}
     * @memberof HotelReservationType
     */
    reservationProfiles?: HotelReservationTypeReservationProfiles;
    /**
     *
     * @type {Array<ReservationPaymentMethodType>}
     * @memberof HotelReservationType
     */
    reservationPaymentMethods?: Array<ReservationPaymentMethodType>;
    /**
     *
     * @type {ResCashieringType}
     * @memberof HotelReservationType
     */
    cashiering?: ResCashieringType;
    /**
     *
     * @type {boolean}
     * @memberof HotelReservationType
     */
    extSystemSync?: boolean;
    /**
     *
     * @type {string}
     * @memberof HotelReservationType
     */
    hotelId?: string;
    /**
     *
     * @type {PMSResStatusType}
     * @memberof HotelReservationType
     */
    reservationStatus?: PMSResStatusType;
    /**
     *
     * @type {boolean}
     * @memberof HotelReservationType
     */
    overrideBlockRestriction?: boolean;
    /**
     *
     * @type {ResGuestAdditionalInfoType}
     * @memberof HotelReservationType
     */
    additionalGuestInfo?: ResGuestAdditionalInfoType;
    /**
     * Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation
     * @type {boolean}
     * @memberof HotelReservationType
     */
    overrideExternalChecks?: boolean;
    /**
     *
     * @type {UserDefinedFieldsType}
     * @memberof HotelReservationType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Holds fixed charge detail.
     * @type {Array<FixedChargeType>}
     * @memberof HotelReservationType
     */
    fixedCharges?: Array<FixedChargeType>;
}
/**
 * Check if a given object implements the HotelReservationType interface.
 */
export declare function instanceOfHotelReservationType(value: object): boolean;
export declare function HotelReservationTypeFromJSON(json: any): HotelReservationType;
export declare function HotelReservationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelReservationType;
export declare function HotelReservationTypeToJSON(value?: HotelReservationType | null): any;
