"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelReservationTypeToJSON = exports.HotelReservationTypeFromJSONTyped = exports.HotelReservationTypeFromJSON = exports.instanceOfHotelReservationType = void 0;
const runtime_1 = require("../runtime");
const CommentInfoType_1 = require("./CommentInfoType");
const ExternalReferenceType_1 = require("./ExternalReferenceType");
const FixedChargeType_1 = require("./FixedChargeType");
const HotelReservationTypeReservationProfiles_1 = require("./HotelReservationTypeReservationProfiles");
const HotelReservationsType_1 = require("./HotelReservationsType");
const PMSResStatusType_1 = require("./PMSResStatusType");
const PreferenceTypeType_1 = require("./PreferenceTypeType");
const ResCashieringType_1 = require("./ResCashieringType");
const ResGuestAdditionalInfoType_1 = require("./ResGuestAdditionalInfoType");
const ResGuestType_1 = require("./ResGuestType");
const ResSharedGuestInfoType_1 = require("./ResSharedGuestInfoType");
const ReservationPackageType_1 = require("./ReservationPackageType");
const ReservationPaymentMethodType_1 = require("./ReservationPaymentMethodType");
const RoomStayType_1 = require("./RoomStayType");
const UniqueIDType_1 = require("./UniqueIDType");
const UserDefinedFieldsType_1 = require("./UserDefinedFieldsType");
/**
 * Check if a given object implements the HotelReservationType interface.
 */
function instanceOfHotelReservationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelReservationType = instanceOfHotelReservationType;
function HotelReservationTypeFromJSON(json) {
    return HotelReservationTypeFromJSONTyped(json, false);
}
exports.HotelReservationTypeFromJSON = HotelReservationTypeFromJSON;
function HotelReservationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'reservationIdList': !(0, runtime_1.exists)(json, 'reservationIdList') ? undefined : (json['reservationIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'externalReferences': !(0, runtime_1.exists)(json, 'externalReferences') ? undefined : (json['externalReferences'].map(ExternalReferenceType_1.ExternalReferenceTypeFromJSON)),
        'shares': !(0, runtime_1.exists)(json, 'shares') ? undefined : (0, HotelReservationsType_1.HotelReservationsTypeFromJSON)(json['shares']),
        'comments': !(0, runtime_1.exists)(json, 'comments') ? undefined : (json['comments'].map(CommentInfoType_1.CommentInfoTypeFromJSON)),
        'guestComments': !(0, runtime_1.exists)(json, 'guestComments') ? undefined : (json['guestComments'].map(CommentInfoType_1.CommentInfoTypeFromJSON)),
        'sharedGuests': !(0, runtime_1.exists)(json, 'sharedGuests') ? undefined : (json['sharedGuests'].map(ResSharedGuestInfoType_1.ResSharedGuestInfoTypeFromJSON)),
        'roomStay': !(0, runtime_1.exists)(json, 'roomStay') ? undefined : (0, RoomStayType_1.RoomStayTypeFromJSON)(json['roomStay']),
        'reservationGuests': !(0, runtime_1.exists)(json, 'reservationGuests') ? undefined : (json['reservationGuests'].map(ResGuestType_1.ResGuestTypeFromJSON)),
        'reservationPackages': !(0, runtime_1.exists)(json, 'reservationPackages') ? undefined : (json['reservationPackages'].map(ReservationPackageType_1.ReservationPackageTypeFromJSON)),
        'preferenceCollection': !(0, runtime_1.exists)(json, 'preferenceCollection') ? undefined : (json['preferenceCollection'].map(PreferenceTypeType_1.PreferenceTypeTypeFromJSON)),
        'reservationProfiles': !(0, runtime_1.exists)(json, 'reservationProfiles') ? undefined : (0, HotelReservationTypeReservationProfiles_1.HotelReservationTypeReservationProfilesFromJSON)(json['reservationProfiles']),
        'reservationPaymentMethods': !(0, runtime_1.exists)(json, 'reservationPaymentMethods') ? undefined : (json['reservationPaymentMethods'].map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeFromJSON)),
        'cashiering': !(0, runtime_1.exists)(json, 'cashiering') ? undefined : (0, ResCashieringType_1.ResCashieringTypeFromJSON)(json['cashiering']),
        'extSystemSync': !(0, runtime_1.exists)(json, 'extSystemSync') ? undefined : json['extSystemSync'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationStatus': !(0, runtime_1.exists)(json, 'reservationStatus') ? undefined : (0, PMSResStatusType_1.PMSResStatusTypeFromJSON)(json['reservationStatus']),
        'overrideBlockRestriction': !(0, runtime_1.exists)(json, 'overrideBlockRestriction') ? undefined : json['overrideBlockRestriction'],
        'additionalGuestInfo': !(0, runtime_1.exists)(json, 'additionalGuestInfo') ? undefined : (0, ResGuestAdditionalInfoType_1.ResGuestAdditionalInfoTypeFromJSON)(json['additionalGuestInfo']),
        'overrideExternalChecks': !(0, runtime_1.exists)(json, 'overrideExternalChecks') ? undefined : json['overrideExternalChecks'],
        'userDefinedFields': !(0, runtime_1.exists)(json, 'userDefinedFields') ? undefined : (0, UserDefinedFieldsType_1.UserDefinedFieldsTypeFromJSON)(json['userDefinedFields']),
        'fixedCharges': !(0, runtime_1.exists)(json, 'fixedCharges') ? undefined : (json['fixedCharges'].map(FixedChargeType_1.FixedChargeTypeFromJSON)),
    };
}
exports.HotelReservationTypeFromJSONTyped = HotelReservationTypeFromJSONTyped;
function HotelReservationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reservationIdList': value.reservationIdList === undefined ? undefined : (value.reservationIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'externalReferences': value.externalReferences === undefined ? undefined : (value.externalReferences.map(ExternalReferenceType_1.ExternalReferenceTypeToJSON)),
        'shares': (0, HotelReservationsType_1.HotelReservationsTypeToJSON)(value.shares),
        'comments': value.comments === undefined ? undefined : (value.comments.map(CommentInfoType_1.CommentInfoTypeToJSON)),
        'guestComments': value.guestComments === undefined ? undefined : (value.guestComments.map(CommentInfoType_1.CommentInfoTypeToJSON)),
        'sharedGuests': value.sharedGuests === undefined ? undefined : (value.sharedGuests.map(ResSharedGuestInfoType_1.ResSharedGuestInfoTypeToJSON)),
        'roomStay': (0, RoomStayType_1.RoomStayTypeToJSON)(value.roomStay),
        'reservationGuests': value.reservationGuests === undefined ? undefined : (value.reservationGuests.map(ResGuestType_1.ResGuestTypeToJSON)),
        'reservationPackages': value.reservationPackages === undefined ? undefined : (value.reservationPackages.map(ReservationPackageType_1.ReservationPackageTypeToJSON)),
        'preferenceCollection': value.preferenceCollection === undefined ? undefined : (value.preferenceCollection.map(PreferenceTypeType_1.PreferenceTypeTypeToJSON)),
        'reservationProfiles': (0, HotelReservationTypeReservationProfiles_1.HotelReservationTypeReservationProfilesToJSON)(value.reservationProfiles),
        'reservationPaymentMethods': value.reservationPaymentMethods === undefined ? undefined : (value.reservationPaymentMethods.map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeToJSON)),
        'cashiering': (0, ResCashieringType_1.ResCashieringTypeToJSON)(value.cashiering),
        'extSystemSync': value.extSystemSync,
        'hotelId': value.hotelId,
        'reservationStatus': (0, PMSResStatusType_1.PMSResStatusTypeToJSON)(value.reservationStatus),
        'overrideBlockRestriction': value.overrideBlockRestriction,
        'additionalGuestInfo': (0, ResGuestAdditionalInfoType_1.ResGuestAdditionalInfoTypeToJSON)(value.additionalGuestInfo),
        'overrideExternalChecks': value.overrideExternalChecks,
        'userDefinedFields': (0, UserDefinedFieldsType_1.UserDefinedFieldsTypeToJSON)(value.userDefinedFields),
        'fixedCharges': value.fixedCharges === undefined ? undefined : (value.fixedCharges.map(FixedChargeType_1.FixedChargeTypeToJSON)),
    };
}
exports.HotelReservationTypeToJSON = HotelReservationTypeToJSON;
