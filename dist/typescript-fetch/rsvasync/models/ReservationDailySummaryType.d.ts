/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DailySummaryType } from './DailySummaryType';
import type { PMSResStatusType } from './PMSResStatusType';
import type { ReservationIdList } from './ReservationIdList';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Daily summary information related to a reservation.
 * @export
 * @interface ReservationDailySummaryType
 */
export interface ReservationDailySummaryType {
    /**
     *
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    arrival?: string;
    /**
     * Block code of the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    blockCode?: string;
    /**
     *
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    bookingDate?: string;
    /**
     * Classifies the medium(Channel field on reservation screen) through which the reservation is made. Either bookingMedium or origin_of_booking will be present in the response.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    bookingMedium?: string;
    /**
     * The date the reservation was canceled.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    cancellationDate?: string;
    /**
     *
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    cancellationReasonCode?: string;
    /**
     * The date the reservation was checked out.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    checkedOutDate?: string;
    /**
     * Number of children classified under the first Age Qualifying Group.
     * @type {number}
     * @memberof ReservationDailySummaryType
     */
    children1?: number;
    /**
     * Number of children classified under the second Age Qualifying Group.
     * @type {number}
     * @memberof ReservationDailySummaryType
     */
    children2?: number;
    /**
     * Number of children classified under the third Age Qualifying Group.
     * @type {number}
     * @memberof ReservationDailySummaryType
     */
    children3?: number;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationDailySummaryType
     */
    companyId?: UniqueIDType;
    /**
     * Name of the company for the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    companyName?: string;
    /**
     * Business Date when the reservation was created.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    createDateTime?: string;
    /**
     * Collection of daily summary for the reservation.
     * @type {Array<DailySummaryType>}
     * @memberof ReservationDailySummaryType
     */
    dailySummary?: Array<DailySummaryType>;
    /**
     *
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    departure?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationDailySummaryType
     */
    groupId?: UniqueIDType;
    /**
     * Name of the group for the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    groupName?: string;
    /**
     * Country code for guest's primary address.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    guestCountry?: string;
    /**
     * IATA Code.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    iataCode?: string;
    /**
     * Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    lastModifiedDate?: string;
    /**
     * Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    lastModifiedDateTime?: string;
    /**
     * Card Number of the membership.Either membershipId or membershipNumber will be returned.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    membershipId?: string;
    /**
     * Indicates the membership level.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    membershipLevel?: string;
    /**
     * Card Number of the membership.Either membershipId or membershipNumber will be returned.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    membershipNumber?: string;
    /**
     * Type of membership.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    membershipType?: string;
    /**
     * Affiliation or ethnicity to a particular country.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    nationality?: string;
    /**
     * Number of rooms of the reservation.
     * @type {number}
     * @memberof ReservationDailySummaryType
     */
    noOfRooms?: number;
    /**
     * Classifies the medium(Channel field on reservation screen) through which the reservation is made.Either bookingMedium or origin_of_booking will be present in the response.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    originOfBooking?: string;
    /**
     *
     * @type {ReservationIdList}
     * @memberof ReservationDailySummaryType
     */
    reservationIdList?: ReservationIdList;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationDailySummaryType
     */
    resvContactId?: UniqueIDType;
    /**
     * Name of the contact for the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    resvContactName?: string;
    /**
     *
     * @type {PMSResStatusType}
     * @memberof ReservationDailySummaryType
     */
    resvStatus?: PMSResStatusType;
    /**
     * Type of the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    resvType?: string;
    /**
     * Indicates whether the reservation has any sharers. Y indicates true and N indicates false.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    sharedYn?: string;
    /**
     * Collection of Confirmation Numbers of Sharers.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    sharersList?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationDailySummaryType
     */
    sourceId?: UniqueIDType;
    /**
     * Name of the source for the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    sourceName?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationDailySummaryType
     */
    travelAgentId?: UniqueIDType;
    /**
     * Name of the travel agent for the reservation.
     * @type {string}
     * @memberof ReservationDailySummaryType
     */
    travelAgentName?: string;
}
/**
 * Check if a given object implements the ReservationDailySummaryType interface.
 */
export declare function instanceOfReservationDailySummaryType(value: object): boolean;
export declare function ReservationDailySummaryTypeFromJSON(json: any): ReservationDailySummaryType;
export declare function ReservationDailySummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationDailySummaryType;
export declare function ReservationDailySummaryTypeToJSON(value?: ReservationDailySummaryType | null): any;
