/**
 * OPERA Cloud Integration Processor API
 * APIs to get Business Events generated in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BusinessEvents } from '../models/index';
export interface GetBusinessEventsRequest {
    hotelId: string;
    extSystemCode: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBusinessEventsByExternalSystemRequest {
    extSystemCode: string;
    authorization: string;
    xAppKey: string;
    xHotelid: string;
    limit?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class IntegrationProcessorApi extends runtime.BaseAPI {
    /**
     * Business Event messages are placed in a queue. Use this API to fetch(dequeue) the Business Event messages based on the External System and Hotel ID. In order to get property specific business event messages, you must have a unique consumer code (OPERA Cloud UI > Toolbox > External Database) for the External System and the Hotel ID. <p><strong>OperationId:</strong>getBusinessEvents</p>
     * Get Business Events by External System and Hotel ID
     */
    getBusinessEventsRaw(requestParameters: GetBusinessEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BusinessEvents>>;
    /**
     * Business Event messages are placed in a queue. Use this API to fetch(dequeue) the Business Event messages based on the External System and Hotel ID. In order to get property specific business event messages, you must have a unique consumer code (OPERA Cloud UI > Toolbox > External Database) for the External System and the Hotel ID. <p><strong>OperationId:</strong>getBusinessEvents</p>
     * Get Business Events by External System and Hotel ID
     */
    getBusinessEvents(requestParameters: GetBusinessEventsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BusinessEvents>;
    /**
     * Business Event messages are placed in a queue. Use this API to dequeue/fetch the Business Event messages based on the external system for all hotels within the same chain. In order to get events, you must have a unique consumer code for the External System and hotels. <p><strong>OperationId:</strong>getBusinessEventsByExternalSystem</p>
     * Get Business Events by External System
     */
    getBusinessEventsByExternalSystemRaw(requestParameters: GetBusinessEventsByExternalSystemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BusinessEvents>>;
    /**
     * Business Event messages are placed in a queue. Use this API to dequeue/fetch the Business Event messages based on the external system for all hotels within the same chain. In order to get events, you must have a unique consumer code for the External System and hotels. <p><strong>OperationId:</strong>getBusinessEventsByExternalSystem</p>
     * Get Business Events by External System
     */
    getBusinessEventsByExternalSystem(requestParameters: GetBusinessEventsByExternalSystemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BusinessEvents>;
}
