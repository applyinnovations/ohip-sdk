"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Processor API
 * APIs to get Business Events generated in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BusinessEventTypeToJSON = exports.BusinessEventTypeFromJSONTyped = exports.BusinessEventTypeFromJSON = exports.instanceOfBusinessEventType = void 0;
const runtime_1 = require("../runtime");
const BusinessEventDetailType_1 = require("./BusinessEventDetailType");
const BusinessEventHeaderType_1 = require("./BusinessEventHeaderType");
/**
 * Check if a given object implements the BusinessEventType interface.
 */
function instanceOfBusinessEventType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBusinessEventType = instanceOfBusinessEventType;
function BusinessEventTypeFromJSON(json) {
    return BusinessEventTypeFromJSONTyped(json, false);
}
exports.BusinessEventTypeFromJSON = BusinessEventTypeFromJSON;
function BusinessEventTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'details': !(0, runtime_1.exists)(json, 'details') ? undefined : (json['details'].map(BusinessEventDetailType_1.BusinessEventDetailTypeFromJSON)),
        'header': !(0, runtime_1.exists)(json, 'header') ? undefined : (0, BusinessEventHeaderType_1.BusinessEventHeaderTypeFromJSON)(json['header']),
    };
}
exports.BusinessEventTypeFromJSONTyped = BusinessEventTypeFromJSONTyped;
function BusinessEventTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'details': value.details === undefined ? undefined : (value.details.map(BusinessEventDetailType_1.BusinessEventDetailTypeToJSON)),
        'header': (0, BusinessEventHeaderType_1.BusinessEventHeaderTypeToJSON)(value.header),
    };
}
exports.BusinessEventTypeToJSON = BusinessEventTypeToJSON;
