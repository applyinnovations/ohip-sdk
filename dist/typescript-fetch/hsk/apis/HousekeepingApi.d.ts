/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AttendantSchedule, CanceledServicingTaskRoom, ChangedRoomMaintenance, ChangedTaskSheet, ChangedTaskSheetRooms, ChangedTaskSheetTemplate, CompleteOutOfOrderRoomsRequest, CompleteOutOfServiceRoomsRequest, CompleteRoomRepairStatus, CompletedServicingTaskRoom, EndedServiceBreak, FacilityForecast, GuestHousekeepingInstructions, GuestHousekeepingService, GuestHousekeepingServiceRequest, GuestHousekeepingServiceRequestCriteria, GuestHousekeepingServiceRequestStatus, HousekeepingBoard, HousekeepingRoomStatus, LockedTaskSheet, MoveTaskRooms, MovedTaskRoomsRS, PostOutOfOrderRoomsRequest, PostOutOfServiceRoomsRequest, PutRoomRelatedStatusRequest, ResolvedRoomMaintenance, RoomCleaningPriority, RoomCleaningPriorityRequestStatus, RoomCondition, RoomConditionRequestStatus, RoomMaintenance, RoomMaintenanceDetails, RoomMaintenanceRequest, Rooms, Schedule, ScheduleSearch, ScheduleShiftRequest, ScheduledSearch, ScheduledShiftRequest, ServiceTime, SkipedServicingTaskRoom, StartedServiceBreak, Status, TaskAssignment, TaskCompanion, TaskRoom, TaskSheet, TaskSheetTemplate, TaskSheetToLock, TaskSheetToMerge, TaskSheetToUnlock, TaskSheets, UnlockedTaskSheet, UnresolvedRoomMaintenance } from '../models/index';
export interface AutoGenerateTaskSheetsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheets: TaskSheets;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CancelServicingTaskRoomRequest {
    sheetNumber: string;
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CompleteOutOfOrderRoomsOperationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    completeRoomRepair: CompleteOutOfOrderRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CompleteOutOfServiceRoomsOperationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    completeRoomRepair: CompleteOutOfServiceRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CompleteServicingTaskRoomRequest {
    sheetNumber: string;
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteHouseKeepingTaskSheetsRequest {
    hotelId: string;
    taskCodesBreakOutId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteHousekeepingAttendantScheduleRequest {
    hotelId: string;
    scheduleDate: Date;
    attendantId: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteReservationHousekeepingTasksRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    customized?: boolean;
    cycleStartDay?: number;
    endDate?: Date;
    startDate?: Date;
    facilityTaskCode?: string;
    facilityTaskDescription?: string;
    facilityTaskPriority?: number;
    taskDate?: Array<Date>;
    taskStartDate?: Array<Date>;
    taskEndDate?: Array<Date>;
    stayPeriod?: Set<DeleteReservationHousekeepingTasksStayPeriodEnum>;
    frequency?: Array<number>;
    taskCycleStartDay?: Array<number>;
    roomType?: Array<string>;
    roomId?: Array<string>;
    facilityCodes?: Array<string>;
    facilityCodesDescription?: Array<string>;
    facilityCodesQuantity?: Array<number>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomMaintenanceRequest {
    mainteananceId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTaskSheetRequest {
    hotelId: string;
    sheetNumber: number;
    taskCodes: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    date?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTaskSheetRoomsRequest {
    hotelId: string;
    sheetNumber: number;
    taskCodes: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    date?: Date;
    roomId?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTaskSheetTemplateRequest {
    taskSheetTemplateCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface EditReservationHousekeepingTasksRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    schedule: Schedule;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface EndServiceBreakRequest {
    taskSheetNumber: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFacilityForecastRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    codes?: Array<string>;
    usePriority?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuestHousekeepingNotesRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationIdContext?: string;
    reservationIdType?: string;
    room?: string;
    housekeepingInstruction?: Set<GetGuestHousekeepingNotesHousekeepingInstructionEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHouseKeepingTasksRequest {
    hotelId: string;
    taskDate: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attendantInRoomOnly?: boolean;
    generateCleaningSequence?: boolean;
    includeReservationInfo?: boolean;
    includeTaskSheetDetails?: boolean;
    includeTaskSheetsSummary?: boolean;
    sortByCleaningSequence?: boolean;
    taskCodes?: Array<string>;
    taskHotelCodes?: Array<string>;
    taskSequences?: Array<number>;
    taskDescriptions?: Array<string>;
    taskInstructions?: Array<string>;
    facilityDepartureTask?: Array<boolean>;
    linenChange?: Array<boolean>;
    taskCodesBreakOutId?: string;
    taskCodesBreakOutIdContext?: string;
    taskCodesBreakOutIdType?: string;
    attendantId?: string;
    taskSheetNumber?: Array<number>;
    housekeepingRoomStatus?: Set<GetHouseKeepingTasksHousekeepingRoomStatusEnum>;
    guestService?: Set<GetHouseKeepingTasksGuestServiceEnum>;
    roomStatusToChange?: Set<GetHouseKeepingTasksRoomStatusToChangeEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingAttendantsScheduleRequest {
    hotelId: string;
    scheduleStartDate: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    scheduleEndDate?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingDiscrepanciesRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomDiscrepancyStatus?: Set<GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum>;
    fromRoomNumber?: string;
    toRoomNumber?: string;
    roomClass?: Array<string>;
    housekeepingEndDate?: Date;
    housekeepingStartDate?: Date;
    floor?: Array<string>;
    dueOut?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingOverviewRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    housekeepingRoomStatus?: Set<GetHousekeepingOverviewHousekeepingRoomStatusEnum>;
    frontOfficeRoomStatus?: Set<GetHousekeepingOverviewFrontOfficeRoomStatusEnum>;
    turndownStatus?: Set<GetHousekeepingOverviewTurndownStatusEnum>;
    roomParityStatus?: Set<GetHousekeepingOverviewRoomParityStatusEnum>;
    serviceRequestStatus?: Set<GetHousekeepingOverviewServiceRequestStatusEnum>;
    roomAssignmentStatus?: Set<GetHousekeepingOverviewRoomAssignmentStatusEnum>;
    fetchInstructions?: Set<GetHousekeepingOverviewFetchInstructionsEnum>;
    fromRoomNumber?: string;
    toRoomNumber?: string;
    floor?: Array<string>;
    roomType?: Array<string>;
    roomClass?: Array<string>;
    building?: Array<string>;
    roomFeatures?: Array<string>;
    daySection?: Array<string>;
    eveningSection?: Array<string>;
    reservationStatus?: Array<string>;
    guestServiceRequest?: GetHousekeepingOverviewGuestServiceRequestEnum;
    roomIdText?: string;
    excludeCombo?: boolean;
    cleaningPriorityOnly?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOutOfOrderRoomsRequest {
    hotelId: string;
    startDate: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomId?: string;
    endDate?: Date;
    roomTypes?: Array<string>;
    roomClasses?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOutOfServiceRoomsRequest {
    hotelId: string;
    startDate: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomId?: string;
    endDate?: Date;
    roomTypes?: Array<string>;
    roomClasses?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationHousekeepingScheduleRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationIdContext?: string;
    reservationIdType?: string;
    beginDate?: Date;
    endDate?: Date;
    fetchInstructions?: Set<GetReservationHousekeepingScheduleFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomConditionsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomConditionsOnly?: boolean;
    roomWithoutConditionsOnly?: boolean;
    room?: string;
    fromRoomNumber?: string;
    toRoomNumber?: string;
    roomConditions?: Array<string>;
    roomTypes?: Array<string>;
    roomClasses?: Array<string>;
    frontOfficeRoomStatus?: Set<GetRoomConditionsFrontOfficeRoomStatusEnum>;
    reservationStatuses?: Array<string>;
    roomAssignmentStatus?: Set<GetRoomConditionsRoomAssignmentStatusEnum>;
    floors?: Array<string>;
    roomFeatures?: Array<string>;
    amSections?: Array<string>;
    pmSections?: Array<string>;
    buildings?: Array<string>;
    housekeepingRoomStatus?: Set<GetRoomConditionsHousekeepingRoomStatusEnum>;
    roomParityStatus?: Set<GetRoomConditionsRoomParityStatusEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomMaintenanceRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomIdText?: string;
    roomId?: string;
    roomClasses?: Array<string>;
    roomTypes?: Array<string>;
    maintenanceCodes?: Array<string>;
    roomMaintenanceStatus?: GetRoomMaintenanceRoomMaintenanceStatusEnum;
    assignedUserId?: Array<string>;
    assignedUserIdContext?: Array<string>;
    assignedUserIdType?: Array<string>;
    maintenanceId?: string;
    maintenanceIdContext?: string;
    maintenanceIdType?: string;
    resolvedEndDate?: Date;
    resolvedStartDate?: Date;
    includeImages?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTaskCompanionRequest {
    sheetNumber: string;
    hotelId: string;
    taskCodes: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskDate?: Date;
    roomId?: string;
    skipRoomNumbers?: Array<string>;
    roomStatusToChange?: Set<GetTaskCompanionRoomStatusToChangeEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTaskSheetTemplateRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface LockTaskSheetRequest {
    sheetNumber: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheetToLock: TaskSheetToLock;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface MergeTaskSheetRequest {
    toTaskSequenceNo: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheetToMerge: TaskSheetToMerge;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface MoveTaskRoomsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    moveTaskRooms: MoveTaskRooms;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingAttendantScheduleRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attendantSchedule: AttendantSchedule;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOutOfOrderRoomsOperationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomRepairOutOfOrder: PostOutOfOrderRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOutOfServiceRoomsOperationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomRepairOutOfService: PostOutOfServiceRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostReservationHousekeepingTasksRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    schedule: Schedule;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomMaintenanceRequest {
    maintenanceCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomMaintenanceRequest: RoomMaintenanceRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTaskSheetRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheet: TaskSheet;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTaskSheetRoomsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheet: TaskSheet;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomCleaningPriorityRequest {
    hotelId: string;
    roomId: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomMaintenanceRequest {
    maintenanceId: string;
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomMaintenance: RoomMaintenance;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomRelatedStatusOperationRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomStatusCriteria: PutRoomRelatedStatusRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTaskSheetRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheet: TaskSheet;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTaskSheetRoomsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheet: TaskSheet;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTaskSheetTemplateRequest {
    taskSheetTemplateCode: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheetTemplate: TaskSheetTemplate;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ResetReservationHousekeepingScheduleRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    scheduleSearch: ScheduleSearch;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ResolveRoomMaintenanceRequest {
    mainteananceId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomMaintenance: RoomMaintenance;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetGuestHousekeepingNotesRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestHousekeepingServiceRequest: GuestHousekeepingServiceRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetGuestHousekeepingServiceRequestRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestHousekeepingServiceRequestCriteria: GuestHousekeepingServiceRequestCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetRoomCleaningPriorityRequest {
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomCleaningPriority: RoomCleaningPriority;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetRoomConditionRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomCondition: RoomCondition;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ShiftReservationHousekeepingScheduleRequest {
    reservationId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    scheduleShiftRequest: ScheduleShiftRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SkipServicingTaskRoomRequest {
    sheetNumber: string;
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface StartServiceBreakRequest {
    taskSheetNumber: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface StartServicingTaskRoomRequest {
    sheetNumber: string;
    roomId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskRoom: TaskRoom;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface UnResolveRoomMaintenanceRequest {
    mainteananceId: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomMaintenance: RoomMaintenance;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface UnlockTaskSheetRequest {
    sheetNumber: string;
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskSheetToUnlock: TaskSheetToUnlock;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HousekeepingApi extends runtime.BaseAPI {
    /**
     * This API will allow you to Auto generate the task sheets. <p><strong>OperationId:</strong>autoGenerateTaskSheets</p>
     * Auto generate the task sheets
     */
    autoGenerateTaskSheetsRaw(requestParameters: AutoGenerateTaskSheetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to Auto generate the task sheets. <p><strong>OperationId:</strong>autoGenerateTaskSheets</p>
     * Auto generate the task sheets
     */
    autoGenerateTaskSheets(requestParameters: AutoGenerateTaskSheetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to cancel servicing task room. <p><strong>OperationId:</strong>cancelServicingTaskRoom</p>
     * Cancel servicing task room
     */
    cancelServicingTaskRoomRaw(requestParameters: CancelServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CanceledServicingTaskRoom>>;
    /**
     * This API will allow you to cancel servicing task room. <p><strong>OperationId:</strong>cancelServicingTaskRoom</p>
     * Cancel servicing task room
     */
    cancelServicingTaskRoom(requestParameters: CancelServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CanceledServicingTaskRoom>;
    /**
     * Use this API when one or more rooms are no longer Out Of Order, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfOrderRooms</p>
     * Complete rooms Out Of Order
     */
    completeOutOfOrderRoomsRaw(requestParameters: CompleteOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompleteRoomRepairStatus>>;
    /**
     * Use this API when one or more rooms are no longer Out Of Order, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfOrderRooms</p>
     * Complete rooms Out Of Order
     */
    completeOutOfOrderRooms(requestParameters: CompleteOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompleteRoomRepairStatus>;
    /**
     * Use this API when one or more rooms are no longer Out Of Service, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfServiceRooms</p>
     * Complete Rooms Out of Service
     */
    completeOutOfServiceRoomsRaw(requestParameters: CompleteOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompleteRoomRepairStatus>>;
    /**
     * Use this API when one or more rooms are no longer Out Of Service, and can now be available for a guest to stay in.  Specify in the request what status the room(s) should be returned to, such as clean, Inspected, dirty or Pickup. <p><strong>OperationId:</strong>completeOutOfServiceRooms</p>
     * Complete Rooms Out of Service
     */
    completeOutOfServiceRooms(requestParameters: CompleteOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompleteRoomRepairStatus>;
    /**
     * This API will allow you to complete servicing task room. <p><strong>OperationId:</strong>completeServicingTaskRoom</p>
     * Complete servicing task room
     */
    completeServicingTaskRoomRaw(requestParameters: CompleteServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompletedServicingTaskRoom>>;
    /**
     * This API will allow you to complete servicing task room. <p><strong>OperationId:</strong>completeServicingTaskRoom</p>
     * Complete servicing task room
     */
    completeServicingTaskRoom(requestParameters: CompleteServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompletedServicingTaskRoom>;
    /**
     * Use this API to delete all task sheets for an existing task sheet set for a specific property. Task Sheet Sets can be used to break out the rooms to be cleaned by the housekeeping attendants.<p><strong>OperationId:</strong>deleteHouseKeepingTaskSheets</p>
     * Delete all the hotel task sheets for an existing Task Sheet Set.
     */
    deleteHouseKeepingTaskSheetsRaw(requestParameters: DeleteHouseKeepingTaskSheetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete all task sheets for an existing task sheet set for a specific property. Task Sheet Sets can be used to break out the rooms to be cleaned by the housekeeping attendants.<p><strong>OperationId:</strong>deleteHouseKeepingTaskSheets</p>
     * Delete all the hotel task sheets for an existing Task Sheet Set.
     */
    deleteHouseKeepingTaskSheets(requestParameters: DeleteHouseKeepingTaskSheetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to delete housekeeping attendant schedule. <p><strong>OperationId:</strong>deleteHousekeepingAttendantSchedule</p>
     * Delete housekeeping attendant schedule
     */
    deleteHousekeepingAttendantScheduleRaw(requestParameters: DeleteHousekeepingAttendantScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to delete housekeeping attendant schedule. <p><strong>OperationId:</strong>deleteHousekeepingAttendantSchedule</p>
     * Delete housekeeping attendant schedule
     */
    deleteHousekeepingAttendantSchedule(requestParameters: DeleteHousekeepingAttendantScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to delete reservation housekeeping task. <p><strong>OperationId:</strong>deleteReservationHousekeepingTasks</p>
     * Delete reservation housekeeping task
     */
    deleteReservationHousekeepingTasksRaw(requestParameters: DeleteReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to delete reservation housekeeping task. <p><strong>OperationId:</strong>deleteReservationHousekeepingTasks</p>
     * Delete reservation housekeeping task
     */
    deleteReservationHousekeepingTasks(requestParameters: DeleteReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete maintenances from rooms. <p><strong>OperationId:</strong>deleteRoomMaintenance</p>
     * Delete the maintenances for rooms
     */
    deleteRoomMaintenanceRaw(requestParameters: DeleteRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete maintenances from rooms. <p><strong>OperationId:</strong>deleteRoomMaintenance</p>
     * Delete the maintenances for rooms
     */
    deleteRoomMaintenance(requestParameters: DeleteRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete the task sheet. <p><strong>OperationId:</strong>deleteTaskSheet</p>
     * Delete the task sheet
     */
    deleteTaskSheetRaw(requestParameters: DeleteTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete the task sheet. <p><strong>OperationId:</strong>deleteTaskSheet</p>
     * Delete the task sheet
     */
    deleteTaskSheet(requestParameters: DeleteTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete task sheet rooms. <p><strong>OperationId:</strong>deleteTaskSheetRooms</p>
     * Delete task sheet rooms
     */
    deleteTaskSheetRoomsRaw(requestParameters: DeleteTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete task sheet rooms. <p><strong>OperationId:</strong>deleteTaskSheetRooms</p>
     * Delete task sheet rooms
     */
    deleteTaskSheetRooms(requestParameters: DeleteTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to delete task sheet templates. <p><strong>OperationId:</strong>deleteTaskSheetTemplate</p>
     * Delete task sheet templates
     */
    deleteTaskSheetTemplateRaw(requestParameters: DeleteTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to delete task sheet templates. <p><strong>OperationId:</strong>deleteTaskSheetTemplate</p>
     * Delete task sheet templates
     */
    deleteTaskSheetTemplate(requestParameters: DeleteTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to update reservation housekeeping tasks. <p><strong>OperationId:</strong>editReservationHousekeepingTasks</p>
     * Update reservation housekeeping tasks
     */
    editReservationHousekeepingTasksRaw(requestParameters: EditReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Schedule>>;
    /**
     * This API will allow you to update reservation housekeeping tasks. <p><strong>OperationId:</strong>editReservationHousekeepingTasks</p>
     * Update reservation housekeeping tasks
     */
    editReservationHousekeepingTasks(requestParameters: EditReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Schedule>;
    /**
     * This API allows you to end the Attendant\'s service break. <p><strong>OperationId:</strong>endServiceBreak</p>
     * End the service break
     */
    endServiceBreakRaw(requestParameters: EndServiceBreakRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EndedServiceBreak>>;
    /**
     * This API allows you to end the Attendant\'s service break. <p><strong>OperationId:</strong>endServiceBreak</p>
     * End the service break
     */
    endServiceBreak(requestParameters: EndServiceBreakRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EndedServiceBreak>;
    /**
     * This API will allow you to get facility forecast for Housekeeping attendants and tasks for a current or future start date . <p><strong>OperationId:</strong>getFacilityForecast</p>
     * Get facility forecast
     */
    getFacilityForecastRaw(requestParameters: GetFacilityForecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FacilityForecast>>;
    /**
     * This API will allow you to get facility forecast for Housekeeping attendants and tasks for a current or future start date . <p><strong>OperationId:</strong>getFacilityForecast</p>
     * Get facility forecast
     */
    getFacilityForecast(requestParameters: GetFacilityForecastRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FacilityForecast>;
    /**
     * This API will allow you to get the guest housekeeping instructions. <p><strong>OperationId:</strong>getGuestHousekeepingNotes</p>
     * Get the guest housekeeping instructions
     */
    getGuestHousekeepingNotesRaw(requestParameters: GetGuestHousekeepingNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestHousekeepingInstructions>>;
    /**
     * This API will allow you to get the guest housekeeping instructions. <p><strong>OperationId:</strong>getGuestHousekeepingNotes</p>
     * Get the guest housekeeping instructions
     */
    getGuestHousekeepingNotes(requestParameters: GetGuestHousekeepingNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestHousekeepingInstructions>;
    /**
     * This API will allow you to get the existing task sheets. <p><strong>OperationId:</strong>getHouseKeepingTasks</p>
     * Get the existing task sheets
     */
    getHouseKeepingTasksRaw(requestParameters: GetHouseKeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskAssignment>>;
    /**
     * This API will allow you to get the existing task sheets. <p><strong>OperationId:</strong>getHouseKeepingTasks</p>
     * Get the existing task sheets
     */
    getHouseKeepingTasks(requestParameters: GetHouseKeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskAssignment>;
    /**
     * This API will allow you to get the housekeeping attendants schedule. <p><strong>OperationId:</strong>getHousekeepingAttendantsSchedule</p>
     * Get the housekeeping attendants schedule
     */
    getHousekeepingAttendantsScheduleRaw(requestParameters: GetHousekeepingAttendantsScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AttendantSchedule>>;
    /**
     * This API will allow you to get the housekeeping attendants schedule. <p><strong>OperationId:</strong>getHousekeepingAttendantsSchedule</p>
     * Get the housekeeping attendants schedule
     */
    getHousekeepingAttendantsSchedule(requestParameters: GetHousekeepingAttendantsScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AttendantSchedule>;
    /**
     * Use this API to return the current housekeeping discrepant rooms for a specific property based on search parameters such as roomDiscrepancyStatus, roomClass, floor, dueOut, etc. These are rooms where the housekeeping status does not match the front office status.<p><strong>OperationId:</strong>getHousekeepingDiscrepancies</p>
     * Get hotel housekeeping discrepant rooms
     */
    getHousekeepingDiscrepanciesRaw(requestParameters: GetHousekeepingDiscrepanciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to return the current housekeeping discrepant rooms for a specific property based on search parameters such as roomDiscrepancyStatus, roomClass, floor, dueOut, etc. These are rooms where the housekeeping status does not match the front office status.<p><strong>OperationId:</strong>getHousekeepingDiscrepancies</p>
     * Get hotel housekeeping discrepant rooms
     */
    getHousekeepingDiscrepancies(requestParameters: GetHousekeepingDiscrepanciesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * Use this API to return the status of rooms for a specific property based on search criteria such as hotelId, limit, housekeepingRoomStatus, frontOfficeRoomStatus, roomAssignmentStatus, roomType, roomFeatures. The results will give you a list of rooms, and their current housekeeping details.  You could then go ahead and update any of these rooms by using postOutOfOrderRoom for example. <p><strong>OperationId:</strong>getHousekeepingOverview</p>
     * Get housekeeping rooms overview
     */
    getHousekeepingOverviewRaw(requestParameters: GetHousekeepingOverviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingBoard>>;
    /**
     * Use this API to return the status of rooms for a specific property based on search criteria such as hotelId, limit, housekeepingRoomStatus, frontOfficeRoomStatus, roomAssignmentStatus, roomType, roomFeatures. The results will give you a list of rooms, and their current housekeeping details.  You could then go ahead and update any of these rooms by using postOutOfOrderRoom for example. <p><strong>OperationId:</strong>getHousekeepingOverview</p>
     * Get housekeeping rooms overview
     */
    getHousekeepingOverview(requestParameters: GetHousekeepingOverviewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingBoard>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Order.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfOrderRooms</p>
     * Get Out of Order Rooms
     */
    getOutOfOrderRoomsRaw(requestParameters: GetOutOfOrderRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Order.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfOrderRooms</p>
     * Get Out of Order Rooms
     */
    getOutOfOrderRooms(requestParameters: GetOutOfOrderRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Service.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfServiceRooms</p>
     * Get Out of Service Rooms
     */
    getOutOfServiceRoomsRaw(requestParameters: GetOutOfServiceRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * Use this API to get a list of rooms for a hotel that are Out of Service.  You can narrow down your results with search criteria such as Room class, Room Type, date range. <p><strong>OperationId:</strong>getOutOfServiceRooms</p>
     * Get Out of Service Rooms
     */
    getOutOfServiceRooms(requestParameters: GetOutOfServiceRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * This API will allow you to get reservation housekeeping schedule. <p><strong>OperationId:</strong>getReservationHousekeepingSchedule</p>
     * Get reservation housekeeping schedule
     */
    getReservationHousekeepingScheduleRaw(requestParameters: GetReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Schedule>>;
    /**
     * This API will allow you to get reservation housekeeping schedule. <p><strong>OperationId:</strong>getReservationHousekeepingSchedule</p>
     * Get reservation housekeeping schedule
     */
    getReservationHousekeepingSchedule(requestParameters: GetReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Schedule>;
    /**
     * This API will allow you to get a list of rooms that have a condition set. <p><strong>OperationId:</strong>getRoomConditions</p>
     * Get rooms condition
     */
    getRoomConditionsRaw(requestParameters: GetRoomConditionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Rooms>>;
    /**
     * This API will allow you to get a list of rooms that have a condition set. <p><strong>OperationId:</strong>getRoomConditions</p>
     * Get rooms condition
     */
    getRoomConditions(requestParameters: GetRoomConditionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Rooms>;
    /**
     * Use this API to get a list of rooms with maintenances. <p><strong>OperationId:</strong>getRoomMaintenance</p>
     * Get the maintenance rooms
     */
    getRoomMaintenanceRaw(requestParameters: GetRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomMaintenanceDetails>>;
    /**
     * Use this API to get a list of rooms with maintenances. <p><strong>OperationId:</strong>getRoomMaintenance</p>
     * Get the maintenance rooms
     */
    getRoomMaintenance(requestParameters: GetRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomMaintenanceDetails>;
    /**
     * This API allows you to get task companion. <p><strong>OperationId:</strong>getTaskCompanion</p>
     * Get task companion
     */
    getTaskCompanionRaw(requestParameters: GetTaskCompanionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskCompanion>>;
    /**
     * This API allows you to get task companion. <p><strong>OperationId:</strong>getTaskCompanion</p>
     * Get task companion
     */
    getTaskCompanion(requestParameters: GetTaskCompanionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskCompanion>;
    /**
     * This API allows you to get the task sheet templates. <p><strong>OperationId:</strong>getTaskSheetTemplate</p>
     * Get the task sheet templates
     */
    getTaskSheetTemplateRaw(requestParameters: GetTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskSheetTemplate>>;
    /**
     * This API allows you to get the task sheet templates. <p><strong>OperationId:</strong>getTaskSheetTemplate</p>
     * Get the task sheet templates
     */
    getTaskSheetTemplate(requestParameters: GetTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskSheetTemplate>;
    /**
     * This API allows you to Lock the task sheet. <p><strong>OperationId:</strong>lockTaskSheet</p>
     * Lock the task sheet
     */
    lockTaskSheetRaw(requestParameters: LockTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LockedTaskSheet>>;
    /**
     * This API allows you to Lock the task sheet. <p><strong>OperationId:</strong>lockTaskSheet</p>
     * Lock the task sheet
     */
    lockTaskSheet(requestParameters: LockTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LockedTaskSheet>;
    /**
     * This API allows you to merge task sheet. <p><strong>OperationId:</strong>mergeTaskSheet</p>
     * Merge task sheet
     */
    mergeTaskSheetRaw(requestParameters: MergeTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to merge task sheet. <p><strong>OperationId:</strong>mergeTaskSheet</p>
     * Merge task sheet
     */
    mergeTaskSheet(requestParameters: MergeTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to Move the tasksheet rooms. <p><strong>OperationId:</strong>moveTaskRooms</p>
     * Move the task rooms
     */
    moveTaskRoomsRaw(requestParameters: MoveTaskRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MovedTaskRoomsRS>>;
    /**
     * This API will allow you to Move the tasksheet rooms. <p><strong>OperationId:</strong>moveTaskRooms</p>
     * Move the task rooms
     */
    moveTaskRooms(requestParameters: MoveTaskRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MovedTaskRoomsRS>;
    /**
     * This API will allow you to create housekeeping attendant schedule. <p><strong>OperationId:</strong>postHousekeepingAttendantSchedule</p>
     * Create housekeeping attendant schedule
     */
    postHousekeepingAttendantScheduleRaw(requestParameters: PostHousekeepingAttendantScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to create housekeeping attendant schedule. <p><strong>OperationId:</strong>postHousekeepingAttendantSchedule</p>
     * Create housekeeping attendant schedule
     */
    postHousekeepingAttendantSchedule(requestParameters: PostHousekeepingAttendantScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to initially set rooms to \'Out Of Order\' housekeeping status and update existing outOfOrderRooms. <p><strong>OperationId:</strong>postOutOfOrderRooms</p>
     * Set multiple rooms to Out Of Order
     */
    postOutOfOrderRoomsRaw(requestParameters: PostOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to initially set rooms to \'Out Of Order\' housekeeping status and update existing outOfOrderRooms. <p><strong>OperationId:</strong>postOutOfOrderRooms</p>
     * Set multiple rooms to Out Of Order
     */
    postOutOfOrderRooms(requestParameters: PostOutOfOrderRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to initially set rooms to \'Out Of Service\' housekeeping status and update existing outOfServiceRooms. <p><strong>OperationId:</strong>postOutOfServiceRooms</p>
     * Set multiple rooms to Out Of Service
     */
    postOutOfServiceRoomsRaw(requestParameters: PostOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to initially set rooms to \'Out Of Service\' housekeeping status and update existing outOfServiceRooms. <p><strong>OperationId:</strong>postOutOfServiceRooms</p>
     * Set multiple rooms to Out Of Service
     */
    postOutOfServiceRooms(requestParameters: PostOutOfServiceRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to create reservation housekeeping tasks. <p><strong>OperationId:</strong>postReservationHousekeepingTasks</p>
     * Create reservation housekeeping tasks
     */
    postReservationHousekeepingTasksRaw(requestParameters: PostReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to create reservation housekeeping tasks. <p><strong>OperationId:</strong>postReservationHousekeepingTasks</p>
     * Create reservation housekeeping tasks
     */
    postReservationHousekeepingTasks(requestParameters: PostReservationHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create maintenances for rooms. <p><strong>OperationId:</strong>postRoomMaintenance</p>
     * Create maintenances for rooms
     */
    postRoomMaintenanceRaw(requestParameters: PostRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create maintenances for rooms. <p><strong>OperationId:</strong>postRoomMaintenance</p>
     * Create maintenances for rooms
     */
    postRoomMaintenance(requestParameters: PostRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create the task sheet. <p><strong>OperationId:</strong>postTaskSheet</p>
     * Create the task sheet
     */
    postTaskSheetRaw(requestParameters: PostTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create the task sheet. <p><strong>OperationId:</strong>postTaskSheet</p>
     * Create the task sheet
     */
    postTaskSheet(requestParameters: PostTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API allows you to create the task sheet rooms. <p><strong>OperationId:</strong>postTaskSheetRooms</p>
     * Create the task sheet rooms
     */
    postTaskSheetRoomsRaw(requestParameters: PostTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API allows you to create the task sheet rooms. <p><strong>OperationId:</strong>postTaskSheetRooms</p>
     * Create the task sheet rooms
     */
    postTaskSheetRooms(requestParameters: PostTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to delete room cleaning priority. <p><strong>OperationId:</strong>putRoomCleaningPriority</p>
     * Delete room cleaning priority
     */
    putRoomCleaningPriorityRaw(requestParameters: PutRoomCleaningPriorityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API will allow you to delete room cleaning priority. <p><strong>OperationId:</strong>putRoomCleaningPriority</p>
     * Delete room cleaning priority
     */
    putRoomCleaningPriority(requestParameters: PutRoomCleaningPriorityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to change the maintenances for rooms. <p><strong>OperationId:</strong>putRoomMaintenance</p>
     * Change maintenances for rooms
     */
    putRoomMaintenanceRaw(requestParameters: PutRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangedRoomMaintenance>>;
    /**
     * Use this API to change the maintenances for rooms. <p><strong>OperationId:</strong>putRoomMaintenance</p>
     * Change maintenances for rooms
     */
    putRoomMaintenance(requestParameters: PutRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangedRoomMaintenance>;
    /**
     * Use this API to update the housekeeping room status for multiple rooms.  Statuses typically include Inspected, Clean, Pickup or Dirty. <p><strong>OperationId:</strong>putRoomRelatedStatus</p>
     * Update Housekeeping Room Status
     */
    putRoomRelatedStatusRaw(requestParameters: PutRoomRelatedStatusOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingRoomStatus>>;
    /**
     * Use this API to update the housekeeping room status for multiple rooms.  Statuses typically include Inspected, Clean, Pickup or Dirty. <p><strong>OperationId:</strong>putRoomRelatedStatus</p>
     * Update Housekeeping Room Status
     */
    putRoomRelatedStatus(requestParameters: PutRoomRelatedStatusOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingRoomStatus>;
    /**
     * This API allows you to change the task sheet. <p><strong>OperationId:</strong>putTaskSheet</p>
     * Change the task sheet
     */
    putTaskSheetRaw(requestParameters: PutTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangedTaskSheet>>;
    /**
     * This API allows you to change the task sheet. <p><strong>OperationId:</strong>putTaskSheet</p>
     * Change the task sheet
     */
    putTaskSheet(requestParameters: PutTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangedTaskSheet>;
    /**
     * This API allows you to change the task sheet rooms. <p><strong>OperationId:</strong>putTaskSheetRooms</p>
     * Change the task sheet rooms
     */
    putTaskSheetRoomsRaw(requestParameters: PutTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangedTaskSheetRooms>>;
    /**
     * This API allows you to change the task sheet rooms. <p><strong>OperationId:</strong>putTaskSheetRooms</p>
     * Change the task sheet rooms
     */
    putTaskSheetRooms(requestParameters: PutTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangedTaskSheetRooms>;
    /**
     * This API allows you to change the task sheet templates. <p><strong>OperationId:</strong>putTaskSheetTemplate</p>
     * Change the task sheet templates
     */
    putTaskSheetTemplateRaw(requestParameters: PutTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangedTaskSheetTemplate>>;
    /**
     * This API allows you to change the task sheet templates. <p><strong>OperationId:</strong>putTaskSheetTemplate</p>
     * Change the task sheet templates
     */
    putTaskSheetTemplate(requestParameters: PutTaskSheetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangedTaskSheetTemplate>;
    /**
     * This API will allow you to reset reservation housekeeping schedule. <p><strong>OperationId:</strong>resetReservationHousekeepingSchedule</p>
     * Reset reservation housekeeping schedule
     */
    resetReservationHousekeepingScheduleRaw(requestParameters: ResetReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScheduledSearch>>;
    /**
     * This API will allow you to reset reservation housekeeping schedule. <p><strong>OperationId:</strong>resetReservationHousekeepingSchedule</p>
     * Reset reservation housekeeping schedule
     */
    resetReservationHousekeepingSchedule(requestParameters: ResetReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScheduledSearch>;
    /**
     * Use this API to Resolve maintenances for rooms. <p><strong>OperationId:</strong>resolveRoomMaintenance</p>
     * Resolve maintenances for rooms
     */
    resolveRoomMaintenanceRaw(requestParameters: ResolveRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResolvedRoomMaintenance>>;
    /**
     * Use this API to Resolve maintenances for rooms. <p><strong>OperationId:</strong>resolveRoomMaintenance</p>
     * Resolve maintenances for rooms
     */
    resolveRoomMaintenance(requestParameters: ResolveRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResolvedRoomMaintenance>;
    /**
     * This API will allow you to Set guest housekeeping instructions. <p><strong>OperationId:</strong>setGuestHousekeepingNotes</p>
     * Set guest housekeeping instructions
     */
    setGuestHousekeepingNotesRaw(requestParameters: SetGuestHousekeepingNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestHousekeepingService>>;
    /**
     * This API will allow you to Set guest housekeeping instructions. <p><strong>OperationId:</strong>setGuestHousekeepingNotes</p>
     * Set guest housekeeping instructions
     */
    setGuestHousekeepingNotes(requestParameters: SetGuestHousekeepingNotesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestHousekeepingService>;
    /**
     * This API allows you to Set the guest housekeeping service requests <p><strong>OperationId:</strong>setGuestHousekeepingServiceRequest</p>
     * Set the Guest housekeeping service requests
     */
    setGuestHousekeepingServiceRequestRaw(requestParameters: SetGuestHousekeepingServiceRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestHousekeepingServiceRequestStatus>>;
    /**
     * This API allows you to Set the guest housekeeping service requests <p><strong>OperationId:</strong>setGuestHousekeepingServiceRequest</p>
     * Set the Guest housekeeping service requests
     */
    setGuestHousekeepingServiceRequest(requestParameters: SetGuestHousekeepingServiceRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestHousekeepingServiceRequestStatus>;
    /**
     * This API will allow you to set the room cleaning priority. <p><strong>OperationId:</strong>setRoomCleaningPriority</p>
     * Set the room cleaning priority
     */
    setRoomCleaningPriorityRaw(requestParameters: SetRoomCleaningPriorityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomCleaningPriorityRequestStatus>>;
    /**
     * This API will allow you to set the room cleaning priority. <p><strong>OperationId:</strong>setRoomCleaningPriority</p>
     * Set the room cleaning priority
     */
    setRoomCleaningPriority(requestParameters: SetRoomCleaningPriorityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomCleaningPriorityRequestStatus>;
    /**
     * This API will allow you to set, change, or delete a condition on rooms. A condition is used to designate rooms that are available for show, set aside for special housekeeping attention, or are to be treated differently for any other reason. <p><strong>OperationId:</strong>setRoomCondition</p>
     * Set rooms condition
     */
    setRoomConditionRaw(requestParameters: SetRoomConditionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomConditionRequestStatus>>;
    /**
     * This API will allow you to set, change, or delete a condition on rooms. A condition is used to designate rooms that are available for show, set aside for special housekeeping attention, or are to be treated differently for any other reason. <p><strong>OperationId:</strong>setRoomCondition</p>
     * Set rooms condition
     */
    setRoomCondition(requestParameters: SetRoomConditionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomConditionRequestStatus>;
    /**
     * This API will allow you to shift reservation housekeeping schedule. <p><strong>OperationId:</strong>shiftReservationHousekeepingSchedule</p>
     * Shift reservation housekeeping schedule
     */
    shiftReservationHousekeepingScheduleRaw(requestParameters: ShiftReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScheduledShiftRequest>>;
    /**
     * This API will allow you to shift reservation housekeeping schedule. <p><strong>OperationId:</strong>shiftReservationHousekeepingSchedule</p>
     * Shift reservation housekeeping schedule
     */
    shiftReservationHousekeepingSchedule(requestParameters: ShiftReservationHousekeepingScheduleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScheduledShiftRequest>;
    /**
     * This API will allow you to Skip servicing task room. <p><strong>OperationId:</strong>skipServicingTaskRoom</p>
     * Skip servicing task room
     */
    skipServicingTaskRoomRaw(requestParameters: SkipServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkipedServicingTaskRoom>>;
    /**
     * This API will allow you to Skip servicing task room. <p><strong>OperationId:</strong>skipServicingTaskRoom</p>
     * Skip servicing task room
     */
    skipServicingTaskRoom(requestParameters: SkipServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkipedServicingTaskRoom>;
    /**
     * This API allows you to Start the Attendant\'s service break. <p><strong>OperationId:</strong>startServiceBreak</p>
     * Start the service break
     */
    startServiceBreakRaw(requestParameters: StartServiceBreakRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StartedServiceBreak>>;
    /**
     * This API allows you to Start the Attendant\'s service break. <p><strong>OperationId:</strong>startServiceBreak</p>
     * Start the service break
     */
    startServiceBreak(requestParameters: StartServiceBreakRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StartedServiceBreak>;
    /**
     * This API will allow you to start servicing task room. <p><strong>OperationId:</strong>startServicingTaskRoom</p>
     * Start servicing task room
     */
    startServicingTaskRoomRaw(requestParameters: StartServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceTime>>;
    /**
     * This API will allow you to start servicing task room. <p><strong>OperationId:</strong>startServicingTaskRoom</p>
     * Start servicing task room
     */
    startServicingTaskRoom(requestParameters: StartServicingTaskRoomRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceTime>;
    /**
     * Use this API to unResolve maintenances for rooms. <p><strong>OperationId:</strong>unResolveRoomMaintenance</p>
     * unResolve the maintenances for rooms
     */
    unResolveRoomMaintenanceRaw(requestParameters: UnResolveRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnresolvedRoomMaintenance>>;
    /**
     * Use this API to unResolve maintenances for rooms. <p><strong>OperationId:</strong>unResolveRoomMaintenance</p>
     * unResolve the maintenances for rooms
     */
    unResolveRoomMaintenance(requestParameters: UnResolveRoomMaintenanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnresolvedRoomMaintenance>;
    /**
     * This API allows you to Unlock the task sheet. <p><strong>OperationId:</strong>unlockTaskSheet</p>
     * Unlock the task sheet
     */
    unlockTaskSheetRaw(requestParameters: UnlockTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UnlockedTaskSheet>>;
    /**
     * This API allows you to Unlock the task sheet. <p><strong>OperationId:</strong>unlockTaskSheet</p>
     * Unlock the task sheet
     */
    unlockTaskSheet(requestParameters: UnlockTaskSheetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UnlockedTaskSheet>;
}
/**
 * @export
 */
export declare const DeleteReservationHousekeepingTasksStayPeriodEnum: {
    readonly EntireStay: "EntireStay";
    readonly SpecificDates: "SpecificDates";
};
export type DeleteReservationHousekeepingTasksStayPeriodEnum = typeof DeleteReservationHousekeepingTasksStayPeriodEnum[keyof typeof DeleteReservationHousekeepingTasksStayPeriodEnum];
/**
 * @export
 */
export declare const GetGuestHousekeepingNotesHousekeepingInstructionEnum: {
    readonly Turndown: "Turndown";
    readonly CleaningPriority: "CleaningPriority";
    readonly ServiceRequest: "ServiceRequest";
};
export type GetGuestHousekeepingNotesHousekeepingInstructionEnum = typeof GetGuestHousekeepingNotesHousekeepingInstructionEnum[keyof typeof GetGuestHousekeepingNotesHousekeepingInstructionEnum];
/**
 * @export
 */
export declare const GetHouseKeepingTasksHousekeepingRoomStatusEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetHouseKeepingTasksHousekeepingRoomStatusEnum = typeof GetHouseKeepingTasksHousekeepingRoomStatusEnum[keyof typeof GetHouseKeepingTasksHousekeepingRoomStatusEnum];
/**
 * @export
 */
export declare const GetHouseKeepingTasksGuestServiceEnum: {
    readonly DoNotDisturb: "DoNotDisturb";
    readonly MakeUpRoom: "MakeUpRoom";
    readonly NoStatusSelected: "NoStatusSelected";
};
export type GetHouseKeepingTasksGuestServiceEnum = typeof GetHouseKeepingTasksGuestServiceEnum[keyof typeof GetHouseKeepingTasksGuestServiceEnum];
/**
 * @export
 */
export declare const GetHouseKeepingTasksRoomStatusToChangeEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetHouseKeepingTasksRoomStatusToChangeEnum = typeof GetHouseKeepingTasksRoomStatusToChangeEnum[keyof typeof GetHouseKeepingTasksRoomStatusToChangeEnum];
/**
 * @export
 */
export declare const GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum: {
    readonly Sleep: "Sleep";
    readonly Skip: "Skip";
    readonly PersonDiscrepancy: "PersonDiscrepancy";
};
export type GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum = typeof GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum[keyof typeof GetHousekeepingDiscrepanciesRoomDiscrepancyStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewHousekeepingRoomStatusEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetHousekeepingOverviewHousekeepingRoomStatusEnum = typeof GetHousekeepingOverviewHousekeepingRoomStatusEnum[keyof typeof GetHousekeepingOverviewHousekeepingRoomStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewFrontOfficeRoomStatusEnum: {
    readonly Vacant: "Vacant";
    readonly Occupied: "Occupied";
};
export type GetHousekeepingOverviewFrontOfficeRoomStatusEnum = typeof GetHousekeepingOverviewFrontOfficeRoomStatusEnum[keyof typeof GetHousekeepingOverviewFrontOfficeRoomStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewTurndownStatusEnum: {
    readonly Required: "Required";
    readonly NotRequired: "NotRequired";
    readonly Compeleted: "Compeleted";
};
export type GetHousekeepingOverviewTurndownStatusEnum = typeof GetHousekeepingOverviewTurndownStatusEnum[keyof typeof GetHousekeepingOverviewTurndownStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewRoomParityStatusEnum: {
    readonly Odd: "Odd";
    readonly Even: "Even";
};
export type GetHousekeepingOverviewRoomParityStatusEnum = typeof GetHousekeepingOverviewRoomParityStatusEnum[keyof typeof GetHousekeepingOverviewRoomParityStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewServiceRequestStatusEnum: {
    readonly Open: "Open";
    readonly PendingFollowUp: "PendingFollowUp";
    readonly Closed: "Closed";
    readonly DoNotDisturb: "DoNotDisturb";
    readonly MakeUpRoom: "MakeUpRoom";
};
export type GetHousekeepingOverviewServiceRequestStatusEnum = typeof GetHousekeepingOverviewServiceRequestStatusEnum[keyof typeof GetHousekeepingOverviewServiceRequestStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewRoomAssignmentStatusEnum: {
    readonly Assigned: "Assigned";
    readonly Unassigned: "Unassigned";
};
export type GetHousekeepingOverviewRoomAssignmentStatusEnum = typeof GetHousekeepingOverviewRoomAssignmentStatusEnum[keyof typeof GetHousekeepingOverviewRoomAssignmentStatusEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewFetchInstructionsEnum: {
    readonly Summary: "Summary";
    readonly ResvInfo: "ResvInfo";
    readonly TurndownInfo: "TurndownInfo";
};
export type GetHousekeepingOverviewFetchInstructionsEnum = typeof GetHousekeepingOverviewFetchInstructionsEnum[keyof typeof GetHousekeepingOverviewFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetHousekeepingOverviewGuestServiceRequestEnum: {
    readonly DoNotDisturb: "DoNotDisturb";
    readonly MakeUpRoom: "MakeUpRoom";
    readonly NoStatusSelected: "NoStatusSelected";
};
export type GetHousekeepingOverviewGuestServiceRequestEnum = typeof GetHousekeepingOverviewGuestServiceRequestEnum[keyof typeof GetHousekeepingOverviewGuestServiceRequestEnum];
/**
 * @export
 */
export declare const GetReservationHousekeepingScheduleFetchInstructionsEnum: {
    readonly HousekeepingInstructions: "HousekeepingInstructions";
    readonly FacilitySchedule: "FacilitySchedule";
};
export type GetReservationHousekeepingScheduleFetchInstructionsEnum = typeof GetReservationHousekeepingScheduleFetchInstructionsEnum[keyof typeof GetReservationHousekeepingScheduleFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetRoomConditionsFrontOfficeRoomStatusEnum: {
    readonly Vacant: "Vacant";
    readonly Occupied: "Occupied";
};
export type GetRoomConditionsFrontOfficeRoomStatusEnum = typeof GetRoomConditionsFrontOfficeRoomStatusEnum[keyof typeof GetRoomConditionsFrontOfficeRoomStatusEnum];
/**
 * @export
 */
export declare const GetRoomConditionsRoomAssignmentStatusEnum: {
    readonly Assigned: "Assigned";
    readonly Unassigned: "Unassigned";
};
export type GetRoomConditionsRoomAssignmentStatusEnum = typeof GetRoomConditionsRoomAssignmentStatusEnum[keyof typeof GetRoomConditionsRoomAssignmentStatusEnum];
/**
 * @export
 */
export declare const GetRoomConditionsHousekeepingRoomStatusEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetRoomConditionsHousekeepingRoomStatusEnum = typeof GetRoomConditionsHousekeepingRoomStatusEnum[keyof typeof GetRoomConditionsHousekeepingRoomStatusEnum];
/**
 * @export
 */
export declare const GetRoomConditionsRoomParityStatusEnum: {
    readonly Odd: "Odd";
    readonly Even: "Even";
};
export type GetRoomConditionsRoomParityStatusEnum = typeof GetRoomConditionsRoomParityStatusEnum[keyof typeof GetRoomConditionsRoomParityStatusEnum];
/**
 * @export
 */
export declare const GetRoomMaintenanceRoomMaintenanceStatusEnum: {
    readonly All: "All";
    readonly UnResolved: "UnResolved";
    readonly Resolved: "Resolved";
};
export type GetRoomMaintenanceRoomMaintenanceStatusEnum = typeof GetRoomMaintenanceRoomMaintenanceStatusEnum[keyof typeof GetRoomMaintenanceRoomMaintenanceStatusEnum];
/**
 * @export
 */
export declare const GetTaskCompanionRoomStatusToChangeEnum: {
    readonly Clean: "Clean";
    readonly Dirty: "Dirty";
    readonly Pickup: "Pickup";
    readonly Inspected: "Inspected";
    readonly OutOfOrder: "OutOfOrder";
    readonly OutOfService: "OutOfService";
};
export type GetTaskCompanionRoomStatusToChangeEnum = typeof GetTaskCompanionRoomStatusToChangeEnum[keyof typeof GetTaskCompanionRoomStatusToChangeEnum];
