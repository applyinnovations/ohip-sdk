"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceTaskRoomTypeToJSON = exports.ServiceTaskRoomTypeFromJSONTyped = exports.ServiceTaskRoomTypeFromJSON = exports.instanceOfServiceTaskRoomType = void 0;
const runtime_1 = require("../runtime");
const FrontOfficeRoomStatusType_1 = require("./FrontOfficeRoomStatusType");
const HousekeepingRoomStatusType_1 = require("./HousekeepingRoomStatusType");
/**
 * Check if a given object implements the ServiceTaskRoomType interface.
 */
function instanceOfServiceTaskRoomType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfServiceTaskRoomType = instanceOfServiceTaskRoomType;
function ServiceTaskRoomTypeFromJSON(json) {
    return ServiceTaskRoomTypeFromJSONTyped(json, false);
}
exports.ServiceTaskRoomTypeFromJSON = ServiceTaskRoomTypeFromJSON;
function ServiceTaskRoomTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'taskCodes': !(0, runtime_1.exists)(json, 'taskCodes') ? undefined : json['taskCodes'],
        'allottedMinutes': !(0, runtime_1.exists)(json, 'allottedMinutes') ? undefined : json['allottedMinutes'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'taskDate': !(0, runtime_1.exists)(json, 'taskDate') ? undefined : json['taskDate'],
        'sheetNumber': !(0, runtime_1.exists)(json, 'sheetNumber') ? undefined : json['sheetNumber'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'attendant': !(0, runtime_1.exists)(json, 'attendant') ? undefined : json['attendant'],
        'frontOfficeStatus': !(0, runtime_1.exists)(json, 'frontOfficeStatus') ? undefined : (0, FrontOfficeRoomStatusType_1.FrontOfficeRoomStatusTypeFromJSON)(json['frontOfficeStatus']),
        'housekeepingRoomStatus': !(0, runtime_1.exists)(json, 'housekeepingRoomStatus') ? undefined : (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeFromJSON)(json['housekeepingRoomStatus']),
        'roomTaskCode': !(0, runtime_1.exists)(json, 'roomTaskCode') ? undefined : json['roomTaskCode'],
    };
}
exports.ServiceTaskRoomTypeFromJSONTyped = ServiceTaskRoomTypeFromJSONTyped;
function ServiceTaskRoomTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'taskCodes': value.taskCodes,
        'allottedMinutes': value.allottedMinutes,
        'hotelId': value.hotelId,
        'taskDate': value.taskDate,
        'sheetNumber': value.sheetNumber,
        'roomId': value.roomId,
        'attendant': value.attendant,
        'frontOfficeStatus': (0, FrontOfficeRoomStatusType_1.FrontOfficeRoomStatusTypeToJSON)(value.frontOfficeStatus),
        'housekeepingRoomStatus': (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeToJSON)(value.housekeepingRoomStatus),
        'roomTaskCode': value.roomTaskCode,
    };
}
exports.ServiceTaskRoomTypeToJSON = ServiceTaskRoomTypeToJSON;
