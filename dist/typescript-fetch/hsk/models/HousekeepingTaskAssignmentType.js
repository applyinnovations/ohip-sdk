"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HousekeepingTaskAssignmentTypeToJSON = exports.HousekeepingTaskAssignmentTypeFromJSONTyped = exports.HousekeepingTaskAssignmentTypeFromJSON = exports.instanceOfHousekeepingTaskAssignmentType = void 0;
const runtime_1 = require("../runtime");
const HousekeepingTaskCodeType_1 = require("./HousekeepingTaskCodeType");
const HousekeepingTaskType_1 = require("./HousekeepingTaskType");
/**
 * Check if a given object implements the HousekeepingTaskAssignmentType interface.
 */
function instanceOfHousekeepingTaskAssignmentType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHousekeepingTaskAssignmentType = instanceOfHousekeepingTaskAssignmentType;
function HousekeepingTaskAssignmentTypeFromJSON(json) {
    return HousekeepingTaskAssignmentTypeFromJSONTyped(json, false);
}
exports.HousekeepingTaskAssignmentTypeFromJSON = HousekeepingTaskAssignmentTypeFromJSON;
function HousekeepingTaskAssignmentTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'taskCodes': !(0, runtime_1.exists)(json, 'taskCodes') ? undefined : (json['taskCodes'].map(HousekeepingTaskCodeType_1.HousekeepingTaskCodeTypeFromJSON)),
        'taskDate': !(0, runtime_1.exists)(json, 'taskDate') ? undefined : (new Date(json['taskDate'])),
        'taskSheets': !(0, runtime_1.exists)(json, 'taskSheets') ? undefined : (json['taskSheets'].map(HousekeepingTaskType_1.HousekeepingTaskTypeFromJSON)),
        'taskSheetsCount': !(0, runtime_1.exists)(json, 'taskSheetsCount') ? undefined : json['taskSheetsCount'],
    };
}
exports.HousekeepingTaskAssignmentTypeFromJSONTyped = HousekeepingTaskAssignmentTypeFromJSONTyped;
function HousekeepingTaskAssignmentTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'taskCodes': value.taskCodes === undefined ? undefined : (value.taskCodes.map(HousekeepingTaskCodeType_1.HousekeepingTaskCodeTypeToJSON)),
        'taskDate': value.taskDate === undefined ? undefined : (value.taskDate.toISOString().substring(0, 10)),
        'taskSheets': value.taskSheets === undefined ? undefined : (value.taskSheets.map(HousekeepingTaskType_1.HousekeepingTaskTypeToJSON)),
        'taskSheetsCount': value.taskSheetsCount,
    };
}
exports.HousekeepingTaskAssignmentTypeToJSON = HousekeepingTaskAssignmentTypeToJSON;
