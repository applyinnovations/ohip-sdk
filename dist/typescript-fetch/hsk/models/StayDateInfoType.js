"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StayDateInfoTypeToJSON = exports.StayDateInfoTypeFromJSONTyped = exports.StayDateInfoTypeFromJSON = exports.instanceOfStayDateInfoType = void 0;
const runtime_1 = require("../runtime");
const ResExpectedTimesType_1 = require("./ResExpectedTimesType");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the StayDateInfoType interface.
 */
function instanceOfStayDateInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStayDateInfoType = instanceOfStayDateInfoType;
function StayDateInfoTypeFromJSON(json) {
    return StayDateInfoTypeFromJSONTyped(json, false);
}
exports.StayDateInfoTypeFromJSON = StayDateInfoTypeFromJSON;
function StayDateInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'expectedTimes': !(0, runtime_1.exists)(json, 'expectedTimes') ? undefined : (0, ResExpectedTimesType_1.ResExpectedTimesTypeFromJSON)(json['expectedTimes']),
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
    };
}
exports.StayDateInfoTypeFromJSONTyped = StayDateInfoTypeFromJSONTyped;
function StayDateInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'expectedTimes': (0, ResExpectedTimesType_1.ResExpectedTimesTypeToJSON)(value.expectedTimes),
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
    };
}
exports.StayDateInfoTypeToJSON = StayDateInfoTypeToJSON;
