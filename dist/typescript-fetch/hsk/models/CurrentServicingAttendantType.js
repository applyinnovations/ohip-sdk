"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CurrentServicingAttendantTypeToJSON = exports.CurrentServicingAttendantTypeFromJSONTyped = exports.CurrentServicingAttendantTypeFromJSON = exports.instanceOfCurrentServicingAttendantType = void 0;
const runtime_1 = require("../runtime");
const ApplicationUserType_1 = require("./ApplicationUserType");
const HousekeepingSectionType_1 = require("./HousekeepingSectionType");
const ServicingAttendantStatusType_1 = require("./ServicingAttendantStatusType");
/**
 * Check if a given object implements the CurrentServicingAttendantType interface.
 */
function instanceOfCurrentServicingAttendantType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCurrentServicingAttendantType = instanceOfCurrentServicingAttendantType;
function CurrentServicingAttendantTypeFromJSON(json) {
    return CurrentServicingAttendantTypeFromJSONTyped(json, false);
}
exports.CurrentServicingAttendantTypeFromJSON = CurrentServicingAttendantTypeFromJSON;
function CurrentServicingAttendantTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'section': !(0, runtime_1.exists)(json, 'section') ? undefined : (0, HousekeepingSectionType_1.HousekeepingSectionTypeFromJSON)(json['section']),
        'floor': !(0, runtime_1.exists)(json, 'floor') ? undefined : json['floor'],
        'attendantId': !(0, runtime_1.exists)(json, 'attendantId') ? undefined : json['attendantId'],
        'attendantName': !(0, runtime_1.exists)(json, 'attendantName') ? undefined : json['attendantName'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'activeFlag': !(0, runtime_1.exists)(json, 'activeFlag') ? undefined : json['activeFlag'],
        'sunday': !(0, runtime_1.exists)(json, 'sunday') ? undefined : json['sunday'],
        'monday': !(0, runtime_1.exists)(json, 'monday') ? undefined : json['monday'],
        'tuesday': !(0, runtime_1.exists)(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !(0, runtime_1.exists)(json, 'wednesday') ? undefined : json['wednesday'],
        'thursday': !(0, runtime_1.exists)(json, 'thursday') ? undefined : json['thursday'],
        'friday': !(0, runtime_1.exists)(json, 'friday') ? undefined : json['friday'],
        'saturday': !(0, runtime_1.exists)(json, 'saturday') ? undefined : json['saturday'],
        'appUser': !(0, runtime_1.exists)(json, 'appUser') ? undefined : (0, ApplicationUserType_1.ApplicationUserTypeFromJSON)(json['appUser']),
        'startTime': !(0, runtime_1.exists)(json, 'startTime') ? undefined : json['startTime'],
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : (0, ServicingAttendantStatusType_1.ServicingAttendantStatusTypeFromJSON)(json['status']),
    };
}
exports.CurrentServicingAttendantTypeFromJSONTyped = CurrentServicingAttendantTypeFromJSONTyped;
function CurrentServicingAttendantTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'section': (0, HousekeepingSectionType_1.HousekeepingSectionTypeToJSON)(value.section),
        'floor': value.floor,
        'attendantId': value.attendantId,
        'attendantName': value.attendantName,
        'hotelId': value.hotelId,
        'activeFlag': value.activeFlag,
        'sunday': value.sunday,
        'monday': value.monday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
        'thursday': value.thursday,
        'friday': value.friday,
        'saturday': value.saturday,
        'appUser': (0, ApplicationUserType_1.ApplicationUserTypeToJSON)(value.appUser),
        'startTime': value.startTime,
        'status': (0, ServicingAttendantStatusType_1.ServicingAttendantStatusTypeToJSON)(value.status),
    };
}
exports.CurrentServicingAttendantTypeToJSON = CurrentServicingAttendantTypeToJSON;
