"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelRoomsTypeToJSON = exports.HotelRoomsTypeFromJSONTyped = exports.HotelRoomsTypeFromJSON = exports.instanceOfHotelRoomsType = void 0;
const runtime_1 = require("../runtime");
const RoomType_1 = require("./RoomType");
/**
 * Check if a given object implements the HotelRoomsType interface.
 */
function instanceOfHotelRoomsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelRoomsType = instanceOfHotelRoomsType;
function HotelRoomsTypeFromJSON(json) {
    return HotelRoomsTypeFromJSONTyped(json, false);
}
exports.HotelRoomsTypeFromJSON = HotelRoomsTypeFromJSON;
function HotelRoomsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'room': !(0, runtime_1.exists)(json, 'room') ? undefined : (json['room'].map(RoomType_1.RoomTypeFromJSON)),
    };
}
exports.HotelRoomsTypeFromJSONTyped = HotelRoomsTypeFromJSONTyped;
function HotelRoomsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'room': value.room === undefined ? undefined : (value.room.map(RoomType_1.RoomTypeToJSON)),
    };
}
exports.HotelRoomsTypeToJSON = HotelRoomsTypeToJSON;
