/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TaskSheetGenerationStatusTypesType } from './TaskSheetGenerationStatusTypesType';
import type { TaskSheetInstructionsType } from './TaskSheetInstructionsType';
/**
 * Criteria Type for generating Housekeeping Task Sheets automatically. Defines the criteria required for automatic generation.
 * @export
 * @interface AutoGenerateTaskSheetsCriteriaType
 */
export interface AutoGenerateTaskSheetsCriteriaType {
    /**
     * The Attendant who will be assigned to the Task Sheets. Each attendant will be assigned to one task sheet. The number of attendants should be equal to the number of Attendants attached, otheriwise the attendants defined will be used.
     * @type {Array<string>}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    attendants?: Array<string>;
    /**
     * Indicates if the template code of the task sheet is set as default.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    defaultTemplate?: boolean;
    /**
     * It indicates exclude all the rooms that are configured as exclusive to owners.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    excludeRoomsExclusiveToOwner?: boolean;
    /**
     * It exclude any rooms that are occupied by their owner and/or an unthorized user of the room.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    excludeRoomsOccupiedByOwner?: boolean;
    /**
     * VIP codes to be excluded.
     * @type {Array<string>}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    excludeVIPCodes?: Array<string>;
    /**
     * Property for which the tasks are to be generated.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    hotelId?: string;
    /**
     *
     * @type {TaskSheetInstructionsType}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    instructions?: TaskSheetInstructionsType;
    /**
     * The maximum credits that can assigned to a task sheet based on the credits defined on the room.
     * @type {number}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    maximumCreditsPerSheet?: number;
    /**
     * The number of attendants for whom the task sheets are to be generated. Number of Attendants or Maximum Credits Per Task Sheet should be defined in order to generate task sheets.
     * @type {number}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    numberOfAttendants?: number;
    /**
     * Overrides the existing task template.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    overrideTaskTemplate?: boolean;
    /**
     * Rate codes needed for task sheet break out.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    rateCode?: string;
    /**
     * Return the details of the task sheets which were generated. Setting this to true will return the TaskAssignment element with details of task sheets which were generated.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    returnTaskSheets?: boolean;
    /**
     * Rooms needed for task sheet break out.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    room?: string;
    /**
     * Room Class of the Room.
     * @type {Array<string>}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    roomClassList?: Array<string>;
    /**
     * The credits configured for the different rules that apply for the current generation of task sheets process, it is available only when Housekeeping Credits is set to Room Task Rule.
     * @type {Array<string>}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    ruleCodes?: Array<string>;
    /**
     * If the task sheets have to sorted by Section, then the type of section to use should be indicated here. The types are 'Day' or 'Evening'.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    sectionTypeToUse?: AutoGenerateTaskSheetsCriteriaTypeSectionTypeToUseEnum;
    /**
     * Separate Do not Disturb rooms if there are any.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    separateDNDRooms?: boolean;
    /**
     * Separate No Service rooms if there are any.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    separateNSRRooms?: boolean;
    /**
     * The order of the rooms when assigning to the task sheets. Default order is by Room Number. If task sheets are to be ordered by Section or Floor, a new task sheet will be generated for Section/Floor.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    sheetOrderBy?: AutoGenerateTaskSheetsCriteriaTypeSheetOrderByEnum;
    /**
     * If ShowAllScheduledTasks is true then all housekeeping tasks scheduled for the day for the reservation will be shown, otherwise only the task with the highest priority will be shown.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    showAllScheduledTasks?: boolean;
    /**
     *
     * @type {TaskSheetGenerationStatusTypesType}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    status?: TaskSheetGenerationStatusTypesType;
    /**
     * Stay over first for the task sheet.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    stayOverFirst?: boolean;
    /**
     * Task Code for which the task sheets should be generated.
     * @type {Array<string>}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    taskCodes?: Array<string>;
    /**
     * Task Date for which the tasks are to be generated. Date cannot be earlier than business date.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    taskDate?: string;
    /**
     * Template code of the task sheet.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    templateCode?: string;
    /**
     * Short description of the task sheet.
     * @type {string}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    templateDescription?: string;
    /**
     * Return whether the sheet to be generated is of type turndown or not.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    turndown?: boolean;
    /**
     * Return whether the sheet to be generated is VIP only or not.
     * @type {boolean}
     * @memberof AutoGenerateTaskSheetsCriteriaType
     */
    vIPOnly?: boolean;
}
/**
 * @export
 */
export declare const AutoGenerateTaskSheetsCriteriaTypeSectionTypeToUseEnum: {
    readonly Day: "Day";
    readonly Evening: "Evening";
};
export type AutoGenerateTaskSheetsCriteriaTypeSectionTypeToUseEnum = typeof AutoGenerateTaskSheetsCriteriaTypeSectionTypeToUseEnum[keyof typeof AutoGenerateTaskSheetsCriteriaTypeSectionTypeToUseEnum];
/**
 * @export
 */
export declare const AutoGenerateTaskSheetsCriteriaTypeSheetOrderByEnum: {
    readonly Room: "Room";
    readonly Floor: "Floor";
    readonly Section: "Section";
    readonly SectionGroups: "SectionGroups";
    readonly Building: "Building";
    readonly BuildingGroups: "BuildingGroups";
};
export type AutoGenerateTaskSheetsCriteriaTypeSheetOrderByEnum = typeof AutoGenerateTaskSheetsCriteriaTypeSheetOrderByEnum[keyof typeof AutoGenerateTaskSheetsCriteriaTypeSheetOrderByEnum];
/**
 * Check if a given object implements the AutoGenerateTaskSheetsCriteriaType interface.
 */
export declare function instanceOfAutoGenerateTaskSheetsCriteriaType(value: object): boolean;
export declare function AutoGenerateTaskSheetsCriteriaTypeFromJSON(json: any): AutoGenerateTaskSheetsCriteriaType;
export declare function AutoGenerateTaskSheetsCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutoGenerateTaskSheetsCriteriaType;
export declare function AutoGenerateTaskSheetsCriteriaTypeToJSON(value?: AutoGenerateTaskSheetsCriteriaType | null): any;
