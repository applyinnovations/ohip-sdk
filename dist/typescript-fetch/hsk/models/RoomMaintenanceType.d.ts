/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AssignedUserType } from './AssignedUserType';
import type { ImageResultType } from './ImageResultType';
import type { ResolveRoomMaintenanceType } from './ResolveRoomMaintenanceType';
import type { RoomType } from './RoomType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Base maintenance type
 * @export
 * @interface RoomMaintenanceType
 */
export interface RoomMaintenanceType {
    /**
     * Maintenance Code
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    maintenanceCode?: string;
    /**
     * Maintenance remarks
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    remarks?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof RoomMaintenanceType
     */
    maintenanceId?: UniqueIDType;
    /**
     *
     * @type {RoomType}
     * @memberof RoomMaintenanceType
     */
    roomInfo?: RoomType;
    /**
     *
     * @type {ResolveRoomMaintenanceType}
     * @memberof RoomMaintenanceType
     */
    resolveInfo?: ResolveRoomMaintenanceType;
    /**
     *
     * @type {AssignedUserType}
     * @memberof RoomMaintenanceType
     */
    assignedUserInfo?: AssignedUserType;
    /**
     * Collection of image results.
     * @type {Array<ImageResultType>}
     * @memberof RoomMaintenanceType
     */
    images?: Array<ImageResultType>;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    lastModifierId?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof RoomMaintenanceType
     */
    purgeDate?: string;
}
/**
 * Check if a given object implements the RoomMaintenanceType interface.
 */
export declare function instanceOfRoomMaintenanceType(value: object): boolean;
export declare function RoomMaintenanceTypeFromJSON(json: any): RoomMaintenanceType;
export declare function RoomMaintenanceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomMaintenanceType;
export declare function RoomMaintenanceTypeToJSON(value?: RoomMaintenanceType | null): any;
