/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { HousekeepingTaskCodeType } from './HousekeepingTaskCodeType';
import type { RoomType } from './RoomType';
/**
 * Type for moving rooms between two task sheets.
 * @export
 * @interface MoveTaskRoomsCriteriaType
 */
export interface MoveTaskRoomsCriteriaType {
    /**
     * The task sheet number from which the rooms are being moved.
     * @type {number}
     * @memberof MoveTaskRoomsCriteriaType
     */
    fromTaskSheetNumber?: number;
    /**
     * The property where the task sheets exist for which the rooms are being moved.
     * @type {string}
     * @memberof MoveTaskRoomsCriteriaType
     */
    hotelId?: string;
    /**
     * List of rooms which have to be moved from one task sheet to another.
     * @type {Array<RoomType>}
     * @memberof MoveTaskRoomsCriteriaType
     */
    rooms?: Array<RoomType>;
    /**
     * The task code for the task sheets, for which the rooms are being moved.
     * @type {Array<HousekeepingTaskCodeType>}
     * @memberof MoveTaskRoomsCriteriaType
     */
    taskCode?: Array<HousekeepingTaskCodeType>;
    /**
     * The date of the task sheet.
     * @type {Date}
     * @memberof MoveTaskRoomsCriteriaType
     */
    taskDate?: Date;
    /**
     * The task sheet number to which the rooms should be moved.
     * @type {number}
     * @memberof MoveTaskRoomsCriteriaType
     */
    toTaskSheetNumber?: number;
}
/**
 * Check if a given object implements the MoveTaskRoomsCriteriaType interface.
 */
export declare function instanceOfMoveTaskRoomsCriteriaType(value: object): boolean;
export declare function MoveTaskRoomsCriteriaTypeFromJSON(json: any): MoveTaskRoomsCriteriaType;
export declare function MoveTaskRoomsCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoveTaskRoomsCriteriaType;
export declare function MoveTaskRoomsCriteriaTypeToJSON(value?: MoveTaskRoomsCriteriaType | null): any;
