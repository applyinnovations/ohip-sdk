"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomRoomTypeToJSON = exports.RoomRoomTypeFromJSONTyped = exports.RoomRoomTypeFromJSON = exports.instanceOfRoomRoomType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const RatePlanRatingType_1 = require("./RatePlanRatingType");
const RoomFeatureType_1 = require("./RoomFeatureType");
const RoomTypeShortInfoType_1 = require("./RoomTypeShortInfoType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the RoomRoomType interface.
 */
function instanceOfRoomRoomType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomRoomType = instanceOfRoomRoomType;
function RoomRoomTypeFromJSON(json) {
    return RoomRoomTypeFromJSONTyped(json, false);
}
exports.RoomRoomTypeFromJSON = RoomRoomTypeFromJSON;
function RoomRoomTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : (0, RoomTypeShortInfoType_1.RoomTypeShortInfoTypeFromJSON)(json['roomType']),
        'floor': !(0, runtime_1.exists)(json, 'floor') ? undefined : json['floor'],
        'floorDescription': !(0, runtime_1.exists)(json, 'floorDescription') ? undefined : json['floorDescription'],
        'roomFeatures': !(0, runtime_1.exists)(json, 'roomFeatures') ? undefined : (json['roomFeatures'].map(RoomFeatureType_1.RoomFeatureTypeFromJSON)),
        'roomDescription': !(0, runtime_1.exists)(json, 'roomDescription') ? undefined : json['roomDescription'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'smokingPreference': !(0, runtime_1.exists)(json, 'smokingPreference') ? undefined : json['smokingPreference'],
        'smokingPreferenceDescription': !(0, runtime_1.exists)(json, 'smokingPreferenceDescription') ? undefined : json['smokingPreferenceDescription'],
        'building': !(0, runtime_1.exists)(json, 'building') ? undefined : json['building'],
        'roomAssignmentRating': !(0, runtime_1.exists)(json, 'roomAssignmentRating') ? undefined : (0, RatePlanRatingType_1.RatePlanRatingTypeFromJSON)(json['roomAssignmentRating']),
        'isAccessible': !(0, runtime_1.exists)(json, 'isAccessible') ? undefined : json['isAccessible'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'meetingRoom': !(0, runtime_1.exists)(json, 'meetingRoom') ? undefined : json['meetingRoom'],
        'roomCondition': !(0, runtime_1.exists)(json, 'roomCondition') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['roomCondition']),
    };
}
exports.RoomRoomTypeFromJSONTyped = RoomRoomTypeFromJSONTyped;
function RoomRoomTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomType': (0, RoomTypeShortInfoType_1.RoomTypeShortInfoTypeToJSON)(value.roomType),
        'floor': value.floor,
        'floorDescription': value.floorDescription,
        'roomFeatures': value.roomFeatures === undefined ? undefined : (value.roomFeatures.map(RoomFeatureType_1.RoomFeatureTypeToJSON)),
        'roomDescription': value.roomDescription,
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'smokingPreference': value.smokingPreference,
        'smokingPreferenceDescription': value.smokingPreferenceDescription,
        'building': value.building,
        'roomAssignmentRating': (0, RatePlanRatingType_1.RatePlanRatingTypeToJSON)(value.roomAssignmentRating),
        'isAccessible': value.isAccessible,
        'roomId': value.roomId,
        'meetingRoom': value.meetingRoom,
        'roomCondition': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.roomCondition),
    };
}
exports.RoomRoomTypeToJSON = RoomRoomTypeToJSON;
