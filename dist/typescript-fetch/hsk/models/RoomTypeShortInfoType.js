"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomTypeShortInfoTypeToJSON = exports.RoomTypeShortInfoTypeFromJSONTyped = exports.RoomTypeShortInfoTypeFromJSON = exports.instanceOfRoomTypeShortInfoType = void 0;
const runtime_1 = require("../runtime");
const RoomFeatureType_1 = require("./RoomFeatureType");
/**
 * Check if a given object implements the RoomTypeShortInfoType interface.
 */
function instanceOfRoomTypeShortInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomTypeShortInfoType = instanceOfRoomTypeShortInfoType;
function RoomTypeShortInfoTypeFromJSON(json) {
    return RoomTypeShortInfoTypeFromJSONTyped(json, false);
}
exports.RoomTypeShortInfoTypeFromJSON = RoomTypeShortInfoTypeFromJSON;
function RoomTypeShortInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'pseudoRoom': !(0, runtime_1.exists)(json, 'pseudoRoom') ? undefined : json['pseudoRoom'],
        'isSuiteRoom': !(0, runtime_1.exists)(json, 'isSuiteRoom') ? undefined : json['isSuiteRoom'],
        'roomClass': !(0, runtime_1.exists)(json, 'roomClass') ? undefined : json['roomClass'],
        'shortDescription': !(0, runtime_1.exists)(json, 'shortDescription') ? undefined : json['shortDescription'],
        'houseKeeping': !(0, runtime_1.exists)(json, 'houseKeeping') ? undefined : json['houseKeeping'],
        'smokingPreference': !(0, runtime_1.exists)(json, 'smokingPreference') ? undefined : json['smokingPreference'],
        'minimumOccupancy': !(0, runtime_1.exists)(json, 'minimumOccupancy') ? undefined : json['minimumOccupancy'],
        'maximumOccupancy': !(0, runtime_1.exists)(json, 'maximumOccupancy') ? undefined : json['maximumOccupancy'],
        'roomFeatures': !(0, runtime_1.exists)(json, 'roomFeatures') ? undefined : (json['roomFeatures'].map(RoomFeatureType_1.RoomFeatureTypeFromJSON)),
        'isAccessible': !(0, runtime_1.exists)(json, 'isAccessible') ? undefined : json['isAccessible'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'meetingRoom': !(0, runtime_1.exists)(json, 'meetingRoom') ? undefined : json['meetingRoom'],
    };
}
exports.RoomTypeShortInfoTypeFromJSONTyped = RoomTypeShortInfoTypeFromJSONTyped;
function RoomTypeShortInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'pseudoRoom': value.pseudoRoom,
        'isSuiteRoom': value.isSuiteRoom,
        'roomClass': value.roomClass,
        'shortDescription': value.shortDescription,
        'houseKeeping': value.houseKeeping,
        'smokingPreference': value.smokingPreference,
        'minimumOccupancy': value.minimumOccupancy,
        'maximumOccupancy': value.maximumOccupancy,
        'roomFeatures': value.roomFeatures === undefined ? undefined : (value.roomFeatures.map(RoomFeatureType_1.RoomFeatureTypeToJSON)),
        'isAccessible': value.isAccessible,
        'roomType': value.roomType,
        'meetingRoom': value.meetingRoom,
    };
}
exports.RoomTypeShortInfoTypeToJSON = RoomTypeShortInfoTypeToJSON;
