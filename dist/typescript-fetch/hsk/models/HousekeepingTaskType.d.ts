/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AppUserOnBreakType } from './AppUserOnBreakType';
import type { DepartureTaskInfoType } from './DepartureTaskInfoType';
import type { FacilityCodeType } from './FacilityCodeType';
import type { HousekeepingCreditsType } from './HousekeepingCreditsType';
import type { HousekeepingTaskCodeType } from './HousekeepingTaskCodeType';
import type { HousekeepingTaskTypeAttendant } from './HousekeepingTaskTypeAttendant';
import type { HousekeepingTaskTypeRoomCountsInner } from './HousekeepingTaskTypeRoomCountsInner';
import type { HousekeepingTaskTypeRoomsInner } from './HousekeepingTaskTypeRoomsInner';
import type { ServicingAttendantStatusType } from './ServicingAttendantStatusType';
import type { TaskSheetType } from './TaskSheetType';
/**
 *
 * @export
 * @interface HousekeepingTaskType
 */
export interface HousekeepingTaskType {
    /**
     * The Task Code(s) used for this Task Sheet.
     * @type {Array<HousekeepingTaskCodeType>}
     * @memberof HousekeepingTaskType
     */
    taskCodes?: Array<HousekeepingTaskCodeType>;
    /**
     *
     * @type {DepartureTaskInfoType}
     * @memberof HousekeepingTaskType
     */
    departureTaskInfo?: DepartureTaskInfoType;
    /**
     * List of the facility codes.
     * @type {Array<FacilityCodeType>}
     * @memberof HousekeepingTaskType
     */
    totalSupplies?: Array<FacilityCodeType>;
    /**
     * Credits information for this Task Sheet. This could have the Total Credit information and the Travelling credits if required.
     * @type {Array<HousekeepingCreditsType>}
     * @memberof HousekeepingTaskType
     */
    credits?: Array<HousekeepingCreditsType>;
    /**
     *
     * @type {HousekeepingTaskTypeAttendant}
     * @memberof HousekeepingTaskType
     */
    attendant?: HousekeepingTaskTypeAttendant;
    /**
     *
     * @type {AppUserOnBreakType}
     * @memberof HousekeepingTaskType
     */
    appUserOnBreak?: AppUserOnBreakType;
    /**
     * Details of the room which is part of the Task Sheet. The room details will be returned when the request for IncludeTaskSheetDetails(flag in the search type) is true.
     * @type {Array<HousekeepingTaskTypeRoomsInner>}
     * @memberof HousekeepingTaskType
     */
    rooms?: Array<HousekeepingTaskTypeRoomsInner>;
    /**
     *
     * @type {Array<HousekeepingTaskTypeRoomCountsInner>}
     * @memberof HousekeepingTaskType
     */
    roomCounts?: Array<HousekeepingTaskTypeRoomCountsInner>;
    /**
     * The total number of linen changes included in this task sheet.
     * @type {number}
     * @memberof HousekeepingTaskType
     */
    linenChangeCount?: number;
    /**
     * The Task Sheet number. This will be a sequential number for the task sheets generated for a particular Task Code.
     * @type {number}
     * @memberof HousekeepingTaskType
     */
    sheetNumber?: number;
    /**
     * The date for which the task sheet applies.
     * @type {string}
     * @memberof HousekeepingTaskType
     */
    date?: string;
    /**
     * Indicates the task sheet applies to Next Business Day.
     * @type {boolean}
     * @memberof HousekeepingTaskType
     */
    nextDay?: boolean;
    /**
     * Indicates if the task sheet was automatically generated.
     * @type {boolean}
     * @memberof HousekeepingTaskType
     */
    autoGenerated?: boolean;
    /**
     * Indicates if the task sheet was locked or not.
     * @type {boolean}
     * @memberof HousekeepingTaskType
     */
    lockTaskSheet?: boolean;
    /**
     * The sequence no of the task sheet.
     * @type {number}
     * @memberof HousekeepingTaskType
     */
    taskSeqNo?: number;
    /**
     * The total number of rooms included in this task sheet.
     * @type {number}
     * @memberof HousekeepingTaskType
     */
    roomCount?: number;
    /**
     * Task Sheet level instructions. These instructions are applicable to this task sheet only.
     * @type {string}
     * @memberof HousekeepingTaskType
     */
    taskInstructions?: string;
    /**
     * Date the task was completed.
     * @type {string}
     * @memberof HousekeepingTaskType
     */
    completedDate?: string;
    /**
     *
     * @type {string}
     * @memberof HousekeepingTaskType
     */
    hotelId?: string;
    /**
     *
     * @type {TaskSheetType}
     * @memberof HousekeepingTaskType
     */
    sheetType?: TaskSheetType;
    /**
     *
     * @type {ServicingAttendantStatusType}
     * @memberof HousekeepingTaskType
     */
    attendantStatus?: ServicingAttendantStatusType;
    /**
     * Break out id of the task sheet.
     * @type {number}
     * @memberof HousekeepingTaskType
     */
    breakOutId?: number;
}
/**
 * Check if a given object implements the HousekeepingTaskType interface.
 */
export declare function instanceOfHousekeepingTaskType(value: object): boolean;
export declare function HousekeepingTaskTypeFromJSON(json: any): HousekeepingTaskType;
export declare function HousekeepingTaskTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HousekeepingTaskType;
export declare function HousekeepingTaskTypeToJSON(value?: HousekeepingTaskType | null): any;
