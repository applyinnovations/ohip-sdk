/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HousekeepingTaskTypeRoomCountsInner
 */
export interface HousekeepingTaskTypeRoomCountsInner {
    /**
     * 
     * @type {number}
     * @memberof HousekeepingTaskTypeRoomCountsInner
     */
    totalCount?: number;
    /**
     * Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.
     * @type {string}
     * @memberof HousekeepingTaskTypeRoomCountsInner
     */
    value?: HousekeepingTaskTypeRoomCountsInnerValueEnum;
}


/**
 * @export
 */
export const HousekeepingTaskTypeRoomCountsInnerValueEnum = {
    Clean: 'Clean',
    Dirty: 'Dirty',
    Pickup: 'Pickup',
    Inspected: 'Inspected',
    OutOfOrder: 'OutOfOrder',
    OutOfService: 'OutOfService'
} as const;
export type HousekeepingTaskTypeRoomCountsInnerValueEnum = typeof HousekeepingTaskTypeRoomCountsInnerValueEnum[keyof typeof HousekeepingTaskTypeRoomCountsInnerValueEnum];


/**
 * Check if a given object implements the HousekeepingTaskTypeRoomCountsInner interface.
 */
export function instanceOfHousekeepingTaskTypeRoomCountsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HousekeepingTaskTypeRoomCountsInnerFromJSON(json: any): HousekeepingTaskTypeRoomCountsInner {
    return HousekeepingTaskTypeRoomCountsInnerFromJSONTyped(json, false);
}

export function HousekeepingTaskTypeRoomCountsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): HousekeepingTaskTypeRoomCountsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function HousekeepingTaskTypeRoomCountsInnerToJSON(value?: HousekeepingTaskTypeRoomCountsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalCount': value.totalCount,
        'value': value.value,
    };
}

