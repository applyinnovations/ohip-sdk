/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ApplicationUserType } from './ApplicationUserType';
import type { HousekeepingSectionType } from './HousekeepingSectionType';
import type { ServicingAttendantStatusType } from './ServicingAttendantStatusType';
/**
 * The Attendant Name and ID of the attendant servicing the room.
 * @export
 * @interface CurrentServicingAttendantType
 */
export interface CurrentServicingAttendantType {
    /**
     *
     * @type {HousekeepingSectionType}
     * @memberof CurrentServicingAttendantType
     */
    section?: HousekeepingSectionType;
    /**
     * The Floor which is assigned to the attendant.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    floor?: string;
    /**
     * Attendant's unique identifier.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    attendantId?: string;
    /**
     * Attendant's name.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    attendantName?: string;
    /**
     * Property where the attendant belongs.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    hotelId?: string;
    /**
     * Indicates if the Attendant is active.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    activeFlag?: string;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    sunday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    monday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    tuesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    wednesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    thursday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    friday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CurrentServicingAttendantType
     */
    saturday?: boolean;
    /**
     *
     * @type {ApplicationUserType}
     * @memberof CurrentServicingAttendantType
     */
    appUser?: ApplicationUserType;
    /**
     * The start time of the service.
     * @type {string}
     * @memberof CurrentServicingAttendantType
     */
    startTime?: string;
    /**
     *
     * @type {ServicingAttendantStatusType}
     * @memberof CurrentServicingAttendantType
     */
    status?: ServicingAttendantStatusType;
}
/**
 * Check if a given object implements the CurrentServicingAttendantType interface.
 */
export declare function instanceOfCurrentServicingAttendantType(value: object): boolean;
export declare function CurrentServicingAttendantTypeFromJSON(json: any): CurrentServicingAttendantType;
export declare function CurrentServicingAttendantTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentServicingAttendantType;
export declare function CurrentServicingAttendantTypeToJSON(value?: CurrentServicingAttendantType | null): any;
