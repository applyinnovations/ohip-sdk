"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskSheetToLockToJSON = exports.TaskSheetToLockFromJSONTyped = exports.TaskSheetToLockFromJSON = exports.instanceOfTaskSheetToLock = void 0;
const runtime_1 = require("../runtime");
const InstanceLink_1 = require("./InstanceLink");
const TaskSheetLockCriteriaType_1 = require("./TaskSheetLockCriteriaType");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the TaskSheetToLock interface.
 */
function instanceOfTaskSheetToLock(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTaskSheetToLock = instanceOfTaskSheetToLock;
function TaskSheetToLockFromJSON(json) {
    return TaskSheetToLockFromJSONTyped(json, false);
}
exports.TaskSheetToLockFromJSON = TaskSheetToLockFromJSON;
function TaskSheetToLockFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'criteria': !(0, runtime_1.exists)(json, 'criteria') ? undefined : (0, TaskSheetLockCriteriaType_1.TaskSheetLockCriteriaTypeFromJSON)(json['criteria']),
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (json['links'].map(InstanceLink_1.InstanceLinkFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.TaskSheetToLockFromJSONTyped = TaskSheetToLockFromJSONTyped;
function TaskSheetToLockToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'criteria': (0, TaskSheetLockCriteriaType_1.TaskSheetLockCriteriaTypeToJSON)(value.criteria),
        'links': value.links === undefined ? undefined : (value.links.map(InstanceLink_1.InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.TaskSheetToLockToJSON = TaskSheetToLockToJSON;
