"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomMaintenanceTypeToJSON = exports.RoomMaintenanceTypeFromJSONTyped = exports.RoomMaintenanceTypeFromJSON = exports.instanceOfRoomMaintenanceType = void 0;
const runtime_1 = require("../runtime");
const AssignedUserType_1 = require("./AssignedUserType");
const ImageResultsType_1 = require("./ImageResultsType");
const ResolveRoomMaintenanceType_1 = require("./ResolveRoomMaintenanceType");
const RoomType_1 = require("./RoomType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the RoomMaintenanceType interface.
 */
function instanceOfRoomMaintenanceType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomMaintenanceType = instanceOfRoomMaintenanceType;
function RoomMaintenanceTypeFromJSON(json) {
    return RoomMaintenanceTypeFromJSONTyped(json, false);
}
exports.RoomMaintenanceTypeFromJSON = RoomMaintenanceTypeFromJSON;
function RoomMaintenanceTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'assignedUserInfo': !(0, runtime_1.exists)(json, 'assignedUserInfo') ? undefined : (0, AssignedUserType_1.AssignedUserTypeFromJSON)(json['assignedUserInfo']),
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'images': !(0, runtime_1.exists)(json, 'images') ? undefined : (0, ImageResultsType_1.ImageResultsTypeFromJSON)(json['images']),
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'maintenanceCode': !(0, runtime_1.exists)(json, 'maintenanceCode') ? undefined : json['maintenanceCode'],
        'maintenanceId': !(0, runtime_1.exists)(json, 'maintenanceId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['maintenanceId']),
        'purgeDate': !(0, runtime_1.exists)(json, 'purgeDate') ? undefined : (new Date(json['purgeDate'])),
        'remarks': !(0, runtime_1.exists)(json, 'remarks') ? undefined : json['remarks'],
        'resolveInfo': !(0, runtime_1.exists)(json, 'resolveInfo') ? undefined : (0, ResolveRoomMaintenanceType_1.ResolveRoomMaintenanceTypeFromJSON)(json['resolveInfo']),
        'roomInfo': !(0, runtime_1.exists)(json, 'roomInfo') ? undefined : (0, RoomType_1.RoomTypeFromJSON)(json['roomInfo']),
    };
}
exports.RoomMaintenanceTypeFromJSONTyped = RoomMaintenanceTypeFromJSONTyped;
function RoomMaintenanceTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'assignedUserInfo': (0, AssignedUserType_1.AssignedUserTypeToJSON)(value.assignedUserInfo),
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'images': (0, ImageResultsType_1.ImageResultsTypeToJSON)(value.images),
        'lastModifierId': value.lastModifierId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'maintenanceCode': value.maintenanceCode,
        'maintenanceId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.maintenanceId),
        'purgeDate': value.purgeDate === undefined ? undefined : (value.purgeDate.toISOString().substr(0, 10)),
        'remarks': value.remarks,
        'resolveInfo': (0, ResolveRoomMaintenanceType_1.ResolveRoomMaintenanceTypeToJSON)(value.resolveInfo),
        'roomInfo': (0, RoomType_1.RoomTypeToJSON)(value.roomInfo),
    };
}
exports.RoomMaintenanceTypeToJSON = RoomMaintenanceTypeToJSON;
