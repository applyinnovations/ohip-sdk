"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigUpsellRuleTypeToJSON = exports.ConfigUpsellRuleTypeFromJSONTyped = exports.ConfigUpsellRuleTypeFromJSON = exports.instanceOfConfigUpsellRuleType = void 0;
const runtime_1 = require("../runtime");
const ConfigOccupancyLevelType_1 = require("./ConfigOccupancyLevelType");
const FormulaType_1 = require("./FormulaType");
const RoundingRuleType_1 = require("./RoundingRuleType");
const TrxInfoType_1 = require("./TrxInfoType");
/**
 * Check if a given object implements the ConfigUpsellRuleType interface.
 */
function instanceOfConfigUpsellRuleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigUpsellRuleType = instanceOfConfigUpsellRuleType;
function ConfigUpsellRuleTypeFromJSON(json) {
    return ConfigUpsellRuleTypeFromJSONTyped(json, false);
}
exports.ConfigUpsellRuleTypeFromJSON = ConfigUpsellRuleTypeFromJSON;
function ConfigUpsellRuleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'upsellByRoomType': !(0, runtime_1.exists)(json, 'upsellByRoomType') ? undefined : json['upsellByRoomType'],
        'fromRoomTypeOrFromRoomClass': !(0, runtime_1.exists)(json, 'fromRoomTypeOrFromRoomClass') ? undefined : json['fromRoomTypeOrFromRoomClass'],
        'toRoomTypeOrToRoomClass': !(0, runtime_1.exists)(json, 'toRoomTypeOrToRoomClass') ? undefined : json['toRoomTypeOrToRoomClass'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'rateCodes': !(0, runtime_1.exists)(json, 'rateCodes') ? undefined : json['rateCodes'],
        'rateCategories': !(0, runtime_1.exists)(json, 'rateCategories') ? undefined : json['rateCategories'],
        'membershipTypes': !(0, runtime_1.exists)(json, 'membershipTypes') ? undefined : json['membershipTypes'],
        'channels': !(0, runtime_1.exists)(json, 'channels') ? undefined : json['channels'],
        'reservationTypes': !(0, runtime_1.exists)(json, 'reservationTypes') ? undefined : json['reservationTypes'],
        'marketCodes': !(0, runtime_1.exists)(json, 'marketCodes') ? undefined : json['marketCodes'],
        'upsellByOccupancyLevels': !(0, runtime_1.exists)(json, 'upsellByOccupancyLevels') ? undefined : json['upsellByOccupancyLevels'],
        'formula': !(0, runtime_1.exists)(json, 'formula') ? undefined : (0, FormulaType_1.FormulaTypeFromJSON)(json['formula']),
        'upsellAmount': !(0, runtime_1.exists)(json, 'upsellAmount') ? undefined : json['upsellAmount'],
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'roundingRule': !(0, runtime_1.exists)(json, 'roundingRule') ? undefined : (0, RoundingRuleType_1.RoundingRuleTypeFromJSON)(json['roundingRule']),
        'occupancyLevelsType': !(0, runtime_1.exists)(json, 'occupancyLevelsType') ? undefined : (json['occupancyLevelsType'].map(ConfigOccupancyLevelType_1.ConfigOccupancyLevelTypeFromJSON)),
        'daysInAdvance': !(0, runtime_1.exists)(json, 'daysInAdvance') ? undefined : json['daysInAdvance'],
        'useDefaultTrxCode': !(0, runtime_1.exists)(json, 'useDefaultTrxCode') ? undefined : json['useDefaultTrxCode'],
        'transactionCode': !(0, runtime_1.exists)(json, 'transactionCode') ? undefined : (0, TrxInfoType_1.TrxInfoTypeFromJSON)(json['transactionCode']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'upsellRuleCode': !(0, runtime_1.exists)(json, 'upsellRuleCode') ? undefined : json['upsellRuleCode'],
    };
}
exports.ConfigUpsellRuleTypeFromJSONTyped = ConfigUpsellRuleTypeFromJSONTyped;
function ConfigUpsellRuleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'upsellByRoomType': value.upsellByRoomType,
        'fromRoomTypeOrFromRoomClass': value.fromRoomTypeOrFromRoomClass,
        'toRoomTypeOrToRoomClass': value.toRoomTypeOrToRoomClass,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'rateCodes': value.rateCodes,
        'rateCategories': value.rateCategories,
        'membershipTypes': value.membershipTypes,
        'channels': value.channels,
        'reservationTypes': value.reservationTypes,
        'marketCodes': value.marketCodes,
        'upsellByOccupancyLevels': value.upsellByOccupancyLevels,
        'formula': (0, FormulaType_1.FormulaTypeToJSON)(value.formula),
        'upsellAmount': value.upsellAmount,
        'currencyCode': value.currencyCode,
        'roundingRule': (0, RoundingRuleType_1.RoundingRuleTypeToJSON)(value.roundingRule),
        'occupancyLevelsType': value.occupancyLevelsType === undefined ? undefined : (value.occupancyLevelsType.map(ConfigOccupancyLevelType_1.ConfigOccupancyLevelTypeToJSON)),
        'daysInAdvance': value.daysInAdvance,
        'useDefaultTrxCode': value.useDefaultTrxCode,
        'transactionCode': (0, TrxInfoType_1.TrxInfoTypeToJSON)(value.transactionCode),
        'hotelId': value.hotelId,
        'upsellRuleCode': value.upsellRuleCode,
    };
}
exports.ConfigUpsellRuleTypeToJSON = ConfigUpsellRuleTypeToJSON;
