"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigTestUpsellRuleSearchTypeToJSON = exports.ConfigTestUpsellRuleSearchTypeFromJSONTyped = exports.ConfigTestUpsellRuleSearchTypeFromJSON = exports.instanceOfConfigTestUpsellRuleSearchType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ConfigTestUpsellRuleSearchType interface.
 */
function instanceOfConfigTestUpsellRuleSearchType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigTestUpsellRuleSearchType = instanceOfConfigTestUpsellRuleSearchType;
function ConfigTestUpsellRuleSearchTypeFromJSON(json) {
    return ConfigTestUpsellRuleSearchTypeFromJSONTyped(json, false);
}
exports.ConfigTestUpsellRuleSearchTypeFromJSON = ConfigTestUpsellRuleSearchTypeFromJSON;
function ConfigTestUpsellRuleSearchTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'adults': !(0, runtime_1.exists)(json, 'adults') ? undefined : json['adults'],
        'arrivalDate': !(0, runtime_1.exists)(json, 'arrivalDate') ? undefined : json['arrivalDate'],
        'channel': !(0, runtime_1.exists)(json, 'channel') ? undefined : json['channel'],
        'children': !(0, runtime_1.exists)(json, 'children') ? undefined : json['children'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'marketCode': !(0, runtime_1.exists)(json, 'marketCode') ? undefined : json['marketCode'],
        'membershipLevel': !(0, runtime_1.exists)(json, 'membershipLevel') ? undefined : json['membershipLevel'],
        'membershipType': !(0, runtime_1.exists)(json, 'membershipType') ? undefined : json['membershipType'],
        'nights': !(0, runtime_1.exists)(json, 'nights') ? undefined : json['nights'],
        'numberOfRooms': !(0, runtime_1.exists)(json, 'numberOfRooms') ? undefined : json['numberOfRooms'],
        'occupancyLevelId': !(0, runtime_1.exists)(json, 'occupancyLevelId') ? undefined : json['occupancyLevelId'],
        'rateCode': !(0, runtime_1.exists)(json, 'rateCode') ? undefined : json['rateCode'],
        'reservationType': !(0, runtime_1.exists)(json, 'reservationType') ? undefined : json['reservationType'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
    };
}
exports.ConfigTestUpsellRuleSearchTypeFromJSONTyped = ConfigTestUpsellRuleSearchTypeFromJSONTyped;
function ConfigTestUpsellRuleSearchTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'adults': value.adults,
        'arrivalDate': value.arrivalDate,
        'channel': value.channel,
        'children': value.children,
        'hotelId': value.hotelId,
        'marketCode': value.marketCode,
        'membershipLevel': value.membershipLevel,
        'membershipType': value.membershipType,
        'nights': value.nights,
        'numberOfRooms': value.numberOfRooms,
        'occupancyLevelId': value.occupancyLevelId,
        'rateCode': value.rateCode,
        'reservationType': value.reservationType,
        'roomType': value.roomType,
    };
}
exports.ConfigTestUpsellRuleSearchTypeToJSON = ConfigTestUpsellRuleSearchTypeToJSON;
