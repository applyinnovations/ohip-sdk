/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MergeCodesType } from './MergeCodesType';
import type { ScriptLocationsType } from './ScriptLocationsType';
import type { ScriptTypeType } from './ScriptTypeType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * A Script associated to either Chain, CRO or Property and to a Language and/or Membership Type.
 * @export
 * @interface ScriptType
 */
export interface ScriptType {
    /**
     * Language identification.
     * @type {string}
     * @memberof ScriptType
     */
    language?: string;
    /**
     *
     * @type {ScriptLocationsType}
     * @memberof ScriptType
     */
    locations?: ScriptLocationsType;
    /**
     * Membership Type the script belonged to.
     * @type {string}
     * @memberof ScriptType
     */
    membershipType?: string;
    /**
     *
     * @type {MergeCodesType}
     * @memberof ScriptType
     */
    mergeCodes?: MergeCodesType;
    /**
     * Script.
     * @type {string}
     * @memberof ScriptType
     */
    script?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ScriptType
     */
    scriptId?: UniqueIDType;
    /**
     *
     * @type {ScriptTypeType}
     * @memberof ScriptType
     */
    type?: ScriptTypeType;
}
/**
 * Check if a given object implements the ScriptType interface.
 */
export declare function instanceOfScriptType(value: object): boolean;
export declare function ScriptTypeFromJSON(json: any): ScriptType;
export declare function ScriptTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptType;
export declare function ScriptTypeToJSON(value?: ScriptType | null): any;
