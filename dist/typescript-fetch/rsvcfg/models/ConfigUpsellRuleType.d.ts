/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ConfigOccupancyLevelType } from './ConfigOccupancyLevelType';
import type { FormulaType } from './FormulaType';
import type { RoundingRuleType } from './RoundingRuleType';
import type { TrxInfoType } from './TrxInfoType';
/**
 * This gives detailed information about an upsell rule.
 * @export
 * @interface ConfigUpsellRuleType
 */
export interface ConfigUpsellRuleType {
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    channels?: Array<string>;
    /**
     * The currency code used in the upsell rule.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    currencyCode?: string;
    /**
     * Specifies the number of days in advance of the reservation arrival date that a reservation can be upsold using this rule. So if this field is set to 10, then the reservation must be booked at least 10 days before the arrival date, in order to be eligible for the upsell.
     * @type {number}
     * @memberof ConfigUpsellRuleType
     */
    daysInAdvance?: number;
    /**
     * Description gives the description for the upsell rule.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    description?: string;
    /**
     * This represents the end date of the date range for which the upsell rule is valid.
     * @type {Date}
     * @memberof ConfigUpsellRuleType
     */
    endDate?: Date;
    /**
     *
     * @type {FormulaType}
     * @memberof ConfigUpsellRuleType
     */
    formula?: FormulaType;
    /**
     * The "from" room type or room class for the upsell rule. This is the original room type/room class category.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    fromRoomTypeOrFromRoomClass?: string;
    /**
     * Specifies the hotel code for which the upsell rule is defined.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    hotelId?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    marketCodes?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    membershipTypes?: Array<string>;
    /**
     * This type holds a collection of upsell amounts by occupancy levels.
     * @type {Array<ConfigOccupancyLevelType>}
     * @memberof ConfigUpsellRuleType
     */
    occupancyLevelsType?: Array<ConfigOccupancyLevelType>;
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    rateCategories?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    rateCodes?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ConfigUpsellRuleType
     */
    reservationTypes?: Array<string>;
    /**
     *
     * @type {RoundingRuleType}
     * @memberof ConfigUpsellRuleType
     */
    roundingRule?: RoundingRuleType;
    /**
     * This represents the begin date of the date range for which the upsell rule is valid.
     * @type {Date}
     * @memberof ConfigUpsellRuleType
     */
    startDate?: Date;
    /**
     * The "to" room type or room class for the upsell rule. This is the room type that the original room type/room class will be upsold to.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    toRoomTypeOrToRoomClass?: string;
    /**
     *
     * @type {TrxInfoType}
     * @memberof ConfigUpsellRuleType
     */
    transactionCode?: TrxInfoType;
    /**
     * Signifies the formula to apply to the rule. The formula selected is used to calculate the upsell amount that is offered.
     * @type {number}
     * @memberof ConfigUpsellRuleType
     */
    upsellAmount?: number;
    /**
     * Signifies whether upsell rule is by occupancy levels or by amount.
     * @type {boolean}
     * @memberof ConfigUpsellRuleType
     */
    upsellByOccupancyLevels?: boolean;
    /**
     * Signifies whether upsell rule involves upselling from room type to room type or from room class to room class.
     * @type {boolean}
     * @memberof ConfigUpsellRuleType
     */
    upsellByRoomType?: boolean;
    /**
     * Specifies the user defined code that identifies a upsell rule.
     * @type {string}
     * @memberof ConfigUpsellRuleType
     */
    upsellRuleCode?: string;
    /**
     * Signifies whether the default trx code defined for the property has to be used when posting upsell charges.
     * @type {boolean}
     * @memberof ConfigUpsellRuleType
     */
    useDefaultTrxCode?: boolean;
}
/**
 * Check if a given object implements the ConfigUpsellRuleType interface.
 */
export declare function instanceOfConfigUpsellRuleType(value: object): boolean;
export declare function ConfigUpsellRuleTypeFromJSON(json: any): ConfigUpsellRuleType;
export declare function ConfigUpsellRuleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigUpsellRuleType;
export declare function ConfigUpsellRuleTypeToJSON(value?: ConfigUpsellRuleType | null): any;
