"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TraceTextChangeTypeToJSON = exports.TraceTextChangeTypeFromJSONTyped = exports.TraceTextChangeTypeFromJSON = exports.instanceOfTraceTextChangeType = void 0;
const runtime_1 = require("../runtime");
const TraceTextType_1 = require("./TraceTextType");
/**
 * Check if a given object implements the TraceTextChangeType interface.
 */
function instanceOfTraceTextChangeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTraceTextChangeType = instanceOfTraceTextChangeType;
function TraceTextChangeTypeFromJSON(json) {
    return TraceTextChangeTypeFromJSONTyped(json, false);
}
exports.TraceTextChangeTypeFromJSON = TraceTextChangeTypeFromJSON;
function TraceTextChangeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'originalTraceText': !(0, runtime_1.exists)(json, 'originalTraceText') ? undefined : (0, TraceTextType_1.TraceTextTypeFromJSON)(json['originalTraceText']),
        'newTraceText': !(0, runtime_1.exists)(json, 'newTraceText') ? undefined : (0, TraceTextType_1.TraceTextTypeFromJSON)(json['newTraceText']),
    };
}
exports.TraceTextChangeTypeFromJSONTyped = TraceTextChangeTypeFromJSONTyped;
function TraceTextChangeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'originalTraceText': (0, TraceTextType_1.TraceTextTypeToJSON)(value.originalTraceText),
        'newTraceText': (0, TraceTextType_1.TraceTextTypeToJSON)(value.newTraceText),
    };
}
exports.TraceTextChangeTypeToJSON = TraceTextChangeTypeToJSON;
