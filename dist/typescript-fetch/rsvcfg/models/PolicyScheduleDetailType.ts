/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { PolicyApplicableCodesType } from './PolicyApplicableCodesType';
import {
    PolicyApplicableCodesTypeFromJSON,
    PolicyApplicableCodesTypeFromJSONTyped,
    PolicyApplicableCodesTypeToJSON,
} from './PolicyApplicableCodesType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * The Policy Schedule detail Type.
 * @export
 * @interface PolicyScheduleDetailType
 */
export interface PolicyScheduleDetailType {
    /**
     * 
     * @type {TimeSpanType}
     * @memberof PolicyScheduleDetailType
     */
    timeSpan?: TimeSpanType;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof PolicyScheduleDetailType
     */
    policy?: CodeDescriptionType;
    /**
     * 
     * @type {PolicyApplicableCodesType}
     * @memberof PolicyScheduleDetailType
     */
    applicableCodes?: PolicyApplicableCodesType;
    /**
     * Sequence for the schedule.
     * @type {number}
     * @memberof PolicyScheduleDetailType
     */
    sequence?: number;
    /**
     * override the schedule?
     * @type {boolean}
     * @memberof PolicyScheduleDetailType
     */
    override?: boolean;
    /**
     * schedule Inactive?
     * @type {boolean}
     * @memberof PolicyScheduleDetailType
     */
    inactive?: boolean;
}

/**
 * Check if a given object implements the PolicyScheduleDetailType interface.
 */
export function instanceOfPolicyScheduleDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PolicyScheduleDetailTypeFromJSON(json: any): PolicyScheduleDetailType {
    return PolicyScheduleDetailTypeFromJSONTyped(json, false);
}

export function PolicyScheduleDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyScheduleDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
        'policy': !exists(json, 'policy') ? undefined : CodeDescriptionTypeFromJSON(json['policy']),
        'applicableCodes': !exists(json, 'applicableCodes') ? undefined : PolicyApplicableCodesTypeFromJSON(json['applicableCodes']),
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'override': !exists(json, 'override') ? undefined : json['override'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
    };
}

export function PolicyScheduleDetailTypeToJSON(value?: PolicyScheduleDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
        'policy': CodeDescriptionTypeToJSON(value.policy),
        'applicableCodes': PolicyApplicableCodesTypeToJSON(value.applicableCodes),
        'sequence': value.sequence,
        'override': value.override,
        'inactive': value.inactive,
    };
}

