"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreCheckInTimeRuleTypesToJSON = exports.PreCheckInTimeRuleTypesFromJSONTyped = exports.PreCheckInTimeRuleTypesFromJSON = exports.instanceOfPreCheckInTimeRuleTypes = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the PreCheckInTimeRuleTypes interface.
 */
function instanceOfPreCheckInTimeRuleTypes(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPreCheckInTimeRuleTypes = instanceOfPreCheckInTimeRuleTypes;
function PreCheckInTimeRuleTypesFromJSON(json) {
    return PreCheckInTimeRuleTypesFromJSONTyped(json, false);
}
exports.PreCheckInTimeRuleTypesFromJSON = PreCheckInTimeRuleTypesFromJSON;
function PreCheckInTimeRuleTypesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'endTime': !(0, runtime_1.exists)(json, 'endTime') ? undefined : json['endTime'],
        'startTime': !(0, runtime_1.exists)(json, 'startTime') ? undefined : json['startTime'],
        'daysBeforeArrival': !(0, runtime_1.exists)(json, 'daysBeforeArrival') ? undefined : json['daysBeforeArrival'],
        'daysAfterBooking': !(0, runtime_1.exists)(json, 'daysAfterBooking') ? undefined : json['daysAfterBooking'],
        'hoursPriorToCheckIn': !(0, runtime_1.exists)(json, 'hoursPriorToCheckIn') ? undefined : json['hoursPriorToCheckIn'],
        'hoursPostCheckIn': !(0, runtime_1.exists)(json, 'hoursPostCheckIn') ? undefined : json['hoursPostCheckIn'],
        'absoluteFlag': !(0, runtime_1.exists)(json, 'absoluteFlag') ? undefined : json['absoluteFlag'],
    };
}
exports.PreCheckInTimeRuleTypesFromJSONTyped = PreCheckInTimeRuleTypesFromJSONTyped;
function PreCheckInTimeRuleTypesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'endTime': value.endTime,
        'startTime': value.startTime,
        'daysBeforeArrival': value.daysBeforeArrival,
        'daysAfterBooking': value.daysAfterBooking,
        'hoursPriorToCheckIn': value.hoursPriorToCheckIn,
        'hoursPostCheckIn': value.hoursPostCheckIn,
        'absoluteFlag': value.absoluteFlag,
    };
}
exports.PreCheckInTimeRuleTypesToJSON = PreCheckInTimeRuleTypesToJSON;
