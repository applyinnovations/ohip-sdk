"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalAlertTypeToJSON = exports.GlobalAlertTypeFromJSONTyped = exports.GlobalAlertTypeFromJSON = exports.instanceOfGlobalAlertType = void 0;
const runtime_1 = require("../runtime");
const ConditionGroupType_1 = require("./ConditionGroupType");
const NotificationType_1 = require("./NotificationType");
/**
 * Check if a given object implements the GlobalAlertType interface.
 */
function instanceOfGlobalAlertType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfGlobalAlertType = instanceOfGlobalAlertType;
function GlobalAlertTypeFromJSON(json) {
    return GlobalAlertTypeFromJSONTyped(json, false);
}
exports.GlobalAlertTypeFromJSON = GlobalAlertTypeFromJSON;
function GlobalAlertTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'alertId': !(0, runtime_1.exists)(json, 'alertId') ? undefined : json['alertId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'alertCode': !(0, runtime_1.exists)(json, 'alertCode') ? undefined : json['alertCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'area': !(0, runtime_1.exists)(json, 'area') ? undefined : json['area'],
        'queryId': !(0, runtime_1.exists)(json, 'queryId') ? undefined : json['queryId'],
        'notifications': !(0, runtime_1.exists)(json, 'notifications') ? undefined : (0, NotificationType_1.NotificationTypeFromJSON)(json['notifications']),
        'conditions': !(0, runtime_1.exists)(json, 'conditions') ? undefined : (0, ConditionGroupType_1.ConditionGroupTypeFromJSON)(json['conditions']),
        'welcomeOffer': !(0, runtime_1.exists)(json, 'welcomeOffer') ? undefined : json['welcomeOffer'],
        'stopCheckInCheckOut': !(0, runtime_1.exists)(json, 'stopCheckInCheckOut') ? undefined : json['stopCheckInCheckOut'],
    };
}
exports.GlobalAlertTypeFromJSONTyped = GlobalAlertTypeFromJSONTyped;
function GlobalAlertTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'alertId': value.alertId,
        'hotelId': value.hotelId,
        'alertCode': value.alertCode,
        'description': value.description,
        'area': value.area,
        'queryId': value.queryId,
        'notifications': (0, NotificationType_1.NotificationTypeToJSON)(value.notifications),
        'conditions': (0, ConditionGroupType_1.ConditionGroupTypeToJSON)(value.conditions),
        'welcomeOffer': value.welcomeOffer,
        'stopCheckInCheckOut': value.stopCheckInCheckOut,
    };
}
exports.GlobalAlertTypeToJSON = GlobalAlertTypeToJSON;
