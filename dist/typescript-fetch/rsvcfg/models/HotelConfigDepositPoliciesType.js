"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelConfigDepositPoliciesTypeToJSON = exports.HotelConfigDepositPoliciesTypeFromJSONTyped = exports.HotelConfigDepositPoliciesTypeFromJSON = exports.instanceOfHotelConfigDepositPoliciesType = void 0;
const runtime_1 = require("../runtime");
const ConfigDepositPolicyType_1 = require("./ConfigDepositPolicyType");
/**
 * Check if a given object implements the HotelConfigDepositPoliciesType interface.
 */
function instanceOfHotelConfigDepositPoliciesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelConfigDepositPoliciesType = instanceOfHotelConfigDepositPoliciesType;
function HotelConfigDepositPoliciesTypeFromJSON(json) {
    return HotelConfigDepositPoliciesTypeFromJSONTyped(json, false);
}
exports.HotelConfigDepositPoliciesTypeFromJSON = HotelConfigDepositPoliciesTypeFromJSON;
function HotelConfigDepositPoliciesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'depositPolicy': !(0, runtime_1.exists)(json, 'depositPolicy') ? undefined : (json['depositPolicy'].map(ConfigDepositPolicyType_1.ConfigDepositPolicyTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.HotelConfigDepositPoliciesTypeFromJSONTyped = HotelConfigDepositPoliciesTypeFromJSONTyped;
function HotelConfigDepositPoliciesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'depositPolicy': value.depositPolicy === undefined ? undefined : (value.depositPolicy.map(ConfigDepositPolicyType_1.ConfigDepositPolicyTypeToJSON)),
        'hotelId': value.hotelId,
    };
}
exports.HotelConfigDepositPoliciesTypeToJSON = HotelConfigDepositPoliciesTypeToJSON;
