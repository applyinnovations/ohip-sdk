"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyScheduleTypeToJSON = exports.CopyScheduleTypeFromJSONTyped = exports.CopyScheduleTypeFromJSON = exports.instanceOfCopyScheduleType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CopyScheduleType interface.
 */
function instanceOfCopyScheduleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyScheduleType = instanceOfCopyScheduleType;
function CopyScheduleTypeFromJSON(json) {
    return CopyScheduleTypeFromJSONTyped(json, false);
}
exports.CopyScheduleTypeFromJSON = CopyScheduleTypeFromJSON;
function CopyScheduleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'scheduleId': !(0, runtime_1.exists)(json, 'scheduleId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['scheduleId']),
        'targetHotelCodes': !(0, runtime_1.exists)(json, 'targetHotelCodes') ? undefined : json['targetHotelCodes'],
    };
}
exports.CopyScheduleTypeFromJSONTyped = CopyScheduleTypeFromJSONTyped;
function CopyScheduleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'scheduleId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.scheduleId),
        'targetHotelCodes': value.targetHotelCodes,
    };
}
exports.CopyScheduleTypeToJSON = CopyScheduleTypeToJSON;
