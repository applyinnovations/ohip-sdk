"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyScheduleDetailTypeToJSON = exports.PolicyScheduleDetailTypeFromJSONTyped = exports.PolicyScheduleDetailTypeFromJSON = exports.instanceOfPolicyScheduleDetailType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const PolicyApplicableCodesType_1 = require("./PolicyApplicableCodesType");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the PolicyScheduleDetailType interface.
 */
function instanceOfPolicyScheduleDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPolicyScheduleDetailType = instanceOfPolicyScheduleDetailType;
function PolicyScheduleDetailTypeFromJSON(json) {
    return PolicyScheduleDetailTypeFromJSONTyped(json, false);
}
exports.PolicyScheduleDetailTypeFromJSON = PolicyScheduleDetailTypeFromJSON;
function PolicyScheduleDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
        'policy': !(0, runtime_1.exists)(json, 'policy') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['policy']),
        'applicableCodes': !(0, runtime_1.exists)(json, 'applicableCodes') ? undefined : (0, PolicyApplicableCodesType_1.PolicyApplicableCodesTypeFromJSON)(json['applicableCodes']),
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'override': !(0, runtime_1.exists)(json, 'override') ? undefined : json['override'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
    };
}
exports.PolicyScheduleDetailTypeFromJSONTyped = PolicyScheduleDetailTypeFromJSONTyped;
function PolicyScheduleDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
        'policy': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.policy),
        'applicableCodes': (0, PolicyApplicableCodesType_1.PolicyApplicableCodesTypeToJSON)(value.applicableCodes),
        'sequence': value.sequence,
        'override': value.override,
        'inactive': value.inactive,
    };
}
exports.PolicyScheduleDetailTypeToJSON = PolicyScheduleDetailTypeToJSON;
