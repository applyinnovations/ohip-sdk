"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TraceTextTypeToJSON = exports.TraceTextTypeFromJSONTyped = exports.TraceTextTypeFromJSON = exports.instanceOfTraceTextType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the TraceTextType interface.
 */
function instanceOfTraceTextType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTraceTextType = instanceOfTraceTextType;
function TraceTextTypeFromJSON(json) {
    return TraceTextTypeFromJSONTyped(json, false);
}
exports.TraceTextTypeFromJSON = TraceTextTypeFromJSON;
function TraceTextTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'canDelete': !(0, runtime_1.exists)(json, 'canDelete') ? undefined : json['canDelete'],
        'departmentCode': !(0, runtime_1.exists)(json, 'departmentCode') ? undefined : json['departmentCode'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'traceText': !(0, runtime_1.exists)(json, 'traceText') ? undefined : json['traceText'],
    };
}
exports.TraceTextTypeFromJSONTyped = TraceTextTypeFromJSONTyped;
function TraceTextTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'canDelete': value.canDelete,
        'departmentCode': value.departmentCode,
        'displaySequence': value.displaySequence,
        'hotelId': value.hotelId,
        'traceText': value.traceText,
    };
}
exports.TraceTextTypeToJSON = TraceTextTypeToJSON;
