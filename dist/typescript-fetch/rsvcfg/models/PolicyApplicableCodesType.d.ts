/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UniqueIDType } from './UniqueIDType';
/**
 * The object contains usage of the Policy Schedule detail Type.
 * @export
 * @interface PolicyApplicableCodesType
 */
export interface PolicyApplicableCodesType {
    /**
     * Schedule is used by this Block code.
     * @type {string}
     * @memberof PolicyApplicableCodesType
     */
    blockCode?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof PolicyApplicableCodesType
     */
    blockIds?: Array<UniqueIDType>;
    /**
     *
     * @type {Array<string>}
     * @memberof PolicyApplicableCodesType
     */
    creditRatings?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof PolicyApplicableCodesType
     */
    guaranteeCodes?: Array<string>;
    /**
     * Schedule is used by this Hotel code.
     * @type {string}
     * @memberof PolicyApplicableCodesType
     */
    hotelId?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PolicyApplicableCodesType
     */
    ratePlanCodes?: Array<string>;
    /**
     * Schedule is used by this Season Code.
     * @type {string}
     * @memberof PolicyApplicableCodesType
     */
    seasonCode?: string;
}
/**
 * Check if a given object implements the PolicyApplicableCodesType interface.
 */
export declare function instanceOfPolicyApplicableCodesType(value: object): boolean;
export declare function PolicyApplicableCodesTypeFromJSON(json: any): PolicyApplicableCodesType;
export declare function PolicyApplicableCodesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyApplicableCodesType;
export declare function PolicyApplicableCodesTypeToJSON(value?: PolicyApplicableCodesType | null): any;
