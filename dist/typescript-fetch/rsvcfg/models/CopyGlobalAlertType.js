"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyGlobalAlertTypeToJSON = exports.CopyGlobalAlertTypeFromJSONTyped = exports.CopyGlobalAlertTypeFromJSON = exports.instanceOfCopyGlobalAlertType = void 0;
const runtime_1 = require("../runtime");
const CodeListType_1 = require("./CodeListType");
const UniqueIDListType_1 = require("./UniqueIDListType");
/**
 * Check if a given object implements the CopyGlobalAlertType interface.
 */
function instanceOfCopyGlobalAlertType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyGlobalAlertType = instanceOfCopyGlobalAlertType;
function CopyGlobalAlertTypeFromJSON(json) {
    return CopyGlobalAlertTypeFromJSONTyped(json, false);
}
exports.CopyGlobalAlertTypeFromJSON = CopyGlobalAlertTypeFromJSON;
function CopyGlobalAlertTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'resvAlertIds': !(0, runtime_1.exists)(json, 'resvAlertIds') ? undefined : (0, UniqueIDListType_1.UniqueIDListTypeFromJSON)(json['resvAlertIds']),
        'targetHotelCodes': !(0, runtime_1.exists)(json, 'targetHotelCodes') ? undefined : (0, CodeListType_1.CodeListTypeFromJSON)(json['targetHotelCodes']),
    };
}
exports.CopyGlobalAlertTypeFromJSONTyped = CopyGlobalAlertTypeFromJSONTyped;
function CopyGlobalAlertTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'resvAlertIds': (0, UniqueIDListType_1.UniqueIDListTypeToJSON)(value.resvAlertIds),
        'targetHotelCodes': (0, CodeListType_1.CodeListTypeToJSON)(value.targetHotelCodes),
    };
}
exports.CopyGlobalAlertTypeToJSON = CopyGlobalAlertTypeToJSON;
