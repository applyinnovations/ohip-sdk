"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReservationColorTypeToJSON = exports.ReservationColorTypeFromJSONTyped = exports.ReservationColorTypeFromJSON = exports.instanceOfReservationColorType = void 0;
const runtime_1 = require("../runtime");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the ReservationColorType interface.
 */
function instanceOfReservationColorType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReservationColorType = instanceOfReservationColorType;
function ReservationColorTypeFromJSON(json) {
    return ReservationColorTypeFromJSONTyped(json, false);
}
exports.ReservationColorTypeFromJSON = ReservationColorTypeFromJSON;
function ReservationColorTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'colorCode': !(0, runtime_1.exists)(json, 'colorCode') ? undefined : json['colorCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
    };
}
exports.ReservationColorTypeFromJSONTyped = ReservationColorTypeFromJSONTyped;
function ReservationColorTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'colorCode': value.colorCode,
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'displaySequence': value.displaySequence,
        'inactive': value.inactive,
    };
}
exports.ReservationColorTypeToJSON = ReservationColorTypeToJSON;
