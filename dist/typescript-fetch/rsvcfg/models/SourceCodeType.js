"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SourceCodeTypeToJSON = exports.SourceCodeTypeFromJSONTyped = exports.SourceCodeTypeFromJSON = exports.instanceOfSourceCodeType = void 0;
const runtime_1 = require("../runtime");
const ManagedByOptions_1 = require("./ManagedByOptions");
const TranslationTextType50_1 = require("./TranslationTextType50");
/**
 * Check if a given object implements the SourceCodeType interface.
 */
function instanceOfSourceCodeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSourceCodeType = instanceOfSourceCodeType;
function SourceCodeTypeFromJSON(json) {
    return SourceCodeTypeFromJSONTyped(json, false);
}
exports.SourceCodeTypeFromJSON = SourceCodeTypeFromJSON;
function SourceCodeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType50_1.TranslationTextType50FromJSON)(json['description']),
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'groupCode': !(0, runtime_1.exists)(json, 'groupCode') ? undefined : json['groupCode'],
        'central': !(0, runtime_1.exists)(json, 'central') ? undefined : json['central'],
        'managedBy': !(0, runtime_1.exists)(json, 'managedBy') ? undefined : (0, ManagedByOptions_1.ManagedByOptionsFromJSON)(json['managedBy']),
    };
}
exports.SourceCodeTypeFromJSONTyped = SourceCodeTypeFromJSONTyped;
function SourceCodeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': (0, TranslationTextType50_1.TranslationTextType50ToJSON)(value.description),
        'sequence': value.sequence,
        'code': value.code,
        'inactive': value.inactive,
        'hotelId': value.hotelId,
        'groupCode': value.groupCode,
        'central': value.central,
        'managedBy': (0, ManagedByOptions_1.ManagedByOptionsToJSON)(value.managedBy),
    };
}
exports.SourceCodeTypeToJSON = SourceCodeTypeToJSON;
