"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutoAttachRuleTypeToJSON = exports.AutoAttachRuleTypeFromJSONTyped = exports.AutoAttachRuleTypeFromJSON = exports.instanceOfAutoAttachRuleType = void 0;
const runtime_1 = require("../runtime");
const AttachElementsType_1 = require("./AttachElementsType");
const ResvAutoAttchBasedOn_1 = require("./ResvAutoAttchBasedOn");
/**
 * Check if a given object implements the AutoAttachRuleType interface.
 */
function instanceOfAutoAttachRuleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAutoAttachRuleType = instanceOfAutoAttachRuleType;
function AutoAttachRuleTypeFromJSON(json) {
    return AutoAttachRuleTypeFromJSONTyped(json, false);
}
exports.AutoAttachRuleTypeFromJSON = AutoAttachRuleTypeFromJSON;
function AutoAttachRuleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'attachElements': !(0, runtime_1.exists)(json, 'attachElements') ? undefined : (0, AttachElementsType_1.AttachElementsTypeFromJSON)(json['attachElements']),
        'basedOn': !(0, runtime_1.exists)(json, 'basedOn') ? undefined : (0, ResvAutoAttchBasedOn_1.ResvAutoAttchBasedOnFromJSON)(json['basedOn']),
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
    };
}
exports.AutoAttachRuleTypeFromJSONTyped = AutoAttachRuleTypeFromJSONTyped;
function AutoAttachRuleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'attachElements': (0, AttachElementsType_1.AttachElementsTypeToJSON)(value.attachElements),
        'basedOn': (0, ResvAutoAttchBasedOn_1.ResvAutoAttchBasedOnToJSON)(value.basedOn),
        'code': value.code,
        'hotelId': value.hotelId,
        'inactive': value.inactive,
    };
}
exports.AutoAttachRuleTypeToJSON = AutoAttachRuleTypeToJSON;
