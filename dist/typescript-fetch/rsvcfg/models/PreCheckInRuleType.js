"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreCheckInRuleTypeToJSON = exports.PreCheckInRuleTypeFromJSONTyped = exports.PreCheckInRuleTypeFromJSON = exports.instanceOfPreCheckInRuleType = void 0;
const runtime_1 = require("../runtime");
const MembershipTypeLevelType_1 = require("./MembershipTypeLevelType");
const PreCheckInRuleTypeType_1 = require("./PreCheckInRuleTypeType");
const PreCheckInTimeRuleTypes_1 = require("./PreCheckInTimeRuleTypes");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the PreCheckInRuleType interface.
 */
function instanceOfPreCheckInRuleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPreCheckInRuleType = instanceOfPreCheckInRuleType;
function PreCheckInRuleTypeFromJSON(json) {
    return PreCheckInRuleTypeFromJSONTyped(json, false);
}
exports.PreCheckInRuleTypeFromJSON = PreCheckInRuleTypeFromJSON;
function PreCheckInRuleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'marketCodes': !(0, runtime_1.exists)(json, 'marketCodes') ? undefined : json['marketCodes'],
        'memberships': !(0, runtime_1.exists)(json, 'memberships') ? undefined : (json['memberships'].map(MembershipTypeLevelType_1.MembershipTypeLevelTypeFromJSON)),
        'newTimeSpan': !(0, runtime_1.exists)(json, 'newTimeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['newTimeSpan']),
        'originCodes': !(0, runtime_1.exists)(json, 'originCodes') ? undefined : json['originCodes'],
        'ratePlans': !(0, runtime_1.exists)(json, 'ratePlans') ? undefined : json['ratePlans'],
        'reservationTypes': !(0, runtime_1.exists)(json, 'reservationTypes') ? undefined : json['reservationTypes'],
        'ruleType': !(0, runtime_1.exists)(json, 'ruleType') ? undefined : (0, PreCheckInRuleTypeType_1.PreCheckInRuleTypeTypeFromJSON)(json['ruleType']),
        'specials': !(0, runtime_1.exists)(json, 'specials') ? undefined : json['specials'],
        'timeLimit': !(0, runtime_1.exists)(json, 'timeLimit') ? undefined : (0, PreCheckInTimeRuleTypes_1.PreCheckInTimeRuleTypesFromJSON)(json['timeLimit']),
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
        'vIPCodes': !(0, runtime_1.exists)(json, 'vIPCodes') ? undefined : json['vIPCodes'],
    };
}
exports.PreCheckInRuleTypeFromJSONTyped = PreCheckInRuleTypeFromJSONTyped;
function PreCheckInRuleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'marketCodes': value.marketCodes,
        'memberships': value.memberships === undefined ? undefined : (value.memberships.map(MembershipTypeLevelType_1.MembershipTypeLevelTypeToJSON)),
        'newTimeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.newTimeSpan),
        'originCodes': value.originCodes,
        'ratePlans': value.ratePlans,
        'reservationTypes': value.reservationTypes,
        'ruleType': (0, PreCheckInRuleTypeType_1.PreCheckInRuleTypeTypeToJSON)(value.ruleType),
        'specials': value.specials,
        'timeLimit': (0, PreCheckInTimeRuleTypes_1.PreCheckInTimeRuleTypesToJSON)(value.timeLimit),
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
        'vIPCodes': value.vIPCodes,
    };
}
exports.PreCheckInRuleTypeToJSON = PreCheckInRuleTypeToJSON;
