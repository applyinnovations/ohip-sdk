/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BlockConversionsCriteria, BlockConversionsDetails, BlockConversionsToBeChanged, BlockRankingsCriteria, BlockRankingsDetails, BlockRankingsToBeChanged, BookingTypesCriteria, BookingTypesDetails, BookingTypesToBeChanged, CancellationCodesCriteria, CancellationCodesDetails, CancellationCodesToBeChanged, DiscountReasonsCriteria, DiscountReasonsDetails, DiscountReasonsToBeChanged, EntryPointsCriteria, EntryPointsDetails, EntryPointsToBeChanged, GlobalActionCodesCriteria, GlobalActionCodesDetails, GlobalActionCodesToBeChanged, MoveReasonCodesCriteria, MoveReasonCodesDetails, MoveReasonCodesToBeChanged, OriginCodesCriteria, OriginCodesDetails, OriginCodesToBeChanged, PurposeOfStaysCriteria, PurposeOfStaysDetails, PurposeOfStaysToBeChanged, ScriptsCriteria, ScriptsDetails, ScriptsToBeChanged, Status, WaitlistCodesCriteria, WaitlistCodesDetails, WaitlistCodesToBeChanged, WaitlistPrioritiesCriteria, WaitlistPrioritiesDetails, WaitlistPrioritiesToBeChanged } from '../models/index';
export interface ChangeBlockConversionsRequest {
    blockConversionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockConversionsToBeChanged?: BlockConversionsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeBlockRankingsRequest {
    blockRankingsCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRankingsToBeChanged?: BlockRankingsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeGlobalActionCodesRequest {
    actionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    globalActionCodesToBeChanged?: GlobalActionCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeScriptsRequest {
    scriptCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    scriptsToBeChanged?: ScriptsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteBookingTypesRequest {
    bookingTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    bookingTypesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCancellationCodesRequest {
    cancellationCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cancellationCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteDiscountReasonsRequest {
    discountReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteEntryPointsRequest {
    entryPointsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    entryPointsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteMoveReasonCodesRequest {
    moveReasonCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    moveReasonCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteOriginCodesRequest {
    originCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    originCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeletePurposeOfStaysRequest {
    purposeOfStaysId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    purposeOfStaysCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteWaitlistCodesRequest {
    waitlistCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteWaitlistPrioritiesRequest {
    waitlistPrioritiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistPrioritiesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockConversionsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockRankingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBookingTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCancellationCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDiscountReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchAdvanced?: boolean;
    fetchInactive?: boolean;
    fetchNonAdvanced?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetEntryPointsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGlobalActionCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMoveReasonCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOriginCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPurposeOfStaysRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetScriptsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    croCodes?: Array<string>;
    hotelIds?: Array<string>;
    type?: GetScriptsTypeEnum;
    languageCodes?: Array<string>;
    membershipTypesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetWaitlistCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetWaitlistPrioritiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockConversionsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockConversionsCriteria?: BlockConversionsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBlockRankingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRankingsCriteria?: BlockRankingsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBookingTypesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    bookingTypesCriteria?: BookingTypesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCancellationCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cancellationCodesCriteria?: CancellationCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDiscountReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    discountReasonsCriteria?: DiscountReasonsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostEntryPointsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    entryPointsCriteria?: EntryPointsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGlobalActionCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    globalActionCodesCriteria?: GlobalActionCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostMoveReasonCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    moveReasonCodesCriteria?: MoveReasonCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOriginCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    originCodesCriteria?: OriginCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPurposeOfStaysRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    purposeOfStaysCriteria?: PurposeOfStaysCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostScriptsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    scriptsCriteria?: ScriptsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostWaitlistCodesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistCodesCriteria?: WaitlistCodesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostWaitlistPrioritiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistPrioritiesCriteria?: WaitlistPrioritiesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBookingTypesRequest {
    bookingTypesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    bookingTypesToBeChanged?: BookingTypesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCancellationCodesRequest {
    cancellationCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cancellationCodesToBeChanged?: CancellationCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutDiscountReasonsRequest {
    discountReasonsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    discountReasonsToBeChanged?: DiscountReasonsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutEntryPointsRequest {
    entryPointsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    entryPointsToBeChanged?: EntryPointsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutMoveReasonCodesRequest {
    moveReasonCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    moveReasonCodesToBeChanged?: MoveReasonCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutOriginCodesRequest {
    originCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    originCodesToBeChanged?: OriginCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPurposeOfStaysRequest {
    purposeOfStaysId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    purposeOfStaysToBeChanged?: PurposeOfStaysToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutWaitlistCodesRequest {
    waitlistCodesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistCodesToBeChanged?: WaitlistCodesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutWaitlistPrioritiesRequest {
    waitlistPrioritiesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    waitlistPrioritiesToBeChanged?: WaitlistPrioritiesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBlockConversionsRequest {
    blockConversionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockConversionsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBlockRankingsRequest {
    blockRankingsCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    blockRankingsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveGlobalActionCodesRequest {
    actionCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    globalActionCodesCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveScriptsRequest {
    scriptCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: Array<string>;
    type?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class ChainConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update Block Conversions. <p><strong>OperationId:</strong>changeBlockConversions</p>
     * Change Block Conversions
     */
    changeBlockConversionsRaw(requestParameters: ChangeBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Conversions. <p><strong>OperationId:</strong>changeBlockConversions</p>
     * Change Block Conversions
     */
    changeBlockConversions(requestParameters: ChangeBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Block Ranking. <p><strong>OperationId:</strong>changeBlockRankings</p>
     * Change Block Ranking
     */
    changeBlockRankingsRaw(requestParameters: ChangeBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Block Ranking. <p><strong>OperationId:</strong>changeBlockRankings</p>
     * Change Block Ranking
     */
    changeBlockRankings(requestParameters: ChangeBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Global Action Codes. <p><strong>OperationId:</strong>changeGlobalActionCodes</p>
     * Change Global Action Codes
     */
    changeGlobalActionCodesRaw(requestParameters: ChangeGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Global Action Codes. <p><strong>OperationId:</strong>changeGlobalActionCodes</p>
     * Change Global Action Codes
     */
    changeGlobalActionCodes(requestParameters: ChangeGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Scripts. <p><strong>OperationId:</strong>changeScripts</p>
     * Change Scripts
     */
    changeScriptsRaw(requestParameters: ChangeScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Scripts. <p><strong>OperationId:</strong>changeScripts</p>
     * Change Scripts
     */
    changeScripts(requestParameters: ChangeScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Booking Type. <p><strong>OperationId:</strong>deleteBookingTypes</p>
     * Delete Booking Type
     */
    deleteBookingTypesRaw(requestParameters: DeleteBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Booking Type. <p><strong>OperationId:</strong>deleteBookingTypes</p>
     * Delete Booking Type
     */
    deleteBookingTypes(requestParameters: DeleteBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Cancellation Codes. <p><strong>OperationId:</strong>deleteCancellationCodes</p>
     * Delete Cancellation Codes
     */
    deleteCancellationCodesRaw(requestParameters: DeleteCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Cancellation Codes. <p><strong>OperationId:</strong>deleteCancellationCodes</p>
     * Delete Cancellation Codes
     */
    deleteCancellationCodes(requestParameters: DeleteCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Discount Reasons. <p><strong>OperationId:</strong>deleteDiscountReasons</p>
     * Delete Discount Reasons
     */
    deleteDiscountReasonsRaw(requestParameters: DeleteDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Discount Reasons. <p><strong>OperationId:</strong>deleteDiscountReasons</p>
     * Delete Discount Reasons
     */
    deleteDiscountReasons(requestParameters: DeleteDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Entry Points. <p><strong>OperationId:</strong>deleteEntryPoints</p>
     * Delete Entry Points
     */
    deleteEntryPointsRaw(requestParameters: DeleteEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Entry Points. <p><strong>OperationId:</strong>deleteEntryPoints</p>
     * Delete Entry Points
     */
    deleteEntryPoints(requestParameters: DeleteEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Move Reason Codes. <p><strong>OperationId:</strong>deleteMoveReasonCodes</p>
     * Delete Move Reason Codes
     */
    deleteMoveReasonCodesRaw(requestParameters: DeleteMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Move Reason Codes. <p><strong>OperationId:</strong>deleteMoveReasonCodes</p>
     * Delete Move Reason Codes
     */
    deleteMoveReasonCodes(requestParameters: DeleteMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Origin Codes. <p><strong>OperationId:</strong>deleteOriginCodes</p>
     * Delete Origin Codes
     */
    deleteOriginCodesRaw(requestParameters: DeleteOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Origin Codes. <p><strong>OperationId:</strong>deleteOriginCodes</p>
     * Delete Origin Codes
     */
    deleteOriginCodes(requestParameters: DeleteOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Purpose Of Stays. <p><strong>OperationId:</strong>deletePurposeOfStays</p>
     * Delete Purpose Of Stays
     */
    deletePurposeOfStaysRaw(requestParameters: DeletePurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Purpose Of Stays. <p><strong>OperationId:</strong>deletePurposeOfStays</p>
     * Delete Purpose Of Stays
     */
    deletePurposeOfStays(requestParameters: DeletePurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Waitlist Codes. <p><strong>OperationId:</strong>deleteWaitlistCodes</p>
     * Delete Waitlist Codes
     */
    deleteWaitlistCodesRaw(requestParameters: DeleteWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Waitlist Codes. <p><strong>OperationId:</strong>deleteWaitlistCodes</p>
     * Delete Waitlist Codes
     */
    deleteWaitlistCodes(requestParameters: DeleteWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Waitlist Priorities. <p><strong>OperationId:</strong>deleteWaitlistPriorities</p>
     * Delete Waitlist Priorities
     */
    deleteWaitlistPrioritiesRaw(requestParameters: DeleteWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Waitlist Priorities. <p><strong>OperationId:</strong>deleteWaitlistPriorities</p>
     * Delete Waitlist Priorities
     */
    deleteWaitlistPriorities(requestParameters: DeleteWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Block Conversions. <p><strong>OperationId:</strong>getBlockConversions</p>
     * Get Block Conversions
     */
    getBlockConversionsRaw(requestParameters: GetBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockConversionsDetails>>;
    /**
     * Use this API to get Block Conversions. <p><strong>OperationId:</strong>getBlockConversions</p>
     * Get Block Conversions
     */
    getBlockConversions(requestParameters: GetBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockConversionsDetails>;
    /**
     * Use this API to get Block Rankings. <p><strong>OperationId:</strong>getBlockRankings</p>
     * Get Block Rankings
     */
    getBlockRankingsRaw(requestParameters: GetBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockRankingsDetails>>;
    /**
     * Use this API to get Block Rankings. <p><strong>OperationId:</strong>getBlockRankings</p>
     * Get Block Rankings
     */
    getBlockRankings(requestParameters: GetBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockRankingsDetails>;
    /**
     * Use this API to get Booking Types. <p><strong>OperationId:</strong>getBookingTypes</p>
     * Get Booking Types
     */
    getBookingTypesRaw(requestParameters: GetBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BookingTypesDetails>>;
    /**
     * Use this API to get Booking Types. <p><strong>OperationId:</strong>getBookingTypes</p>
     * Get Booking Types
     */
    getBookingTypes(requestParameters: GetBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BookingTypesDetails>;
    /**
     * Use this API to get Cancellation Codes. <p><strong>OperationId:</strong>getCancellationCodes</p>
     * Get Cancellation Codes
     */
    getCancellationCodesRaw(requestParameters: GetCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CancellationCodesDetails>>;
    /**
     * Use this API to get Cancellation Codes. <p><strong>OperationId:</strong>getCancellationCodes</p>
     * Get Cancellation Codes
     */
    getCancellationCodes(requestParameters: GetCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CancellationCodesDetails>;
    /**
     * Use this API to get Discount Reasons. <p><strong>OperationId:</strong>getDiscountReasons</p>
     * Get Discount Reasons
     */
    getDiscountReasonsRaw(requestParameters: GetDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountReasonsDetails>>;
    /**
     * Use this API to get Discount Reasons. <p><strong>OperationId:</strong>getDiscountReasons</p>
     * Get Discount Reasons
     */
    getDiscountReasons(requestParameters: GetDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountReasonsDetails>;
    /**
     * Use this API to get Entry Points. <p><strong>OperationId:</strong>getEntryPoints</p>
     * Get Entry Points
     */
    getEntryPointsRaw(requestParameters: GetEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntryPointsDetails>>;
    /**
     * Use this API to get Entry Points. <p><strong>OperationId:</strong>getEntryPoints</p>
     * Get Entry Points
     */
    getEntryPoints(requestParameters: GetEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntryPointsDetails>;
    /**
     * Use this API to get Global Action Codes. <p><strong>OperationId:</strong>getGlobalActionCodes</p>
     * Get Global Action Codes
     */
    getGlobalActionCodesRaw(requestParameters: GetGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GlobalActionCodesDetails>>;
    /**
     * Use this API to get Global Action Codes. <p><strong>OperationId:</strong>getGlobalActionCodes</p>
     * Get Global Action Codes
     */
    getGlobalActionCodes(requestParameters: GetGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GlobalActionCodesDetails>;
    /**
     * Use this API to get Move Reason Codes. <p><strong>OperationId:</strong>getMoveReasonCodes</p>
     * Get Move Reason Codes
     */
    getMoveReasonCodesRaw(requestParameters: GetMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MoveReasonCodesDetails>>;
    /**
     * Use this API to get Move Reason Codes. <p><strong>OperationId:</strong>getMoveReasonCodes</p>
     * Get Move Reason Codes
     */
    getMoveReasonCodes(requestParameters: GetMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MoveReasonCodesDetails>;
    /**
     * Use this API to get Origin Codes. <p><strong>OperationId:</strong>getOriginCodes</p>
     * Get Origin Codes
     */
    getOriginCodesRaw(requestParameters: GetOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OriginCodesDetails>>;
    /**
     * Use this API to get Origin Codes. <p><strong>OperationId:</strong>getOriginCodes</p>
     * Get Origin Codes
     */
    getOriginCodes(requestParameters: GetOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OriginCodesDetails>;
    /**
     * Use this API to get Purpose Of Stays. <p><strong>OperationId:</strong>getPurposeOfStays</p>
     * Get Purpose Of Stays
     */
    getPurposeOfStaysRaw(requestParameters: GetPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PurposeOfStaysDetails>>;
    /**
     * Use this API to get Purpose Of Stays. <p><strong>OperationId:</strong>getPurposeOfStays</p>
     * Get Purpose Of Stays
     */
    getPurposeOfStays(requestParameters: GetPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PurposeOfStaysDetails>;
    /**
     * Use this API to get Scripts. <p><strong>OperationId:</strong>getScripts</p>
     * Get Scripts
     */
    getScriptsRaw(requestParameters: GetScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScriptsDetails>>;
    /**
     * Use this API to get Scripts. <p><strong>OperationId:</strong>getScripts</p>
     * Get Scripts
     */
    getScripts(requestParameters: GetScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScriptsDetails>;
    /**
     * Use this API to get Waitlist Codes. <p><strong>OperationId:</strong>getWaitlistCodes</p>
     * Get Waitlist Codes
     */
    getWaitlistCodesRaw(requestParameters: GetWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WaitlistCodesDetails>>;
    /**
     * Use this API to get Waitlist Codes. <p><strong>OperationId:</strong>getWaitlistCodes</p>
     * Get Waitlist Codes
     */
    getWaitlistCodes(requestParameters: GetWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WaitlistCodesDetails>;
    /**
     * Use this API to get Waitlist Priorities. <p><strong>OperationId:</strong>getWaitlistPriorities</p>
     * Get Waitlist Priorities
     */
    getWaitlistPrioritiesRaw(requestParameters: GetWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WaitlistPrioritiesDetails>>;
    /**
     * Use this API to get Waitlist Priorities. <p><strong>OperationId:</strong>getWaitlistPriorities</p>
     * Get Waitlist Priorities
     */
    getWaitlistPriorities(requestParameters: GetWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WaitlistPrioritiesDetails>;
    /**
     * Use this API to create Block Conversions. <p><strong>OperationId:</strong>postBlockConversions</p>
     * Create Block Conversions
     */
    postBlockConversionsRaw(requestParameters: PostBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Conversions. <p><strong>OperationId:</strong>postBlockConversions</p>
     * Create Block Conversions
     */
    postBlockConversions(requestParameters: PostBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Block Rankings. <p><strong>OperationId:</strong>postBlockRankings</p>
     * Create Block Rankings
     */
    postBlockRankingsRaw(requestParameters: PostBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Block Rankings. <p><strong>OperationId:</strong>postBlockRankings</p>
     * Create Block Rankings
     */
    postBlockRankings(requestParameters: PostBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Booking Types. <p><strong>OperationId:</strong>postBookingTypes</p>
     * Create Booking Types
     */
    postBookingTypesRaw(requestParameters: PostBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Booking Types. <p><strong>OperationId:</strong>postBookingTypes</p>
     * Create Booking Types
     */
    postBookingTypes(requestParameters: PostBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Cancellation Codes. <p><strong>OperationId:</strong>postCancellationCodes</p>
     * Create Cancellation Codes
     */
    postCancellationCodesRaw(requestParameters: PostCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Cancellation Codes. <p><strong>OperationId:</strong>postCancellationCodes</p>
     * Create Cancellation Codes
     */
    postCancellationCodes(requestParameters: PostCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Discount Reasons. <p><strong>OperationId:</strong>postDiscountReasons</p>
     * Create Discount Reasons
     */
    postDiscountReasonsRaw(requestParameters: PostDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Discount Reasons. <p><strong>OperationId:</strong>postDiscountReasons</p>
     * Create Discount Reasons
     */
    postDiscountReasons(requestParameters: PostDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Entry Points. <p><strong>OperationId:</strong>postEntryPoints</p>
     * Create Entry Points
     */
    postEntryPointsRaw(requestParameters: PostEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Entry Points. <p><strong>OperationId:</strong>postEntryPoints</p>
     * Create Entry Points
     */
    postEntryPoints(requestParameters: PostEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Global Action Codes. <p><strong>OperationId:</strong>postGlobalActionCodes</p>
     * Create Global Action Codes
     */
    postGlobalActionCodesRaw(requestParameters: PostGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Global Action Codes. <p><strong>OperationId:</strong>postGlobalActionCodes</p>
     * Create Global Action Codes
     */
    postGlobalActionCodes(requestParameters: PostGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Move Reason Codes. <p><strong>OperationId:</strong>postMoveReasonCodes</p>
     * Create Move Reason Codes
     */
    postMoveReasonCodesRaw(requestParameters: PostMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Move Reason Codes. <p><strong>OperationId:</strong>postMoveReasonCodes</p>
     * Create Move Reason Codes
     */
    postMoveReasonCodes(requestParameters: PostMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Origin Codes. <p><strong>OperationId:</strong>postOriginCodes</p>
     * Create Origin Codes
     */
    postOriginCodesRaw(requestParameters: PostOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Origin Codes. <p><strong>OperationId:</strong>postOriginCodes</p>
     * Create Origin Codes
     */
    postOriginCodes(requestParameters: PostOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Purpose Of Stays. <p><strong>OperationId:</strong>postPurposeOfStays</p>
     * Create Purpose Of Stays
     */
    postPurposeOfStaysRaw(requestParameters: PostPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Purpose Of Stays. <p><strong>OperationId:</strong>postPurposeOfStays</p>
     * Create Purpose Of Stays
     */
    postPurposeOfStays(requestParameters: PostPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Scripts. <p><strong>OperationId:</strong>postScripts</p>
     * Create Scripts
     */
    postScriptsRaw(requestParameters: PostScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Scripts. <p><strong>OperationId:</strong>postScripts</p>
     * Create Scripts
     */
    postScripts(requestParameters: PostScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Waitlist Codes. <p><strong>OperationId:</strong>postWaitlistCodes</p>
     * Create Waitlist Codes
     */
    postWaitlistCodesRaw(requestParameters: PostWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Waitlist Codes. <p><strong>OperationId:</strong>postWaitlistCodes</p>
     * Create Waitlist Codes
     */
    postWaitlistCodes(requestParameters: PostWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Waitlist Priorities. <p><strong>OperationId:</strong>postWaitlistPriorities</p>
     * Create Waitlist Priorities
     */
    postWaitlistPrioritiesRaw(requestParameters: PostWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Waitlist Priorities. <p><strong>OperationId:</strong>postWaitlistPriorities</p>
     * Create Waitlist Priorities
     */
    postWaitlistPriorities(requestParameters: PostWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Booking Type. <p><strong>OperationId:</strong>putBookingTypes</p>
     * Change Booking Type
     */
    putBookingTypesRaw(requestParameters: PutBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Booking Type. <p><strong>OperationId:</strong>putBookingTypes</p>
     * Change Booking Type
     */
    putBookingTypes(requestParameters: PutBookingTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Cancellation Codes. <p><strong>OperationId:</strong>putCancellationCodes</p>
     * Change Cancellation Codes
     */
    putCancellationCodesRaw(requestParameters: PutCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Cancellation Codes. <p><strong>OperationId:</strong>putCancellationCodes</p>
     * Change Cancellation Codes
     */
    putCancellationCodes(requestParameters: PutCancellationCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Discount Reasons. <p><strong>OperationId:</strong>putDiscountReasons</p>
     * Change Discount Reasons
     */
    putDiscountReasonsRaw(requestParameters: PutDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Discount Reasons. <p><strong>OperationId:</strong>putDiscountReasons</p>
     * Change Discount Reasons
     */
    putDiscountReasons(requestParameters: PutDiscountReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Entry Points. <p><strong>OperationId:</strong>putEntryPoints</p>
     * Change Entry Points
     */
    putEntryPointsRaw(requestParameters: PutEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Entry Points. <p><strong>OperationId:</strong>putEntryPoints</p>
     * Change Entry Points
     */
    putEntryPoints(requestParameters: PutEntryPointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Move Reason Codes. <p><strong>OperationId:</strong>putMoveReasonCodes</p>
     * Change Move Reason Codes
     */
    putMoveReasonCodesRaw(requestParameters: PutMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Move Reason Codes. <p><strong>OperationId:</strong>putMoveReasonCodes</p>
     * Change Move Reason Codes
     */
    putMoveReasonCodes(requestParameters: PutMoveReasonCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Origin Codes. <p><strong>OperationId:</strong>putOriginCodes</p>
     * Change Origin Codes
     */
    putOriginCodesRaw(requestParameters: PutOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Origin Codes. <p><strong>OperationId:</strong>putOriginCodes</p>
     * Change Origin Codes
     */
    putOriginCodes(requestParameters: PutOriginCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Purpose Of Stays. <p><strong>OperationId:</strong>putPurposeOfStays</p>
     * Change Purpose Of Stays
     */
    putPurposeOfStaysRaw(requestParameters: PutPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Purpose Of Stays. <p><strong>OperationId:</strong>putPurposeOfStays</p>
     * Change Purpose Of Stays
     */
    putPurposeOfStays(requestParameters: PutPurposeOfStaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Waitlist Codes. <p><strong>OperationId:</strong>putWaitlistCodes</p>
     * Change Waitlist Codes
     */
    putWaitlistCodesRaw(requestParameters: PutWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Waitlist Codes. <p><strong>OperationId:</strong>putWaitlistCodes</p>
     * Change Waitlist Codes
     */
    putWaitlistCodes(requestParameters: PutWaitlistCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Waitlist Priorities. <p><strong>OperationId:</strong>putWaitlistPriorities</p>
     * Change Waitlist Priorities
     */
    putWaitlistPrioritiesRaw(requestParameters: PutWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Waitlist Priorities. <p><strong>OperationId:</strong>putWaitlistPriorities</p>
     * Change Waitlist Priorities
     */
    putWaitlistPriorities(requestParameters: PutWaitlistPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Block Conversions. <p><strong>OperationId:</strong>removeBlockConversions</p>
     * Delete Block Conversions
     */
    removeBlockConversionsRaw(requestParameters: RemoveBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Conversions. <p><strong>OperationId:</strong>removeBlockConversions</p>
     * Delete Block Conversions
     */
    removeBlockConversions(requestParameters: RemoveBlockConversionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Block Ranking. <p><strong>OperationId:</strong>removeBlockRankings</p>
     * Delete Block Ranking
     */
    removeBlockRankingsRaw(requestParameters: RemoveBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Block Ranking. <p><strong>OperationId:</strong>removeBlockRankings</p>
     * Delete Block Ranking
     */
    removeBlockRankings(requestParameters: RemoveBlockRankingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Global Action Codes. <p><strong>OperationId:</strong>removeGlobalActionCodes</p>
     * Delete Global Action Codes
     */
    removeGlobalActionCodesRaw(requestParameters: RemoveGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Global Action Codes. <p><strong>OperationId:</strong>removeGlobalActionCodes</p>
     * Delete Global Action Codes
     */
    removeGlobalActionCodes(requestParameters: RemoveGlobalActionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Scripts. <p><strong>OperationId:</strong>removeScripts</p>
     * Change Scripts
     */
    removeScriptsRaw(requestParameters: RemoveScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Scripts. <p><strong>OperationId:</strong>removeScripts</p>
     * Change Scripts
     */
    removeScripts(requestParameters: RemoveScriptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const GetScriptsTypeEnum: {
    readonly ClosingScript: "ClosingScript";
    readonly WebRegCard: "WebRegCard";
};
export type GetScriptsTypeEnum = typeof GetScriptsTypeEnum[keyof typeof GetScriptsTypeEnum];
