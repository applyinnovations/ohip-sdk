"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CateringMenuItemClassInfoTypeToJSON = exports.CateringMenuItemClassInfoTypeFromJSONTyped = exports.CateringMenuItemClassInfoTypeFromJSON = exports.instanceOfCateringMenuItemClassInfoType = void 0;
const runtime_1 = require("../runtime");
const MenuTypeType_1 = require("./MenuTypeType");
/**
 * Check if a given object implements the CateringMenuItemClassInfoType interface.
 */
function instanceOfCateringMenuItemClassInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCateringMenuItemClassInfoType = instanceOfCateringMenuItemClassInfoType;
function CateringMenuItemClassInfoTypeFromJSON(json) {
    return CateringMenuItemClassInfoTypeFromJSONTyped(json, false);
}
exports.CateringMenuItemClassInfoTypeFromJSON = CateringMenuItemClassInfoTypeFromJSON;
function CateringMenuItemClassInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'className': !(0, runtime_1.exists)(json, 'className') ? undefined : json['className'],
        'eventTypeList': !(0, runtime_1.exists)(json, 'eventTypeList') ? undefined : json['eventTypeList'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'iconName': !(0, runtime_1.exists)(json, 'iconName') ? undefined : json['iconName'],
        'menuType': !(0, runtime_1.exists)(json, 'menuType') ? undefined : (0, MenuTypeType_1.MenuTypeTypeFromJSON)(json['menuType']),
        'responsibleDepartmentList': !(0, runtime_1.exists)(json, 'responsibleDepartmentList') ? undefined : json['responsibleDepartmentList'],
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'webBookable': !(0, runtime_1.exists)(json, 'webBookable') ? undefined : json['webBookable'],
    };
}
exports.CateringMenuItemClassInfoTypeFromJSONTyped = CateringMenuItemClassInfoTypeFromJSONTyped;
function CateringMenuItemClassInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'className': value.className,
        'eventTypeList': value.eventTypeList,
        'hotelId': value.hotelId,
        'iconName': value.iconName,
        'menuType': (0, MenuTypeType_1.MenuTypeTypeToJSON)(value.menuType),
        'responsibleDepartmentList': value.responsibleDepartmentList,
        'sequence': value.sequence,
        'webBookable': value.webBookable,
    };
}
exports.CateringMenuItemClassInfoTypeToJSON = CateringMenuItemClassInfoTypeToJSON;
