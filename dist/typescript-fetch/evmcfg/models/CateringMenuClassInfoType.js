"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CateringMenuClassInfoTypeToJSON = exports.CateringMenuClassInfoTypeFromJSONTyped = exports.CateringMenuClassInfoTypeFromJSON = exports.instanceOfCateringMenuClassInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CateringMenuClassInfoType interface.
 */
function instanceOfCateringMenuClassInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCateringMenuClassInfoType = instanceOfCateringMenuClassInfoType;
function CateringMenuClassInfoTypeFromJSON(json) {
    return CateringMenuClassInfoTypeFromJSONTyped(json, false);
}
exports.CateringMenuClassInfoTypeFromJSON = CateringMenuClassInfoTypeFromJSON;
function CateringMenuClassInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'eventTypes': !(0, runtime_1.exists)(json, 'eventTypes') ? undefined : json['eventTypes'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'inactiveDate': !(0, runtime_1.exists)(json, 'inactiveDate') ? undefined : (new Date(json['inactiveDate'])),
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'webBookable': !(0, runtime_1.exists)(json, 'webBookable') ? undefined : json['webBookable'],
    };
}
exports.CateringMenuClassInfoTypeFromJSONTyped = CateringMenuClassInfoTypeFromJSONTyped;
function CateringMenuClassInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'eventTypes': value.eventTypes,
        'inactive': value.inactive,
        'inactiveDate': value.inactiveDate === undefined ? undefined : (value.inactiveDate.toISOString().substring(0, 10)),
        'name': value.name,
        'webBookable': value.webBookable,
    };
}
exports.CateringMenuClassInfoTypeToJSON = CateringMenuClassInfoTypeToJSON;
