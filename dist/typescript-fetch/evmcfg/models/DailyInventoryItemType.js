"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DailyInventoryItemTypeToJSON = exports.DailyInventoryItemTypeFromJSONTyped = exports.DailyInventoryItemTypeFromJSON = exports.instanceOfDailyInventoryItemType = void 0;
const runtime_1 = require("../runtime");
const ItemQuantityDateType_1 = require("./ItemQuantityDateType");
const TranslationTextType200_1 = require("./TranslationTextType200");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the DailyInventoryItemType interface.
 */
function instanceOfDailyInventoryItemType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfDailyInventoryItemType = instanceOfDailyInventoryItemType;
function DailyInventoryItemTypeFromJSON(json) {
    return DailyInventoryItemTypeFromJSONTyped(json, false);
}
exports.DailyInventoryItemTypeFromJSON = DailyInventoryItemTypeFromJSON;
function DailyInventoryItemTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'itemId': !(0, runtime_1.exists)(json, 'itemId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['itemId']),
        'itemName': !(0, runtime_1.exists)(json, 'itemName') ? undefined : (0, TranslationTextType200_1.TranslationTextType200FromJSON)(json['itemName']),
        'itemDescription': !(0, runtime_1.exists)(json, 'itemDescription') ? undefined : json['itemDescription'],
        'itemClassId': !(0, runtime_1.exists)(json, 'itemClassId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['itemClassId']),
        'quantityInStock': !(0, runtime_1.exists)(json, 'quantityInStock') ? undefined : json['quantityInStock'],
        'dailyItemQuantityByDate': !(0, runtime_1.exists)(json, 'dailyItemQuantityByDate') ? undefined : (json['dailyItemQuantityByDate'].map(ItemQuantityDateType_1.ItemQuantityDateTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.DailyInventoryItemTypeFromJSONTyped = DailyInventoryItemTypeFromJSONTyped;
function DailyInventoryItemTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'itemId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.itemId),
        'itemName': (0, TranslationTextType200_1.TranslationTextType200ToJSON)(value.itemName),
        'itemDescription': value.itemDescription,
        'itemClassId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.itemClassId),
        'quantityInStock': value.quantityInStock,
        'dailyItemQuantityByDate': value.dailyItemQuantityByDate === undefined ? undefined : (value.dailyItemQuantityByDate.map(ItemQuantityDateType_1.ItemQuantityDateTypeToJSON)),
        'hotelId': value.hotelId,
    };
}
exports.DailyInventoryItemTypeToJSON = DailyInventoryItemTypeToJSON;
