/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CateringMenuDetailListType } from './CateringMenuDetailListType';
import type { CateringMenuInfoType } from './CateringMenuInfoType';
import type { CateringMenuRevListType } from './CateringMenuRevListType';
import type { CateringMultiChoiceMenuListType } from './CateringMultiChoiceMenuListType';
import type { EventResourceNotesType } from './EventResourceNotesType';
import type { UniqueIDType } from './UniqueIDType';
/**
 *
 * @export
 * @interface CateringMenuType
 */
export interface CateringMenuType {
    /**
     * This type holds class id for given menu.
     * @type {string}
     * @memberof CateringMenuType
     */
    classId?: string;
    /**
     * The Hotel code which the catering menu belongs to.
     * @type {string}
     * @memberof CateringMenuType
     */
    hotelId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof CateringMenuType
     */
    id?: UniqueIDType;
    /**
     *
     * @type {CateringMenuInfoType}
     * @memberof CateringMenuType
     */
    info?: CateringMenuInfoType;
    /**
     *
     * @type {CateringMenuDetailListType}
     * @memberof CateringMenuType
     */
    menuDetailList?: CateringMenuDetailListType;
    /**
     *
     * @type {EventResourceNotesType}
     * @memberof CateringMenuType
     */
    menuNoteList?: EventResourceNotesType;
    /**
     *
     * @type {CateringMultiChoiceMenuListType}
     * @memberof CateringMenuType
     */
    multiChoiceList?: CateringMultiChoiceMenuListType;
    /**
     *
     * @type {CateringMenuRevListType}
     * @memberof CateringMenuType
     */
    revenueList?: CateringMenuRevListType;
}
/**
 * Check if a given object implements the CateringMenuType interface.
 */
export declare function instanceOfCateringMenuType(value: object): boolean;
export declare function CateringMenuTypeFromJSON(json: any): CateringMenuType;
export declare function CateringMenuTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CateringMenuType;
export declare function CateringMenuTypeToJSON(value?: CateringMenuType | null): any;
