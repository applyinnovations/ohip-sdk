"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemQuantityDateTypeToJSON = exports.ItemQuantityDateTypeFromJSONTyped = exports.ItemQuantityDateTypeFromJSON = exports.instanceOfItemQuantityDateType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ItemQuantityDateType interface.
 */
function instanceOfItemQuantityDateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfItemQuantityDateType = instanceOfItemQuantityDateType;
function ItemQuantityDateTypeFromJSON(json) {
    return ItemQuantityDateTypeFromJSONTyped(json, false);
}
exports.ItemQuantityDateTypeFromJSON = ItemQuantityDateTypeFromJSON;
function ItemQuantityDateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'dailyQuantity': !(0, runtime_1.exists)(json, 'dailyQuantity') ? undefined : json['dailyQuantity'],
        'quantityDate': !(0, runtime_1.exists)(json, 'quantityDate') ? undefined : json['quantityDate'],
    };
}
exports.ItemQuantityDateTypeFromJSONTyped = ItemQuantityDateTypeFromJSONTyped;
function ItemQuantityDateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'dailyQuantity': value.dailyQuantity,
        'quantityDate': value.quantityDate,
    };
}
exports.ItemQuantityDateTypeToJSON = ItemQuantityDateTypeToJSON;
