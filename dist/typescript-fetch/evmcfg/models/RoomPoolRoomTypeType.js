"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomPoolRoomTypeTypeToJSON = exports.RoomPoolRoomTypeTypeFromJSONTyped = exports.RoomPoolRoomTypeTypeFromJSON = exports.instanceOfRoomPoolRoomTypeType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the RoomPoolRoomTypeType interface.
 */
function instanceOfRoomPoolRoomTypeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomPoolRoomTypeType = instanceOfRoomPoolRoomTypeType;
function RoomPoolRoomTypeTypeFromJSON(json) {
    return RoomPoolRoomTypeTypeFromJSONTyped(json, false);
}
exports.RoomPoolRoomTypeTypeFromJSON = RoomPoolRoomTypeTypeFromJSON;
function RoomPoolRoomTypeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomClass': !(0, runtime_1.exists)(json, 'roomClass') ? undefined : json['roomClass'],
        'shortDescription': !(0, runtime_1.exists)(json, 'shortDescription') ? undefined : json['shortDescription'],
        'activeDate': !(0, runtime_1.exists)(json, 'activeDate') ? undefined : json['activeDate'],
        'pseudo': !(0, runtime_1.exists)(json, 'pseudo') ? undefined : json['pseudo'],
        'accessible': !(0, runtime_1.exists)(json, 'accessible') ? undefined : json['accessible'],
        'sendToInterface': !(0, runtime_1.exists)(json, 'sendToInterface') ? undefined : json['sendToInterface'],
        'sellSequence': !(0, runtime_1.exists)(json, 'sellSequence') ? undefined : json['sellSequence'],
        'suite': !(0, runtime_1.exists)(json, 'suite') ? undefined : json['suite'],
        'meetingRoom': !(0, runtime_1.exists)(json, 'meetingRoom') ? undefined : json['meetingRoom'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'numberOfRooms': !(0, runtime_1.exists)(json, 'numberOfRooms') ? undefined : json['numberOfRooms'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'restricted': !(0, runtime_1.exists)(json, 'restricted') ? undefined : json['restricted'],
    };
}
exports.RoomPoolRoomTypeTypeFromJSONTyped = RoomPoolRoomTypeTypeFromJSONTyped;
function RoomPoolRoomTypeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomClass': value.roomClass,
        'shortDescription': value.shortDescription,
        'activeDate': value.activeDate,
        'pseudo': value.pseudo,
        'accessible': value.accessible,
        'sendToInterface': value.sendToInterface,
        'sellSequence': value.sellSequence,
        'suite': value.suite,
        'meetingRoom': value.meetingRoom,
        'roomType': value.roomType,
        'numberOfRooms': value.numberOfRooms,
        'inactive': value.inactive,
        'restricted': value.restricted,
    };
}
exports.RoomPoolRoomTypeTypeToJSON = RoomPoolRoomTypeTypeToJSON;
