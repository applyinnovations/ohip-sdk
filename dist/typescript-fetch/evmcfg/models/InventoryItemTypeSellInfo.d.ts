/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { DateTimeSpanType } from './DateTimeSpanType';
/**
 * The Sell Information of the Item.
 * @export
 * @interface InventoryItemTypeSellInfo
 */
export interface InventoryItemTypeSellInfo {
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof InventoryItemTypeSellInfo
     */
    available?: DateTimeSpanType;
    /**
     * Available quantity during a period of time.
     * @type {number}
     * @memberof InventoryItemTypeSellInfo
     */
    availableQty?: number;
    /**
     * Item quantity in Stock.
     * @type {number}
     * @memberof InventoryItemTypeSellInfo
     */
    qtyInStock?: number;
    /**
     * Defines the default quantity when booking the Item.
     * @type {number}
     * @memberof InventoryItemTypeSellInfo
     */
    defaultQty?: number;
    /**
     * If true, the item could be sold separately.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    sellSeparate?: boolean;
    /**
     * If true, item is mandatory for booking.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    sellControl?: boolean;
    /**
     * If true, the item can be attached as part of a Welcome Offer
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    welcomeOffer?: boolean;
    /**
     * If true, web booking is allowed.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    webBookable?: boolean;
    /**
     * Specifies if web booking is allowed for the Item Class.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    itemClassWebBookable?: boolean;
    /**
     * Define if the the Item could be held outside of the reservation stay days.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    outsideStay?: boolean;
    /**
     * If true, the Fixed Charges screen will be automatically displayed when this item gets attached to a reservation.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    fixedCharge?: boolean;
    /**
     * Specifies if a discount is allowed for this item.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    discountable?: boolean;
    /**
     * Specifies if a discount is allowed for the Item Class.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    itemClassDiscountable?: boolean;
    /**
     * Flag to issue a warning if this inventory item is overbooked.
     * @type {boolean}
     * @memberof InventoryItemTypeSellInfo
     */
    criticalInventory?: boolean;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof InventoryItemTypeSellInfo
     */
    price?: CurrencyAmountType;
    /**
     * Define the default duration days when booking the Item.
     * @type {number}
     * @memberof InventoryItemTypeSellInfo
     */
    defaultDuration?: number;
}
/**
 * Check if a given object implements the InventoryItemTypeSellInfo interface.
 */
export declare function instanceOfInventoryItemTypeSellInfo(value: object): boolean;
export declare function InventoryItemTypeSellInfoFromJSON(json: any): InventoryItemTypeSellInfo;
export declare function InventoryItemTypeSellInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryItemTypeSellInfo;
export declare function InventoryItemTypeSellInfoToJSON(value?: InventoryItemTypeSellInfo | null): any;
