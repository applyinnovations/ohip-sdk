/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { FunctionSpaceRateTypeType } from './FunctionSpaceRateTypeType';
import type { TranslationTextType200 } from './TranslationTextType200';
/**
 * Base type provides information about Catering Code which will be used for removal operation
 * @export
 * @interface BaseFunctionSpaceRateType
 */
export interface BaseFunctionSpaceRateType {
    /**
     * Code ID is used to identify a Catering Code by ID.
     * @type {number}
     * @memberof BaseFunctionSpaceRateType
     */
    codeId?: number;
    /**
     * Code is used to identify a Catering Code.
     * @type {string}
     * @memberof BaseFunctionSpaceRateType
     */
    code?: string;
    /**
     *
     * @type {TranslationTextType200}
     * @memberof BaseFunctionSpaceRateType
     */
    translatableDescription?: TranslationTextType200;
    /**
     * Catering Codes display sequence Number
     * @type {number}
     * @memberof BaseFunctionSpaceRateType
     */
    displaySequence?: number;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof BaseFunctionSpaceRateType
     */
    rentAmount?: CurrencyAmountType;
    /**
     * Catering revenue type used for function space rent amount.
     * @type {string}
     * @memberof BaseFunctionSpaceRateType
     */
    revenueType?: string;
    /**
     *
     * @type {FunctionSpaceRateTypeType}
     * @memberof BaseFunctionSpaceRateType
     */
    rateType?: FunctionSpaceRateTypeType;
    /**
     * Indicates that this rate is the default for the function space.
     * @type {boolean}
     * @memberof BaseFunctionSpaceRateType
     */
    _default?: boolean;
    /**
     * Indicates that this rate is inactive.
     * @type {boolean}
     * @memberof BaseFunctionSpaceRateType
     */
    inactive?: boolean;
    /**
     * Indicates that this rate is computed per hour.
     * @type {boolean}
     * @memberof BaseFunctionSpaceRateType
     */
    hourly?: boolean;
    /**
     * Indicates that minimum revenue should be enforced for this rate code.
     * @type {boolean}
     * @memberof BaseFunctionSpaceRateType
     */
    minimunRevenue?: boolean;
}
/**
 * Check if a given object implements the BaseFunctionSpaceRateType interface.
 */
export declare function instanceOfBaseFunctionSpaceRateType(value: object): boolean;
export declare function BaseFunctionSpaceRateTypeFromJSON(json: any): BaseFunctionSpaceRateType;
export declare function BaseFunctionSpaceRateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseFunctionSpaceRateType;
export declare function BaseFunctionSpaceRateTypeToJSON(value?: BaseFunctionSpaceRateType | null): any;
