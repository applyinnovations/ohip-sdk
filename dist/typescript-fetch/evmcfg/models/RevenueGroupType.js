"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevenueGroupTypeToJSON = exports.RevenueGroupTypeFromJSONTyped = exports.RevenueGroupTypeFromJSON = exports.instanceOfRevenueGroupType = void 0;
const runtime_1 = require("../runtime");
const RevenueTypesType_1 = require("./RevenueTypesType");
const TranslationTextType200_1 = require("./TranslationTextType200");
/**
 * Check if a given object implements the RevenueGroupType interface.
 */
function instanceOfRevenueGroupType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRevenueGroupType = instanceOfRevenueGroupType;
function RevenueGroupTypeFromJSON(json) {
    return RevenueGroupTypeFromJSONTyped(json, false);
}
exports.RevenueGroupTypeFromJSON = RevenueGroupTypeFromJSON;
function RevenueGroupTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'revenueTypes': !(0, runtime_1.exists)(json, 'revenueTypes') ? undefined : (0, RevenueTypesType_1.RevenueTypesTypeFromJSON)(json['revenueTypes']),
        'translatableDescription': !(0, runtime_1.exists)(json, 'translatableDescription') ? undefined : (0, TranslationTextType200_1.TranslationTextType200FromJSON)(json['translatableDescription']),
    };
}
exports.RevenueGroupTypeFromJSONTyped = RevenueGroupTypeFromJSONTyped;
function RevenueGroupTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'displaySequence': value.displaySequence,
        'inactive': value.inactive,
        'revenueTypes': (0, RevenueTypesType_1.RevenueTypesTypeToJSON)(value.revenueTypes),
        'translatableDescription': (0, TranslationTextType200_1.TranslationTextType200ToJSON)(value.translatableDescription),
    };
}
exports.RevenueGroupTypeToJSON = RevenueGroupTypeToJSON;
