/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CateringPackageRevenueType } from './CateringPackageRevenueType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { DateTimeSpanType } from './DateTimeSpanType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Type used for managing Pricing Details associated with a particular Catering Package.
 * @export
 * @interface CateringPackagePricingType
 */
export interface CateringPackagePricingType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof CateringPackagePricingType
     */
    id?: UniqueIDType;
    /**
     * Price Code.
     * @type {string}
     * @memberof CateringPackagePricingType
     */
    priceCode?: string;
    /**
     * Title of the Catering Package Event Note.
     * @type {string}
     * @memberof CateringPackagePricingType
     */
    description?: string;
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof CateringPackagePricingType
     */
    sellDate?: DateTimeSpanType;
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof CateringPackagePricingType
     */
    blockDate?: DateTimeSpanType;
    /**
     * Market Code associated with the Price Details.
     * @type {string}
     * @memberof CateringPackagePricingType
     */
    marketCode?: string;
    /**
     * Defines if web booking is allowed.
     * @type {boolean}
     * @memberof CateringPackagePricingType
     */
    webBookable?: boolean;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof CateringPackagePricingType
     */
    totalPrice?: CurrencyAmountType;
    /**
     * Defines if Flat Rate is applicable.
     * @type {boolean}
     * @memberof CateringPackagePricingType
     */
    flatRate?: boolean;
    /**
     * Minimum Attendees.
     * @type {number}
     * @memberof CateringPackagePricingType
     */
    minAttendees?: number;
    /**
     * Maximum Attendees.
     * @type {number}
     * @memberof CateringPackagePricingType
     */
    maxAttendees?: number;
    /**
     * Collection of multiple Revenue Details associated with a particular Catering Package Price Code.
     * @type {Array<CateringPackageRevenueType>}
     * @memberof CateringPackagePricingType
     */
    revenueDetails?: Array<CateringPackageRevenueType>;
    /**
     * Collection of configured Booking Types for the package property.
     * @type {string}
     * @memberof CateringPackagePricingType
     */
    bookingType?: string;
}
/**
 * Check if a given object implements the CateringPackagePricingType interface.
 */
export declare function instanceOfCateringPackagePricingType(value: object): boolean;
export declare function CateringPackagePricingTypeFromJSON(json: any): CateringPackagePricingType;
export declare function CateringPackagePricingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CateringPackagePricingType;
export declare function CateringPackagePricingTypeToJSON(value?: CateringPackagePricingType | null): any;
