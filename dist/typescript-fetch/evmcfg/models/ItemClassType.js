"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemClassTypeToJSON = exports.ItemClassTypeFromJSONTyped = exports.ItemClassTypeFromJSON = exports.instanceOfItemClassType = void 0;
const runtime_1 = require("../runtime");
const ItemClassTypeType_1 = require("./ItemClassTypeType");
const TranslationTextType200_1 = require("./TranslationTextType200");
/**
 * Check if a given object implements the ItemClassType interface.
 */
function instanceOfItemClassType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfItemClassType = instanceOfItemClassType;
function ItemClassTypeFromJSON(json) {
    return ItemClassTypeFromJSONTyped(json, false);
}
exports.ItemClassTypeFromJSON = ItemClassTypeFromJSON;
function ItemClassTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType200_1.TranslationTextType200FromJSON)(json['description']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : (0, ItemClassTypeType_1.ItemClassTypeTypeFromJSON)(json['type']),
        'classId': !(0, runtime_1.exists)(json, 'classId') ? undefined : json['classId'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'eventTypes': !(0, runtime_1.exists)(json, 'eventTypes') ? undefined : json['eventTypes'],
        'departments': !(0, runtime_1.exists)(json, 'departments') ? undefined : json['departments'],
        'discountable': !(0, runtime_1.exists)(json, 'discountable') ? undefined : json['discountable'],
        'webBookable': !(0, runtime_1.exists)(json, 'webBookable') ? undefined : json['webBookable'],
        'overrideWarnings': !(0, runtime_1.exists)(json, 'overrideWarnings') ? undefined : json['overrideWarnings'],
        'discountOverrideWarnings': !(0, runtime_1.exists)(json, 'discountOverrideWarnings') ? undefined : json['discountOverrideWarnings'],
    };
}
exports.ItemClassTypeFromJSONTyped = ItemClassTypeFromJSONTyped;
function ItemClassTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'code': value.code,
        'description': (0, TranslationTextType200_1.TranslationTextType200ToJSON)(value.description),
        'type': (0, ItemClassTypeType_1.ItemClassTypeTypeToJSON)(value.type),
        'classId': value.classId,
        'displaySequence': value.displaySequence,
        'eventTypes': value.eventTypes,
        'departments': value.departments,
        'discountable': value.discountable,
        'webBookable': value.webBookable,
        'overrideWarnings': value.overrideWarnings,
        'discountOverrideWarnings': value.discountOverrideWarnings,
    };
}
exports.ItemClassTypeToJSON = ItemClassTypeToJSON;
