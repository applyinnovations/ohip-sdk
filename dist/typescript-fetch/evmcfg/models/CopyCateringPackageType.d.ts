/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TranslationTextType200 } from './TranslationTextType200';
import type { WarningType } from './WarningType';
/**
 * Request object for Copying Catering Package/Template.
 * @export
 * @interface CopyCateringPackageType
 */
export interface CopyCateringPackageType {
    /**
     * Code associated with the newly copied Catering Package/template.
     * @type {string}
     * @memberof CopyCateringPackageType
     */
    code?: string;
    /**
     *
     * @type {TranslationTextType200}
     * @memberof CopyCateringPackageType
     */
    translatableDescription?: TranslationTextType200;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof CopyCateringPackageType
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the CopyCateringPackageType interface.
 */
export declare function instanceOfCopyCateringPackageType(value: object): boolean;
export declare function CopyCateringPackageTypeFromJSON(json: any): CopyCateringPackageType;
export declare function CopyCateringPackageTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyCateringPackageType;
export declare function CopyCateringPackageTypeToJSON(value?: CopyCateringPackageType | null): any;
