/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TimeWindowType } from './TimeWindowType';
import type { TranslationTextType50 } from './TranslationTextType50';
/**
 * Representation of event record type.
 * @export
 * @interface EventTypeConfigType
 */
export interface EventTypeConfigType {
    /**
     * Indicates if Event Type is coverable or not.
     * @type {boolean}
     * @memberof EventTypeConfigType
     */
    coverable?: boolean;
    /**
     * Description to elaborate the Event Code Type.
     * @type {string}
     * @memberof EventTypeConfigType
     */
    description?: string;
    /**
     * Code Field Value belongs to the Event Type.
     * @type {string}
     * @memberof EventTypeConfigType
     */
    eventTypeCode?: string;
    /**
     * Determines the event type status as active or inactive
     * @type {boolean}
     * @memberof EventTypeConfigType
     */
    inactive?: boolean;
    /**
     * Meal type associated with the event type.
     * @type {string}
     * @memberof EventTypeConfigType
     */
    mealType?: string;
    /**
     * The sequence number of the event.
     * @type {number}
     * @memberof EventTypeConfigType
     */
    sequence?: number;
    /**
     *
     * @type {TimeWindowType}
     * @memberof EventTypeConfigType
     */
    timeWindow?: TimeWindowType;
    /**
     *
     * @type {TranslationTextType50}
     * @memberof EventTypeConfigType
     */
    translatableDescription?: TranslationTextType50;
    /**
     * Defines if web booking is allowed or not.
     * @type {boolean}
     * @memberof EventTypeConfigType
     */
    webBookable?: boolean;
}
/**
 * Check if a given object implements the EventTypeConfigType interface.
 */
export declare function instanceOfEventTypeConfigType(value: object): boolean;
export declare function EventTypeConfigTypeFromJSON(json: any): EventTypeConfigType;
export declare function EventTypeConfigTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventTypeConfigType;
export declare function EventTypeConfigTypeToJSON(value?: EventTypeConfigType | null): any;
