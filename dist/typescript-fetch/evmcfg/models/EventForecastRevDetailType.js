"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventForecastRevDetailTypeToJSON = exports.EventForecastRevDetailTypeFromJSONTyped = exports.EventForecastRevDetailTypeFromJSON = exports.instanceOfEventForecastRevDetailType = void 0;
const runtime_1 = require("../runtime");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const ForecastRevenueAmountTypeType_1 = require("./ForecastRevenueAmountTypeType");
/**
 * Check if a given object implements the EventForecastRevDetailType interface.
 */
function instanceOfEventForecastRevDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEventForecastRevDetailType = instanceOfEventForecastRevDetailType;
function EventForecastRevDetailTypeFromJSON(json) {
    return EventForecastRevDetailTypeFromJSONTyped(json, false);
}
exports.EventForecastRevDetailTypeFromJSON = EventForecastRevDetailTypeFromJSON;
function EventForecastRevDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'amountType': !(0, runtime_1.exists)(json, 'amountType') ? undefined : (0, ForecastRevenueAmountTypeType_1.ForecastRevenueAmountTypeTypeFromJSON)(json['amountType']),
        'revenueType': !(0, runtime_1.exists)(json, 'revenueType') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['revenueType']),
    };
}
exports.EventForecastRevDetailTypeFromJSONTyped = EventForecastRevDetailTypeFromJSONTyped;
function EventForecastRevDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'amountType': (0, ForecastRevenueAmountTypeType_1.ForecastRevenueAmountTypeTypeToJSON)(value.amountType),
        'revenueType': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.revenueType),
    };
}
exports.EventForecastRevDetailTypeToJSON = EventForecastRevDetailTypeToJSON;
