"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseFunctionSpaceRateTypeToJSON = exports.BaseFunctionSpaceRateTypeFromJSONTyped = exports.BaseFunctionSpaceRateTypeFromJSON = exports.instanceOfBaseFunctionSpaceRateType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const FunctionSpaceRateTypeType_1 = require("./FunctionSpaceRateTypeType");
const TranslationTextType200_1 = require("./TranslationTextType200");
/**
 * Check if a given object implements the BaseFunctionSpaceRateType interface.
 */
function instanceOfBaseFunctionSpaceRateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBaseFunctionSpaceRateType = instanceOfBaseFunctionSpaceRateType;
function BaseFunctionSpaceRateTypeFromJSON(json) {
    return BaseFunctionSpaceRateTypeFromJSONTyped(json, false);
}
exports.BaseFunctionSpaceRateTypeFromJSON = BaseFunctionSpaceRateTypeFromJSON;
function BaseFunctionSpaceRateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'codeId': !(0, runtime_1.exists)(json, 'codeId') ? undefined : json['codeId'],
        '_default': !(0, runtime_1.exists)(json, 'default') ? undefined : json['default'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'hourly': !(0, runtime_1.exists)(json, 'hourly') ? undefined : json['hourly'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'minimunRevenue': !(0, runtime_1.exists)(json, 'minimunRevenue') ? undefined : json['minimunRevenue'],
        'rateType': !(0, runtime_1.exists)(json, 'rateType') ? undefined : (0, FunctionSpaceRateTypeType_1.FunctionSpaceRateTypeTypeFromJSON)(json['rateType']),
        'rentAmount': !(0, runtime_1.exists)(json, 'rentAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['rentAmount']),
        'revenueType': !(0, runtime_1.exists)(json, 'revenueType') ? undefined : json['revenueType'],
        'translatableDescription': !(0, runtime_1.exists)(json, 'translatableDescription') ? undefined : (0, TranslationTextType200_1.TranslationTextType200FromJSON)(json['translatableDescription']),
    };
}
exports.BaseFunctionSpaceRateTypeFromJSONTyped = BaseFunctionSpaceRateTypeFromJSONTyped;
function BaseFunctionSpaceRateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'codeId': value.codeId,
        'default': value._default,
        'displaySequence': value.displaySequence,
        'hourly': value.hourly,
        'inactive': value.inactive,
        'minimunRevenue': value.minimunRevenue,
        'rateType': (0, FunctionSpaceRateTypeType_1.FunctionSpaceRateTypeTypeToJSON)(value.rateType),
        'rentAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.rentAmount),
        'revenueType': value.revenueType,
        'translatableDescription': (0, TranslationTextType200_1.TranslationTextType200ToJSON)(value.translatableDescription),
    };
}
exports.BaseFunctionSpaceRateTypeToJSON = BaseFunctionSpaceRateTypeToJSON;
