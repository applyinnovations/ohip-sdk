"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyInventoryItemsTypeToJSON = exports.CopyInventoryItemsTypeFromJSONTyped = exports.CopyInventoryItemsTypeFromJSON = exports.instanceOfCopyInventoryItemsType = void 0;
const runtime_1 = require("../runtime");
const CopyInventoryItemType_1 = require("./CopyInventoryItemType");
/**
 * Check if a given object implements the CopyInventoryItemsType interface.
 */
function instanceOfCopyInventoryItemsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyInventoryItemsType = instanceOfCopyInventoryItemsType;
function CopyInventoryItemsTypeFromJSON(json) {
    return CopyInventoryItemsTypeFromJSONTyped(json, false);
}
exports.CopyInventoryItemsTypeFromJSON = CopyInventoryItemsTypeFromJSON;
function CopyInventoryItemsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'copyInventoryItem': !(0, runtime_1.exists)(json, 'copyInventoryItem') ? undefined : (json['copyInventoryItem'].map(CopyInventoryItemType_1.CopyInventoryItemTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'includeRates': !(0, runtime_1.exists)(json, 'includeRates') ? undefined : json['includeRates'],
        'includeAttributes': !(0, runtime_1.exists)(json, 'includeAttributes') ? undefined : json['includeAttributes'],
        'includeVendors': !(0, runtime_1.exists)(json, 'includeVendors') ? undefined : json['includeVendors'],
    };
}
exports.CopyInventoryItemsTypeFromJSONTyped = CopyInventoryItemsTypeFromJSONTyped;
function CopyInventoryItemsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'copyInventoryItem': value.copyInventoryItem === undefined ? undefined : (value.copyInventoryItem.map(CopyInventoryItemType_1.CopyInventoryItemTypeToJSON)),
        'hotelId': value.hotelId,
        'includeRates': value.includeRates,
        'includeAttributes': value.includeAttributes,
        'includeVendors': value.includeVendors,
    };
}
exports.CopyInventoryItemsTypeToJSON = CopyInventoryItemsTypeToJSON;
