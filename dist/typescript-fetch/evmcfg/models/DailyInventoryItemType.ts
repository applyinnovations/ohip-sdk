/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemQuantityDateType } from './ItemQuantityDateType';
import {
    ItemQuantityDateTypeFromJSON,
    ItemQuantityDateTypeFromJSONTyped,
    ItemQuantityDateTypeToJSON,
} from './ItemQuantityDateType';
import type { TranslationTextType200 } from './TranslationTextType200';
import {
    TranslationTextType200FromJSON,
    TranslationTextType200FromJSONTyped,
    TranslationTextType200ToJSON,
} from './TranslationTextType200';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Details of Daily Inventory Items.
 * @export
 * @interface DailyInventoryItemType
 */
export interface DailyInventoryItemType {
    /**
     * List of Daily quantity for Item by date/dates.
     * @type {Array<ItemQuantityDateType>}
     * @memberof DailyInventoryItemType
     */
    dailyItemQuantityByDate?: Array<ItemQuantityDateType>;
    /**
     * The Hotel code which the daily item belongs to.
     * @type {string}
     * @memberof DailyInventoryItemType
     */
    hotelId?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof DailyInventoryItemType
     */
    itemClassId?: UniqueIDType;
    /**
     * The Description of the Daily Item from Inventory.
     * @type {string}
     * @memberof DailyInventoryItemType
     */
    itemDescription?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof DailyInventoryItemType
     */
    itemId?: UniqueIDType;
    /**
     * 
     * @type {TranslationTextType200}
     * @memberof DailyInventoryItemType
     */
    itemName?: TranslationTextType200;
    /**
     * Item quantity in Stock of the Daily Item from Inventory.
     * @type {number}
     * @memberof DailyInventoryItemType
     */
    quantityInStock?: number;
}

/**
 * Check if a given object implements the DailyInventoryItemType interface.
 */
export function instanceOfDailyInventoryItemType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DailyInventoryItemTypeFromJSON(json: any): DailyInventoryItemType {
    return DailyInventoryItemTypeFromJSONTyped(json, false);
}

export function DailyInventoryItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DailyInventoryItemType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyItemQuantityByDate': !exists(json, 'dailyItemQuantityByDate') ? undefined : ((json['dailyItemQuantityByDate'] as Array<any>).map(ItemQuantityDateTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'itemClassId': !exists(json, 'itemClassId') ? undefined : UniqueIDTypeFromJSON(json['itemClassId']),
        'itemDescription': !exists(json, 'itemDescription') ? undefined : json['itemDescription'],
        'itemId': !exists(json, 'itemId') ? undefined : UniqueIDTypeFromJSON(json['itemId']),
        'itemName': !exists(json, 'itemName') ? undefined : TranslationTextType200FromJSON(json['itemName']),
        'quantityInStock': !exists(json, 'quantityInStock') ? undefined : json['quantityInStock'],
    };
}

export function DailyInventoryItemTypeToJSON(value?: DailyInventoryItemType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dailyItemQuantityByDate': value.dailyItemQuantityByDate === undefined ? undefined : ((value.dailyItemQuantityByDate as Array<any>).map(ItemQuantityDateTypeToJSON)),
        'hotelId': value.hotelId,
        'itemClassId': UniqueIDTypeToJSON(value.itemClassId),
        'itemDescription': value.itemDescription,
        'itemId': UniqueIDTypeToJSON(value.itemId),
        'itemName': TranslationTextType200ToJSON(value.itemName),
        'quantityInStock': value.quantityInStock,
    };
}

