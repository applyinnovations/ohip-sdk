/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DateRangeType } from './DateRangeType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Collection of Event Forecast details that needs to be copied.
 * @export
 * @interface EventForecastsListType
 */
export interface EventForecastsListType {
    /**
     * Property from which Code is to be copied.
     * @type {string}
     * @memberof EventForecastsListType
     */
    sourceHotelCode?: string;
    /**
     * Property to which configuration code type to be copied to.
     * @type {string}
     * @memberof EventForecastsListType
     */
    targetHotelCode?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof EventForecastsListType
     */
    sourceForecastId?: UniqueIDType;
    /**
     * Source Event Type from which code is to be copied from.
     * @type {string}
     * @memberof EventForecastsListType
     */
    sourceEventType?: string;
    /**
     * Event Type will be copied From.
     * @type {string}
     * @memberof EventForecastsListType
     */
    copyEventTypeAs?: string;
    /**
     *
     * @type {DateRangeType}
     * @memberof EventForecastsListType
     */
    copyDateRangeAs?: DateRangeType;
    /**
     * Copy Market code as.
     * @type {string}
     * @memberof EventForecastsListType
     */
    copyMarketCodeAs?: string;
    /**
     * Copy Booking Type as.
     * @type {string}
     * @memberof EventForecastsListType
     */
    copyBookingTypeAs?: string;
}
/**
 * Check if a given object implements the EventForecastsListType interface.
 */
export declare function instanceOfEventForecastsListType(value: object): boolean;
export declare function EventForecastsListTypeFromJSON(json: any): EventForecastsListType;
export declare function EventForecastsListTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventForecastsListType;
export declare function EventForecastsListTypeToJSON(value?: EventForecastsListType | null): any;
