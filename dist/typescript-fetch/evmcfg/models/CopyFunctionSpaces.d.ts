/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CopyFunctionSpaceType } from './CopyFunctionSpaceType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Request object for creating multiple function spaces based on an existing function space. New function space may have different name, display name on function dairy, order of display and combo elements. The rest of the details will be copied from the source function space.
 * @export
 * @interface CopyFunctionSpaces
 */
export interface CopyFunctionSpaces {
    /**
     *
     * @type {CopyFunctionSpaceType}
     * @memberof CopyFunctionSpaces
     */
    copyFunctionSpace?: CopyFunctionSpaceType;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof CopyFunctionSpaces
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof CopyFunctionSpaces
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the CopyFunctionSpaces interface.
 */
export declare function instanceOfCopyFunctionSpaces(value: object): boolean;
export declare function CopyFunctionSpacesFromJSON(json: any): CopyFunctionSpaces;
export declare function CopyFunctionSpacesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyFunctionSpaces;
export declare function CopyFunctionSpacesToJSON(value?: CopyFunctionSpaces | null): any;
