/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TranslationTextType2000 } from './TranslationTextType2000';
/**
 * The summary information for a function space.
 * @export
 * @interface FunctionSpaceSummaryType
 */
export interface FunctionSpaceSummaryType {
    /**
     * Hotel Code where function space belongs to.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    hotelId?: string;
    /**
     * Room Code of the Function Space.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    roomCode?: string;
    /**
     * Room Type of the Function Space.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    roomType?: string;
    /**
     * Indicates whether the room type is psuedo.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    psuedoRoomType?: boolean;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof FunctionSpaceSummaryType
     */
    spaceName?: TranslationTextType2000;
    /**
     * The Short Name of the Function Space.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    shortName?: string;
    /**
     * The floor on which the Function Space is located.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    floor?: string;
    /**
     * The Type which the Function Space belongs to.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    spaceType?: string;
    /**
     * The building on which the Function Space is located.
     * @type {string}
     * @memberof FunctionSpaceSummaryType
     */
    location?: string;
    /**
     * Indicate if the function space is a combination room.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    combo?: boolean;
    /**
     * Indicate if the function space will be shown in the Function Diary by default.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    element?: boolean;
    /**
     * Indicate if the function space is shareable.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    shareable?: boolean;
    /**
     * Indicate if the function space is forced to have alternate function spaces in case the function space becomes unvailable.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    forceAlternate?: boolean;
    /**
     * Indicates whether the Function Space is web bookable or not.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    webBookable?: boolean;
    /**
     * Indicates whether the Function Space is web viewable or not.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    webViewable?: boolean;
    /**
     * The time in minutes that the function space would be considered at 100% utilization.
     * @type {number}
     * @memberof FunctionSpaceSummaryType
     */
    fullUtilizationTime?: number;
    /**
     * Indicates whether the function space has handicap facilities.
     * @type {boolean}
     * @memberof FunctionSpaceSummaryType
     */
    handicapFacilities?: boolean;
    /**
     * The first custom order for sorting the function space display.
     * @type {number}
     * @memberof FunctionSpaceSummaryType
     */
    orderBy1?: number;
    /**
     * The second custom order for sorting the function space display.
     * @type {number}
     * @memberof FunctionSpaceSummaryType
     */
    orderBy2?: number;
    /**
     * The third custom order for sorting the function space display.
     * @type {number}
     * @memberof FunctionSpaceSummaryType
     */
    orderBy3?: number;
}
/**
 * Check if a given object implements the FunctionSpaceSummaryType interface.
 */
export declare function instanceOfFunctionSpaceSummaryType(value: object): boolean;
export declare function FunctionSpaceSummaryTypeFromJSON(json: any): FunctionSpaceSummaryType;
export declare function FunctionSpaceSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FunctionSpaceSummaryType;
export declare function FunctionSpaceSummaryTypeToJSON(value?: FunctionSpaceSummaryType | null): any;
