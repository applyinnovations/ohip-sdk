"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyMenuItemClassesTypeToJSON = exports.CopyMenuItemClassesTypeFromJSONTyped = exports.CopyMenuItemClassesTypeFromJSON = exports.instanceOfCopyMenuItemClassesType = void 0;
const runtime_1 = require("../runtime");
const CopyMenuItemClassesTypeCopyInstructions_1 = require("./CopyMenuItemClassesTypeCopyInstructions");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CopyMenuItemClassesType interface.
 */
function instanceOfCopyMenuItemClassesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyMenuItemClassesType = instanceOfCopyMenuItemClassesType;
function CopyMenuItemClassesTypeFromJSON(json) {
    return CopyMenuItemClassesTypeFromJSONTyped(json, false);
}
exports.CopyMenuItemClassesTypeFromJSON = CopyMenuItemClassesTypeFromJSON;
function CopyMenuItemClassesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'sourceHotelCode': !(0, runtime_1.exists)(json, 'sourceHotelCode') ? undefined : json['sourceHotelCode'],
        'itemClasses': !(0, runtime_1.exists)(json, 'itemClasses') ? undefined : (json['itemClasses'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'targetHotelCodes': !(0, runtime_1.exists)(json, 'targetHotelCodes') ? undefined : json['targetHotelCodes'],
        'copyInstructions': !(0, runtime_1.exists)(json, 'copyInstructions') ? undefined : (0, CopyMenuItemClassesTypeCopyInstructions_1.CopyMenuItemClassesTypeCopyInstructionsFromJSON)(json['copyInstructions']),
    };
}
exports.CopyMenuItemClassesTypeFromJSONTyped = CopyMenuItemClassesTypeFromJSONTyped;
function CopyMenuItemClassesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'sourceHotelCode': value.sourceHotelCode,
        'itemClasses': value.itemClasses === undefined ? undefined : (value.itemClasses.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'targetHotelCodes': value.targetHotelCodes,
        'copyInstructions': (0, CopyMenuItemClassesTypeCopyInstructions_1.CopyMenuItemClassesTypeCopyInstructionsToJSON)(value.copyInstructions),
    };
}
exports.CopyMenuItemClassesTypeToJSON = CopyMenuItemClassesTypeToJSON;
