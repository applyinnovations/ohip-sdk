"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CateringPackageEventResourceTypeToJSON = exports.CateringPackageEventResourceTypeFromJSONTyped = exports.CateringPackageEventResourceTypeFromJSON = exports.instanceOfCateringPackageEventResourceType = void 0;
const runtime_1 = require("../runtime");
const CateringPackageResourceNoteListType_1 = require("./CateringPackageResourceNoteListType");
const CodeListType_1 = require("./CodeListType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const EventResourceType_1 = require("./EventResourceType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CateringPackageEventResourceType interface.
 */
function instanceOfCateringPackageEventResourceType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCateringPackageEventResourceType = instanceOfCateringPackageEventResourceType;
function CateringPackageEventResourceTypeFromJSON(json) {
    return CateringPackageEventResourceTypeFromJSONTyped(json, false);
}
exports.CateringPackageEventResourceTypeFromJSON = CateringPackageEventResourceTypeFromJSON;
function CateringPackageEventResourceTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'isShareable': !(0, runtime_1.exists)(json, 'isShareable') ? undefined : json['isShareable'],
        'itemAttribute': !(0, runtime_1.exists)(json, 'itemAttribute') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['itemAttribute']),
        'itemRate': !(0, runtime_1.exists)(json, 'itemRate') ? undefined : json['itemRate'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'orderBy': !(0, runtime_1.exists)(json, 'orderBy') ? undefined : json['orderBy'],
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['price']),
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
        'resourceId': !(0, runtime_1.exists)(json, 'resourceId') ? undefined : json['resourceId'],
        'resourceNotes': !(0, runtime_1.exists)(json, 'resourceNotes') ? undefined : (0, CateringPackageResourceNoteListType_1.CateringPackageResourceNoteListTypeFromJSON)(json['resourceNotes']),
        'revenueTypes': !(0, runtime_1.exists)(json, 'revenueTypes') ? undefined : (0, CodeListType_1.CodeListTypeFromJSON)(json['revenueTypes']),
        'roomRate': !(0, runtime_1.exists)(json, 'roomRate') ? undefined : json['roomRate'],
        'roomSetup': !(0, runtime_1.exists)(json, 'roomSetup') ? undefined : json['roomSetup'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : (0, EventResourceType_1.EventResourceTypeFromJSON)(json['type']),
    };
}
exports.CateringPackageEventResourceTypeFromJSONTyped = CateringPackageEventResourceTypeFromJSONTyped;
function CateringPackageEventResourceTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'isShareable': value.isShareable,
        'itemAttribute': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.itemAttribute),
        'itemRate': value.itemRate,
        'name': value.name,
        'orderBy': value.orderBy,
        'price': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.price),
        'quantity': value.quantity,
        'resourceId': value.resourceId,
        'resourceNotes': (0, CateringPackageResourceNoteListType_1.CateringPackageResourceNoteListTypeToJSON)(value.resourceNotes),
        'revenueTypes': (0, CodeListType_1.CodeListTypeToJSON)(value.revenueTypes),
        'roomRate': value.roomRate,
        'roomSetup': value.roomSetup,
        'type': (0, EventResourceType_1.EventResourceTypeToJSON)(value.type),
    };
}
exports.CateringPackageEventResourceTypeToJSON = CateringPackageEventResourceTypeToJSON;
