"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemRateTypeToJSON = exports.ItemRateTypeFromJSONTyped = exports.ItemRateTypeFromJSON = exports.instanceOfItemRateType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ItemRateType interface.
 */
function instanceOfItemRateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfItemRateType = instanceOfItemRateType;
function ItemRateTypeFromJSON(json) {
    return ItemRateTypeFromJSONTyped(json, false);
}
exports.ItemRateTypeFromJSON = ItemRateTypeFromJSON;
function ItemRateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        '_default': !(0, runtime_1.exists)(json, 'default') ? undefined : json['default'],
        'hourly': !(0, runtime_1.exists)(json, 'hourly') ? undefined : json['hourly'],
        'itemRateCode': !(0, runtime_1.exists)(json, 'itemRateCode') ? undefined : json['itemRateCode'],
        'itemRateId': !(0, runtime_1.exists)(json, 'itemRateId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['itemRateId']),
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['price']),
    };
}
exports.ItemRateTypeFromJSONTyped = ItemRateTypeFromJSONTyped;
function ItemRateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'default': value._default,
        'hourly': value.hourly,
        'itemRateCode': value.itemRateCode,
        'itemRateId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.itemRateId),
        'name': value.name,
        'price': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.price),
    };
}
exports.ItemRateTypeToJSON = ItemRateTypeToJSON;
