"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryItemTemplateItemTypeToJSON = exports.InventoryItemTemplateItemTypeFromJSONTyped = exports.InventoryItemTemplateItemTypeFromJSON = exports.instanceOfInventoryItemTemplateItemType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the InventoryItemTemplateItemType interface.
 */
function instanceOfInventoryItemTemplateItemType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfInventoryItemTemplateItemType = instanceOfInventoryItemTemplateItemType;
function InventoryItemTemplateItemTypeFromJSON(json) {
    return InventoryItemTemplateItemTypeFromJSONTyped(json, false);
}
exports.InventoryItemTemplateItemTypeFromJSON = InventoryItemTemplateItemTypeFromJSON;
function InventoryItemTemplateItemTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'articleNumber': !(0, runtime_1.exists)(json, 'articleNumber') ? undefined : json['articleNumber'],
        'attributeId': !(0, runtime_1.exists)(json, 'attributeId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['attributeId']),
        'attributeName': !(0, runtime_1.exists)(json, 'attributeName') ? undefined : json['attributeName'],
        'classSequence': !(0, runtime_1.exists)(json, 'classSequence') ? undefined : json['classSequence'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['id']),
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
        'rateCode': !(0, runtime_1.exists)(json, 'rateCode') ? undefined : json['rateCode'],
        'rateId': !(0, runtime_1.exists)(json, 'rateId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['rateId']),
        'rateName': !(0, runtime_1.exists)(json, 'rateName') ? undefined : json['rateName'],
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
    };
}
exports.InventoryItemTemplateItemTypeFromJSONTyped = InventoryItemTemplateItemTypeFromJSONTyped;
function InventoryItemTemplateItemTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'articleNumber': value.articleNumber,
        'attributeId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.attributeId),
        'attributeName': value.attributeName,
        'classSequence': value.classSequence,
        'id': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.id),
        'name': value.name,
        'quantity': value.quantity,
        'rateCode': value.rateCode,
        'rateId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.rateId),
        'rateName': value.rateName,
        'sequence': value.sequence,
    };
}
exports.InventoryItemTemplateItemTypeToJSON = InventoryItemTemplateItemTypeToJSON;
