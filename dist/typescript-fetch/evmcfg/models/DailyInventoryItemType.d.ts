/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ItemQuantityDateType } from './ItemQuantityDateType';
import type { TranslationTextType200 } from './TranslationTextType200';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Details of Daily Inventory Items.
 * @export
 * @interface DailyInventoryItemType
 */
export interface DailyInventoryItemType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof DailyInventoryItemType
     */
    itemId?: UniqueIDType;
    /**
     *
     * @type {TranslationTextType200}
     * @memberof DailyInventoryItemType
     */
    itemName?: TranslationTextType200;
    /**
     * The Description of the Daily Item from Inventory.
     * @type {string}
     * @memberof DailyInventoryItemType
     */
    itemDescription?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof DailyInventoryItemType
     */
    itemClassId?: UniqueIDType;
    /**
     * Item quantity in Stock of the Daily Item from Inventory.
     * @type {number}
     * @memberof DailyInventoryItemType
     */
    quantityInStock?: number;
    /**
     * List of Daily quantity for Item by date/dates.
     * @type {Array<ItemQuantityDateType>}
     * @memberof DailyInventoryItemType
     */
    dailyItemQuantityByDate?: Array<ItemQuantityDateType>;
    /**
     * The Hotel code which the daily item belongs to.
     * @type {string}
     * @memberof DailyInventoryItemType
     */
    hotelId?: string;
}
/**
 * Check if a given object implements the DailyInventoryItemType interface.
 */
export declare function instanceOfDailyInventoryItemType(value: object): boolean;
export declare function DailyInventoryItemTypeFromJSON(json: any): DailyInventoryItemType;
export declare function DailyInventoryItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DailyInventoryItemType;
export declare function DailyInventoryItemTypeToJSON(value?: DailyInventoryItemType | null): any;
