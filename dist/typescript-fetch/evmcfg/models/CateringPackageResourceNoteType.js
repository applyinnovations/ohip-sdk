"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CateringPackageResourceNoteTypeToJSON = exports.CateringPackageResourceNoteTypeFromJSONTyped = exports.CateringPackageResourceNoteTypeFromJSON = exports.instanceOfCateringPackageResourceNoteType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CateringPackageResourceNoteType interface.
 */
function instanceOfCateringPackageResourceNoteType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCateringPackageResourceNoteType = instanceOfCateringPackageResourceNoteType;
function CateringPackageResourceNoteTypeFromJSON(json) {
    return CateringPackageResourceNoteTypeFromJSONTyped(json, false);
}
exports.CateringPackageResourceNoteTypeFromJSON = CateringPackageResourceNoteTypeFromJSON;
function CateringPackageResourceNoteTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['id']),
        'title': !(0, runtime_1.exists)(json, 'title') ? undefined : json['title'],
        'comment': !(0, runtime_1.exists)(json, 'comment') ? undefined : json['comment'],
        'internal': !(0, runtime_1.exists)(json, 'internal') ? undefined : json['internal'],
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !(0, runtime_1.exists)(json, 'purgeDate') ? undefined : json['purgeDate'],
    };
}
exports.CateringPackageResourceNoteTypeFromJSONTyped = CateringPackageResourceNoteTypeFromJSONTyped;
function CateringPackageResourceNoteTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.id),
        'title': value.title,
        'comment': value.comment,
        'internal': value.internal,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate,
    };
}
exports.CateringPackageResourceNoteTypeToJSON = CateringPackageResourceNoteTypeToJSON;
