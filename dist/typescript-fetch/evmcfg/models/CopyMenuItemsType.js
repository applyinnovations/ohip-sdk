"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyMenuItemsTypeToJSON = exports.CopyMenuItemsTypeFromJSONTyped = exports.CopyMenuItemsTypeFromJSON = exports.instanceOfCopyMenuItemsType = void 0;
const runtime_1 = require("../runtime");
const CateringMenuItemClassType_1 = require("./CateringMenuItemClassType");
const CateringMenuItemType_1 = require("./CateringMenuItemType");
/**
 * Check if a given object implements the CopyMenuItemsType interface.
 */
function instanceOfCopyMenuItemsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyMenuItemsType = instanceOfCopyMenuItemsType;
function CopyMenuItemsTypeFromJSON(json) {
    return CopyMenuItemsTypeFromJSONTyped(json, false);
}
exports.CopyMenuItemsTypeFromJSON = CopyMenuItemsTypeFromJSON;
function CopyMenuItemsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'menuItemClassList': !(0, runtime_1.exists)(json, 'menuItemClassList') ? undefined : (json['menuItemClassList'].map(CateringMenuItemClassType_1.CateringMenuItemClassTypeFromJSON)),
        'menuItemList': !(0, runtime_1.exists)(json, 'menuItemList') ? undefined : (json['menuItemList'].map(CateringMenuItemType_1.CateringMenuItemTypeFromJSON)),
    };
}
exports.CopyMenuItemsTypeFromJSONTyped = CopyMenuItemsTypeFromJSONTyped;
function CopyMenuItemsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'menuItemClassList': value.menuItemClassList === undefined ? undefined : (value.menuItemClassList.map(CateringMenuItemClassType_1.CateringMenuItemClassTypeToJSON)),
        'menuItemList': value.menuItemList === undefined ? undefined : (value.menuItemList.map(CateringMenuItemType_1.CateringMenuItemTypeToJSON)),
    };
}
exports.CopyMenuItemsTypeToJSON = CopyMenuItemsTypeToJSON;
