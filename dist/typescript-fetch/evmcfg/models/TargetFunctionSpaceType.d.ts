/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Function Space details that may be different from the source function space. If any of Space Name, Short Name, Custom Orders and Combo Element types are not passed together with this type, it means that it is expected that these would be copied from source function space
 * @export
 * @interface TargetFunctionSpaceType
 */
export interface TargetFunctionSpaceType {
    /**
     * The Name of the Function Space.
     * @type {string}
     * @memberof TargetFunctionSpaceType
     */
    spaceName?: string;
    /**
     * The Short Name of the Function Space.
     * @type {string}
     * @memberof TargetFunctionSpaceType
     */
    shortName?: string;
    /**
     * The first custom order for sorting the function space display.
     * @type {number}
     * @memberof TargetFunctionSpaceType
     */
    orderBy1?: number;
    /**
     * The second custom order for sorting the function space display.
     * @type {number}
     * @memberof TargetFunctionSpaceType
     */
    orderBy2?: number;
    /**
     * The third custom order for sorting the function space display.
     * @type {number}
     * @memberof TargetFunctionSpaceType
     */
    orderBy3?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof TargetFunctionSpaceType
     */
    comboElements?: Array<string>;
    /**
     * Room number of the new function space to be created.
     * @type {string}
     * @memberof TargetFunctionSpaceType
     */
    targetRoomNumber?: string;
}
/**
 * Check if a given object implements the TargetFunctionSpaceType interface.
 */
export declare function instanceOfTargetFunctionSpaceType(value: object): boolean;
export declare function TargetFunctionSpaceTypeFromJSON(json: any): TargetFunctionSpaceType;
export declare function TargetFunctionSpaceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetFunctionSpaceType;
export declare function TargetFunctionSpaceTypeToJSON(value?: TargetFunctionSpaceType | null): any;
