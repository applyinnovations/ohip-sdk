/**
 * OPERA Cloud List of Values Management API
 * APIs to cater for List of Value functionality in OPERA Cloud. A List of Values in the OPERA Application can be configured by a property.  Then by using these APIs you can retrieve all configured codes.  As an example, Titles is a configurable ListOfValues.  A hotel can specify what titles they wish to use, and thus fetching the LOV for title, you can view the codes that are configured for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ParametersType } from './ParametersType';
/**
 *
 * @export
 * @interface ItemType
 */
export interface ItemType {
    /**
     *
     * @type {boolean}
     * @memberof ItemType
     */
    active?: boolean;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    code?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    description?: string;
    /**
     *
     * @type {ParametersType}
     * @memberof ItemType
     */
    flexfields?: ParametersType;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ItemType
     */
    shortDescription?: string;
}
/**
 * Check if a given object implements the ItemType interface.
 */
export declare function instanceOfItemType(value: object): boolean;
export declare function ItemTypeFromJSON(json: any): ItemType;
export declare function ItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemType;
export declare function ItemTypeToJSON(value?: ItemType | null): any;
