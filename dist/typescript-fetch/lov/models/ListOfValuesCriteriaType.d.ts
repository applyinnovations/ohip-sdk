/**
 * OPERA Cloud List of Values Management API
 * APIs to cater for List of Value functionality in OPERA Cloud. A List of Values in the OPERA Application can be configured by a property.  Then by using these APIs you can retrieve all configured codes.  As an example, Titles is a configurable ListOfValues.  A hotel can specify what titles they wish to use, and thus fetching the LOV for title, you can view the codes that are configured for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ParameterType } from './ParameterType';
/**
 *
 * @export
 * @interface ListOfValuesCriteriaType
 */
export interface ListOfValuesCriteriaType {
    /**
     * Collection of generic Name-Value-Pair parameters.
     * @type {Array<ParameterType>}
     * @memberof ListOfValuesCriteriaType
     */
    parameters?: Array<ParameterType>;
    /**
     *
     * @type {Array<string>}
     * @memberof ListOfValuesCriteriaType
     */
    itemCodes?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof ListOfValuesCriteriaType
     */
    excludeCodeList?: Array<string>;
    /**
     * The name of the LOV to fetch.
     * @type {string}
     * @memberof ListOfValuesCriteriaType
     */
    lovName?: string;
    /**
     * Only useful for LOVs that support toggle of inactive records inclusion. When set to true, inactive records will be included.
     * @type {boolean}
     * @memberof ListOfValuesCriteriaType
     */
    includeInactive?: boolean;
}
/**
 * Check if a given object implements the ListOfValuesCriteriaType interface.
 */
export declare function instanceOfListOfValuesCriteriaType(value: object): boolean;
export declare function ListOfValuesCriteriaTypeFromJSON(json: any): ListOfValuesCriteriaType;
export declare function ListOfValuesCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListOfValuesCriteriaType;
export declare function ListOfValuesCriteriaTypeToJSON(value?: ListOfValuesCriteriaType | null): any;
