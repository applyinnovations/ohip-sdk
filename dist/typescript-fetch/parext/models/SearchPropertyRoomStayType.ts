/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Availability Extension API
 * APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HotelAvailabilityStatus } from './HotelAvailabilityStatus';
import {
    HotelAvailabilityStatusFromJSON,
    HotelAvailabilityStatusFromJSONTyped,
    HotelAvailabilityStatusToJSON,
} from './HotelAvailabilityStatus';
import type { OfferTotalType } from './OfferTotalType';
import {
    OfferTotalTypeFromJSON,
    OfferTotalTypeFromJSONTyped,
    OfferTotalTypeToJSON,
} from './OfferTotalType';
import type { PropertySearchPropertyInfo } from './PropertySearchPropertyInfo';
import {
    PropertySearchPropertyInfoFromJSON,
    PropertySearchPropertyInfoFromJSONTyped,
    PropertySearchPropertyInfoToJSON,
} from './PropertySearchPropertyInfo';
import type { RoomTagType } from './RoomTagType';
import {
    RoomTagTypeFromJSON,
    RoomTagTypeFromJSONTyped,
    RoomTagTypeToJSON,
} from './RoomTagType';

/**
 * 
 * @export
 * @interface SearchPropertyRoomStayType
 */
export interface SearchPropertyRoomStayType {
    /**
     * 
     * @type {HotelAvailabilityStatus}
     * @memberof SearchPropertyRoomStayType
     */
    availability?: HotelAvailabilityStatus;
    /**
     * 
     * @type {OfferTotalType}
     * @memberof SearchPropertyRoomStayType
     */
    minimumRate?: OfferTotalType;
    /**
     * 
     * @type {PropertySearchPropertyInfo}
     * @memberof SearchPropertyRoomStayType
     */
    propertyInfo?: PropertySearchPropertyInfo;
    /**
     * 
     * @type {string}
     * @memberof SearchPropertyRoomStayType
     */
    roomClass?: string;
    /**
     * The collection of tag and respective room type for which minimum rate is returned.
     * @type {Array<RoomTagType>}
     * @memberof SearchPropertyRoomStayType
     */
    roomTags?: Array<RoomTagType>;
}

/**
 * Check if a given object implements the SearchPropertyRoomStayType interface.
 */
export function instanceOfSearchPropertyRoomStayType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SearchPropertyRoomStayTypeFromJSON(json: any): SearchPropertyRoomStayType {
    return SearchPropertyRoomStayTypeFromJSONTyped(json, false);
}

export function SearchPropertyRoomStayTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchPropertyRoomStayType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'availability': !exists(json, 'availability') ? undefined : HotelAvailabilityStatusFromJSON(json['availability']),
        'minimumRate': !exists(json, 'minimumRate') ? undefined : OfferTotalTypeFromJSON(json['minimumRate']),
        'propertyInfo': !exists(json, 'propertyInfo') ? undefined : PropertySearchPropertyInfoFromJSON(json['propertyInfo']),
        'roomClass': !exists(json, 'roomClass') ? undefined : json['roomClass'],
        'roomTags': !exists(json, 'roomTags') ? undefined : ((json['roomTags'] as Array<any>).map(RoomTagTypeFromJSON)),
    };
}

export function SearchPropertyRoomStayTypeToJSON(value?: SearchPropertyRoomStayType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'availability': HotelAvailabilityStatusToJSON(value.availability),
        'minimumRate': OfferTotalTypeToJSON(value.minimumRate),
        'propertyInfo': PropertySearchPropertyInfoToJSON(value.propertyInfo),
        'roomClass': value.roomClass,
        'roomTags': value.roomTags === undefined ? undefined : ((value.roomTags as Array<any>).map(RoomTagTypeToJSON)),
    };
}

