/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface StayRecordsType
 */
export interface StayRecordsType {
    /**
     * Describes the user defined field 01
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC01?: string;
    /**
     * Describes the user defined field 02
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC02?: string;
    /**
     * Describes the user defined field 03
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC03?: string;
    /**
     * Describes the user defined field 04
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC04?: string;
    /**
     * Describes the user defined field 05
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC05?: string;
    /**
     * Describes the user defined field 06
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC06?: string;
    /**
     * Describes the user defined field 07
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC07?: string;
    /**
     * Describes the user defined field 08
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC08?: string;
    /**
     * Describes the user defined field 09
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC09?: string;
    /**
     * Describes the user defined field 10
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFC10?: string;
    /**
     * Describes the user defined field 01
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFD01?: string;
    /**
     * Describes the user defined field 02
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFD02?: string;
    /**
     * Describes the user defined field 03
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFD03?: string;
    /**
     * Describes the user defined field 04
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFD04?: string;
    /**
     * Describes the user defined field 05
     * @type {string}
     * @memberof StayRecordsType
     */
    uDFD05?: string;
    /**
     * Describes the user defined field 10
     * @type {number}
     * @memberof StayRecordsType
     */
    uDFN01?: number;
    /**
     * Describes the user defined field 10
     * @type {number}
     * @memberof StayRecordsType
     */
    uDFN02?: number;
    /**
     * Describes the user defined field 10
     * @type {number}
     * @memberof StayRecordsType
     */
    uDFN03?: number;
    /**
     * Describes the user defined field 10
     * @type {number}
     * @memberof StayRecordsType
     */
    uDFN04?: number;
    /**
     * Describes the user defined field 10
     * @type {number}
     * @memberof StayRecordsType
     */
    uDFN05?: number;
    /**
     * Describes the number of adults
     * @type {number}
     * @memberof StayRecordsType
     */
    adults?: number;
    /**
     * Specifies the date of arrival
     * @type {string}
     * @memberof StayRecordsType
     */
    arrivalDate?: string;
    /**
     * Specifies the base rate amount
     * @type {number}
     * @memberof StayRecordsType
     */
    baseRateAmount?: number;
    /**
     * Specifies the base rate code
     * @type {string}
     * @memberof StayRecordsType
     */
    baseRateCode?: string;
    /**
     * Specifies the currency code of the base rate
     * @type {string}
     * @memberof StayRecordsType
     */
    baseRateCurrencyCode?: string;
    /**
     * Specifies the block code
     * @type {string}
     * @memberof StayRecordsType
     */
    blockCode?: string;
    /**
     * Specifies the type of room booked.
     * @type {string}
     * @memberof StayRecordsType
     */
    bookedRoomType?: string;
    /**
     * Specifies the date of booking.
     * @type {string}
     * @memberof StayRecordsType
     */
    bookingDate?: string;
    /**
     * Specifies the date of cancellation
     * @type {string}
     * @memberof StayRecordsType
     */
    cancellationDate?: string;
    /**
     * Specifies the channel
     * @type {string}
     * @memberof StayRecordsType
     */
    channel?: string;
    /**
     * specifies the number of children
     * @type {number}
     * @memberof StayRecordsType
     */
    children?: number;
    /**
     * Specifies the id assigned to the company
     * @type {string}
     * @memberof StayRecordsType
     */
    companyId?: string;
    /**
     * Specifies the confirmation leg number
     * @type {number}
     * @memberof StayRecordsType
     */
    confirmationLegNumber?: number;
    /**
     * Specifies the confirmation number
     * @type {string}
     * @memberof StayRecordsType
     */
    confirmationNumber?: string;
    /**
     * Specifies the currency code
     * @type {string}
     * @memberof StayRecordsType
     */
    currencyCode?: string;
    /**
     * Specifies the date of departure
     * @type {string}
     * @memberof StayRecordsType
     */
    departureDate?: string;
    /**
     * Specifies the exchange rate
     * @type {number}
     * @memberof StayRecordsType
     */
    exchangeRate?: number;
    /**
     * Describes the id assigned to an external reservation
     * @type {string}
     * @memberof StayRecordsType
     */
    externalReservationId?: string;
    /**
     * Specifies the id assigned to a group
     * @type {string}
     * @memberof StayRecordsType
     */
    groupId?: string;
    /**
     * Specifies the id assigned to a guest name
     * @type {string}
     * @memberof StayRecordsType
     */
    guestNameId?: string;
    /**
     * Describes if complimentary or not
     * @type {boolean}
     * @memberof StayRecordsType
     */
    complimentary?: boolean;
    /**
     * Describes if it is a primary share
     * @type {boolean}
     * @memberof StayRecordsType
     */
    primaryShare?: boolean;
    /**
     * Specifies the miscellaneous id
     * @type {string}
     * @memberof StayRecordsType
     */
    miscellaneousId?: string;
    /**
     * Specifies the payment method used
     * @type {string}
     * @memberof StayRecordsType
     */
    paymentMethod?: string;
    /**
     * Specifies the postal code
     * @type {string}
     * @memberof StayRecordsType
     */
    posCode?: string;
    /**
     * Specifies the promotion code
     * @type {string}
     * @memberof StayRecordsType
     */
    promotionCode?: string;
    /**
     * Describes the reservation status ie CANCELLED, CHECKED OUT, ARRIVAL etc
     * @type {string}
     * @memberof StayRecordsType
     */
    reservationStatus?: string;
    /**
     * Specifies the expected arrival time of the reservation
     * @type {string}
     * @memberof StayRecordsType
     */
    reservationExpectedArrivalTime?: string;
    /**
     * Specifies the expected departure time of the reservation
     * @type {string}
     * @memberof StayRecordsType
     */
    reservationExpectedDepartureTime?: string;
    /**
     * Specifies the insert source for the reservation
     * @type {string}
     * @memberof StayRecordsType
     */
    reservationInsertSource?: string;
    /**
     * Specifies the insert source type for the reservation
     * @type {string}
     * @memberof StayRecordsType
     */
    reservationInsertSourceType?: string;
    /**
     * Describes the room id of the room owner.
     * @type {string}
     * @memberof StayRecordsType
     */
    roomId?: string;
    /**
     * Specifies the revenue for the room.
     * @type {number}
     * @memberof StayRecordsType
     */
    roomRevenue?: number;
    /**
     * Describes the type of the room.
     * @type {string}
     * @memberof StayRecordsType
     */
    roomType?: string;
    /**
     * Specifies the share id.
     * @type {string}
     * @memberof StayRecordsType
     */
    shareId?: string;
    /**
     * Specifies the source code.
     * @type {string}
     * @memberof StayRecordsType
     */
    sourceCode?: string;
    /**
     * Specifies the source id.
     * @type {string}
     * @memberof StayRecordsType
     */
    sourceId?: string;
    /**
     * Specifies the stage status.
     * @type {string}
     * @memberof StayRecordsType
     */
    stageStatus?: string;
    /**
     * Specifies the stage suspense reason.
     * @type {string}
     * @memberof StayRecordsType
     */
    stageSuspenseReason?: string;
    /**
     * Specifies the total revenue.
     * @type {number}
     * @memberof StayRecordsType
     */
    totalRevenue?: number;
    /**
     * Specifies the travel agent id
     * @type {string}
     * @memberof StayRecordsType
     */
    travelAgentId?: string;
}
/**
 * Check if a given object implements the StayRecordsType interface.
 */
export declare function instanceOfStayRecordsType(value: object): boolean;
export declare function StayRecordsTypeFromJSON(json: any): StayRecordsType;
export declare function StayRecordsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StayRecordsType;
export declare function StayRecordsTypeToJSON(value?: StayRecordsType | null): any;
