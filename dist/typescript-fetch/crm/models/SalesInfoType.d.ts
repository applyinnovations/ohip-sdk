/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Provides sales information about the profiles of type company, travel agent, source and contact.
 * @export
 * @interface SalesInfoType
 */
export interface SalesInfoType {
    /**
     * Defines the account source.
     * @type {string}
     * @memberof SalesInfoType
     */
    accountSource?: string;
    /**
     * Defines the account type.
     * @type {string}
     * @memberof SalesInfoType
     */
    accountType?: string;
    /**
     * Defines the action code.
     * @type {string}
     * @memberof SalesInfoType
     */
    actionCode?: string;
    /**
     * Defines the Business segments.
     * @type {string}
     * @memberof SalesInfoType
     */
    businessSegments?: string;
    /**
     * Defines the competition code.
     * @type {string}
     * @memberof SalesInfoType
     */
    competitionCode?: string;
    /**
     * Hotel Code used to filter the sales information.
     * @type {string}
     * @memberof SalesInfoType
     */
    hotelId?: string;
    /**
     * Defines the industry code.
     * @type {string}
     * @memberof SalesInfoType
     */
    industryCode?: string;
    /**
     * Defines the influence for the contact profile.
     * @type {string}
     * @memberof SalesInfoType
     */
    influence?: string;
    /**
     * Defines the Preferred Room for profile.
     * @type {string}
     * @memberof SalesInfoType
     */
    preferredRoom?: string;
    /**
     * Defines the priority.
     * @type {string}
     * @memberof SalesInfoType
     */
    priority?: string;
    /**
     * Defines the rooms potential.
     * @type {string}
     * @memberof SalesInfoType
     */
    roomsPotential?: string;
    /**
     * Defines the scope.
     * @type {string}
     * @memberof SalesInfoType
     */
    scope?: string;
    /**
     * Defines the scope city.
     * @type {string}
     * @memberof SalesInfoType
     */
    scopeCity?: string;
}
/**
 * Check if a given object implements the SalesInfoType interface.
 */
export declare function instanceOfSalesInfoType(value: object): boolean;
export declare function SalesInfoTypeFromJSON(json: any): SalesInfoType;
export declare function SalesInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesInfoType;
export declare function SalesInfoTypeToJSON(value?: SalesInfoType | null): any;
