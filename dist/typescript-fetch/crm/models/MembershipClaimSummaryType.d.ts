/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ClaimActivityLogType } from './ClaimActivityLogType';
import type { ClaimApprovalStatusType } from './ClaimApprovalStatusType';
import type { ClaimRecordType } from './ClaimRecordType';
import type { ClaimSourceType } from './ClaimSourceType';
import type { ProfileId } from './ProfileId';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Summary information of a claim.
 * @export
 * @interface MembershipClaimSummaryType
 */
export interface MembershipClaimSummaryType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof MembershipClaimSummaryType
     */
    claimNo?: UniqueIDType;
    /**
     * Date the claim was made.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    claimDate?: string;
    /**
     * Name of the person placing the claim. This name may be different from the name on the membership card.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    callerName?: string;
    /**
     * The date, if any, by which a response to the caller was promised.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    replyBy?: string;
    /**
     * Membership Type code.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    membershipType?: string;
    /**
     * Indicates membership card number of the guest.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    membershipId?: string;
    /**
     * Status of the claim.(Open, Closed, Pending Review, Waiting for Manager, etc.)
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    claimStatus?: string;
    /**
     * Type of user-definable claim such as New Card, Stay, etc.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    claimType?: string;
    /**
     * If the status is closed, the date the claim was closed.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    closeDate?: string;
    /**
     *
     * @type {ClaimRecordType}
     * @memberof MembershipClaimSummaryType
     */
    recordType?: ClaimRecordType;
    /**
     * Property where the stay took place.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    hotelId?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof MembershipClaimSummaryType
     */
    confirmationNo?: Array<UniqueIDType>;
    /**
     * Arrival date for the stay associated with this claim.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    arrival?: string;
    /**
     * Departure date for the stay associated with this claim.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    departure?: string;
    /**
     * User who is assigned to handle this claim.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    owner?: string;
    /**
     * User who entered this claim.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    submitter?: string;
    /**
     *
     * @type {ClaimSourceType}
     * @memberof MembershipClaimSummaryType
     */
    source?: ClaimSourceType;
    /**
     * Origin of the membership claim. User definable values like Email, Fax, Phone Call, etc.
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    origin?: string;
    /**
     *
     * @type {ClaimApprovalStatusType}
     * @memberof MembershipClaimSummaryType
     */
    approvalStatus?: ClaimApprovalStatusType;
    /**
     * More information related to call that help to resolve the claim..
     * @type {string}
     * @memberof MembershipClaimSummaryType
     */
    callerInformation?: string;
    /**
     *
     * @type {ProfileId}
     * @memberof MembershipClaimSummaryType
     */
    profileId?: ProfileId;
    /**
     * Membership ID Number.
     * @type {number}
     * @memberof MembershipClaimSummaryType
     */
    membershipIdNo?: number;
    /**
     * Summary of claim activity log information.
     * @type {Array<ClaimActivityLogType>}
     * @memberof MembershipClaimSummaryType
     */
    activityLog?: Array<ClaimActivityLogType>;
}
/**
 * Check if a given object implements the MembershipClaimSummaryType interface.
 */
export declare function instanceOfMembershipClaimSummaryType(value: object): boolean;
export declare function MembershipClaimSummaryTypeFromJSON(json: any): MembershipClaimSummaryType;
export declare function MembershipClaimSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipClaimSummaryType;
export declare function MembershipClaimSummaryTypeToJSON(value?: MembershipClaimSummaryType | null): any;
