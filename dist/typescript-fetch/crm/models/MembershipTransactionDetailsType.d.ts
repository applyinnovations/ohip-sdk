/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MembershipAwardPointsType } from './MembershipAwardPointsType';
import type { MembershipTransactionId } from './MembershipTransactionId';
import type { MembershipTransactionTierPointsType } from './MembershipTransactionTierPointsType';
import type { TimeSpanType } from './TimeSpanType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Detailed information related to a membership transaction.
 * @export
 * @interface MembershipTransactionDetailsType
 */
export interface MembershipTransactionDetailsType {
    /**
     * Indicates if the transaction was created as an adjustment.
     * @type {boolean}
     * @memberof MembershipTransactionDetailsType
     */
    adjustment?: boolean;
    /**
     * The average cost of the room per night.
     * @type {number}
     * @memberof MembershipTransactionDetailsType
     */
    averageRateAmount?: number;
    /**
     *
     * @type {MembershipAwardPointsType}
     * @memberof MembershipTransactionDetailsType
     */
    awardPoints?: MembershipAwardPointsType;
    /**
     * Base billing group the points belong to.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    baseBillingGroup?: string;
    /**
     * Billing group the points belong to.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    billingGroup?: string;
    /**
     * Bonus billing group the points belong to.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    bonusBillingGroup?: string;
    /**
     * The booked room type for this transaction.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    bookedRoomLabel?: string;
    /**
     * The property currency at the originating PMS.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    currency?: string;
    /**
     * Indicates if the transaction was flagged as an exception.
     * @type {boolean}
     * @memberof MembershipTransactionDetailsType
     */
    exception?: boolean;
    /**
     * Property from which the membership stay information was received.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    hotelId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof MembershipTransactionDetailsType
     */
    memberStatementId?: UniqueIDType;
    /**
     *
     * @type {MembershipTransactionId}
     * @memberof MembershipTransactionDetailsType
     */
    membershipTransactionId?: MembershipTransactionId;
    /**
     * Notes associated with this transaction.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    notes?: string;
    /**
     * Indicates if the points have been calculated on this transaction.
     * @type {boolean}
     * @memberof MembershipTransactionDetailsType
     */
    pointsCalculated?: boolean;
    /**
     * The total cost associated with points earned by this transaction.
     * @type {number}
     * @memberof MembershipTransactionDetailsType
     */
    pointsCost?: number;
    /**
     * For adjustments, the date when the points are to be credited.
     * @type {Date}
     * @memberof MembershipTransactionDetailsType
     */
    pointsCreditDate?: Date;
    /**
     * Messages generated by the system during points calculation.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    processingMessages?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof MembershipTransactionDetailsType
     */
    profilePromotions?: Array<string>;
    /**
     * Promotion code assigned on reservation.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    ratePromotion?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof MembershipTransactionDetailsType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * The room type for this transaction.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    roomLabel?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof MembershipTransactionDetailsType
     */
    statementId?: UniqueIDType;
    /**
     *
     * @type {TimeSpanType}
     * @memberof MembershipTransactionDetailsType
     */
    stayTimeSpan?: TimeSpanType;
    /**
     *
     * @type {MembershipTransactionTierPointsType}
     * @memberof MembershipTransactionDetailsType
     */
    tierPoints?: MembershipTransactionTierPointsType;
    /**
     * The date when the points were calculated.
     * @type {Date}
     * @memberof MembershipTransactionDetailsType
     */
    transactionDate?: Date;
    /**
     * The type of membership points transaction.
     * @type {string}
     * @memberof MembershipTransactionDetailsType
     */
    transactionType?: string;
}
/**
 * Check if a given object implements the MembershipTransactionDetailsType interface.
 */
export declare function instanceOfMembershipTransactionDetailsType(value: object): boolean;
export declare function MembershipTransactionDetailsTypeFromJSON(json: any): MembershipTransactionDetailsType;
export declare function MembershipTransactionDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipTransactionDetailsType;
export declare function MembershipTransactionDetailsTypeToJSON(value?: MembershipTransactionDetailsType | null): any;
