/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { DateRangeType } from './DateRangeType';
import type { MembershipExceptionStatusType } from './MembershipExceptionStatusType';
import type { MembershipTransactionId } from './MembershipTransactionId';
import type { ProfileId } from './ProfileId';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Details about a membership like ProfileID, Card Number, Type, Level, etc.
 * @export
 * @interface MemberPointsExceptionType
 */
export interface MemberPointsExceptionType {
    /**
     * Hotel code of the membership transaction exceptions.
     * @type {string}
     * @memberof MemberPointsExceptionType
     */
    hotelId?: string;
    /**
     *
     * @type {ProfileId}
     * @memberof MemberPointsExceptionType
     */
    profileId?: ProfileId;
    /**
     * The profile name associated with this membership.
     * @type {string}
     * @memberof MemberPointsExceptionType
     */
    name?: string;
    /**
     *
     * @type {DateRangeType}
     * @memberof MemberPointsExceptionType
     */
    fromToRangeDate?: DateRangeType;
    /**
     * Unique identifier of this membership.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    membershipIdNo?: number;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof MemberPointsExceptionType
     */
    membershipType?: CodeDescriptionType;
    /**
     * The card number associated with this membership.
     * @type {string}
     * @memberof MemberPointsExceptionType
     */
    membershipCardNo?: string;
    /**
     * The current level of the membership.
     * @type {string}
     * @memberof MemberPointsExceptionType
     */
    membershipLevel?: string;
    /**
     *
     * @type {MembershipTransactionId}
     * @memberof MemberPointsExceptionType
     */
    membershipTransactionId?: MembershipTransactionId;
    /**
     * The number of rooms booked.(MR)
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    roomsBooked?: number;
    /**
     * Indicates if back to back membership transaction exceptions have occurred or not.
     * @type {boolean}
     * @memberof MemberPointsExceptionType
     */
    backToBack?: boolean;
    /**
     * The average rate of the stay.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    averageRate?: number;
    /**
     * Award points associated with this membership points transaction.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    awardPoints?: number;
    /**
     * Tier night points associated with this membership points transaction.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    tierNightPoints?: number;
    /**
     * Tier stay points associated with this membership points transaction.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    tierStayPoints?: number;
    /**
     * Tier revenue points associated with this membership points transaction.
     * @type {number}
     * @memberof MemberPointsExceptionType
     */
    tierRevenuePoints?: number;
    /**
     * Points Calculated value(Y/N) for the selected transaction.
     * @type {boolean}
     * @memberof MemberPointsExceptionType
     */
    pointsCalculate?: boolean;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof MemberPointsExceptionType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * The systems records and notes identifying the exception criteria.
     * @type {string}
     * @memberof MemberPointsExceptionType
     */
    processingMessages?: string;
    /**
     *
     * @type {MembershipExceptionStatusType}
     * @memberof MemberPointsExceptionType
     */
    exceptionStatus?: MembershipExceptionStatusType;
}
/**
 * Check if a given object implements the MemberPointsExceptionType interface.
 */
export declare function instanceOfMemberPointsExceptionType(value: object): boolean;
export declare function MemberPointsExceptionTypeFromJSON(json: any): MemberPointsExceptionType;
export declare function MemberPointsExceptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberPointsExceptionType;
export declare function MemberPointsExceptionTypeToJSON(value?: MemberPointsExceptionType | null): any;
