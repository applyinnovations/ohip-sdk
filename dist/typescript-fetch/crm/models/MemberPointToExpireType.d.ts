/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information related to a member point to expire.
 * @export
 * @interface MemberPointToExpireType
 */
export interface MemberPointToExpireType {
    /**
     * The method of award generation.
     * @type {string}
     * @memberof MemberPointToExpireType
     */
    awardGenerationMethod?: string;
    /**
     * Indicates if the points is extendable.
     * @type {boolean}
     * @memberof MemberPointToExpireType
     */
    extend?: boolean;
    /**
     * The date when the member future award points will expire.
     * @type {string}
     * @memberof MemberPointToExpireType
     */
    pointsExpiryDate?: string;
    /**
     * Displays the total number of points that will expire on the expiration date.
     * @type {number}
     * @memberof MemberPointToExpireType
     */
    pointsToExpire?: number;
    /**
     * Displays the number of points that are relevant for extension. Points that were already extended from the previous year are not considered for extension.
     * @type {number}
     * @memberof MemberPointToExpireType
     */
    previousPointsToExpire?: number;
}
/**
 * Check if a given object implements the MemberPointToExpireType interface.
 */
export declare function instanceOfMemberPointToExpireType(value: object): boolean;
export declare function MemberPointToExpireTypeFromJSON(json: any): MemberPointToExpireType;
export declare function MemberPointToExpireTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberPointToExpireType;
export declare function MemberPointToExpireTypeToJSON(value?: MemberPointToExpireType | null): any;
