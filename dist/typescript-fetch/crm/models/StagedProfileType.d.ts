/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MailingActionsType } from './MailingActionsType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import type { StagedProfileAddressType } from './StagedProfileAddressType';
import type { StagedProfileCommentInfosType } from './StagedProfileCommentInfosType';
import type { StagedProfileCompanyType } from './StagedProfileCompanyType';
import type { StagedProfileCustomerType } from './StagedProfileCustomerType';
import type { StagedProfileEmailType } from './StagedProfileEmailType';
import type { StagedProfileIdentificationsType } from './StagedProfileIdentificationsType';
import type { StagedProfileKeywordType } from './StagedProfileKeywordType';
import type { StagedProfileMembershipType } from './StagedProfileMembershipType';
import type { StagedProfileNegotiatedRateType } from './StagedProfileNegotiatedRateType';
import type { StagedProfilePhoneType } from './StagedProfilePhoneType';
import type { StagedProfilePreferenceType } from './StagedProfilePreferenceType';
import type { StagedProfileRoutingInstructionType } from './StagedProfileRoutingInstructionType';
import type { StagedProfileURLType } from './StagedProfileURLType';
import type { StagedProfileUserDefinedFieldsType } from './StagedProfileUserDefinedFieldsType';
import type { UniqueIDListType } from './UniqueIDListType';
/**
 * Detailed information about the staged profile.
 * @export
 * @interface StagedProfileType
 */
export interface StagedProfileType {
    /**
     * Collection of detailed information about address for the staged profile.
     * @type {Array<StagedProfileAddressType>}
     * @memberof StagedProfileType
     */
    addresses?: Array<StagedProfileAddressType>;
    /**
     *
     * @type {StagedProfileCommentInfosType}
     * @memberof StagedProfileType
     */
    comments?: StagedProfileCommentInfosType;
    /**
     *
     * @type {StagedProfileCompanyType}
     * @memberof StagedProfileType
     */
    company?: StagedProfileCompanyType;
    /**
     *
     * @type {StagedProfileCustomerType}
     * @memberof StagedProfileType
     */
    customer?: StagedProfileCustomerType;
    /**
     * Collection of detailed information about email for the staged profile.
     * @type {Array<StagedProfileEmailType>}
     * @memberof StagedProfileType
     */
    emails?: Array<StagedProfileEmailType>;
    /**
     * Hotel code that the staged profile belongs to.
     * @type {string}
     * @memberof StagedProfileType
     */
    hotelId?: string;
    /**
     * Collection of detailed information about identification for the staged profile.
     * @type {Array<StagedProfileIdentificationsType>}
     * @memberof StagedProfileType
     */
    identifications?: Array<StagedProfileIdentificationsType>;
    /**
     * The date on which the staged profile has been received.
     * @type {Date}
     * @memberof StagedProfileType
     */
    importDate?: Date;
    /**
     * Collection of detailed information about keyword for the staged profile.
     * @type {Array<StagedProfileKeywordType>}
     * @memberof StagedProfileType
     */
    keywords?: Array<StagedProfileKeywordType>;
    /**
     *
     * @type {MailingActionsType}
     * @memberof StagedProfileType
     */
    mailingActions?: MailingActionsType;
    /**
     * Collection of detailed information about memberships for the staged profile.
     * @type {Array<StagedProfileMembershipType>}
     * @memberof StagedProfileType
     */
    memberships?: Array<StagedProfileMembershipType>;
    /**
     * Collection of detailed information about negotiated rates for the staged profile.
     * @type {Array<StagedProfileNegotiatedRateType>}
     * @memberof StagedProfileType
     */
    negotiatedRates?: Array<StagedProfileNegotiatedRateType>;
    /**
     * Collection of detailed information about preferences for the staged profile.
     * @type {Array<StagedProfilePreferenceType>}
     * @memberof StagedProfileType
     */
    preferences?: Array<StagedProfilePreferenceType>;
    /**
     *
     * @type {PrivacyInfoType}
     * @memberof StagedProfileType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     *
     * @type {UniqueIDListType}
     * @memberof StagedProfileType
     */
    profileIdList?: UniqueIDListType;
    /**
     * Type of the staged profile.
     * @type {string}
     * @memberof StagedProfileType
     */
    profileType?: string;
    /**
     * Collection of routing instructions for the staged profile.
     * @type {Array<StagedProfileRoutingInstructionType>}
     * @memberof StagedProfileType
     */
    routingInstructions?: Array<StagedProfileRoutingInstructionType>;
    /**
     * The status of the staged profile.
     * @type {string}
     * @memberof StagedProfileType
     */
    stageStatus?: string;
    /**
     * Collection of detailed information about telephone/fax for the staged profile.
     * @type {Array<StagedProfilePhoneType>}
     * @memberof StagedProfileType
     */
    telephones?: Array<StagedProfilePhoneType>;
    /**
     * Collection of detailed information about web url/address for the staged profile.
     * @type {Array<StagedProfileURLType>}
     * @memberof StagedProfileType
     */
    uRLs?: Array<StagedProfileURLType>;
    /**
     *
     * @type {StagedProfileUserDefinedFieldsType}
     * @memberof StagedProfileType
     */
    userDefinedFields?: StagedProfileUserDefinedFieldsType;
}
/**
 * Check if a given object implements the StagedProfileType interface.
 */
export declare function instanceOfStagedProfileType(value: object): boolean;
export declare function StagedProfileTypeFromJSON(json: any): StagedProfileType;
export declare function StagedProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StagedProfileType;
export declare function StagedProfileTypeToJSON(value?: StagedProfileType | null): any;
