/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Contains last stay related details for the profile
 * @export
 * @interface LastStayInfoType
 */
export interface LastStayInfoType {
    /**
     * Used to hold last stay information for the profile.
     * @type {Date}
     * @memberof LastStayInfoType
     */
    lastVisit?: Date;
    /**
     * Used to hold last room information for the profile.
     * @type {string}
     * @memberof LastStayInfoType
     */
    lastRoom?: string;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof LastStayInfoType
     */
    lastRate?: CurrencyAmountType;
    /**
     * The total number of previous stay of the profile.
     * @type {number}
     * @memberof LastStayInfoType
     */
    totalStay?: number;
}

/**
 * Check if a given object implements the LastStayInfoType interface.
 */
export function instanceOfLastStayInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LastStayInfoTypeFromJSON(json: any): LastStayInfoType {
    return LastStayInfoTypeFromJSONTyped(json, false);
}

export function LastStayInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LastStayInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastVisit': !exists(json, 'lastVisit') ? undefined : (new Date(json['lastVisit'])),
        'lastRoom': !exists(json, 'lastRoom') ? undefined : json['lastRoom'],
        'lastRate': !exists(json, 'lastRate') ? undefined : CurrencyAmountTypeFromJSON(json['lastRate']),
        'totalStay': !exists(json, 'totalStay') ? undefined : json['totalStay'],
    };
}

export function LastStayInfoTypeToJSON(value?: LastStayInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastVisit': value.lastVisit === undefined ? undefined : (value.lastVisit.toISOString().substr(0,10)),
        'lastRoom': value.lastRoom,
        'lastRate': CurrencyAmountTypeToJSON(value.lastRate),
        'totalStay': value.totalStay,
    };
}

