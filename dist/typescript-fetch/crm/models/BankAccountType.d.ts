/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CommissionPaymentMethodType } from './CommissionPaymentMethodType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Bank account information like Account ID, Bank Name, Currency, etc.
 * @export
 * @interface BankAccountType
 */
export interface BankAccountType {
    /**
     * Property of the bank account.
     * @type {string}
     * @memberof BankAccountType
     */
    hotelId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof BankAccountType
     */
    bankAccountId?: UniqueIDType;
    /**
     * Account number at the bank.
     * @type {string}
     * @memberof BankAccountType
     */
    bankAccountNo?: string;
    /**
     * Unique code of the bank account.
     * @type {string}
     * @memberof BankAccountType
     */
    bankCode?: string;
    /**
     * Code for the branch of the bank.
     * @type {string}
     * @memberof BankAccountType
     */
    branchCode?: string;
    /**
     * Name of the bank account.
     * @type {string}
     * @memberof BankAccountType
     */
    bankName?: string;
    /**
     *
     * @type {CommissionPaymentMethodType}
     * @memberof BankAccountType
     */
    paymentMethod?: CommissionPaymentMethodType;
    /**
     * Type of format for Payment Method.
     * @type {string}
     * @memberof BankAccountType
     */
    checkFormat?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof BankAccountType
     */
    currency?: CodeDescriptionType;
    /**
     * Current check no of the bank account.
     * @type {number}
     * @memberof BankAccountType
     */
    currentCheckNo?: number;
    /**
     * Property name of the bank account.
     * @type {string}
     * @memberof BankAccountType
     */
    hotelName?: string;
    /**
     * Whether this bank account is to be the default in case no bank account is associated with the travel agent or source.
     * @type {boolean}
     * @memberof BankAccountType
     */
    _default?: boolean;
    /**
     * Whether this bank account is associated with the travel agent or source.
     * @type {boolean}
     * @memberof BankAccountType
     */
    linkedToProfile?: boolean;
}
/**
 * Check if a given object implements the BankAccountType interface.
 */
export declare function instanceOfBankAccountType(value: object): boolean;
export declare function BankAccountTypeFromJSON(json: any): BankAccountType;
export declare function BankAccountTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountType;
export declare function BankAccountTypeToJSON(value?: BankAccountType | null): any;
