/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CompanyProfileTypeAddresses } from './CompanyProfileTypeAddresses';
import type { CompanyProfileTypeComments } from './CompanyProfileTypeComments';
import type { CompanyProfileTypeGdsNegotiatedRates } from './CompanyProfileTypeGdsNegotiatedRates';
import type { CompanyProfileTypeKeywords } from './CompanyProfileTypeKeywords';
import type { CompanyProfileTypeNegotiatedRates } from './CompanyProfileTypeNegotiatedRates';
import type { CompanyProfileTypeRelationships } from './CompanyProfileTypeRelationships';
import type { CompanyProfileTypeURLs } from './CompanyProfileTypeURLs';
import type { CompanyType } from './CompanyType';
import type { CustomerType } from './CustomerType';
import type { ECertificatesType } from './ECertificatesType';
import type { EarningPreferencesType } from './EarningPreferencesType';
import type { EnrollmentPaymentDetailsType } from './EnrollmentPaymentDetailsType';
import type { EnrollmentTypeType } from './EnrollmentTypeType';
import type { HotelStaysType } from './HotelStaysType';
import type { ImageSetType } from './ImageSetType';
import type { IndicatorsType } from './IndicatorsType';
import type { LastStayInfoType } from './LastStayInfoType';
import type { MailingActionsType } from './MailingActionsType';
import type { MailingPreferencesType } from './MailingPreferencesType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import type { ProfileAccessType } from './ProfileAccessType';
import type { ProfileCashieringType } from './ProfileCashieringType';
import type { ProfileCommissionType } from './ProfileCommissionType';
import type { ProfileEnrollmentTypeEmails } from './ProfileEnrollmentTypeEmails';
import type { ProfileEnrollmentTypePreferenceCollection } from './ProfileEnrollmentTypePreferenceCollection';
import type { ProfileEnrollmentTypeProfileDeliveryMethods } from './ProfileEnrollmentTypeProfileDeliveryMethods';
import type { ProfileEnrollmentTypeProfileMemberships } from './ProfileEnrollmentTypeProfileMemberships';
import type { ProfileEnrollmentTypeRelationshipsSummary } from './ProfileEnrollmentTypeRelationshipsSummary';
import type { ProfileEnrollmentTypeRoomOwnershipsList } from './ProfileEnrollmentTypeRoomOwnershipsList';
import type { ProfileEnrollmentTypeTelephones } from './ProfileEnrollmentTypeTelephones';
import type { ProfileRestrictions } from './ProfileRestrictions';
import type { ProfileStatusType } from './ProfileStatusType';
import type { ProfileSubscriptionListType } from './ProfileSubscriptionListType';
import type { ProfileTaxInfoType } from './ProfileTaxInfoType';
import type { ProfileTypeType } from './ProfileTypeType';
import type { ReservationHistoryFutureInfoType } from './ReservationHistoryFutureInfoType';
import type { ReservationId } from './ReservationId';
import type { ReservationStayHistoryFutureInfoType } from './ReservationStayHistoryFutureInfoType';
import type { RewardsInfoType } from './RewardsInfoType';
import type { RoomPreferencesType } from './RoomPreferencesType';
import type { SalesInfoType } from './SalesInfoType';
import type { UniqueIDType } from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import type { WebUserAccountsType } from './WebUserAccountsType';
/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface ProfileEnrollmentType
 */
export interface ProfileEnrollmentType {
    /**
     *
     * @type {CompanyProfileTypeAddresses}
     * @memberof ProfileEnrollmentType
     */
    addresses?: CompanyProfileTypeAddresses;
    /**
     * Business/Market Segment associated to the profile.
     * @type {Array<string>}
     * @memberof ProfileEnrollmentType
     */
    businessSegments?: Array<string>;
    /**
     *
     * @type {ProfileCashieringType}
     * @memberof ProfileEnrollmentType
     */
    cashiering?: ProfileCashieringType;
    /**
     *
     * @type {CompanyProfileTypeComments}
     * @memberof ProfileEnrollmentType
     */
    comments?: CompanyProfileTypeComments;
    /**
     * Contains commission related details for the profile.
     * @type {Array<ProfileCommissionType>}
     * @memberof ProfileEnrollmentType
     */
    commissionInfoList?: Array<ProfileCommissionType>;
    /**
     *
     * @type {CompanyType}
     * @memberof ProfileEnrollmentType
     */
    company?: CompanyType;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    creatorId?: string;
    /**
     *
     * @type {CustomerType}
     * @memberof ProfileEnrollmentType
     */
    customer?: CustomerType;
    /**
     *
     * @type {ECertificatesType}
     * @memberof ProfileEnrollmentType
     */
    eCertificates?: ECertificatesType;
    /**
     *
     * @type {EarningPreferencesType}
     * @memberof ProfileEnrollmentType
     */
    earningPreferences?: EarningPreferencesType;
    /**
     * Eligible for Fiscal Folio/Payload generation.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    eligibleForFiscalFolio?: string;
    /**
     *
     * @type {ProfileEnrollmentTypeEmails}
     * @memberof ProfileEnrollmentType
     */
    emails?: ProfileEnrollmentTypeEmails;
    /**
     * EmployeeID of the user who is enrolling the Guest.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    employeeId?: string;
    /**
     *
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    employer?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof ProfileEnrollmentType
     */
    enrollmentCode?: CodeDescriptionType;
    /**
     *
     * @type {EnrollmentPaymentDetailsType}
     * @memberof ProfileEnrollmentType
     */
    enrollmentPaymentDetails?: EnrollmentPaymentDetailsType;
    /**
     *
     * @type {EnrollmentTypeType}
     * @memberof ProfileEnrollmentType
     */
    enrollmentType?: EnrollmentTypeType;
    /**
     * Enrollment details will be fetched from this External database.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    externalDatabaseID?: string;
    /**
     * Fiscal Guest Type is used for Fiscal Folio funcionality
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    fiscalGuestType?: string;
    /**
     *
     * @type {CompanyProfileTypeGdsNegotiatedRates}
     * @memberof ProfileEnrollmentType
     */
    gdsNegotiatedRates?: CompanyProfileTypeGdsNegotiatedRates;
    /**
     * Populates true if the profile has commission configured false otherwise.
     * @type {boolean}
     * @memberof ProfileEnrollmentType
     */
    hasCommission?: boolean;
    /**
     * Hotel Code, It is used to filter hotel specific children to this specific hotel code.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    hotelId?: string;
    /**
     * Influence Code associated to the profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    influenceCode?: string;
    /**
     * Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
     * @type {boolean}
     * @memberof ProfileEnrollmentType
     */
    inheritedNegRates?: boolean;
    /**
     *
     * @type {CompanyProfileTypeKeywords}
     * @memberof ProfileEnrollmentType
     */
    keywords?: CompanyProfileTypeKeywords;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    lastModifyDateTime?: string;
    /**
     *
     * @type {LastStayInfoType}
     * @memberof ProfileEnrollmentType
     */
    lastStayInfo?: LastStayInfoType;
    /**
     * Localization Guest Type assocaited to the profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    localizationGuestType?: string;
    /**
     *
     * @type {MailingActionsType}
     * @memberof ProfileEnrollmentType
     */
    mailingActions?: MailingActionsType;
    /**
     *
     * @type {MailingPreferencesType}
     * @memberof ProfileEnrollmentType
     */
    mailingPreferences?: MailingPreferencesType;
    /**
     * Mark this profile as recently accessed.
     * @type {boolean}
     * @memberof ProfileEnrollmentType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * "true" setting marks the profile to be kept from being purged, once the profile is marked inactive.
     * @type {boolean}
     * @memberof ProfileEnrollmentType
     */
    markForHistory?: boolean;
    /**
     * Profile's membership card registration code.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    membershipCardRegistrationCode?: string;
    /**
     *
     * @type {CompanyProfileTypeNegotiatedRates}
     * @memberof ProfileEnrollmentType
     */
    negotiatedRates?: CompanyProfileTypeNegotiatedRates;
    /**
     * Owner Code associated to the profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    ownerCode?: string;
    /**
     *
     * @type {ProfileEnrollmentTypePreferenceCollection}
     * @memberof ProfileEnrollmentType
     */
    preferenceCollection?: ProfileEnrollmentTypePreferenceCollection;
    /**
     *
     * @type {HotelStaysType}
     * @memberof ProfileEnrollmentType
     */
    previousHotelStays?: HotelStaysType;
    /**
     *
     * @type {PrivacyInfoType}
     * @memberof ProfileEnrollmentType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     *
     * @type {ProfileAccessType}
     * @memberof ProfileEnrollmentType
     */
    profileAccessType?: ProfileAccessType;
    /**
     *
     * @type {ProfileEnrollmentTypeProfileDeliveryMethods}
     * @memberof ProfileEnrollmentType
     */
    profileDeliveryMethods?: ProfileEnrollmentTypeProfileDeliveryMethods;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ProfileEnrollmentType
     */
    profileId?: UniqueIDType;
    /**
     *
     * @type {ImageSetType}
     * @memberof ProfileEnrollmentType
     */
    profileImage?: ImageSetType;
    /**
     *
     * @type {IndicatorsType}
     * @memberof ProfileEnrollmentType
     */
    profileIndicators?: IndicatorsType;
    /**
     *
     * @type {ProfileEnrollmentTypeProfileMemberships}
     * @memberof ProfileEnrollmentType
     */
    profileMemberships?: ProfileEnrollmentTypeProfileMemberships;
    /**
     *
     * @type {ProfileRestrictions}
     * @memberof ProfileEnrollmentType
     */
    profileRestrictions?: ProfileRestrictions;
    /**
     *
     * @type {ProfileTypeType}
     * @memberof ProfileEnrollmentType
     */
    profileType?: ProfileTypeType;
    /**
     * What level this profile is protected.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    protectedBy?: string;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    registeredProperty?: string;
    /**
     *
     * @type {CompanyProfileTypeRelationships}
     * @memberof ProfileEnrollmentType
     */
    relationships?: CompanyProfileTypeRelationships;
    /**
     *
     * @type {ProfileEnrollmentTypeRelationshipsSummary}
     * @memberof ProfileEnrollmentType
     */
    relationshipsSummary?: ProfileEnrollmentTypeRelationshipsSummary;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    requestForHotel?: string;
    /**
     *
     * @type {ReservationId}
     * @memberof ProfileEnrollmentType
     */
    reservationId?: ReservationId;
    /**
     *
     * @type {ReservationHistoryFutureInfoType}
     * @memberof ProfileEnrollmentType
     */
    reservationInfoList?: ReservationHistoryFutureInfoType;
    /**
     *
     * @type {RewardsInfoType}
     * @memberof ProfileEnrollmentType
     */
    rewardsInfo?: RewardsInfoType;
    /**
     *
     * @type {ProfileEnrollmentTypeRoomOwnershipsList}
     * @memberof ProfileEnrollmentType
     */
    roomOwnershipsList?: ProfileEnrollmentTypeRoomOwnershipsList;
    /**
     *
     * @type {RoomPreferencesType}
     * @memberof ProfileEnrollmentType
     */
    roomPreferences?: RoomPreferencesType;
    /**
     *
     * @type {SalesInfoType}
     * @memberof ProfileEnrollmentType
     */
    salesInfo?: SalesInfoType;
    /**
     * Flag to show inactive Room Owners.
     * @type {boolean}
     * @memberof ProfileEnrollmentType
     */
    showInactiveRoomOwners?: boolean;
    /**
     *
     * @type {ProfileStatusType}
     * @memberof ProfileEnrollmentType
     */
    statusCode?: ProfileStatusType;
    /**
     *
     * @type {ReservationStayHistoryFutureInfoType}
     * @memberof ProfileEnrollmentType
     */
    stayReservationInfoList?: ReservationStayHistoryFutureInfoType;
    /**
     *
     * @type {ProfileSubscriptionListType}
     * @memberof ProfileEnrollmentType
     */
    subscriptions?: ProfileSubscriptionListType;
    /**
     *
     * @type {ProfileTaxInfoType}
     * @memberof ProfileEnrollmentType
     */
    taxInfo?: ProfileTaxInfoType;
    /**
     *
     * @type {ProfileEnrollmentTypeTelephones}
     * @memberof ProfileEnrollmentType
     */
    telephones?: ProfileEnrollmentTypeTelephones;
    /**
     * Territory associated to the profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    territory?: string;
    /**
     * Trace Code associated to the profile.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    traceCode?: string;
    /**
     *
     * @type {CompanyProfileTypeURLs}
     * @memberof ProfileEnrollmentType
     */
    uRLs?: CompanyProfileTypeURLs;
    /**
     *
     * @type {UserDefinedFieldsType}
     * @memberof ProfileEnrollmentType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * UserID/LoginID of the user who is enrolling the Guest.
     * @type {string}
     * @memberof ProfileEnrollmentType
     */
    userId?: string;
    /**
     *
     * @type {WebUserAccountsType}
     * @memberof ProfileEnrollmentType
     */
    webUserAccounts?: WebUserAccountsType;
}
/**
 * Check if a given object implements the ProfileEnrollmentType interface.
 */
export declare function instanceOfProfileEnrollmentType(value: object): boolean;
export declare function ProfileEnrollmentTypeFromJSON(json: any): ProfileEnrollmentType;
export declare function ProfileEnrollmentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileEnrollmentType;
export declare function ProfileEnrollmentTypeToJSON(value?: ProfileEnrollmentType | null): any;
