/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { ProfileSubscriptionTypeProfileInfo } from './ProfileSubscriptionTypeProfileInfo';
import {
    ProfileSubscriptionTypeProfileInfoFromJSON,
    ProfileSubscriptionTypeProfileInfoFromJSONTyped,
    ProfileSubscriptionTypeProfileInfoToJSON,
} from './ProfileSubscriptionTypeProfileInfo';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system
 * @export
 * @interface ProfileSubscriptionType
 */
export interface ProfileSubscriptionType {
    /**
     * 
     * @type {ProfileId}
     * @memberof ProfileSubscriptionType
     */
    profileId?: ProfileId;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ProfileSubscriptionType
     */
    externalProfileId?: UniqueIDType;
    /**
     * 
     * @type {ProfileSubscriptionTypeProfileInfo}
     * @memberof ProfileSubscriptionType
     */
    profileInfo?: ProfileSubscriptionTypeProfileInfo;
    /**
     * Indicates if the profile was distributed to the external system.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    distributed?: boolean;
    /**
     * Indicates if the profile information should be overwritten by the external system.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    force?: boolean;
    /**
     * Timestamp when the profile was subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    subscriptionDate?: string;
    /**
     * Timestamp of the most recent distribution of this profile to the external system.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    lastDistributionDate?: string;
    /**
     * Timestamp of the most recent update of the subscription information by the external system.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    lastExternalUpdateDate?: string;
    /**
     * Indicates whether this subscription is active or inactive.
     * @type {boolean}
     * @memberof ProfileSubscriptionType
     */
    inactive?: boolean;
    /**
     * Code of system where profile is subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    systemCode?: string;
    /**
     * Type of system where profile is subscribed to.
     * @type {string}
     * @memberof ProfileSubscriptionType
     */
    systemType?: string;
}

/**
 * Check if a given object implements the ProfileSubscriptionType interface.
 */
export function instanceOfProfileSubscriptionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileSubscriptionTypeFromJSON(json: any): ProfileSubscriptionType {
    return ProfileSubscriptionTypeFromJSONTyped(json, false);
}

export function ProfileSubscriptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileSubscriptionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'externalProfileId': !exists(json, 'externalProfileId') ? undefined : UniqueIDTypeFromJSON(json['externalProfileId']),
        'profileInfo': !exists(json, 'profileInfo') ? undefined : ProfileSubscriptionTypeProfileInfoFromJSON(json['profileInfo']),
        'distributed': !exists(json, 'distributed') ? undefined : json['distributed'],
        'force': !exists(json, 'force') ? undefined : json['force'],
        'subscriptionDate': !exists(json, 'subscriptionDate') ? undefined : json['subscriptionDate'],
        'lastDistributionDate': !exists(json, 'lastDistributionDate') ? undefined : json['lastDistributionDate'],
        'lastExternalUpdateDate': !exists(json, 'lastExternalUpdateDate') ? undefined : json['lastExternalUpdateDate'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
        'systemCode': !exists(json, 'systemCode') ? undefined : json['systemCode'],
        'systemType': !exists(json, 'systemType') ? undefined : json['systemType'],
    };
}

export function ProfileSubscriptionTypeToJSON(value?: ProfileSubscriptionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileId': ProfileIdToJSON(value.profileId),
        'externalProfileId': UniqueIDTypeToJSON(value.externalProfileId),
        'profileInfo': ProfileSubscriptionTypeProfileInfoToJSON(value.profileInfo),
        'distributed': value.distributed,
        'force': value.force,
        'subscriptionDate': value.subscriptionDate,
        'lastDistributionDate': value.lastDistributionDate,
        'lastExternalUpdateDate': value.lastExternalUpdateDate,
        'inactive': value.inactive,
        'systemCode': value.systemCode,
        'systemType': value.systemType,
    };
}

