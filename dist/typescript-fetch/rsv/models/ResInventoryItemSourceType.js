"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResInventoryItemSourceTypeToJSON = exports.ResInventoryItemSourceTypeFromJSONTyped = exports.ResInventoryItemSourceTypeFromJSON = exports.instanceOfResInventoryItemSourceType = void 0;
const runtime_1 = require("../runtime");
const BlockId_1 = require("./BlockId");
/**
 * Check if a given object implements the ResInventoryItemSourceType interface.
 */
function instanceOfResInventoryItemSourceType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResInventoryItemSourceType = instanceOfResInventoryItemSourceType;
function ResInventoryItemSourceTypeFromJSON(json) {
    return ResInventoryItemSourceTypeFromJSONTyped(json, false);
}
exports.ResInventoryItemSourceTypeFromJSON = ResInventoryItemSourceTypeFromJSON;
function ResInventoryItemSourceTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, BlockId_1.BlockIdFromJSON)(json['blockId']),
        'packageCode': !(0, runtime_1.exists)(json, 'packageCode') ? undefined : json['packageCode'],
        'packageInternalId': !(0, runtime_1.exists)(json, 'packageInternalId') ? undefined : json['packageInternalId'],
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'welcomeOffer': !(0, runtime_1.exists)(json, 'welcomeOffer') ? undefined : json['welcomeOffer'],
    };
}
exports.ResInventoryItemSourceTypeFromJSONTyped = ResInventoryItemSourceTypeFromJSONTyped;
function ResInventoryItemSourceTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockId': (0, BlockId_1.BlockIdToJSON)(value.blockId),
        'packageCode': value.packageCode,
        'packageInternalId': value.packageInternalId,
        'ratePlanCode': value.ratePlanCode,
        'welcomeOffer': value.welcomeOffer,
    };
}
exports.ResInventoryItemSourceTypeToJSON = ResInventoryItemSourceTypeToJSON;
