"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EffectiveRateTypeToJSON = exports.EffectiveRateTypeFromJSONTyped = exports.EffectiveRateTypeFromJSON = exports.instanceOfEffectiveRateType = void 0;
const runtime_1 = require("../runtime");
const RateByAgeBucketsType_1 = require("./RateByAgeBucketsType");
/**
 * Check if a given object implements the EffectiveRateType interface.
 */
function instanceOfEffectiveRateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEffectiveRateType = instanceOfEffectiveRateType;
function EffectiveRateTypeFromJSON(json) {
    return EffectiveRateTypeFromJSONTyped(json, false);
}
exports.EffectiveRateTypeFromJSON = EffectiveRateTypeFromJSON;
function EffectiveRateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amountBeforeTax': !(0, runtime_1.exists)(json, 'amountBeforeTax') ? undefined : json['amountBeforeTax'],
        'end': !(0, runtime_1.exists)(json, 'end') ? undefined : (new Date(json['end'])),
        'extraChildRate': !(0, runtime_1.exists)(json, 'extraChildRate') ? undefined : json['extraChildRate'],
        'extraPersonRate': !(0, runtime_1.exists)(json, 'extraPersonRate') ? undefined : json['extraPersonRate'],
        'fivePersonRate': !(0, runtime_1.exists)(json, 'fivePersonRate') ? undefined : json['fivePersonRate'],
        'fourChildrenRate': !(0, runtime_1.exists)(json, 'fourChildrenRate') ? undefined : json['fourChildrenRate'],
        'fourPersonRate': !(0, runtime_1.exists)(json, 'fourPersonRate') ? undefined : json['fourPersonRate'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'minimumChildrenForFreeStay': !(0, runtime_1.exists)(json, 'minimumChildrenForFreeStay') ? undefined : json['minimumChildrenForFreeStay'],
        'numberOfRooms': !(0, runtime_1.exists)(json, 'numberOfRooms') ? undefined : json['numberOfRooms'],
        'oneChildRate': !(0, runtime_1.exists)(json, 'oneChildRate') ? undefined : json['oneChildRate'],
        'onePersonRate': !(0, runtime_1.exists)(json, 'onePersonRate') ? undefined : json['onePersonRate'],
        'overrideFloorAmount': !(0, runtime_1.exists)(json, 'overrideFloorAmount') ? undefined : json['overrideFloorAmount'],
        'pointsRequired': !(0, runtime_1.exists)(json, 'pointsRequired') ? undefined : json['pointsRequired'],
        'rateByAgeBuckets': !(0, runtime_1.exists)(json, 'rateByAgeBuckets') ? undefined : (0, RateByAgeBucketsType_1.RateByAgeBucketsTypeFromJSON)(json['rateByAgeBuckets']),
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'start': !(0, runtime_1.exists)(json, 'start') ? undefined : (new Date(json['start'])),
        'threeChildrenRate': !(0, runtime_1.exists)(json, 'threeChildrenRate') ? undefined : json['threeChildrenRate'],
        'threePersonRate': !(0, runtime_1.exists)(json, 'threePersonRate') ? undefined : json['threePersonRate'],
        'twoChildrenRate': !(0, runtime_1.exists)(json, 'twoChildrenRate') ? undefined : json['twoChildrenRate'],
        'twoPersonRate': !(0, runtime_1.exists)(json, 'twoPersonRate') ? undefined : json['twoPersonRate'],
    };
}
exports.EffectiveRateTypeFromJSONTyped = EffectiveRateTypeFromJSONTyped;
function EffectiveRateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amountBeforeTax': value.amountBeforeTax,
        'end': value.end === undefined ? undefined : (value.end.toISOString().substring(0, 10)),
        'extraChildRate': value.extraChildRate,
        'extraPersonRate': value.extraPersonRate,
        'fivePersonRate': value.fivePersonRate,
        'fourChildrenRate': value.fourChildrenRate,
        'fourPersonRate': value.fourPersonRate,
        'hotelId': value.hotelId,
        'minimumChildrenForFreeStay': value.minimumChildrenForFreeStay,
        'numberOfRooms': value.numberOfRooms,
        'oneChildRate': value.oneChildRate,
        'onePersonRate': value.onePersonRate,
        'overrideFloorAmount': value.overrideFloorAmount,
        'pointsRequired': value.pointsRequired,
        'rateByAgeBuckets': (0, RateByAgeBucketsType_1.RateByAgeBucketsTypeToJSON)(value.rateByAgeBuckets),
        'ratePlanCode': value.ratePlanCode,
        'roomType': value.roomType,
        'start': value.start === undefined ? undefined : (value.start.toISOString().substring(0, 10)),
        'threeChildrenRate': value.threeChildrenRate,
        'threePersonRate': value.threePersonRate,
        'twoChildrenRate': value.twoChildrenRate,
        'twoPersonRate': value.twoPersonRate,
    };
}
exports.EffectiveRateTypeToJSON = EffectiveRateTypeToJSON;
