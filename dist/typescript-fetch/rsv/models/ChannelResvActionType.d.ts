/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Cancel a reservation in OPERA through a channel. The cancellation of the reservation is committed in OPERA at once. There is no session reservation involved.
 * @export
 */
export declare const ChannelResvActionType: {
    readonly Book: "Book";
    readonly Hold: "Hold";
    readonly Initiate: "Initiate";
    readonly Ignore: "Ignore";
    readonly Modify: "Modify";
    readonly Commit: "Commit";
    readonly CommitOverrideEdits: "CommitOverrideEdits";
    readonly Create: "Create";
    readonly Change: "Change";
    readonly Cancel: "Cancel";
};
export type ChannelResvActionType = typeof ChannelResvActionType[keyof typeof ChannelResvActionType];
export declare function ChannelResvActionTypeFromJSON(json: any): ChannelResvActionType;
export declare function ChannelResvActionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelResvActionType;
export declare function ChannelResvActionTypeToJSON(value?: ChannelResvActionType | null): any;
