/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockId } from './BlockId';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { EffectiveRateType } from './EffectiveRateType';
import type { GuestCountsType } from './GuestCountsType';
import type { ReservationId } from './ReservationId';
import type { ReservationPackageType } from './ReservationPackageType';
import type { ReservationProfileType } from './ReservationProfileType';
import type { TimeSpanType } from './TimeSpanType';
/**
 * Search type can either be based on a reservation or based on a quotation. If a reservation name id is passed then most criteria are ignored.
 * @export
 * @interface ValidateRateInfoCriteria
 */
export interface ValidateRateInfoCriteria {
    /**
     *
     * @type {BlockId}
     * @memberof ValidateRateInfoCriteria
     */
    blockId?: BlockId;
    /**
     * The code specifying a monetary unit. Use ISO 4217, three alpha code.
     * @type {string}
     * @memberof ValidateRateInfoCriteria
     */
    currencyCode?: string;
    /**
     * The symbol for the currency, e.g, for currencyCode USD the symbol is $.
     * @type {string}
     * @memberof ValidateRateInfoCriteria
     */
    currencySymbol?: string;
    /**
     * Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).
     * @type {number}
     * @memberof ValidateRateInfoCriteria
     */
    decimalPlaces?: number;
    /**
     * This field is only required when the criteria is meant for a detailed results. The date for the rate detail is needed.
     * @type {string}
     * @memberof ValidateRateInfoCriteria
     */
    detailDate?: string;
    /**
     * Collection of effective rate amount per guest on specific dates.
     * @type {Array<EffectiveRateType>}
     * @memberof ValidateRateInfoCriteria
     */
    effectiveRates?: Array<EffectiveRateType>;
    /**
     *
     * @type {GuestCountsType}
     * @memberof ValidateRateInfoCriteria
     */
    guestCounts?: GuestCountsType;
    /**
     *
     * @type {number}
     * @memberof ValidateRateInfoCriteria
     */
    quantity?: number;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof ValidateRateInfoCriteria
     */
    ratePlanCode?: string;
    /**
     *
     * @type {ReservationId}
     * @memberof ValidateRateInfoCriteria
     */
    reservationId?: ReservationId;
    /**
     * A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
     * @type {Array<ReservationPackageType>}
     * @memberof ValidateRateInfoCriteria
     */
    reservationPackages?: Array<ReservationPackageType>;
    /**
     * Refer to Generic common types document.
     * @type {Array<ReservationProfileType>}
     * @memberof ValidateRateInfoCriteria
     */
    reservationProfiles?: Array<ReservationProfileType>;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ValidateRateInfoCriteria
     */
    resvRateAmount?: CurrencyAmountType;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof ValidateRateInfoCriteria
     */
    roomType?: string;
    /**
     * Flag to indicate if summary information is required.
     * @type {boolean}
     * @memberof ValidateRateInfoCriteria
     */
    summaryInfo?: boolean;
    /**
     *
     * @type {TimeSpanType}
     * @memberof ValidateRateInfoCriteria
     */
    timeSpan?: TimeSpanType;
}
/**
 * Check if a given object implements the ValidateRateInfoCriteria interface.
 */
export declare function instanceOfValidateRateInfoCriteria(value: object): boolean;
export declare function ValidateRateInfoCriteriaFromJSON(json: any): ValidateRateInfoCriteria;
export declare function ValidateRateInfoCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateRateInfoCriteria;
export declare function ValidateRateInfoCriteriaToJSON(value?: ValidateRateInfoCriteria | null): any;
