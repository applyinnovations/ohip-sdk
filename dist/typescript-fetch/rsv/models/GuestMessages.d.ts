/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InstanceLink } from './InstanceLink';
import type { ResvGuestMessageType } from './ResvGuestMessageType';
import type { WarningType } from './WarningType';
/**
 * Response object to the request to retrieve Guest Messages for a Reservation.
 * @export
 * @interface GuestMessages
 */
export interface GuestMessages {
    /**
     * Holds the Message Information
     * @type {Array<ResvGuestMessageType>}
     * @memberof GuestMessages
     */
    guestMessages?: Array<ResvGuestMessageType>;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof GuestMessages
     */
    hasMore?: boolean;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof GuestMessages
     */
    limit?: number;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof GuestMessages
     */
    links?: Array<InstanceLink>;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof GuestMessages
     */
    offset?: number;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof GuestMessages
     */
    totalPages?: number;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof GuestMessages
     */
    totalResults?: number;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof GuestMessages
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the GuestMessages interface.
 */
export declare function instanceOfGuestMessages(value: object): boolean;
export declare function GuestMessagesFromJSON(json: any): GuestMessages;
export declare function GuestMessagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestMessages;
export declare function GuestMessagesToJSON(value?: GuestMessages | null): any;
