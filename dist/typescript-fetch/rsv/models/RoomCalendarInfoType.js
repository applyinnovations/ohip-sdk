"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomCalendarInfoTypeToJSON = exports.RoomCalendarInfoTypeFromJSONTyped = exports.RoomCalendarInfoTypeFromJSON = exports.instanceOfRoomCalendarInfoType = void 0;
const runtime_1 = require("../runtime");
const ComponentBlockOutDates_1 = require("./ComponentBlockOutDates");
const RoomInfo_1 = require("./RoomInfo");
const RoomOwnerStatusType_1 = require("./RoomOwnerStatusType");
const RoomScheduleType_1 = require("./RoomScheduleType");
/**
 * Check if a given object implements the RoomCalendarInfoType interface.
 */
function instanceOfRoomCalendarInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomCalendarInfoType = instanceOfRoomCalendarInfoType;
function RoomCalendarInfoTypeFromJSON(json) {
    return RoomCalendarInfoTypeFromJSONTyped(json, false);
}
exports.RoomCalendarInfoTypeFromJSON = RoomCalendarInfoTypeFromJSON;
function RoomCalendarInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomInfo': !(0, runtime_1.exists)(json, 'roomInfo') ? undefined : (0, RoomInfo_1.RoomInfoFromJSON)(json['roomInfo']),
        'roomSchedule': !(0, runtime_1.exists)(json, 'roomSchedule') ? undefined : (json['roomSchedule'].map(RoomScheduleType_1.RoomScheduleTypeFromJSON)),
        'componentRoomReservationsForSuite': !(0, runtime_1.exists)(json, 'componentRoomReservationsForSuite') ? undefined : (json['componentRoomReservationsForSuite'].map(ComponentBlockOutDates_1.ComponentBlockOutDatesFromJSON)),
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'roomOrder': !(0, runtime_1.exists)(json, 'roomOrder') ? undefined : json['roomOrder'],
        'componentSuite': !(0, runtime_1.exists)(json, 'componentSuite') ? undefined : json['componentSuite'],
        'pseudo': !(0, runtime_1.exists)(json, 'pseudo') ? undefined : json['pseudo'],
        'houseKeeping': !(0, runtime_1.exists)(json, 'houseKeeping') ? undefined : json['houseKeeping'],
        'roomOwnerStatus': !(0, runtime_1.exists)(json, 'roomOwnerStatus') ? undefined : (0, RoomOwnerStatusType_1.RoomOwnerStatusTypeFromJSON)(json['roomOwnerStatus']),
    };
}
exports.RoomCalendarInfoTypeFromJSONTyped = RoomCalendarInfoTypeFromJSONTyped;
function RoomCalendarInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomInfo': (0, RoomInfo_1.RoomInfoToJSON)(value.roomInfo),
        'roomSchedule': value.roomSchedule === undefined ? undefined : (value.roomSchedule.map(RoomScheduleType_1.RoomScheduleTypeToJSON)),
        'componentRoomReservationsForSuite': value.componentRoomReservationsForSuite === undefined ? undefined : (value.componentRoomReservationsForSuite.map(ComponentBlockOutDates_1.ComponentBlockOutDatesToJSON)),
        'roomId': value.roomId,
        'roomOrder': value.roomOrder,
        'componentSuite': value.componentSuite,
        'pseudo': value.pseudo,
        'houseKeeping': value.houseKeeping,
        'roomOwnerStatus': (0, RoomOwnerStatusType_1.RoomOwnerStatusTypeToJSON)(value.roomOwnerStatus),
    };
}
exports.RoomCalendarInfoTypeToJSON = RoomCalendarInfoTypeToJSON;
