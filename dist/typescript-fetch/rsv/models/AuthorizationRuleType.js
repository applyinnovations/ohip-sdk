"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationRuleTypeToJSON = exports.AuthorizationRuleTypeFromJSONTyped = exports.AuthorizationRuleTypeFromJSON = exports.instanceOfAuthorizationRuleType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the AuthorizationRuleType interface.
 */
function instanceOfAuthorizationRuleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAuthorizationRuleType = instanceOfAuthorizationRuleType;
function AuthorizationRuleTypeFromJSON(json) {
    return AuthorizationRuleTypeFromJSONTyped(json, false);
}
exports.AuthorizationRuleTypeFromJSON = AuthorizationRuleTypeFromJSON;
function AuthorizationRuleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'percent': !(0, runtime_1.exists)(json, 'percent') ? undefined : json['percent'],
    };
}
exports.AuthorizationRuleTypeFromJSONTyped = AuthorizationRuleTypeFromJSONTyped;
function AuthorizationRuleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'code': value.code,
        'percent': value.percent,
    };
}
exports.AuthorizationRuleTypeToJSON = AuthorizationRuleTypeToJSON;
