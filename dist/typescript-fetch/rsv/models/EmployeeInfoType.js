"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmployeeInfoTypeToJSON = exports.EmployeeInfoTypeFromJSONTyped = exports.EmployeeInfoTypeFromJSON = exports.instanceOfEmployeeInfoType = void 0;
const runtime_1 = require("../runtime");
const AddressInfoType_1 = require("./AddressInfoType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const EmailInfoType_1 = require("./EmailInfoType");
const PersonNameType_1 = require("./PersonNameType");
const TelephoneInfoType_1 = require("./TelephoneInfoType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the EmployeeInfoType interface.
 */
function instanceOfEmployeeInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEmployeeInfoType = instanceOfEmployeeInfoType;
function EmployeeInfoTypeFromJSON(json) {
    return EmployeeInfoTypeFromJSONTyped(json, false);
}
exports.EmployeeInfoTypeFromJSON = EmployeeInfoTypeFromJSON;
function EmployeeInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'addressInfo': !(0, runtime_1.exists)(json, 'addressInfo') ? undefined : (0, AddressInfoType_1.AddressInfoTypeFromJSON)(json['addressInfo']),
        'birthDate': !(0, runtime_1.exists)(json, 'birthDate') ? undefined : json['birthDate'],
        'birthDateMasked': !(0, runtime_1.exists)(json, 'birthDateMasked') ? undefined : json['birthDateMasked'],
        'department': !(0, runtime_1.exists)(json, 'department') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['department']),
        'emailInfo': !(0, runtime_1.exists)(json, 'emailInfo') ? undefined : (0, EmailInfoType_1.EmailInfoTypeFromJSON)(json['emailInfo']),
        'gender': !(0, runtime_1.exists)(json, 'gender') ? undefined : json['gender'],
        'personName': !(0, runtime_1.exists)(json, 'personName') ? undefined : (0, PersonNameType_1.PersonNameTypeFromJSON)(json['personName']),
        'phoneInfo': !(0, runtime_1.exists)(json, 'phoneInfo') ? undefined : (0, TelephoneInfoType_1.TelephoneInfoTypeFromJSON)(json['phoneInfo']),
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['profileId']),
    };
}
exports.EmployeeInfoTypeFromJSONTyped = EmployeeInfoTypeFromJSONTyped;
function EmployeeInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'addressInfo': (0, AddressInfoType_1.AddressInfoTypeToJSON)(value.addressInfo),
        'birthDate': value.birthDate,
        'birthDateMasked': value.birthDateMasked,
        'department': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.department),
        'emailInfo': (0, EmailInfoType_1.EmailInfoTypeToJSON)(value.emailInfo),
        'gender': value.gender,
        'personName': (0, PersonNameType_1.PersonNameTypeToJSON)(value.personName),
        'phoneInfo': (0, TelephoneInfoType_1.TelephoneInfoTypeToJSON)(value.phoneInfo),
        'profileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.profileId),
    };
}
exports.EmployeeInfoTypeToJSON = EmployeeInfoTypeToJSON;
