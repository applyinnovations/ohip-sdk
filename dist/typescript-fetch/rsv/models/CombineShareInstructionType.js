"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CombineShareInstructionTypeToJSON = exports.CombineShareInstructionTypeFromJSONTyped = exports.CombineShareInstructionTypeFromJSON = exports.instanceOfCombineShareInstructionType = void 0;
const runtime_1 = require("../runtime");
const EffectiveRateType_1 = require("./EffectiveRateType");
const OverrideInstructionType_1 = require("./OverrideInstructionType");
const RateChangeInstructionType_1 = require("./RateChangeInstructionType");
const ShareDistributionInstructionType_1 = require("./ShareDistributionInstructionType");
/**
 * Check if a given object implements the CombineShareInstructionType interface.
 */
function instanceOfCombineShareInstructionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCombineShareInstructionType = instanceOfCombineShareInstructionType;
function CombineShareInstructionTypeFromJSON(json) {
    return CombineShareInstructionTypeFromJSONTyped(json, false);
}
exports.CombineShareInstructionTypeFromJSON = CombineShareInstructionTypeFromJSON;
function CombineShareInstructionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'distributionType': !(0, runtime_1.exists)(json, 'distributionType') ? undefined : (0, ShareDistributionInstructionType_1.ShareDistributionInstructionTypeFromJSON)(json['distributionType']),
        'effectiveRates': !(0, runtime_1.exists)(json, 'effectiveRates') ? undefined : (json['effectiveRates'].map(EffectiveRateType_1.EffectiveRateTypeFromJSON)),
        'overrideInstruction': !(0, runtime_1.exists)(json, 'overrideInstruction') ? undefined : (0, OverrideInstructionType_1.OverrideInstructionTypeFromJSON)(json['overrideInstruction']),
        'overrideInventoryCheck': !(0, runtime_1.exists)(json, 'overrideInventoryCheck') ? undefined : json['overrideInventoryCheck'],
        'overrideMaxOccupancyCheck': !(0, runtime_1.exists)(json, 'overrideMaxOccupancyCheck') ? undefined : json['overrideMaxOccupancyCheck'],
        'rateChangeInstruction': !(0, runtime_1.exists)(json, 'rateChangeInstruction') ? undefined : (0, RateChangeInstructionType_1.RateChangeInstructionTypeFromJSON)(json['rateChangeInstruction']),
        'roomMoveCheckedinResv': !(0, runtime_1.exists)(json, 'roomMoveCheckedinResv') ? undefined : json['roomMoveCheckedinResv'],
    };
}
exports.CombineShareInstructionTypeFromJSONTyped = CombineShareInstructionTypeFromJSONTyped;
function CombineShareInstructionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'distributionType': (0, ShareDistributionInstructionType_1.ShareDistributionInstructionTypeToJSON)(value.distributionType),
        'effectiveRates': value.effectiveRates === undefined ? undefined : (value.effectiveRates.map(EffectiveRateType_1.EffectiveRateTypeToJSON)),
        'overrideInstruction': (0, OverrideInstructionType_1.OverrideInstructionTypeToJSON)(value.overrideInstruction),
        'overrideInventoryCheck': value.overrideInventoryCheck,
        'overrideMaxOccupancyCheck': value.overrideMaxOccupancyCheck,
        'rateChangeInstruction': (0, RateChangeInstructionType_1.RateChangeInstructionTypeToJSON)(value.rateChangeInstruction),
        'roomMoveCheckedinResv': value.roomMoveCheckedinResv,
    };
}
exports.CombineShareInstructionTypeToJSON = CombineShareInstructionTypeToJSON;
