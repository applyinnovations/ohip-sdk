/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DailyRateType } from './DailyRateType';
import {
    DailyRateTypeFromJSON,
    DailyRateTypeFromJSONTyped,
    DailyRateTypeToJSON,
} from './DailyRateType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';

/**
 * 
 * @export
 * @interface ShareReservationType
 */
export interface ShareReservationType {
    /**
     * Defines room rate information on a daily basis.
     * @type {Array<DailyRateType>}
     * @memberof ShareReservationType
     */
    dailyRates?: Array<DailyRateType>;
    /**
     * 
     * @type {ReservationId}
     * @memberof ShareReservationType
     */
    reservationId?: ReservationId;
}

/**
 * Check if a given object implements the ShareReservationType interface.
 */
export function instanceOfShareReservationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ShareReservationTypeFromJSON(json: any): ShareReservationType {
    return ShareReservationTypeFromJSONTyped(json, false);
}

export function ShareReservationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareReservationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyRates': !exists(json, 'dailyRates') ? undefined : ((json['dailyRates'] as Array<any>).map(DailyRateTypeFromJSON)),
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
    };
}

export function ShareReservationTypeToJSON(value?: ShareReservationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dailyRates': value.dailyRates === undefined ? undefined : ((value.dailyRates as Array<any>).map(DailyRateTypeToJSON)),
        'reservationId': ReservationIdToJSON(value.reservationId),
    };
}

