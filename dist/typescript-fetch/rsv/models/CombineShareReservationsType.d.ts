/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CombineShareFromExistingReservationType } from './CombineShareFromExistingReservationType';
import type { CombineShareFromProfileType } from './CombineShareFromProfileType';
import type { CombineShareInstructionType } from './CombineShareInstructionType';
import type { CombineShareReservationsTypeFetchInstructions } from './CombineShareReservationsTypeFetchInstructions';
import type { CombineShareReservationsTypeShareToReservation } from './CombineShareReservationsTypeShareToReservation';
import type { ReservationRoomOwnershipType } from './ReservationRoomOwnershipType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Record Type for Combining Share Reservations.
 * @export
 * @interface CombineShareReservationsType
 */
export interface CombineShareReservationsType {
    /**
     *
     * @type {CombineShareInstructionType}
     * @memberof CombineShareReservationsType
     */
    combineShareInstruction?: CombineShareInstructionType;
    /**
     * Opera Hotel/Resort code for the Combine Share Reservations request.
     * @type {string}
     * @memberof CombineShareReservationsType
     */
    hotelId?: string;
    /**
     *
     * @type {CombineShareReservationsTypeShareToReservation}
     * @memberof CombineShareReservationsType
     */
    shareToReservation?: CombineShareReservationsTypeShareToReservation;
    /**
     *
     * @type {UniqueIDType}
     * @memberof CombineShareReservationsType
     */
    existingReservationId?: UniqueIDType;
    /**
     * Type for the profile information to create a new share reservation. This is used to create sharers from profiles.
     * @type {Array<CombineShareFromProfileType>}
     * @memberof CombineShareReservationsType
     */
    newReservations?: Array<CombineShareFromProfileType>;
    /**
     *
     * @type {CombineShareReservationsTypeFetchInstructions}
     * @memberof CombineShareReservationsType
     */
    fetchInstructions?: CombineShareReservationsTypeFetchInstructions;
    /**
     * Override the room ownership of the room currently assigned to this reservation. This is applicable when Room Rotation OPERA Control is active.
     * @type {boolean}
     * @memberof CombineShareReservationsType
     */
    overrideRoomOwnership?: boolean;
    /**
     *
     * @type {ReservationRoomOwnershipType}
     * @memberof CombineShareReservationsType
     */
    roomOwnershipType?: ReservationRoomOwnershipType;
    /**
     *
     * @type {CombineShareFromExistingReservationType}
     * @memberof CombineShareReservationsType
     */
    existingReservation?: CombineShareFromExistingReservationType;
}
/**
 * Check if a given object implements the CombineShareReservationsType interface.
 */
export declare function instanceOfCombineShareReservationsType(value: object): boolean;
export declare function CombineShareReservationsTypeFromJSON(json: any): CombineShareReservationsType;
export declare function CombineShareReservationsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombineShareReservationsType;
export declare function CombineShareReservationsTypeToJSON(value?: CombineShareReservationsType | null): any;
