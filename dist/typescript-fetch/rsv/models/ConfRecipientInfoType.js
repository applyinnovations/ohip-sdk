"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfRecipientInfoTypeToJSON = exports.ConfRecipientInfoTypeFromJSONTyped = exports.ConfRecipientInfoTypeFromJSON = exports.instanceOfConfRecipientInfoType = void 0;
const runtime_1 = require("../runtime");
const AddressInfoType_1 = require("./AddressInfoType");
const EmailInfoType_1 = require("./EmailInfoType");
const ProfileId_1 = require("./ProfileId");
const ProfileNameType_1 = require("./ProfileNameType");
const ProfileTypeType_1 = require("./ProfileTypeType");
const TelephoneInfoType_1 = require("./TelephoneInfoType");
/**
 * Check if a given object implements the ConfRecipientInfoType interface.
 */
function instanceOfConfRecipientInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfRecipientInfoType = instanceOfConfRecipientInfoType;
function ConfRecipientInfoTypeFromJSON(json) {
    return ConfRecipientInfoTypeFromJSONTyped(json, false);
}
exports.ConfRecipientInfoTypeFromJSON = ConfRecipientInfoTypeFromJSON;
function ConfRecipientInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'formerName': !(0, runtime_1.exists)(json, 'formerName') ? undefined : (0, ProfileNameType_1.ProfileNameTypeFromJSON)(json['formerName']),
        'addressInfo': !(0, runtime_1.exists)(json, 'addressInfo') ? undefined : (0, AddressInfoType_1.AddressInfoTypeFromJSON)(json['addressInfo']),
        'emailInfo': !(0, runtime_1.exists)(json, 'emailInfo') ? undefined : (0, EmailInfoType_1.EmailInfoTypeFromJSON)(json['emailInfo']),
        'faxInfo': !(0, runtime_1.exists)(json, 'faxInfo') ? undefined : (0, TelephoneInfoType_1.TelephoneInfoTypeFromJSON)(json['faxInfo']),
        'telephoneInfo': !(0, runtime_1.exists)(json, 'telephoneInfo') ? undefined : (0, TelephoneInfoType_1.TelephoneInfoTypeFromJSON)(json['telephoneInfo']),
        'recipientType': !(0, runtime_1.exists)(json, 'recipientType') ? undefined : (0, ProfileTypeType_1.ProfileTypeTypeFromJSON)(json['recipientType']),
    };
}
exports.ConfRecipientInfoTypeFromJSONTyped = ConfRecipientInfoTypeFromJSONTyped;
function ConfRecipientInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'formerName': (0, ProfileNameType_1.ProfileNameTypeToJSON)(value.formerName),
        'addressInfo': (0, AddressInfoType_1.AddressInfoTypeToJSON)(value.addressInfo),
        'emailInfo': (0, EmailInfoType_1.EmailInfoTypeToJSON)(value.emailInfo),
        'faxInfo': (0, TelephoneInfoType_1.TelephoneInfoTypeToJSON)(value.faxInfo),
        'telephoneInfo': (0, TelephoneInfoType_1.TelephoneInfoTypeToJSON)(value.telephoneInfo),
        'recipientType': (0, ProfileTypeType_1.ProfileTypeTypeToJSON)(value.recipientType),
    };
}
exports.ConfRecipientInfoTypeToJSON = ConfRecipientInfoTypeToJSON;
