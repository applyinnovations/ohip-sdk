/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvanceCheckInType } from './AdvanceCheckInType';
import {
    AdvanceCheckInTypeFromJSON,
    AdvanceCheckInTypeFromJSONTyped,
    AdvanceCheckInTypeToJSON,
} from './AdvanceCheckInType';
import type { AlertType } from './AlertType';
import {
    AlertTypeFromJSON,
    AlertTypeFromJSONTyped,
    AlertTypeToJSON,
} from './AlertType';
import type { AttachmentType } from './AttachmentType';
import {
    AttachmentTypeFromJSON,
    AttachmentTypeFromJSONTyped,
    AttachmentTypeToJSON,
} from './AttachmentType';
import type { AwardType } from './AwardType';
import {
    AwardTypeFromJSON,
    AwardTypeFromJSONTyped,
    AwardTypeToJSON,
} from './AwardType';
import type { CallType } from './CallType';
import {
    CallTypeFromJSON,
    CallTypeFromJSONTyped,
    CallTypeToJSON,
} from './CallType';
import type { CateringResInfoType } from './CateringResInfoType';
import {
    CateringResInfoTypeFromJSON,
    CateringResInfoTypeFromJSONTyped,
    CateringResInfoTypeToJSON,
} from './CateringResInfoType';
import type { ChangeInstructionType } from './ChangeInstructionType';
import {
    ChangeInstructionTypeFromJSON,
    ChangeInstructionTypeFromJSONTyped,
    ChangeInstructionTypeToJSON,
} from './ChangeInstructionType';
import type { CommentInfoType } from './CommentInfoType';
import {
    CommentInfoTypeFromJSON,
    CommentInfoTypeFromJSONTyped,
    CommentInfoTypeToJSON,
} from './CommentInfoType';
import type { CompAuthorizerInfoType } from './CompAuthorizerInfoType';
import {
    CompAuthorizerInfoTypeFromJSON,
    CompAuthorizerInfoTypeFromJSONTyped,
    CompAuthorizerInfoTypeToJSON,
} from './CompAuthorizerInfoType';
import type { ConfirmationType } from './ConfirmationType';
import {
    ConfirmationTypeFromJSON,
    ConfirmationTypeFromJSONTyped,
    ConfirmationTypeToJSON,
} from './ConfirmationType';
import type { CustomChargeExemptionType } from './CustomChargeExemptionType';
import {
    CustomChargeExemptionTypeFromJSON,
    CustomChargeExemptionTypeFromJSONTyped,
    CustomChargeExemptionTypeToJSON,
} from './CustomChargeExemptionType';
import type { ECouponType } from './ECouponType';
import {
    ECouponTypeFromJSON,
    ECouponTypeFromJSONTyped,
    ECouponTypeToJSON,
} from './ECouponType';
import type { ExternalReferenceType } from './ExternalReferenceType';
import {
    ExternalReferenceTypeFromJSON,
    ExternalReferenceTypeFromJSONTyped,
    ExternalReferenceTypeToJSON,
} from './ExternalReferenceType';
import type { FetchActivityBookingsType } from './FetchActivityBookingsType';
import {
    FetchActivityBookingsTypeFromJSON,
    FetchActivityBookingsTypeFromJSONTyped,
    FetchActivityBookingsTypeToJSON,
} from './FetchActivityBookingsType';
import type { FixedChargeType } from './FixedChargeType';
import {
    FixedChargeTypeFromJSON,
    FixedChargeTypeFromJSONTyped,
    FixedChargeTypeToJSON,
} from './FixedChargeType';
import type { FolioShortInfoType } from './FolioShortInfoType';
import {
    FolioShortInfoTypeFromJSON,
    FolioShortInfoTypeFromJSONTyped,
    FolioShortInfoTypeToJSON,
} from './FolioShortInfoType';
import type { GuestMessageType } from './GuestMessageType';
import {
    GuestMessageTypeFromJSON,
    GuestMessageTypeFromJSONTyped,
    GuestMessageTypeToJSON,
} from './GuestMessageType';
import type { HotelReservationInstructionTypeResponseInstructions } from './HotelReservationInstructionTypeResponseInstructions';
import {
    HotelReservationInstructionTypeResponseInstructionsFromJSON,
    HotelReservationInstructionTypeResponseInstructionsFromJSONTyped,
    HotelReservationInstructionTypeResponseInstructionsToJSON,
} from './HotelReservationInstructionTypeResponseInstructions';
import type { HotelReservationTraceType } from './HotelReservationTraceType';
import {
    HotelReservationTraceTypeFromJSON,
    HotelReservationTraceTypeFromJSONTyped,
    HotelReservationTraceTypeToJSON,
} from './HotelReservationTraceType';
import type { HotelReservationTypeCancellation } from './HotelReservationTypeCancellation';
import {
    HotelReservationTypeCancellationFromJSON,
    HotelReservationTypeCancellationFromJSONTyped,
    HotelReservationTypeCancellationToJSON,
} from './HotelReservationTypeCancellation';
import type { HotelReservationTypeReservationProfiles } from './HotelReservationTypeReservationProfiles';
import {
    HotelReservationTypeReservationProfilesFromJSON,
    HotelReservationTypeReservationProfilesFromJSONTyped,
    HotelReservationTypeReservationProfilesToJSON,
} from './HotelReservationTypeReservationProfiles';
import type { HotelReservationTypeTransactionDiversions } from './HotelReservationTypeTransactionDiversions';
import {
    HotelReservationTypeTransactionDiversionsFromJSON,
    HotelReservationTypeTransactionDiversionsFromJSONTyped,
    HotelReservationTypeTransactionDiversionsToJSON,
} from './HotelReservationTypeTransactionDiversions';
import type { HotelReservationsType } from './HotelReservationsType';
import {
    HotelReservationsTypeFromJSON,
    HotelReservationsTypeFromJSONTyped,
    HotelReservationsTypeToJSON,
} from './HotelReservationsType';
import type { IndicatorType } from './IndicatorType';
import {
    IndicatorTypeFromJSON,
    IndicatorTypeFromJSONTyped,
    IndicatorTypeToJSON,
} from './IndicatorType';
import type { LinkedReservationsInfoType } from './LinkedReservationsInfoType';
import {
    LinkedReservationsInfoTypeFromJSON,
    LinkedReservationsInfoTypeFromJSONTyped,
    LinkedReservationsInfoTypeToJSON,
} from './LinkedReservationsInfoType';
import type { MembershipType } from './MembershipType';
import {
    MembershipTypeFromJSON,
    MembershipTypeFromJSONTyped,
    MembershipTypeToJSON,
} from './MembershipType';
import type { NameValueDetailType } from './NameValueDetailType';
import {
    NameValueDetailTypeFromJSON,
    NameValueDetailTypeFromJSONTyped,
    NameValueDetailTypeToJSON,
} from './NameValueDetailType';
import type { OverrideInstructionType } from './OverrideInstructionType';
import {
    OverrideInstructionTypeFromJSON,
    OverrideInstructionTypeFromJSONTyped,
    OverrideInstructionTypeToJSON,
} from './OverrideInstructionType';
import type { PMSResStatusType } from './PMSResStatusType';
import {
    PMSResStatusTypeFromJSON,
    PMSResStatusTypeFromJSONTyped,
    PMSResStatusTypeToJSON,
} from './PMSResStatusType';
import type { PreferenceTypeType } from './PreferenceTypeType';
import {
    PreferenceTypeTypeFromJSON,
    PreferenceTypeTypeFromJSONTyped,
    PreferenceTypeTypeToJSON,
} from './PreferenceTypeType';
import type { PrepaidCardType } from './PrepaidCardType';
import {
    PrepaidCardTypeFromJSON,
    PrepaidCardTypeFromJSONTyped,
    PrepaidCardTypeToJSON,
} from './PrepaidCardType';
import type { ResAccessRestrictionType } from './ResAccessRestrictionType';
import {
    ResAccessRestrictionTypeFromJSON,
    ResAccessRestrictionTypeFromJSONTyped,
    ResAccessRestrictionTypeToJSON,
} from './ResAccessRestrictionType';
import type { ResCashieringType } from './ResCashieringType';
import {
    ResCashieringTypeFromJSON,
    ResCashieringTypeFromJSONTyped,
    ResCashieringTypeToJSON,
} from './ResCashieringType';
import type { ResCommunicationType } from './ResCommunicationType';
import {
    ResCommunicationTypeFromJSON,
    ResCommunicationTypeFromJSONTyped,
    ResCommunicationTypeToJSON,
} from './ResCommunicationType';
import type { ResGuestAdditionalInfoType } from './ResGuestAdditionalInfoType';
import {
    ResGuestAdditionalInfoTypeFromJSON,
    ResGuestAdditionalInfoTypeFromJSONTyped,
    ResGuestAdditionalInfoTypeToJSON,
} from './ResGuestAdditionalInfoType';
import type { ResGuestType } from './ResGuestType';
import {
    ResGuestTypeFromJSON,
    ResGuestTypeFromJSONTyped,
    ResGuestTypeToJSON,
} from './ResGuestType';
import type { ResHousekeepingType } from './ResHousekeepingType';
import {
    ResHousekeepingTypeFromJSON,
    ResHousekeepingTypeFromJSONTyped,
    ResHousekeepingTypeToJSON,
} from './ResHousekeepingType';
import type { ResInventoryItemsType } from './ResInventoryItemsType';
import {
    ResInventoryItemsTypeFromJSON,
    ResInventoryItemsTypeFromJSONTyped,
    ResInventoryItemsTypeToJSON,
} from './ResInventoryItemsType';
import type { ResSharedGuestInfoType } from './ResSharedGuestInfoType';
import {
    ResSharedGuestInfoTypeFromJSON,
    ResSharedGuestInfoTypeFromJSONTyped,
    ResSharedGuestInfoTypeToJSON,
} from './ResSharedGuestInfoType';
import type { ResStatClassificationType } from './ResStatClassificationType';
import {
    ResStatClassificationTypeFromJSON,
    ResStatClassificationTypeFromJSONTyped,
    ResStatClassificationTypeToJSON,
} from './ResStatClassificationType';
import type { ReservationAllowedActionType } from './ReservationAllowedActionType';
import {
    ReservationAllowedActionTypeFromJSON,
    ReservationAllowedActionTypeFromJSONTyped,
    ReservationAllowedActionTypeToJSON,
} from './ReservationAllowedActionType';
import type { ReservationECertificateType } from './ReservationECertificateType';
import {
    ReservationECertificateTypeFromJSON,
    ReservationECertificateTypeFromJSONTyped,
    ReservationECertificateTypeToJSON,
} from './ReservationECertificateType';
import type { ReservationLocatorType } from './ReservationLocatorType';
import {
    ReservationLocatorTypeFromJSON,
    ReservationLocatorTypeFromJSONTyped,
    ReservationLocatorTypeToJSON,
} from './ReservationLocatorType';
import type { ReservationMembershipType } from './ReservationMembershipType';
import {
    ReservationMembershipTypeFromJSON,
    ReservationMembershipTypeFromJSONTyped,
    ReservationMembershipTypeToJSON,
} from './ReservationMembershipType';
import type { ReservationPackageType } from './ReservationPackageType';
import {
    ReservationPackageTypeFromJSON,
    ReservationPackageTypeFromJSONTyped,
    ReservationPackageTypeToJSON,
} from './ReservationPackageType';
import type { ReservationPaymentMethodType } from './ReservationPaymentMethodType';
import {
    ReservationPaymentMethodTypeFromJSON,
    ReservationPaymentMethodTypeFromJSONTyped,
    ReservationPaymentMethodTypeToJSON,
} from './ReservationPaymentMethodType';
import type { ReservationPoliciesType } from './ReservationPoliciesType';
import {
    ReservationPoliciesTypeFromJSON,
    ReservationPoliciesTypeFromJSONTyped,
    ReservationPoliciesTypeToJSON,
} from './ReservationPoliciesType';
import type { ReservationQueueInformationType } from './ReservationQueueInformationType';
import {
    ReservationQueueInformationTypeFromJSON,
    ReservationQueueInformationTypeFromJSONTyped,
    ReservationQueueInformationTypeToJSON,
} from './ReservationQueueInformationType';
import type { RoomStayType } from './RoomStayType';
import {
    RoomStayTypeFromJSON,
    RoomStayTypeFromJSONTyped,
    RoomStayTypeToJSON,
} from './RoomStayType';
import type { RoutingInfoType } from './RoutingInfoType';
import {
    RoutingInfoTypeFromJSON,
    RoutingInfoTypeFromJSONTyped,
    RoutingInfoTypeToJSON,
} from './RoutingInfoType';
import type { ServiceRequest } from './ServiceRequest';
import {
    ServiceRequestFromJSON,
    ServiceRequestFromJSONTyped,
    ServiceRequestToJSON,
} from './ServiceRequest';
import type { SourceOfSaleType } from './SourceOfSaleType';
import {
    SourceOfSaleTypeFromJSON,
    SourceOfSaleTypeFromJSONTyped,
    SourceOfSaleTypeToJSON,
} from './SourceOfSaleType';
import type { TicketType } from './TicketType';
import {
    TicketTypeFromJSON,
    TicketTypeFromJSONTyped,
    TicketTypeToJSON,
} from './TicketType';
import type { TrackItItemType } from './TrackItItemType';
import {
    TrackItItemTypeFromJSON,
    TrackItItemTypeFromJSONTyped,
    TrackItItemTypeToJSON,
} from './TrackItItemType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';
import type { WaitlistResType } from './WaitlistResType';
import {
    WaitlistResTypeFromJSON,
    WaitlistResTypeFromJSONTyped,
    WaitlistResTypeToJSON,
} from './WaitlistResType';

/**
 * The Reservation class contains the current reservation being created or altered.
 * @export
 * @interface HotelReservationInstructionType
 */
export interface HotelReservationInstructionType {
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof HotelReservationInstructionType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * This type contains unique information of external reference.
     * @type {Array<ExternalReferenceType>}
     * @memberof HotelReservationInstructionType
     */
    externalReferences?: Array<ExternalReferenceType>;
    /**
     * Information regarding associated reservations to the reservation.
     * @type {object}
     * @memberof HotelReservationInstructionType
     */
    associatedReservations?: object;
    /**
     * 
     * @type {SourceOfSaleType}
     * @memberof HotelReservationInstructionType
     */
    sourceOfSale?: SourceOfSaleType;
    /**
     * 
     * @type {RoomStayType}
     * @memberof HotelReservationInstructionType
     */
    roomStay?: RoomStayType;
    /**
     * 
     * @type {CompAuthorizerInfoType}
     * @memberof HotelReservationInstructionType
     */
    compAuthorizer?: CompAuthorizerInfoType;
    /**
     * Collection of guests associated with the reservation.
     * @type {Array<ResGuestType>}
     * @memberof HotelReservationInstructionType
     */
    reservationGuests?: Array<ResGuestType>;
    /**
     * Collection of shared guest reservations.
     * @type {Array<ResSharedGuestInfoType>}
     * @memberof HotelReservationInstructionType
     */
    sharedGuests?: Array<ResSharedGuestInfoType>;
    /**
     * 
     * @type {ResGuestAdditionalInfoType}
     * @memberof HotelReservationInstructionType
     */
    additionalGuestInfo?: ResGuestAdditionalInfoType;
    /**
     * 
     * @type {HotelReservationTypeReservationProfiles}
     * @memberof HotelReservationInstructionType
     */
    reservationProfiles?: HotelReservationTypeReservationProfiles;
    /**
     * 
     * @type {ResCommunicationType}
     * @memberof HotelReservationInstructionType
     */
    reservationCommunication?: ResCommunicationType;
    /**
     * List of awards.
     * @type {Array<AwardType>}
     * @memberof HotelReservationInstructionType
     */
    reservationAwards?: Array<AwardType>;
    /**
     * 
     * @type {Array<TrackItItemType>}
     * @memberof HotelReservationInstructionType
     */
    trackItItems?: Array<TrackItItemType>;
    /**
     * 
     * @type {HotelReservationsType}
     * @memberof HotelReservationInstructionType
     */
    shares?: HotelReservationsType;
    /**
     * Holds the Locator Information.
     * @type {Array<ReservationLocatorType>}
     * @memberof HotelReservationInstructionType
     */
    locators?: Array<ReservationLocatorType>;
    /**
     * Attachment List.
     * @type {Array<AttachmentType>}
     * @memberof HotelReservationInstructionType
     */
    attachments?: Array<AttachmentType>;
    /**
     * Attachment List.
     * @type {Array<AttachmentType>}
     * @memberof HotelReservationInstructionType
     */
    webRegistrationCards?: Array<AttachmentType>;
    /**
     * Service request.
     * @type {Array<ServiceRequest>}
     * @memberof HotelReservationInstructionType
     */
    serviceRequests?: Array<ServiceRequest>;
    /**
     * Criteria for fetching Activity Bookings.
     * @type {Array<FetchActivityBookingsType>}
     * @memberof HotelReservationInstructionType
     */
    reservationActivities?: Array<FetchActivityBookingsType>;
    /**
     * Criteria for fetching Activity Bookings.
     * @type {Array<FetchActivityBookingsType>}
     * @memberof HotelReservationInstructionType
     */
    scheduledActivities?: Array<FetchActivityBookingsType>;
    /**
     * Holds fixed charge detail.
     * @type {Array<PrepaidCardType>}
     * @memberof HotelReservationInstructionType
     */
    prepaidCards?: Array<PrepaidCardType>;
    /**
     * List of awards.
     * @type {Array<AwardType>}
     * @memberof HotelReservationInstructionType
     */
    profileAwards?: Array<AwardType>;
    /**
     * A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
     * @type {Array<ReservationPackageType>}
     * @memberof HotelReservationInstructionType
     */
    reservationPackages?: Array<ReservationPackageType>;
    /**
     * 
     * @type {ResInventoryItemsType}
     * @memberof HotelReservationInstructionType
     */
    inventoryItems?: ResInventoryItemsType;
    /**
     * List of Notes for the Guest related to the reservation.
     * @type {Array<CommentInfoType>}
     * @memberof HotelReservationInstructionType
     */
    comments?: Array<CommentInfoType>;
    /**
     * List of Notes for the Guest related to the profile.
     * @type {Array<CommentInfoType>}
     * @memberof HotelReservationInstructionType
     */
    guestComments?: Array<CommentInfoType>;
    /**
     * List of Memberships for the Guest related to the reservation.
     * @type {Array<MembershipType>}
     * @memberof HotelReservationInstructionType
     */
    guestMemberships?: Array<MembershipType>;
    /**
     * Collection of reservation preferences.
     * @type {Array<PreferenceTypeType>}
     * @memberof HotelReservationInstructionType
     */
    preferenceCollection?: Array<PreferenceTypeType>;
    /**
     * List of reservation memberships.
     * @type {Array<ReservationMembershipType>}
     * @memberof HotelReservationInstructionType
     */
    reservationMemberships?: Array<ReservationMembershipType>;
    /**
     * Defines reservation payment methods.
     * @type {Array<ReservationPaymentMethodType>}
     * @memberof HotelReservationInstructionType
     */
    reservationPaymentMethods?: Array<ReservationPaymentMethodType>;
    /**
     * A routing info object can either be of type Folio OR of type Room with its corresponding instructions.
     * @type {Array<RoutingInfoType>}
     * @memberof HotelReservationInstructionType
     */
    routingInstructions?: Array<RoutingInfoType>;
    /**
     * 
     * @type {ReservationPoliciesType}
     * @memberof HotelReservationInstructionType
     */
    reservationPolicies?: ReservationPoliciesType;
    /**
     * 
     * @type {ResCashieringType}
     * @memberof HotelReservationInstructionType
     */
    cashiering?: ResCashieringType;
    /**
     * 
     * @type {ResHousekeepingType}
     * @memberof HotelReservationInstructionType
     */
    housekeeping?: ResHousekeepingType;
    /**
     * 
     * @type {LinkedReservationsInfoType}
     * @memberof HotelReservationInstructionType
     */
    linkedReservation?: LinkedReservationsInfoType;
    /**
     * 
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    extSystemSync?: boolean;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof HotelReservationInstructionType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof HotelReservationInstructionType
     */
    reservationIndicators?: Array<IndicatorType>;
    /**
     * 
     * @type {WaitlistResType}
     * @memberof HotelReservationInstructionType
     */
    waitlist?: WaitlistResType;
    /**
     * 
     * @type {HotelReservationTypeCancellation}
     * @memberof HotelReservationInstructionType
     */
    cancellation?: HotelReservationTypeCancellation;
    /**
     * 
     * @type {CateringResInfoType}
     * @memberof HotelReservationInstructionType
     */
    catering?: CateringResInfoType;
    /**
     * 
     * @type {ResStatClassificationType}
     * @memberof HotelReservationInstructionType
     */
    statisticalClassification?: ResStatClassificationType;
    /**
     * List of alerts.
     * @type {Array<AlertType>}
     * @memberof HotelReservationInstructionType
     */
    alerts?: Array<AlertType>;
    /**
     * List of Reservation Traces.
     * @type {Array<HotelReservationTraceType>}
     * @memberof HotelReservationInstructionType
     */
    traces?: Array<HotelReservationTraceType>;
    /**
     * List of confirmation letters.
     * @type {Array<ConfirmationType>}
     * @memberof HotelReservationInstructionType
     */
    confirmationLetters?: Array<ConfirmationType>;
    /**
     * Holds call information.
     * @type {Array<CallType>}
     * @memberof HotelReservationInstructionType
     */
    callHistory?: Array<CallType>;
    /**
     * Holds fixed charge detail.
     * @type {Array<FixedChargeType>}
     * @memberof HotelReservationInstructionType
     */
    fixedCharges?: Array<FixedChargeType>;
    /**
     * Holds the Message Information
     * @type {Array<GuestMessageType>}
     * @memberof HotelReservationInstructionType
     */
    guestMessages?: Array<GuestMessageType>;
    /**
     * An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.
     * @type {number}
     * @memberof HotelReservationInstructionType
     */
    lockHandle?: number;
    /**
     * List of override actions done.
     * @type {Array<OverrideInstructionType>}
     * @memberof HotelReservationInstructionType
     */
    overrideInstructions?: Array<OverrideInstructionType>;
    /**
     * 
     * @type {ReservationQueueInformationType}
     * @memberof HotelReservationInstructionType
     */
    queue?: ReservationQueueInformationType;
    /**
     * Allowed action.
     * @type {Array<ReservationAllowedActionType>}
     * @memberof HotelReservationInstructionType
     */
    allowedActions?: Array<ReservationAllowedActionType>;
    /**
     * Collection of ECouponType object.
     * @type {Array<ECouponType>}
     * @memberof HotelReservationInstructionType
     */
    eCoupons?: Array<ECouponType>;
    /**
     * 
     * @type {HotelReservationTypeTransactionDiversions}
     * @memberof HotelReservationInstructionType
     */
    transactionDiversions?: HotelReservationTypeTransactionDiversions;
    /**
     * 
     * @type {AdvanceCheckInType}
     * @memberof HotelReservationInstructionType
     */
    advanceCheckIn?: AdvanceCheckInType;
    /**
     * Collection of TicketType objects.
     * @type {Array<TicketType>}
     * @memberof HotelReservationInstructionType
     */
    tickets?: Array<TicketType>;
    /**
     * Configurable Access Restriction Message for Excluded Block or Rate Code.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    accessRestrictionMessage?: string;
    /**
     * Collection of ECertificateType object.
     * @type {Array<ReservationECertificateType>}
     * @memberof HotelReservationInstructionType
     */
    eCertificates?: Array<ReservationECertificateType>;
    /**
     * 
     * @type {NameValueDetailType}
     * @memberof HotelReservationInstructionType
     */
    customNameValueDetail?: NameValueDetailType;
    /**
     * List of Custom Charge Exemptions.
     * @type {Array<CustomChargeExemptionType>}
     * @memberof HotelReservationInstructionType
     */
    customChargeExemptionDetails?: Array<CustomChargeExemptionType>;
    /**
     * This type contains a list of generated bills for a reservation.
     * @type {Array<FolioShortInfoType>}
     * @memberof HotelReservationInstructionType
     */
    folios?: Array<FolioShortInfoType>;
    /**
     * This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    autoBorrowFromHouse?: boolean;
    /**
     * Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    overrideExternalChecks?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    hotelId?: string;
    /**
     * Boolean True if this reservation is reserving rooms. False if it is only reserving services.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    roomStayReservation?: boolean;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof HotelReservationInstructionType
     */
    reservationStatus?: PMSResStatusType;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof HotelReservationInstructionType
     */
    computedReservationStatus?: PMSResStatusType;
    /**
     * When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    walkIn?: boolean;
    /**
     * Indicates whether to show the rate or not on a printed document which includes the rate.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    printRate?: boolean;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    lastModifierId?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {Date}
     * @memberof HotelReservationInstructionType
     */
    purgeDate?: Date;
    /**
     * Business Date when the reservation was created.
     * @type {Date}
     * @memberof HotelReservationInstructionType
     */
    createBusinessDate?: Date;
    /**
     * Business Date when the reservation was last reinstated.
     * @type {Date}
     * @memberof HotelReservationInstructionType
     */
    reinstateDate?: Date;
    /**
     * Party/PartyCode when reservation is part of a party(a small group).
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    party?: string;
    /**
     * Name Of the Resort/Hotel for the primary enrollment
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    primaryEnrollmentResort?: string;
    /**
     * Name of the Chain for the primary enrollment
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    primaryEnrollmentChain?: string;
    /**
     * Custom Reference to identify reservation.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    customReference?: string;
    /**
     * The color to display this reservation on room grid displays.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    displayColor?: string;
    /**
     * Mark this reservation as recently accessed.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * Indicates to Override the Room Inventory Check if applicable.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    overrideInventoryCheck?: boolean;
    /**
     * 
     * @type {ResAccessRestrictionType}
     * @memberof HotelReservationInstructionType
     */
    accessRestriction?: ResAccessRestrictionType;
    /**
     * Is the reservation pre-registered.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    preRegistered?: boolean;
    /**
     * Indicates whether the reservation is eligible for upgrade.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    upgradeEligible?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    overrideBlockRestriction?: boolean;
    /**
     * Flag to allow auto checkin
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    allowAutoCheckin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    hasOpenFolio?: boolean;
    /**
     * Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    allowMobileCheckout?: boolean;
    /**
     * Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    allowMobileViewFolio?: boolean;
    /**
     * Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    allowPreRegistration?: boolean;
    /**
     * Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    optedForCommunication?: boolean;
    /**
     * This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.
     * @type {string}
     * @memberof HotelReservationInstructionType
     */
    chargeCardNumber?: string;
    /**
     * Indicates to Override the Room Out Of Service Check if applicable.
     * @type {boolean}
     * @memberof HotelReservationInstructionType
     */
    overrideOutOfServiceCheck?: boolean;
    /**
     * 
     * @type {HotelReservationInstructionTypeResponseInstructions}
     * @memberof HotelReservationInstructionType
     */
    responseInstructions?: HotelReservationInstructionTypeResponseInstructions;
    /**
     * 
     * @type {ChangeInstructionType}
     * @memberof HotelReservationInstructionType
     */
    changeInstrunctions?: ChangeInstructionType;
}

/**
 * Check if a given object implements the HotelReservationInstructionType interface.
 */
export function instanceOfHotelReservationInstructionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelReservationInstructionTypeFromJSON(json: any): HotelReservationInstructionType {
    return HotelReservationInstructionTypeFromJSONTyped(json, false);
}

export function HotelReservationInstructionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelReservationInstructionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ((json['reservationIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'externalReferences': !exists(json, 'externalReferences') ? undefined : ((json['externalReferences'] as Array<any>).map(ExternalReferenceTypeFromJSON)),
        'associatedReservations': !exists(json, 'associatedReservations') ? undefined : json['associatedReservations'],
        'sourceOfSale': !exists(json, 'sourceOfSale') ? undefined : SourceOfSaleTypeFromJSON(json['sourceOfSale']),
        'roomStay': !exists(json, 'roomStay') ? undefined : RoomStayTypeFromJSON(json['roomStay']),
        'compAuthorizer': !exists(json, 'compAuthorizer') ? undefined : CompAuthorizerInfoTypeFromJSON(json['compAuthorizer']),
        'reservationGuests': !exists(json, 'reservationGuests') ? undefined : ((json['reservationGuests'] as Array<any>).map(ResGuestTypeFromJSON)),
        'sharedGuests': !exists(json, 'sharedGuests') ? undefined : ((json['sharedGuests'] as Array<any>).map(ResSharedGuestInfoTypeFromJSON)),
        'additionalGuestInfo': !exists(json, 'additionalGuestInfo') ? undefined : ResGuestAdditionalInfoTypeFromJSON(json['additionalGuestInfo']),
        'reservationProfiles': !exists(json, 'reservationProfiles') ? undefined : HotelReservationTypeReservationProfilesFromJSON(json['reservationProfiles']),
        'reservationCommunication': !exists(json, 'reservationCommunication') ? undefined : ResCommunicationTypeFromJSON(json['reservationCommunication']),
        'reservationAwards': !exists(json, 'reservationAwards') ? undefined : ((json['reservationAwards'] as Array<any>).map(AwardTypeFromJSON)),
        'trackItItems': !exists(json, 'trackItItems') ? undefined : ((json['trackItItems'] as Array<any>).map(TrackItItemTypeFromJSON)),
        'shares': !exists(json, 'shares') ? undefined : HotelReservationsTypeFromJSON(json['shares']),
        'locators': !exists(json, 'locators') ? undefined : ((json['locators'] as Array<any>).map(ReservationLocatorTypeFromJSON)),
        'attachments': !exists(json, 'attachments') ? undefined : ((json['attachments'] as Array<any>).map(AttachmentTypeFromJSON)),
        'webRegistrationCards': !exists(json, 'webRegistrationCards') ? undefined : ((json['webRegistrationCards'] as Array<any>).map(AttachmentTypeFromJSON)),
        'serviceRequests': !exists(json, 'serviceRequests') ? undefined : ((json['serviceRequests'] as Array<any>).map(ServiceRequestFromJSON)),
        'reservationActivities': !exists(json, 'reservationActivities') ? undefined : ((json['reservationActivities'] as Array<any>).map(FetchActivityBookingsTypeFromJSON)),
        'scheduledActivities': !exists(json, 'scheduledActivities') ? undefined : ((json['scheduledActivities'] as Array<any>).map(FetchActivityBookingsTypeFromJSON)),
        'prepaidCards': !exists(json, 'prepaidCards') ? undefined : ((json['prepaidCards'] as Array<any>).map(PrepaidCardTypeFromJSON)),
        'profileAwards': !exists(json, 'profileAwards') ? undefined : ((json['profileAwards'] as Array<any>).map(AwardTypeFromJSON)),
        'reservationPackages': !exists(json, 'reservationPackages') ? undefined : ((json['reservationPackages'] as Array<any>).map(ReservationPackageTypeFromJSON)),
        'inventoryItems': !exists(json, 'inventoryItems') ? undefined : ResInventoryItemsTypeFromJSON(json['inventoryItems']),
        'comments': !exists(json, 'comments') ? undefined : ((json['comments'] as Array<any>).map(CommentInfoTypeFromJSON)),
        'guestComments': !exists(json, 'guestComments') ? undefined : ((json['guestComments'] as Array<any>).map(CommentInfoTypeFromJSON)),
        'guestMemberships': !exists(json, 'guestMemberships') ? undefined : ((json['guestMemberships'] as Array<any>).map(MembershipTypeFromJSON)),
        'preferenceCollection': !exists(json, 'preferenceCollection') ? undefined : ((json['preferenceCollection'] as Array<any>).map(PreferenceTypeTypeFromJSON)),
        'reservationMemberships': !exists(json, 'reservationMemberships') ? undefined : ((json['reservationMemberships'] as Array<any>).map(ReservationMembershipTypeFromJSON)),
        'reservationPaymentMethods': !exists(json, 'reservationPaymentMethods') ? undefined : ((json['reservationPaymentMethods'] as Array<any>).map(ReservationPaymentMethodTypeFromJSON)),
        'routingInstructions': !exists(json, 'routingInstructions') ? undefined : ((json['routingInstructions'] as Array<any>).map(RoutingInfoTypeFromJSON)),
        'reservationPolicies': !exists(json, 'reservationPolicies') ? undefined : ReservationPoliciesTypeFromJSON(json['reservationPolicies']),
        'cashiering': !exists(json, 'cashiering') ? undefined : ResCashieringTypeFromJSON(json['cashiering']),
        'housekeeping': !exists(json, 'housekeeping') ? undefined : ResHousekeepingTypeFromJSON(json['housekeeping']),
        'linkedReservation': !exists(json, 'linkedReservation') ? undefined : LinkedReservationsInfoTypeFromJSON(json['linkedReservation']),
        'extSystemSync': !exists(json, 'extSystemSync') ? undefined : json['extSystemSync'],
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
        'reservationIndicators': !exists(json, 'reservationIndicators') ? undefined : ((json['reservationIndicators'] as Array<any>).map(IndicatorTypeFromJSON)),
        'waitlist': !exists(json, 'waitlist') ? undefined : WaitlistResTypeFromJSON(json['waitlist']),
        'cancellation': !exists(json, 'cancellation') ? undefined : HotelReservationTypeCancellationFromJSON(json['cancellation']),
        'catering': !exists(json, 'catering') ? undefined : CateringResInfoTypeFromJSON(json['catering']),
        'statisticalClassification': !exists(json, 'statisticalClassification') ? undefined : ResStatClassificationTypeFromJSON(json['statisticalClassification']),
        'alerts': !exists(json, 'alerts') ? undefined : ((json['alerts'] as Array<any>).map(AlertTypeFromJSON)),
        'traces': !exists(json, 'traces') ? undefined : ((json['traces'] as Array<any>).map(HotelReservationTraceTypeFromJSON)),
        'confirmationLetters': !exists(json, 'confirmationLetters') ? undefined : ((json['confirmationLetters'] as Array<any>).map(ConfirmationTypeFromJSON)),
        'callHistory': !exists(json, 'callHistory') ? undefined : ((json['callHistory'] as Array<any>).map(CallTypeFromJSON)),
        'fixedCharges': !exists(json, 'fixedCharges') ? undefined : ((json['fixedCharges'] as Array<any>).map(FixedChargeTypeFromJSON)),
        'guestMessages': !exists(json, 'guestMessages') ? undefined : ((json['guestMessages'] as Array<any>).map(GuestMessageTypeFromJSON)),
        'lockHandle': !exists(json, 'lockHandle') ? undefined : json['lockHandle'],
        'overrideInstructions': !exists(json, 'overrideInstructions') ? undefined : ((json['overrideInstructions'] as Array<any>).map(OverrideInstructionTypeFromJSON)),
        'queue': !exists(json, 'queue') ? undefined : ReservationQueueInformationTypeFromJSON(json['queue']),
        'allowedActions': !exists(json, 'allowedActions') ? undefined : ((json['allowedActions'] as Array<any>).map(ReservationAllowedActionTypeFromJSON)),
        'eCoupons': !exists(json, 'eCoupons') ? undefined : ((json['eCoupons'] as Array<any>).map(ECouponTypeFromJSON)),
        'transactionDiversions': !exists(json, 'transactionDiversions') ? undefined : HotelReservationTypeTransactionDiversionsFromJSON(json['transactionDiversions']),
        'advanceCheckIn': !exists(json, 'advanceCheckIn') ? undefined : AdvanceCheckInTypeFromJSON(json['advanceCheckIn']),
        'tickets': !exists(json, 'tickets') ? undefined : ((json['tickets'] as Array<any>).map(TicketTypeFromJSON)),
        'accessRestrictionMessage': !exists(json, 'accessRestrictionMessage') ? undefined : json['accessRestrictionMessage'],
        'eCertificates': !exists(json, 'eCertificates') ? undefined : ((json['eCertificates'] as Array<any>).map(ReservationECertificateTypeFromJSON)),
        'customNameValueDetail': !exists(json, 'customNameValueDetail') ? undefined : NameValueDetailTypeFromJSON(json['customNameValueDetail']),
        'customChargeExemptionDetails': !exists(json, 'customChargeExemptionDetails') ? undefined : ((json['customChargeExemptionDetails'] as Array<any>).map(CustomChargeExemptionTypeFromJSON)),
        'folios': !exists(json, 'folios') ? undefined : ((json['folios'] as Array<any>).map(FolioShortInfoTypeFromJSON)),
        'autoBorrowFromHouse': !exists(json, 'autoBorrowFromHouse') ? undefined : json['autoBorrowFromHouse'],
        'overrideExternalChecks': !exists(json, 'overrideExternalChecks') ? undefined : json['overrideExternalChecks'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'roomStayReservation': !exists(json, 'roomStayReservation') ? undefined : json['roomStayReservation'],
        'reservationStatus': !exists(json, 'reservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['reservationStatus']),
        'computedReservationStatus': !exists(json, 'computedReservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['computedReservationStatus']),
        'walkIn': !exists(json, 'walkIn') ? undefined : json['walkIn'],
        'printRate': !exists(json, 'printRate') ? undefined : json['printRate'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !exists(json, 'purgeDate') ? undefined : (new Date(json['purgeDate'])),
        'createBusinessDate': !exists(json, 'createBusinessDate') ? undefined : (new Date(json['createBusinessDate'])),
        'reinstateDate': !exists(json, 'reinstateDate') ? undefined : (new Date(json['reinstateDate'])),
        'party': !exists(json, 'party') ? undefined : json['party'],
        'primaryEnrollmentResort': !exists(json, 'primaryEnrollmentResort') ? undefined : json['primaryEnrollmentResort'],
        'primaryEnrollmentChain': !exists(json, 'primaryEnrollmentChain') ? undefined : json['primaryEnrollmentChain'],
        'customReference': !exists(json, 'customReference') ? undefined : json['customReference'],
        'displayColor': !exists(json, 'displayColor') ? undefined : json['displayColor'],
        'markAsRecentlyAccessed': !exists(json, 'markAsRecentlyAccessed') ? undefined : json['markAsRecentlyAccessed'],
        'overrideInventoryCheck': !exists(json, 'overrideInventoryCheck') ? undefined : json['overrideInventoryCheck'],
        'accessRestriction': !exists(json, 'accessRestriction') ? undefined : ResAccessRestrictionTypeFromJSON(json['accessRestriction']),
        'preRegistered': !exists(json, 'preRegistered') ? undefined : json['preRegistered'],
        'upgradeEligible': !exists(json, 'upgradeEligible') ? undefined : json['upgradeEligible'],
        'overrideBlockRestriction': !exists(json, 'overrideBlockRestriction') ? undefined : json['overrideBlockRestriction'],
        'allowAutoCheckin': !exists(json, 'allowAutoCheckin') ? undefined : json['allowAutoCheckin'],
        'hasOpenFolio': !exists(json, 'hasOpenFolio') ? undefined : json['hasOpenFolio'],
        'allowMobileCheckout': !exists(json, 'allowMobileCheckout') ? undefined : json['allowMobileCheckout'],
        'allowMobileViewFolio': !exists(json, 'allowMobileViewFolio') ? undefined : json['allowMobileViewFolio'],
        'allowPreRegistration': !exists(json, 'allowPreRegistration') ? undefined : json['allowPreRegistration'],
        'optedForCommunication': !exists(json, 'optedForCommunication') ? undefined : json['optedForCommunication'],
        'chargeCardNumber': !exists(json, 'chargeCardNumber') ? undefined : json['chargeCardNumber'],
        'overrideOutOfServiceCheck': !exists(json, 'overrideOutOfServiceCheck') ? undefined : json['overrideOutOfServiceCheck'],
        'responseInstructions': !exists(json, 'responseInstructions') ? undefined : HotelReservationInstructionTypeResponseInstructionsFromJSON(json['responseInstructions']),
        'changeInstrunctions': !exists(json, 'changeInstrunctions') ? undefined : ChangeInstructionTypeFromJSON(json['changeInstrunctions']),
    };
}

export function HotelReservationInstructionTypeToJSON(value?: HotelReservationInstructionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservationIdList': value.reservationIdList === undefined ? undefined : ((value.reservationIdList as Array<any>).map(UniqueIDTypeToJSON)),
        'externalReferences': value.externalReferences === undefined ? undefined : ((value.externalReferences as Array<any>).map(ExternalReferenceTypeToJSON)),
        'associatedReservations': value.associatedReservations,
        'sourceOfSale': SourceOfSaleTypeToJSON(value.sourceOfSale),
        'roomStay': RoomStayTypeToJSON(value.roomStay),
        'compAuthorizer': CompAuthorizerInfoTypeToJSON(value.compAuthorizer),
        'reservationGuests': value.reservationGuests === undefined ? undefined : ((value.reservationGuests as Array<any>).map(ResGuestTypeToJSON)),
        'sharedGuests': value.sharedGuests === undefined ? undefined : ((value.sharedGuests as Array<any>).map(ResSharedGuestInfoTypeToJSON)),
        'additionalGuestInfo': ResGuestAdditionalInfoTypeToJSON(value.additionalGuestInfo),
        'reservationProfiles': HotelReservationTypeReservationProfilesToJSON(value.reservationProfiles),
        'reservationCommunication': ResCommunicationTypeToJSON(value.reservationCommunication),
        'reservationAwards': value.reservationAwards === undefined ? undefined : ((value.reservationAwards as Array<any>).map(AwardTypeToJSON)),
        'trackItItems': value.trackItItems === undefined ? undefined : ((value.trackItItems as Array<any>).map(TrackItItemTypeToJSON)),
        'shares': HotelReservationsTypeToJSON(value.shares),
        'locators': value.locators === undefined ? undefined : ((value.locators as Array<any>).map(ReservationLocatorTypeToJSON)),
        'attachments': value.attachments === undefined ? undefined : ((value.attachments as Array<any>).map(AttachmentTypeToJSON)),
        'webRegistrationCards': value.webRegistrationCards === undefined ? undefined : ((value.webRegistrationCards as Array<any>).map(AttachmentTypeToJSON)),
        'serviceRequests': value.serviceRequests === undefined ? undefined : ((value.serviceRequests as Array<any>).map(ServiceRequestToJSON)),
        'reservationActivities': value.reservationActivities === undefined ? undefined : ((value.reservationActivities as Array<any>).map(FetchActivityBookingsTypeToJSON)),
        'scheduledActivities': value.scheduledActivities === undefined ? undefined : ((value.scheduledActivities as Array<any>).map(FetchActivityBookingsTypeToJSON)),
        'prepaidCards': value.prepaidCards === undefined ? undefined : ((value.prepaidCards as Array<any>).map(PrepaidCardTypeToJSON)),
        'profileAwards': value.profileAwards === undefined ? undefined : ((value.profileAwards as Array<any>).map(AwardTypeToJSON)),
        'reservationPackages': value.reservationPackages === undefined ? undefined : ((value.reservationPackages as Array<any>).map(ReservationPackageTypeToJSON)),
        'inventoryItems': ResInventoryItemsTypeToJSON(value.inventoryItems),
        'comments': value.comments === undefined ? undefined : ((value.comments as Array<any>).map(CommentInfoTypeToJSON)),
        'guestComments': value.guestComments === undefined ? undefined : ((value.guestComments as Array<any>).map(CommentInfoTypeToJSON)),
        'guestMemberships': value.guestMemberships === undefined ? undefined : ((value.guestMemberships as Array<any>).map(MembershipTypeToJSON)),
        'preferenceCollection': value.preferenceCollection === undefined ? undefined : ((value.preferenceCollection as Array<any>).map(PreferenceTypeTypeToJSON)),
        'reservationMemberships': value.reservationMemberships === undefined ? undefined : ((value.reservationMemberships as Array<any>).map(ReservationMembershipTypeToJSON)),
        'reservationPaymentMethods': value.reservationPaymentMethods === undefined ? undefined : ((value.reservationPaymentMethods as Array<any>).map(ReservationPaymentMethodTypeToJSON)),
        'routingInstructions': value.routingInstructions === undefined ? undefined : ((value.routingInstructions as Array<any>).map(RoutingInfoTypeToJSON)),
        'reservationPolicies': ReservationPoliciesTypeToJSON(value.reservationPolicies),
        'cashiering': ResCashieringTypeToJSON(value.cashiering),
        'housekeeping': ResHousekeepingTypeToJSON(value.housekeeping),
        'linkedReservation': LinkedReservationsInfoTypeToJSON(value.linkedReservation),
        'extSystemSync': value.extSystemSync,
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
        'reservationIndicators': value.reservationIndicators === undefined ? undefined : ((value.reservationIndicators as Array<any>).map(IndicatorTypeToJSON)),
        'waitlist': WaitlistResTypeToJSON(value.waitlist),
        'cancellation': HotelReservationTypeCancellationToJSON(value.cancellation),
        'catering': CateringResInfoTypeToJSON(value.catering),
        'statisticalClassification': ResStatClassificationTypeToJSON(value.statisticalClassification),
        'alerts': value.alerts === undefined ? undefined : ((value.alerts as Array<any>).map(AlertTypeToJSON)),
        'traces': value.traces === undefined ? undefined : ((value.traces as Array<any>).map(HotelReservationTraceTypeToJSON)),
        'confirmationLetters': value.confirmationLetters === undefined ? undefined : ((value.confirmationLetters as Array<any>).map(ConfirmationTypeToJSON)),
        'callHistory': value.callHistory === undefined ? undefined : ((value.callHistory as Array<any>).map(CallTypeToJSON)),
        'fixedCharges': value.fixedCharges === undefined ? undefined : ((value.fixedCharges as Array<any>).map(FixedChargeTypeToJSON)),
        'guestMessages': value.guestMessages === undefined ? undefined : ((value.guestMessages as Array<any>).map(GuestMessageTypeToJSON)),
        'lockHandle': value.lockHandle,
        'overrideInstructions': value.overrideInstructions === undefined ? undefined : ((value.overrideInstructions as Array<any>).map(OverrideInstructionTypeToJSON)),
        'queue': ReservationQueueInformationTypeToJSON(value.queue),
        'allowedActions': value.allowedActions === undefined ? undefined : ((value.allowedActions as Array<any>).map(ReservationAllowedActionTypeToJSON)),
        'eCoupons': value.eCoupons === undefined ? undefined : ((value.eCoupons as Array<any>).map(ECouponTypeToJSON)),
        'transactionDiversions': HotelReservationTypeTransactionDiversionsToJSON(value.transactionDiversions),
        'advanceCheckIn': AdvanceCheckInTypeToJSON(value.advanceCheckIn),
        'tickets': value.tickets === undefined ? undefined : ((value.tickets as Array<any>).map(TicketTypeToJSON)),
        'accessRestrictionMessage': value.accessRestrictionMessage,
        'eCertificates': value.eCertificates === undefined ? undefined : ((value.eCertificates as Array<any>).map(ReservationECertificateTypeToJSON)),
        'customNameValueDetail': NameValueDetailTypeToJSON(value.customNameValueDetail),
        'customChargeExemptionDetails': value.customChargeExemptionDetails === undefined ? undefined : ((value.customChargeExemptionDetails as Array<any>).map(CustomChargeExemptionTypeToJSON)),
        'folios': value.folios === undefined ? undefined : ((value.folios as Array<any>).map(FolioShortInfoTypeToJSON)),
        'autoBorrowFromHouse': value.autoBorrowFromHouse,
        'overrideExternalChecks': value.overrideExternalChecks,
        'hotelId': value.hotelId,
        'roomStayReservation': value.roomStayReservation,
        'reservationStatus': PMSResStatusTypeToJSON(value.reservationStatus),
        'computedReservationStatus': PMSResStatusTypeToJSON(value.computedReservationStatus),
        'walkIn': value.walkIn,
        'printRate': value.printRate,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate === undefined ? undefined : (value.purgeDate.toISOString().substr(0,10)),
        'createBusinessDate': value.createBusinessDate === undefined ? undefined : (value.createBusinessDate.toISOString().substr(0,10)),
        'reinstateDate': value.reinstateDate === undefined ? undefined : (value.reinstateDate.toISOString().substr(0,10)),
        'party': value.party,
        'primaryEnrollmentResort': value.primaryEnrollmentResort,
        'primaryEnrollmentChain': value.primaryEnrollmentChain,
        'customReference': value.customReference,
        'displayColor': value.displayColor,
        'markAsRecentlyAccessed': value.markAsRecentlyAccessed,
        'overrideInventoryCheck': value.overrideInventoryCheck,
        'accessRestriction': ResAccessRestrictionTypeToJSON(value.accessRestriction),
        'preRegistered': value.preRegistered,
        'upgradeEligible': value.upgradeEligible,
        'overrideBlockRestriction': value.overrideBlockRestriction,
        'allowAutoCheckin': value.allowAutoCheckin,
        'hasOpenFolio': value.hasOpenFolio,
        'allowMobileCheckout': value.allowMobileCheckout,
        'allowMobileViewFolio': value.allowMobileViewFolio,
        'allowPreRegistration': value.allowPreRegistration,
        'optedForCommunication': value.optedForCommunication,
        'chargeCardNumber': value.chargeCardNumber,
        'overrideOutOfServiceCheck': value.overrideOutOfServiceCheck,
        'responseInstructions': HotelReservationInstructionTypeResponseInstructionsToJSON(value.responseInstructions),
        'changeInstrunctions': ChangeInstructionTypeToJSON(value.changeInstrunctions),
    };
}

