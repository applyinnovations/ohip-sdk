"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledRoomMoveInfoTypeToJSON = exports.ScheduledRoomMoveInfoTypeFromJSONTyped = exports.ScheduledRoomMoveInfoTypeFromJSON = exports.instanceOfScheduledRoomMoveInfoType = void 0;
const runtime_1 = require("../runtime");
const HousekeepingRoomStatusType_1 = require("./HousekeepingRoomStatusType");
const RoomOccupancyType_1 = require("./RoomOccupancyType");
const ScheduledRoomMoveStatusType_1 = require("./ScheduledRoomMoveStatusType");
/**
 * Check if a given object implements the ScheduledRoomMoveInfoType interface.
 */
function instanceOfScheduledRoomMoveInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfScheduledRoomMoveInfoType = instanceOfScheduledRoomMoveInfoType;
function ScheduledRoomMoveInfoTypeFromJSON(json) {
    return ScheduledRoomMoveInfoTypeFromJSONTyped(json, false);
}
exports.ScheduledRoomMoveInfoTypeFromJSON = ScheduledRoomMoveInfoTypeFromJSON;
function ScheduledRoomMoveInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'moveStatus': !(0, runtime_1.exists)(json, 'moveStatus') ? undefined : (0, ScheduledRoomMoveStatusType_1.ScheduledRoomMoveStatusTypeFromJSON)(json['moveStatus']),
        'moveComments': !(0, runtime_1.exists)(json, 'moveComments') ? undefined : json['moveComments'],
        'moveInRoomOccupancyInfo': !(0, runtime_1.exists)(json, 'moveInRoomOccupancyInfo') ? undefined : (0, RoomOccupancyType_1.RoomOccupancyTypeFromJSON)(json['moveInRoomOccupancyInfo']),
        'estimatedMoveTime': !(0, runtime_1.exists)(json, 'estimatedMoveTime') ? undefined : json['estimatedMoveTime'],
        'moveOutRoomId': !(0, runtime_1.exists)(json, 'moveOutRoomId') ? undefined : json['moveOutRoomId'],
        'moveOutRoomType': !(0, runtime_1.exists)(json, 'moveOutRoomType') ? undefined : json['moveOutRoomType'],
        'moveOutRoomStatus': !(0, runtime_1.exists)(json, 'moveOutRoomStatus') ? undefined : (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeFromJSON)(json['moveOutRoomStatus']),
    };
}
exports.ScheduledRoomMoveInfoTypeFromJSONTyped = ScheduledRoomMoveInfoTypeFromJSONTyped;
function ScheduledRoomMoveInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'moveStatus': (0, ScheduledRoomMoveStatusType_1.ScheduledRoomMoveStatusTypeToJSON)(value.moveStatus),
        'moveComments': value.moveComments,
        'moveInRoomOccupancyInfo': (0, RoomOccupancyType_1.RoomOccupancyTypeToJSON)(value.moveInRoomOccupancyInfo),
        'estimatedMoveTime': value.estimatedMoveTime,
        'moveOutRoomId': value.moveOutRoomId,
        'moveOutRoomType': value.moveOutRoomType,
        'moveOutRoomStatus': (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeToJSON)(value.moveOutRoomStatus),
    };
}
exports.ScheduledRoomMoveInfoTypeToJSON = ScheduledRoomMoveInfoTypeToJSON;
