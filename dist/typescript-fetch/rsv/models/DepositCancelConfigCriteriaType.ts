/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepositCancelRevenueType } from './DepositCancelRevenueType';
import {
    DepositCancelRevenueTypeFromJSON,
    DepositCancelRevenueTypeFromJSONTyped,
    DepositCancelRevenueTypeToJSON,
} from './DepositCancelRevenueType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';

/**
 * Criteria for calculating the deposit/cancellation amount based on a reservation, policy code, amount or percentage.
 * @export
 * @interface DepositCancelConfigCriteriaType
 */
export interface DepositCancelConfigCriteriaType {
    /**
     * A monetary amount.
     * @type {number}
     * @memberof DepositCancelConfigCriteriaType
     */
    amount?: number;
    /**
     * Provides a currency code to reflect the currency in which an amount may be expressed.
     * @type {string}
     * @memberof DepositCancelConfigCriteriaType
     */
    currencyCode?: string;
    /**
     * Property Code of the reservation.
     * @type {string}
     * @memberof DepositCancelConfigCriteriaType
     */
    hotelId?: string;
    /**
     * The percentage based on which the calculation of the amount and due date is to be done.
     * @type {number}
     * @memberof DepositCancelConfigCriteriaType
     */
    percentage?: number;
    /**
     * The policy code based on which the calculation of the amount and due date is to be done.
     * @type {string}
     * @memberof DepositCancelConfigCriteriaType
     */
    policyCode?: string;
    /**
     * 
     * @type {ReservationId}
     * @memberof DepositCancelConfigCriteriaType
     */
    reservationId?: ReservationId;
    /**
     * 
     * @type {DepositCancelRevenueType}
     * @memberof DepositCancelConfigCriteriaType
     */
    revenueType?: DepositCancelRevenueType;
}

/**
 * Check if a given object implements the DepositCancelConfigCriteriaType interface.
 */
export function instanceOfDepositCancelConfigCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DepositCancelConfigCriteriaTypeFromJSON(json: any): DepositCancelConfigCriteriaType {
    return DepositCancelConfigCriteriaTypeFromJSONTyped(json, false);
}

export function DepositCancelConfigCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepositCancelConfigCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'policyCode': !exists(json, 'policyCode') ? undefined : json['policyCode'],
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'revenueType': !exists(json, 'revenueType') ? undefined : DepositCancelRevenueTypeFromJSON(json['revenueType']),
    };
}

export function DepositCancelConfigCriteriaTypeToJSON(value?: DepositCancelConfigCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'currencyCode': value.currencyCode,
        'hotelId': value.hotelId,
        'percentage': value.percentage,
        'policyCode': value.policyCode,
        'reservationId': ReservationIdToJSON(value.reservationId),
        'revenueType': DepositCancelRevenueTypeToJSON(value.revenueType),
    };
}

