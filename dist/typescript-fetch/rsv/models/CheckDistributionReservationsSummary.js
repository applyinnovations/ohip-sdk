"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckDistributionReservationsSummaryToJSON = exports.CheckDistributionReservationsSummaryFromJSONTyped = exports.CheckDistributionReservationsSummaryFromJSON = exports.instanceOfCheckDistributionReservationsSummary = void 0;
const runtime_1 = require("../runtime");
const CheckDistributionReservationsSummaryType_1 = require("./CheckDistributionReservationsSummaryType");
const InstanceLink_1 = require("./InstanceLink");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the CheckDistributionReservationsSummary interface.
 */
function instanceOfCheckDistributionReservationsSummary(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCheckDistributionReservationsSummary = instanceOfCheckDistributionReservationsSummary;
function CheckDistributionReservationsSummaryFromJSON(json) {
    return CheckDistributionReservationsSummaryFromJSONTyped(json, false);
}
exports.CheckDistributionReservationsSummaryFromJSON = CheckDistributionReservationsSummaryFromJSON;
function CheckDistributionReservationsSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'checkReservations': !(0, runtime_1.exists)(json, 'checkReservations') ? undefined : (json['checkReservations'].map(CheckDistributionReservationsSummaryType_1.CheckDistributionReservationsSummaryTypeFromJSON)),
        'hasMore': !(0, runtime_1.exists)(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !(0, runtime_1.exists)(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !(0, runtime_1.exists)(json, 'count') ? undefined : json['count'],
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (json['links'].map(InstanceLink_1.InstanceLinkFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.CheckDistributionReservationsSummaryFromJSONTyped = CheckDistributionReservationsSummaryFromJSONTyped;
function CheckDistributionReservationsSummaryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'checkReservations': value.checkReservations === undefined ? undefined : (value.checkReservations.map(CheckDistributionReservationsSummaryType_1.CheckDistributionReservationsSummaryTypeToJSON)),
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
        'links': value.links === undefined ? undefined : (value.links.map(InstanceLink_1.InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.CheckDistributionReservationsSummaryToJSON = CheckDistributionReservationsSummaryToJSON;
