"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreConfiguredRoutingInstrTypeToJSON = exports.PreConfiguredRoutingInstrTypeFromJSONTyped = exports.PreConfiguredRoutingInstrTypeFromJSON = exports.instanceOfPreConfiguredRoutingInstrType = void 0;
const runtime_1 = require("../runtime");
const BillingInstructionType_1 = require("./BillingInstructionType");
const PromoCodeCompRoutingType_1 = require("./PromoCodeCompRoutingType");
const ResAttachedProfileType_1 = require("./ResAttachedProfileType");
const TrxInfoType_1 = require("./TrxInfoType");
/**
 * Check if a given object implements the PreConfiguredRoutingInstrType interface.
 */
function instanceOfPreConfiguredRoutingInstrType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPreConfiguredRoutingInstrType = instanceOfPreConfiguredRoutingInstrType;
function PreConfiguredRoutingInstrTypeFromJSON(json) {
    return PreConfiguredRoutingInstrTypeFromJSONTyped(json, false);
}
exports.PreConfiguredRoutingInstrTypeFromJSON = PreConfiguredRoutingInstrTypeFromJSON;
function PreConfiguredRoutingInstrTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'autoPopulateRouting': !(0, runtime_1.exists)(json, 'autoPopulateRouting') ? undefined : json['autoPopulateRouting'],
        'billingInstructions': !(0, runtime_1.exists)(json, 'billingInstructions') ? undefined : (json['billingInstructions'].map(BillingInstructionType_1.BillingInstructionTypeFromJSON)),
        'compRoutingInstructionType': !(0, runtime_1.exists)(json, 'compRoutingInstructionType') ? undefined : (0, PromoCodeCompRoutingType_1.PromoCodeCompRoutingTypeFromJSON)(json['compRoutingInstructionType']),
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'reservationProfile': !(0, runtime_1.exists)(json, 'reservationProfile') ? undefined : (0, ResAttachedProfileType_1.ResAttachedProfileTypeFromJSON)(json['reservationProfile']),
        'transactionCodes': !(0, runtime_1.exists)(json, 'transactionCodes') ? undefined : (json['transactionCodes'].map(TrxInfoType_1.TrxInfoTypeFromJSON)),
    };
}
exports.PreConfiguredRoutingInstrTypeFromJSONTyped = PreConfiguredRoutingInstrTypeFromJSONTyped;
function PreConfiguredRoutingInstrTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'autoPopulateRouting': value.autoPopulateRouting,
        'billingInstructions': value.billingInstructions === undefined ? undefined : (value.billingInstructions.map(BillingInstructionType_1.BillingInstructionTypeToJSON)),
        'compRoutingInstructionType': (0, PromoCodeCompRoutingType_1.PromoCodeCompRoutingTypeToJSON)(value.compRoutingInstructionType),
        'ratePlanCode': value.ratePlanCode,
        'reservationProfile': (0, ResAttachedProfileType_1.ResAttachedProfileTypeToJSON)(value.reservationProfile),
        'transactionCodes': value.transactionCodes === undefined ? undefined : (value.transactionCodes.map(TrxInfoType_1.TrxInfoTypeToJSON)),
    };
}
exports.PreConfiguredRoutingInstrTypeToJSON = PreConfiguredRoutingInstrTypeToJSON;
