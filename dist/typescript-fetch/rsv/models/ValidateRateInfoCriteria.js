"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidateRateInfoCriteriaToJSON = exports.ValidateRateInfoCriteriaFromJSONTyped = exports.ValidateRateInfoCriteriaFromJSON = exports.instanceOfValidateRateInfoCriteria = void 0;
const runtime_1 = require("../runtime");
const BlockId_1 = require("./BlockId");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const EffectiveRateType_1 = require("./EffectiveRateType");
const GuestCountsType_1 = require("./GuestCountsType");
const ReservationId_1 = require("./ReservationId");
const ReservationPackageType_1 = require("./ReservationPackageType");
const ReservationProfileType_1 = require("./ReservationProfileType");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the ValidateRateInfoCriteria interface.
 */
function instanceOfValidateRateInfoCriteria(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfValidateRateInfoCriteria = instanceOfValidateRateInfoCriteria;
function ValidateRateInfoCriteriaFromJSON(json) {
    return ValidateRateInfoCriteriaFromJSONTyped(json, false);
}
exports.ValidateRateInfoCriteriaFromJSON = ValidateRateInfoCriteriaFromJSON;
function ValidateRateInfoCriteriaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, BlockId_1.BlockIdFromJSON)(json['blockId']),
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'currencySymbol': !(0, runtime_1.exists)(json, 'currencySymbol') ? undefined : json['currencySymbol'],
        'decimalPlaces': !(0, runtime_1.exists)(json, 'decimalPlaces') ? undefined : json['decimalPlaces'],
        'detailDate': !(0, runtime_1.exists)(json, 'detailDate') ? undefined : json['detailDate'],
        'effectiveRates': !(0, runtime_1.exists)(json, 'effectiveRates') ? undefined : (json['effectiveRates'].map(EffectiveRateType_1.EffectiveRateTypeFromJSON)),
        'guestCounts': !(0, runtime_1.exists)(json, 'guestCounts') ? undefined : (0, GuestCountsType_1.GuestCountsTypeFromJSON)(json['guestCounts']),
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, ReservationId_1.ReservationIdFromJSON)(json['reservationId']),
        'reservationPackages': !(0, runtime_1.exists)(json, 'reservationPackages') ? undefined : (json['reservationPackages'].map(ReservationPackageType_1.ReservationPackageTypeFromJSON)),
        'reservationProfiles': !(0, runtime_1.exists)(json, 'reservationProfiles') ? undefined : (json['reservationProfiles'].map(ReservationProfileType_1.ReservationProfileTypeFromJSON)),
        'resvRateAmount': !(0, runtime_1.exists)(json, 'resvRateAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['resvRateAmount']),
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'summaryInfo': !(0, runtime_1.exists)(json, 'summaryInfo') ? undefined : json['summaryInfo'],
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
    };
}
exports.ValidateRateInfoCriteriaFromJSONTyped = ValidateRateInfoCriteriaFromJSONTyped;
function ValidateRateInfoCriteriaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockId': (0, BlockId_1.BlockIdToJSON)(value.blockId),
        'currencyCode': value.currencyCode,
        'currencySymbol': value.currencySymbol,
        'decimalPlaces': value.decimalPlaces,
        'detailDate': value.detailDate,
        'effectiveRates': value.effectiveRates === undefined ? undefined : (value.effectiveRates.map(EffectiveRateType_1.EffectiveRateTypeToJSON)),
        'guestCounts': (0, GuestCountsType_1.GuestCountsTypeToJSON)(value.guestCounts),
        'quantity': value.quantity,
        'ratePlanCode': value.ratePlanCode,
        'reservationId': (0, ReservationId_1.ReservationIdToJSON)(value.reservationId),
        'reservationPackages': value.reservationPackages === undefined ? undefined : (value.reservationPackages.map(ReservationPackageType_1.ReservationPackageTypeToJSON)),
        'reservationProfiles': value.reservationProfiles === undefined ? undefined : (value.reservationProfiles.map(ReservationProfileType_1.ReservationProfileTypeToJSON)),
        'resvRateAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.resvRateAmount),
        'roomType': value.roomType,
        'summaryInfo': value.summaryInfo,
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
    };
}
exports.ValidateRateInfoCriteriaToJSON = ValidateRateInfoCriteriaToJSON;
