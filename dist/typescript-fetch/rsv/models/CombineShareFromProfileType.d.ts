/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CopyReservationPaymentMethodsType } from './CopyReservationPaymentMethodsType';
import type { DailyRateType } from './DailyRateType';
import type { GuestCountsType } from './GuestCountsType';
import type { ResGuaranteeType } from './ResGuaranteeType';
import type { ReservationPaymentMethodType } from './ReservationPaymentMethodType';
import type { TimeSpanType } from './TimeSpanType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Type for the profile information to create a new share reservation. This is used to create sharers from profiles.
 * @export
 * @interface CombineShareFromProfileType
 */
export interface CombineShareFromProfileType {
    /**
     * Defines room rate information on a daily basis.
     * @type {Array<DailyRateType>}
     * @memberof CombineShareFromProfileType
     */
    dailyRates?: Array<DailyRateType>;
    /**
     *
     * @type {ResGuaranteeType}
     * @memberof CombineShareFromProfileType
     */
    guarantee?: ResGuaranteeType;
    /**
     *
     * @type {GuestCountsType}
     * @memberof CombineShareFromProfileType
     */
    guestCounts?: GuestCountsType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof CombineShareFromProfileType
     */
    newSharerId?: UniqueIDType;
    /**
     *
     * @type {ReservationPaymentMethodType}
     * @memberof CombineShareFromProfileType
     */
    reservationPaymentMethod?: ReservationPaymentMethodType;
    /**
     *
     * @type {CopyReservationPaymentMethodsType}
     * @memberof CombineShareFromProfileType
     */
    reservationPaymentMethods?: CopyReservationPaymentMethodsType;
    /**
     *
     * @type {TimeSpanType}
     * @memberof CombineShareFromProfileType
     */
    timeSpan?: TimeSpanType;
}
/**
 * Check if a given object implements the CombineShareFromProfileType interface.
 */
export declare function instanceOfCombineShareFromProfileType(value: object): boolean;
export declare function CombineShareFromProfileTypeFromJSON(json: any): CombineShareFromProfileType;
export declare function CombineShareFromProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombineShareFromProfileType;
export declare function CombineShareFromProfileTypeToJSON(value?: CombineShareFromProfileType | null): any;
