"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MasterAccountTypeToJSON = exports.MasterAccountTypeFromJSONTyped = exports.MasterAccountTypeFromJSON = exports.instanceOfMasterAccountType = void 0;
const runtime_1 = require("../runtime");
const CommentInfoType_1 = require("./CommentInfoType");
const MasterAccountTypeReservationBlock_1 = require("./MasterAccountTypeReservationBlock");
const MasterAccountTypeRoomRate_1 = require("./MasterAccountTypeRoomRate");
const PMSResStatusType_1 = require("./PMSResStatusType");
const ResCashieringType_1 = require("./ResCashieringType");
const ResGuestType_1 = require("./ResGuestType");
const ReservationPaymentMethodType_1 = require("./ReservationPaymentMethodType");
const ReservationProfileType_1 = require("./ReservationProfileType");
const TimeSpanType_1 = require("./TimeSpanType");
const UniqueIDType_1 = require("./UniqueIDType");
const UserDefinedFieldsType_1 = require("./UserDefinedFieldsType");
/**
 * Check if a given object implements the MasterAccountType interface.
 */
function instanceOfMasterAccountType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMasterAccountType = instanceOfMasterAccountType;
function MasterAccountTypeFromJSON(json) {
    return MasterAccountTypeFromJSONTyped(json, false);
}
exports.MasterAccountTypeFromJSON = MasterAccountTypeFromJSON;
function MasterAccountTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'reservationIdList': !(0, runtime_1.exists)(json, 'reservationIdList') ? undefined : (json['reservationIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'timeSpan': !(0, runtime_1.exists)(json, 'timeSpan') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['timeSpan']),
        'reservationBlock': !(0, runtime_1.exists)(json, 'reservationBlock') ? undefined : (0, MasterAccountTypeReservationBlock_1.MasterAccountTypeReservationBlockFromJSON)(json['reservationBlock']),
        'roomRate': !(0, runtime_1.exists)(json, 'roomRate') ? undefined : (0, MasterAccountTypeRoomRate_1.MasterAccountTypeRoomRateFromJSON)(json['roomRate']),
        'reservationGuest': !(0, runtime_1.exists)(json, 'reservationGuest') ? undefined : (0, ResGuestType_1.ResGuestTypeFromJSON)(json['reservationGuest']),
        'reservationProfiles': !(0, runtime_1.exists)(json, 'reservationProfiles') ? undefined : (json['reservationProfiles'].map(ReservationProfileType_1.ReservationProfileTypeFromJSON)),
        'comments': !(0, runtime_1.exists)(json, 'comments') ? undefined : (json['comments'].map(CommentInfoType_1.CommentInfoTypeFromJSON)),
        'reservationPaymentMethods': !(0, runtime_1.exists)(json, 'reservationPaymentMethods') ? undefined : (json['reservationPaymentMethods'].map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeFromJSON)),
        'cashiering': !(0, runtime_1.exists)(json, 'cashiering') ? undefined : (0, ResCashieringType_1.ResCashieringTypeFromJSON)(json['cashiering']),
        'userDefinedFields': !(0, runtime_1.exists)(json, 'userDefinedFields') ? undefined : (0, UserDefinedFieldsType_1.UserDefinedFieldsTypeFromJSON)(json['userDefinedFields']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationStatus': !(0, runtime_1.exists)(json, 'reservationStatus') ? undefined : (0, PMSResStatusType_1.PMSResStatusTypeFromJSON)(json['reservationStatus']),
        'customReference': !(0, runtime_1.exists)(json, 'customReference') ? undefined : json['customReference'],
    };
}
exports.MasterAccountTypeFromJSONTyped = MasterAccountTypeFromJSONTyped;
function MasterAccountTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reservationIdList': value.reservationIdList === undefined ? undefined : (value.reservationIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'timeSpan': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.timeSpan),
        'reservationBlock': (0, MasterAccountTypeReservationBlock_1.MasterAccountTypeReservationBlockToJSON)(value.reservationBlock),
        'roomRate': (0, MasterAccountTypeRoomRate_1.MasterAccountTypeRoomRateToJSON)(value.roomRate),
        'reservationGuest': (0, ResGuestType_1.ResGuestTypeToJSON)(value.reservationGuest),
        'reservationProfiles': value.reservationProfiles === undefined ? undefined : (value.reservationProfiles.map(ReservationProfileType_1.ReservationProfileTypeToJSON)),
        'comments': value.comments === undefined ? undefined : (value.comments.map(CommentInfoType_1.CommentInfoTypeToJSON)),
        'reservationPaymentMethods': value.reservationPaymentMethods === undefined ? undefined : (value.reservationPaymentMethods.map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeToJSON)),
        'cashiering': (0, ResCashieringType_1.ResCashieringTypeToJSON)(value.cashiering),
        'userDefinedFields': (0, UserDefinedFieldsType_1.UserDefinedFieldsTypeToJSON)(value.userDefinedFields),
        'hotelId': value.hotelId,
        'reservationStatus': (0, PMSResStatusType_1.PMSResStatusTypeToJSON)(value.reservationStatus),
        'customReference': value.customReference,
    };
}
exports.MasterAccountTypeToJSON = MasterAccountTypeToJSON;
