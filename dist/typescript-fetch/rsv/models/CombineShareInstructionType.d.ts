/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { EffectiveRateType } from './EffectiveRateType';
import type { OverrideInstructionType } from './OverrideInstructionType';
import type { RateChangeInstructionType } from './RateChangeInstructionType';
import type { ShareDistributionInstructionType } from './ShareDistributionInstructionType';
/**
 * Instructions for overriding checks during combine share operation.
 * @export
 * @interface CombineShareInstructionType
 */
export interface CombineShareInstructionType {
    /**
     *
     * @type {ShareDistributionInstructionType}
     * @memberof CombineShareInstructionType
     */
    distributionType?: ShareDistributionInstructionType;
    /**
     * Collection of effective rate amount per guest on specific dates.
     * @type {Array<EffectiveRateType>}
     * @memberof CombineShareInstructionType
     */
    effectiveRates?: Array<EffectiveRateType>;
    /**
     *
     * @type {OverrideInstructionType}
     * @memberof CombineShareInstructionType
     */
    overrideInstruction?: OverrideInstructionType;
    /**
     * Indicate to override the room inventory check if applicable.
     * @type {boolean}
     * @memberof CombineShareInstructionType
     */
    overrideInventoryCheck?: boolean;
    /**
     * Indicate to override the check on maximum room occupancy if applicable.
     * @type {boolean}
     * @memberof CombineShareInstructionType
     */
    overrideMaxOccupancyCheck?: boolean;
    /**
     *
     * @type {RateChangeInstructionType}
     * @memberof CombineShareInstructionType
     */
    rateChangeInstruction?: RateChangeInstructionType;
    /**
     * If the joining sharer is checked in, do a room move to the main sharer's room.
     * @type {boolean}
     * @memberof CombineShareInstructionType
     */
    roomMoveCheckedinResv?: boolean;
}
/**
 * Check if a given object implements the CombineShareInstructionType interface.
 */
export declare function instanceOfCombineShareInstructionType(value: object): boolean;
export declare function CombineShareInstructionTypeFromJSON(json: any): CombineShareInstructionType;
export declare function CombineShareInstructionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CombineShareInstructionType;
export declare function CombineShareInstructionTypeToJSON(value?: CombineShareInstructionType | null): any;
