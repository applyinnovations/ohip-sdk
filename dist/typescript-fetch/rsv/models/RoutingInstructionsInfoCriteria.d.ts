/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ReservationId } from './ReservationId';
import type { RoutingInfoType } from './RoutingInfoType';
import type { RoutingInstructionsInfoCriteriaComp } from './RoutingInstructionsInfoCriteriaComp';
import type { RoutingInstructionsInfoCriteriaFolio } from './RoutingInstructionsInfoCriteriaFolio';
import type { RoutingInstructionsInfoCriteriaRequest } from './RoutingInstructionsInfoCriteriaRequest';
import type { RoutingInstructionsInfoCriteriaRoom } from './RoutingInstructionsInfoCriteriaRoom';
/**
 * Transactions and scheduled instructions included in this routing element will be replaced with the new element.
 * @export
 * @interface RoutingInstructionsInfoCriteria
 */
export interface RoutingInstructionsInfoCriteria {
    /**
     *
     * @type {RoutingInstructionsInfoCriteriaComp}
     * @memberof RoutingInstructionsInfoCriteria
     */
    comp?: RoutingInstructionsInfoCriteriaComp;
    /**
     *
     * @type {RoutingInstructionsInfoCriteriaFolio}
     * @memberof RoutingInstructionsInfoCriteria
     */
    folio?: RoutingInstructionsInfoCriteriaFolio;
    /**
     * Hotel context of the reservation.
     * @type {string}
     * @memberof RoutingInstructionsInfoCriteria
     */
    hotelId?: string;
    /**
     *
     * @type {RoutingInfoType}
     * @memberof RoutingInstructionsInfoCriteria
     */
    newRoutingInfo?: RoutingInfoType;
    /**
     * On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
     * @type {boolean}
     * @memberof RoutingInstructionsInfoCriteria
     */
    refreshFolio?: boolean;
    /**
     *
     * @type {RoutingInstructionsInfoCriteriaRequest}
     * @memberof RoutingInstructionsInfoCriteria
     */
    request?: RoutingInstructionsInfoCriteriaRequest;
    /**
     *
     * @type {ReservationId}
     * @memberof RoutingInstructionsInfoCriteria
     */
    reservationId?: ReservationId;
    /**
     * This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.
     * @type {boolean}
     * @memberof RoutingInstructionsInfoCriteria
     */
    retrievePostingsForRoomRouting?: boolean;
    /**
     *
     * @type {RoutingInstructionsInfoCriteriaRoom}
     * @memberof RoutingInstructionsInfoCriteria
     */
    room?: RoutingInstructionsInfoCriteriaRoom;
}
/**
 * Check if a given object implements the RoutingInstructionsInfoCriteria interface.
 */
export declare function instanceOfRoutingInstructionsInfoCriteria(value: object): boolean;
export declare function RoutingInstructionsInfoCriteriaFromJSON(json: any): RoutingInstructionsInfoCriteria;
export declare function RoutingInstructionsInfoCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutingInstructionsInfoCriteria;
export declare function RoutingInstructionsInfoCriteriaToJSON(value?: RoutingInstructionsInfoCriteria | null): any;
