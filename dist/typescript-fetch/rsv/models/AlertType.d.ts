/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AlertAreaType } from './AlertAreaType';
import type { AlertGuestInfoType } from './AlertGuestInfoType';
import type { UniqueIDType } from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import type { WelcomeOfferType } from './WelcomeOfferType';
/**
 *
 * @export
 * @interface AlertType
 */
export interface AlertType {
    /**
     *
     * @type {AlertAreaType}
     * @memberof AlertType
     */
    area?: AlertAreaType;
    /**
     * Code identifying the type of alert.
     * @type {string}
     * @memberof AlertType
     */
    code?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof AlertType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof AlertType
     */
    creatorId?: string;
    /**
     * The alert message.
     * @type {string}
     * @memberof AlertType
     */
    description?: string;
    /**
     * Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.
     * @type {boolean}
     * @memberof AlertType
     */
    global?: boolean;
    /**
     *
     * @type {AlertGuestInfoType}
     * @memberof AlertType
     */
    guestInfo?: AlertGuestInfoType;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof AlertType
     */
    id?: string;
    /**
     * Used to identify the source of the identifier (e.g., IATA, ABTA).
     * @type {string}
     * @memberof AlertType
     */
    idContext?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof AlertType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof AlertType
     */
    lastModifyDateTime?: string;
    /**
     * Printer used to print the alert notification.
     * @type {string}
     * @memberof AlertType
     */
    printerName?: string;
    /**
     * Notify by sending the message to the printer.
     * @type {boolean}
     * @memberof AlertType
     */
    printerNotification?: boolean;
    /**
     * Report description. Mainly used for as a parameter for printing the alerts.
     * @type {string}
     * @memberof AlertType
     */
    reportDescription?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof AlertType
     */
    reportId?: UniqueIDType;
    /**
     * Report name of the report type.
     * @type {string}
     * @memberof AlertType
     */
    reportName?: string;
    /**
     * Notify by showing the alert on the screen
     * @type {boolean}
     * @memberof AlertType
     */
    screenNotification?: boolean;
    /**
     * Indicates the Reservation Stop Check In/Check Out Global Alert.
     * @type {boolean}
     * @memberof AlertType
     */
    stopCheckInCheckOut?: boolean;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof AlertType
     */
    type?: string;
    /**
     *
     * @type {UserDefinedFieldsType}
     * @memberof AlertType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     *
     * @type {WelcomeOfferType}
     * @memberof AlertType
     */
    welcomeOffer?: WelcomeOfferType;
}
/**
 * Check if a given object implements the AlertType interface.
 */
export declare function instanceOfAlertType(value: object): boolean;
export declare function AlertTypeFromJSON(json: any): AlertType;
export declare function AlertTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertType;
export declare function AlertTypeToJSON(value?: AlertType | null): any;
