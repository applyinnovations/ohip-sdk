"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpsellTypeToJSON = exports.UpsellTypeFromJSONTyped = exports.UpsellTypeFromJSON = exports.instanceOfUpsellType = void 0;
const runtime_1 = require("../runtime");
const AmountPointsType_1 = require("./AmountPointsType");
const RoomTypeInfoType_1 = require("./RoomTypeInfoType");
const UniqueIDType_1 = require("./UniqueIDType");
const UpsellDailyRateType_1 = require("./UpsellDailyRateType");
/**
 * Check if a given object implements the UpsellType interface.
 */
function instanceOfUpsellType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfUpsellType = instanceOfUpsellType;
function UpsellTypeFromJSON(json) {
    return UpsellTypeFromJSONTyped(json, false);
}
exports.UpsellTypeFromJSON = UpsellTypeFromJSON;
function UpsellTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'firstNightAmount': !(0, runtime_1.exists)(json, 'firstNightAmount') ? undefined : (0, AmountPointsType_1.AmountPointsTypeFromJSON)(json['firstNightAmount']),
        'percentageSavings': !(0, runtime_1.exists)(json, 'percentageSavings') ? undefined : json['percentageSavings'],
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'rates': !(0, runtime_1.exists)(json, 'rates') ? undefined : (json['rates'].map(UpsellDailyRateType_1.UpsellDailyRateTypeFromJSON)),
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : (0, RoomTypeInfoType_1.RoomTypeInfoTypeFromJSON)(json['roomType']),
        'ruleCode': !(0, runtime_1.exists)(json, 'ruleCode') ? undefined : json['ruleCode'],
        'ruleDescription': !(0, runtime_1.exists)(json, 'ruleDescription') ? undefined : json['ruleDescription'],
        'ruleId': !(0, runtime_1.exists)(json, 'ruleId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['ruleId']),
        'totalStayAmount': !(0, runtime_1.exists)(json, 'totalStayAmount') ? undefined : (0, AmountPointsType_1.AmountPointsTypeFromJSON)(json['totalStayAmount']),
        'upsellType': !(0, runtime_1.exists)(json, 'upsellType') ? undefined : json['upsellType'],
    };
}
exports.UpsellTypeFromJSONTyped = UpsellTypeFromJSONTyped;
function UpsellTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'firstNightAmount': (0, AmountPointsType_1.AmountPointsTypeToJSON)(value.firstNightAmount),
        'percentageSavings': value.percentageSavings,
        'ratePlanCode': value.ratePlanCode,
        'rates': value.rates === undefined ? undefined : (value.rates.map(UpsellDailyRateType_1.UpsellDailyRateTypeToJSON)),
        'roomType': (0, RoomTypeInfoType_1.RoomTypeInfoTypeToJSON)(value.roomType),
        'ruleCode': value.ruleCode,
        'ruleDescription': value.ruleDescription,
        'ruleId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.ruleId),
        'totalStayAmount': (0, AmountPointsType_1.AmountPointsTypeToJSON)(value.totalStayAmount),
        'upsellType': value.upsellType,
    };
}
exports.UpsellTypeToJSON = UpsellTypeToJSON;
