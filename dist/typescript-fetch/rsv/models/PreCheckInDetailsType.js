"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreCheckInDetailsTypeToJSON = exports.PreCheckInDetailsTypeFromJSONTyped = exports.PreCheckInDetailsTypeFromJSON = exports.instanceOfPreCheckInDetailsType = void 0;
const runtime_1 = require("../runtime");
const ReservationArrivalInfoType_1 = require("./ReservationArrivalInfoType");
const ReservationPaymentMethodType_1 = require("./ReservationPaymentMethodType");
const TransportInfoType_1 = require("./TransportInfoType");
/**
 * Check if a given object implements the PreCheckInDetailsType interface.
 */
function instanceOfPreCheckInDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPreCheckInDetailsType = instanceOfPreCheckInDetailsType;
function PreCheckInDetailsTypeFromJSON(json) {
    return PreCheckInDetailsTypeFromJSONTyped(json, false);
}
exports.PreCheckInDetailsTypeFromJSON = PreCheckInDetailsTypeFromJSON;
function PreCheckInDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'arrival': !(0, runtime_1.exists)(json, 'arrival') ? undefined : (0, ReservationArrivalInfoType_1.ReservationArrivalInfoTypeFromJSON)(json['arrival']),
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'guestPreferredCurrency': !(0, runtime_1.exists)(json, 'guestPreferredCurrency') ? undefined : json['guestPreferredCurrency'],
        'allowMobileViewFolio': !(0, runtime_1.exists)(json, 'allowMobileViewFolio') ? undefined : json['allowMobileViewFolio'],
        'reservationPaymentMethods': !(0, runtime_1.exists)(json, 'reservationPaymentMethods') ? undefined : (json['reservationPaymentMethods'].map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeFromJSON)),
        'arrivalTransport': !(0, runtime_1.exists)(json, 'arrivalTransport') ? undefined : (0, TransportInfoType_1.TransportInfoTypeFromJSON)(json['arrivalTransport']),
    };
}
exports.PreCheckInDetailsTypeFromJSONTyped = PreCheckInDetailsTypeFromJSONTyped;
function PreCheckInDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'arrival': (0, ReservationArrivalInfoType_1.ReservationArrivalInfoTypeToJSON)(value.arrival),
        'roomId': value.roomId,
        'guestPreferredCurrency': value.guestPreferredCurrency,
        'allowMobileViewFolio': value.allowMobileViewFolio,
        'reservationPaymentMethods': value.reservationPaymentMethods === undefined ? undefined : (value.reservationPaymentMethods.map(ReservationPaymentMethodType_1.ReservationPaymentMethodTypeToJSON)),
        'arrivalTransport': (0, TransportInfoType_1.TransportInfoTypeToJSON)(value.arrivalTransport),
    };
}
exports.PreCheckInDetailsTypeToJSON = PreCheckInDetailsTypeToJSON;
