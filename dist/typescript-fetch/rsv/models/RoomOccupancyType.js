"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomOccupancyTypeToJSON = exports.RoomOccupancyTypeFromJSONTyped = exports.RoomOccupancyTypeFromJSON = exports.instanceOfRoomOccupancyType = void 0;
const runtime_1 = require("../runtime");
const HousekeepingRoomStatusType_1 = require("./HousekeepingRoomStatusType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the RoomOccupancyType interface.
 */
function instanceOfRoomOccupancyType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomOccupancyType = instanceOfRoomOccupancyType;
function RoomOccupancyTypeFromJSON(json) {
    return RoomOccupancyTypeFromJSONTyped(json, false);
}
exports.RoomOccupancyTypeFromJSON = RoomOccupancyTypeFromJSON;
function RoomOccupancyTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'roomIsOccupied': !(0, runtime_1.exists)(json, 'roomIsOccupied') ? undefined : json['roomIsOccupied'],
        'estimatedDepartureTime': !(0, runtime_1.exists)(json, 'estimatedDepartureTime') ? undefined : json['estimatedDepartureTime'],
        'guestFirstName': !(0, runtime_1.exists)(json, 'guestFirstName') ? undefined : json['guestFirstName'],
        'guestLastName': !(0, runtime_1.exists)(json, 'guestLastName') ? undefined : json['guestLastName'],
        'roomStatus': !(0, runtime_1.exists)(json, 'roomStatus') ? undefined : (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeFromJSON)(json['roomStatus']),
        'reservationIdList': !(0, runtime_1.exists)(json, 'reservationIdList') ? undefined : (json['reservationIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
    };
}
exports.RoomOccupancyTypeFromJSONTyped = RoomOccupancyTypeFromJSONTyped;
function RoomOccupancyTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomId': value.roomId,
        'roomType': value.roomType,
        'roomIsOccupied': value.roomIsOccupied,
        'estimatedDepartureTime': value.estimatedDepartureTime,
        'guestFirstName': value.guestFirstName,
        'guestLastName': value.guestLastName,
        'roomStatus': (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeToJSON)(value.roomStatus),
        'reservationIdList': value.reservationIdList === undefined ? undefined : (value.reservationIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
    };
}
exports.RoomOccupancyTypeToJSON = RoomOccupancyTypeToJSON;
