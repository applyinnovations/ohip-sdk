/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ActivityListInnerDeposit } from './ActivityListInnerDeposit';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { DateTimeSpanType } from './DateTimeSpanType';
import type { PersonNameType } from './PersonNameType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Represents a single instance of a scheduled activity.
 * @export
 * @interface ActivityListInner
 */
export interface ActivityListInner {
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof ActivityListInner
     */
    activityIds?: Array<UniqueIDType>;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ActivityListInner
     */
    amount?: CurrencyAmountType;
    /**
     *
     * @type {ActivityListInnerDeposit}
     * @memberof ActivityListInner
     */
    deposit?: ActivityListInnerDeposit;
    /**
     * Description of the activity
     * @type {Array<string>}
     * @memberof ActivityListInner
     */
    description?: Array<string>;
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof ActivityListInner
     */
    duration?: DateTimeSpanType;
    /**
     * Vendor extensions to the activity record.
     * @type {Array<string>}
     * @memberof ActivityListInner
     */
    extensions?: Array<string>;
    /**
     * Any Block code associated with the activity if its a Group booking.
     * @type {string}
     * @memberof ActivityListInner
     */
    groupCode?: string;
    /**
     * The Date by which the activity is deemed Cancelled/Deleted.
     * @type {string}
     * @memberof ActivityListInner
     */
    inactiveDate?: string;
    /**
     * When true indicates that activity link only needs to be inserted or deleted for this record.
     * @type {boolean}
     * @memberof ActivityListInner
     */
    link?: boolean;
    /**
     * The Location where the activity takes place. Eg: Salon
     * @type {string}
     * @memberof ActivityListInner
     */
    location?: string;
    /**
     * Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons
     * @type {Array<string>}
     * @memberof ActivityListInner
     */
    name?: Array<string>;
    /**
     * Any additional notes or comments regarding the scheduled activity.
     * @type {Array<string>}
     * @memberof ActivityListInner
     */
    note?: Array<string>;
    /**
     * The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons
     * @type {number}
     * @memberof ActivityListInner
     */
    numberOfPersons?: number;
    /**
     * The names of the participants.
     * @type {Array<PersonNameType>}
     * @memberof ActivityListInner
     */
    participants?: Array<PersonNameType>;
    /**
     * Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.
     * @type {string}
     * @memberof ActivityListInner
     */
    status?: string;
    /**
     * Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.
     * @type {string}
     * @memberof ActivityListInner
     */
    statusDescription?: string;
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof ActivityListInner
     */
    timeSpan?: DateTimeSpanType;
    /**
     * The Type of the activity. Eg: SPA, Golf etc.
     * @type {string}
     * @memberof ActivityListInner
     */
    type?: string;
    /**
     * The URL link to launch the Activity Reservation System to view or edit full details of this activity.
     * @type {string}
     * @memberof ActivityListInner
     */
    uRLLink?: string;
}
/**
 * Check if a given object implements the ActivityListInner interface.
 */
export declare function instanceOfActivityListInner(value: object): boolean;
export declare function ActivityListInnerFromJSON(json: any): ActivityListInner;
export declare function ActivityListInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityListInner;
export declare function ActivityListInnerToJSON(value?: ActivityListInner | null): any;
