"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Inventory Asynchronous API
 * APIs to cater for Inventory related asynchronous functionality in OPERA Cloud. This includes viewing inventory data along with its revenue and updating inventory&apos;s sell limits for date ranges. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevenueInventoryStatisticsTypeToJSON = exports.RevenueInventoryStatisticsTypeFromJSONTyped = exports.RevenueInventoryStatisticsTypeFromJSON = exports.instanceOfRevenueInventoryStatisticsType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the RevenueInventoryStatisticsType interface.
 */
function instanceOfRevenueInventoryStatisticsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRevenueInventoryStatisticsType = instanceOfRevenueInventoryStatisticsType;
function RevenueInventoryStatisticsTypeFromJSON(json) {
    return RevenueInventoryStatisticsTypeFromJSONTyped(json, false);
}
exports.RevenueInventoryStatisticsTypeFromJSON = RevenueInventoryStatisticsTypeFromJSON;
function RevenueInventoryStatisticsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cancelledRooms': !(0, runtime_1.exists)(json, 'cancelledRooms') ? undefined : json['cancelledRooms'],
        'foodRevenue': !(0, runtime_1.exists)(json, 'foodRevenue') ? undefined : json['foodRevenue'],
        'marketCode': !(0, runtime_1.exists)(json, 'marketCode') ? undefined : json['marketCode'],
        'noShowRooms': !(0, runtime_1.exists)(json, 'noShowRooms') ? undefined : json['noShowRooms'],
        'occupancyDate': !(0, runtime_1.exists)(json, 'occupancyDate') ? undefined : (new Date(json['occupancyDate'])),
        'ooRooms': !(0, runtime_1.exists)(json, 'ooRooms') ? undefined : json['ooRooms'],
        'osRooms': !(0, runtime_1.exists)(json, 'osRooms') ? undefined : json['osRooms'],
        'physicalRooms': !(0, runtime_1.exists)(json, 'physicalRooms') ? undefined : json['physicalRooms'],
        'property': !(0, runtime_1.exists)(json, 'property') ? undefined : json['property'],
        'resType': !(0, runtime_1.exists)(json, 'resType') ? undefined : json['resType'],
        'roomArrivals': !(0, runtime_1.exists)(json, 'roomArrivals') ? undefined : json['roomArrivals'],
        'roomDepartures': !(0, runtime_1.exists)(json, 'roomDepartures') ? undefined : json['roomDepartures'],
        'roomRevenue': !(0, runtime_1.exists)(json, 'roomRevenue') ? undefined : json['roomRevenue'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'roomsSold': !(0, runtime_1.exists)(json, 'roomsSold') ? undefined : json['roomsSold'],
        'totalRevenue': !(0, runtime_1.exists)(json, 'totalRevenue') ? undefined : json['totalRevenue'],
    };
}
exports.RevenueInventoryStatisticsTypeFromJSONTyped = RevenueInventoryStatisticsTypeFromJSONTyped;
function RevenueInventoryStatisticsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cancelledRooms': value.cancelledRooms,
        'foodRevenue': value.foodRevenue,
        'marketCode': value.marketCode,
        'noShowRooms': value.noShowRooms,
        'occupancyDate': value.occupancyDate === undefined ? undefined : (value.occupancyDate.toISOString().substring(0, 10)),
        'ooRooms': value.ooRooms,
        'osRooms': value.osRooms,
        'physicalRooms': value.physicalRooms,
        'property': value.property,
        'resType': value.resType,
        'roomArrivals': value.roomArrivals,
        'roomDepartures': value.roomDepartures,
        'roomRevenue': value.roomRevenue,
        'roomType': value.roomType,
        'roomsSold': value.roomsSold,
        'totalRevenue': value.totalRevenue,
    };
}
exports.RevenueInventoryStatisticsTypeToJSON = RevenueInventoryStatisticsTypeToJSON;
