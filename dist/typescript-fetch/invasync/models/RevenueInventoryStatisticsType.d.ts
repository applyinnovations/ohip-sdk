/**
 * Opera Cloud Inventory Asynchronous API
 * APIs to cater for Inventory related asynchronous functionality in OPERA Cloud. This includes viewing inventory data along with its revenue and updating inventory&apos;s sell limits for date ranges. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Revenue and statistics for an occupancy date and hotel code.
 * @export
 * @interface RevenueInventoryStatisticsType
 */
export interface RevenueInventoryStatisticsType {
    /**
     * The property for which revenue inventory statistics are fetched
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    property?: string;
    /**
     * The occupancy date for which the revenue inventory statistics are fetched.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    occupancyDate?: string;
    /**
     *
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    resType?: string;
    /**
     * The market code for which the revenue inventory statistics are fetched.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    marketCode?: string;
    /**
     * The room type for which the revenue inventory statistics are fetched.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    roomType?: string;
    /**
     * The statistical figure for physical rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    physicalRooms?: string;
    /**
     * The statistical figure for out of order rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    ooRooms?: string;
    /**
     * The statistical figure for out of service rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    osRooms?: string;
    /**
     * The statistical figure for rooms sold.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    roomsSold?: string;
    /**
     * The statistical figure for room revenue.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    roomRevenue?: string;
    /**
     * The statistical figure for arrival rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    roomArrivals?: string;
    /**
     * The statistical figure of departure rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    roomDepartures?: string;
    /**
     * The statistical figure for food revenue.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    foodRevenue?: string;
    /**
     * The statistical figure for total revenue.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    totalRevenue?: string;
    /**
     * The statistical figure for canceled rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    cancelledRooms?: string;
    /**
     * The statistical figure of no show rooms.
     * @type {string}
     * @memberof RevenueInventoryStatisticsType
     */
    noShowRooms?: string;
}
/**
 * Check if a given object implements the RevenueInventoryStatisticsType interface.
 */
export declare function instanceOfRevenueInventoryStatisticsType(value: object): boolean;
export declare function RevenueInventoryStatisticsTypeFromJSON(json: any): RevenueInventoryStatisticsType;
export declare function RevenueInventoryStatisticsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevenueInventoryStatisticsType;
export declare function RevenueInventoryStatisticsTypeToJSON(value?: RevenueInventoryStatisticsType | null): any;
