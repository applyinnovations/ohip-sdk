/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CopyTrackItActions, CopyTrackItLocations, CopyTrackItTypes, Status, TrackItActionsCriteria, TrackItActionsDetails, TrackItActionsToBeChanged, TrackItLocationsCriteria, TrackItLocationsDetails, TrackItLocationsToBeChanged, TrackItTypesCriteria, TrackItTypesDetails, TrackItTypesToBeChanged } from '../models/index';
export interface ChangeTrackItActionsRequest {
    actionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItActionsToBeChanged?: TrackItActionsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTrackItLocationsRequest {
    locationCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItLocationsToBeChanged?: TrackItLocationsToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTrackItTypesRequest {
    typeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItTypesToBeChanged?: TrackItTypesToBeChanged;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyTrackItActionsRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyTrackItActions?: CopyTrackItActions;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyTrackItLocationsRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyTrackItLocations?: CopyTrackItLocations;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyTrackItTypesRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyTrackItTypes?: CopyTrackItTypes;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTrackItActionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    codes?: Array<string>;
    wildCard?: string;
    showInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTrackItLocationsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    codes?: Array<string>;
    wildCard?: string;
    showInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTrackItTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    codes?: Array<string>;
    wildCard?: string;
    showInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTrackItActionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItActionsCriteria?: TrackItActionsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTrackItLocationsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItLocationsCriteria?: TrackItLocationsCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTrackItTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    trackItTypesCriteria?: TrackItTypesCriteria;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTrackItActionsRequest {
    actionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTrackItLocationsRequest {
    locationCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTrackItTypesRequest {
    typeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HotelConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update Track it Actions. <p><strong>OperationId:</strong>changeTrackItActions</p>
     * Change Track it Actions
     */
    changeTrackItActionsRaw(requestParameters: ChangeTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Track it Actions. <p><strong>OperationId:</strong>changeTrackItActions</p>
     * Change Track it Actions
     */
    changeTrackItActions(requestParameters: ChangeTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Track it Locations. <p><strong>OperationId:</strong>changeTrackItLocations</p>
     * Change Track it Locations
     */
    changeTrackItLocationsRaw(requestParameters: ChangeTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Track it Locations. <p><strong>OperationId:</strong>changeTrackItLocations</p>
     * Change Track it Locations
     */
    changeTrackItLocations(requestParameters: ChangeTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Track it Types. <p><strong>OperationId:</strong>changeTrackItTypes</p>
     * Change Track it Types
     */
    changeTrackItTypesRaw(requestParameters: ChangeTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Track it Types. <p><strong>OperationId:</strong>changeTrackItTypes</p>
     * Change Track it Types
     */
    changeTrackItTypes(requestParameters: ChangeTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Track it Actions. <p><strong>OperationId:</strong>copyTrackItActions</p>
     *  Copy Track it Actions
     */
    copyTrackItActionsRaw(requestParameters: CopyTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Track it Actions. <p><strong>OperationId:</strong>copyTrackItActions</p>
     *  Copy Track it Actions
     */
    copyTrackItActions(requestParameters: CopyTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Track it Locations. <p><strong>OperationId:</strong>copyTrackItLocations</p>
     *  Copy Track it Locations
     */
    copyTrackItLocationsRaw(requestParameters: CopyTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Track it Locations. <p><strong>OperationId:</strong>copyTrackItLocations</p>
     *  Copy Track it Locations
     */
    copyTrackItLocations(requestParameters: CopyTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Track it Types. <p><strong>OperationId:</strong>copyTrackItTypes</p>
     *  Copy Track it Types
     */
    copyTrackItTypesRaw(requestParameters: CopyTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Track it Types. <p><strong>OperationId:</strong>copyTrackItTypes</p>
     *  Copy Track it Types
     */
    copyTrackItTypes(requestParameters: CopyTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>
     * Get Track it Actions
     */
    getTrackItActionsRaw(requestParameters: GetTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TrackItActionsDetails>>;
    /**
     * Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>
     * Get Track it Actions
     */
    getTrackItActions(requestParameters: GetTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TrackItActionsDetails>;
    /**
     * Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>
     * Get Track it Locations
     */
    getTrackItLocationsRaw(requestParameters: GetTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TrackItLocationsDetails>>;
    /**
     * Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>
     * Get Track it Locations
     */
    getTrackItLocations(requestParameters: GetTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TrackItLocationsDetails>;
    /**
     * Use this API to get Track it Types. <p><strong>OperationId:</strong>getTrackItTypes</p>
     * Get Track it Types
     */
    getTrackItTypesRaw(requestParameters: GetTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TrackItTypesDetails>>;
    /**
     * Use this API to get Track it Types. <p><strong>OperationId:</strong>getTrackItTypes</p>
     * Get Track it Types
     */
    getTrackItTypes(requestParameters: GetTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TrackItTypesDetails>;
    /**
     * Use this API to create Track it Actions. <p><strong>OperationId:</strong>postTrackItActions</p>
     * Create Track it Actions
     */
    postTrackItActionsRaw(requestParameters: PostTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Track it Actions. <p><strong>OperationId:</strong>postTrackItActions</p>
     * Create Track it Actions
     */
    postTrackItActions(requestParameters: PostTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Track it Locations. <p><strong>OperationId:</strong>postTrackItLocations</p>
     * Create Track it Locations
     */
    postTrackItLocationsRaw(requestParameters: PostTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Track it Locations. <p><strong>OperationId:</strong>postTrackItLocations</p>
     * Create Track it Locations
     */
    postTrackItLocations(requestParameters: PostTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Track it Types. <p><strong>OperationId:</strong>postTrackItTypes</p>
     * Create Track it Types
     */
    postTrackItTypesRaw(requestParameters: PostTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Track it Types. <p><strong>OperationId:</strong>postTrackItTypes</p>
     * Create Track it Types
     */
    postTrackItTypes(requestParameters: PostTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Track it Actions. <p><strong>OperationId:</strong>removeTrackItActions</p>
     * Delete Track it Actions
     */
    removeTrackItActionsRaw(requestParameters: RemoveTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Track it Actions. <p><strong>OperationId:</strong>removeTrackItActions</p>
     * Delete Track it Actions
     */
    removeTrackItActions(requestParameters: RemoveTrackItActionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Track it Locations. <p><strong>OperationId:</strong>removeTrackItLocations</p>
     * Delete Track it Locations
     */
    removeTrackItLocationsRaw(requestParameters: RemoveTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Track it Locations. <p><strong>OperationId:</strong>removeTrackItLocations</p>
     * Delete Track it Locations
     */
    removeTrackItLocations(requestParameters: RemoveTrackItLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete Track it Types. <p><strong>OperationId:</strong>removeTrackItTypes</p>
     * Delete Track it Types
     */
    removeTrackItTypesRaw(requestParameters: RemoveTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete Track it Types. <p><strong>OperationId:</strong>removeTrackItTypes</p>
     * Delete Track it Types
     */
    removeTrackItTypes(requestParameters: RemoveTrackItTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
