/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GenerateAdjustmentTypeType } from './GenerateAdjustmentTypeType';
import {
    GenerateAdjustmentTypeTypeFromJSON,
    GenerateAdjustmentTypeTypeFromJSONTyped,
    GenerateAdjustmentTypeTypeToJSON,
} from './GenerateAdjustmentTypeType';

/**
 * Advance Generates posting rules.
 * @export
 * @interface GeneratePostingRuleType
 */
export interface GeneratePostingRuleType {
    /**
     * Generates are posted/applicable only for first Applicable Days of the stay.
     * @type {number}
     * @memberof GeneratePostingRuleType
     */
    applicableDays?: number;
    /**
     * 
     * @type {GenerateAdjustmentTypeType}
     * @memberof GeneratePostingRuleType
     */
    adjustmentType?: GenerateAdjustmentTypeType;
}

/**
 * Check if a given object implements the GeneratePostingRuleType interface.
 */
export function instanceOfGeneratePostingRuleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GeneratePostingRuleTypeFromJSON(json: any): GeneratePostingRuleType {
    return GeneratePostingRuleTypeFromJSONTyped(json, false);
}

export function GeneratePostingRuleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneratePostingRuleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'applicableDays': !exists(json, 'applicableDays') ? undefined : json['applicableDays'],
        'adjustmentType': !exists(json, 'adjustmentType') ? undefined : GenerateAdjustmentTypeTypeFromJSON(json['adjustmentType']),
    };
}

export function GeneratePostingRuleTypeToJSON(value?: GeneratePostingRuleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'applicableDays': value.applicableDays,
        'adjustmentType': GenerateAdjustmentTypeTypeToJSON(value.adjustmentType),
    };
}

