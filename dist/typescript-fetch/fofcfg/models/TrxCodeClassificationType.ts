/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashieringTransactionTypeType } from './CashieringTransactionTypeType';
import {
    CashieringTransactionTypeTypeFromJSON,
    CashieringTransactionTypeTypeFromJSONTyped,
    CashieringTransactionTypeTypeToJSON,
} from './CashieringTransactionTypeType';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { TrxCodeClassificationTypeTransactionType } from './TrxCodeClassificationTypeTransactionType';
import {
    TrxCodeClassificationTypeTransactionTypeFromJSON,
    TrxCodeClassificationTypeTransactionTypeFromJSONTyped,
    TrxCodeClassificationTypeTransactionTypeToJSON,
} from './TrxCodeClassificationTypeTransactionType';

/**
 * Transaction Code Classification details.
 * @export
 * @interface TrxCodeClassificationType
 */
export interface TrxCodeClassificationType {
    /**
     * 
     * @type {CashieringTransactionTypeType}
     * @memberof TrxCodeClassificationType
     */
    type?: CashieringTransactionTypeType;
    /**
     * 
     * @type {TrxCodeClassificationTypeTransactionType}
     * @memberof TrxCodeClassificationType
     */
    transactionType?: TrxCodeClassificationTypeTransactionType;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof TrxCodeClassificationType
     */
    group?: CodeDescriptionType;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof TrxCodeClassificationType
     */
    subgroup?: CodeDescriptionType;
    /**
     * Transaction code type for fiscal printing purposes.
     * @type {string}
     * @memberof TrxCodeClassificationType
     */
    fiscalTransactionType?: string;
}

/**
 * Check if a given object implements the TrxCodeClassificationType interface.
 */
export function instanceOfTrxCodeClassificationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrxCodeClassificationTypeFromJSON(json: any): TrxCodeClassificationType {
    return TrxCodeClassificationTypeFromJSONTyped(json, false);
}

export function TrxCodeClassificationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrxCodeClassificationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : CashieringTransactionTypeTypeFromJSON(json['type']),
        'transactionType': !exists(json, 'transactionType') ? undefined : TrxCodeClassificationTypeTransactionTypeFromJSON(json['transactionType']),
        'group': !exists(json, 'group') ? undefined : CodeDescriptionTypeFromJSON(json['group']),
        'subgroup': !exists(json, 'subgroup') ? undefined : CodeDescriptionTypeFromJSON(json['subgroup']),
        'fiscalTransactionType': !exists(json, 'fiscalTransactionType') ? undefined : json['fiscalTransactionType'],
    };
}

export function TrxCodeClassificationTypeToJSON(value?: TrxCodeClassificationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': CashieringTransactionTypeTypeToJSON(value.type),
        'transactionType': TrxCodeClassificationTypeTransactionTypeToJSON(value.transactionType),
        'group': CodeDescriptionTypeToJSON(value.group),
        'subgroup': CodeDescriptionTypeToJSON(value.subgroup),
        'fiscalTransactionType': value.fiscalTransactionType,
    };
}

