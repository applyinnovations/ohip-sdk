/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InterfaceCustomDataDetailType } from './InterfaceCustomDataDetailType';
/**
 * This type holds the custom data of a hotel interface.
 * @export
 * @interface InterfaceCustomDataInfoType
 */
export interface InterfaceCustomDataInfoType {
    /**
     * Specifies whether the details have to be exported as XML. If true, then the details are exported as XML else details are exported as text.
     * @type {boolean}
     * @memberof InterfaceCustomDataInfoType
     */
    exportAsXml?: boolean;
    /**
     * Specifies whether the Doorcard field details have to be included in the XML Export. If true, Doorcard field details will be included in the XML Export else details will not be included. This field is available only when the Export as XML field is selected.
     * @type {boolean}
     * @memberof InterfaceCustomDataInfoType
     */
    includeDoorcardField?: boolean;
    /**
     * Collection of custom data details of a hotel interface.
     * @type {Array<InterfaceCustomDataDetailType>}
     * @memberof InterfaceCustomDataInfoType
     */
    interfaceCustomDataDetails?: Array<InterfaceCustomDataDetailType>;
}
/**
 * Check if a given object implements the InterfaceCustomDataInfoType interface.
 */
export declare function instanceOfInterfaceCustomDataInfoType(value: object): boolean;
export declare function InterfaceCustomDataInfoTypeFromJSON(json: any): InterfaceCustomDataInfoType;
export declare function InterfaceCustomDataInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InterfaceCustomDataInfoType;
export declare function InterfaceCustomDataInfoTypeToJSON(value?: InterfaceCustomDataInfoType | null): any;
