/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ARAccountStatusType } from './ARAccountStatusType';
import type { ARAccountTypeLastReminderInfo } from './ARAccountTypeLastReminderInfo';
import type { ARAccountTypeLastStatementInfo } from './ARAccountTypeLastStatementInfo';
import type { ARAgingInfoType } from './ARAgingInfoType';
import type { ARBalanceType } from './ARBalanceType';
import type { ARInvoiceType } from './ARInvoiceType';
import type { ARPaymentType } from './ARPaymentType';
import type { ARYearViewInfoType } from './ARYearViewInfoType';
import type { AddressInfoType } from './AddressInfoType';
import type { CommentInfoType } from './CommentInfoType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { EmailInfoType } from './EmailInfoType';
import type { FixedChargeType } from './FixedChargeType';
import type { IndicatorType } from './IndicatorType';
import type { ProfileId } from './ProfileId';
import type { SearchMatchType } from './SearchMatchType';
import type { TelephoneInfoType } from './TelephoneInfoType';
import type { TraceType } from './TraceType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Accounts Receivabales Account details type.
 * @export
 * @interface ARAccountType
 */
export interface ARAccountType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof ARAccountType
     */
    accountId?: UniqueIDType;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof ARAccountType
     */
    accountIndicators?: Array<IndicatorType>;
    /**
     * Name of the AR Account.
     * @type {string}
     * @memberof ARAccountType
     */
    accountName?: string;
    /**
     * The Account Number for the Account.
     * @type {string}
     * @memberof ARAccountType
     */
    accountNo?: string;
    /**
     * The description of the Account Type.
     * @type {string}
     * @memberof ARAccountType
     */
    accountTypeDescription?: string;
    /**
     *
     * @type {AddressInfoType}
     * @memberof ARAccountType
     */
    address?: AddressInfoType;
    /**
     *
     * @type {ARAgingInfoType}
     * @memberof ARAccountType
     */
    agingInfo?: ARAgingInfoType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ARAccountType
     */
    balance?: CurrencyAmountType;
    /**
     * Include In Batch Statement
     * @type {boolean}
     * @memberof ARAccountType
     */
    batchStatement?: boolean;
    /**
     * The person to contact for this Account.
     * @type {string}
     * @memberof ARAccountType
     */
    contactName?: string;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ARAccountType
     */
    creditLimit?: CurrencyAmountType;
    /**
     *
     * @type {EmailInfoType}
     * @memberof ARAccountType
     */
    email?: EmailInfoType;
    /**
     * Indicates if the Account has opted to send the statements and reminders to the Account email address by default.
     * @type {boolean}
     * @memberof ARAccountType
     */
    emailStatementsReminders?: boolean;
    /**
     * Holds fixed charge detail.
     * @type {Array<FixedChargeType>}
     * @memberof ARAccountType
     */
    fixedCharges?: Array<FixedChargeType>;
    /**
     * Property where the AR Account exists.
     * @type {string}
     * @memberof ARAccountType
     */
    hotelId?: string;
    /**
     * A collection of AR Invoices.
     * @type {Array<ARInvoiceType>}
     * @memberof ARAccountType
     */
    invoices?: Array<ARInvoiceType>;
    /**
     *
     * @type {ARAccountTypeLastReminderInfo}
     * @memberof ARAccountType
     */
    lastReminderInfo?: ARAccountTypeLastReminderInfo;
    /**
     *
     * @type {ARAccountTypeLastStatementInfo}
     * @memberof ARAccountType
     */
    lastStatementInfo?: ARAccountTypeLastStatementInfo;
    /**
     * Month End Calculation.
     * @type {boolean}
     * @memberof ARAccountType
     */
    monthEndCalcYN?: boolean;
    /**
     * The Note details attached to the Account.
     * @type {Array<CommentInfoType>}
     * @memberof ARAccountType
     */
    notes?: Array<CommentInfoType>;
    /**
     * Number of days on which person can make payment.
     * @type {string}
     * @memberof ARAccountType
     */
    paymentDueDays?: string;
    /**
     * A collection of AR Payments.
     * @type {Array<ARPaymentType>}
     * @memberof ARAccountType
     */
    payments?: Array<ARPaymentType>;
    /**
     * Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.
     * @type {boolean}
     * @memberof ARAccountType
     */
    permanent?: boolean;
    /**
     * Indicates if this Account is the Primary Account for this Guest/Company.
     * @type {boolean}
     * @memberof ARAccountType
     */
    primary?: boolean;
    /**
     * Indicates if associated folios should be printed by default with the statement.
     * @type {boolean}
     * @memberof ARAccountType
     */
    printFoliosWithStatement?: boolean;
    /**
     *
     * @type {ProfileId}
     * @memberof ARAccountType
     */
    profileId?: ProfileId;
    /**
     * List of Generic Name-Value-Pair Parameters used for super search matches.
     * @type {Array<SearchMatchType>}
     * @memberof ARAccountType
     */
    searchMatches?: Array<SearchMatchType>;
    /**
     *
     * @type {ARAccountStatusType}
     * @memberof ARAccountType
     */
    status?: ARAccountStatusType;
    /**
     *
     * @type {ARBalanceType}
     * @memberof ARAccountType
     */
    summary?: ARBalanceType;
    /**
     * The Telephone and Fax details attached to the Account.
     * @type {Array<TelephoneInfoType>}
     * @memberof ARAccountType
     */
    telephones?: Array<TelephoneInfoType>;
    /**
     * The Trace details attached to the Account.
     * @type {Array<TraceType>}
     * @memberof ARAccountType
     */
    traces?: Array<TraceType>;
    /**
     * The type of Account.
     * @type {string}
     * @memberof ARAccountType
     */
    type?: string;
    /**
     *
     * @type {ARYearViewInfoType}
     * @memberof ARAccountType
     */
    yearViewInfo?: ARYearViewInfoType;
}
/**
 * Check if a given object implements the ARAccountType interface.
 */
export declare function instanceOfARAccountType(value: object): boolean;
export declare function ARAccountTypeFromJSON(json: any): ARAccountType;
export declare function ARAccountTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAccountType;
export declare function ARAccountTypeToJSON(value?: ARAccountType | null): any;
