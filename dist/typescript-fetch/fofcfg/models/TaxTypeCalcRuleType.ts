/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FlatAmtGenerateType } from './FlatAmtGenerateType';
import {
    FlatAmtGenerateTypeFromJSON,
    FlatAmtGenerateTypeFromJSONTyped,
    FlatAmtGenerateTypeToJSON,
} from './FlatAmtGenerateType';
import type { GenerateRoundingMethodType } from './GenerateRoundingMethodType';
import {
    GenerateRoundingMethodTypeFromJSON,
    GenerateRoundingMethodTypeFromJSONTyped,
    GenerateRoundingMethodTypeToJSON,
} from './GenerateRoundingMethodType';
import type { PercentageGenerateType } from './PercentageGenerateType';
import {
    PercentageGenerateTypeFromJSON,
    PercentageGenerateTypeFromJSONTyped,
    PercentageGenerateTypeToJSON,
} from './PercentageGenerateType';
import type { UDFGenerateType } from './UDFGenerateType';
import {
    UDFGenerateTypeFromJSON,
    UDFGenerateTypeFromJSONTyped,
    UDFGenerateTypeToJSON,
} from './UDFGenerateType';

/**
 * Defines the Calculation Rule for the generate.
 * @export
 * @interface TaxTypeCalcRuleType
 */
export interface TaxTypeCalcRuleType {
    /**
     * 
     * @type {PercentageGenerateType}
     * @memberof TaxTypeCalcRuleType
     */
    percentage?: PercentageGenerateType;
    /**
     * 
     * @type {FlatAmtGenerateType}
     * @memberof TaxTypeCalcRuleType
     */
    flatAmount?: FlatAmtGenerateType;
    /**
     * 
     * @type {UDFGenerateType}
     * @memberof TaxTypeCalcRuleType
     */
    uDF?: UDFGenerateType;
    /**
     * Existance of this type indicates that the generate will not be effective. This is mainly used on Tax Type based generates rule.
     * @type {object}
     * @memberof TaxTypeCalcRuleType
     */
    doNotPost?: object;
    /**
     * 
     * @type {GenerateRoundingMethodType}
     * @memberof TaxTypeCalcRuleType
     */
    roundingMethod?: GenerateRoundingMethodType;
}

/**
 * Check if a given object implements the TaxTypeCalcRuleType interface.
 */
export function instanceOfTaxTypeCalcRuleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaxTypeCalcRuleTypeFromJSON(json: any): TaxTypeCalcRuleType {
    return TaxTypeCalcRuleTypeFromJSONTyped(json, false);
}

export function TaxTypeCalcRuleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxTypeCalcRuleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'percentage': !exists(json, 'percentage') ? undefined : PercentageGenerateTypeFromJSON(json['percentage']),
        'flatAmount': !exists(json, 'flatAmount') ? undefined : FlatAmtGenerateTypeFromJSON(json['flatAmount']),
        'uDF': !exists(json, 'uDF') ? undefined : UDFGenerateTypeFromJSON(json['uDF']),
        'doNotPost': !exists(json, 'doNotPost') ? undefined : json['doNotPost'],
        'roundingMethod': !exists(json, 'roundingMethod') ? undefined : GenerateRoundingMethodTypeFromJSON(json['roundingMethod']),
    };
}

export function TaxTypeCalcRuleTypeToJSON(value?: TaxTypeCalcRuleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'percentage': PercentageGenerateTypeToJSON(value.percentage),
        'flatAmount': FlatAmtGenerateTypeToJSON(value.flatAmount),
        'uDF': UDFGenerateTypeToJSON(value.uDF),
        'doNotPost': value.doNotPost,
        'roundingMethod': GenerateRoundingMethodTypeToJSON(value.roundingMethod),
    };
}

