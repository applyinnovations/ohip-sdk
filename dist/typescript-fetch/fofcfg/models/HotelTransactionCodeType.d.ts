/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { ExportMappingLinkedCodeType } from './ExportMappingLinkedCodeType';
import type { GLMappingType } from './GLMappingType';
import type { GeneratesSetupType } from './GeneratesSetupType';
import type { ManagedByOptions } from './ManagedByOptions';
import type { PaymentTrxSetupType } from './PaymentTrxSetupType';
import type { TransactionAdjustmentType } from './TransactionAdjustmentType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import type { TrxCodeAmountsType } from './TrxCodeAmountsType';
import type { TrxCodeClassificationType } from './TrxCodeClassificationType';
import type { TrxSetupType } from './TrxSetupType';
/**
 * Transaction Code configuration details.
 * @export
 * @interface HotelTransactionCodeType
 */
export interface HotelTransactionCodeType {
    /**
     *
     * @type {TrxCodeClassificationType}
     * @memberof HotelTransactionCodeType
     */
    classification?: TrxCodeClassificationType;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof HotelTransactionCodeType
     */
    description?: TranslationTextType2000;
    /**
     *
     * @type {PaymentTrxSetupType}
     * @memberof HotelTransactionCodeType
     */
    paymentSetup?: PaymentTrxSetupType;
    /**
     *
     * @type {TrxSetupType}
     * @memberof HotelTransactionCodeType
     */
    trxSetup?: TrxSetupType;
    /**
     * Transaction code to be used to make adjustments on the posting made using this transaction code.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    adjustmentCode?: string;
    /**
     * Open Travel Alliance(OTA) tax type for the given transaction code.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    otaTaxType?: string;
    /**
     * Combination of Adjustment Reason Code and Transaction Adjustment Code.
     * @type {Array<TransactionAdjustmentType>}
     * @memberof HotelTransactionCodeType
     */
    transactionAdjustments?: Array<TransactionAdjustmentType>;
    /**
     * Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    serviceRecoveryAdjustmentCode?: string;
    /**
     *
     * @type {TrxCodeAmountsType}
     * @memberof HotelTransactionCodeType
     */
    amounts?: TrxCodeAmountsType;
    /**
     *
     * @type {GeneratesSetupType}
     * @memberof HotelTransactionCodeType
     */
    generatesSetup?: GeneratesSetupType;
    /**
     *
     * @type {GLMappingType}
     * @memberof HotelTransactionCodeType
     */
    gLMapping?: GLMappingType;
    /**
     * Code and description of the standard transaction code associated to this comp transaction code.
     * @type {Array<CodeDescriptionType>}
     * @memberof HotelTransactionCodeType
     */
    associatedTransactionCodes?: Array<CodeDescriptionType>;
    /**
     * Flag to identify if this transaction code already used as service recovery adjustment code.
     * @type {boolean}
     * @memberof HotelTransactionCodeType
     */
    allowServiceRecovery?: boolean;
    /**
     * Unique Universal product code of the article.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    universalProductCode?: string;
    /**
     * Mapping code and value attached to Transaction Code.
     * @type {Array<ExportMappingLinkedCodeType>}
     * @memberof HotelTransactionCodeType
     */
    mappingCodes?: Array<ExportMappingLinkedCodeType>;
    /**
     * Unique Transaction Code.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    code?: string;
    /**
     * If true indicates this transaction codes is for Comp Accounting.
     * @type {boolean}
     * @memberof HotelTransactionCodeType
     */
    compTransaction?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof HotelTransactionCodeType
     */
    printTrxReceipt?: boolean;
    /**
     * Hotel's Transaction Code configuration detail.
     * @type {string}
     * @memberof HotelTransactionCodeType
     */
    hotelId?: string;
    /**
     *
     * @type {ManagedByOptions}
     * @memberof HotelTransactionCodeType
     */
    managedBy?: ManagedByOptions;
}
/**
 * Check if a given object implements the HotelTransactionCodeType interface.
 */
export declare function instanceOfHotelTransactionCodeType(value: object): boolean;
export declare function HotelTransactionCodeTypeFromJSON(json: any): HotelTransactionCodeType;
export declare function HotelTransactionCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelTransactionCodeType;
export declare function HotelTransactionCodeTypeToJSON(value?: HotelTransactionCodeType | null): any;
