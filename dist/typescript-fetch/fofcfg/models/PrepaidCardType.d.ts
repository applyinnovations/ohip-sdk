/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { PrepaidCardDetailsType } from './PrepaidCardDetailsType';
import type { ProfileId } from './ProfileId';
import type { ReservationId } from './ReservationId';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Holds fixed charge information.
 * @export
 * @interface PrepaidCardType
 */
export interface PrepaidCardType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof PrepaidCardType
     */
    amount?: CurrencyAmountType;
    /**
     *
     * @type {PrepaidCardDetailsType}
     * @memberof PrepaidCardType
     */
    cardDetails?: PrepaidCardDetailsType;
    /**
     * Prepaid card / account number.
     * @type {string}
     * @memberof PrepaidCardType
     */
    cardNo?: string;
    /**
     * Masked Prepaid card / account number.
     * @type {string}
     * @memberof PrepaidCardType
     */
    cardNumberMasked?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof PrepaidCardType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof PrepaidCardType
     */
    creatorId?: string;
    /**
     * Given name, first name or names.
     * @type {string}
     * @memberof PrepaidCardType
     */
    firstName?: string;
    /**
     * Indicates a gift card type.
     * @type {boolean}
     * @memberof PrepaidCardType
     */
    giftCard?: boolean;
    /**
     * Hotel context for the Reservations.
     * @type {string}
     * @memberof PrepaidCardType
     */
    hotelId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof PrepaidCardType
     */
    interfaceId?: UniqueIDType;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof PrepaidCardType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof PrepaidCardType
     */
    lastModifyDateTime?: string;
    /**
     * Family name, last name or Company Name.
     * @type {string}
     * @memberof PrepaidCardType
     */
    name?: string;
    /**
     * Prepaid card pin code.
     * @type {string}
     * @memberof PrepaidCardType
     */
    pinCode?: string;
    /**
     *
     * @type {ProfileId}
     * @memberof PrepaidCardType
     */
    profileId?: ProfileId;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {Date}
     * @memberof PrepaidCardType
     */
    purgeDate?: Date;
    /**
     *
     * @type {ReservationId}
     * @memberof PrepaidCardType
     */
    reservationId?: ReservationId;
}
/**
 * Check if a given object implements the PrepaidCardType interface.
 */
export declare function instanceOfPrepaidCardType(value: object): boolean;
export declare function PrepaidCardTypeFromJSON(json: any): PrepaidCardType;
export declare function PrepaidCardTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrepaidCardType;
export declare function PrepaidCardTypeToJSON(value?: PrepaidCardType | null): any;
