/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CurrencyAmountType } from './CurrencyAmountType';
/**
 * Type which holds Collecting Agent Taxes primary details.
 * @export
 * @interface CollectingAgentTaxType
 */
export interface CollectingAgentTaxType {
    /**
     * It represents Hotel code
     * @type {string}
     * @memberof CollectingAgentTaxType
     */
    hotelId?: string;
    /**
     * Primary Key Sequence.
     * @type {number}
     * @memberof CollectingAgentTaxType
     */
    taxCode?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof CollectingAgentTaxType
     */
    taxType?: Array<string>;
    /**
     * The Transaction Code used to post the Taxes.
     * @type {string}
     * @memberof CollectingAgentTaxType
     */
    taxTransactionCode?: string;
    /**
     * Percentage used to calculate the Taxes
     * @type {number}
     * @memberof CollectingAgentTaxType
     */
    percentage?: number;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof CollectingAgentTaxType
     */
    triggerAmount?: CurrencyAmountType;
    /**
     * Primary Key Sequence.
     * @type {number}
     * @memberof CollectingAgentTaxType
     */
    taxVoid?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof CollectingAgentTaxType
     */
    newTaxType?: Array<string>;
    /**
     * Collection of Transaction Codes based on which the Collecting Agent Tax will be calculated.
     * @type {Array<CodeDescriptionType>}
     * @memberof CollectingAgentTaxType
     */
    calculatedOnTransactionCodes?: Array<CodeDescriptionType>;
    /**
     * Collection of Arrangement Codes based on which the Collecting Agent Tax will be calculated.
     * @type {Array<CodeDescriptionType>}
     * @memberof CollectingAgentTaxType
     */
    calculatedOnArrangementCodes?: Array<CodeDescriptionType>;
}
/**
 * Check if a given object implements the CollectingAgentTaxType interface.
 */
export declare function instanceOfCollectingAgentTaxType(value: object): boolean;
export declare function CollectingAgentTaxTypeFromJSON(json: any): CollectingAgentTaxType;
export declare function CollectingAgentTaxTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectingAgentTaxType;
export declare function CollectingAgentTaxTypeToJSON(value?: CollectingAgentTaxType | null): any;
