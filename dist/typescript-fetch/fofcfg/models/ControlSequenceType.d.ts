/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { ControlSequenceCodeType } from './ControlSequenceCodeType';
/**
 * Provides information about the Opera Control Sequence
 * @export
 * @interface ControlSequenceType
 */
export interface ControlSequenceType {
    /**
     *
     * @type {ControlSequenceCodeType}
     * @memberof ControlSequenceType
     */
    controlCode?: ControlSequenceCodeType;
    /**
     * Opera Control Sequence belongs to country
     * @type {string}
     * @memberof ControlSequenceType
     */
    countryCode?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof ControlSequenceType
     */
    folioType?: CodeDescriptionType;
    /**
     * Control Sequence code associated with Hotel
     * @type {string}
     * @memberof ControlSequenceType
     */
    hotelId?: string;
    /**
     * Maximum value of Opera Control Sequence
     * @type {number}
     * @memberof ControlSequenceType
     */
    maximum?: number;
    /**
     * Minimum value of Opera Control Sequence
     * @type {number}
     * @memberof ControlSequenceType
     */
    minimum?: number;
    /**
     * Current Sequence Value for the OPERA Sequence
     * @type {number}
     * @memberof ControlSequenceType
     */
    sequenceValue?: number;
}
/**
 * Check if a given object implements the ControlSequenceType interface.
 */
export declare function instanceOfControlSequenceType(value: object): boolean;
export declare function ControlSequenceTypeFromJSON(json: any): ControlSequenceType;
export declare function ControlSequenceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControlSequenceType;
export declare function ControlSequenceTypeToJSON(value?: ControlSequenceType | null): any;
