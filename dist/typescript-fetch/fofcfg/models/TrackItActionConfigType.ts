/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TrackItActionStatusType } from './TrackItActionStatusType';
import {
    TrackItActionStatusTypeFromJSON,
    TrackItActionStatusTypeFromJSONTyped,
    TrackItActionStatusTypeToJSON,
} from './TrackItActionStatusType';
import type { TrackItGroupType } from './TrackItGroupType';
import {
    TrackItGroupTypeFromJSON,
    TrackItGroupTypeFromJSONTyped,
    TrackItGroupTypeToJSON,
} from './TrackItGroupType';

/**
 * Track It Action Information Type.
 * @export
 * @interface TrackItActionConfigType
 */
export interface TrackItActionConfigType {
    /**
     * Code of the Track It Type.
     * @type {string}
     * @memberof TrackItActionConfigType
     */
    code?: string;
    /**
     * Description of the Track It Code.
     * @type {string}
     * @memberof TrackItActionConfigType
     */
    description?: string;
    /**
     * Display Sequence.
     * @type {number}
     * @memberof TrackItActionConfigType
     */
    displaySequence?: number;
    /**
     * Property to which the Track It Code is configured.
     * @type {string}
     * @memberof TrackItActionConfigType
     */
    hotelId?: string;
    /**
     * Indicates if the Track it Code is inactive.
     * @type {boolean}
     * @memberof TrackItActionConfigType
     */
    inactive?: boolean;
    /**
     * 
     * @type {TrackItActionStatusType}
     * @memberof TrackItActionConfigType
     */
    status?: TrackItActionStatusType;
    /**
     * 
     * @type {TrackItGroupType}
     * @memberof TrackItActionConfigType
     */
    trackItGroup?: TrackItGroupType;
}

/**
 * Check if a given object implements the TrackItActionConfigType interface.
 */
export function instanceOfTrackItActionConfigType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackItActionConfigTypeFromJSON(json: any): TrackItActionConfigType {
    return TrackItActionConfigTypeFromJSONTyped(json, false);
}

export function TrackItActionConfigTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackItActionConfigType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displaySequence': !exists(json, 'displaySequence') ? undefined : json['displaySequence'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
        'status': !exists(json, 'status') ? undefined : TrackItActionStatusTypeFromJSON(json['status']),
        'trackItGroup': !exists(json, 'trackItGroup') ? undefined : TrackItGroupTypeFromJSON(json['trackItGroup']),
    };
}

export function TrackItActionConfigTypeToJSON(value?: TrackItActionConfigType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'displaySequence': value.displaySequence,
        'hotelId': value.hotelId,
        'inactive': value.inactive,
        'status': TrackItActionStatusTypeToJSON(value.status),
        'trackItGroup': TrackItGroupTypeToJSON(value.trackItGroup),
    };
}

