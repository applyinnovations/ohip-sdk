"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventRevenueInformationTypeToJSON = exports.EventRevenueInformationTypeFromJSONTyped = exports.EventRevenueInformationTypeFromJSON = exports.instanceOfEventRevenueInformationType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const RevenueTypeType_1 = require("./RevenueTypeType");
/**
 * Check if a given object implements the EventRevenueInformationType interface.
 */
function instanceOfEventRevenueInformationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEventRevenueInformationType = instanceOfEventRevenueInformationType;
function EventRevenueInformationTypeFromJSON(json) {
    return EventRevenueInformationTypeFromJSONTyped(json, false);
}
exports.EventRevenueInformationTypeFromJSON = EventRevenueInformationTypeFromJSON;
function EventRevenueInformationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'actualRevenue': !(0, runtime_1.exists)(json, 'actualRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['actualRevenue']),
        'billedRevenue': !(0, runtime_1.exists)(json, 'billedRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['billedRevenue']),
        'custom': !(0, runtime_1.exists)(json, 'custom') ? undefined : json['custom'],
        'expectedRevenue': !(0, runtime_1.exists)(json, 'expectedRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['expectedRevenue']),
        'flatForecastRevenue': !(0, runtime_1.exists)(json, 'flatForecastRevenue') ? undefined : json['flatForecastRevenue'],
        'forecastRevenue': !(0, runtime_1.exists)(json, 'forecastRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['forecastRevenue']),
        'guaranteedRevenue': !(0, runtime_1.exists)(json, 'guaranteedRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['guaranteedRevenue']),
        'ignoreForecast': !(0, runtime_1.exists)(json, 'ignoreForecast') ? undefined : json['ignoreForecast'],
        'onTheBooksRevenue': !(0, runtime_1.exists)(json, 'onTheBooksRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['onTheBooksRevenue']),
        'orderBy': !(0, runtime_1.exists)(json, 'orderBy') ? undefined : json['orderBy'],
        'packaged': !(0, runtime_1.exists)(json, 'packaged') ? undefined : json['packaged'],
        'revenueType': !(0, runtime_1.exists)(json, 'revenueType') ? undefined : (0, RevenueTypeType_1.RevenueTypeTypeFromJSON)(json['revenueType']),
        'totalCost': !(0, runtime_1.exists)(json, 'totalCost') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['totalCost']),
    };
}
exports.EventRevenueInformationTypeFromJSONTyped = EventRevenueInformationTypeFromJSONTyped;
function EventRevenueInformationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'actualRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.actualRevenue),
        'billedRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.billedRevenue),
        'custom': value.custom,
        'expectedRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.expectedRevenue),
        'flatForecastRevenue': value.flatForecastRevenue,
        'forecastRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.forecastRevenue),
        'guaranteedRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.guaranteedRevenue),
        'ignoreForecast': value.ignoreForecast,
        'onTheBooksRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.onTheBooksRevenue),
        'orderBy': value.orderBy,
        'packaged': value.packaged,
        'revenueType': (0, RevenueTypeType_1.RevenueTypeTypeToJSON)(value.revenueType),
        'totalCost': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.totalCost),
    };
}
exports.EventRevenueInformationTypeToJSON = EventRevenueInformationTypeToJSON;
