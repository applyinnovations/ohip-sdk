"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventMenuItemTypeToJSON = exports.EventMenuItemTypeFromJSONTyped = exports.EventMenuItemTypeFromJSON = exports.instanceOfEventMenuItemType = void 0;
const runtime_1 = require("../runtime");
const CateringEventsAttendeesType_1 = require("./CateringEventsAttendeesType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const DietaryPrefType_1 = require("./DietaryPrefType");
const MenuTypeType_1 = require("./MenuTypeType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the EventMenuItemType interface.
 */
function instanceOfEventMenuItemType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEventMenuItemType = instanceOfEventMenuItemType;
function EventMenuItemTypeFromJSON(json) {
    return EventMenuItemTypeFromJSONTyped(json, false);
}
exports.EventMenuItemTypeFromJSON = EventMenuItemTypeFromJSON;
function EventMenuItemTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['id']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'classInfo': !(0, runtime_1.exists)(json, 'classInfo') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['classInfo']),
        'displayOrder': !(0, runtime_1.exists)(json, 'displayOrder') ? undefined : json['displayOrder'],
        'name1': !(0, runtime_1.exists)(json, 'name1') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['name1']),
        'name2': !(0, runtime_1.exists)(json, 'name2') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['name2']),
        'name3': !(0, runtime_1.exists)(json, 'name3') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['name3']),
        'origin1': !(0, runtime_1.exists)(json, 'origin1') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['origin1']),
        'origin2': !(0, runtime_1.exists)(json, 'origin2') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['origin2']),
        'menuType': !(0, runtime_1.exists)(json, 'menuType') ? undefined : (0, MenuTypeType_1.MenuTypeTypeFromJSON)(json['menuType']),
        'custom': !(0, runtime_1.exists)(json, 'custom') ? undefined : json['custom'],
        'year': !(0, runtime_1.exists)(json, 'year') ? undefined : json['year'],
        'restriction': !(0, runtime_1.exists)(json, 'restriction') ? undefined : json['restriction'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'dietaryPreferenceList': !(0, runtime_1.exists)(json, 'dietaryPreferenceList') ? undefined : (json['dietaryPreferenceList'].map(DietaryPrefType_1.DietaryPrefTypeFromJSON)),
        'eventTypes': !(0, runtime_1.exists)(json, 'eventTypes') ? undefined : json['eventTypes'],
        'responsibleDepartments': !(0, runtime_1.exists)(json, 'responsibleDepartments') ? undefined : json['responsibleDepartments'],
        'quickInsertCode': !(0, runtime_1.exists)(json, 'quickInsertCode') ? undefined : json['quickInsertCode'],
        'revenueType': !(0, runtime_1.exists)(json, 'revenueType') ? undefined : json['revenueType'],
        'salesPrice': !(0, runtime_1.exists)(json, 'salesPrice') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['salesPrice']),
        'cost': !(0, runtime_1.exists)(json, 'cost') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['cost']),
        'itemConsumption': !(0, runtime_1.exists)(json, 'itemConsumption') ? undefined : json['itemConsumption'],
        'container': !(0, runtime_1.exists)(json, 'container') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['container']),
        'portion': !(0, runtime_1.exists)(json, 'portion') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['portion']),
        'servings': !(0, runtime_1.exists)(json, 'servings') ? undefined : json['servings'],
        'webBookable': !(0, runtime_1.exists)(json, 'webBookable') ? undefined : json['webBookable'],
        'print': !(0, runtime_1.exists)(json, 'print') ? undefined : json['print'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'includedYN': !(0, runtime_1.exists)(json, 'includedYN') ? undefined : json['includedYN'],
        'eventMenuDetailID': !(0, runtime_1.exists)(json, 'eventMenuDetailID') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['eventMenuDetailID']),
        'course': !(0, runtime_1.exists)(json, 'course') ? undefined : json['course'],
        'courseOrder': !(0, runtime_1.exists)(json, 'courseOrder') ? undefined : json['courseOrder'],
        'attendees': !(0, runtime_1.exists)(json, 'attendees') ? undefined : (0, CateringEventsAttendeesType_1.CateringEventsAttendeesTypeFromJSON)(json['attendees']),
        'discountPercentage': !(0, runtime_1.exists)(json, 'discountPercentage') ? undefined : json['discountPercentage'],
        'demandFactor': !(0, runtime_1.exists)(json, 'demandFactor') ? undefined : json['demandFactor'],
        'mandatoryYN': !(0, runtime_1.exists)(json, 'mandatoryYN') ? undefined : json['mandatoryYN'],
    };
}
exports.EventMenuItemTypeFromJSONTyped = EventMenuItemTypeFromJSONTyped;
function EventMenuItemTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.id),
        'hotelId': value.hotelId,
        'classInfo': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.classInfo),
        'displayOrder': value.displayOrder,
        'name1': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.name1),
        'name2': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.name2),
        'name3': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.name3),
        'origin1': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.origin1),
        'origin2': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.origin2),
        'menuType': (0, MenuTypeType_1.MenuTypeTypeToJSON)(value.menuType),
        'custom': value.custom,
        'year': value.year,
        'restriction': value.restriction,
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'dietaryPreferenceList': value.dietaryPreferenceList === undefined ? undefined : (value.dietaryPreferenceList.map(DietaryPrefType_1.DietaryPrefTypeToJSON)),
        'eventTypes': value.eventTypes,
        'responsibleDepartments': value.responsibleDepartments,
        'quickInsertCode': value.quickInsertCode,
        'revenueType': value.revenueType,
        'salesPrice': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.salesPrice),
        'cost': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.cost),
        'itemConsumption': value.itemConsumption,
        'container': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.container),
        'portion': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.portion),
        'servings': value.servings,
        'webBookable': value.webBookable,
        'print': value.print,
        'inactive': value.inactive,
        'includedYN': value.includedYN,
        'eventMenuDetailID': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.eventMenuDetailID),
        'course': value.course,
        'courseOrder': value.courseOrder,
        'attendees': (0, CateringEventsAttendeesType_1.CateringEventsAttendeesTypeToJSON)(value.attendees),
        'discountPercentage': value.discountPercentage,
        'demandFactor': value.demandFactor,
        'mandatoryYN': value.mandatoryYN,
    };
}
exports.EventMenuItemTypeToJSON = EventMenuItemTypeToJSON;
