/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { MenuTypeType } from './MenuTypeType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Pertain Revenue Detail Information of the Menu.
 * @export
 * @interface EventMenuRevenueType
 */
export interface EventMenuRevenueType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof EventMenuRevenueType
     */
    cost?: CurrencyAmountType;
    /**
     * This type holds cost of the Menu.
     * @type {number}
     * @memberof EventMenuRevenueType
     */
    costMargin?: number;
    /**
     * Indicates that this resource item is a custom item added for this event.
     * @type {boolean}
     * @memberof EventMenuRevenueType
     */
    custom?: boolean;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof EventMenuRevenueType
     */
    internalQuote?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof EventMenuRevenueType
     */
    price?: CurrencyAmountType;
    /**
     * This type holds price margin for the given Menu.
     * @type {number}
     * @memberof EventMenuRevenueType
     */
    priceMargin?: number;
    /**
     *
     * @type {UniqueIDType}
     * @memberof EventMenuRevenueType
     */
    resourceId?: UniqueIDType;
    /**
     * This supports all Revenue Types
     * @type {string}
     * @memberof EventMenuRevenueType
     */
    revenueType?: string;
    /**
     *
     * @type {MenuTypeType}
     * @memberof EventMenuRevenueType
     */
    type?: MenuTypeType;
}
/**
 * Check if a given object implements the EventMenuRevenueType interface.
 */
export declare function instanceOfEventMenuRevenueType(value: object): boolean;
export declare function EventMenuRevenueTypeFromJSON(json: any): EventMenuRevenueType;
export declare function EventMenuRevenueTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventMenuRevenueType;
export declare function EventMenuRevenueTypeToJSON(value?: EventMenuRevenueType | null): any;
