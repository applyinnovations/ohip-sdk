"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockDetailsTypeToJSON = exports.BlockDetailsTypeFromJSONTyped = exports.BlockDetailsTypeFromJSON = exports.instanceOfBlockDetailsType = void 0;
const runtime_1 = require("../runtime");
const BlockClassificationType_1 = require("./BlockClassificationType");
const BlockDetailsTypePrimaryOwners_1 = require("./BlockDetailsTypePrimaryOwners");
const BlockDetailsTypePrimaryProfiles_1 = require("./BlockDetailsTypePrimaryProfiles");
const BlockNonCompeteType_1 = require("./BlockNonCompeteType");
const BlockRateProtectionType_1 = require("./BlockRateProtectionType");
const BlockSourceOfSaleType_1 = require("./BlockSourceOfSaleType");
const BookingStatusDetailType_1 = require("./BookingStatusDetailType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const MarketCodeInfoType_1 = require("./MarketCodeInfoType");
const ReservationTypeInfoType_1 = require("./ReservationTypeInfoType");
const TimeSpanType_1 = require("./TimeSpanType");
/**
 * Check if a given object implements the BlockDetailsType interface.
 */
function instanceOfBlockDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockDetailsType = instanceOfBlockDetailsType;
function BlockDetailsTypeFromJSON(json) {
    return BlockDetailsTypeFromJSONTyped(json, false);
}
exports.BlockDetailsTypeFromJSON = BlockDetailsTypeFromJSON;
function BlockDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockCode': !(0, runtime_1.exists)(json, 'blockCode') ? undefined : json['blockCode'],
        'blockName': !(0, runtime_1.exists)(json, 'blockName') ? undefined : json['blockName'],
        'blockDates': !(0, runtime_1.exists)(json, 'blockDates') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['blockDates']),
        'shoulderDates': !(0, runtime_1.exists)(json, 'shoulderDates') ? undefined : (0, TimeSpanType_1.TimeSpanTypeFromJSON)(json['shoulderDates']),
        'blockStatus': !(0, runtime_1.exists)(json, 'blockStatus') ? undefined : (0, BookingStatusDetailType_1.BookingStatusDetailTypeFromJSON)(json['blockStatus']),
        'reservationType': !(0, runtime_1.exists)(json, 'reservationType') ? undefined : (0, ReservationTypeInfoType_1.ReservationTypeInfoTypeFromJSON)(json['reservationType']),
        'marketCode': !(0, runtime_1.exists)(json, 'marketCode') ? undefined : (0, MarketCodeInfoType_1.MarketCodeInfoTypeFromJSON)(json['marketCode']),
        'sourceOfSale': !(0, runtime_1.exists)(json, 'sourceOfSale') ? undefined : (0, BlockSourceOfSaleType_1.BlockSourceOfSaleTypeFromJSON)(json['sourceOfSale']),
        'bookingType': !(0, runtime_1.exists)(json, 'bookingType') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['bookingType']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
        'blockType': !(0, runtime_1.exists)(json, 'blockType') ? undefined : json['blockType'],
        'conversionCode': !(0, runtime_1.exists)(json, 'conversionCode') ? undefined : json['conversionCode'],
        'conversionCodeDescription': !(0, runtime_1.exists)(json, 'conversionCodeDescription') ? undefined : json['conversionCodeDescription'],
        'rateProtectionDetails': !(0, runtime_1.exists)(json, 'rateProtectionDetails') ? undefined : (0, BlockRateProtectionType_1.BlockRateProtectionTypeFromJSON)(json['rateProtectionDetails']),
        'nonCompeteDetails': !(0, runtime_1.exists)(json, 'nonCompeteDetails') ? undefined : (0, BlockNonCompeteType_1.BlockNonCompeteTypeFromJSON)(json['nonCompeteDetails']),
        'rankingCode': !(0, runtime_1.exists)(json, 'rankingCode') ? undefined : json['rankingCode'],
        'rankingCodeDescription': !(0, runtime_1.exists)(json, 'rankingCodeDescription') ? undefined : json['rankingCodeDescription'],
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'hotelName': !(0, runtime_1.exists)(json, 'hotelName') ? undefined : json['hotelName'],
        'blockClassification': !(0, runtime_1.exists)(json, 'blockClassification') ? undefined : (0, BlockClassificationType_1.BlockClassificationTypeFromJSON)(json['blockClassification']),
        'primaryOwners': !(0, runtime_1.exists)(json, 'primaryOwners') ? undefined : (0, BlockDetailsTypePrimaryOwners_1.BlockDetailsTypePrimaryOwnersFromJSON)(json['primaryOwners']),
        'primaryProfiles': !(0, runtime_1.exists)(json, 'primaryProfiles') ? undefined : (0, BlockDetailsTypePrimaryProfiles_1.BlockDetailsTypePrimaryProfilesFromJSON)(json['primaryProfiles']),
        'cateringOnlyBlock': !(0, runtime_1.exists)(json, 'cateringOnlyBlock') ? undefined : json['cateringOnlyBlock'],
        'flexibleDates': !(0, runtime_1.exists)(json, 'flexibleDates') ? undefined : json['flexibleDates'],
        'externalLocked': !(0, runtime_1.exists)(json, 'externalLocked') ? undefined : json['externalLocked'],
    };
}
exports.BlockDetailsTypeFromJSONTyped = BlockDetailsTypeFromJSONTyped;
function BlockDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockCode': value.blockCode,
        'blockName': value.blockName,
        'blockDates': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.blockDates),
        'shoulderDates': (0, TimeSpanType_1.TimeSpanTypeToJSON)(value.shoulderDates),
        'blockStatus': (0, BookingStatusDetailType_1.BookingStatusDetailTypeToJSON)(value.blockStatus),
        'reservationType': (0, ReservationTypeInfoType_1.ReservationTypeInfoTypeToJSON)(value.reservationType),
        'marketCode': (0, MarketCodeInfoType_1.MarketCodeInfoTypeToJSON)(value.marketCode),
        'sourceOfSale': (0, BlockSourceOfSaleType_1.BlockSourceOfSaleTypeToJSON)(value.sourceOfSale),
        'bookingType': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.bookingType),
        'status': value.status,
        'blockType': value.blockType,
        'conversionCode': value.conversionCode,
        'conversionCodeDescription': value.conversionCodeDescription,
        'rateProtectionDetails': (0, BlockRateProtectionType_1.BlockRateProtectionTypeToJSON)(value.rateProtectionDetails),
        'nonCompeteDetails': (0, BlockNonCompeteType_1.BlockNonCompeteTypeToJSON)(value.nonCompeteDetails),
        'rankingCode': value.rankingCode,
        'rankingCodeDescription': value.rankingCodeDescription,
        'currencyCode': value.currencyCode,
        'hotelName': value.hotelName,
        'blockClassification': (0, BlockClassificationType_1.BlockClassificationTypeToJSON)(value.blockClassification),
        'primaryOwners': (0, BlockDetailsTypePrimaryOwners_1.BlockDetailsTypePrimaryOwnersToJSON)(value.primaryOwners),
        'primaryProfiles': (0, BlockDetailsTypePrimaryProfiles_1.BlockDetailsTypePrimaryProfilesToJSON)(value.primaryProfiles),
        'cateringOnlyBlock': value.cateringOnlyBlock,
        'flexibleDates': value.flexibleDates,
        'externalLocked': value.externalLocked,
    };
}
exports.BlockDetailsTypeToJSON = BlockDetailsTypeToJSON;
