"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CateringEventResourceTypeToJSON = exports.CateringEventResourceTypeFromJSONTyped = exports.CateringEventResourceTypeFromJSON = exports.instanceOfCateringEventResourceType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const EventResourceNoteType_1 = require("./EventResourceNoteType");
const ResourceId_1 = require("./ResourceId");
const ResourceType_1 = require("./ResourceType");
/**
 * Check if a given object implements the CateringEventResourceType interface.
 */
function instanceOfCateringEventResourceType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCateringEventResourceType = instanceOfCateringEventResourceType;
function CateringEventResourceTypeFromJSON(json) {
    return CateringEventResourceTypeFromJSONTyped(json, false);
}
exports.CateringEventResourceTypeFromJSON = CateringEventResourceTypeFromJSON;
function CateringEventResourceTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'resourceId': !(0, runtime_1.exists)(json, 'resourceId') ? undefined : (0, ResourceId_1.ResourceIdFromJSON)(json['resourceId']),
        'resourceType': !(0, runtime_1.exists)(json, 'resourceType') ? undefined : (0, ResourceType_1.ResourceTypeFromJSON)(json['resourceType']),
        'resourceName': !(0, runtime_1.exists)(json, 'resourceName') ? undefined : json['resourceName'],
        'setupCode': !(0, runtime_1.exists)(json, 'setupCode') ? undefined : json['setupCode'],
        'itemAttribute': !(0, runtime_1.exists)(json, 'itemAttribute') ? undefined : json['itemAttribute'],
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
        'hours': !(0, runtime_1.exists)(json, 'hours') ? undefined : json['hours'],
        'persons': !(0, runtime_1.exists)(json, 'persons') ? undefined : json['persons'],
        'quantityIncluded': !(0, runtime_1.exists)(json, 'quantityIncluded') ? undefined : json['quantityIncluded'],
        'quantityExcluded': !(0, runtime_1.exists)(json, 'quantityExcluded') ? undefined : json['quantityExcluded'],
        'unitPrice': !(0, runtime_1.exists)(json, 'unitPrice') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['unitPrice']),
        'revenue': !(0, runtime_1.exists)(json, 'revenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['revenue']),
        'rentalCode': !(0, runtime_1.exists)(json, 'rentalCode') ? undefined : json['rentalCode'],
        'discount': !(0, runtime_1.exists)(json, 'discount') ? undefined : json['discount'],
        'eventResourceNotes': !(0, runtime_1.exists)(json, 'eventResourceNotes') ? undefined : (json['eventResourceNotes'].map(EventResourceNoteType_1.EventResourceNoteTypeFromJSON)),
        'sellStartDate': !(0, runtime_1.exists)(json, 'sellStartDate') ? undefined : json['sellStartDate'],
        'sellEndDate': !(0, runtime_1.exists)(json, 'sellEndDate') ? undefined : json['sellEndDate'],
        'eventStartDate': !(0, runtime_1.exists)(json, 'eventStartDate') ? undefined : json['eventStartDate'],
        'eventEndDate': !(0, runtime_1.exists)(json, 'eventEndDate') ? undefined : json['eventEndDate'],
        'consumptionBased': !(0, runtime_1.exists)(json, 'consumptionBased') ? undefined : json['consumptionBased'],
        'multiChoice': !(0, runtime_1.exists)(json, 'multiChoice') ? undefined : json['multiChoice'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'order': !(0, runtime_1.exists)(json, 'order') ? undefined : json['order'],
        'hasDiscountMenuItem': !(0, runtime_1.exists)(json, 'hasDiscountMenuItem') ? undefined : json['hasDiscountMenuItem'],
        'hasNotes': !(0, runtime_1.exists)(json, 'hasNotes') ? undefined : json['hasNotes'],
        'external': !(0, runtime_1.exists)(json, 'external') ? undefined : json['external'],
        'custom': !(0, runtime_1.exists)(json, 'custom') ? undefined : json['custom'],
        'packaged': !(0, runtime_1.exists)(json, 'packaged') ? undefined : json['packaged'],
    };
}
exports.CateringEventResourceTypeFromJSONTyped = CateringEventResourceTypeFromJSONTyped;
function CateringEventResourceTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'resourceId': (0, ResourceId_1.ResourceIdToJSON)(value.resourceId),
        'resourceType': (0, ResourceType_1.ResourceTypeToJSON)(value.resourceType),
        'resourceName': value.resourceName,
        'setupCode': value.setupCode,
        'itemAttribute': value.itemAttribute,
        'quantity': value.quantity,
        'hours': value.hours,
        'persons': value.persons,
        'quantityIncluded': value.quantityIncluded,
        'quantityExcluded': value.quantityExcluded,
        'unitPrice': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.unitPrice),
        'revenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.revenue),
        'rentalCode': value.rentalCode,
        'discount': value.discount,
        'eventResourceNotes': value.eventResourceNotes === undefined ? undefined : (value.eventResourceNotes.map(EventResourceNoteType_1.EventResourceNoteTypeToJSON)),
        'sellStartDate': value.sellStartDate,
        'sellEndDate': value.sellEndDate,
        'eventStartDate': value.eventStartDate,
        'eventEndDate': value.eventEndDate,
        'consumptionBased': value.consumptionBased,
        'multiChoice': value.multiChoice,
        'hotelId': value.hotelId,
        'order': value.order,
        'hasDiscountMenuItem': value.hasDiscountMenuItem,
        'hasNotes': value.hasNotes,
        'external': value.external,
        'custom': value.custom,
        'packaged': value.packaged,
    };
}
exports.CateringEventResourceTypeToJSON = CateringEventResourceTypeToJSON;
