/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CurrencyAmountType } from './CurrencyAmountType';
/**
 * Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.
 * @export
 * @interface FixedChargeDetailType
 */
export interface FixedChargeDetailType {
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof FixedChargeDetailType
     */
    article?: CodeDescriptionType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof FixedChargeDetailType
     */
    chargeAmount?: CurrencyAmountType;
    /**
     * Percentage of the rate amount.
     * @type {number}
     * @memberof FixedChargeDetailType
     */
    percent?: number;
    /**
     * Quantity of the product.
     * @type {number}
     * @memberof FixedChargeDetailType
     */
    quantity?: number;
    /**
     * Holds number of comp or cash functionSpaceDetails night to allocate.
     * @type {number}
     * @memberof FixedChargeDetailType
     */
    roomNights?: number;
    /**
     * Additional information regarding the fixed charge.
     * @type {string}
     * @memberof FixedChargeDetailType
     */
    supplement?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof FixedChargeDetailType
     */
    transaction?: CodeDescriptionType;
}
/**
 * Check if a given object implements the FixedChargeDetailType interface.
 */
export declare function instanceOfFixedChargeDetailType(value: object): boolean;
export declare function FixedChargeDetailTypeFromJSON(json: any): FixedChargeDetailType;
export declare function FixedChargeDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FixedChargeDetailType;
export declare function FixedChargeDetailTypeToJSON(value?: FixedChargeDetailType | null): any;
