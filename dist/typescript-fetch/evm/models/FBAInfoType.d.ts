/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FBAStatusType } from './FBAStatusType';
/**
 * FBA ( Flexible Benefits Awards ) related fields.
 * @export
 * @interface FBAInfoType
 */
export interface FBAInfoType {
    /**
     * Award's FBA amount.
     * @type {number}
     * @memberof FBAInfoType
     */
    amount?: number;
    /**
     * The code specifying a monetary unit. Use ISO 4217, three alpha code.
     * @type {string}
     * @memberof FBAInfoType
     */
    currencyCode?: string;
    /**
     * The symbol for the currency, e.g, for currencyCode USD the symbol is $.
     * @type {string}
     * @memberof FBAInfoType
     */
    currencySymbol?: string;
    /**
     * Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).
     * @type {number}
     * @memberof FBAInfoType
     */
    decimalPlaces?: number;
    /**
     * Business date of the FBA bill generation.
     * @type {Date}
     * @memberof FBAInfoType
     */
    fbaBillGenDate?: Date;
    /**
     * Indicates if this certificate is a Flexible Benefit Award certificate.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    flexibleBenefitAward?: boolean;
    /**
     * Award's FBA monetary values.
     * @type {number}
     * @memberof FBAInfoType
     */
    monetaryValue?: number;
    /**
     * Indicates whether the certificate is Orphan or not.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    orphanCertificate?: boolean;
    /**
     * Indicates whether FBA has been posted.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    posted?: boolean;
    /**
     * Award's FBA posted amount.
     * @type {number}
     * @memberof FBAInfoType
     */
    postedAmount?: number;
    /**
     * Business date of the FBA posting.
     * @type {Date}
     * @memberof FBAInfoType
     */
    postingBusinessDate?: Date;
    /**
     * Date and time of the FBA posting.
     * @type {Date}
     * @memberof FBAInfoType
     */
    postingDateTime?: Date;
    /**
     * Marks if the certificate is eligible for reimbursement.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    reimburseAllowed?: boolean;
    /**
     * Indicates whether FBA has been reimbursed.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    reimbursed?: boolean;
    /**
     * Award's FBA reimbursed amount.
     * @type {number}
     * @memberof FBAInfoType
     */
    reimbursedAmount?: number;
    /**
     * Business date of the FBA reimbursement.
     * @type {Date}
     * @memberof FBAInfoType
     */
    reimbursementBusinessDate?: Date;
    /**
     * Date and time of the FBA reimbursement.
     * @type {Date}
     * @memberof FBAInfoType
     */
    reimbursementDateTime?: Date;
    /**
     * Marks if the certificate is eligible for resettlement
     * @type {boolean}
     * @memberof FBAInfoType
     */
    resettleAllowed?: boolean;
    /**
     * Indicates whether FBA has been settled.
     * @type {boolean}
     * @memberof FBAInfoType
     */
    settled?: boolean;
    /**
     * Business date of the FBA settlement.
     * @type {Date}
     * @memberof FBAInfoType
     */
    settlementBusinessDate?: Date;
    /**
     * Date and time of the FBA settlement.
     * @type {Date}
     * @memberof FBAInfoType
     */
    settlementDateTime?: Date;
    /**
     *
     * @type {FBAStatusType}
     * @memberof FBAInfoType
     */
    status?: FBAStatusType;
}
/**
 * Check if a given object implements the FBAInfoType interface.
 */
export declare function instanceOfFBAInfoType(value: object): boolean;
export declare function FBAInfoTypeFromJSON(json: any): FBAInfoType;
export declare function FBAInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FBAInfoType;
export declare function FBAInfoTypeToJSON(value?: FBAInfoType | null): any;
