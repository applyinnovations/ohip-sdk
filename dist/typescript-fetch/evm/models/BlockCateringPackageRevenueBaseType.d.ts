/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockCateringPackageRevenueType } from './BlockCateringPackageRevenueType';
import type { BlockType } from './BlockType';
import type { CateringPackageInfoType } from './CateringPackageInfoType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Pricing detail of associated catering package.
 * @export
 * @interface BlockCateringPackageRevenueBaseType
 */
export interface BlockCateringPackageRevenueBaseType {
    /**
     *
     * @type {BlockType}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    blockInfo?: BlockType;
    /**
     * Defines if Flat Rate is applicable for the package.
     * @type {boolean}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    flatPrice?: boolean;
    /**
     *
     * @type {CateringPackageInfoType}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    packageDetail?: CateringPackageInfoType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    packageId?: UniqueIDType;
    /**
     * Price Code of the associated package.
     * @type {string}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    priceCode?: string;
    /**
     * Price Code description of the associated package.
     * @type {string}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    priceDescription?: string;
    /**
     * Collection of revenues associated with packaged event.
     * @type {Array<BlockCateringPackageRevenueType>}
     * @memberof BlockCateringPackageRevenueBaseType
     */
    revenues?: Array<BlockCateringPackageRevenueType>;
}
/**
 * Check if a given object implements the BlockCateringPackageRevenueBaseType interface.
 */
export declare function instanceOfBlockCateringPackageRevenueBaseType(value: object): boolean;
export declare function BlockCateringPackageRevenueBaseTypeFromJSON(json: any): BlockCateringPackageRevenueBaseType;
export declare function BlockCateringPackageRevenueBaseTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockCateringPackageRevenueBaseType;
export declare function BlockCateringPackageRevenueBaseTypeToJSON(value?: BlockCateringPackageRevenueBaseType | null): any;
