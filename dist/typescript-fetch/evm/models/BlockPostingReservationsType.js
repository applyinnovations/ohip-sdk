"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockPostingReservationsTypeToJSON = exports.BlockPostingReservationsTypeFromJSONTyped = exports.BlockPostingReservationsTypeFromJSON = exports.instanceOfBlockPostingReservationsType = void 0;
const runtime_1 = require("../runtime");
const BookingStatusType_1 = require("./BookingStatusType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the BlockPostingReservationsType interface.
 */
function instanceOfBlockPostingReservationsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockPostingReservationsType = instanceOfBlockPostingReservationsType;
function BlockPostingReservationsTypeFromJSON(json) {
    return BlockPostingReservationsTypeFromJSONTyped(json, false);
}
exports.BlockPostingReservationsTypeFromJSON = BlockPostingReservationsTypeFromJSON;
function BlockPostingReservationsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'confirmationNumber': !(0, runtime_1.exists)(json, 'confirmationNumber') ? undefined : json['confirmationNumber'],
        'guestName': !(0, runtime_1.exists)(json, 'guestName') ? undefined : json['guestName'],
        'arrivalDate': !(0, runtime_1.exists)(json, 'arrivalDate') ? undefined : json['arrivalDate'],
        'departureDate': !(0, runtime_1.exists)(json, 'departureDate') ? undefined : json['departureDate'],
        'reservationStatus': !(0, runtime_1.exists)(json, 'reservationStatus') ? undefined : (0, BookingStatusType_1.BookingStatusTypeFromJSON)(json['reservationStatus']),
        'roomHotelCode': !(0, runtime_1.exists)(json, 'roomHotelCode') ? undefined : json['roomHotelCode'],
        'reservationNameId': !(0, runtime_1.exists)(json, 'reservationNameId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationNameId']),
        'guestFirstName': !(0, runtime_1.exists)(json, 'guestFirstName') ? undefined : json['guestFirstName'],
        'eventId': !(0, runtime_1.exists)(json, 'eventId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['eventId']),
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['blockId']),
        'defaultPostingAccount': !(0, runtime_1.exists)(json, 'defaultPostingAccount') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['defaultPostingAccount']),
        'size': !(0, runtime_1.exists)(json, 'size') ? undefined : json['size'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'noPost': !(0, runtime_1.exists)(json, 'noPost') ? undefined : json['noPost'],
    };
}
exports.BlockPostingReservationsTypeFromJSONTyped = BlockPostingReservationsTypeFromJSONTyped;
function BlockPostingReservationsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'confirmationNumber': value.confirmationNumber,
        'guestName': value.guestName,
        'arrivalDate': value.arrivalDate,
        'departureDate': value.departureDate,
        'reservationStatus': (0, BookingStatusType_1.BookingStatusTypeToJSON)(value.reservationStatus),
        'roomHotelCode': value.roomHotelCode,
        'reservationNameId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationNameId),
        'guestFirstName': value.guestFirstName,
        'eventId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.eventId),
        'blockId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.blockId),
        'defaultPostingAccount': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.defaultPostingAccount),
        'size': value.size,
        'roomId': value.roomId,
        'noPost': value.noPost,
    };
}
exports.BlockPostingReservationsTypeToJSON = BlockPostingReservationsTypeToJSON;
