"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventMenuRevenueTypeToJSON = exports.EventMenuRevenueTypeFromJSONTyped = exports.EventMenuRevenueTypeFromJSON = exports.instanceOfEventMenuRevenueType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const MenuTypeType_1 = require("./MenuTypeType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the EventMenuRevenueType interface.
 */
function instanceOfEventMenuRevenueType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEventMenuRevenueType = instanceOfEventMenuRevenueType;
function EventMenuRevenueTypeFromJSON(json) {
    return EventMenuRevenueTypeFromJSONTyped(json, false);
}
exports.EventMenuRevenueTypeFromJSON = EventMenuRevenueTypeFromJSON;
function EventMenuRevenueTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cost': !(0, runtime_1.exists)(json, 'cost') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['cost']),
        'costMargin': !(0, runtime_1.exists)(json, 'costMargin') ? undefined : json['costMargin'],
        'custom': !(0, runtime_1.exists)(json, 'custom') ? undefined : json['custom'],
        'internalQuote': !(0, runtime_1.exists)(json, 'internalQuote') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['internalQuote']),
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['price']),
        'priceMargin': !(0, runtime_1.exists)(json, 'priceMargin') ? undefined : json['priceMargin'],
        'resourceId': !(0, runtime_1.exists)(json, 'resourceId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['resourceId']),
        'revenueType': !(0, runtime_1.exists)(json, 'revenueType') ? undefined : json['revenueType'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : (0, MenuTypeType_1.MenuTypeTypeFromJSON)(json['type']),
    };
}
exports.EventMenuRevenueTypeFromJSONTyped = EventMenuRevenueTypeFromJSONTyped;
function EventMenuRevenueTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cost': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.cost),
        'costMargin': value.costMargin,
        'custom': value.custom,
        'internalQuote': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.internalQuote),
        'price': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.price),
        'priceMargin': value.priceMargin,
        'resourceId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.resourceId),
        'revenueType': value.revenueType,
        'type': (0, MenuTypeType_1.MenuTypeTypeToJSON)(value.type),
    };
}
exports.EventMenuRevenueTypeToJSON = EventMenuRevenueTypeToJSON;
