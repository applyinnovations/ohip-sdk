/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BookingStatusType } from './BookingStatusType';
import type { EventId } from './EventId';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Pertain shared event Information.
 * @export
 * @interface SharedFunctionSpaceEventType
 */
export interface SharedFunctionSpaceEventType {
    /**
     * Number of event attendees.
     * @type {number}
     * @memberof SharedFunctionSpaceEventType
     */
    attendees?: number;
    /**
     *
     * @type {UniqueIDType}
     * @memberof SharedFunctionSpaceEventType
     */
    blockId?: UniqueIDType;
    /**
     * Block Name.
     * @type {string}
     * @memberof SharedFunctionSpaceEventType
     */
    blockName?: string;
    /**
     * Indicates if catering event's spaces are deducted from inventory
     * @type {boolean}
     * @memberof SharedFunctionSpaceEventType
     */
    cateringDeductInventory?: boolean;
    /**
     *
     * @type {EventId}
     * @memberof SharedFunctionSpaceEventType
     */
    eventId?: EventId;
    /**
     * Name of event.
     * @type {string}
     * @memberof SharedFunctionSpaceEventType
     */
    eventName?: string;
    /**
     *
     * @type {BookingStatusType}
     * @memberof SharedFunctionSpaceEventType
     */
    eventStatus?: BookingStatusType;
    /**
     * Type of event.
     * @type {string}
     * @memberof SharedFunctionSpaceEventType
     */
    eventType?: string;
    /**
     * Function space of event.
     * @type {string}
     * @memberof SharedFunctionSpaceEventType
     */
    functionSpaceCode?: string;
    /**
     * Indicates if catering event is shared or not
     * @type {boolean}
     * @memberof SharedFunctionSpaceEventType
     */
    isShared?: boolean;
}
/**
 * Check if a given object implements the SharedFunctionSpaceEventType interface.
 */
export declare function instanceOfSharedFunctionSpaceEventType(value: object): boolean;
export declare function SharedFunctionSpaceEventTypeFromJSON(json: any): SharedFunctionSpaceEventType;
export declare function SharedFunctionSpaceEventTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedFunctionSpaceEventType;
export declare function SharedFunctionSpaceEventTypeToJSON(value?: SharedFunctionSpaceEventType | null): any;
