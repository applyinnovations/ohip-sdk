/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DateTimeSpanType } from './DateTimeSpanType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Request object for retrieving waitlisted and current events holding the function space.
 * @export
 * @interface WaitlistedEventsSearchType
 */
export interface WaitlistedEventsSearchType {
    /**
     * Search a specific account's waitlisted events.
     * @type {string}
     * @memberof WaitlistedEventsSearchType
     */
    accountName?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof WaitlistedEventsSearchType
     */
    blockId?: UniqueIDType;
    /**
     * Search a specific block's waitlisted events.
     * @type {string}
     * @memberof WaitlistedEventsSearchType
     */
    blockName?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof WaitlistedEventsSearchType
     */
    functionSpaceCode?: Array<string>;
    /**
     * Hotel code of Function Space.
     * @type {string}
     * @memberof WaitlistedEventsSearchType
     */
    hotelId?: string;
    /**
     *
     * @type {DateTimeSpanType}
     * @memberof WaitlistedEventsSearchType
     */
    waitlistedTimeSpan?: DateTimeSpanType;
}
/**
 * Check if a given object implements the WaitlistedEventsSearchType interface.
 */
export declare function instanceOfWaitlistedEventsSearchType(value: object): boolean;
export declare function WaitlistedEventsSearchTypeFromJSON(json: any): WaitlistedEventsSearchType;
export declare function WaitlistedEventsSearchTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitlistedEventsSearchType;
export declare function WaitlistedEventsSearchTypeToJSON(value?: WaitlistedEventsSearchType | null): any;
