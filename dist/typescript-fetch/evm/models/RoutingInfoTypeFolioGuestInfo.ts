/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Guest details
 * @export
 * @interface RoutingInfoTypeFolioGuestInfo
 */
export interface RoutingInfoTypeFolioGuestInfo {
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof RoutingInfoTypeFolioGuestInfo
     */
    profileIdList?: Array<UniqueIDType>;
}

/**
 * Check if a given object implements the RoutingInfoTypeFolioGuestInfo interface.
 */
export function instanceOfRoutingInfoTypeFolioGuestInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoutingInfoTypeFolioGuestInfoFromJSON(json: any): RoutingInfoTypeFolioGuestInfo {
    return RoutingInfoTypeFolioGuestInfoFromJSONTyped(json, false);
}

export function RoutingInfoTypeFolioGuestInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutingInfoTypeFolioGuestInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileIdList': !exists(json, 'profileIdList') ? undefined : ((json['profileIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
    };
}

export function RoutingInfoTypeFolioGuestInfoToJSON(value?: RoutingInfoTypeFolioGuestInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileIdList': value.profileIdList === undefined ? undefined : ((value.profileIdList as Array<any>).map(UniqueIDTypeToJSON)),
    };
}

