"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpportunityEventDetailTypeToJSON = exports.OpportunityEventDetailTypeFromJSONTyped = exports.OpportunityEventDetailTypeFromJSON = exports.instanceOfOpportunityEventDetailType = void 0;
const runtime_1 = require("../runtime");
const BookingStatusType_1 = require("./BookingStatusType");
const CateringEventsAttendeesType_1 = require("./CateringEventsAttendeesType");
const DateTimeSpanType_1 = require("./DateTimeSpanType");
const TranslationTextType60_1 = require("./TranslationTextType60");
/**
 * Check if a given object implements the OpportunityEventDetailType interface.
 */
function instanceOfOpportunityEventDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfOpportunityEventDetailType = instanceOfOpportunityEventDetailType;
function OpportunityEventDetailTypeFromJSON(json) {
    return OpportunityEventDetailTypeFromJSONTyped(json, false);
}
exports.OpportunityEventDetailTypeFromJSON = OpportunityEventDetailTypeFromJSON;
function OpportunityEventDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'attendees': !(0, runtime_1.exists)(json, 'attendees') ? undefined : (0, CateringEventsAttendeesType_1.CateringEventsAttendeesTypeFromJSON)(json['attendees']),
        'day': !(0, runtime_1.exists)(json, 'day') ? undefined : json['day'],
        'doorcard': !(0, runtime_1.exists)(json, 'doorcard') ? undefined : json['doorcard'],
        'eventName': !(0, runtime_1.exists)(json, 'eventName') ? undefined : (0, TranslationTextType60_1.TranslationTextType60FromJSON)(json['eventName']),
        'eventStatus': !(0, runtime_1.exists)(json, 'eventStatus') ? undefined : (0, BookingStatusType_1.BookingStatusTypeFromJSON)(json['eventStatus']),
        'eventTimeSpan': !(0, runtime_1.exists)(json, 'eventTimeSpan') ? undefined : (0, DateTimeSpanType_1.DateTimeSpanTypeFromJSON)(json['eventTimeSpan']),
        'eventType': !(0, runtime_1.exists)(json, 'eventType') ? undefined : json['eventType'],
        'quantity': !(0, runtime_1.exists)(json, 'quantity') ? undefined : json['quantity'],
    };
}
exports.OpportunityEventDetailTypeFromJSONTyped = OpportunityEventDetailTypeFromJSONTyped;
function OpportunityEventDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'attendees': (0, CateringEventsAttendeesType_1.CateringEventsAttendeesTypeToJSON)(value.attendees),
        'day': value.day,
        'doorcard': value.doorcard,
        'eventName': (0, TranslationTextType60_1.TranslationTextType60ToJSON)(value.eventName),
        'eventStatus': (0, BookingStatusType_1.BookingStatusTypeToJSON)(value.eventStatus),
        'eventTimeSpan': (0, DateTimeSpanType_1.DateTimeSpanTypeToJSON)(value.eventTimeSpan),
        'eventType': value.eventType,
        'quantity': value.quantity,
    };
}
exports.OpportunityEventDetailTypeToJSON = OpportunityEventDetailTypeToJSON;
