"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedFunctionSpaceEventTypeToJSON = exports.SharedFunctionSpaceEventTypeFromJSONTyped = exports.SharedFunctionSpaceEventTypeFromJSON = exports.instanceOfSharedFunctionSpaceEventType = void 0;
const runtime_1 = require("../runtime");
const BookingStatusType_1 = require("./BookingStatusType");
const EventId_1 = require("./EventId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the SharedFunctionSpaceEventType interface.
 */
function instanceOfSharedFunctionSpaceEventType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSharedFunctionSpaceEventType = instanceOfSharedFunctionSpaceEventType;
function SharedFunctionSpaceEventTypeFromJSON(json) {
    return SharedFunctionSpaceEventTypeFromJSONTyped(json, false);
}
exports.SharedFunctionSpaceEventTypeFromJSON = SharedFunctionSpaceEventTypeFromJSON;
function SharedFunctionSpaceEventTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockName': !(0, runtime_1.exists)(json, 'blockName') ? undefined : json['blockName'],
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['blockId']),
        'eventName': !(0, runtime_1.exists)(json, 'eventName') ? undefined : json['eventName'],
        'eventId': !(0, runtime_1.exists)(json, 'eventId') ? undefined : (0, EventId_1.EventIdFromJSON)(json['eventId']),
        'eventType': !(0, runtime_1.exists)(json, 'eventType') ? undefined : json['eventType'],
        'eventStatus': !(0, runtime_1.exists)(json, 'eventStatus') ? undefined : (0, BookingStatusType_1.BookingStatusTypeFromJSON)(json['eventStatus']),
        'cateringDeductInventory': !(0, runtime_1.exists)(json, 'cateringDeductInventory') ? undefined : json['cateringDeductInventory'],
        'functionSpaceCode': !(0, runtime_1.exists)(json, 'functionSpaceCode') ? undefined : json['functionSpaceCode'],
        'attendees': !(0, runtime_1.exists)(json, 'attendees') ? undefined : json['attendees'],
        'isShared': !(0, runtime_1.exists)(json, 'isShared') ? undefined : json['isShared'],
    };
}
exports.SharedFunctionSpaceEventTypeFromJSONTyped = SharedFunctionSpaceEventTypeFromJSONTyped;
function SharedFunctionSpaceEventTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockName': value.blockName,
        'blockId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.blockId),
        'eventName': value.eventName,
        'eventId': (0, EventId_1.EventIdToJSON)(value.eventId),
        'eventType': value.eventType,
        'eventStatus': (0, BookingStatusType_1.BookingStatusTypeToJSON)(value.eventStatus),
        'cateringDeductInventory': value.cateringDeductInventory,
        'functionSpaceCode': value.functionSpaceCode,
        'attendees': value.attendees,
        'isShared': value.isShared,
    };
}
exports.SharedFunctionSpaceEventTypeToJSON = SharedFunctionSpaceEventTypeToJSON;
