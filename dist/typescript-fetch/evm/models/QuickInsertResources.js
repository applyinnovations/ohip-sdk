"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuickInsertResourcesToJSON = exports.QuickInsertResourcesFromJSONTyped = exports.QuickInsertResourcesFromJSON = exports.instanceOfQuickInsertResources = void 0;
const runtime_1 = require("../runtime");
const QuickInsertResourceListType_1 = require("./QuickInsertResourceListType");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the QuickInsertResources interface.
 */
function instanceOfQuickInsertResources(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfQuickInsertResources = instanceOfQuickInsertResources;
function QuickInsertResourcesFromJSON(json) {
    return QuickInsertResourcesFromJSONTyped(json, false);
}
exports.QuickInsertResourcesFromJSON = QuickInsertResourcesFromJSON;
function QuickInsertResourcesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'quickInsertResourceListInfo': !(0, runtime_1.exists)(json, 'quickInsertResourceListInfo') ? undefined : (json['quickInsertResourceListInfo'].map(QuickInsertResourceListType_1.QuickInsertResourceListTypeFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.QuickInsertResourcesFromJSONTyped = QuickInsertResourcesFromJSONTyped;
function QuickInsertResourcesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'quickInsertResourceListInfo': value.quickInsertResourceListInfo === undefined ? undefined : (value.quickInsertResourceListInfo.map(QuickInsertResourceListType_1.QuickInsertResourceListTypeToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.QuickInsertResourcesToJSON = QuickInsertResourcesToJSON;
