"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResInventoryItemsTypeToJSON = exports.ResInventoryItemsTypeFromJSONTyped = exports.ResInventoryItemsTypeFromJSON = exports.instanceOfResInventoryItemsType = void 0;
const runtime_1 = require("../runtime");
const ResInventoryItemType_1 = require("./ResInventoryItemType");
/**
 * Check if a given object implements the ResInventoryItemsType interface.
 */
function instanceOfResInventoryItemsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResInventoryItemsType = instanceOfResInventoryItemsType;
function ResInventoryItemsTypeFromJSON(json) {
    return ResInventoryItemsTypeFromJSONTyped(json, false);
}
exports.ResInventoryItemsTypeFromJSON = ResInventoryItemsTypeFromJSON;
function ResInventoryItemsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'item': !(0, runtime_1.exists)(json, 'item') ? undefined : (json['item'].map(ResInventoryItemType_1.ResInventoryItemTypeFromJSON)),
        'itemClassCode': !(0, runtime_1.exists)(json, 'itemClassCode') ? undefined : json['itemClassCode'],
    };
}
exports.ResInventoryItemsTypeFromJSONTyped = ResInventoryItemsTypeFromJSONTyped;
function ResInventoryItemsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'item': value.item === undefined ? undefined : (value.item.map(ResInventoryItemType_1.ResInventoryItemTypeToJSON)),
        'itemClassCode': value.itemClassCode,
    };
}
exports.ResInventoryItemsTypeToJSON = ResInventoryItemsTypeToJSON;
