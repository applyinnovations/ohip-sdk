/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { MessageStatusType } from './MessageStatusType';
/**
 * Holds the Delivery Information of the Message
 * @export
 * @interface MessageDeliveryType
 */
export interface MessageDeliveryType {
    /**
     *
     * @type {MessageStatusType}
     * @memberof MessageDeliveryType
     */
    deliveryStatus?: MessageStatusType;
    /**
     * Date the message has been delivered (marked as received)
     * @type {string}
     * @memberof MessageDeliveryType
     */
    deliveryDate?: string;
    /**
     * User who delivered the message (who marked message as received)
     * @type {string}
     * @memberof MessageDeliveryType
     */
    deliveredBy?: string;
    /**
     * Date when message has been printed
     * @type {string}
     * @memberof MessageDeliveryType
     */
    printDate?: string;
    /**
     * Date when message has been sent via SMS
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageSentDate?: string;
    /**
     * User who sent the message
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageSentBy?: string;
    /**
     * User Id of who sent the message
     * @type {number}
     * @memberof MessageDeliveryType
     */
    textMessageSentById?: number;
    /**
     * Number in which the message is to be sent.
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageRecipientNo?: string;
}
/**
 * Check if a given object implements the MessageDeliveryType interface.
 */
export declare function instanceOfMessageDeliveryType(value: object): boolean;
export declare function MessageDeliveryTypeFromJSON(json: any): MessageDeliveryType;
export declare function MessageDeliveryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeliveryType;
export declare function MessageDeliveryTypeToJSON(value?: MessageDeliveryType | null): any;
