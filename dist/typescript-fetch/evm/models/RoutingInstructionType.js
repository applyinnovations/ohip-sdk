"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingInstructionTypeToJSON = exports.RoutingInstructionTypeFromJSONTyped = exports.RoutingInstructionTypeFromJSON = exports.instanceOfRoutingInstructionType = void 0;
const runtime_1 = require("../runtime");
const BillingInstructionsType_1 = require("./BillingInstructionsType");
const RoutingInstructionTypeDuration_1 = require("./RoutingInstructionTypeDuration");
const TrxCodesInfoType_1 = require("./TrxCodesInfoType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the RoutingInstructionType interface.
 */
function instanceOfRoutingInstructionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoutingInstructionType = instanceOfRoutingInstructionType;
function RoutingInstructionTypeFromJSON(json) {
    return RoutingInstructionTypeFromJSONTyped(json, false);
}
exports.RoutingInstructionTypeFromJSON = RoutingInstructionTypeFromJSON;
function RoutingInstructionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'billingInstructions': !(0, runtime_1.exists)(json, 'billingInstructions') ? undefined : (0, BillingInstructionsType_1.BillingInstructionsTypeFromJSON)(json['billingInstructions']),
        'covers': !(0, runtime_1.exists)(json, 'covers') ? undefined : json['covers'],
        'creditLimit': !(0, runtime_1.exists)(json, 'creditLimit') ? undefined : json['creditLimit'],
        'duration': !(0, runtime_1.exists)(json, 'duration') ? undefined : (0, RoutingInstructionTypeDuration_1.RoutingInstructionTypeDurationFromJSON)(json['duration']),
        'limitUsed': !(0, runtime_1.exists)(json, 'limitUsed') ? undefined : json['limitUsed'],
        'percentageLimit': !(0, runtime_1.exists)(json, 'percentageLimit') ? undefined : json['percentageLimit'],
        'routingLinkId': !(0, runtime_1.exists)(json, 'routingLinkId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['routingLinkId']),
        'transactionCodes': !(0, runtime_1.exists)(json, 'transactionCodes') ? undefined : (0, TrxCodesInfoType_1.TrxCodesInfoTypeFromJSON)(json['transactionCodes']),
    };
}
exports.RoutingInstructionTypeFromJSONTyped = RoutingInstructionTypeFromJSONTyped;
function RoutingInstructionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'billingInstructions': (0, BillingInstructionsType_1.BillingInstructionsTypeToJSON)(value.billingInstructions),
        'covers': value.covers,
        'creditLimit': value.creditLimit,
        'duration': (0, RoutingInstructionTypeDuration_1.RoutingInstructionTypeDurationToJSON)(value.duration),
        'limitUsed': value.limitUsed,
        'percentageLimit': value.percentageLimit,
        'routingLinkId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.routingLinkId),
        'transactionCodes': (0, TrxCodesInfoType_1.TrxCodesInfoTypeToJSON)(value.transactionCodes),
    };
}
exports.RoutingInstructionTypeToJSON = RoutingInstructionTypeToJSON;
