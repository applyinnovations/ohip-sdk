/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PackagePostingRulesType } from './PackagePostingRulesType';
/**
 * A HotelPackageTransaction type.
 * @export
 * @interface ConfigPackageTransactionType
 */
export interface ConfigPackageTransactionType {
    /**
     * Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.
     * @type {boolean}
     * @memberof ConfigPackageTransactionType
     */
    allowance?: boolean;
    /**
     * The currency code for this package.
     * @type {string}
     * @memberof ConfigPackageTransactionType
     */
    currency?: string;
    /**
     * The posting frequency for this package, e.g., daily, arrival, departure, etc.
     * @type {string}
     * @memberof ConfigPackageTransactionType
     */
    postingType?: string;
    /**
     * The price calculation rule for this package.
     * @type {string}
     * @memberof ConfigPackageTransactionType
     */
    calculationRule?: string;
    /**
     *
     * @type {PackagePostingRulesType}
     * @memberof ConfigPackageTransactionType
     */
    packagePostingRules?: PackagePostingRulesType;
}
/**
 * Check if a given object implements the ConfigPackageTransactionType interface.
 */
export declare function instanceOfConfigPackageTransactionType(value: object): boolean;
export declare function ConfigPackageTransactionTypeFromJSON(json: any): ConfigPackageTransactionType;
export declare function ConfigPackageTransactionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigPackageTransactionType;
export declare function ConfigPackageTransactionTypeToJSON(value?: ConfigPackageTransactionType | null): any;
