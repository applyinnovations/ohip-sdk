/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CateringEventsAttendeesType } from './CateringEventsAttendeesType';
import type { CodeDescriptionType } from './CodeDescriptionType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { DietaryPrefType } from './DietaryPrefType';
import type { MenuTypeType } from './MenuTypeType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Detailed attributes of Menu Item.
 * @export
 * @interface EventMenuItemType
 */
export interface EventMenuItemType {
    /**
     *
     * @type {UniqueIDType}
     * @memberof EventMenuItemType
     */
    id?: UniqueIDType;
    /**
     * The Hotel code which the menu item class belongs to
     * @type {string}
     * @memberof EventMenuItemType
     */
    hotelId?: string;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof EventMenuItemType
     */
    classInfo?: CodeDescriptionType;
    /**
     * Defines the Display Order of the menu item class, to which the menu item is attached
     * @type {number}
     * @memberof EventMenuItemType
     */
    displayOrder?: number;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    name1?: TranslationTextType2000;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    name2?: TranslationTextType2000;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    name3?: TranslationTextType2000;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    origin1?: TranslationTextType2000;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    origin2?: TranslationTextType2000;
    /**
     *
     * @type {MenuTypeType}
     * @memberof EventMenuItemType
     */
    menuType?: MenuTypeType;
    /**
     * Indicates whether this menu item is custom
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    custom?: boolean;
    /**
     * This value is typically the year of the Wine
     * @type {number}
     * @memberof EventMenuItemType
     */
    year?: number;
    /**
     * Any particular restriction description in 2000 characters
     * @type {string}
     * @memberof EventMenuItemType
     */
    restriction?: string;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    description?: TranslationTextType2000;
    /**
     *
     * @type {Array<DietaryPrefType>}
     * @memberof EventMenuItemType
     */
    dietaryPreferenceList?: Array<DietaryPrefType>;
    /**
     *
     * @type {Array<string>}
     * @memberof EventMenuItemType
     */
    eventTypes?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof EventMenuItemType
     */
    responsibleDepartments?: Array<string>;
    /**
     * Article number in Caps of menu item
     * @type {string}
     * @memberof EventMenuItemType
     */
    quickInsertCode?: string;
    /**
     * RevenueType of Menu Item
     * @type {string}
     * @memberof EventMenuItemType
     */
    revenueType?: string;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof EventMenuItemType
     */
    salesPrice?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof EventMenuItemType
     */
    cost?: CurrencyAmountType;
    /**
     * Selection of this notes that the price defined is charged 'as-consumed' basis
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    itemConsumption?: boolean;
    /**
     *
     * @type {CodeDescriptionType}
     * @memberof EventMenuItemType
     */
    container?: CodeDescriptionType;
    /**
     *
     * @type {TranslationTextType2000}
     * @memberof EventMenuItemType
     */
    portion?: TranslationTextType2000;
    /**
     * Numeric value of servings of Menu item
     * @type {number}
     * @memberof EventMenuItemType
     */
    servings?: number;
    /**
     * Check of Menu Item if it is web bookable
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    webBookable?: boolean;
    /**
     * check if Print action is required for menu item
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    print?: boolean;
    /**
     * Check for the status of menu item
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    inactive?: boolean;
    /**
     * Included flag
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    includedYN?: boolean;
    /**
     *
     * @type {UniqueIDType}
     * @memberof EventMenuItemType
     */
    eventMenuDetailID?: UniqueIDType;
    /**
     * Determines the order of menu course.
     * @type {number}
     * @memberof EventMenuItemType
     */
    course?: number;
    /**
     * Determines the order of menu item within the course.
     * @type {number}
     * @memberof EventMenuItemType
     */
    courseOrder?: number;
    /**
     *
     * @type {CateringEventsAttendeesType}
     * @memberof EventMenuItemType
     */
    attendees?: CateringEventsAttendeesType;
    /**
     * Discount Percentage applied to Rent Amount.
     * @type {number}
     * @memberof EventMenuItemType
     */
    discountPercentage?: number;
    /**
     * Demand Factor of the Menu item.
     * @type {number}
     * @memberof EventMenuItemType
     */
    demandFactor?: number;
    /**
     * Determines if the Menu Item is mandatory or not
     * @type {boolean}
     * @memberof EventMenuItemType
     */
    mandatoryYN?: boolean;
}
/**
 * Check if a given object implements the EventMenuItemType interface.
 */
export declare function instanceOfEventMenuItemType(value: object): boolean;
export declare function EventMenuItemTypeFromJSON(json: any): EventMenuItemType;
export declare function EventMenuItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventMenuItemType;
export declare function EventMenuItemTypeToJSON(value?: EventMenuItemType | null): any;
