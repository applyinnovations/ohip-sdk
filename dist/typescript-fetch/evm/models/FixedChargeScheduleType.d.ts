/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FixedChargeFrequencyType } from './FixedChargeFrequencyType';
/**
 * Holds schedule of fixed charge.
 * @export
 * @interface FixedChargeScheduleType
 */
export interface FixedChargeScheduleType {
    /**
     * Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.
     * @type {string}
     * @memberof FixedChargeScheduleType
     */
    dateToExecute?: string;
    /**
     * Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.
     * @type {string}
     * @memberof FixedChargeScheduleType
     */
    dayToExecute?: string;
    /**
     * The ending value of the date range.
     * @type {string}
     * @memberof FixedChargeScheduleType
     */
    eventEndDate?: string;
    /**
     * The starting value of the date range.
     * @type {string}
     * @memberof FixedChargeScheduleType
     */
    eventStartDate?: string;
    /**
     *
     * @type {FixedChargeFrequencyType}
     * @memberof FixedChargeScheduleType
     */
    frequency?: FixedChargeFrequencyType;
}
/**
 * Check if a given object implements the FixedChargeScheduleType interface.
 */
export declare function instanceOfFixedChargeScheduleType(value: object): boolean;
export declare function FixedChargeScheduleTypeFromJSON(json: any): FixedChargeScheduleType;
export declare function FixedChargeScheduleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FixedChargeScheduleType;
export declare function FixedChargeScheduleTypeToJSON(value?: FixedChargeScheduleType | null): any;
