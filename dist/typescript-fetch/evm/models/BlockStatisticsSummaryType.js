"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockStatisticsSummaryTypeToJSON = exports.BlockStatisticsSummaryTypeFromJSONTyped = exports.BlockStatisticsSummaryTypeFromJSON = exports.instanceOfBlockStatisticsSummaryType = void 0;
const runtime_1 = require("../runtime");
const RevenueSummaryType_1 = require("./RevenueSummaryType");
const StatisticsSummaryType_1 = require("./StatisticsSummaryType");
/**
 * Check if a given object implements the BlockStatisticsSummaryType interface.
 */
function instanceOfBlockStatisticsSummaryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockStatisticsSummaryType = instanceOfBlockStatisticsSummaryType;
function BlockStatisticsSummaryTypeFromJSON(json) {
    return BlockStatisticsSummaryTypeFromJSONTyped(json, false);
}
exports.BlockStatisticsSummaryTypeFromJSON = BlockStatisticsSummaryTypeFromJSON;
function BlockStatisticsSummaryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'avgRoomRate': !(0, runtime_1.exists)(json, 'avgRoomRate') ? undefined : json['avgRoomRate'],
        'revenueSummary': !(0, runtime_1.exists)(json, 'revenueSummary') ? undefined : (0, RevenueSummaryType_1.RevenueSummaryTypeFromJSON)(json['revenueSummary']),
        'roomsSold': !(0, runtime_1.exists)(json, 'roomsSold') ? undefined : json['roomsSold'],
        'statisticType': !(0, runtime_1.exists)(json, 'statisticType') ? undefined : (0, StatisticsSummaryType_1.StatisticsSummaryTypeFromJSON)(json['statisticType']),
    };
}
exports.BlockStatisticsSummaryTypeFromJSONTyped = BlockStatisticsSummaryTypeFromJSONTyped;
function BlockStatisticsSummaryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'avgRoomRate': value.avgRoomRate,
        'revenueSummary': (0, RevenueSummaryType_1.RevenueSummaryTypeToJSON)(value.revenueSummary),
        'roomsSold': value.roomsSold,
        'statisticType': (0, StatisticsSummaryType_1.StatisticsSummaryTypeToJSON)(value.statisticType),
    };
}
exports.BlockStatisticsSummaryTypeToJSON = BlockStatisticsSummaryTypeToJSON;
