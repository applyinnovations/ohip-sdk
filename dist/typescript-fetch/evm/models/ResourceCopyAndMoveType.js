"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceCopyAndMoveTypeToJSON = exports.ResourceCopyAndMoveTypeFromJSONTyped = exports.ResourceCopyAndMoveTypeFromJSON = exports.instanceOfResourceCopyAndMoveType = void 0;
const runtime_1 = require("../runtime");
const ResourceId_1 = require("./ResourceId");
const ResourceType_1 = require("./ResourceType");
/**
 * Check if a given object implements the ResourceCopyAndMoveType interface.
 */
function instanceOfResourceCopyAndMoveType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResourceCopyAndMoveType = instanceOfResourceCopyAndMoveType;
function ResourceCopyAndMoveTypeFromJSON(json) {
    return ResourceCopyAndMoveTypeFromJSONTyped(json, false);
}
exports.ResourceCopyAndMoveTypeFromJSON = ResourceCopyAndMoveTypeFromJSON;
function ResourceCopyAndMoveTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'resourceId': !(0, runtime_1.exists)(json, 'resourceId') ? undefined : (0, ResourceId_1.ResourceIdFromJSON)(json['resourceId']),
        'resourceType': !(0, runtime_1.exists)(json, 'resourceType') ? undefined : (0, ResourceType_1.ResourceTypeFromJSON)(json['resourceType']),
    };
}
exports.ResourceCopyAndMoveTypeFromJSONTyped = ResourceCopyAndMoveTypeFromJSONTyped;
function ResourceCopyAndMoveTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'resourceId': (0, ResourceId_1.ResourceIdToJSON)(value.resourceId),
        'resourceType': (0, ResourceType_1.ResourceTypeToJSON)(value.resourceType),
    };
}
exports.ResourceCopyAndMoveTypeToJSON = ResourceCopyAndMoveTypeToJSON;
