"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResCancelPenaltyTypeToJSON = exports.ResCancelPenaltyTypeFromJSONTyped = exports.ResCancelPenaltyTypeFromJSON = exports.instanceOfResCancelPenaltyType = void 0;
const runtime_1 = require("../runtime");
const OffsetUnitType_1 = require("./OffsetUnitType");
const PolicyAmountPercentType_1 = require("./PolicyAmountPercentType");
const PolicyDeadlineType_1 = require("./PolicyDeadlineType");
/**
 * Check if a given object implements the ResCancelPenaltyType interface.
 */
function instanceOfResCancelPenaltyType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResCancelPenaltyType = instanceOfResCancelPenaltyType;
function ResCancelPenaltyTypeFromJSON(json) {
    return ResCancelPenaltyTypeFromJSONTyped(json, false);
}
exports.ResCancelPenaltyTypeFromJSON = ResCancelPenaltyTypeFromJSON;
function ResCancelPenaltyTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'deadline': !(0, runtime_1.exists)(json, 'deadline') ? undefined : (0, PolicyDeadlineType_1.PolicyDeadlineTypeFromJSON)(json['deadline']),
        'amountPercent': !(0, runtime_1.exists)(json, 'amountPercent') ? undefined : (0, PolicyAmountPercentType_1.PolicyAmountPercentTypeFromJSON)(json['amountPercent']),
        'penaltyDescription': !(0, runtime_1.exists)(json, 'penaltyDescription') ? undefined : json['penaltyDescription'],
        'offsetUnit': !(0, runtime_1.exists)(json, 'offsetUnit') ? undefined : (0, OffsetUnitType_1.OffsetUnitTypeFromJSON)(json['offsetUnit']),
        'formattedRule': !(0, runtime_1.exists)(json, 'formattedRule') ? undefined : json['formattedRule'],
        'policyCode': !(0, runtime_1.exists)(json, 'policyCode') ? undefined : json['policyCode'],
        'manual': !(0, runtime_1.exists)(json, 'manual') ? undefined : json['manual'],
        'nonRefundable': !(0, runtime_1.exists)(json, 'nonRefundable') ? undefined : json['nonRefundable'],
        'effective': !(0, runtime_1.exists)(json, 'effective') ? undefined : json['effective'],
    };
}
exports.ResCancelPenaltyTypeFromJSONTyped = ResCancelPenaltyTypeFromJSONTyped;
function ResCancelPenaltyTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'deadline': (0, PolicyDeadlineType_1.PolicyDeadlineTypeToJSON)(value.deadline),
        'amountPercent': (0, PolicyAmountPercentType_1.PolicyAmountPercentTypeToJSON)(value.amountPercent),
        'penaltyDescription': value.penaltyDescription,
        'offsetUnit': (0, OffsetUnitType_1.OffsetUnitTypeToJSON)(value.offsetUnit),
        'formattedRule': value.formattedRule,
        'policyCode': value.policyCode,
        'manual': value.manual,
        'nonRefundable': value.nonRefundable,
        'effective': value.effective,
    };
}
exports.ResCancelPenaltyTypeToJSON = ResCancelPenaltyTypeToJSON;
