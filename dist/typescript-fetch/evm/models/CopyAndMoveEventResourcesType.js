"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyAndMoveEventResourcesTypeToJSON = exports.CopyAndMoveEventResourcesTypeFromJSONTyped = exports.CopyAndMoveEventResourcesTypeFromJSON = exports.instanceOfCopyAndMoveEventResourcesType = void 0;
const runtime_1 = require("../runtime");
const BlockId_1 = require("./BlockId");
const EventId_1 = require("./EventId");
const ResourceCopyAndMoveType_1 = require("./ResourceCopyAndMoveType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CopyAndMoveEventResourcesType interface.
 */
function instanceOfCopyAndMoveEventResourcesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCopyAndMoveEventResourcesType = instanceOfCopyAndMoveEventResourcesType;
function CopyAndMoveEventResourcesTypeFromJSON(json) {
    return CopyAndMoveEventResourcesTypeFromJSONTyped(json, false);
}
exports.CopyAndMoveEventResourcesTypeFromJSON = CopyAndMoveEventResourcesTypeFromJSON;
function CopyAndMoveEventResourcesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, BlockId_1.BlockIdFromJSON)(json['blockId']),
        'eventId': !(0, runtime_1.exists)(json, 'eventId') ? undefined : (0, EventId_1.EventIdFromJSON)(json['eventId']),
        'resourceIdList': !(0, runtime_1.exists)(json, 'resourceIdList') ? undefined : (json['resourceIdList'].map(ResourceCopyAndMoveType_1.ResourceCopyAndMoveTypeFromJSON)),
        'targetBlockId': !(0, runtime_1.exists)(json, 'targetBlockId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['targetBlockId']),
        'targetEventIdList': !(0, runtime_1.exists)(json, 'targetEventIdList') ? undefined : (json['targetEventIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'overrideCopyAndMoveResourceProcessWarnings': !(0, runtime_1.exists)(json, 'overrideCopyAndMoveResourceProcessWarnings') ? undefined : json['overrideCopyAndMoveResourceProcessWarnings'],
        'includeAsPackage': !(0, runtime_1.exists)(json, 'includeAsPackage') ? undefined : json['includeAsPackage'],
    };
}
exports.CopyAndMoveEventResourcesTypeFromJSONTyped = CopyAndMoveEventResourcesTypeFromJSONTyped;
function CopyAndMoveEventResourcesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'blockId': (0, BlockId_1.BlockIdToJSON)(value.blockId),
        'eventId': (0, EventId_1.EventIdToJSON)(value.eventId),
        'resourceIdList': value.resourceIdList === undefined ? undefined : (value.resourceIdList.map(ResourceCopyAndMoveType_1.ResourceCopyAndMoveTypeToJSON)),
        'targetBlockId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.targetBlockId),
        'targetEventIdList': value.targetEventIdList === undefined ? undefined : (value.targetEventIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'overrideCopyAndMoveResourceProcessWarnings': value.overrideCopyAndMoveResourceProcessWarnings,
        'includeAsPackage': value.includeAsPackage,
    };
}
exports.CopyAndMoveEventResourcesTypeToJSON = CopyAndMoveEventResourcesTypeToJSON;
