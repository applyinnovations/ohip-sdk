"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSummaryInfoTypeToJSON = exports.EventSummaryInfoTypeFromJSONTyped = exports.EventSummaryInfoTypeFromJSON = exports.instanceOfEventSummaryInfoType = void 0;
const runtime_1 = require("../runtime");
const BookingStatusType_1 = require("./BookingStatusType");
const CateringEventLinkType_1 = require("./CateringEventLinkType");
const CateringStatusTypeType_1 = require("./CateringStatusTypeType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const EventId_1 = require("./EventId");
const IndicatorType_1 = require("./IndicatorType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the EventSummaryInfoType interface.
 */
function instanceOfEventSummaryInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEventSummaryInfoType = instanceOfEventSummaryInfoType;
function EventSummaryInfoTypeFromJSON(json) {
    return EventSummaryInfoTypeFromJSONTyped(json, false);
}
exports.EventSummaryInfoTypeFromJSON = EventSummaryInfoTypeFromJSON;
function EventSummaryInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'eventId': !(0, runtime_1.exists)(json, 'eventId') ? undefined : (0, EventId_1.EventIdFromJSON)(json['eventId']),
        'eventLink': !(0, runtime_1.exists)(json, 'eventLink') ? undefined : (0, CateringEventLinkType_1.CateringEventLinkTypeFromJSON)(json['eventLink']),
        'blockIdList': !(0, runtime_1.exists)(json, 'blockIdList') ? undefined : (json['blockIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'blockName': !(0, runtime_1.exists)(json, 'blockName') ? undefined : json['blockName'],
        'attendees': !(0, runtime_1.exists)(json, 'attendees') ? undefined : json['attendees'],
        'functionSpaceDetails': !(0, runtime_1.exists)(json, 'functionSpaceDetails') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['functionSpaceDetails']),
        'rentalAmount': !(0, runtime_1.exists)(json, 'rentalAmount') ? undefined : json['rentalAmount'],
        'functionSpaceSetup': !(0, runtime_1.exists)(json, 'functionSpaceSetup') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['functionSpaceSetup']),
        'indicators': !(0, runtime_1.exists)(json, 'indicators') ? undefined : (json['indicators'].map(IndicatorType_1.IndicatorTypeFromJSON)),
        'eventStatus': !(0, runtime_1.exists)(json, 'eventStatus') ? undefined : (0, BookingStatusType_1.BookingStatusTypeFromJSON)(json['eventStatus']),
        'waitlistReturnStatus': !(0, runtime_1.exists)(json, 'waitlistReturnStatus') ? undefined : (0, BookingStatusType_1.BookingStatusTypeFromJSON)(json['waitlistReturnStatus']),
        'cateringStatusType': !(0, runtime_1.exists)(json, 'cateringStatusType') ? undefined : (0, CateringStatusTypeType_1.CateringStatusTypeTypeFromJSON)(json['cateringStatusType']),
        'cateringStatusDeductInventory': !(0, runtime_1.exists)(json, 'cateringStatusDeductInventory') ? undefined : json['cateringStatusDeductInventory'],
        'cateringStatusReturnToInventory': !(0, runtime_1.exists)(json, 'cateringStatusReturnToInventory') ? undefined : json['cateringStatusReturnToInventory'],
        'setupTime': !(0, runtime_1.exists)(json, 'setupTime') ? undefined : json['setupTime'],
        'tearDownTime': !(0, runtime_1.exists)(json, 'tearDownTime') ? undefined : json['tearDownTime'],
        'masterEvent': !(0, runtime_1.exists)(json, 'masterEvent') ? undefined : json['masterEvent'],
        'subEvent': !(0, runtime_1.exists)(json, 'subEvent') ? undefined : json['subEvent'],
        'packageEvent': !(0, runtime_1.exists)(json, 'packageEvent') ? undefined : json['packageEvent'],
        'alternateEvent': !(0, runtime_1.exists)(json, 'alternateEvent') ? undefined : json['alternateEvent'],
        'displayDoorCard': !(0, runtime_1.exists)(json, 'displayDoorCard') ? undefined : json['displayDoorCard'],
        'doorCard': !(0, runtime_1.exists)(json, 'doorCard') ? undefined : json['doorCard'],
        'excludeFromForecast': !(0, runtime_1.exists)(json, 'excludeFromForecast') ? undefined : json['excludeFromForecast'],
        'useForecastRevenue': !(0, runtime_1.exists)(json, 'useForecastRevenue') ? undefined : json['useForecastRevenue'],
        'setupCode': !(0, runtime_1.exists)(json, 'setupCode') ? undefined : json['setupCode'],
        'minimumOccupancy': !(0, runtime_1.exists)(json, 'minimumOccupancy') ? undefined : json['minimumOccupancy'],
        'maximumOccupancy': !(0, runtime_1.exists)(json, 'maximumOccupancy') ? undefined : json['maximumOccupancy'],
        'discountPercentage': !(0, runtime_1.exists)(json, 'discountPercentage') ? undefined : json['discountPercentage'],
        'loudEvent': !(0, runtime_1.exists)(json, 'loudEvent') ? undefined : json['loudEvent'],
        'rentalCode': !(0, runtime_1.exists)(json, 'rentalCode') ? undefined : json['rentalCode'],
        'eventShared': !(0, runtime_1.exists)(json, 'eventShared') ? undefined : json['eventShared'],
        'shareable': !(0, runtime_1.exists)(json, 'shareable') ? undefined : json['shareable'],
        'inactiveDate': !(0, runtime_1.exists)(json, 'inactiveDate') ? undefined : json['inactiveDate'],
        'packageCode': !(0, runtime_1.exists)(json, 'packageCode') ? undefined : json['packageCode'],
        'packageName': !(0, runtime_1.exists)(json, 'packageName') ? undefined : json['packageName'],
        'packageId': !(0, runtime_1.exists)(json, 'packageId') ? undefined : json['packageId'],
        'includeSpaceInPackage': !(0, runtime_1.exists)(json, 'includeSpaceInPackage') ? undefined : json['includeSpaceInPackage'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'blockHotelCode': !(0, runtime_1.exists)(json, 'blockHotelCode') ? undefined : json['blockHotelCode'],
        'hasPostings': !(0, runtime_1.exists)(json, 'hasPostings') ? undefined : json['hasPostings'],
        'blockHasPostings': !(0, runtime_1.exists)(json, 'blockHasPostings') ? undefined : json['blockHasPostings'],
        'hasPartialPostings': !(0, runtime_1.exists)(json, 'hasPartialPostings') ? undefined : json['hasPartialPostings'],
        'allPosted': !(0, runtime_1.exists)(json, 'allPosted') ? undefined : json['allPosted'],
        'nothingPosted': !(0, runtime_1.exists)(json, 'nothingPosted') ? undefined : json['nothingPosted'],
        'eventStartDate': !(0, runtime_1.exists)(json, 'eventStartDate') ? undefined : json['eventStartDate'],
        'eventEndDate': !(0, runtime_1.exists)(json, 'eventEndDate') ? undefined : json['eventEndDate'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'eventName': !(0, runtime_1.exists)(json, 'eventName') ? undefined : json['eventName'],
        'cateringCurrency': !(0, runtime_1.exists)(json, 'cateringCurrency') ? undefined : json['cateringCurrency'],
        'cateringQuotedCurrency': !(0, runtime_1.exists)(json, 'cateringQuotedCurrency') ? undefined : json['cateringQuotedCurrency'],
        'eventIndicators': !(0, runtime_1.exists)(json, 'eventIndicators') ? undefined : (json['eventIndicators'].map(IndicatorType_1.IndicatorTypeFromJSON)),
    };
}
exports.EventSummaryInfoTypeFromJSONTyped = EventSummaryInfoTypeFromJSONTyped;
function EventSummaryInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'eventId': (0, EventId_1.EventIdToJSON)(value.eventId),
        'eventLink': (0, CateringEventLinkType_1.CateringEventLinkTypeToJSON)(value.eventLink),
        'blockIdList': value.blockIdList === undefined ? undefined : (value.blockIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'blockName': value.blockName,
        'attendees': value.attendees,
        'functionSpaceDetails': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.functionSpaceDetails),
        'rentalAmount': value.rentalAmount,
        'functionSpaceSetup': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.functionSpaceSetup),
        'indicators': value.indicators === undefined ? undefined : (value.indicators.map(IndicatorType_1.IndicatorTypeToJSON)),
        'eventStatus': (0, BookingStatusType_1.BookingStatusTypeToJSON)(value.eventStatus),
        'waitlistReturnStatus': (0, BookingStatusType_1.BookingStatusTypeToJSON)(value.waitlistReturnStatus),
        'cateringStatusType': (0, CateringStatusTypeType_1.CateringStatusTypeTypeToJSON)(value.cateringStatusType),
        'cateringStatusDeductInventory': value.cateringStatusDeductInventory,
        'cateringStatusReturnToInventory': value.cateringStatusReturnToInventory,
        'setupTime': value.setupTime,
        'tearDownTime': value.tearDownTime,
        'masterEvent': value.masterEvent,
        'subEvent': value.subEvent,
        'packageEvent': value.packageEvent,
        'alternateEvent': value.alternateEvent,
        'displayDoorCard': value.displayDoorCard,
        'doorCard': value.doorCard,
        'excludeFromForecast': value.excludeFromForecast,
        'useForecastRevenue': value.useForecastRevenue,
        'setupCode': value.setupCode,
        'minimumOccupancy': value.minimumOccupancy,
        'maximumOccupancy': value.maximumOccupancy,
        'discountPercentage': value.discountPercentage,
        'loudEvent': value.loudEvent,
        'rentalCode': value.rentalCode,
        'eventShared': value.eventShared,
        'shareable': value.shareable,
        'inactiveDate': value.inactiveDate,
        'packageCode': value.packageCode,
        'packageName': value.packageName,
        'packageId': value.packageId,
        'includeSpaceInPackage': value.includeSpaceInPackage,
        'hotelId': value.hotelId,
        'blockHotelCode': value.blockHotelCode,
        'hasPostings': value.hasPostings,
        'blockHasPostings': value.blockHasPostings,
        'hasPartialPostings': value.hasPartialPostings,
        'allPosted': value.allPosted,
        'nothingPosted': value.nothingPosted,
        'eventStartDate': value.eventStartDate,
        'eventEndDate': value.eventEndDate,
        'type': value.type,
        'eventName': value.eventName,
        'cateringCurrency': value.cateringCurrency,
        'cateringQuotedCurrency': value.cateringQuotedCurrency,
        'eventIndicators': value.eventIndicators === undefined ? undefined : (value.eventIndicators.map(IndicatorType_1.IndicatorTypeToJSON)),
    };
}
exports.EventSummaryInfoTypeToJSON = EventSummaryInfoTypeToJSON;
