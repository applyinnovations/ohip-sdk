/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { EventSpaceAttributesType } from './EventSpaceAttributesType';
import type { EventSpaceScheduleTypeEvents } from './EventSpaceScheduleTypeEvents';
/**
 * Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.
 * @export
 * @interface EventSpaceScheduleType
 */
export interface EventSpaceScheduleType {
    /**
     * Description for the Function Room.
     * @type {string}
     * @memberof EventSpaceScheduleType
     */
    description?: string;
    /**
     *
     * @type {EventSpaceAttributesType}
     * @memberof EventSpaceScheduleType
     */
    eventSpaceAttributes?: EventSpaceAttributesType;
    /**
     *
     * @type {EventSpaceScheduleTypeEvents}
     * @memberof EventSpaceScheduleType
     */
    events?: EventSpaceScheduleTypeEvents;
    /**
     * Hotel Code associated with the Function Space.
     * @type {string}
     * @memberof EventSpaceScheduleType
     */
    hotelId?: string;
    /**
     * Function Room Number.
     * @type {string}
     * @memberof EventSpaceScheduleType
     */
    roomId?: string;
    /**
     * Name of the Function Room.
     * @type {string}
     * @memberof EventSpaceScheduleType
     */
    name?: string;
    /**
     * Building name where this Room is.
     * @type {string}
     * @memberof EventSpaceScheduleType
     */
    building?: string;
    /**
     * Order the Room is displayed based on the settings selected by the user.
     * @type {number}
     * @memberof EventSpaceScheduleType
     */
    roomOrder?: number;
}
/**
 * Check if a given object implements the EventSpaceScheduleType interface.
 */
export declare function instanceOfEventSpaceScheduleType(value: object): boolean;
export declare function EventSpaceScheduleTypeFromJSON(json: any): EventSpaceScheduleType;
export declare function EventSpaceScheduleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventSpaceScheduleType;
export declare function EventSpaceScheduleTypeToJSON(value?: EventSpaceScheduleType | null): any;
