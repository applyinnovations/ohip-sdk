"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostPublishersRequestToJSON = exports.PostPublishersRequestFromJSONTyped = exports.PostPublishersRequestFromJSON = exports.instanceOfPostPublishersRequest = void 0;
const runtime_1 = require("../runtime");
const ExternalSystemType_1 = require("./ExternalSystemType");
const Links_1 = require("./Links");
const PublishersType_1 = require("./PublishersType");
const WarningsType_1 = require("./WarningsType");
/**
 * Check if a given object implements the PostPublishersRequest interface.
 */
function instanceOfPostPublishersRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPostPublishersRequest = instanceOfPostPublishersRequest;
function PostPublishersRequestFromJSON(json) {
    return PostPublishersRequestFromJSONTyped(json, false);
}
exports.PostPublishersRequestFromJSON = PostPublishersRequestFromJSON;
function PostPublishersRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (0, Links_1.LinksFromJSON)(json['links']),
        'publishers': !(0, runtime_1.exists)(json, 'publishers') ? undefined : (0, PublishersType_1.PublishersTypeFromJSON)(json['publishers']),
        'subscriber': !(0, runtime_1.exists)(json, 'subscriber') ? undefined : (0, ExternalSystemType_1.ExternalSystemTypeFromJSON)(json['subscriber']),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (0, WarningsType_1.WarningsTypeFromJSON)(json['warnings']),
    };
}
exports.PostPublishersRequestFromJSONTyped = PostPublishersRequestFromJSONTyped;
function PostPublishersRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'links': (0, Links_1.LinksToJSON)(value.links),
        'publishers': (0, PublishersType_1.PublishersTypeToJSON)(value.publishers),
        'subscriber': (0, ExternalSystemType_1.ExternalSystemTypeToJSON)(value.subscriber),
        'warnings': (0, WarningsType_1.WarningsTypeToJSON)(value.warnings),
    };
}
exports.PostPublishersRequestToJSON = PostPublishersRequestToJSON;
