/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ClassOfServiceType } from './ClassOfServiceType';
import type { GeneralInfoType } from './GeneralInfoType';
import type { ImportRoomsType } from './ImportRoomsType';
import type { InterfaceAdditionalInfoType } from './InterfaceAdditionalInfoType';
import type { InterfaceCommunicationInfoType } from './InterfaceCommunicationInfoType';
import type { InterfaceCustomDataInfoType } from './InterfaceCustomDataInfoType';
import type { InterfaceExportDataInfoType } from './InterfaceExportDataInfoType';
import type { InterfacePrimaryInfoType } from './InterfacePrimaryInfoType';
import type { InterfaceWorkstationType } from './InterfaceWorkstationType';
import type { PostingInfoType } from './PostingInfoType';
import type { TransactionCodeInfoType } from './TransactionCodeInfoType';
import type { TranslationType } from './TranslationType';
/**
 *
 * @export
 * @interface HotelInterfaceDetailType
 */
export interface HotelInterfaceDetailType {
    /**
     *
     * @type {InterfacePrimaryInfoType}
     * @memberof HotelInterfaceDetailType
     */
    primaryInfo?: InterfacePrimaryInfoType;
    /**
     *
     * @type {InterfaceAdditionalInfoType}
     * @memberof HotelInterfaceDetailType
     */
    additionalInfo?: InterfaceAdditionalInfoType;
    /**
     *
     * @type {GeneralInfoType}
     * @memberof HotelInterfaceDetailType
     */
    generalInfo?: GeneralInfoType;
    /**
     *
     * @type {InterfaceCommunicationInfoType}
     * @memberof HotelInterfaceDetailType
     */
    communicationInfo?: InterfaceCommunicationInfoType;
    /**
     *
     * @type {TranslationType}
     * @memberof HotelInterfaceDetailType
     */
    translationInfo?: TranslationType;
    /**
     *
     * @type {ClassOfServiceType}
     * @memberof HotelInterfaceDetailType
     */
    classOfServiceInfo?: ClassOfServiceType;
    /**
     *
     * @type {ImportRoomsType}
     * @memberof HotelInterfaceDetailType
     */
    importRoomsInfo?: ImportRoomsType;
    /**
     * List of workstations of a hotel interface.
     * @type {Array<InterfaceWorkstationType>}
     * @memberof HotelInterfaceDetailType
     */
    workstationSetupInfo?: Array<InterfaceWorkstationType>;
    /**
     *
     * @type {PostingInfoType}
     * @memberof HotelInterfaceDetailType
     */
    postingsInfo?: PostingInfoType;
    /**
     *
     * @type {InterfaceCustomDataInfoType}
     * @memberof HotelInterfaceDetailType
     */
    customDataInfo?: InterfaceCustomDataInfoType;
    /**
     *
     * @type {InterfaceExportDataInfoType}
     * @memberof HotelInterfaceDetailType
     */
    exportDataInfo?: InterfaceExportDataInfoType;
    /**
     *
     * @type {TransactionCodeInfoType}
     * @memberof HotelInterfaceDetailType
     */
    transactionsInfo?: TransactionCodeInfoType;
}
/**
 * Check if a given object implements the HotelInterfaceDetailType interface.
 */
export declare function instanceOfHotelInterfaceDetailType(value: object): boolean;
export declare function HotelInterfaceDetailTypeFromJSON(json: any): HotelInterfaceDetailType;
export declare function HotelInterfaceDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelInterfaceDetailType;
export declare function HotelInterfaceDetailTypeToJSON(value?: HotelInterfaceDetailType | null): any;
