"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportRoomsTypeToJSON = exports.ImportRoomsTypeFromJSONTyped = exports.ImportRoomsTypeFromJSON = exports.instanceOfImportRoomsType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ImportRoomsType interface.
 */
function instanceOfImportRoomsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfImportRoomsType = instanceOfImportRoomsType;
function ImportRoomsTypeFromJSON(json) {
    return ImportRoomsTypeFromJSONTyped(json, false);
}
exports.ImportRoomsTypeFromJSON = ImportRoomsTypeFromJSON;
function ImportRoomsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'requiresLineNumberSetup': !(0, runtime_1.exists)(json, 'requiresLineNumberSetup') ? undefined : json['requiresLineNumberSetup'],
        'virtualNumberSetup': !(0, runtime_1.exists)(json, 'virtualNumberSetup') ? undefined : json['virtualNumberSetup'],
        'ioLines': !(0, runtime_1.exists)(json, 'ioLines') ? undefined : json['ioLines'],
        'inXlatId': !(0, runtime_1.exists)(json, 'inXlatId') ? undefined : json['inXlatId'],
        'ouXlatId': !(0, runtime_1.exists)(json, 'ouXlatId') ? undefined : json['ouXlatId'],
        'selectedRoomTypes': !(0, runtime_1.exists)(json, 'selectedRoomTypes') ? undefined : json['selectedRoomTypes'],
    };
}
exports.ImportRoomsTypeFromJSONTyped = ImportRoomsTypeFromJSONTyped;
function ImportRoomsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'requiresLineNumberSetup': value.requiresLineNumberSetup,
        'virtualNumberSetup': value.virtualNumberSetup,
        'ioLines': value.ioLines,
        'inXlatId': value.inXlatId,
        'ouXlatId': value.ouXlatId,
        'selectedRoomTypes': value.selectedRoomTypes,
    };
}
exports.ImportRoomsTypeToJSON = ImportRoomsTypeToJSON;
