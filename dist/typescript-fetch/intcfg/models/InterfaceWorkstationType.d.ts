/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface InterfaceWorkstationType
 */
export interface InterfaceWorkstationType {
    /**
     * Hotel Code of a workstation.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    hotelId?: string;
    /**
     * Logo of a workstation.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    logo?: string;
    /**
     * Internal code of a workstation.
     * @type {number}
     * @memberof InterfaceWorkstationType
     */
    internalCode?: number;
    /**
     * Workstation of a hotel interface.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    workstation?: string;
    /**
     * IP of a workstation.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    deviceIp?: string;
    /**
     * Display Order sequence.
     * @type {number}
     * @memberof InterfaceWorkstationType
     */
    orderSequence?: number;
    /**
     * Location of a workstation.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    location?: string;
    /**
     * Type of a workstation.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    type?: string;
    /**
     * Device Group / Area.
     * @type {string}
     * @memberof InterfaceWorkstationType
     */
    deviceLocation?: string;
}
/**
 * Check if a given object implements the InterfaceWorkstationType interface.
 */
export declare function instanceOfInterfaceWorkstationType(value: object): boolean;
export declare function InterfaceWorkstationTypeFromJSON(json: any): InterfaceWorkstationType;
export declare function InterfaceWorkstationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InterfaceWorkstationType;
export declare function InterfaceWorkstationTypeToJSON(value?: InterfaceWorkstationType | null): any;
