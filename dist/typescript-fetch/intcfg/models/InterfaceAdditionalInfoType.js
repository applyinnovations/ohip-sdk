"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceAdditionalInfoTypeToJSON = exports.InterfaceAdditionalInfoTypeFromJSONTyped = exports.InterfaceAdditionalInfoTypeFromJSON = exports.instanceOfInterfaceAdditionalInfoType = void 0;
const runtime_1 = require("../runtime");
const HotelInterfaceStatusType_1 = require("./HotelInterfaceStatusType");
const IfcMenuTypeType_1 = require("./IfcMenuTypeType");
const TelephoneChargeType_1 = require("./TelephoneChargeType");
/**
 * Check if a given object implements the InterfaceAdditionalInfoType interface.
 */
function instanceOfInterfaceAdditionalInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfInterfaceAdditionalInfoType = instanceOfInterfaceAdditionalInfoType;
function InterfaceAdditionalInfoTypeFromJSON(json) {
    return InterfaceAdditionalInfoTypeFromJSONTyped(json, false);
}
exports.InterfaceAdditionalInfoTypeFromJSON = InterfaceAdditionalInfoTypeFromJSON;
function InterfaceAdditionalInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'menuType': !(0, runtime_1.exists)(json, 'menuType') ? undefined : (0, IfcMenuTypeType_1.IfcMenuTypeTypeFromJSON)(json['menuType']),
        'menuName': !(0, runtime_1.exists)(json, 'menuName') ? undefined : json['menuName'],
        'controllerPort': !(0, runtime_1.exists)(json, 'controllerPort') ? undefined : json['controllerPort'],
        'vncPort': !(0, runtime_1.exists)(json, 'vncPort') ? undefined : json['vncPort'],
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'pathId1': !(0, runtime_1.exists)(json, 'pathId1') ? undefined : json['pathId1'],
        'timeout': !(0, runtime_1.exists)(json, 'timeout') ? undefined : json['timeout'],
        'displayFlag': !(0, runtime_1.exists)(json, 'displayFlag') ? undefined : json['displayFlag'],
        'autoStartFlag': !(0, runtime_1.exists)(json, 'autoStartFlag') ? undefined : json['autoStartFlag'],
        'activeFlag': !(0, runtime_1.exists)(json, 'activeFlag') ? undefined : json['activeFlag'],
        'interfaceStatus': !(0, runtime_1.exists)(json, 'interfaceStatus') ? undefined : (0, HotelInterfaceStatusType_1.HotelInterfaceStatusTypeFromJSON)(json['interfaceStatus']),
        'version': !(0, runtime_1.exists)(json, 'version') ? undefined : json['version'],
        'msgExpiresAfter': !(0, runtime_1.exists)(json, 'msgExpiresAfter') ? undefined : json['msgExpiresAfter'],
        'useDataThroughFlag': !(0, runtime_1.exists)(json, 'useDataThroughFlag') ? undefined : json['useDataThroughFlag'],
        'nAStart': !(0, runtime_1.exists)(json, 'nAStart') ? undefined : json['nAStart'],
        'multipleRoomKey': !(0, runtime_1.exists)(json, 'multipleRoomKey') ? undefined : json['multipleRoomKey'],
        'onlineKeySystem': !(0, runtime_1.exists)(json, 'onlineKeySystem') ? undefined : json['onlineKeySystem'],
        'deleteIfcKeysOnKeyDelete': !(0, runtime_1.exists)(json, 'deleteIfcKeysOnKeyDelete') ? undefined : json['deleteIfcKeysOnKeyDelete'],
        'sendTrack1Data': !(0, runtime_1.exists)(json, 'sendTrack1Data') ? undefined : json['sendTrack1Data'],
        'sendTrack2Data': !(0, runtime_1.exists)(json, 'sendTrack2Data') ? undefined : json['sendTrack2Data'],
        'sendRoomStatus': !(0, runtime_1.exists)(json, 'sendRoomStatus') ? undefined : json['sendRoomStatus'],
        'telephoneCharge': !(0, runtime_1.exists)(json, 'telephoneCharge') ? undefined : (0, TelephoneChargeType_1.TelephoneChargeTypeFromJSON)(json['telephoneCharge']),
        'additionalRoomsLimit': !(0, runtime_1.exists)(json, 'additionalRoomsLimit') ? undefined : json['additionalRoomsLimit'],
        'sendValidStartDateTime': !(0, runtime_1.exists)(json, 'sendValidStartDateTime') ? undefined : json['sendValidStartDateTime'],
    };
}
exports.InterfaceAdditionalInfoTypeFromJSONTyped = InterfaceAdditionalInfoTypeFromJSONTyped;
function InterfaceAdditionalInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'menuType': (0, IfcMenuTypeType_1.IfcMenuTypeTypeToJSON)(value.menuType),
        'menuName': value.menuName,
        'controllerPort': value.controllerPort,
        'vncPort': value.vncPort,
        'cashierId': value.cashierId,
        'pathId1': value.pathId1,
        'timeout': value.timeout,
        'displayFlag': value.displayFlag,
        'autoStartFlag': value.autoStartFlag,
        'activeFlag': value.activeFlag,
        'interfaceStatus': (0, HotelInterfaceStatusType_1.HotelInterfaceStatusTypeToJSON)(value.interfaceStatus),
        'version': value.version,
        'msgExpiresAfter': value.msgExpiresAfter,
        'useDataThroughFlag': value.useDataThroughFlag,
        'nAStart': value.nAStart,
        'multipleRoomKey': value.multipleRoomKey,
        'onlineKeySystem': value.onlineKeySystem,
        'deleteIfcKeysOnKeyDelete': value.deleteIfcKeysOnKeyDelete,
        'sendTrack1Data': value.sendTrack1Data,
        'sendTrack2Data': value.sendTrack2Data,
        'sendRoomStatus': value.sendRoomStatus,
        'telephoneCharge': (0, TelephoneChargeType_1.TelephoneChargeTypeToJSON)(value.telephoneCharge),
        'additionalRoomsLimit': value.additionalRoomsLimit,
        'sendValidStartDateTime': value.sendValidStartDateTime,
    };
}
exports.InterfaceAdditionalInfoTypeToJSON = InterfaceAdditionalInfoTypeToJSON;
