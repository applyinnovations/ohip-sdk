"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionCodeDetailTypeToJSON = exports.TransactionCodeDetailTypeFromJSONTyped = exports.TransactionCodeDetailTypeFromJSON = exports.instanceOfTransactionCodeDetailType = void 0;
const runtime_1 = require("../runtime");
const ItemizerShortInfoType_1 = require("./ItemizerShortInfoType");
/**
 * Check if a given object implements the TransactionCodeDetailType interface.
 */
function instanceOfTransactionCodeDetailType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTransactionCodeDetailType = instanceOfTransactionCodeDetailType;
function TransactionCodeDetailTypeFromJSON(json) {
    return TransactionCodeDetailTypeFromJSONTyped(json, false);
}
exports.TransactionCodeDetailTypeFromJSON = TransactionCodeDetailTypeFromJSON;
function TransactionCodeDetailTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'servingPeriod': !(0, runtime_1.exists)(json, 'servingPeriod') ? undefined : json['servingPeriod'],
        'rowNum': !(0, runtime_1.exists)(json, 'rowNum') ? undefined : json['rowNum'],
        'revenueCenter': !(0, runtime_1.exists)(json, 'revenueCenter') ? undefined : json['revenueCenter'],
        'terminal': !(0, runtime_1.exists)(json, 'terminal') ? undefined : json['terminal'],
        'paymentNum': !(0, runtime_1.exists)(json, 'paymentNum') ? undefined : json['paymentNum'],
        'userId': !(0, runtime_1.exists)(json, 'userId') ? undefined : json['userId'],
        'postRoute': !(0, runtime_1.exists)(json, 'postRoute') ? undefined : json['postRoute'],
        'dialedDigits': !(0, runtime_1.exists)(json, 'dialedDigits') ? undefined : json['dialedDigits'],
        'lineType': !(0, runtime_1.exists)(json, 'lineType') ? undefined : json['lineType'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'tipCode': !(0, runtime_1.exists)(json, 'tipCode') ? undefined : json['tipCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'itemizersShortInfo': !(0, runtime_1.exists)(json, 'itemizersShortInfo') ? undefined : (json['itemizersShortInfo'].map(ItemizerShortInfoType_1.ItemizerShortInfoTypeFromJSON)),
    };
}
exports.TransactionCodeDetailTypeFromJSONTyped = TransactionCodeDetailTypeFromJSONTyped;
function TransactionCodeDetailTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'servingPeriod': value.servingPeriod,
        'rowNum': value.rowNum,
        'revenueCenter': value.revenueCenter,
        'terminal': value.terminal,
        'paymentNum': value.paymentNum,
        'userId': value.userId,
        'postRoute': value.postRoute,
        'dialedDigits': value.dialedDigits,
        'lineType': value.lineType,
        'code': value.code,
        'tipCode': value.tipCode,
        'description': value.description,
        'itemizersShortInfo': value.itemizersShortInfo === undefined ? undefined : (value.itemizersShortInfo.map(ItemizerShortInfoType_1.ItemizerShortInfoTypeToJSON)),
    };
}
exports.TransactionCodeDetailTypeToJSON = TransactionCodeDetailTypeToJSON;
