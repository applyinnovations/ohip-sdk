/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { SVTransactionType } from './SVTransactionType';
/**
 *
 * @export
 * @interface GeneralInfoType
 */
export interface GeneralInfoType {
    /**
     * Create stored value during checkin of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    createSVCheckIn?: boolean;
    /**
     * Enable failover of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    enableFailover?: boolean;
    /**
     * CC vault of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    ccVaultFunction?: boolean;
    /**
     * Enable resend of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    enableResend?: boolean;
    /**
     * Send AR auth type of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    sendARAuthType?: boolean;
    /**
     * Enable DB verification of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    enableDBVerification?: boolean;
    /**
     * Allow CC cancel transactions of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    allowCCCancelTransaction?: boolean;
    /**
     * Show stored value pin of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    showStoredValuePin?: boolean;
    /**
     *
     * @type {SVTransactionType}
     * @memberof GeneralInfoType
     */
    showSVTransaction?: SVTransactionType;
    /**
     * Stored value system of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    storedValueSystem?: boolean;
    /**
     * Send enhanced fields of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    sendEnhancedFields?: boolean;
    /**
     * Card present of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    cardPresentFlag?: boolean;
    /**
     * Handle night audit command of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    handleNightAudit?: boolean;
    /**
     * Regular transaction command of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    regularTransaction?: boolean;
    /**
     * Courtesy card handling command of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    courtesyCardHandling?: boolean;
    /**
     * Send end of day of a Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    sendEndOfDay?: boolean;
    /**
     * Logical port number 1 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    portNumber1?: string;
    /**
     * Logical port number 2 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    portNumber2?: string;
    /**
     * Logical port number 3 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    portNumber3?: string;
    /**
     * Logical port number 4 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    portNumber4?: string;
    /**
     * IP Address of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    iPAddress?: string;
    /**
     * Stored value reedeem transaction of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    sVRedeemTrx?: string;
    /**
     * Device of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    device?: string;
    /**
     * Department code 1 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    departmentCode1?: string;
    /**
     * Department code 2 of a the Hotel Interface
     * @type {string}
     * @memberof GeneralInfoType
     */
    departmentCode2?: string;
    /**
     * Rollup transactions flag of the Hotel Interface
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    rollupTransactions?: boolean;
    /**
     * Indicator if video checkout is allowed or not.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    allowVideoCheckout?: boolean;
    /**
     * One of the video checkout options whether to check the credit limit.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    checkCreditLimit?: boolean;
    /**
     * One of the video checkout options whether to check the balance.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    checkBalance?: boolean;
    /**
     * One of the video checkout options whether to check the routing.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    checkRouting?: boolean;
    /**
     * Indicator if the Hotel Interface handles wakeup calls.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    wakeupYn?: boolean;
    /**
     * Determines who handles the wakeup calls, either by Opera (0) or a Vendor (1).
     * @type {string}
     * @memberof GeneralInfoType
     */
    wakeupHandledBy?: string;
    /**
     * Wakeup retry limit of the Hotel Interface. Value range is 0 to 999.
     * @type {number}
     * @memberof GeneralInfoType
     */
    wakeRetry?: number;
    /**
     * Wakeup delay value of the Hotel Interface.
     * @type {number}
     * @memberof GeneralInfoType
     */
    wakeDelay?: number;
    /**
     * Used by the Interface module (IFC7.exe).
     * @type {number}
     * @memberof GeneralInfoType
     */
    prevWake?: number;
    /**
     * Folio display option of the Hotel Interface applicable to VID and MSC. "0" means folio display option off. "A" means a guest folio display option. "U" means user defined folio display option.
     * @type {string}
     * @memberof GeneralInfoType
     */
    folioDisplayOption?: string;
    /**
     * Indicator if the User defined folio 1 is utilized.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    userDefinedFolio1?: boolean;
    /**
     * Indicator if the User defined folio 2 is utilized.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    userDefinedFolio2?: boolean;
    /**
     * Indicator if the User defined folio 3 is utilized.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    userDefinedFolio3?: boolean;
    /**
     * Indicator if the User defined folio 4 is utilized.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    userDefinedFolio4?: boolean;
    /**
     * Indicator if the phone name will be displayed.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    displayPhoneName?: boolean;
    /**
     * Indicator if the Key Pin is active or not.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    keyPinActive?: boolean;
    /**
     * Indicator for Default All Print Details On.
     * @type {boolean}
     * @memberof GeneralInfoType
     */
    allPrintDetailOn?: boolean;
}
/**
 * Check if a given object implements the GeneralInfoType interface.
 */
export declare function instanceOfGeneralInfoType(value: object): boolean;
export declare function GeneralInfoTypeFromJSON(json: any): GeneralInfoType;
export declare function GeneralInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralInfoType;
export declare function GeneralInfoTypeToJSON(value?: GeneralInfoType | null): any;
