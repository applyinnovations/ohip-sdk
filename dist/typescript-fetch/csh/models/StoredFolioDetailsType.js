"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoredFolioDetailsTypeToJSON = exports.StoredFolioDetailsTypeFromJSONTyped = exports.StoredFolioDetailsTypeFromJSON = exports.instanceOfStoredFolioDetailsType = void 0;
const runtime_1 = require("../runtime");
const StatusType_1 = require("./StatusType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the StoredFolioDetailsType interface.
 */
function instanceOfStoredFolioDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStoredFolioDetailsType = instanceOfStoredFolioDetailsType;
function StoredFolioDetailsTypeFromJSON(json) {
    return StoredFolioDetailsTypeFromJSONTyped(json, false);
}
exports.StoredFolioDetailsTypeFromJSON = StoredFolioDetailsTypeFromJSON;
function StoredFolioDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'folioReportURL': !(0, runtime_1.exists)(json, 'folioReportURL') ? undefined : json['folioReportURL'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reportStatus': !(0, runtime_1.exists)(json, 'reportStatus') ? undefined : (0, StatusType_1.StatusTypeFromJSON)(json['reportStatus']),
        'storedFolioFileName': !(0, runtime_1.exists)(json, 'storedFolioFileName') ? undefined : json['storedFolioFileName'],
        'storedFolioId': !(0, runtime_1.exists)(json, 'storedFolioId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['storedFolioId']),
    };
}
exports.StoredFolioDetailsTypeFromJSONTyped = StoredFolioDetailsTypeFromJSONTyped;
function StoredFolioDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'folioReportURL': value.folioReportURL,
        'hotelId': value.hotelId,
        'reportStatus': (0, StatusType_1.StatusTypeToJSON)(value.reportStatus),
        'storedFolioFileName': value.storedFolioFileName,
        'storedFolioId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.storedFolioId),
    };
}
exports.StoredFolioDetailsTypeToJSON = StoredFolioDetailsTypeToJSON;
