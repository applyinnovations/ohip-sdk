/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AssociatedBillInfoType } from './AssociatedBillInfoType';
import type { CashieringEventType } from './CashieringEventType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { ExchangeRateInfoType } from './ExchangeRateInfoType';
import type { FiscalFolioInstruction } from './FiscalFolioInstruction';
import type { FolioQueueType } from './FolioQueueType';
import type { FolioReasonType } from './FolioReasonType';
import type { FolioTypeValidationType } from './FolioTypeValidationType';
import type { NameValueHeaderDetailType } from './NameValueHeaderDetailType';
import type { ProfileId } from './ProfileId';
import type { ReservationId } from './ReservationId';
import type { TransactionType } from './TransactionType';
/**
 * Generate Folio Criteria type to be used for folio generation request
 * @export
 * @interface GenerateFolioCriteriaType
 */
export interface GenerateFolioCriteriaType {
    /**
     * Custom Folio Name Value Information to be saved
     * @type {Array<NameValueHeaderDetailType>}
     * @memberof GenerateFolioCriteriaType
     */
    folioNameValue?: Array<NameValueHeaderDetailType>;
    /**
     * Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.
     * @type {string}
     * @memberof GenerateFolioCriteriaType
     */
    fiscalTerminalId?: string;
    /**
     * Property code.
     * @type {string}
     * @memberof GenerateFolioCriteriaType
     */
    hotelId?: string;
    /**
     *
     * @type {CashieringEventType}
     * @memberof GenerateFolioCriteriaType
     */
    eventType?: CashieringEventType;
    /**
     *
     * @type {ReservationId}
     * @memberof GenerateFolioCriteriaType
     */
    reservationId?: ReservationId;
    /**
     *
     * @type {ProfileId}
     * @memberof GenerateFolioCriteriaType
     */
    profileId?: ProfileId;
    /**
     *
     * @type {ExchangeRateInfoType}
     * @memberof GenerateFolioCriteriaType
     */
    fiscalInvoicingCurrencyInfo?: ExchangeRateInfoType;
    /**
     *
     * @type {AssociatedBillInfoType}
     * @memberof GenerateFolioCriteriaType
     */
    associatedBillInfo?: AssociatedBillInfoType;
    /**
     *
     * @type {FolioQueueType}
     * @memberof GenerateFolioCriteriaType
     */
    folioQueue?: FolioQueueType;
    /**
     * Fiscal Folio sequence ID stored in queue table.
     * @type {number}
     * @memberof GenerateFolioCriteriaType
     */
    folioSeqId?: number;
    /**
     *
     * @type {FiscalFolioInstruction}
     * @memberof GenerateFolioCriteriaType
     */
    fiscalFolioInstruction?: FiscalFolioInstruction;
    /**
     *
     * @type {FolioTypeValidationType}
     * @memberof GenerateFolioCriteriaType
     */
    folioTypeValidation?: FolioTypeValidationType;
    /**
     * List of transaction information.
     * @type {Array<TransactionType>}
     * @memberof GenerateFolioCriteriaType
     */
    transactions?: Array<TransactionType>;
    /**
     * Contains transaction service type.
     * @type {string}
     * @memberof GenerateFolioCriteriaType
     */
    transactionServiceType?: string;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof GenerateFolioCriteriaType
     */
    balance?: CurrencyAmountType;
    /**
     *
     * @type {number}
     * @memberof GenerateFolioCriteriaType
     */
    folioWindowNo?: number;
    /**
     * Flag to decide if folios is to be generated for all windows in addition to the one requested with applicable postings and zero balance. If any of the windows have non-zero balance then folios are not generated for other windows.
     * @type {boolean}
     * @memberof GenerateFolioCriteriaType
     */
    allFolioWindow?: boolean;
    /**
     * Correction flag
     * @type {boolean}
     * @memberof GenerateFolioCriteriaType
     */
    correction?: boolean;
    /**
     * Indicates the type of folio to be generated
     * @type {boolean}
     * @memberof GenerateFolioCriteriaType
     */
    debitFolio?: boolean;
    /**
     * Manual Folio Number used for settlement during checkout
     * @type {number}
     * @memberof GenerateFolioCriteriaType
     */
    manualFolioNo?: number;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof GenerateFolioCriteriaType
     */
    cashierId?: number;
    /**
     * This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.
     * @type {boolean}
     * @memberof GenerateFolioCriteriaType
     */
    simpleFolio?: boolean;
    /**
     *
     * @type {FolioReasonType}
     * @memberof GenerateFolioCriteriaType
     */
    reason?: FolioReasonType;
}
/**
 * Check if a given object implements the GenerateFolioCriteriaType interface.
 */
export declare function instanceOfGenerateFolioCriteriaType(value: object): boolean;
export declare function GenerateFolioCriteriaTypeFromJSON(json: any): GenerateFolioCriteriaType;
export declare function GenerateFolioCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateFolioCriteriaType;
export declare function GenerateFolioCriteriaTypeToJSON(value?: GenerateFolioCriteriaType | null): any;
