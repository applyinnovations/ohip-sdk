/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FiscalInvoiceSummaryType } from './FiscalInvoiceSummaryType';
import {
    FiscalInvoiceSummaryTypeFromJSON,
    FiscalInvoiceSummaryTypeFromJSONTyped,
    FiscalInvoiceSummaryTypeToJSON,
} from './FiscalInvoiceSummaryType';
import type { FolioCommandType } from './FolioCommandType';
import {
    FolioCommandTypeFromJSON,
    FolioCommandTypeFromJSONTyped,
    FolioCommandTypeToJSON,
} from './FolioCommandType';

/**
 * Criteria for calling fiscal folio service for the generation of invoices
 * @export
 * @interface FiscalFolioCriteriaType
 */
export interface FiscalFolioCriteriaType {
    /**
     * Property where the folio is being generated.
     * @type {string}
     * @memberof FiscalFolioCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {FolioCommandType}
     * @memberof FiscalFolioCriteriaType
     */
    folioCommand?: FolioCommandType;
    /**
     * Effective date to run fiscal command.
     * @type {Date}
     * @memberof FiscalFolioCriteriaType
     */
    effectiveDate?: Date;
    /**
     * 
     * @type {FiscalInvoiceSummaryType}
     * @memberof FiscalFolioCriteriaType
     */
    folios?: FiscalInvoiceSummaryType;
}

/**
 * Check if a given object implements the FiscalFolioCriteriaType interface.
 */
export function instanceOfFiscalFolioCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalFolioCriteriaTypeFromJSON(json: any): FiscalFolioCriteriaType {
    return FiscalFolioCriteriaTypeFromJSONTyped(json, false);
}

export function FiscalFolioCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalFolioCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'folioCommand': !exists(json, 'folioCommand') ? undefined : FolioCommandTypeFromJSON(json['folioCommand']),
        'effectiveDate': !exists(json, 'effectiveDate') ? undefined : (new Date(json['effectiveDate'])),
        'folios': !exists(json, 'folios') ? undefined : FiscalInvoiceSummaryTypeFromJSON(json['folios']),
    };
}

export function FiscalFolioCriteriaTypeToJSON(value?: FiscalFolioCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'folioCommand': FolioCommandTypeToJSON(value.folioCommand),
        'effectiveDate': value.effectiveDate === undefined ? undefined : (value.effectiveDate.toISOString().substr(0,10)),
        'folios': FiscalInvoiceSummaryTypeToJSON(value.folios),
    };
}

