/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { SaleCriteriaType } from './SaleCriteriaType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Prepaid card criteria type used to perform manage operation on the card.
 * @export
 * @interface ActivatePrepaidCardCriteria
 */
export interface ActivatePrepaidCardCriteria {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ActivatePrepaidCardCriteria
     */
    amount?: CurrencyAmountType;
    /**
     * Prepaid card number.
     * @type {string}
     * @memberof ActivatePrepaidCardCriteria
     */
    cardNo?: string;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof ActivatePrepaidCardCriteria
     */
    cashierId?: number;
    /**
     * Hotel code.
     * @type {string}
     * @memberof ActivatePrepaidCardCriteria
     */
    hotelId?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ActivatePrepaidCardCriteria
     */
    interfaceId?: UniqueIDType;
    /**
     * PIN code associated for the prepaid card.
     * @type {string}
     * @memberof ActivatePrepaidCardCriteria
     */
    pin?: string;
    /**
     * Indicate that charges will be posted to the room.
     * @type {boolean}
     * @memberof ActivatePrepaidCardCriteria
     */
    postChargeToRoom?: boolean;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ActivatePrepaidCardCriteria
     */
    profileId?: UniqueIDType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ActivatePrepaidCardCriteria
     */
    reservationId?: UniqueIDType;
    /**
     *
     * @type {SaleCriteriaType}
     * @memberof ActivatePrepaidCardCriteria
     */
    saleCriteria?: SaleCriteriaType;
}
/**
 * Check if a given object implements the ActivatePrepaidCardCriteria interface.
 */
export declare function instanceOfActivatePrepaidCardCriteria(value: object): boolean;
export declare function ActivatePrepaidCardCriteriaFromJSON(json: any): ActivatePrepaidCardCriteria;
export declare function ActivatePrepaidCardCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivatePrepaidCardCriteria;
export declare function ActivatePrepaidCardCriteriaToJSON(value?: ActivatePrepaidCardCriteria | null): any;
