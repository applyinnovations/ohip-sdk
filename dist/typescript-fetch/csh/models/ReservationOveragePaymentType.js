"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReservationOveragePaymentTypeToJSON = exports.ReservationOveragePaymentTypeFromJSONTyped = exports.ReservationOveragePaymentTypeFromJSON = exports.instanceOfReservationOveragePaymentType = void 0;
const runtime_1 = require("../runtime");
const CardTypeType_1 = require("./CardTypeType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const ReservationId_1 = require("./ReservationId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ReservationOveragePaymentType interface.
 */
function instanceOfReservationOveragePaymentType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReservationOveragePaymentType = instanceOfReservationOveragePaymentType;
function ReservationOveragePaymentTypeFromJSON(json) {
    return ReservationOveragePaymentTypeFromJSONTyped(json, false);
}
exports.ReservationOveragePaymentTypeFromJSON = ReservationOveragePaymentTypeFromJSON;
function ReservationOveragePaymentTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, ReservationId_1.ReservationIdFromJSON)(json['reservationId']),
        'guestName': !(0, runtime_1.exists)(json, 'guestName') ? undefined : json['guestName'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'windowNo': !(0, runtime_1.exists)(json, 'windowNo') ? undefined : json['windowNo'],
        'cardType': !(0, runtime_1.exists)(json, 'cardType') ? undefined : (0, CardTypeType_1.CardTypeTypeFromJSON)(json['cardType']),
        'userDefinedCardType': !(0, runtime_1.exists)(json, 'userDefinedCardType') ? undefined : json['userDefinedCardType'],
        'creditCardNo': !(0, runtime_1.exists)(json, 'creditCardNo') ? undefined : json['creditCardNo'],
        'cardExpirationDate': !(0, runtime_1.exists)(json, 'cardExpirationDate') ? undefined : json['cardExpirationDate'],
        'creditCardId': !(0, runtime_1.exists)(json, 'creditCardId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['creditCardId']),
        'creditCardLimit': !(0, runtime_1.exists)(json, 'creditCardLimit') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['creditCardLimit']),
        'balance': !(0, runtime_1.exists)(json, 'balance') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['balance']),
        'paymentMethod': !(0, runtime_1.exists)(json, 'paymentMethod') ? undefined : json['paymentMethod'],
    };
}
exports.ReservationOveragePaymentTypeFromJSONTyped = ReservationOveragePaymentTypeFromJSONTyped;
function ReservationOveragePaymentTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reservationId': (0, ReservationId_1.ReservationIdToJSON)(value.reservationId),
        'guestName': value.guestName,
        'roomId': value.roomId,
        'windowNo': value.windowNo,
        'cardType': (0, CardTypeType_1.CardTypeTypeToJSON)(value.cardType),
        'userDefinedCardType': value.userDefinedCardType,
        'creditCardNo': value.creditCardNo,
        'cardExpirationDate': value.cardExpirationDate,
        'creditCardId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.creditCardId),
        'creditCardLimit': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.creditCardLimit),
        'balance': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.balance),
        'paymentMethod': value.paymentMethod,
    };
}
exports.ReservationOveragePaymentTypeToJSON = ReservationOveragePaymentTypeToJSON;
