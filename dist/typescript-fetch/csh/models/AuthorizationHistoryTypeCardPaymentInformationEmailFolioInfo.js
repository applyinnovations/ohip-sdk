"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoToJSON = exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSONTyped = exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSON = exports.instanceOfAuthorizationHistoryTypeCardPaymentInformationEmailFolioInfo = void 0;
const runtime_1 = require("../runtime");
const EmailType_1 = require("./EmailType");
/**
 * Check if a given object implements the AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfo interface.
 */
function instanceOfAuthorizationHistoryTypeCardPaymentInformationEmailFolioInfo(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAuthorizationHistoryTypeCardPaymentInformationEmailFolioInfo = instanceOfAuthorizationHistoryTypeCardPaymentInformationEmailFolioInfo;
function AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSON(json) {
    return AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSONTyped(json, false);
}
exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSON = AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSON;
function AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'email': !(0, runtime_1.exists)(json, 'email') ? undefined : (0, EmailType_1.EmailTypeFromJSON)(json['email']),
        'emailFolio': !(0, runtime_1.exists)(json, 'emailFolio') ? undefined : json['emailFolio'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSONTyped = AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoFromJSONTyped;
function AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'email': (0, EmailType_1.EmailTypeToJSON)(value.email),
        'emailFolio': value.emailFolio,
        'id': value.id,
        'type': value.type,
    };
}
exports.AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoToJSON = AuthorizationHistoryTypeCardPaymentInformationEmailFolioInfoToJSON;
