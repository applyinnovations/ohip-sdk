"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExchangeRateCalculationTypeToJSON = exports.ExchangeRateCalculationTypeFromJSONTyped = exports.ExchangeRateCalculationTypeFromJSON = exports.instanceOfExchangeRateCalculationType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const CurrencyExchangeType_1 = require("./CurrencyExchangeType");
const ExchangeRateCalculationTaxType_1 = require("./ExchangeRateCalculationTaxType");
/**
 * Check if a given object implements the ExchangeRateCalculationType interface.
 */
function instanceOfExchangeRateCalculationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfExchangeRateCalculationType = instanceOfExchangeRateCalculationType;
function ExchangeRateCalculationTypeFromJSON(json) {
    return ExchangeRateCalculationTypeFromJSONTyped(json, false);
}
exports.ExchangeRateCalculationTypeFromJSON = ExchangeRateCalculationTypeFromJSON;
function ExchangeRateCalculationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'buyCommission': !(0, runtime_1.exists)(json, 'buyCommission') ? undefined : json['buyCommission'],
        'calculatedAmount': !(0, runtime_1.exists)(json, 'calculatedAmount') ? undefined : json['calculatedAmount'],
        'date': !(0, runtime_1.exists)(json, 'date') ? undefined : (new Date(json['date'])),
        'euroAmount': !(0, runtime_1.exists)(json, 'euroAmount') ? undefined : json['euroAmount'],
        'euroExchangeRate': !(0, runtime_1.exists)(json, 'euroExchangeRate') ? undefined : json['euroExchangeRate'],
        'exchangeDate': !(0, runtime_1.exists)(json, 'exchangeDate') ? undefined : (new Date(json['exchangeDate'])),
        'exchangeInformation': !(0, runtime_1.exists)(json, 'exchangeInformation') ? undefined : json['exchangeInformation'],
        'exchangeRate': !(0, runtime_1.exists)(json, 'exchangeRate') ? undefined : json['exchangeRate'],
        'exchangeRateCalculationTax': !(0, runtime_1.exists)(json, 'exchangeRateCalculationTax') ? undefined : (0, ExchangeRateCalculationTaxType_1.ExchangeRateCalculationTaxTypeFromJSON)(json['exchangeRateCalculationTax']),
        'exchangeReference': !(0, runtime_1.exists)(json, 'exchangeReference') ? undefined : json['exchangeReference'],
        'exchangeType': !(0, runtime_1.exists)(json, 'exchangeType') ? undefined : (0, CurrencyExchangeType_1.CurrencyExchangeTypeFromJSON)(json['exchangeType']),
        'fromCurrencyAmount': !(0, runtime_1.exists)(json, 'fromCurrencyAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['fromCurrencyAmount']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'roundingAmount': !(0, runtime_1.exists)(json, 'roundingAmount') ? undefined : json['roundingAmount'],
        'sell': !(0, runtime_1.exists)(json, 'sell') ? undefined : json['sell'],
        'serviceTax': !(0, runtime_1.exists)(json, 'serviceTax') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['serviceTax']),
        'toCurrencyAmount': !(0, runtime_1.exists)(json, 'toCurrencyAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['toCurrencyAmount']),
    };
}
exports.ExchangeRateCalculationTypeFromJSONTyped = ExchangeRateCalculationTypeFromJSONTyped;
function ExchangeRateCalculationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'buyCommission': value.buyCommission,
        'calculatedAmount': value.calculatedAmount,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substring(0, 10)),
        'euroAmount': value.euroAmount,
        'euroExchangeRate': value.euroExchangeRate,
        'exchangeDate': value.exchangeDate === undefined ? undefined : (value.exchangeDate.toISOString().substring(0, 10)),
        'exchangeInformation': value.exchangeInformation,
        'exchangeRate': value.exchangeRate,
        'exchangeRateCalculationTax': (0, ExchangeRateCalculationTaxType_1.ExchangeRateCalculationTaxTypeToJSON)(value.exchangeRateCalculationTax),
        'exchangeReference': value.exchangeReference,
        'exchangeType': (0, CurrencyExchangeType_1.CurrencyExchangeTypeToJSON)(value.exchangeType),
        'fromCurrencyAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.fromCurrencyAmount),
        'hotelId': value.hotelId,
        'roundingAmount': value.roundingAmount,
        'sell': value.sell,
        'serviceTax': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.serviceTax),
        'toCurrencyAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.toCurrencyAmount),
    };
}
exports.ExchangeRateCalculationTypeToJSON = ExchangeRateCalculationTypeToJSON;
