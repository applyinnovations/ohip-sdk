/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AuthorizationHistoryTypeCardPaymentInformation } from './AuthorizationHistoryTypeCardPaymentInformation';
import type { AuthorizationHistoryTypeStatus } from './AuthorizationHistoryTypeStatus';
import type { CardAuthorizationTransactionType } from './CardAuthorizationTransactionType';
import type { CurrencyAmountType } from './CurrencyAmountType';
/**
 * Information on a single credit card authorization transaction.
 * @export
 * @interface AuthorizationHistoryType
 */
export interface AuthorizationHistoryType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof AuthorizationHistoryType
     */
    approvalAmount?: CurrencyAmountType;
    /**
     * The corresponding business date for this record.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    businessDate?: string;
    /**
     *
     * @type {AuthorizationHistoryTypeCardPaymentInformation}
     * @memberof AuthorizationHistoryType
     */
    cardPaymentInformation?: AuthorizationHistoryTypeCardPaymentInformation;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    creatorId?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    lastModifyDateTime?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    purgeDate?: string;
    /**
     *
     * @type {AuthorizationHistoryTypeStatus}
     * @memberof AuthorizationHistoryType
     */
    status?: AuthorizationHistoryTypeStatus;
    /**
     *
     * @type {CardAuthorizationTransactionType}
     * @memberof AuthorizationHistoryType
     */
    transactionType?: CardAuthorizationTransactionType;
    /**
     * History type can only be either Settlement or Authorization or Payment or Refunds.
     * @type {string}
     * @memberof AuthorizationHistoryType
     */
    type?: AuthorizationHistoryTypeTypeEnum;
}
/**
 * @export
 */
export declare const AuthorizationHistoryTypeTypeEnum: {
    readonly Settlement: "Settlement";
    readonly Authorization: "Authorization";
    readonly Payment: "Payment";
    readonly Refunds: "Refunds";
};
export type AuthorizationHistoryTypeTypeEnum = typeof AuthorizationHistoryTypeTypeEnum[keyof typeof AuthorizationHistoryTypeTypeEnum];
/**
 * Check if a given object implements the AuthorizationHistoryType interface.
 */
export declare function instanceOfAuthorizationHistoryType(value: object): boolean;
export declare function AuthorizationHistoryTypeFromJSON(json: any): AuthorizationHistoryType;
export declare function AuthorizationHistoryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizationHistoryType;
export declare function AuthorizationHistoryTypeToJSON(value?: AuthorizationHistoryType | null): any;
