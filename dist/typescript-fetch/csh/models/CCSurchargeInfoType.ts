/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Credit Card Surcharge Information type. Information regarding surcharge which can be applied to a Credit Card payment.
 * @export
 * @interface CCSurchargeInfoType
 */
export interface CCSurchargeInfoType {
    /**
     * The percentage on the payment amount which will be the Surcharge.
     * @type {number}
     * @memberof CCSurchargeInfoType
     */
    percentage?: number;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof CCSurchargeInfoType
     */
    threshold?: CurrencyAmountType;
    /**
     * The Payment Transaction Code for which the Surcharge Applies.
     * @type {string}
     * @memberof CCSurchargeInfoType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the CCSurchargeInfoType interface.
 */
export function instanceOfCCSurchargeInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CCSurchargeInfoTypeFromJSON(json: any): CCSurchargeInfoType {
    return CCSurchargeInfoTypeFromJSONTyped(json, false);
}

export function CCSurchargeInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CCSurchargeInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'threshold': !exists(json, 'threshold') ? undefined : CurrencyAmountTypeFromJSON(json['threshold']),
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function CCSurchargeInfoTypeToJSON(value?: CCSurchargeInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'percentage': value.percentage,
        'threshold': CurrencyAmountTypeToJSON(value.threshold),
        'transactionCode': value.transactionCode,
    };
}

