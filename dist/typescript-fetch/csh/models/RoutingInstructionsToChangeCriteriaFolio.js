"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoutingInstructionsToChangeCriteriaFolioToJSON = exports.RoutingInstructionsToChangeCriteriaFolioFromJSONTyped = exports.RoutingInstructionsToChangeCriteriaFolioFromJSON = exports.instanceOfRoutingInstructionsToChangeCriteriaFolio = void 0;
const runtime_1 = require("../runtime");
const PayeeInfoType_1 = require("./PayeeInfoType");
const ResvRoutingInfoTypeFolioGuestInfo_1 = require("./ResvRoutingInfoTypeFolioGuestInfo");
const RoutingInstructionType_1 = require("./RoutingInstructionType");
/**
 * Check if a given object implements the RoutingInstructionsToChangeCriteriaFolio interface.
 */
function instanceOfRoutingInstructionsToChangeCriteriaFolio(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoutingInstructionsToChangeCriteriaFolio = instanceOfRoutingInstructionsToChangeCriteriaFolio;
function RoutingInstructionsToChangeCriteriaFolioFromJSON(json) {
    return RoutingInstructionsToChangeCriteriaFolioFromJSONTyped(json, false);
}
exports.RoutingInstructionsToChangeCriteriaFolioFromJSON = RoutingInstructionsToChangeCriteriaFolioFromJSON;
function RoutingInstructionsToChangeCriteriaFolioFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'guestInfo': !(0, runtime_1.exists)(json, 'guestInfo') ? undefined : (0, ResvRoutingInfoTypeFolioGuestInfo_1.ResvRoutingInfoTypeFolioGuestInfoFromJSON)(json['guestInfo']),
        'payeeInfo': !(0, runtime_1.exists)(json, 'payeeInfo') ? undefined : (0, PayeeInfoType_1.PayeeInfoTypeFromJSON)(json['payeeInfo']),
        'aRNumber': !(0, runtime_1.exists)(json, 'aRNumber') ? undefined : json['aRNumber'],
        'instructions': !(0, runtime_1.exists)(json, 'instructions') ? undefined : (json['instructions'].map(RoutingInstructionType_1.RoutingInstructionTypeFromJSON)),
        'paymentMethod': !(0, runtime_1.exists)(json, 'paymentMethod') ? undefined : json['paymentMethod'],
        'folioWindowNo': !(0, runtime_1.exists)(json, 'folioWindowNo') ? undefined : json['folioWindowNo'],
    };
}
exports.RoutingInstructionsToChangeCriteriaFolioFromJSONTyped = RoutingInstructionsToChangeCriteriaFolioFromJSONTyped;
function RoutingInstructionsToChangeCriteriaFolioToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'guestInfo': (0, ResvRoutingInfoTypeFolioGuestInfo_1.ResvRoutingInfoTypeFolioGuestInfoToJSON)(value.guestInfo),
        'payeeInfo': (0, PayeeInfoType_1.PayeeInfoTypeToJSON)(value.payeeInfo),
        'aRNumber': value.aRNumber,
        'instructions': value.instructions === undefined ? undefined : (value.instructions.map(RoutingInstructionType_1.RoutingInstructionTypeToJSON)),
        'paymentMethod': value.paymentMethod,
        'folioWindowNo': value.folioWindowNo,
    };
}
exports.RoutingInstructionsToChangeCriteriaFolioToJSON = RoutingInstructionsToChangeCriteriaFolioToJSON;
