"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateProformaCriteriaTypeToJSON = exports.CreateProformaCriteriaTypeFromJSONTyped = exports.CreateProformaCriteriaTypeFromJSON = exports.instanceOfCreateProformaCriteriaType = void 0;
const runtime_1 = require("../runtime");
const ProformaResponseInstructionType_1 = require("./ProformaResponseInstructionType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CreateProformaCriteriaType interface.
 */
function instanceOfCreateProformaCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCreateProformaCriteriaType = instanceOfCreateProformaCriteriaType;
function CreateProformaCriteriaTypeFromJSON(json) {
    return CreateProformaCriteriaTypeFromJSONTyped(json, false);
}
exports.CreateProformaCriteriaTypeFromJSON = CreateProformaCriteriaTypeFromJSON;
function CreateProformaCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationIdList': !(0, runtime_1.exists)(json, 'reservationIdList') ? undefined : (json['reservationIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
        'responseInstruction': !(0, runtime_1.exists)(json, 'responseInstruction') ? undefined : (0, ProformaResponseInstructionType_1.ProformaResponseInstructionTypeFromJSON)(json['responseInstruction']),
    };
}
exports.CreateProformaCriteriaTypeFromJSONTyped = CreateProformaCriteriaTypeFromJSONTyped;
function CreateProformaCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'reservationIdList': value.reservationIdList === undefined ? undefined : (value.reservationIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
        'responseInstruction': (0, ProformaResponseInstructionType_1.ProformaResponseInstructionTypeToJSON)(value.responseInstruction),
    };
}
exports.CreateProformaCriteriaTypeToJSON = CreateProformaCriteriaTypeToJSON;
