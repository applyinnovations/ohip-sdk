"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutoSettleCompFolioTypeToJSON = exports.AutoSettleCompFolioTypeFromJSONTyped = exports.AutoSettleCompFolioTypeFromJSON = exports.instanceOfAutoSettleCompFolioType = void 0;
const runtime_1 = require("../runtime");
const FolioStatusType_1 = require("./FolioStatusType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the AutoSettleCompFolioType interface.
 */
function instanceOfAutoSettleCompFolioType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAutoSettleCompFolioType = instanceOfAutoSettleCompFolioType;
function AutoSettleCompFolioTypeFromJSON(json) {
    return AutoSettleCompFolioTypeFromJSONTyped(json, false);
}
exports.AutoSettleCompFolioTypeFromJSON = AutoSettleCompFolioTypeFromJSON;
function AutoSettleCompFolioTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'payeeId': !(0, runtime_1.exists)(json, 'payeeId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['payeeId']),
        'payeeName': !(0, runtime_1.exists)(json, 'payeeName') ? undefined : json['payeeName'],
        'folioView': !(0, runtime_1.exists)(json, 'folioView') ? undefined : json['folioView'],
        'folioNo': !(0, runtime_1.exists)(json, 'folioNo') ? undefined : json['folioNo'],
        'invoiceNo': !(0, runtime_1.exists)(json, 'invoiceNo') ? undefined : json['invoiceNo'],
        'fiscalBillNo': !(0, runtime_1.exists)(json, 'fiscalBillNo') ? undefined : json['fiscalBillNo'],
        'folioTypeName': !(0, runtime_1.exists)(json, 'folioTypeName') ? undefined : json['folioTypeName'],
        'internalFolioWindowID': !(0, runtime_1.exists)(json, 'internalFolioWindowID') ? undefined : json['internalFolioWindowID'],
        'folioDate': !(0, runtime_1.exists)(json, 'folioDate') ? undefined : json['folioDate'],
        'folioStatus': !(0, runtime_1.exists)(json, 'folioStatus') ? undefined : (0, FolioStatusType_1.FolioStatusTypeFromJSON)(json['folioStatus']),
        'folioNoWithPrefix': !(0, runtime_1.exists)(json, 'folioNoWithPrefix') ? undefined : json['folioNoWithPrefix'],
        'folioSeqNo': !(0, runtime_1.exists)(json, 'folioSeqNo') ? undefined : json['folioSeqNo'],
    };
}
exports.AutoSettleCompFolioTypeFromJSONTyped = AutoSettleCompFolioTypeFromJSONTyped;
function AutoSettleCompFolioTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'payeeId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.payeeId),
        'payeeName': value.payeeName,
        'folioView': value.folioView,
        'folioNo': value.folioNo,
        'invoiceNo': value.invoiceNo,
        'fiscalBillNo': value.fiscalBillNo,
        'folioTypeName': value.folioTypeName,
        'internalFolioWindowID': value.internalFolioWindowID,
        'folioDate': value.folioDate,
        'folioStatus': (0, FolioStatusType_1.FolioStatusTypeToJSON)(value.folioStatus),
        'folioNoWithPrefix': value.folioNoWithPrefix,
        'folioSeqNo': value.folioSeqNo,
    };
}
exports.AutoSettleCompFolioTypeToJSON = AutoSettleCompFolioTypeToJSON;
