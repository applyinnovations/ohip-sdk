/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Information about the Authorizer Credit detail
 * @export
 * @interface AuthorizerCreditDetailType
 */
export interface AuthorizerCreditDetailType {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof AuthorizerCreditDetailType
     */
    creditLimit?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof AuthorizerCreditDetailType
     */
    actualAmount?: CurrencyAmountType;
    /**
     * Indicates the Routing Instructions for which Authorization was done.
     * @type {string}
     * @memberof AuthorizerCreditDetailType
     */
    billingInstruction?: string;
}

/**
 * Check if a given object implements the AuthorizerCreditDetailType interface.
 */
export function instanceOfAuthorizerCreditDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthorizerCreditDetailTypeFromJSON(json: any): AuthorizerCreditDetailType {
    return AuthorizerCreditDetailTypeFromJSONTyped(json, false);
}

export function AuthorizerCreditDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizerCreditDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creditLimit': !exists(json, 'creditLimit') ? undefined : CurrencyAmountTypeFromJSON(json['creditLimit']),
        'actualAmount': !exists(json, 'actualAmount') ? undefined : CurrencyAmountTypeFromJSON(json['actualAmount']),
        'billingInstruction': !exists(json, 'billingInstruction') ? undefined : json['billingInstruction'],
    };
}

export function AuthorizerCreditDetailTypeToJSON(value?: AuthorizerCreditDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creditLimit': CurrencyAmountTypeToJSON(value.creditLimit),
        'actualAmount': CurrencyAmountTypeToJSON(value.actualAmount),
        'billingInstruction': value.billingInstruction,
    };
}

