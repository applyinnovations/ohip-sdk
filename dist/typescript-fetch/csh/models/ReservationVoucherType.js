"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReservationVoucherTypeToJSON = exports.ReservationVoucherTypeFromJSONTyped = exports.ReservationVoucherTypeFromJSON = exports.instanceOfReservationVoucherType = exports.ReservationVoucherTypeStatusEnum = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const ReservationId_1 = require("./ReservationId");
/**
 * @export
 */
exports.ReservationVoucherTypeStatusEnum = {
    Print: 'Print',
    Reprint: 'Reprint',
    New: 'New',
    Void: 'Void'
};
/**
 * Check if a given object implements the ReservationVoucherType interface.
 */
function instanceOfReservationVoucherType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReservationVoucherType = instanceOfReservationVoucherType;
function ReservationVoucherTypeFromJSON(json) {
    return ReservationVoucherTypeFromJSONTyped(json, false);
}
exports.ReservationVoucherTypeFromJSON = ReservationVoucherTypeFromJSON;
function ReservationVoucherTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
        'voucherNo': !(0, runtime_1.exists)(json, 'voucherNo') ? undefined : json['voucherNo'],
        'voucherDate': !(0, runtime_1.exists)(json, 'voucherDate') ? undefined : json['voucherDate'],
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, ReservationId_1.ReservationIdFromJSON)(json['reservationId']),
    };
}
exports.ReservationVoucherTypeFromJSONTyped = ReservationVoucherTypeFromJSONTyped;
function ReservationVoucherTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'status': value.status,
        'voucherNo': value.voucherNo,
        'voucherDate': value.voucherDate,
        'reservationId': (0, ReservationId_1.ReservationIdToJSON)(value.reservationId),
    };
}
exports.ReservationVoucherTypeToJSON = ReservationVoucherTypeToJSON;
