/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The response type for Checks done before Posting a Rate Code amount to a reservation.
 * @export
 * @interface PostRateCodeCheckType
 */
export interface PostRateCodeCheckType {
    /**
     * Indicates that the Products(Packages) which are included in the Rate Code cannot be posted as part of this transaction. This could be the case where the reservation is an Open Folio or has Post Stay.
     * @type {boolean}
     * @memberof PostRateCodeCheckType
     */
    canPostProducts?: boolean;
    /**
     * Indicates that the Products(Packages) which are included in the Rate Code cannot be reversed as part of this transaction. This could be the case when the reservation has consumed the allowance already and is now trying to reverse the Rate Code by using a negative quantity.
     * @type {boolean}
     * @memberof PostRateCodeCheckType
     */
    canReverseProducts?: boolean;
    /**
     * Indicates that the Rate Code has Products(Packages) for the user to determine if they should be posted.
     * @type {boolean}
     * @memberof PostRateCodeCheckType
     */
    rateCodeHasProducts?: boolean;
}

/**
 * Check if a given object implements the PostRateCodeCheckType interface.
 */
export function instanceOfPostRateCodeCheckType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostRateCodeCheckTypeFromJSON(json: any): PostRateCodeCheckType {
    return PostRateCodeCheckTypeFromJSONTyped(json, false);
}

export function PostRateCodeCheckTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostRateCodeCheckType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'canPostProducts': !exists(json, 'canPostProducts') ? undefined : json['canPostProducts'],
        'canReverseProducts': !exists(json, 'canReverseProducts') ? undefined : json['canReverseProducts'],
        'rateCodeHasProducts': !exists(json, 'rateCodeHasProducts') ? undefined : json['rateCodeHasProducts'],
    };
}

export function PostRateCodeCheckTypeToJSON(value?: PostRateCodeCheckType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'canPostProducts': value.canPostProducts,
        'canReverseProducts': value.canReverseProducts,
        'rateCodeHasProducts': value.rateCodeHasProducts,
    };
}

