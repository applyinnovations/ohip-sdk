"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResvRoutingInfoTypeFolioGuestInfoToJSON = exports.ResvRoutingInfoTypeFolioGuestInfoFromJSONTyped = exports.ResvRoutingInfoTypeFolioGuestInfoFromJSON = exports.instanceOfResvRoutingInfoTypeFolioGuestInfo = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ResvRoutingInfoTypeFolioGuestInfo interface.
 */
function instanceOfResvRoutingInfoTypeFolioGuestInfo(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfResvRoutingInfoTypeFolioGuestInfo = instanceOfResvRoutingInfoTypeFolioGuestInfo;
function ResvRoutingInfoTypeFolioGuestInfoFromJSON(json) {
    return ResvRoutingInfoTypeFolioGuestInfoFromJSONTyped(json, false);
}
exports.ResvRoutingInfoTypeFolioGuestInfoFromJSON = ResvRoutingInfoTypeFolioGuestInfoFromJSON;
function ResvRoutingInfoTypeFolioGuestInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'profileIdList': !(0, runtime_1.exists)(json, 'profileIdList') ? undefined : (json['profileIdList'].map(UniqueIDType_1.UniqueIDTypeFromJSON)),
    };
}
exports.ResvRoutingInfoTypeFolioGuestInfoFromJSONTyped = ResvRoutingInfoTypeFolioGuestInfoFromJSONTyped;
function ResvRoutingInfoTypeFolioGuestInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'profileIdList': value.profileIdList === undefined ? undefined : (value.profileIdList.map(UniqueIDType_1.UniqueIDTypeToJSON)),
    };
}
exports.ResvRoutingInfoTypeFolioGuestInfoToJSON = ResvRoutingInfoTypeFolioGuestInfoToJSON;
