/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UniqueIDType } from './UniqueIDType';
/**
 * Bed Trx Info type
 * @export
 * @interface BedTaxInfoType
 */
export interface BedTaxInfoType {
    /**
     * Arrival Date of the reservation
     * @type {string}
     * @memberof BedTaxInfoType
     */
    arrival?: string;
    /**
     * Arrival Carrier code of the mode of transportation (Airline No. or Railway No., etc.)
     * @type {string}
     * @memberof BedTaxInfoType
     */
    arrivalCarrierCode?: string;
    /**
     * Country of the guest
     * @type {string}
     * @memberof BedTaxInfoType
     */
    country?: string;
    /**
     * Departure Date with time of the reservation
     * @type {string}
     * @memberof BedTaxInfoType
     */
    departure?: string;
    /**
     * Departure Carrier code of the mode of transportation (Airline No. or Railway No., etc.)
     * @type {string}
     * @memberof BedTaxInfoType
     */
    departureCarrierCode?: string;
    /**
     * Age of the guest
     * @type {number}
     * @memberof BedTaxInfoType
     */
    guestAge?: number;
    /**
     * Guest name associated with the transaction.
     * @type {string}
     * @memberof BedTaxInfoType
     */
    guestName?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof BedTaxInfoType
     */
    guestNameId?: UniqueIDType;
    /**
     * Property associated with bed tax
     * @type {string}
     * @memberof BedTaxInfoType
     */
    hotelId?: string;
    /**
     * Nationality of the guest
     * @type {string}
     * @memberof BedTaxInfoType
     */
    nationality?: string;
    /**
     * Passport number
     * @type {string}
     * @memberof BedTaxInfoType
     */
    passPortStr?: string;
    /**
     * Passport number
     * @type {string}
     * @memberof BedTaxInfoType
     */
    passport?: string;
    /**
     * Profession of the guest
     * @type {string}
     * @memberof BedTaxInfoType
     */
    profession?: string;
    /**
     * User-defined remark.
     * @type {string}
     * @memberof BedTaxInfoType
     */
    remark?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof BedTaxInfoType
     */
    reservationNameId?: UniqueIDType;
    /**
     * Arrival Date with time of the reservation
     * @type {string}
     * @memberof BedTaxInfoType
     */
    taxArrivaldate?: string;
    /**
     * Departure Date with time of the reservation
     * @type {string}
     * @memberof BedTaxInfoType
     */
    taxDepartureDate?: string;
    /**
     * Total number of tax stays at the property
     * @type {number}
     * @memberof BedTaxInfoType
     */
    taxNoOfStays?: number;
    /**
     * Tax Registration Number
     * @type {number}
     * @memberof BedTaxInfoType
     */
    taxRegistrationNo?: number;
    /**
     * Expiration date of visa
     * @type {string}
     * @memberof BedTaxInfoType
     */
    visaExpirationDate?: string;
    /**
     * Issue date of the Visa
     * @type {string}
     * @memberof BedTaxInfoType
     */
    visaIssueDate?: string;
    /**
     * Visa Number
     * @type {string}
     * @memberof BedTaxInfoType
     */
    visaNumber?: string;
}
/**
 * Check if a given object implements the BedTaxInfoType interface.
 */
export declare function instanceOfBedTaxInfoType(value: object): boolean;
export declare function BedTaxInfoTypeFromJSON(json: any): BedTaxInfoType;
export declare function BedTaxInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BedTaxInfoType;
export declare function BedTaxInfoTypeToJSON(value?: BedTaxInfoType | null): any;
