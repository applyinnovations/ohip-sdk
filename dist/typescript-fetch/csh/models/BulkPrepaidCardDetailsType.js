"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BulkPrepaidCardDetailsTypeToJSON = exports.BulkPrepaidCardDetailsTypeFromJSONTyped = exports.BulkPrepaidCardDetailsTypeFromJSON = exports.instanceOfBulkPrepaidCardDetailsType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const PrepaidCardDetailsType_1 = require("./PrepaidCardDetailsType");
/**
 * Check if a given object implements the BulkPrepaidCardDetailsType interface.
 */
function instanceOfBulkPrepaidCardDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBulkPrepaidCardDetailsType = instanceOfBulkPrepaidCardDetailsType;
function BulkPrepaidCardDetailsTypeFromJSON(json) {
    return BulkPrepaidCardDetailsTypeFromJSONTyped(json, false);
}
exports.BulkPrepaidCardDetailsTypeFromJSON = BulkPrepaidCardDetailsTypeFromJSON;
function BulkPrepaidCardDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cardNo': !(0, runtime_1.exists)(json, 'cardNo') ? undefined : json['cardNo'],
        'cardNumberMasked': !(0, runtime_1.exists)(json, 'cardNumberMasked') ? undefined : json['cardNumberMasked'],
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'pinCode': !(0, runtime_1.exists)(json, 'pinCode') ? undefined : json['pinCode'],
        'cardDetails': !(0, runtime_1.exists)(json, 'cardDetails') ? undefined : (0, PrepaidCardDetailsType_1.PrepaidCardDetailsTypeFromJSON)(json['cardDetails']),
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !(0, runtime_1.exists)(json, 'purgeDate') ? undefined : json['purgeDate'],
        'giftCard': !(0, runtime_1.exists)(json, 'giftCard') ? undefined : json['giftCard'],
    };
}
exports.BulkPrepaidCardDetailsTypeFromJSONTyped = BulkPrepaidCardDetailsTypeFromJSONTyped;
function BulkPrepaidCardDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cardNo': value.cardNo,
        'cardNumberMasked': value.cardNumberMasked,
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'pinCode': value.pinCode,
        'cardDetails': (0, PrepaidCardDetailsType_1.PrepaidCardDetailsTypeToJSON)(value.cardDetails),
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate,
        'giftCard': value.giftCard,
    };
}
exports.BulkPrepaidCardDetailsTypeToJSON = BulkPrepaidCardDetailsTypeToJSON;
