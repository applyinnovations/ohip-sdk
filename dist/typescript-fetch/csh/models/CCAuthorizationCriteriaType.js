"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CCAuthorizationCriteriaTypeToJSON = exports.CCAuthorizationCriteriaTypeFromJSONTyped = exports.CCAuthorizationCriteriaTypeFromJSON = exports.instanceOfCCAuthorizationCriteriaType = void 0;
const runtime_1 = require("../runtime");
const CardAuthorizationTransactionType_1 = require("./CardAuthorizationTransactionType");
const CashieringPaymentMethodType_1 = require("./CashieringPaymentMethodType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const ProfileId_1 = require("./ProfileId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CCAuthorizationCriteriaType interface.
 */
function instanceOfCCAuthorizationCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCCAuthorizationCriteriaType = instanceOfCCAuthorizationCriteriaType;
function CCAuthorizationCriteriaTypeFromJSON(json) {
    return CCAuthorizationCriteriaTypeFromJSONTyped(json, false);
}
exports.CCAuthorizationCriteriaTypeFromJSON = CCAuthorizationCriteriaTypeFromJSON;
function CCAuthorizationCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationId']),
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'folioView': !(0, runtime_1.exists)(json, 'folioView') ? undefined : json['folioView'],
        'payment': !(0, runtime_1.exists)(json, 'payment') ? undefined : (0, CashieringPaymentMethodType_1.CashieringPaymentMethodTypeFromJSON)(json['payment']),
        'terminalId': !(0, runtime_1.exists)(json, 'terminalId') ? undefined : json['terminalId'],
        'incidentalAmount': !(0, runtime_1.exists)(json, 'incidentalAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['incidentalAmount']),
        'evaluateApprovalAmount': !(0, runtime_1.exists)(json, 'evaluateApprovalAmount') ? undefined : json['evaluateApprovalAmount'],
        'sourceOfAuthorization': !(0, runtime_1.exists)(json, 'sourceOfAuthorization') ? undefined : (0, CardAuthorizationTransactionType_1.CardAuthorizationTransactionTypeFromJSON)(json['sourceOfAuthorization']),
        'updateReservation': !(0, runtime_1.exists)(json, 'updateReservation') ? undefined : json['updateReservation'],
        'ccRequestId': !(0, runtime_1.exists)(json, 'ccRequestId') ? undefined : json['ccRequestId'],
    };
}
exports.CCAuthorizationCriteriaTypeFromJSONTyped = CCAuthorizationCriteriaTypeFromJSONTyped;
function CCAuthorizationCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'reservationId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationId),
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'folioView': value.folioView,
        'payment': (0, CashieringPaymentMethodType_1.CashieringPaymentMethodTypeToJSON)(value.payment),
        'terminalId': value.terminalId,
        'incidentalAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.incidentalAmount),
        'evaluateApprovalAmount': value.evaluateApprovalAmount,
        'sourceOfAuthorization': (0, CardAuthorizationTransactionType_1.CardAuthorizationTransactionTypeToJSON)(value.sourceOfAuthorization),
        'updateReservation': value.updateReservation,
        'ccRequestId': value.ccRequestId,
    };
}
exports.CCAuthorizationCriteriaTypeToJSON = CCAuthorizationCriteriaTypeToJSON;
