"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChangePaymentCriteriaTypeToJSON = exports.ChangePaymentCriteriaTypeFromJSONTyped = exports.ChangePaymentCriteriaTypeFromJSON = exports.instanceOfChangePaymentCriteriaType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ChangePaymentCriteriaType interface.
 */
function instanceOfChangePaymentCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChangePaymentCriteriaType = instanceOfChangePaymentCriteriaType;
function ChangePaymentCriteriaTypeFromJSON(json) {
    return ChangePaymentCriteriaTypeFromJSONTyped(json, false);
}
exports.ChangePaymentCriteriaTypeFromJSON = ChangePaymentCriteriaTypeFromJSON;
function ChangePaymentCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'checkNumber': !(0, runtime_1.exists)(json, 'checkNumber') ? undefined : json['checkNumber'],
        'covers': !(0, runtime_1.exists)(json, 'covers') ? undefined : json['covers'],
        'depositTransactionId': !(0, runtime_1.exists)(json, 'depositTransactionId') ? undefined : json['depositTransactionId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'reference': !(0, runtime_1.exists)(json, 'reference') ? undefined : json['reference'],
        'remark': !(0, runtime_1.exists)(json, 'remark') ? undefined : json['remark'],
        'transactionNo': !(0, runtime_1.exists)(json, 'transactionNo') ? undefined : json['transactionNo'],
    };
}
exports.ChangePaymentCriteriaTypeFromJSONTyped = ChangePaymentCriteriaTypeFromJSONTyped;
function ChangePaymentCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cashierId': value.cashierId,
        'checkNumber': value.checkNumber,
        'covers': value.covers,
        'depositTransactionId': value.depositTransactionId,
        'hotelId': value.hotelId,
        'reference': value.reference,
        'remark': value.remark,
        'transactionNo': value.transactionNo,
    };
}
exports.ChangePaymentCriteriaTypeToJSON = ChangePaymentCriteriaTypeToJSON;
