/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CashierClosureNoType } from './CashierClosureNoType';
import type { CashierTransactionType } from './CashierTransactionType';
import type { HotelCashierTransactionType } from './HotelCashierTransactionType';
import type { TrxInfoType } from './TrxInfoType';
/**
 * Cashier Shift Totals and Per Hotel transactions group by transaction code
 * @export
 * @interface CashierTransactionsType
 */
export interface CashierTransactionsType {
    /**
     *
     * @type {CashierClosureNoType}
     * @memberof CashierTransactionsType
     */
    cashierInfo?: CashierClosureNoType;
    /**
     * Hotel's transactions during Cashier Shift.
     * @type {Array<HotelCashierTransactionType>}
     * @memberof CashierTransactionsType
     */
    hotelTransactionList?: Array<HotelCashierTransactionType>;
    /**
     * Summary of all transactions during Cashier Shift.
     * @type {Array<CashierTransactionType>}
     * @memberof CashierTransactionsType
     */
    summaryTransactionList?: Array<CashierTransactionType>;
    /**
     * List of Transaction codes info.
     * @type {Array<TrxInfoType>}
     * @memberof CashierTransactionsType
     */
    trxCodesInfo?: Array<TrxInfoType>;
}
/**
 * Check if a given object implements the CashierTransactionsType interface.
 */
export declare function instanceOfCashierTransactionsType(value: object): boolean;
export declare function CashierTransactionsTypeFromJSON(json: any): CashierTransactionsType;
export declare function CashierTransactionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashierTransactionsType;
export declare function CashierTransactionsTypeToJSON(value?: CashierTransactionsType | null): any;
