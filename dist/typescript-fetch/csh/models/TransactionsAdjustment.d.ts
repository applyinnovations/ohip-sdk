/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InstanceLink } from './InstanceLink';
import type { TrxAdjustCriteriaType } from './TrxAdjustCriteriaType';
import type { WarningType } from './WarningType';
/**
 * Request to adjust a transaction. In order to adjust a transaction, a valid amount or percentage is required. A valid reason code and reason text is also required. Only negative adjustments are done. The adjust process will post a new negative transaction for the same transaction code for the current day.
 * @export
 * @interface TransactionsAdjustment
 */
export interface TransactionsAdjustment {
    /**
     *
     * @type {TrxAdjustCriteriaType}
     * @memberof TransactionsAdjustment
     */
    criteria?: TrxAdjustCriteriaType;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof TransactionsAdjustment
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof TransactionsAdjustment
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the TransactionsAdjustment interface.
 */
export declare function instanceOfTransactionsAdjustment(value: object): boolean;
export declare function TransactionsAdjustmentFromJSON(json: any): TransactionsAdjustment;
export declare function TransactionsAdjustmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsAdjustment;
export declare function TransactionsAdjustmentToJSON(value?: TransactionsAdjustment | null): any;
