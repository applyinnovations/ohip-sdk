/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AlertAreaType } from './AlertAreaType';
import type { AlertGuestInfoType } from './AlertGuestInfoType';
import type { UniqueIDType } from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import type { WelcomeOfferType } from './WelcomeOfferType';
/**
 *
 * @export
 * @interface AlertType
 */
export interface AlertType {
    /**
     * Code identifying the type of alert.
     * @type {string}
     * @memberof AlertType
     */
    code?: string;
    /**
     * Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.
     * @type {boolean}
     * @memberof AlertType
     */
    global?: boolean;
    /**
     *
     * @type {AlertAreaType}
     * @memberof AlertType
     */
    area?: AlertAreaType;
    /**
     * The alert message.
     * @type {string}
     * @memberof AlertType
     */
    description?: string;
    /**
     * Notify by showing the alert on the screen
     * @type {boolean}
     * @memberof AlertType
     */
    screenNotification?: boolean;
    /**
     * Notify by sending the message to the printer.
     * @type {boolean}
     * @memberof AlertType
     */
    printerNotification?: boolean;
    /**
     * Printer used to print the alert notification.
     * @type {string}
     * @memberof AlertType
     */
    printerName?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof AlertType
     */
    reportId?: UniqueIDType;
    /**
     * Report name of the report type.
     * @type {string}
     * @memberof AlertType
     */
    reportName?: string;
    /**
     * Report description. Mainly used for as a parameter for printing the alerts.
     * @type {string}
     * @memberof AlertType
     */
    reportDescription?: string;
    /**
     *
     * @type {AlertGuestInfoType}
     * @memberof AlertType
     */
    guestInfo?: AlertGuestInfoType;
    /**
     *
     * @type {UserDefinedFieldsType}
     * @memberof AlertType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     *
     * @type {WelcomeOfferType}
     * @memberof AlertType
     */
    welcomeOffer?: WelcomeOfferType;
    /**
     * Indicates the Reservation Stop Check In/Check Out Global Alert.
     * @type {boolean}
     * @memberof AlertType
     */
    stopCheckInCheckOut?: boolean;
    /**
     * URL that identifies the location associated with the record identified by the UniqueID.
     * @type {string}
     * @memberof AlertType
     */
    url?: string;
    /**
     * A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).
     * @type {string}
     * @memberof AlertType
     */
    type?: string;
    /**
     * The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.
     * @type {string}
     * @memberof AlertType
     */
    instance?: string;
    /**
     * Used to identify the source of the identifier (e.g., IATA, ABTA).
     * @type {string}
     * @memberof AlertType
     */
    idContext?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof AlertType
     */
    id?: string;
    /**
     * Additional identifying value assigned by the creating system.
     * @type {number}
     * @memberof AlertType
     */
    idExtension?: number;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof AlertType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof AlertType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof AlertType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof AlertType
     */
    lastModifierId?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof AlertType
     */
    purgeDate?: string;
}
/**
 * Check if a given object implements the AlertType interface.
 */
export declare function instanceOfAlertType(value: object): boolean;
export declare function AlertTypeFromJSON(json: any): AlertType;
export declare function AlertTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertType;
export declare function AlertTypeToJSON(value?: AlertType | null): any;
