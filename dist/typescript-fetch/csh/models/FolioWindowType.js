"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FolioWindowTypeToJSON = exports.FolioWindowTypeFromJSONTyped = exports.FolioWindowTypeFromJSON = exports.instanceOfFolioWindowType = void 0;
const runtime_1 = require("../runtime");
const CompAccountingType_1 = require("./CompAccountingType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const FiscalFolioInstruction_1 = require("./FiscalFolioInstruction");
const FiscalResponseType_1 = require("./FiscalResponseType");
const FolioSplitInfoType_1 = require("./FolioSplitInfoType");
const FolioType_1 = require("./FolioType");
const FolioWindowExchangeAmounts_1 = require("./FolioWindowExchangeAmounts");
const PayeeInfoType_1 = require("./PayeeInfoType");
const ReservationPaymentMethodType_1 = require("./ReservationPaymentMethodType");
const TransactionServiceTypeType_1 = require("./TransactionServiceTypeType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the FolioWindowType interface.
 */
function instanceOfFolioWindowType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfFolioWindowType = instanceOfFolioWindowType;
function FolioWindowTypeFromJSON(json) {
    return FolioWindowTypeFromJSONTyped(json, false);
}
exports.FolioWindowTypeFromJSON = FolioWindowTypeFromJSON;
function FolioWindowTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'revenue': !(0, runtime_1.exists)(json, 'revenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['revenue']),
        'folioSplitInfo': !(0, runtime_1.exists)(json, 'folioSplitInfo') ? undefined : (json['folioSplitInfo'].map(FolioSplitInfoType_1.FolioSplitInfoTypeFromJSON)),
        'payment': !(0, runtime_1.exists)(json, 'payment') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['payment']),
        'balance': !(0, runtime_1.exists)(json, 'balance') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['balance']),
        'debitRevenue': !(0, runtime_1.exists)(json, 'debitRevenue') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['debitRevenue']),
        'debitPayment': !(0, runtime_1.exists)(json, 'debitPayment') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['debitPayment']),
        'debitBalance': !(0, runtime_1.exists)(json, 'debitBalance') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['debitBalance']),
        'exchange': !(0, runtime_1.exists)(json, 'exchange') ? undefined : (0, FolioWindowExchangeAmounts_1.FolioWindowExchangeAmountsFromJSON)(json['exchange']),
        'paymentMethod': !(0, runtime_1.exists)(json, 'paymentMethod') ? undefined : (0, ReservationPaymentMethodType_1.ReservationPaymentMethodTypeFromJSON)(json['paymentMethod']),
        'payeeInfo': !(0, runtime_1.exists)(json, 'payeeInfo') ? undefined : (0, PayeeInfoType_1.PayeeInfoTypeFromJSON)(json['payeeInfo']),
        'compAccountingInfo': !(0, runtime_1.exists)(json, 'compAccountingInfo') ? undefined : (0, CompAccountingType_1.CompAccountingTypeFromJSON)(json['compAccountingInfo']),
        'storedFolioId': !(0, runtime_1.exists)(json, 'storedFolioId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['storedFolioId']),
        'storedFolioName': !(0, runtime_1.exists)(json, 'storedFolioName') ? undefined : json['storedFolioName'],
        'fiscalResponseType': !(0, runtime_1.exists)(json, 'fiscalResponseType') ? undefined : (0, FiscalResponseType_1.FiscalResponseTypeFromJSON)(json['fiscalResponseType']),
        'fiscalFolioInstruction': !(0, runtime_1.exists)(json, 'fiscalFolioInstruction') ? undefined : (0, FiscalFolioInstruction_1.FiscalFolioInstructionFromJSON)(json['fiscalFolioInstruction']),
        'folios': !(0, runtime_1.exists)(json, 'folios') ? undefined : (json['folios'].map(FolioType_1.FolioTypeFromJSON)),
        'vATOffsetAmount': !(0, runtime_1.exists)(json, 'vATOffsetAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['vATOffsetAmount']),
        'serviceTypeInfo': !(0, runtime_1.exists)(json, 'serviceTypeInfo') ? undefined : (json['serviceTypeInfo'].map(TransactionServiceTypeType_1.TransactionServiceTypeTypeFromJSON)),
        'folioWindowNo': !(0, runtime_1.exists)(json, 'folioWindowNo') ? undefined : json['folioWindowNo'],
        'internalFolioWindowID': !(0, runtime_1.exists)(json, 'internalFolioWindowID') ? undefined : json['internalFolioWindowID'],
        'emptyFolio': !(0, runtime_1.exists)(json, 'emptyFolio') ? undefined : json['emptyFolio'],
        'emptyWindow': !(0, runtime_1.exists)(json, 'emptyWindow') ? undefined : json['emptyWindow'],
        'officialBIRReceiptExists': !(0, runtime_1.exists)(json, 'officialBIRReceiptExists') ? undefined : json['officialBIRReceiptExists'],
        'simpleFolio': !(0, runtime_1.exists)(json, 'simpleFolio') ? undefined : json['simpleFolio'],
        'paymentsOnly': !(0, runtime_1.exists)(json, 'paymentsOnly') ? undefined : json['paymentsOnly'],
        'totalPages': !(0, runtime_1.exists)(json, 'totalPages') ? undefined : json['totalPages'],
        'offset': !(0, runtime_1.exists)(json, 'offset') ? undefined : json['offset'],
        'limit': !(0, runtime_1.exists)(json, 'limit') ? undefined : json['limit'],
        'hasMore': !(0, runtime_1.exists)(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !(0, runtime_1.exists)(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !(0, runtime_1.exists)(json, 'count') ? undefined : json['count'],
        'ackBIRReceiptExists': !(0, runtime_1.exists)(json, 'ackBIRReceiptExists') ? undefined : json['ackBIRReceiptExists'],
        'receiptNo': !(0, runtime_1.exists)(json, 'receiptNo') ? undefined : json['receiptNo'],
        'transactionNo': !(0, runtime_1.exists)(json, 'transactionNo') ? undefined : json['transactionNo'],
        'taxFolioPostingExists': !(0, runtime_1.exists)(json, 'taxFolioPostingExists') ? undefined : json['taxFolioPostingExists'],
    };
}
exports.FolioWindowTypeFromJSONTyped = FolioWindowTypeFromJSONTyped;
function FolioWindowTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'revenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.revenue),
        'folioSplitInfo': value.folioSplitInfo === undefined ? undefined : (value.folioSplitInfo.map(FolioSplitInfoType_1.FolioSplitInfoTypeToJSON)),
        'payment': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.payment),
        'balance': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.balance),
        'debitRevenue': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.debitRevenue),
        'debitPayment': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.debitPayment),
        'debitBalance': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.debitBalance),
        'exchange': (0, FolioWindowExchangeAmounts_1.FolioWindowExchangeAmountsToJSON)(value.exchange),
        'paymentMethod': (0, ReservationPaymentMethodType_1.ReservationPaymentMethodTypeToJSON)(value.paymentMethod),
        'payeeInfo': (0, PayeeInfoType_1.PayeeInfoTypeToJSON)(value.payeeInfo),
        'compAccountingInfo': (0, CompAccountingType_1.CompAccountingTypeToJSON)(value.compAccountingInfo),
        'storedFolioId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.storedFolioId),
        'storedFolioName': value.storedFolioName,
        'fiscalResponseType': (0, FiscalResponseType_1.FiscalResponseTypeToJSON)(value.fiscalResponseType),
        'fiscalFolioInstruction': (0, FiscalFolioInstruction_1.FiscalFolioInstructionToJSON)(value.fiscalFolioInstruction),
        'folios': value.folios === undefined ? undefined : (value.folios.map(FolioType_1.FolioTypeToJSON)),
        'vATOffsetAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.vATOffsetAmount),
        'serviceTypeInfo': value.serviceTypeInfo === undefined ? undefined : (value.serviceTypeInfo.map(TransactionServiceTypeType_1.TransactionServiceTypeTypeToJSON)),
        'folioWindowNo': value.folioWindowNo,
        'internalFolioWindowID': value.internalFolioWindowID,
        'emptyFolio': value.emptyFolio,
        'emptyWindow': value.emptyWindow,
        'officialBIRReceiptExists': value.officialBIRReceiptExists,
        'simpleFolio': value.simpleFolio,
        'paymentsOnly': value.paymentsOnly,
        'totalPages': value.totalPages,
        'offset': value.offset,
        'limit': value.limit,
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
        'ackBIRReceiptExists': value.ackBIRReceiptExists,
        'receiptNo': value.receiptNo,
        'transactionNo': value.transactionNo,
        'taxFolioPostingExists': value.taxFolioPostingExists,
    };
}
exports.FolioWindowTypeToJSON = FolioWindowTypeToJSON;
