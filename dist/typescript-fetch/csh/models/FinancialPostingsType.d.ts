/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { DetailPostingType } from './DetailPostingType';
import type { TrxInfoType } from './TrxInfoType';
/**
 * Collection of Reservations and their information.
 * @export
 * @interface FinancialPostingsType
 */
export interface FinancialPostingsType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof FinancialPostingsType
     */
    overallTotal?: CurrencyAmountType;
    /**
     * Details of the transaction(Posting).
     * @type {Array<DetailPostingType>}
     * @memberof FinancialPostingsType
     */
    postings?: Array<DetailPostingType>;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof FinancialPostingsType
     */
    totalCredit?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof FinancialPostingsType
     */
    totalDebit?: CurrencyAmountType;
    /**
     * Indicates the number of journal entries.
     * @type {number}
     * @memberof FinancialPostingsType
     */
    totalEntriesCount?: number;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof FinancialPostingsType
     */
    totalForAllPages?: CurrencyAmountType;
    /**
     * List of Transaction codes info.
     * @type {Array<TrxInfoType>}
     * @memberof FinancialPostingsType
     */
    transactionCodes?: Array<TrxInfoType>;
}
/**
 * Check if a given object implements the FinancialPostingsType interface.
 */
export declare function instanceOfFinancialPostingsType(value: object): boolean;
export declare function FinancialPostingsTypeFromJSON(json: any): FinancialPostingsType;
export declare function FinancialPostingsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialPostingsType;
export declare function FinancialPostingsTypeToJSON(value?: FinancialPostingsType | null): any;
