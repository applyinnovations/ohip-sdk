"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutReservationTypeToJSON = exports.CheckoutReservationTypeFromJSONTyped = exports.CheckoutReservationTypeFromJSON = exports.instanceOfCheckoutReservationType = void 0;
const runtime_1 = require("../runtime");
const CashieringEventType_1 = require("./CashieringEventType");
const CheckoutInstructionsType_1 = require("./CheckoutInstructionsType");
const UniqueIDListType_1 = require("./UniqueIDListType");
/**
 * Check if a given object implements the CheckoutReservationType interface.
 */
function instanceOfCheckoutReservationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCheckoutReservationType = instanceOfCheckoutReservationType;
function CheckoutReservationTypeFromJSON(json) {
    return CheckoutReservationTypeFromJSONTyped(json, false);
}
exports.CheckoutReservationTypeFromJSON = CheckoutReservationTypeFromJSON;
function CheckoutReservationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'autoCheckout': !(0, runtime_1.exists)(json, 'autoCheckout') ? undefined : json['autoCheckout'],
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'checkoutInstr': !(0, runtime_1.exists)(json, 'checkoutInstr') ? undefined : (0, CheckoutInstructionsType_1.CheckoutInstructionsTypeFromJSON)(json['checkoutInstr']),
        'checkoutWithOpenFolio': !(0, runtime_1.exists)(json, 'checkoutWithOpenFolio') ? undefined : json['checkoutWithOpenFolio'],
        'eventType': !(0, runtime_1.exists)(json, 'eventType') ? undefined : (0, CashieringEventType_1.CashieringEventTypeFromJSON)(json['eventType']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'mobileCheckout': !(0, runtime_1.exists)(json, 'mobileCheckout') ? undefined : json['mobileCheckout'],
        'mobileCheckoutFolioEmail': !(0, runtime_1.exists)(json, 'mobileCheckoutFolioEmail') ? undefined : json['mobileCheckoutFolioEmail'],
        'reservationIdList': !(0, runtime_1.exists)(json, 'reservationIdList') ? undefined : (0, UniqueIDListType_1.UniqueIDListTypeFromJSON)(json['reservationIdList']),
        'stopCheckout': !(0, runtime_1.exists)(json, 'stopCheckout') ? undefined : json['stopCheckout'],
    };
}
exports.CheckoutReservationTypeFromJSONTyped = CheckoutReservationTypeFromJSONTyped;
function CheckoutReservationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'autoCheckout': value.autoCheckout,
        'cashierId': value.cashierId,
        'checkoutInstr': (0, CheckoutInstructionsType_1.CheckoutInstructionsTypeToJSON)(value.checkoutInstr),
        'checkoutWithOpenFolio': value.checkoutWithOpenFolio,
        'eventType': (0, CashieringEventType_1.CashieringEventTypeToJSON)(value.eventType),
        'hotelId': value.hotelId,
        'mobileCheckout': value.mobileCheckout,
        'mobileCheckoutFolioEmail': value.mobileCheckoutFolioEmail,
        'reservationIdList': (0, UniqueIDListType_1.UniqueIDListTypeToJSON)(value.reservationIdList),
        'stopCheckout': value.stopCheckout,
    };
}
exports.CheckoutReservationTypeToJSON = CheckoutReservationTypeToJSON;
