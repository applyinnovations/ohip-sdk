/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Invoice information returned from the fiscal service.
 * @export
 * @interface FiscalResponseInfoType
 */
export interface FiscalResponseInfoType {
    /**
     * Uniquely identifies data sent from FLIP.
     * @type {number}
     * @memberof FiscalResponseInfoType
     */
    fiscalResponseId?: number;
    /**
     * Fiscal terminal invoice number returned from fiscal service.
     * @type {number}
     * @memberof FiscalResponseInfoType
     */
    invoiceNo?: number;
}

/**
 * Check if a given object implements the FiscalResponseInfoType interface.
 */
export function instanceOfFiscalResponseInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalResponseInfoTypeFromJSON(json: any): FiscalResponseInfoType {
    return FiscalResponseInfoTypeFromJSONTyped(json, false);
}

export function FiscalResponseInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalResponseInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fiscalResponseId': !exists(json, 'fiscalResponseId') ? undefined : json['fiscalResponseId'],
        'invoiceNo': !exists(json, 'invoiceNo') ? undefined : json['invoiceNo'],
    };
}

export function FiscalResponseInfoTypeToJSON(value?: FiscalResponseInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fiscalResponseId': value.fiscalResponseId,
        'invoiceNo': value.invoiceNo,
    };
}

