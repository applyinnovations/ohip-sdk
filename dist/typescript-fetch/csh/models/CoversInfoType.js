"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoversInfoTypeToJSON = exports.CoversInfoTypeFromJSONTyped = exports.CoversInfoTypeFromJSON = exports.instanceOfCoversInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CoversInfoType interface.
 */
function instanceOfCoversInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCoversInfoType = instanceOfCoversInfoType;
function CoversInfoTypeFromJSON(json) {
    return CoversInfoTypeFromJSONTyped(json, false);
}
exports.CoversInfoTypeFromJSON = CoversInfoTypeFromJSON;
function CoversInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'transactionCode': !(0, runtime_1.exists)(json, 'transactionCode') ? undefined : json['transactionCode'],
        'transactionDescription': !(0, runtime_1.exists)(json, 'transactionDescription') ? undefined : json['transactionDescription'],
        'coversDate': !(0, runtime_1.exists)(json, 'coversDate') ? undefined : json['coversDate'],
        'revenueToday': !(0, runtime_1.exists)(json, 'revenueToday') ? undefined : json['revenueToday'],
        'coversToday': !(0, runtime_1.exists)(json, 'coversToday') ? undefined : json['coversToday'],
        'coversJournal': !(0, runtime_1.exists)(json, 'coversJournal') ? undefined : json['coversJournal'],
        'coversMtd': !(0, runtime_1.exists)(json, 'coversMtd') ? undefined : json['coversMtd'],
        'coversYtd': !(0, runtime_1.exists)(json, 'coversYtd') ? undefined : json['coversYtd'],
    };
}
exports.CoversInfoTypeFromJSONTyped = CoversInfoTypeFromJSONTyped;
function CoversInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'transactionCode': value.transactionCode,
        'transactionDescription': value.transactionDescription,
        'coversDate': value.coversDate,
        'revenueToday': value.revenueToday,
        'coversToday': value.coversToday,
        'coversJournal': value.coversJournal,
        'coversMtd': value.coversMtd,
        'coversYtd': value.coversYtd,
    };
}
exports.CoversInfoTypeToJSON = CoversInfoTypeToJSON;
