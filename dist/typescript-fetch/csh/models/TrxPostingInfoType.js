"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrxPostingInfoTypeToJSON = exports.TrxPostingInfoTypeFromJSONTyped = exports.TrxPostingInfoTypeFromJSON = exports.instanceOfTrxPostingInfoType = void 0;
const runtime_1 = require("../runtime");
const ArticleInfoType_1 = require("./ArticleInfoType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the TrxPostingInfoType interface.
 */
function instanceOfTrxPostingInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTrxPostingInfoType = instanceOfTrxPostingInfoType;
function TrxPostingInfoTypeFromJSON(json) {
    return TrxPostingInfoTypeFromJSONTyped(json, false);
}
exports.TrxPostingInfoTypeFromJSON = TrxPostingInfoTypeFromJSON;
function TrxPostingInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'articles': !(0, runtime_1.exists)(json, 'articles') ? undefined : (json['articles'].map(ArticleInfoType_1.ArticleInfoTypeFromJSON)),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'maximumPrice': !(0, runtime_1.exists)(json, 'maximumPrice') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['maximumPrice']),
        'minimumPrice': !(0, runtime_1.exists)(json, 'minimumPrice') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['minimumPrice']),
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['price']),
        'printTrxReceipt': !(0, runtime_1.exists)(json, 'printTrxReceipt') ? undefined : json['printTrxReceipt'],
        'routingInstructionsId': !(0, runtime_1.exists)(json, 'routingInstructionsId') ? undefined : json['routingInstructionsId'],
        'transactionCode': !(0, runtime_1.exists)(json, 'transactionCode') ? undefined : json['transactionCode'],
        'transactionGroup': !(0, runtime_1.exists)(json, 'transactionGroup') ? undefined : json['transactionGroup'],
        'transactionSubGroup': !(0, runtime_1.exists)(json, 'transactionSubGroup') ? undefined : json['transactionSubGroup'],
        'trxServiceType': !(0, runtime_1.exists)(json, 'trxServiceType') ? undefined : json['trxServiceType'],
        'universalProductCode': !(0, runtime_1.exists)(json, 'universalProductCode') ? undefined : json['universalProductCode'],
    };
}
exports.TrxPostingInfoTypeFromJSONTyped = TrxPostingInfoTypeFromJSONTyped;
function TrxPostingInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'articles': value.articles === undefined ? undefined : (value.articles.map(ArticleInfoType_1.ArticleInfoTypeToJSON)),
        'description': value.description,
        'hotelId': value.hotelId,
        'maximumPrice': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.maximumPrice),
        'minimumPrice': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.minimumPrice),
        'price': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.price),
        'printTrxReceipt': value.printTrxReceipt,
        'routingInstructionsId': value.routingInstructionsId,
        'transactionCode': value.transactionCode,
        'transactionGroup': value.transactionGroup,
        'transactionSubGroup': value.transactionSubGroup,
        'trxServiceType': value.trxServiceType,
        'universalProductCode': value.universalProductCode,
    };
}
exports.TrxPostingInfoTypeToJSON = TrxPostingInfoTypeToJSON;
