/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DateRangeType } from './DateRangeType';
import type { ErrorType } from './ErrorType';
import type { VaultHTTPTransactionMessageTypeAuthorizationApproval } from './VaultHTTPTransactionMessageTypeAuthorizationApproval';
import type { VaultHTTPTransactionType } from './VaultHTTPTransactionType';
/**
 *
 * @export
 * @interface VaultHTTPTransactionMessageType
 */
export interface VaultHTTPTransactionMessageType {
    /**
     * The hotel context of the transaction.
     * @type {string}
     * @memberof VaultHTTPTransactionMessageType
     */
    hotelId?: string;
    /**
     * The HTTP request entity content. The needs to use escape characters.
     * @type {string}
     * @memberof VaultHTTPTransactionMessageType
     */
    escapedRequestContent?: string;
    /**
     * The HTTP response entity content. The needs to use escape characters.
     * @type {string}
     * @memberof VaultHTTPTransactionMessageType
     */
    escapedResponseContent?: string;
    /**
     *
     * @type {DateRangeType}
     * @memberof VaultHTTPTransactionMessageType
     */
    hTTPTransactionDuration?: DateRangeType;
    /**
     *
     * @type {ErrorType}
     * @memberof VaultHTTPTransactionMessageType
     */
    hTTPError?: ErrorType;
    /**
     *
     * @type {VaultHTTPTransactionMessageTypeAuthorizationApproval}
     * @memberof VaultHTTPTransactionMessageType
     */
    authorizationApproval?: VaultHTTPTransactionMessageTypeAuthorizationApproval;
    /**
     *
     * @type {VaultHTTPTransactionType}
     * @memberof VaultHTTPTransactionMessageType
     */
    type?: VaultHTTPTransactionType;
}
/**
 * Check if a given object implements the VaultHTTPTransactionMessageType interface.
 */
export declare function instanceOfVaultHTTPTransactionMessageType(value: object): boolean;
export declare function VaultHTTPTransactionMessageTypeFromJSON(json: any): VaultHTTPTransactionMessageType;
export declare function VaultHTTPTransactionMessageTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultHTTPTransactionMessageType;
export declare function VaultHTTPTransactionMessageTypeToJSON(value?: VaultHTTPTransactionMessageType | null): any;
