"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CCBatchSettlementStatusTypeToJSON = exports.CCBatchSettlementStatusTypeFromJSONTyped = exports.CCBatchSettlementStatusTypeFromJSON = exports.instanceOfCCBatchSettlementStatusType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CCBatchSettlementStatusType interface.
 */
function instanceOfCCBatchSettlementStatusType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCCBatchSettlementStatusType = instanceOfCCBatchSettlementStatusType;
function CCBatchSettlementStatusTypeFromJSON(json) {
    return CCBatchSettlementStatusTypeFromJSONTyped(json, false);
}
exports.CCBatchSettlementStatusTypeFromJSON = CCBatchSettlementStatusTypeFromJSON;
function CCBatchSettlementStatusTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'reason': !(0, runtime_1.exists)(json, 'reason') ? undefined : json['reason'],
        'settlementId': !(0, runtime_1.exists)(json, 'settlementId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['settlementId']),
        'settlementStatus': !(0, runtime_1.exists)(json, 'settlementStatus') ? undefined : json['settlementStatus'],
    };
}
exports.CCBatchSettlementStatusTypeFromJSONTyped = CCBatchSettlementStatusTypeFromJSONTyped;
function CCBatchSettlementStatusTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'reason': value.reason,
        'settlementId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.settlementId),
        'settlementStatus': value.settlementStatus,
    };
}
exports.CCBatchSettlementStatusTypeToJSON = CCBatchSettlementStatusTypeToJSON;
