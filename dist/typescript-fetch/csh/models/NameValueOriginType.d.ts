/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { NameValueModuleType } from './NameValueModuleType';
/**
 * Contains origin details.
 * @export
 * @interface NameValueOriginType
 */
export interface NameValueOriginType {
    /**
     * Contains destination column for Origin.
     * @type {string}
     * @memberof NameValueOriginType
     */
    destination?: string;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof NameValueOriginType
     */
    id?: string;
    /**
     *
     * @type {NameValueModuleType}
     * @memberof NameValueOriginType
     */
    originName?: NameValueModuleType;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof NameValueOriginType
     */
    type?: string;
}
/**
 * Check if a given object implements the NameValueOriginType interface.
 */
export declare function instanceOfNameValueOriginType(value: object): boolean;
export declare function NameValueOriginTypeFromJSON(json: any): NameValueOriginType;
export declare function NameValueOriginTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): NameValueOriginType;
export declare function NameValueOriginTypeToJSON(value?: NameValueOriginType | null): any;
