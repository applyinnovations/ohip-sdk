/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashierClosureNoType } from './CashierClosureNoType';
import {
    CashierClosureNoTypeFromJSON,
    CashierClosureNoTypeFromJSONTyped,
    CashierClosureNoTypeToJSON,
} from './CashierClosureNoType';
import type { CashierTransactionType } from './CashierTransactionType';
import {
    CashierTransactionTypeFromJSON,
    CashierTransactionTypeFromJSONTyped,
    CashierTransactionTypeToJSON,
} from './CashierTransactionType';
import type { HotelCashierTransactionType } from './HotelCashierTransactionType';
import {
    HotelCashierTransactionTypeFromJSON,
    HotelCashierTransactionTypeFromJSONTyped,
    HotelCashierTransactionTypeToJSON,
} from './HotelCashierTransactionType';
import type { TrxInfoType } from './TrxInfoType';
import {
    TrxInfoTypeFromJSON,
    TrxInfoTypeFromJSONTyped,
    TrxInfoTypeToJSON,
} from './TrxInfoType';

/**
 * Cashier Shift Totals and Per Hotel transactions group by transaction code
 * @export
 * @interface CashierTransactionsType
 */
export interface CashierTransactionsType {
    /**
     * 
     * @type {CashierClosureNoType}
     * @memberof CashierTransactionsType
     */
    cashierInfo?: CashierClosureNoType;
    /**
     * Summary of all transactions during Cashier Shift.
     * @type {Array<CashierTransactionType>}
     * @memberof CashierTransactionsType
     */
    summaryTransactionList?: Array<CashierTransactionType>;
    /**
     * Hotel's transactions during Cashier Shift.
     * @type {Array<HotelCashierTransactionType>}
     * @memberof CashierTransactionsType
     */
    hotelTransactionList?: Array<HotelCashierTransactionType>;
    /**
     * List of Transaction codes info.
     * @type {Array<TrxInfoType>}
     * @memberof CashierTransactionsType
     */
    trxCodesInfo?: Array<TrxInfoType>;
}

/**
 * Check if a given object implements the CashierTransactionsType interface.
 */
export function instanceOfCashierTransactionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashierTransactionsTypeFromJSON(json: any): CashierTransactionsType {
    return CashierTransactionsTypeFromJSONTyped(json, false);
}

export function CashierTransactionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashierTransactionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierInfo': !exists(json, 'cashierInfo') ? undefined : CashierClosureNoTypeFromJSON(json['cashierInfo']),
        'summaryTransactionList': !exists(json, 'summaryTransactionList') ? undefined : ((json['summaryTransactionList'] as Array<any>).map(CashierTransactionTypeFromJSON)),
        'hotelTransactionList': !exists(json, 'hotelTransactionList') ? undefined : ((json['hotelTransactionList'] as Array<any>).map(HotelCashierTransactionTypeFromJSON)),
        'trxCodesInfo': !exists(json, 'trxCodesInfo') ? undefined : ((json['trxCodesInfo'] as Array<any>).map(TrxInfoTypeFromJSON)),
    };
}

export function CashierTransactionsTypeToJSON(value?: CashierTransactionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierInfo': CashierClosureNoTypeToJSON(value.cashierInfo),
        'summaryTransactionList': value.summaryTransactionList === undefined ? undefined : ((value.summaryTransactionList as Array<any>).map(CashierTransactionTypeToJSON)),
        'hotelTransactionList': value.hotelTransactionList === undefined ? undefined : ((value.hotelTransactionList as Array<any>).map(HotelCashierTransactionTypeToJSON)),
        'trxCodesInfo': value.trxCodesInfo === undefined ? undefined : ((value.trxCodesInfo as Array<any>).map(TrxInfoTypeToJSON)),
    };
}

