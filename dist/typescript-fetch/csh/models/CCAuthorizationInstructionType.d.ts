/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CCAuthorizationInstructionTypeAuthorizationSetup } from './CCAuthorizationInstructionTypeAuthorizationSetup';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { ReservationInfoType } from './ReservationInfoType';
import type { ReservationPaymentMethodType } from './ReservationPaymentMethodType';
/**
 * Contains the details to use for a credit card authorization.
 * @export
 * @interface CCAuthorizationInstructionType
 */
export interface CCAuthorizationInstructionType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof CCAuthorizationInstructionType
     */
    currentApprovalAmount?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof CCAuthorizationInstructionType
     */
    totalApprovalAmount?: CurrencyAmountType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof CCAuthorizationInstructionType
     */
    incidentalAmount?: CurrencyAmountType;
    /**
     *
     * @type {CCAuthorizationInstructionTypeAuthorizationSetup}
     * @memberof CCAuthorizationInstructionType
     */
    authorizationSetup?: CCAuthorizationInstructionTypeAuthorizationSetup;
    /**
     *
     * @type {ReservationInfoType}
     * @memberof CCAuthorizationInstructionType
     */
    reservationDetail?: ReservationInfoType;
    /**
     *
     * @type {ReservationPaymentMethodType}
     * @memberof CCAuthorizationInstructionType
     */
    paymentMethodInfo?: ReservationPaymentMethodType;
    /**
     * Unique sequence for this authorization.
     * @type {string}
     * @memberof CCAuthorizationInstructionType
     */
    sequenceNumber?: string;
    /**
     * Transaction type of the authorization(INIT or SUPP).
     * @type {string}
     * @memberof CCAuthorizationInstructionType
     */
    transactionType?: string;
    /**
     * Unique Authorization Sequence for the authorization and settlement.
     * @type {number}
     * @memberof CCAuthorizationInstructionType
     */
    originalAuthSequence?: number;
    /**
     * Usage type used.
     * @type {string}
     * @memberof CCAuthorizationInstructionType
     */
    usageType?: string;
    /**
     * Vendor transaction id for the authorization.
     * @type {string}
     * @memberof CCAuthorizationInstructionType
     */
    vendorTranId?: string;
    /**
     * Flag to indicate if initial authorization required.
     * @type {boolean}
     * @memberof CCAuthorizationInstructionType
     */
    initialAuthorizationRequired?: boolean;
    /**
     * The current date of the Property.
     * @type {string}
     * @memberof CCAuthorizationInstructionType
     */
    businessDate?: string;
}
/**
 * Check if a given object implements the CCAuthorizationInstructionType interface.
 */
export declare function instanceOfCCAuthorizationInstructionType(value: object): boolean;
export declare function CCAuthorizationInstructionTypeFromJSON(json: any): CCAuthorizationInstructionType;
export declare function CCAuthorizationInstructionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CCAuthorizationInstructionType;
export declare function CCAuthorizationInstructionTypeToJSON(value?: CCAuthorizationInstructionType | null): any;
