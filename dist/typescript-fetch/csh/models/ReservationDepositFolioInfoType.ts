/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';
import type { DepositMaturityType } from './DepositMaturityType';
import {
    DepositMaturityTypeFromJSON,
    DepositMaturityTypeFromJSONTyped,
    DepositMaturityTypeToJSON,
} from './DepositMaturityType';
import type { DepositPostingType } from './DepositPostingType';
import {
    DepositPostingTypeFromJSON,
    DepositPostingTypeFromJSONTyped,
    DepositPostingTypeToJSON,
} from './DepositPostingType';
import type { DepositType } from './DepositType';
import {
    DepositTypeFromJSON,
    DepositTypeFromJSONTyped,
    DepositTypeToJSON,
} from './DepositType';
import type { ProjectedRevenueType } from './ProjectedRevenueType';
import {
    ProjectedRevenueTypeFromJSON,
    ProjectedRevenueTypeFromJSONTyped,
    ProjectedRevenueTypeToJSON,
} from './ProjectedRevenueType';
import type { ReservationInfoType } from './ReservationInfoType';
import {
    ReservationInfoTypeFromJSON,
    ReservationInfoTypeFromJSONTyped,
    ReservationInfoTypeToJSON,
} from './ReservationInfoType';
import type { ReservationPolicySummaryType } from './ReservationPolicySummaryType';
import {
    ReservationPolicySummaryTypeFromJSON,
    ReservationPolicySummaryTypeFromJSONTyped,
    ReservationPolicySummaryTypeToJSON,
} from './ReservationPolicySummaryType';

/**
 * Detailed information of a reservation and its deposit payment posting information.
 * @export
 * @interface ReservationDepositFolioInfoType
 */
export interface ReservationDepositFolioInfoType {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ReservationDepositFolioInfoType
     */
    totalAmountDue?: CurrencyAmountType;
    /**
     * 
     * @type {ReservationInfoType}
     * @memberof ReservationDepositFolioInfoType
     */
    reservationInfo?: ReservationInfoType;
    /**
     * A List of Deposit Payments.
     * @type {Array<DepositPostingType>}
     * @memberof ReservationDepositFolioInfoType
     */
    deposits?: Array<DepositPostingType>;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ReservationDepositFolioInfoType
     */
    totalAmountTransferrable?: CurrencyAmountType;
    /**
     * 
     * @type {ProjectedRevenueType}
     * @memberof ReservationDepositFolioInfoType
     */
    projectedRevenue?: ProjectedRevenueType;
    /**
     * 
     * @type {ReservationPolicySummaryType}
     * @memberof ReservationDepositFolioInfoType
     */
    policySummaryInfo?: ReservationPolicySummaryType;
    /**
     * 
     * @type {DepositType}
     * @memberof ReservationDepositFolioInfoType
     */
    depositType?: DepositType;
    /**
     * 
     * @type {DepositMaturityType}
     * @memberof ReservationDepositFolioInfoType
     */
    depositMaturityType?: DepositMaturityType;
}

/**
 * Check if a given object implements the ReservationDepositFolioInfoType interface.
 */
export function instanceOfReservationDepositFolioInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReservationDepositFolioInfoTypeFromJSON(json: any): ReservationDepositFolioInfoType {
    return ReservationDepositFolioInfoTypeFromJSONTyped(json, false);
}

export function ReservationDepositFolioInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationDepositFolioInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalAmountDue': !exists(json, 'totalAmountDue') ? undefined : CurrencyAmountTypeFromJSON(json['totalAmountDue']),
        'reservationInfo': !exists(json, 'reservationInfo') ? undefined : ReservationInfoTypeFromJSON(json['reservationInfo']),
        'deposits': !exists(json, 'deposits') ? undefined : ((json['deposits'] as Array<any>).map(DepositPostingTypeFromJSON)),
        'totalAmountTransferrable': !exists(json, 'totalAmountTransferrable') ? undefined : CurrencyAmountTypeFromJSON(json['totalAmountTransferrable']),
        'projectedRevenue': !exists(json, 'projectedRevenue') ? undefined : ProjectedRevenueTypeFromJSON(json['projectedRevenue']),
        'policySummaryInfo': !exists(json, 'policySummaryInfo') ? undefined : ReservationPolicySummaryTypeFromJSON(json['policySummaryInfo']),
        'depositType': !exists(json, 'depositType') ? undefined : DepositTypeFromJSON(json['depositType']),
        'depositMaturityType': !exists(json, 'depositMaturityType') ? undefined : DepositMaturityTypeFromJSON(json['depositMaturityType']),
    };
}

export function ReservationDepositFolioInfoTypeToJSON(value?: ReservationDepositFolioInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalAmountDue': CurrencyAmountTypeToJSON(value.totalAmountDue),
        'reservationInfo': ReservationInfoTypeToJSON(value.reservationInfo),
        'deposits': value.deposits === undefined ? undefined : ((value.deposits as Array<any>).map(DepositPostingTypeToJSON)),
        'totalAmountTransferrable': CurrencyAmountTypeToJSON(value.totalAmountTransferrable),
        'projectedRevenue': ProjectedRevenueTypeToJSON(value.projectedRevenue),
        'policySummaryInfo': ReservationPolicySummaryTypeToJSON(value.policySummaryInfo),
        'depositType': DepositTypeToJSON(value.depositType),
        'depositMaturityType': DepositMaturityTypeToJSON(value.depositMaturityType),
    };
}

