/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ExchangeRateCalculationType } from './ExchangeRateCalculationType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Operation to calculate foreign currency exchange.
 * @export
 * @interface ForeignCurrencyCriteria
 */
export interface ForeignCurrencyCriteria {
    /**
     * Flag to add exchange commission in order to recalculate payment amount in billing.
     * @type {boolean}
     * @memberof ForeignCurrencyCriteria
     */
    addExchangeCommission?: boolean;
    /**
     * A set of currencies that need to be converted.
     * @type {Array<ExchangeRateCalculationType>}
     * @memberof ForeignCurrencyCriteria
     */
    exchange?: Array<ExchangeRateCalculationType>;
    /**
     * Flag to include exchange information text in response.
     * @type {boolean}
     * @memberof ForeignCurrencyCriteria
     */
    includeExchangeInformation?: boolean;
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof ForeignCurrencyCriteria
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof ForeignCurrencyCriteria
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the ForeignCurrencyCriteria interface.
 */
export declare function instanceOfForeignCurrencyCriteria(value: object): boolean;
export declare function ForeignCurrencyCriteriaFromJSON(json: any): ForeignCurrencyCriteria;
export declare function ForeignCurrencyCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForeignCurrencyCriteria;
export declare function ForeignCurrencyCriteriaToJSON(value?: ForeignCurrencyCriteria | null): any;
