/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CardTypeType } from './CardTypeType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { ReservationId } from './ReservationId';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Details of the reservation with the folio balance equal or higher to the credit limit
 * @export
 * @interface ReservationOveragePaymentType
 */
export interface ReservationOveragePaymentType {
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ReservationOveragePaymentType
     */
    balance?: CurrencyAmountType;
    /**
     * Expiration date of the credit card (mask based on PCI compliance)
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    cardExpirationDate?: string;
    /**
     *
     * @type {CardTypeType}
     * @memberof ReservationOveragePaymentType
     */
    cardType?: CardTypeType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ReservationOveragePaymentType
     */
    creditCardId?: UniqueIDType;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ReservationOveragePaymentType
     */
    creditCardLimit?: CurrencyAmountType;
    /**
     * Credit Card number / token (mask based on PCI compliance).
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    creditCardNo?: string;
    /**
     * Guest name of the listed reservation.
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    guestName?: string;
    /**
     * Defines the unique identifier for this payment method.
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    paymentMethod?: string;
    /**
     *
     * @type {ReservationId}
     * @memberof ReservationOveragePaymentType
     */
    reservationId?: ReservationId;
    /**
     * Room number on the reservation.
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    roomId?: string;
    /**
     * Identifies the user defined credit card type if credit card type from a defined list is not provided.
     * @type {string}
     * @memberof ReservationOveragePaymentType
     */
    userDefinedCardType?: string;
    /**
     * Window number associated where the balance is equal or higher to the credit limit on the method of payment.
     * @type {number}
     * @memberof ReservationOveragePaymentType
     */
    windowNo?: number;
}
/**
 * Check if a given object implements the ReservationOveragePaymentType interface.
 */
export declare function instanceOfReservationOveragePaymentType(value: object): boolean;
export declare function ReservationOveragePaymentTypeFromJSON(json: any): ReservationOveragePaymentType;
export declare function ReservationOveragePaymentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationOveragePaymentType;
export declare function ReservationOveragePaymentTypeToJSON(value?: ReservationOveragePaymentType | null): any;
