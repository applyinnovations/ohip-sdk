"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReceiptSummaryTypeToJSON = exports.ReceiptSummaryTypeFromJSONTyped = exports.ReceiptSummaryTypeFromJSON = exports.instanceOfReceiptSummaryType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const PayeeInfoType_1 = require("./PayeeInfoType");
const ReceiptType_1 = require("./ReceiptType");
/**
 * Check if a given object implements the ReceiptSummaryType interface.
 */
function instanceOfReceiptSummaryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfReceiptSummaryType = instanceOfReceiptSummaryType;
function ReceiptSummaryTypeFromJSON(json) {
    return ReceiptSummaryTypeFromJSONTyped(json, false);
}
exports.ReceiptSummaryTypeFromJSON = ReceiptSummaryTypeFromJSON;
function ReceiptSummaryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'payeeInfo': !(0, runtime_1.exists)(json, 'payeeInfo') ? undefined : (0, PayeeInfoType_1.PayeeInfoTypeFromJSON)(json['payeeInfo']),
        'receiptAmount': !(0, runtime_1.exists)(json, 'receiptAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['receiptAmount']),
        'customNumbers': !(0, runtime_1.exists)(json, 'customNumbers') ? undefined : json['customNumbers'],
        'start': !(0, runtime_1.exists)(json, 'start') ? undefined : json['start'],
        'end': !(0, runtime_1.exists)(json, 'end') ? undefined : json['end'],
        'receiptNo': !(0, runtime_1.exists)(json, 'receiptNo') ? undefined : json['receiptNo'],
        'receiptTypeDescription': !(0, runtime_1.exists)(json, 'receiptTypeDescription') ? undefined : json['receiptTypeDescription'],
        'transactionNo': !(0, runtime_1.exists)(json, 'transactionNo') ? undefined : json['transactionNo'],
        'receiptType': !(0, runtime_1.exists)(json, 'receiptType') ? undefined : (0, ReceiptType_1.ReceiptTypeFromJSON)(json['receiptType']),
        'taxInvoice': !(0, runtime_1.exists)(json, 'taxInvoice') ? undefined : json['taxInvoice'],
    };
}
exports.ReceiptSummaryTypeFromJSONTyped = ReceiptSummaryTypeFromJSONTyped;
function ReceiptSummaryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'payeeInfo': (0, PayeeInfoType_1.PayeeInfoTypeToJSON)(value.payeeInfo),
        'receiptAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.receiptAmount),
        'customNumbers': value.customNumbers,
        'start': value.start,
        'end': value.end,
        'receiptNo': value.receiptNo,
        'receiptTypeDescription': value.receiptTypeDescription,
        'transactionNo': value.transactionNo,
        'receiptType': (0, ReceiptType_1.ReceiptTypeToJSON)(value.receiptType),
        'taxInvoice': value.taxInvoice,
    };
}
exports.ReceiptSummaryTypeToJSON = ReceiptSummaryTypeToJSON;
