"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CancelPrepaidCardTransactionCriteriaToJSON = exports.CancelPrepaidCardTransactionCriteriaFromJSONTyped = exports.CancelPrepaidCardTransactionCriteriaFromJSON = exports.instanceOfCancelPrepaidCardTransactionCriteria = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const PrepaidCardTrxTypeType_1 = require("./PrepaidCardTrxTypeType");
const SaleCriteriaType_1 = require("./SaleCriteriaType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CancelPrepaidCardTransactionCriteria interface.
 */
function instanceOfCancelPrepaidCardTransactionCriteria(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCancelPrepaidCardTransactionCriteria = instanceOfCancelPrepaidCardTransactionCriteria;
function CancelPrepaidCardTransactionCriteriaFromJSON(json) {
    return CancelPrepaidCardTransactionCriteriaFromJSONTyped(json, false);
}
exports.CancelPrepaidCardTransactionCriteriaFromJSON = CancelPrepaidCardTransactionCriteriaFromJSON;
function CancelPrepaidCardTransactionCriteriaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'cardNo': !(0, runtime_1.exists)(json, 'cardNo') ? undefined : json['cardNo'],
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'interfaceId': !(0, runtime_1.exists)(json, 'interfaceId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['interfaceId']),
        'pin': !(0, runtime_1.exists)(json, 'pin') ? undefined : json['pin'],
        'postChargeToRoom': !(0, runtime_1.exists)(json, 'postChargeToRoom') ? undefined : json['postChargeToRoom'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['profileId']),
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationId']),
        'saleCriteria': !(0, runtime_1.exists)(json, 'saleCriteria') ? undefined : (0, SaleCriteriaType_1.SaleCriteriaTypeFromJSON)(json['saleCriteria']),
        'transactionNo': !(0, runtime_1.exists)(json, 'transactionNo') ? undefined : json['transactionNo'],
        'transactionTye': !(0, runtime_1.exists)(json, 'transactionTye') ? undefined : (0, PrepaidCardTrxTypeType_1.PrepaidCardTrxTypeTypeFromJSON)(json['transactionTye']),
        'vendorTransactionNo': !(0, runtime_1.exists)(json, 'vendorTransactionNo') ? undefined : json['vendorTransactionNo'],
    };
}
exports.CancelPrepaidCardTransactionCriteriaFromJSONTyped = CancelPrepaidCardTransactionCriteriaFromJSONTyped;
function CancelPrepaidCardTransactionCriteriaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'cardNo': value.cardNo,
        'cashierId': value.cashierId,
        'hotelId': value.hotelId,
        'interfaceId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.interfaceId),
        'pin': value.pin,
        'postChargeToRoom': value.postChargeToRoom,
        'profileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.profileId),
        'reservationId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationId),
        'saleCriteria': (0, SaleCriteriaType_1.SaleCriteriaTypeToJSON)(value.saleCriteria),
        'transactionNo': value.transactionNo,
        'transactionTye': (0, PrepaidCardTrxTypeType_1.PrepaidCardTrxTypeTypeToJSON)(value.transactionTye),
        'vendorTransactionNo': value.vendorTransactionNo,
    };
}
exports.CancelPrepaidCardTransactionCriteriaToJSON = CancelPrepaidCardTransactionCriteriaToJSON;
