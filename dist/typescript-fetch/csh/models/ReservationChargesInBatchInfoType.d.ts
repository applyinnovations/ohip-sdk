/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ErrorType } from './ErrorType';
import type { ReservationId } from './ReservationId';
import type { WarningType } from './WarningType';
/**
 * Result of charges in batch for each reservation.
 * @export
 * @interface ReservationChargesInBatchInfoType
 */
export interface ReservationChargesInBatchInfoType {
    /**
     *
     * @type {ReservationId}
     * @memberof ReservationChargesInBatchInfoType
     */
    reservationId?: ReservationId;
    /**
     * Arrival date of the reservation.
     * @type {string}
     * @memberof ReservationChargesInBatchInfoType
     */
    arrivalDate?: string;
    /**
     * Departure date of the reservation.
     * @type {string}
     * @memberof ReservationChargesInBatchInfoType
     */
    departureDate?: string;
    /**
     * Guest name associated to the reservation.
     * @type {string}
     * @memberof ReservationChargesInBatchInfoType
     */
    guestName?: string;
    /**
     * Room number associated to the reservation.
     * @type {string}
     * @memberof ReservationChargesInBatchInfoType
     */
    roomId?: string;
    /**
     * Indicator that tells whether posting is allowed for the reservation
     * @type {boolean}
     * @memberof ReservationChargesInBatchInfoType
     */
    postingAllowed?: boolean;
    /**
     * Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.
     * @type {object}
     * @memberof ReservationChargesInBatchInfoType
     */
    success?: object;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof ReservationChargesInBatchInfoType
     */
    warnings?: Array<WarningType>;
    /**
     * An error that occurred during the processing of a message.
     * @type {Array<ErrorType>}
     * @memberof ReservationChargesInBatchInfoType
     */
    errors?: Array<ErrorType>;
}
/**
 * Check if a given object implements the ReservationChargesInBatchInfoType interface.
 */
export declare function instanceOfReservationChargesInBatchInfoType(value: object): boolean;
export declare function ReservationChargesInBatchInfoTypeFromJSON(json: any): ReservationChargesInBatchInfoType;
export declare function ReservationChargesInBatchInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationChargesInBatchInfoType;
export declare function ReservationChargesInBatchInfoTypeToJSON(value?: ReservationChargesInBatchInfoType | null): any;
