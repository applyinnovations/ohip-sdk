/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CheckoutReservationType } from './CheckoutReservationType';
import type { InstanceLink } from './InstanceLink';
import type { WarningType } from './WarningType';
/**
 * Checkout request can be used to verify a reservation for checkout and do an actual checkout. In case the verificationOnly attribute is sent false, the operation will perform an actual checkout. In case the verificationOnly attribute is sent true, the operation goes through the reservation in question and verifies if it's Ok to checkout, otherwise the verification status element will provide you the verification code. The verification codes are described in the documentation of verificationOnly attribute.
 * @export
 * @interface Reservation
 */
export interface Reservation {
    /**
     *
     * @type {Array<InstanceLink>}
     * @memberof Reservation
     */
    links?: Array<InstanceLink>;
    /**
     *
     * @type {CheckoutReservationType}
     * @memberof Reservation
     */
    reservation?: CheckoutReservationType;
    /**
     * VerificationOnly "true" validates the hotel code and reservation id supplied in the request. VerificationOnly "false" validates and then check-out the guest using the request details. Following codes might be returned during the verification: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00107 - The guest's departure is not scheduled for today. Check-out not possible. FOF00109 - The guest's reservation is not in a valid status for check-out. FOF00108 - The guest has a balance. Check-out not possible.
     * @type {boolean}
     * @memberof Reservation
     */
    verificationOnly?: boolean;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof Reservation
     */
    warnings?: Array<WarningType>;
}
/**
 * Check if a given object implements the Reservation interface.
 */
export declare function instanceOfReservation(value: object): boolean;
export declare function ReservationFromJSON(json: any): Reservation;
export declare function ReservationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reservation;
export declare function ReservationToJSON(value?: Reservation | null): any;
