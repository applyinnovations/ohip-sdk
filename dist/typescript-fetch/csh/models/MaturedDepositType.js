"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaturedDepositTypeToJSON = exports.MaturedDepositTypeFromJSONTyped = exports.MaturedDepositTypeFromJSON = exports.instanceOfMaturedDepositType = void 0;
const runtime_1 = require("../runtime");
const CashierInfoType_1 = require("./CashierInfoType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const TransactionType_1 = require("./TransactionType");
/**
 * Check if a given object implements the MaturedDepositType interface.
 */
function instanceOfMaturedDepositType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMaturedDepositType = instanceOfMaturedDepositType;
function MaturedDepositTypeFromJSON(json) {
    return MaturedDepositTypeFromJSONTyped(json, false);
}
exports.MaturedDepositTypeFromJSON = MaturedDepositTypeFromJSON;
function MaturedDepositTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cashierInfo': !(0, runtime_1.exists)(json, 'cashierInfo') ? undefined : (0, CashierInfoType_1.CashierInfoTypeFromJSON)(json['cashierInfo']),
        'folioView': !(0, runtime_1.exists)(json, 'folioView') ? undefined : json['folioView'],
        'guestCreditAmount': !(0, runtime_1.exists)(json, 'guestCreditAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['guestCreditAmount']),
        'reference': !(0, runtime_1.exists)(json, 'reference') ? undefined : json['reference'],
        'remark': !(0, runtime_1.exists)(json, 'remark') ? undefined : json['remark'],
        'transaction': !(0, runtime_1.exists)(json, 'transaction') ? undefined : (0, TransactionType_1.TransactionTypeFromJSON)(json['transaction']),
    };
}
exports.MaturedDepositTypeFromJSONTyped = MaturedDepositTypeFromJSONTyped;
function MaturedDepositTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cashierInfo': (0, CashierInfoType_1.CashierInfoTypeToJSON)(value.cashierInfo),
        'folioView': value.folioView,
        'guestCreditAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.guestCreditAmount),
        'reference': value.reference,
        'remark': value.remark,
        'transaction': (0, TransactionType_1.TransactionTypeToJSON)(value.transaction),
    };
}
exports.MaturedDepositTypeToJSON = MaturedDepositTypeToJSON;
