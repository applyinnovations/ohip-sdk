"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingToJSON = exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped = exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSON = exports.instanceOfCheckPostBillingChargesOptionsTypeInnerRoomRouting = void 0;
const runtime_1 = require("../runtime");
const PersonNameType_1 = require("./PersonNameType");
/**
 * Check if a given object implements the CheckPostBillingChargesOptionsTypeInnerRoomRouting interface.
 */
function instanceOfCheckPostBillingChargesOptionsTypeInnerRoomRouting(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCheckPostBillingChargesOptionsTypeInnerRoomRouting = instanceOfCheckPostBillingChargesOptionsTypeInnerRoomRouting;
function CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSON(json) {
    return CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped(json, false);
}
exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSON = CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSON;
function CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'guest': !(0, runtime_1.exists)(json, 'guest') ? undefined : (0, PersonNameType_1.PersonNameTypeFromJSON)(json['guest']),
        'applicable': !(0, runtime_1.exists)(json, 'applicable') ? undefined : json['applicable'],
    };
}
exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped = CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped;
function CheckPostBillingChargesOptionsTypeInnerRoomRoutingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomId': value.roomId,
        'guest': (0, PersonNameType_1.PersonNameTypeToJSON)(value.guest),
        'applicable': value.applicable,
    };
}
exports.CheckPostBillingChargesOptionsTypeInnerRoomRoutingToJSON = CheckPostBillingChargesOptionsTypeInnerRoomRoutingToJSON;
