/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { AcquiredCashierLock, ActivatePrepaidCardRequest, ActivatePrepaidCardStatus, AdditionalTaxesDetails, AdjustTransactionsRequest, AdjustedTransactions, AdvancePaymentBalance, AdvanceRoomChargesReservationInfo, AlertNotices, AmountEligible, ApplyFinalPostingsRequest, ApplyFlexibleBenefitPostingsRequest, ArticlesSale, AttachDepositPolicyToPaymentRequest, AuthorizationHistory, AuthorizationInfo, AuthorizeCreditCardAmountByProfileRequest, AuthorizersCreditInfo, AutoSettleCompFoliosRequest, AutoSettleCompFoliosStatus, BalanceInfoCriteria, BatchAutoCheckoutDetails, BatchZeroBalanceCheckoutDetails, BedTaxInfo, BillingChargeStatus, BillingChargesDetails, BillingChargesStatus, BillingInstructionCodes, CalculateForeignCurrencyRequest, CalculatedForeignCurrency, CancelPrepaidCardTransactionRequest, CancelPrepaidCardTransactionStatus, CashOutPrepaidCardRequest, CashOutPrepaidCardStatus, CashierClosureDetails, CashierClosureInformation, CashierClosureReportsList, CashierReportPostingsInfo, CashierTransactionsDetails, CcAuthorizationInstructions, CcBatchSettlements, CcBatchSettlementsStatus, CcSurchargeDetails, ChangeBillingPaymentRequest, ChangeRoutingInstructionsRequest, ChangedRoutingInstructions, CheckDetails, CheckedRateCode, CloseReservationFolioRequest, CompAccountingJournal, CompRoutingInstructions, CompTrxAuthorizers, ConvertFolioDetails, ConvertFolioRequest, CreatedRoutingInstructions, CreditCardWallet, CreditLimitOveragePaymentsDetails, CreditLimitOveragePaymentsInfo, DeferredTaxesProcessDetails, DepositFolioTransactionDetails, DepositMaturityDetails, DepositRefundEligibleCheck, DepositedFolioValidate, DepositedPayment, DetachDepositPolicyFromPaymentRequest, EarlyDepartureInfo, ExtendedCashierLock, FinancialPostings, FinancialPostingsNetVat, FiscalCallStatus, FiscalCommandsResponseInfo, FiscalInformationFolio, FiscalSupportingDocumentsResponse, FixedChargesDetails, Folio, FolioActivityDetailsType, FolioActivityResponseDetailType, FolioHistoryResponse, FolioPrinters, FolioTaxPaymentReversal, FolioTaxPaymentsInfo, FolioTransactionDetails, FolioTypeNameInfo, FolioTypesInfo, ForeignCurrencyExchangeTransaction, GamingRequestStatusInfo, GenerateFiscalFolioRequest, GenerateFolioRequest, GeneratedFolio, GuestsTransactions, HotelRevenueDetails, LinkReservationPackageAllowanceRequest, MaturedDepositsDetails, PasserBySale, PostAdvanceFolioRequest, PostAdvanceRoomChargesRequest, PostArticlesSaleRequest, PostAutoCheckoutReservationsRequest, PostAwardTransactionRequest, PostBatchAutoSettlementRequest, PostBatchCCSettlementsRequest, PostBatchDepositRequest, PostBedTaxInfoRequest, PostBillingChargesInBatchRequest, PostBillingChargesRequest, PostBillingCheckChargesRequest, PostBillingPaymentRequest, PostCCSettlementRequest, PostCheckOutRequest, PostCompRedemptionsRequest, PostCompTransactionRequest, PostCreditBillRequest, PostCreditLimitOveragePaymentsRequest, PostDeferredTaxesProcessRequest, PostDepositFolioRequest, PostDepositPaymentByExtIdRequest, PostFBAReimbursementRequest, PostFiscalCommandInvoiceRequest, PostFiscalInfoRequest, PostForeignCurrencyExchangeRequest, PostGuestCheckDetailsRequest, PostPasserBySaleRequest, PostPrepaidCardsRequest, PostProformaRequest, PostRateCodeRequest, PostReversePaymentRequest, PostRoomAndTaxForDayUseRequest, PostStoredFolioDetailsRequest, PostSupplementalFolioRequest, PostSupplementalFolioStatus, PostZeroBalanceCheckoutReservationsRequest, PostedBillingChargesInBatch, PostedBillingPayment, PostedCreditBill, PostedDepositFolio, PostedRateCode, PostingActivityDetail, PostingSummaryList, PostingsForRefresh, ProcessFiscalRetryRequest, ProcessFiscalRetryStatus, ProcessReservationDepositRequest, ProcessRoomRoutingRefreshRequest, PutBillingChargeRequest, PutBillingChargesRequest, PutBillingChargesStatus, PutCashierLockRequest, PutCashierRequest, PutForEarlyDepartureRequest, PutPayeeTaxNumberRequest, PutReservationDepositTransferRequest, PutRoutingInstructionsRequest, ReceiptHistoryResponse, RedeemPrepaidCardsRequest, RedeemPrepaidCardsStatus, RegisterManualAuthorizationRequest, RegisterVaultTransactionRequest, ReinstateCheckOutRequest, ReloadPrepaidCardRequest, ReloadPrepaidCardStatus, ResendSupportingDocumentRequest, ReservationDepositFolios, ReservationFolioInformation, ReservationPackageOptions, RevenueBucketTotals, ReverseCertificatePostingsRequest, ReverseCompRedemptionsRequest, ReverseFolioTaxPaymentRequest, RoomRoutingPostings, RoundingDifferenceAmount, RoutingInstructionsDetails, SplitAndTransferTransactionRequest, SplitDepositTransactionRequest, SplitDepositTransactionStatus, SplitTransactionRequest, StagedTransactions, Status, StoredFolioDetailsInfo, TransactionCodes, TransferCompTransactionsRequest, TransferFolioToWindowRequest, TransferTransactionToReservationRequest, TransferTransactionToWindow, TransferTransactionToWindowRequest, TransitionDepositToGuestFolioRequest, UpdateFixedChargesRequest, ValidateDepositFolioRequest, ValidatedCreditBill, ValidatedTransactionCode, VoidFolioRequest, VoidedFolio } from '../models';
export interface ActivatePrepaidCardOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    activatePrepaidCard?: ActivatePrepaidCardRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface AdjustTransactionsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transactionsAdjustment?: AdjustTransactionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ApplyFinalPostingsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    finalPostings?: ApplyFinalPostingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ApplyFlexibleBenefitPostingsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    flexibleBenefitPostingsCriteria?: ApplyFlexibleBenefitPostingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface AttachDepositPolicyToPaymentOperationRequest {
    transactionId?: string;
    policyId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    attachPolicyApplyCriteria?: AttachDepositPolicyToPaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface AuthorizeCreditCardAmountRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ccAuthorizationCriteria?: AuthorizeCreditCardAmountByProfileRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface AuthorizeCreditCardAmountByProfileOperationRequest {
    profileId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ccAuthorizationCriteria?: AuthorizeCreditCardAmountByProfileRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface AutoSettleCompFoliosOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    autoSettleCompFolios?: AutoSettleCompFoliosRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface BreakCashierLockRequest {
    cashierId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CalculateForeignCurrencyOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    foreignCurrencyCriteria?: CalculateForeignCurrencyRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CancelPrepaidCardTransactionOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cancelPrepaidCardTransaction?: CancelPrepaidCardTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CashOutPrepaidCardOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashOutPrepaidCard?: CashOutPrepaidCardRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeBillingPaymentOperationRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingPaymentToChange?: ChangeBillingPaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRoutingInstructionsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    routingInstructionsToChange?: ChangeRoutingInstructionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CheckPostRateCodeRequest {
    rateCode?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postRateCodeCriteria?: PostRateCodeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CloseReservationFolioOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    closeFolioCriteria?: CloseReservationFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ConvertFolioOperationRequest {
    folioId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    convertFolioCriteria?: ConvertFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteAdvanceRoomChargesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierId?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteCompRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    refreshFolio?: boolean;
    retrievePostingsForRoomRouting?: boolean;
    folioWindowNo?: number;
    payeeId?: string;
    membershipIdNo?: number;
    authorizerId?: string;
    userId?: number;
    userName?: string;
    comments?: string;
    daily?: boolean;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    startDate?: Date;
    endDate?: Date;
    creditLimit?: Array<number>;
    percentageLimit?: Array<number>;
    covers?: Array<number>;
    transactionCode?: Array<string>;
    billingCode?: Array<string>;
    routingInstructionsId?: Array<number>;
    routingLinkId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteFolioRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    refreshFolio?: boolean;
    retrievePostingsForRoomRouting?: boolean;
    folioWindowNo?: number;
    payeeId?: string;
    daily?: boolean;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    startDate?: Date;
    endDate?: Date;
    creditLimit?: Array<number>;
    percentageLimit?: Array<number>;
    covers?: Array<number>;
    transactionCode?: Array<string>;
    billingCode?: Array<string>;
    routingInstructionsId?: Array<number>;
    routingLinkId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRequestRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    refreshFolio?: boolean;
    retrievePostingsForRoomRouting?: boolean;
    userName?: string;
    comments?: string;
    daily?: boolean;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    startDate?: Date;
    endDate?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    refreshFolio?: boolean;
    retrievePostingsForRoomRouting?: boolean;
    reservationNameId?: string;
    daily?: boolean;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    startDate?: Date;
    endDate?: Date;
    creditLimit?: Array<number>;
    percentageLimit?: Array<number>;
    covers?: Array<number>;
    transactionCode?: Array<string>;
    billingCode?: Array<string>;
    routingInstructionsId?: Array<number>;
    routingLinkId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DetachDepositPolicyFromPaymentOperationRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    detachPolicyApplyCriteria?: DetachDepositPolicyFromPaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GenerateFiscalFolioOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fiscalInfoFolioCriteria?: GenerateFiscalFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GenerateFolioOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioCriteria?: GenerateFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAdditionalTaxesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    folioView?: number;
    currencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAdvancePaymentBalanceRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    fromDate?: Date;
    numberOfNights?: number;
    eventType?: GetAdvancePaymentBalanceEventTypeEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAlertsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    alertArea?: GetAlertsAlertAreaEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAuthorizationHistoryRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    includeAuthorizations?: boolean;
    includePayments?: boolean;
    includeRefunds?: boolean;
    includeFailures?: boolean;
    folioView?: number;
    transactionType?: GetAuthorizationHistoryTransactionTypeEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetAuthorizersCreditInfoRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    code?: Array<string>;
    includeCreditDetails?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBalanceInfoRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    event?: GetBalanceInfoEventEnum;
    id?: string;
    idContext?: string;
    type?: string;
    folioWindowNo?: Array<number>;
    cashierId?: Array<number>;
    transactionCode?: Array<string>;
    articleCode?: Array<string>;
    amount?: Array<number>;
    currencyCode?: Array<string>;
    postingQuantity?: Array<number>;
    postingReference?: Array<string>;
    postingRemark?: Array<string>;
    checkNumber?: Array<string>;
    arrangementCode?: Array<string>;
    applyRoutingInstructions?: Array<boolean>;
    usePackageAllowance?: Array<boolean>;
    autoPosting?: Array<boolean>;
    uniqueIdId?: Array<string>;
    uniqueIdIdContext?: Array<string>;
    uniqueIdType?: Array<string>;
    postItNumberId?: string;
    postItNumberIdContext?: string;
    postItNumberType?: string;
    profileIdId?: string;
    profileIdIdContext?: string;
    profileIdType?: string;
    reservationIdId?: string;
    reservationIdIdContext?: string;
    reservationIdType?: string;
    policyIdId?: string;
    policyIdIdContext?: string;
    policyIdType?: string;
    fiscalBillNo?: string;
    folioDate?: Date;
    folioNo?: number;
    folioStatus?: GetBalanceInfoFolioStatusEnum;
    folioTypeName?: string;
    internalFolioWindowID?: string;
    invoiceNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBatchCCSettlementsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    offlineSettlement?: boolean;
    transactionDate?: Date;
    guestName?: string;
    roomId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBatchCCSettlementsStatusRequest {
    batchId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBedTaxInfoRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    arrival?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBillingInstructionCodesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeTransactionCodes?: boolean;
    includeBillingInstructions?: boolean;
    includeCompInstructions?: boolean;
    codeWildCard?: string;
    descriptionWildCard?: string;
    id?: string;
    idContext?: string;
    type?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCCAuthorizationInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    evaluateApprovalAmount?: boolean;
    sourceOfAuthorization?: GetCCAuthorizationInstructionsSourceOfAuthorizationEnum;
    updateReservation?: boolean;
    idContext?: string;
    type?: string;
    profileIdIdContext?: string;
    profileIdType?: string;
    amount?: number;
    currencyCode?: string;
    folioView?: number;
    description?: string;
    paymentFolioView?: number;
    paymentMethod?: string;
    track2Data?: string;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetCCAuthorizationInstructionsCardOrTokenEnum;
    storeToCreditCardWallet?: boolean;
    cardType?: GetCCAuthorizationInstructionsCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetCCAuthorizationInstructionsProcessingEnum;
    swiped?: boolean;
    cardPresent?: boolean;
    citId?: string;
    userDefinedCardType?: string;
    cardIdId?: string;
    cardIdIdContext?: string;
    cardIdType?: string;
    currentAuthorizedAmountAmount?: number;
    currentAuthorizedAmountCurrencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    balanceAmount?: number;
    balanceCurrencyCode?: string;
    code?: number;
    amountAmount?: number;
    amountCurrencyCode?: string;
    percent?: number;
    emailFolio?: boolean;
    uniqueIdId?: string;
    uniqueIdIdContext?: string;
    uniqueIdType?: string;
    createDateTime?: string;
    creatorId?: string;
    emailAddress?: string;
    emailFormat?: GetCCAuthorizationInstructionsEmailFormatEnum;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    orderSequence?: number;
    primaryInd?: boolean;
    purgeDate?: Date;
    emailType?: string;
    typeDescription?: string;
    approvalCode?: string;
    originalAuthSequence?: number;
    vendorTranId?: string;
    approvalAmountAmount?: number;
    approvalAmountCurrencyCode?: string;
    terminalId?: string;
    incidentalAmountAmount?: number;
    incidentalAmountCurrencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCCAuthorizationInstructionsByProfileRequest {
    profileId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    evaluateApprovalAmount?: boolean;
    sourceOfAuthorization?: GetCCAuthorizationInstructionsByProfileSourceOfAuthorizationEnum;
    updateReservation?: boolean;
    idContext?: string;
    type?: string;
    profileIdIdContext?: string;
    profileIdType?: string;
    amount?: number;
    currencyCode?: string;
    folioView?: number;
    description?: string;
    paymentFolioView?: number;
    paymentMethod?: string;
    track2Data?: string;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetCCAuthorizationInstructionsByProfileCardOrTokenEnum;
    cardType?: GetCCAuthorizationInstructionsByProfileCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetCCAuthorizationInstructionsByProfileProcessingEnum;
    swiped?: boolean;
    cardPresent?: boolean;
    citId?: string;
    userDefinedCardType?: string;
    cardIdId?: string;
    cardIdIdContext?: string;
    cardIdType?: string;
    currentAuthorizedAmountAmount?: number;
    currentAuthorizedAmountCurrencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    balanceAmount?: number;
    balanceCurrencyCode?: string;
    code?: number;
    amountAmount?: number;
    amountCurrencyCode?: string;
    percent?: number;
    emailFolio?: boolean;
    uniqueIdId?: string;
    uniqueIdIdContext?: string;
    uniqueIdType?: string;
    createDateTime?: string;
    creatorId?: string;
    emailAddress?: string;
    emailFormat?: GetCCAuthorizationInstructionsByProfileEmailFormatEnum;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    orderSequence?: number;
    primaryInd?: boolean;
    purgeDate?: Date;
    emailType?: string;
    typeDescription?: string;
    approvalCode?: string;
    originalAuthSequence?: number;
    vendorTranId?: string;
    approvalAmountAmount?: number;
    approvalAmountCurrencyCode?: string;
    terminalId?: string;
    incidentalAmountAmount?: number;
    incidentalAmountCurrencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCCSurchargeInfoRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierId?: number;
    description?: string;
    folioView?: number;
    paymentMethod?: string;
    track2Data?: string;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetCCSurchargeInfoCardOrTokenEnum;
    cardType?: GetCCSurchargeInfoCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetCCSurchargeInfoProcessingEnum;
    swiped?: boolean;
    userDefinedCardType?: string;
    id?: string;
    idContext?: string;
    type?: string;
    amount?: number;
    currencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    balanceAmount?: number;
    balanceCurrencyCode?: string;
    code?: number;
    amountAmount?: number;
    amountCurrencyCode?: string;
    percent?: number;
    emailFolio?: boolean;
    uniqueIdId?: string;
    uniqueIdIdContext?: string;
    uniqueIdType?: string;
    createDateTime?: string;
    creatorId?: string;
    emailAddress?: string;
    emailFormat?: GetCCSurchargeInfoEmailFormatEnum;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    orderSequence?: number;
    primaryInd?: boolean;
    purgeDate?: Date;
    emailType?: string;
    typeDescription?: string;
    approvalCode?: string;
    originalAuthSequence?: number;
    vendorTranId?: string;
    approvalAmountAmount?: number;
    approvalAmountCurrencyCode?: string;
    postingAmountAmount?: number;
    postingAmountCurrencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierClosureRequest {
    cashierId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierLockHandle?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierClosureInfoRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    closureNo?: number;
    cashierId?: number;
    shiftDropLocationCode?: string;
    bagNumberForOthers?: string;
    bagNumberForCash?: string;
    closureBusinessDate?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierClosureReportsListRequest {
    cashierId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    closureNo?: number;
    shiftDropLocationCode?: string;
    bagNumberForOthers?: string;
    bagNumberForCash?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierLockRequest {
    cashierId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierReportPostingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: Array<string>;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    requestType?: GetCashierReportPostingsRequestTypeEnum;
    closureNo?: number;
    cashierId?: number;
    shiftDropLocationCode?: string;
    bagNumberForOthers?: string;
    bagNumberForCash?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCashierTransactionsRequest {
    cashierId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    closureNo?: number;
    shiftDropLocationCode?: string;
    bagNumberForOthers?: string;
    bagNumberForCash?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCheckDetailsRequest {
    checkNumber?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompAccountingJournalRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    filterTransactionCode?: Array<string>;
    hotelId?: Array<string>;
    filterRoomNumber?: Array<string>;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    approvalCode?: string;
    code?: Array<string>;
    authorizerNameCode?: Array<string>;
    referenceNumberWildCard?: string;
    supplementWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompPostingJournalRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    filterTransactionCode?: Array<string>;
    filterRoomNumber?: Array<string>;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    approvalCode?: string;
    code?: Array<string>;
    authorizerNameCode?: Array<string>;
    referenceNumberWildCard?: string;
    supplementWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompRoutingInstructionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    end?: Date;
    start?: Date;
    nameWildcard?: string;
    firstNameWildCard?: string;
    roomNumberCodes?: Array<string>;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    membershipId?: string;
    code?: Array<string>;
    resStatusCode?: Set<GetCompRoutingInstructionsResStatusCodeEnum>;
    compRoutingStatuses?: Set<GetCompRoutingInstructionsCompRoutingStatusesEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCompTrxAuthorizersRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierId?: number;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    targetFolioWindowNo?: number;
    uniqueIdId?: Array<string>;
    uniqueIdIdContext?: Array<string>;
    uniqueIdType?: Array<string>;
    transaction?: Array<number>;
    authorizerIdId?: string;
    authorizerIdIdContext?: string;
    authorizerIdType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetCreditLimitOveragePaymentsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestNameWildCard?: string;
    roomNumberWildCard?: string;
    code?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDepositFolioRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInstructions?: Set<GetDepositFolioFetchInstructionsEnum>;
    id?: string;
    policyIdId?: string;
    blockIdId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDepositFolioTransactionDetailsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeGenerates?: boolean;
    transactionNo?: Array<number>;
    includeExchangeInformation?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetDepositMaturityInfoRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierId?: number;
    idContext?: string;
    type?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetEligibleBillAmountRequest {
    hotelId?: string;
    reservationId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioView?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFinancialPostingsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    startDate?: Date;
    endDate?: Date;
    duration?: string;
    cashierId?: number;
    filterTransactionCode?: Array<string>;
    code?: Array<string>;
    filterRoomNumber?: Array<string>;
    referenceNumberWildCard?: string;
    checkNumberWildCard?: string;
    supplementWildCard?: string;
    approvalCode?: string;
    approvalStatusCode?: Array<string>;
    folioWindowNo?: Array<number>;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetFinancialPostingsCardOrTokenEnum;
    cardType?: GetFinancialPostingsCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetFinancialPostingsProcessingEnum;
    swiped?: boolean;
    userDefinedCardType?: string;
    id?: string;
    idContext?: string;
    type?: string;
    amount?: number;
    currencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    closureNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFinancialPostingsNetVatRequest {
    hotelId?: string;
    reservationId?: string;
    folioWindowNo?: number;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    startDate?: Date;
    endDate?: Date;
    limit?: number;
    offset?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFiscalFolioActivityRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioSeqNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFiscalFolioActivityDetailsRequest {
    folioSeqNo?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    responseAttemptNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFiscalPrintingDetailsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioView?: number;
    folioType?: string;
    id?: string;
    code?: Array<string>;
    fetchInstruction?: Set<GetFiscalPrintingDetailsFetchInstructionEnum>;
    profileIdId?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFiscalSupportingDocumentsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    surname?: string;
    givenName?: string;
    confirmationNo?: string;
    arrivalStartDate?: Date;
    arrivalEndDate?: Date;
    departureStartDate?: Date;
    departureEndDate?: Date;
    roomId?: string;
    documentType?: Set<GetFiscalSupportingDocumentsDocumentTypeEnum>;
    documentNo?: string;
    pendingDocumentsOnly?: boolean;
    fromCreateDateTime?: string;
    limit?: number;
    offset?: number;
    orderBy?: Array<GetFiscalSupportingDocumentsOrderByEnum>;
    sortOrder?: Set<GetFiscalSupportingDocumentsSortOrderEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFixedChargesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestPayOnly?: boolean;
    includeFolioHistory?: boolean;
    reservationBalanceOnly?: boolean;
    fetchInstructions?: Set<GetFolioFetchInstructionsEnum>;
    end?: Array<Date>;
    folioWindowNo?: Array<number>;
    limit?: Array<number>;
    offset?: Array<number>;
    start?: Array<Date>;
    summaryOnly?: boolean;
    groupType?: GetFolioGroupTypeEnum;
    exchangeCurrency?: string;
    calculateCollectingAgentTaxes?: boolean;
    vATOffset?: boolean;
    includeDepositTaxes?: boolean;
    simpleFolio?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioHistoryRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    id?: string;
    idContext?: string;
    type?: string;
    aR?: boolean;
    checkOut?: boolean;
    creditBill?: boolean;
    supplementalFolio?: boolean;
    includeAssociatedFolios?: boolean;
    noShow?: boolean;
    offlineFolio?: boolean;
    passerBy?: boolean;
    postIt?: boolean;
    videoCheckOut?: boolean;
    folioDate?: Date;
    reservationIdId?: string;
    reservationIdIdContext?: string;
    reservationIdType?: string;
    room?: string;
    name?: string;
    firstName?: string;
    creditCardNo?: string;
    folioNo?: string;
    invoiceNo?: number;
    addresseeName?: string;
    fiscalFolioNo?: string;
    code?: Array<string>;
    partnerFiscalFolioStatusCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioPrintersRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    allFolioWindow?: boolean;
    correction?: boolean;
    debitFolio?: boolean;
    folioWindowNo?: number;
    manualFolioNo?: number;
    cashierId?: number;
    fiscalTerminalId?: string;
    eventType?: GetFolioPrintersEventTypeEnum;
    id?: string;
    profileIdId?: string;
    currencyCode?: string;
    exchangeRate?: number;
    associatedBillNumber?: number;
    associatedBillFolioType?: string;
    associatedBillQueueName?: string;
    associatedBillFiscalBillNumber?: string;
    associatedBillGenerationDate?: Date;
    folioType?: string;
    generateFiscalFolio?: boolean;
    queueName?: string;
    folioSeqId?: number;
    fiscalFolioInstruction?: GetFolioPrintersFiscalFolioInstructionEnum;
    transactionServiceType?: string;
    amount?: number;
    balanceCurrencyCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioTaxPaymentsInfoRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioWindowNo?: number;
    cashierId?: number;
    description?: string;
    folioView?: number;
    paymentMethod?: string;
    track2Data?: string;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetFolioTaxPaymentsInfoCardOrTokenEnum;
    cardType?: GetFolioTaxPaymentsInfoCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetFolioTaxPaymentsInfoProcessingEnum;
    swiped?: boolean;
    userDefinedCardType?: string;
    id?: string;
    idContext?: string;
    type?: string;
    amount?: number;
    currencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    balanceAmount?: number;
    balanceCurrencyCode?: string;
    code?: number;
    amountAmount?: number;
    amountCurrencyCode?: string;
    percent?: number;
    emailFolio?: boolean;
    uniqueIdId?: string;
    uniqueIdIdContext?: string;
    uniqueIdType?: string;
    createDateTime?: string;
    creatorId?: string;
    emailAddress?: string;
    emailFormat?: GetFolioTaxPaymentsInfoEmailFormatEnum;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    orderSequence?: number;
    primaryInd?: boolean;
    purgeDate?: Date;
    emailType?: string;
    typeDescription?: string;
    approvalCode?: string;
    originalAuthSequence?: number;
    vendorTranId?: string;
    approvalAmountAmount?: number;
    approvalAmountCurrencyCode?: string;
    postingAmountAmount?: number;
    postingAmountCurrencyCode?: string;
    postingReference?: string;
    postingRemark?: string;
    comments?: string;
    applyCCSurcharge?: boolean;
    manualPaymentTaxInfoFolioWindowNo?: number;
    transactionCode?: string;
    transactionDate?: Date;
    transactionDescription?: string;
    transactionNo?: number;
    taxInvoiceNo?: string;
    paymentType?: GetFolioTaxPaymentsInfoPaymentTypeEnum;
    manualPaymentTaxAmount?: number;
    manualPaymentTaxCurrencyCode?: string;
    taxableAmountAmount?: number;
    taxableAmountCurrencyCode?: string;
    nonTaxableAmountAmount?: number;
    nonTaxableAmountCurrencyCode?: string;
    availableCreditAmount?: number;
    availableCreditCurrencyCode?: string;
    paymentDate?: Date;
    taxFolioWindowNo?: Array<number>;
    taxTransactionCode?: Array<string>;
    taxTransactionDate?: Array<Date>;
    taxTransactionDescription?: Array<string>;
    taxTransactionNo?: Array<number>;
    taxTaxInvoiceNo?: Array<string>;
    taxPaymentType?: Set<GetFolioTaxPaymentsInfoTaxPaymentTypeEnum>;
    creditablePaymentTaxesAmount?: number;
    creditablePaymentTaxesCurrencyCode?: string;
    creditablePaymentTaxableAmount?: number;
    creditablePaymentTaxableCurrencyCode?: string;
    creditablePaymentNonTaxableAmount?: number;
    creditablePaymentNonTaxableCurrencyCode?: string;
    availableTaxCreditAmount?: number;
    availableTaxCreditCurrencyCode?: string;
    taxPaymentDate?: Array<Date>;
    terminalId?: string;
    overrideInsufficientCC?: boolean;
    changeDueAmount?: number;
    changeDueAmountCurrencyCode?: string;
    overrideARCreditLimit?: boolean;
    applyCurrencyTaxes?: boolean;
    vATOffset?: boolean;
    action?: GetFolioTaxPaymentsInfoActionEnum;
    reservationIdIdContext?: string;
    reservationIdType?: string;
    profileIdId?: string;
    profileIdIdContext?: string;
    profileIdType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioTransactionDetailsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeGenerates?: boolean;
    transactionNo?: Array<number>;
    includeExchangeInformation?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioTypeNameRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    internalFolioWindowId?: string;
    languageCode?: string;
    folioTypeName?: string;
    folioReportGroup?: GetFolioTypeNameFolioReportGroupEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFolioTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeCompress?: boolean;
    includeCredit?: boolean;
    folioType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGamingRequestStatusInfoRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetGuestsTransactionsRequest {
    hotelId?: string;
    reservationList?: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeGenerates?: boolean;
    includeTransactionsWithARInvoiceNo?: boolean;
    includeTransactionsWithFolioNo?: boolean;
    includeTransactionsWithManualPostingOnly?: boolean;
    idContext?: Array<string>;
    type?: Array<string>;
    transactionNo?: Array<number>;
    transactionGroup?: Array<string>;
    transactionSubGroup?: Array<string>;
    billingCode?: Array<string>;
    billingHotelId?: Array<string>;
    desc?: Array<string>;
    routingInstructionsId?: Array<number>;
    trxCodeWildCard?: string;
    trxDescriptionWildCard?: string;
    checkNumberWildCard?: string;
    referenceNumberWildCard?: string;
    supplementWildCard?: string;
    windowNo?: Array<number>;
    cashieringTransactionType?: Set<GetGuestsTransactionsCashieringTransactionTypeEnum>;
    startDate?: Date;
    endDate?: Date;
    cashierId?: number;
    code?: Array<string>;
    commissionable?: boolean;
    serviceRecoveryAllowed?: boolean;
    postedTransactionType?: Set<GetGuestsTransactionsPostedTransactionTypeEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelCreditCardWalletRequest {
    hotelId?: string;
    profileId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelRevenueRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    businessDate?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetMaturedDepositsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPostBillingChargesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierId?: number;
    folioWindowNo?: Array<number>;
    chargeCashierId?: Array<number>;
    transactionCode?: Array<string>;
    articleCode?: Array<string>;
    amount?: number;
    currencyCode?: string;
    postingQuantity?: Array<number>;
    postingReference?: Array<string>;
    postingRemark?: Array<string>;
    checkNumber?: Array<string>;
    arrangementCode?: Array<string>;
    applyRoutingInstructions?: Array<boolean>;
    usePackageAllowance?: Array<boolean>;
    autoPosting?: Array<boolean>;
    id?: Array<string>;
    idContext?: Array<string>;
    type?: Array<string>;
    reservationIdIdContext?: string;
    reservationIdType?: string;
    option?: Set<GetPostBillingChargesOptionEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPostingActivityDetailRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    module?: string;
    logDate?: string;
    refActionId?: number;
    logUserId?: number;
    logUserName?: string;
    machineStation?: string;
    croCode?: string;
    actionType?: string;
    actionDescription?: string;
    iPAddress?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPostingSummaryRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeGenerates?: boolean;
    postingDate?: Date;
    checkPostings?: boolean;
    postingsByExternalSystem?: boolean;
    cashierId?: number;
    currency?: string;
    postingSummaryType?: GetPostingSummaryPostingSummaryTypeEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetPostingsForRefreshRequest {
    targetReservationId?: string;
    sourceReservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    targetResvNameIdContext?: string;
    targetResvNameIdType?: string;
    daily?: boolean;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    startDate?: Date;
    endDate?: Date;
    transactionHotelId?: Array<string>;
    printTrxReceipt?: Array<boolean>;
    transactionCode?: Array<string>;
    description?: Array<string>;
    transactionGroup?: Array<string>;
    transactionSubGroup?: Array<string>;
    universalProductCode?: Array<string>;
    routingInstructionsId?: Array<number>;
    articleCode?: Array<string>;
    articleHotelId?: Array<string>;
    inactive?: Array<boolean>;
    orderSequence?: Array<number>;
    articleDescription?: Array<string>;
    articleTransactionCode?: Array<string>;
    amount?: number;
    currencyCode?: string;
    availableForPostIt?: boolean;
    color?: GetPostingsForRefreshColorEnum;
    articleUniversalProductCode?: Array<string>;
    billingCode?: Array<string>;
    billingHotelId?: Array<string>;
    desc?: Array<string>;
    billingInstructionRoutingInstructionsId?: Array<number>;
    creditLimit?: number;
    percentageLimit?: number;
    covers?: number;
    limitUsed?: number;
    id?: string;
    routingLinkIdIdContext?: string;
    routingLinkIdType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReceiptHistoryRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fromDate?: Date;
    toDate?: Date;
    name?: string;
    firstName?: string;
    receiptTypeName?: string;
    taxInvoice?: string;
    receiptNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationPackageOptionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetReservationRevenueBucketTotalsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    revenueBucketType?: string;
    compRevenue?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoundingDifferenceRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    event?: GetRoundingDifferenceEventEnum;
    folioWindowNo?: number;
    internalFolioWindowID?: string;
    cashierId?: number;
    hotelId?: string;
    id?: string;
    amount?: number;
    currencyCode?: string;
    description?: string;
    folioView?: number;
    paymentMethod?: string;
    attachCreditCardToProfile?: boolean;
    cardHolderName?: string;
    cardNumber?: string;
    cardNumberLast4Digits?: string;
    cardNumberMasked?: string;
    cardOrToken?: GetRoundingDifferenceCardOrTokenEnum;
    cardType?: GetRoundingDifferenceCardTypeEnum;
    expirationDate?: Date;
    expirationDateExpired?: boolean;
    expirationDateMasked?: string;
    processing?: GetRoundingDifferenceProcessingEnum;
    swiped?: boolean;
    userDefinedCardType?: string;
    cardIdId?: string;
    currentAuthorizedAmountAmount?: number;
    currentAuthorizedAmountCurrencyCode?: string;
    approvalAmountNeededAmount?: number;
    approvalAmountNeededCurrencyCode?: string;
    balanceAmount?: number;
    balanceCurrencyCode?: string;
    code?: number;
    amountAmount?: number;
    amountCurrencyCode?: string;
    percent?: number;
    emailFolio?: boolean;
    uniqueIdId?: string;
    createDateTime?: string;
    creatorId?: string;
    emailAddress?: string;
    emailFormat?: GetRoundingDifferenceEmailFormatEnum;
    lastModifierId?: string;
    lastModifyDateTime?: string;
    orderSequence?: number;
    primaryInd?: boolean;
    purgeDate?: Date;
    emailType?: string;
    typeDescription?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoutingInstructionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    includeWindowRouting?: boolean;
    includeRoomRouting?: boolean;
    includeCompRouting?: boolean;
    includeCompRoutingRequests?: boolean;
    effectiveOn?: Date;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetStoredFolioDetailsRequest {
    folioId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fiscalBillNo?: string;
    folioDate?: Date;
    folioStatus?: GetStoredFolioDetailsFolioStatusEnum;
    folioTypeName?: string;
    internalFolioWindowID?: string;
    invoiceNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTransactionCodesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    event?: GetTransactionCodesEventEnum;
    includeArticles?: boolean;
    userRoleTransactions?: boolean;
    manualPostAllowed?: boolean;
    code?: string;
    description?: string;
    wildCard?: string;
    fiscalBillNo?: string;
    folioDate?: Date;
    folioNo?: number;
    folioStatus?: GetTransactionCodesFolioStatusEnum;
    folioTypeName?: string;
    internalFolioWindowID?: string;
    invoiceNo?: number;
    trxServiceType?: GetTransactionCodesTrxServiceTypeEnum;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetValidateFiscalPrintingDetailsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioView?: number;
    folioType?: string;
    id?: string;
    code?: Array<string>;
    fetchInstruction?: Set<GetValidateFiscalPrintingDetailsFetchInstructionEnum>;
    profileIdId?: string;
    fiscalServiceMode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetfetchStagedTransactionsRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId2?: string;
    folioWindowNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface IsDepositRefundEligibleRequest {
    transactionId?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    idContext?: string;
    type?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface LinkReservationPackageAllowanceOperationRequest {
    destinationReservationId?: string;
    sourceReservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    linkReservationPackageAllowance?: LinkReservationPackageAllowanceRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAdvanceFolioOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    batchAdvanceFolio?: PostAdvanceFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAdvanceRoomChargesOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    advanceRoomCharges?: PostAdvanceRoomChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostArticlesSaleOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    articlesSaleCriteria?: PostArticlesSaleRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAutoCheckoutReservationsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    batchAutoCheckoutReservation?: PostAutoCheckoutReservationsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostAwardTransactionOperationRequest {
    hotelId?: string;
    reservationId?: number;
    membershipId?: number;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    awardDetails?: PostAwardTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBatchAutoSettlementOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    batchAutoSettlementCriteria?: PostBatchAutoSettlementRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBatchCCSettlementsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ccBatchSettlementsProcessCriteria?: PostBatchCCSettlementsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBatchDepositOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    batchDeposit?: PostBatchDepositRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBedTaxInfoOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    bedTaxCriteria?: PostBedTaxInfoRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBillingChargesOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingCharges?: PostBillingChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBillingChargesInBatchOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingChargesInBatchCriteria?: PostBillingChargesInBatchRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBillingCheckChargesOperationRequest {
    checkNumber?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingCheckChargesCriteria?: PostBillingCheckChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBillingPaymentOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingPayment?: PostBillingPaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCCSettlementOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ccSettlementCriteria?: PostCCSettlementRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCheckOutOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservation?: PostCheckOutRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCompRedemptionsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postCompRedemptions?: PostCompRedemptionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCompTransactionOperationRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    compTransactionCriteria?: PostCompTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCreditBillOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditBillCriteria?: PostCreditBillRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostCreditLimitOveragePaymentsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditLimitOveragePayments?: PostCreditLimitOveragePaymentsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDeferredTaxesProcessOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    deferredTaxesProcess?: PostDeferredTaxesProcessRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDepositFolioOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositFolioCriteria?: PostDepositFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDepositPaymentRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositPayment?: PostDepositPaymentByExtIdRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostDepositPaymentByExtIdOperationRequest {
    reservationId?: string;
    externalSysCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositPayment?: PostDepositPaymentByExtIdRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFBAReimbursementOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fbaReimbursementCriteria?: PostFBAReimbursementRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFBASettlementRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fbaReimbursementCriteria?: PostFBAReimbursementRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFiscalCommandInvoiceOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fiscalFolioCriteria?: PostFiscalCommandInvoiceRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFiscalInfoOperationRequest {
    hotelId?: string;
    reservationId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postFiscalInfoType?: PostFiscalInfoRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFiscalInvoiceRequest {
    folioId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fiscalFolioCriteria?: PostFiscalCommandInvoiceRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFixedChargesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fixedCharges?: UpdateFixedChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostForeignCurrencyExchangeOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    foreignCurrencyExchange?: PostForeignCurrencyExchangeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostGuestCheckDetailsOperationRequest {
    checkNumber?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    guestCheckDetails?: PostGuestCheckDetailsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPasserBySaleOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    passerBySalesCriteria?: PostPasserBySaleRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostPrepaidCardsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    prepaidCardCriteria?: PostPrepaidCardsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostProformaOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationFolio?: PostProformaRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRateCodeOperationRequest {
    rateCode?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postRateCodeCriteria?: PostRateCodeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostReversePaymentOperationRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    paymentReversalCriteria?: PostReversePaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomAndTaxForDayUseOperationRequest {
    reservationId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postRoomAndTaxForDayUse?: PostRoomAndTaxForDayUseRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostStoredFolioDetailsOperationRequest {
    folioId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    storedFolioDetails?: PostStoredFolioDetailsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostSupplementalFolioOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    postSupplementalFolio?: PostSupplementalFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostZeroBalanceCheckoutReservationsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    batchZeroBalanceCheckoutReservation?: PostZeroBalanceCheckoutReservationsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ProcessFiscalRetryOperationRequest {
    folioId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    processFiscalRetry?: ProcessFiscalRetryRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ProcessReservationDepositOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationDepositCriteria?: ProcessReservationDepositRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ProcessRoomRoutingRefreshOperationRequest {
    targetReservationId?: string;
    sourceReservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomRoutingRefresh?: ProcessRoomRoutingRefreshRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBedTaxInfoRequest {
    taxRegistraitionNo?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    bedTaxCriteria?: PostBedTaxInfoRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBillingChargeOperationRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    billingCharge?: PutBillingChargeRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutBillingChargesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    putBillingCharges?: PutBillingChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCashierOperationRequest {
    cashierId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierClosure?: PutCashierRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutCashierLockOperationRequest {
    lockId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    cashierLockCriteriaToExtend?: PutCashierLockRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutForEarlyDepartureOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    earlyDeparture?: PutForEarlyDepartureRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutPayeeTaxNumberOperationRequest {
    payeeId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    payeeTaxNumber?: PutPayeeTaxNumberRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutReservationDepositTransferOperationRequest {
    sourceReservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositTransferCriteria?: PutReservationDepositTransferRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoutingInstructionsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    routingInstructions?: PutRoutingInstructionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RedeemPrepaidCardsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    redeemPrepaidCards?: RedeemPrepaidCardsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RegisterManualAuthorizationOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ccManualAuthorizationCriteria?: RegisterManualAuthorizationRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RegisterVaultTransactionOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    vaultTransaction?: RegisterVaultTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReinstateCheckOutOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reinstateCheckedOutReservation?: ReinstateCheckOutRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReleaseCashierLockRequest {
    lockId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReloadPrepaidCardOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reloadPrepaidCard?: ReloadPrepaidCardRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBedTaxInfoRequest {
    taxRegistraitionNo?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveFixedChargesRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fixedChargeID?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ResendSupportingDocumentOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fiscalSupportingDocumentCriteria?: ResendSupportingDocumentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReverseARInvoiceRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reasonCode?: string;
    cashierId?: number;
    transactionCodes?: Array<number>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReverseCertificatePostingsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reverseCertificatePostingsCriteria?: ReverseCertificatePostingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReverseCompRedemptionsOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reverseCompRedemptions?: ReverseCompRedemptionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReverseFlexibleBenefitPostingRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ReverseFolioTaxPaymentOperationRequest {
    cashierId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transactionReversal?: ReverseFolioTaxPaymentRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SplitAndTransferTransactionOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transactionToSplitAndTransfer?: SplitAndTransferTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SplitDepositTransactionOperationRequest {
    transactionId?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    splitDepositTransaction?: SplitDepositTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SplitTransactionOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transactionToSplit?: SplitTransactionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface TransferCompTransactionsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transferCompTransactions?: TransferCompTransactionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface TransferFolioToWindowOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioToWindow?: TransferFolioToWindowRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface TransferTransactionToReservationOperationRequest {
    toReservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    reservationTransaction?: TransferTransactionToReservationRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface TransferTransactionToWindowOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    transactionToWindow?: TransferTransactionToWindowRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface TransitionDepositToGuestFolioOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositToGuestFolio?: TransitionDepositToGuestFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface UnlinkReservationPackageAllowanceRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface UpdateFixedChargesOperationRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fixedCharges?: UpdateFixedChargesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ValidateCreditBillRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    creditBillCriteria?: PostCreditBillRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ValidateDepositFolioOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    depositFolioValidateCriteria?: ValidateDepositFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ValidateTransactionCodesRequest {
    transactionId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    event?: ValidateTransactionCodesEventEnum;
    fiscalBillNo?: string;
    folioDate?: Date;
    folioNo?: number;
    folioStatus?: ValidateTransactionCodesFolioStatusEnum;
    folioTypeName?: string;
    internalFolioWindowID?: string;
    invoiceNo?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface VerifyForEarlyDepartureRequest {
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ignoreCheckOnTieredRate?: boolean;
    ignoreRateRestriction?: boolean;
    postConsumedAllowanceToGuest?: boolean;
    postEarlyDeparturePenalty?: boolean;
    cashierId?: number;
    idContext?: Array<string>;
    type?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface VoidBillingCheckChargesRequest {
    checkNumber?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    revenueDate?: Date;
    amount?: number;
    currencyCode?: string;
    reservationId?: string;
    reservationIdContext?: string;
    reservationIdType?: string;
    checkId?: string;
    checkIdContext?: string;
    checkIdType?: string;
    cashierId?: number;
    postingRemark?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface VoidFolioOperationRequest {
    folioId?: string;
    reservationId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    folioToVoid?: VoidFolioRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class CashieringApi extends runtime.BaseAPI {
    /**
     * You can use this API to activate Prepaid Card. <p><strong>OperationId:</strong>activatePrepaidCard</p>
     * Operation to activate prepaid card.
     */
    activatePrepaidCardRaw(requestParameters: ActivatePrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActivatePrepaidCardStatus>>;
    /**
     * You can use this API to activate Prepaid Card. <p><strong>OperationId:</strong>activatePrepaidCard</p>
     * Operation to activate prepaid card.
     */
    activatePrepaidCard(requestParameters: ActivatePrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActivatePrepaidCardStatus>;
    /**
     * You can use this API to Adjust Transactions. <p><strong>OperationId:</strong>adjustTransactions</p>
     * Adjust Transactions
     */
    adjustTransactionsRaw(requestParameters: AdjustTransactionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdjustedTransactions>>;
    /**
     * You can use this API to Adjust Transactions. <p><strong>OperationId:</strong>adjustTransactions</p>
     * Adjust Transactions
     */
    adjustTransactions(requestParameters: AdjustTransactionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdjustedTransactions>;
    /**
     * You can use this API to apply final postings on a reservation. <p><strong>OperationId:</strong>applyFinalPostings</p>
     * Apply final Postings
     */
    applyFinalPostingsRaw(requestParameters: ApplyFinalPostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to apply final postings on a reservation. <p><strong>OperationId:</strong>applyFinalPostings</p>
     * Apply final Postings
     */
    applyFinalPostings(requestParameters: ApplyFinalPostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to apply flexible benefit postings. <p><strong>OperationId:</strong>applyFlexibleBenefitPostings</p>
     * Apply flexible benefit postings
     */
    applyFlexibleBenefitPostingsRaw(requestParameters: ApplyFlexibleBenefitPostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to apply flexible benefit postings. <p><strong>OperationId:</strong>applyFlexibleBenefitPostings</p>
     * Apply flexible benefit postings
     */
    applyFlexibleBenefitPostings(requestParameters: ApplyFlexibleBenefitPostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to attach Deposit Policy to Payment. <p><strong>OperationId:</strong>attachDepositPolicyToPayment</p>
     * Attach Deposit Policy to Payment
     */
    attachDepositPolicyToPaymentRaw(requestParameters: AttachDepositPolicyToPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to attach Deposit Policy to Payment. <p><strong>OperationId:</strong>attachDepositPolicyToPayment</p>
     * Attach Deposit Policy to Payment
     */
    attachDepositPolicyToPayment(requestParameters: AttachDepositPolicyToPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to authorize Credit Card Amount by Reservation. <p><strong>OperationId:</strong>authorizeCreditCardAmount</p>
     * Authorize Credit Card Amount
     */
    authorizeCreditCardAmountRaw(requestParameters: AuthorizeCreditCardAmountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthorizationInfo>>;
    /**
     * You can use this API to authorize Credit Card Amount by Reservation. <p><strong>OperationId:</strong>authorizeCreditCardAmount</p>
     * Authorize Credit Card Amount
     */
    authorizeCreditCardAmount(requestParameters: AuthorizeCreditCardAmountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthorizationInfo>;
    /**
     * You can use this API to authorize Credit Card Amount by Profile. <p><strong>OperationId:</strong>authorizeCreditCardAmountByProfile</p>
     * Authorize Credit Card Amount by Profile
     */
    authorizeCreditCardAmountByProfileRaw(requestParameters: AuthorizeCreditCardAmountByProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthorizationInfo>>;
    /**
     * You can use this API to authorize Credit Card Amount by Profile. <p><strong>OperationId:</strong>authorizeCreditCardAmountByProfile</p>
     * Authorize Credit Card Amount by Profile
     */
    authorizeCreditCardAmountByProfile(requestParameters: AuthorizeCreditCardAmountByProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthorizationInfo>;
    /**
     * You can use this API to auto Settle CompFolios <p><strong>OperationId:</strong>autoSettleCompFolios</p>
     * Operation to auto settle comp folios.
     */
    autoSettleCompFoliosRaw(requestParameters: AutoSettleCompFoliosOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoSettleCompFoliosStatus>>;
    /**
     * You can use this API to auto Settle CompFolios <p><strong>OperationId:</strong>autoSettleCompFolios</p>
     * Operation to auto settle comp folios.
     */
    autoSettleCompFolios(requestParameters: AutoSettleCompFoliosOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoSettleCompFoliosStatus>;
    /**
     * You can use this API to Break Cashier Lock. <p><strong>OperationId:</strong>breakCashierLock</p>
     * Break Cashier Lock
     */
    breakCashierLockRaw(requestParameters: BreakCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Break Cashier Lock. <p><strong>OperationId:</strong>breakCashierLock</p>
     * Break Cashier Lock
     */
    breakCashierLock(requestParameters: BreakCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API will allow you to Calculate Foreign Currency exchange. <p><strong>OperationId:</strong>calculateForeignCurrency</p>
     * Calculate Foreign Currency
     */
    calculateForeignCurrencyRaw(requestParameters: CalculateForeignCurrencyOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CalculatedForeignCurrency>>;
    /**
     * This API will allow you to Calculate Foreign Currency exchange. <p><strong>OperationId:</strong>calculateForeignCurrency</p>
     * Calculate Foreign Currency
     */
    calculateForeignCurrency(requestParameters: CalculateForeignCurrencyOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CalculatedForeignCurrency>;
    /**
     * You can use this API to cancel PrepaidCard Transaction. <p><strong>OperationId:</strong>cancelPrepaidCardTransaction</p>
     * Operation to cancel prepaid card transaction.
     */
    cancelPrepaidCardTransactionRaw(requestParameters: CancelPrepaidCardTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CancelPrepaidCardTransactionStatus>>;
    /**
     * You can use this API to cancel PrepaidCard Transaction. <p><strong>OperationId:</strong>cancelPrepaidCardTransaction</p>
     * Operation to cancel prepaid card transaction.
     */
    cancelPrepaidCardTransaction(requestParameters: CancelPrepaidCardTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CancelPrepaidCardTransactionStatus>;
    /**
     * You can use this API to cashOut Prepaid Card. <p><strong>OperationId:</strong>cashOutPrepaidCard</p>
     * Operation to cash out prepaid card.
     */
    cashOutPrepaidCardRaw(requestParameters: CashOutPrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashOutPrepaidCardStatus>>;
    /**
     * You can use this API to cashOut Prepaid Card. <p><strong>OperationId:</strong>cashOutPrepaidCard</p>
     * Operation to cash out prepaid card.
     */
    cashOutPrepaidCard(requestParameters: CashOutPrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashOutPrepaidCardStatus>;
    /**
     * You can use this API to change Billing Payment. <p><strong>OperationId:</strong>changeBillingPayment</p>
     * Change Billing Payment
     */
    changeBillingPaymentRaw(requestParameters: ChangeBillingPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Billing Payment. <p><strong>OperationId:</strong>changeBillingPayment</p>
     * Change Billing Payment
     */
    changeBillingPayment(requestParameters: ChangeBillingPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to update routing instructions for a specified reservation. <p><strong>OperationId:</strong>changeRoutingInstructions</p>
     * Change routing instructions
     */
    changeRoutingInstructionsRaw(requestParameters: ChangeRoutingInstructionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChangedRoutingInstructions>>;
    /**
     * You can use this API to update routing instructions for a specified reservation. <p><strong>OperationId:</strong>changeRoutingInstructions</p>
     * Change routing instructions
     */
    changeRoutingInstructions(requestParameters: ChangeRoutingInstructionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChangedRoutingInstructions>;
    /**
     * You can use this API to change posted rate codes. <p><strong>OperationId:</strong>checkPostRateCode</p>
     * Change posted rate codes
     */
    checkPostRateCodeRaw(requestParameters: CheckPostRateCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckedRateCode>>;
    /**
     * You can use this API to change posted rate codes. <p><strong>OperationId:</strong>checkPostRateCode</p>
     * Change posted rate codes
     */
    checkPostRateCode(requestParameters: CheckPostRateCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckedRateCode>;
    /**
     * You can use this API to close the Reservation Folio on a reservation. <p><strong>OperationId:</strong>closeReservationFolio</p>
     * Close Reservation Folio
     */
    closeReservationFolioRaw(requestParameters: CloseReservationFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to close the Reservation Folio on a reservation. <p><strong>OperationId:</strong>closeReservationFolio</p>
     * Close Reservation Folio
     */
    closeReservationFolio(requestParameters: CloseReservationFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Convert folio. <p><strong>OperationId:</strong>convertFolio</p>
     * Convert Folio
     */
    convertFolioRaw(requestParameters: ConvertFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConvertFolioDetails>>;
    /**
     * You can use this API to Convert folio. <p><strong>OperationId:</strong>convertFolio</p>
     * Convert Folio
     */
    convertFolio(requestParameters: ConvertFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConvertFolioDetails>;
    /**
     * You can use this API to reverse the Advance Folio Transactions on a reservation. As part of reversal, the actual charges may not be deleted but only an offset will be posted.<p><strong>OperationId:</strong>reverseAdvanceFolio</p>
     * Delete Advance Folio Transactions
     */
    deleteAdvanceRoomChargesRaw(requestParameters: DeleteAdvanceRoomChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to reverse the Advance Folio Transactions on a reservation. As part of reversal, the actual charges may not be deleted but only an offset will be posted.<p><strong>OperationId:</strong>reverseAdvanceFolio</p>
     * Delete Advance Folio Transactions
     */
    deleteAdvanceRoomCharges(requestParameters: DeleteAdvanceRoomChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete comp routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteCompRoutingInstructions</p>
     * Delete comp routing instructions
     */
    deleteCompRoutingInstructionsRaw(requestParameters: DeleteCompRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomRoutingPostings>>;
    /**
     * You can use this API to delete comp routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteCompRoutingInstructions</p>
     * Delete comp routing instructions
     */
    deleteCompRoutingInstructions(requestParameters: DeleteCompRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomRoutingPostings>;
    /**
     * You can use this API to delete folio routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteFolioRoutingInstructions</p>
     * Delete Folio routing instructions
     */
    deleteFolioRoutingInstructionsRaw(requestParameters: DeleteFolioRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomRoutingPostings>>;
    /**
     * You can use this API to delete folio routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteFolioRoutingInstructions</p>
     * Delete Folio routing instructions
     */
    deleteFolioRoutingInstructions(requestParameters: DeleteFolioRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomRoutingPostings>;
    /**
     * You can use this API to delete request routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRequestRoutingInstructions</p>
     * Delete request routing instructions
     */
    deleteRequestRoutingInstructionsRaw(requestParameters: DeleteRequestRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomRoutingPostings>>;
    /**
     * You can use this API to delete request routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRequestRoutingInstructions</p>
     * Delete request routing instructions
     */
    deleteRequestRoutingInstructions(requestParameters: DeleteRequestRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomRoutingPostings>;
    /**
     * You can use this API to delete room routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRoomRoutingInstructions</p>
     * Delete Room routing instructions
     */
    deleteRoomRoutingInstructionsRaw(requestParameters: DeleteRoomRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomRoutingPostings>>;
    /**
     * You can use this API to delete room routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRoomRoutingInstructions</p>
     * Delete Room routing instructions
     */
    deleteRoomRoutingInstructions(requestParameters: DeleteRoomRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomRoutingPostings>;
    /**
     * You can use this API to delete routing instructions for a specified reservation.<br><p><strong><mark>This API is deprecated. Please use deleteFolioRoutingInstructions or  deleteRoomRoutingInstructions or deleteCompRoutingInstructions or deleteRequestRoutingInstructions instead</mark></strong></p> <p><strong>OperationId:</strong>deleteRoutingInstructions</p>
     * Delete routing instructions
     */
    deleteRoutingInstructionsRaw(requestParameters: DeleteRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete routing instructions for a specified reservation.<br><p><strong><mark>This API is deprecated. Please use deleteFolioRoutingInstructions or  deleteRoomRoutingInstructions or deleteCompRoutingInstructions or deleteRequestRoutingInstructions instead</mark></strong></p> <p><strong>OperationId:</strong>deleteRoutingInstructions</p>
     * Delete routing instructions
     */
    deleteRoutingInstructions(requestParameters: DeleteRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to detach Deposit Policy from Payment. <p><strong>OperationId:</strong>detachDepositPolicyFromPayment</p>
     * Detach Deposit Policy from Payment
     */
    detachDepositPolicyFromPaymentRaw(requestParameters: DetachDepositPolicyFromPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to detach Deposit Policy from Payment. <p><strong>OperationId:</strong>detachDepositPolicyFromPayment</p>
     * Detach Deposit Policy from Payment
     */
    detachDepositPolicyFromPayment(requestParameters: DetachDepositPolicyFromPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Fiscal Information Folio. <p><strong>OperationId:</strong>generateFiscalFolio</p>
     * Create Fiscal Information Folio
     */
    generateFiscalFolioRaw(requestParameters: GenerateFiscalFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FiscalInformationFolio>>;
    /**
     * You can use this API to create Fiscal Information Folio. <p><strong>OperationId:</strong>generateFiscalFolio</p>
     * Create Fiscal Information Folio
     */
    generateFiscalFolio(requestParameters: GenerateFiscalFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FiscalInformationFolio>;
    /**
     * You can use this API to generate folios for a reservation. <p><strong>OperationId:</strong>generateFolio</p>
     * Generate Folios
     */
    generateFolioRaw(requestParameters: GenerateFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeneratedFolio>>;
    /**
     * You can use this API to generate folios for a reservation. <p><strong>OperationId:</strong>generateFolio</p>
     * Generate Folios
     */
    generateFolio(requestParameters: GenerateFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeneratedFolio>;
    /**
     * You can use this API to get Additional Taxes. <p><strong>OperationId:</strong>getAdditionalTaxes</p>
     * Get additional Taxes
     */
    getAdditionalTaxesRaw(requestParameters: GetAdditionalTaxesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdditionalTaxesDetails>>;
    /**
     * You can use this API to get Additional Taxes. <p><strong>OperationId:</strong>getAdditionalTaxes</p>
     * Get additional Taxes
     */
    getAdditionalTaxes(requestParameters: GetAdditionalTaxesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdditionalTaxesDetails>;
    /**
     * You can use this API to get advance payment balance. <p><strong>OperationId:</strong>getAdvancePaymentBalance</p>
     * Get advance payment balance
     */
    getAdvancePaymentBalanceRaw(requestParameters: GetAdvancePaymentBalanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvancePaymentBalance>>;
    /**
     * You can use this API to get advance payment balance. <p><strong>OperationId:</strong>getAdvancePaymentBalance</p>
     * Get advance payment balance
     */
    getAdvancePaymentBalance(requestParameters: GetAdvancePaymentBalanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvancePaymentBalance>;
    /**
     * You can use this API to get Alert Notices.<br><p><strong><mark>This API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getAlerts</p>
     * Get Alert Notices
     */
    getAlertsRaw(requestParameters: GetAlertsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertNotices>>;
    /**
     * You can use this API to get Alert Notices.<br><p><strong><mark>This API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getAlerts</p>
     * Get Alert Notices
     */
    getAlerts(requestParameters: GetAlertsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertNotices>;
    /**
     * You can use this API to get authorization history. <p><strong>OperationId:</strong>getAuthorizationHistory</p>
     * Get authorization history
     */
    getAuthorizationHistoryRaw(requestParameters: GetAuthorizationHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthorizationHistory>>;
    /**
     * You can use this API to get authorization history. <p><strong>OperationId:</strong>getAuthorizationHistory</p>
     * Get authorization history
     */
    getAuthorizationHistory(requestParameters: GetAuthorizationHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthorizationHistory>;
    /**
     * You can use this API to get Authorizers Credit Info. <p><strong>OperationId:</strong>getAuthorizersCreditInfo</p>
     * Get Authorizers Credit Info
     */
    getAuthorizersCreditInfoRaw(requestParameters: GetAuthorizersCreditInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthorizersCreditInfo>>;
    /**
     * You can use this API to get Authorizers Credit Info. <p><strong>OperationId:</strong>getAuthorizersCreditInfo</p>
     * Get Authorizers Credit Info
     */
    getAuthorizersCreditInfo(requestParameters: GetAuthorizersCreditInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthorizersCreditInfo>;
    /**
     * You can use this API to get Balance Information. <p><strong>OperationId:</strong>getBalanceInfo</p>
     * Get Balance Information
     */
    getBalanceInfoRaw(requestParameters: GetBalanceInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BalanceInfoCriteria>>;
    /**
     * You can use this API to get Balance Information. <p><strong>OperationId:</strong>getBalanceInfo</p>
     * Get Balance Information
     */
    getBalanceInfo(requestParameters: GetBalanceInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BalanceInfoCriteria>;
    /**
     * You can use this API to get batch CC Settlements. <p><strong>OperationId:</strong>getBatchCCSettlements</p>
     * Get batch CC Settlements
     */
    getBatchCCSettlementsRaw(requestParameters: GetBatchCCSettlementsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CcBatchSettlements>>;
    /**
     * You can use this API to get batch CC Settlements. <p><strong>OperationId:</strong>getBatchCCSettlements</p>
     * Get batch CC Settlements
     */
    getBatchCCSettlements(requestParameters: GetBatchCCSettlementsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CcBatchSettlements>;
    /**
     * You can use this API to get Batch CC Settlements Status. <p><strong>OperationId:</strong>getBatchCCSettlementsStatus</p>
     * Get Batch CC Settlements Status
     */
    getBatchCCSettlementsStatusRaw(requestParameters: GetBatchCCSettlementsStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CcBatchSettlementsStatus>>;
    /**
     * You can use this API to get Batch CC Settlements Status. <p><strong>OperationId:</strong>getBatchCCSettlementsStatus</p>
     * Get Batch CC Settlements Status
     */
    getBatchCCSettlementsStatus(requestParameters: GetBatchCCSettlementsStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CcBatchSettlementsStatus>;
    /**
     * You can use this API to Retrieve bed tax information for a property. <p><strong>OperationId:</strong>getBedTaxInfo</p>
     * Get bed tax information
     */
    getBedTaxInfoRaw(requestParameters: GetBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BedTaxInfo>>;
    /**
     * You can use this API to Retrieve bed tax information for a property. <p><strong>OperationId:</strong>getBedTaxInfo</p>
     * Get bed tax information
     */
    getBedTaxInfo(requestParameters: GetBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BedTaxInfo>;
    /**
     * You can use this API to get Billing Instruction Codes. <p><strong>OperationId:</strong>getBillingInstructionCodes</p>
     * Get Billing (routing) Instruction Codes
     */
    getBillingInstructionCodesRaw(requestParameters: GetBillingInstructionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingInstructionCodes>>;
    /**
     * You can use this API to get Billing Instruction Codes. <p><strong>OperationId:</strong>getBillingInstructionCodes</p>
     * Get Billing (routing) Instruction Codes
     */
    getBillingInstructionCodes(requestParameters: GetBillingInstructionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingInstructionCodes>;
    /**
     * You can use this API to get Credit Card Authorization Instructions by Reservation. <p><strong>OperationId:</strong>getCCAuthorizationInstructions</p>
     * Get CC Authorization Instructions
     */
    getCCAuthorizationInstructionsRaw(requestParameters: GetCCAuthorizationInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CcAuthorizationInstructions>>;
    /**
     * You can use this API to get Credit Card Authorization Instructions by Reservation. <p><strong>OperationId:</strong>getCCAuthorizationInstructions</p>
     * Get CC Authorization Instructions
     */
    getCCAuthorizationInstructions(requestParameters: GetCCAuthorizationInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CcAuthorizationInstructions>;
    /**
     * You can use this API to get Credit Card Authorization Instructions by Profile. <p><strong>OperationId:</strong>getCCAuthorizationInstructionsByProfile</p>
     * Get CC Authorization Instructions by Profile
     */
    getCCAuthorizationInstructionsByProfileRaw(requestParameters: GetCCAuthorizationInstructionsByProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CcAuthorizationInstructions>>;
    /**
     * You can use this API to get Credit Card Authorization Instructions by Profile. <p><strong>OperationId:</strong>getCCAuthorizationInstructionsByProfile</p>
     * Get CC Authorization Instructions by Profile
     */
    getCCAuthorizationInstructionsByProfile(requestParameters: GetCCAuthorizationInstructionsByProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CcAuthorizationInstructions>;
    /**
     * You can use this API to get CC Surcharge Information. <p><strong>OperationId:</strong>getCCSurchargeInfo</p>
     * Get CC Surcharge Information
     */
    getCCSurchargeInfoRaw(requestParameters: GetCCSurchargeInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CcSurchargeDetails>>;
    /**
     * You can use this API to get CC Surcharge Information. <p><strong>OperationId:</strong>getCCSurchargeInfo</p>
     * Get CC Surcharge Information
     */
    getCCSurchargeInfo(requestParameters: GetCCSurchargeInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CcSurchargeDetails>;
    /**
     * You can use this API to get Cashier Closure. <p><strong>OperationId:</strong>getCashierClosure</p>
     * Get Cashier Closure
     */
    getCashierClosureRaw(requestParameters: GetCashierClosureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashierClosureDetails>>;
    /**
     * You can use this API to get Cashier Closure. <p><strong>OperationId:</strong>getCashierClosure</p>
     * Get Cashier Closure
     */
    getCashierClosure(requestParameters: GetCashierClosureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashierClosureDetails>;
    /**
     * You can use this API to get Cashier Closure Information. <p><strong>OperationId:</strong>getCashierClosureInfo</p>
     * Get Cashier Closure Information
     */
    getCashierClosureInfoRaw(requestParameters: GetCashierClosureInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashierClosureInformation>>;
    /**
     * You can use this API to get Cashier Closure Information. <p><strong>OperationId:</strong>getCashierClosureInfo</p>
     * Get Cashier Closure Information
     */
    getCashierClosureInfo(requestParameters: GetCashierClosureInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashierClosureInformation>;
    /**
     * You can use this API to get Cashier Closure Reports List. <p><strong>OperationId:</strong>getCashierClosureReportsList</p>
     * Get Cashier Closure Reports List
     */
    getCashierClosureReportsListRaw(requestParameters: GetCashierClosureReportsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashierClosureReportsList>>;
    /**
     * You can use this API to get Cashier Closure Reports List. <p><strong>OperationId:</strong>getCashierClosureReportsList</p>
     * Get Cashier Closure Reports List
     */
    getCashierClosureReportsList(requestParameters: GetCashierClosureReportsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashierClosureReportsList>;
    /**
     * You can use this API to Acquire Cashier Locks. <p><strong>OperationId:</strong>getCashierLock</p>
     * Acquire Cashier Locks
     */
    getCashierLockRaw(requestParameters: GetCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AcquiredCashierLock>>;
    /**
     * You can use this API to Acquire Cashier Locks. <p><strong>OperationId:</strong>getCashierLock</p>
     * Acquire Cashier Locks
     */
    getCashierLock(requestParameters: GetCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AcquiredCashierLock>;
    /**
     * You can use this API to get Cashier Report postings. <p><strong>OperationId:</strong>getCashierReportPostings</p>
     * Get Cashier Report Postings
     */
    getCashierReportPostingsRaw(requestParameters: GetCashierReportPostingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashierReportPostingsInfo>>;
    /**
     * You can use this API to get Cashier Report postings. <p><strong>OperationId:</strong>getCashierReportPostings</p>
     * Get Cashier Report Postings
     */
    getCashierReportPostings(requestParameters: GetCashierReportPostingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashierReportPostingsInfo>;
    /**
     * You can use this API to get Cashier Transactions. <p><strong>OperationId:</strong>getCashierTransactions</p>
     * Get Cashier Transactions
     */
    getCashierTransactionsRaw(requestParameters: GetCashierTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CashierTransactionsDetails>>;
    /**
     * You can use this API to get Cashier Transactions. <p><strong>OperationId:</strong>getCashierTransactions</p>
     * Get Cashier Transactions
     */
    getCashierTransactions(requestParameters: GetCashierTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CashierTransactionsDetails>;
    /**
     * You can use this API to get check details. <p><strong>OperationId:</strong>getCheckDetails</p>
     * Get check details
     */
    getCheckDetailsRaw(requestParameters: GetCheckDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckDetails>>;
    /**
     * You can use this API to get check details. <p><strong>OperationId:</strong>getCheckDetails</p>
     * Get check details
     */
    getCheckDetails(requestParameters: GetCheckDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckDetails>;
    /**
     * You can use this API to get Comp Accounting Journal. <br><p><strong><mark>This API is deprecated. Please use getCompPostingJournal instead</mark></strong></p> <p><strong>OperationId:</strong>getCompAccountingJournal</p>
     * Get Comp Accounting Journal
     */
    getCompAccountingJournalRaw(requestParameters: GetCompAccountingJournalRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompAccountingJournal>>;
    /**
     * You can use this API to get Comp Accounting Journal. <br><p><strong><mark>This API is deprecated. Please use getCompPostingJournal instead</mark></strong></p> <p><strong>OperationId:</strong>getCompAccountingJournal</p>
     * Get Comp Accounting Journal
     */
    getCompAccountingJournal(requestParameters: GetCompAccountingJournalRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompAccountingJournal>;
    /**
     * You can use this API to get Comp Accounting Journal. <p><strong>OperationId:</strong>getCompPostingJournal</p>
     * Get Comp Accounting Journal
     */
    getCompPostingJournalRaw(requestParameters: GetCompPostingJournalRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompAccountingJournal>>;
    /**
     * You can use this API to get Comp Accounting Journal. <p><strong>OperationId:</strong>getCompPostingJournal</p>
     * Get Comp Accounting Journal
     */
    getCompPostingJournal(requestParameters: GetCompPostingJournalRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompAccountingJournal>;
    /**
     * You can use this API to get Comp Routing Instructions. <p><strong>OperationId:</strong>getCompRoutingInstructions</p>
     * Get Comp Routing Instructions
     */
    getCompRoutingInstructionsRaw(requestParameters: GetCompRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompRoutingInstructions>>;
    /**
     * You can use this API to get Comp Routing Instructions. <p><strong>OperationId:</strong>getCompRoutingInstructions</p>
     * Get Comp Routing Instructions
     */
    getCompRoutingInstructions(requestParameters: GetCompRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompRoutingInstructions>;
    /**
     * You can use this API to get Comp Trx Authorizers. <p><strong>OperationId:</strong>getCompTrxAuthorizers</p>
     * Get Comp Trx Authorizers
     */
    getCompTrxAuthorizersRaw(requestParameters: GetCompTrxAuthorizersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompTrxAuthorizers>>;
    /**
     * You can use this API to get Comp Trx Authorizers. <p><strong>OperationId:</strong>getCompTrxAuthorizers</p>
     * Get Comp Trx Authorizers
     */
    getCompTrxAuthorizers(requestParameters: GetCompTrxAuthorizersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompTrxAuthorizers>;
    /**
     * You can use this API to get Credit Limits Overage Payments. <p><strong>OperationId:</strong>getCreditLimitOveragePayments</p>
     * Get Credit Limits Overage Payments
     */
    getCreditLimitOveragePaymentsRaw(requestParameters: GetCreditLimitOveragePaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditLimitOveragePaymentsInfo>>;
    /**
     * You can use this API to get Credit Limits Overage Payments. <p><strong>OperationId:</strong>getCreditLimitOveragePayments</p>
     * Get Credit Limits Overage Payments
     */
    getCreditLimitOveragePayments(requestParameters: GetCreditLimitOveragePaymentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditLimitOveragePaymentsInfo>;
    /**
     * You can use this API to get Deposit Folio. <p><strong>OperationId:</strong>getDepositFolio</p>
     * Get Deposit Folio
     */
    getDepositFolioRaw(requestParameters: GetDepositFolioRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationDepositFolios>>;
    /**
     * You can use this API to get Deposit Folio. <p><strong>OperationId:</strong>getDepositFolio</p>
     * Get Deposit Folio
     */
    getDepositFolio(requestParameters: GetDepositFolioRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationDepositFolios>;
    /**
     * You can use this API to get Deposit Folio Transaction Details. <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>
     * Get Deposit Folio Transaction Details
     */
    getDepositFolioTransactionDetailsRaw(requestParameters: GetDepositFolioTransactionDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositFolioTransactionDetails>>;
    /**
     * You can use this API to get Deposit Folio Transaction Details. <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>
     * Get Deposit Folio Transaction Details
     */
    getDepositFolioTransactionDetails(requestParameters: GetDepositFolioTransactionDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositFolioTransactionDetails>;
    /**
     * You can use this API to get Deposit Maturity Information. <p><strong>OperationId:</strong>getDepositMaturityInfo</p>
     * Get Deposit Maturity Information
     */
    getDepositMaturityInfoRaw(requestParameters: GetDepositMaturityInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositMaturityDetails>>;
    /**
     * You can use this API to get Deposit Maturity Information. <p><strong>OperationId:</strong>getDepositMaturityInfo</p>
     * Get Deposit Maturity Information
     */
    getDepositMaturityInfo(requestParameters: GetDepositMaturityInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositMaturityDetails>;
    /**
     * Retrieves eligible bill amount in order to post redemption on a reservation folio <p><strong>OperationId:</strong>getEligibleBillAmount</p>
     * Get Eligible Bill Amount
     */
    getEligibleBillAmountRaw(requestParameters: GetEligibleBillAmountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AmountEligible>>;
    /**
     * Retrieves eligible bill amount in order to post redemption on a reservation folio <p><strong>OperationId:</strong>getEligibleBillAmount</p>
     * Get Eligible Bill Amount
     */
    getEligibleBillAmount(requestParameters: GetEligibleBillAmountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AmountEligible>;
    /**
     * You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p>
     * Get Financial Postings
     */
    getFinancialPostingsRaw(requestParameters: GetFinancialPostingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialPostings>>;
    /**
     * You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p>
     * Get Financial Postings
     */
    getFinancialPostings(requestParameters: GetFinancialPostingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialPostings>;
    /**
     * You can use this API to get Financial postings with Net and Vat breakdown. <p><strong>OperationId:</strong>financialPostingsNetVat</p>
     * Get Financial Postings with breakdown
     */
    getFinancialPostingsNetVatRaw(requestParameters: GetFinancialPostingsNetVatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialPostingsNetVat>>;
    /**
     * You can use this API to get Financial postings with Net and Vat breakdown. <p><strong>OperationId:</strong>financialPostingsNetVat</p>
     * Get Financial Postings with breakdown
     */
    getFinancialPostingsNetVat(requestParameters: GetFinancialPostingsNetVatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialPostingsNetVat>;
    /**
     * You can use this API to get the fiscal folio activity details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivity</p>
     * Get the Fiscal Folio Activity for a folio
     */
    getFiscalFolioActivityRaw(requestParameters: GetFiscalFolioActivityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioActivityDetailsType>>;
    /**
     * You can use this API to get the fiscal folio activity details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivity</p>
     * Get the Fiscal Folio Activity for a folio
     */
    getFiscalFolioActivity(requestParameters: GetFiscalFolioActivityRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioActivityDetailsType>;
    /**
     * You can use this API to get the fiscal folio activity response details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivityDetails</p>
     * Get the Fiscal Folio Activity Response details for a folio
     */
    getFiscalFolioActivityDetailsRaw(requestParameters: GetFiscalFolioActivityDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioActivityResponseDetailType>>;
    /**
     * You can use this API to get the fiscal folio activity response details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivityDetails</p>
     * Get the Fiscal Folio Activity Response details for a folio
     */
    getFiscalFolioActivityDetails(requestParameters: GetFiscalFolioActivityDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioActivityResponseDetailType>;
    /**
     * You can use this API to get Fiscal Printing Details.<br><p><strong><mark>This API is deprecated. Please use getValidateFiscalPrintingDetails instead</mark></strong></p> <p><strong>OperationId:</strong>getFiscalPrintingDetails</p>
     * Get Fiscal Printing Details
     */
    getFiscalPrintingDetailsRaw(requestParameters: GetFiscalPrintingDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FiscalCallStatus>>;
    /**
     * You can use this API to get Fiscal Printing Details.<br><p><strong><mark>This API is deprecated. Please use getValidateFiscalPrintingDetails instead</mark></strong></p> <p><strong>OperationId:</strong>getFiscalPrintingDetails</p>
     * Get Fiscal Printing Details
     */
    getFiscalPrintingDetails(requestParameters: GetFiscalPrintingDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FiscalCallStatus>;
    /**
     * This API is used to get the list of supporting documents for the reservations. <p><strong>OperationId:</strong>getSupportingDocuments</p>
     * Get supporting documents details.
     */
    getFiscalSupportingDocumentsRaw(requestParameters: GetFiscalSupportingDocumentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FiscalSupportingDocumentsResponse>>;
    /**
     * This API is used to get the list of supporting documents for the reservations. <p><strong>OperationId:</strong>getSupportingDocuments</p>
     * Get supporting documents details.
     */
    getFiscalSupportingDocuments(requestParameters: GetFiscalSupportingDocumentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FiscalSupportingDocumentsResponse>;
    /**
     * You can use this API to get fixed Charges for a reservation. <p><strong>OperationId:</strong>getFixedCharges</p>
     * Get Fixed Charges
     */
    getFixedChargesRaw(requestParameters: GetFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FixedChargesDetails>>;
    /**
     * You can use this API to get fixed Charges for a reservation. <p><strong>OperationId:</strong>getFixedCharges</p>
     * Get Fixed Charges
     */
    getFixedCharges(requestParameters: GetFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FixedChargesDetails>;
    /**
     * This API is used to fetch the folios for a given reservation. A guest reservation could have 1 or more folios per reservation. Folios will only exist for a reservation once the guest has checked into the hotel. <p><strong>OperationId:</strong>getFolio</p>
     * Get folios
     */
    getFolioRaw(requestParameters: GetFolioRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folio>>;
    /**
     * This API is used to fetch the folios for a given reservation. A guest reservation could have 1 or more folios per reservation. Folios will only exist for a reservation once the guest has checked into the hotel. <p><strong>OperationId:</strong>getFolio</p>
     * Get folios
     */
    getFolio(requestParameters: GetFolioRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folio>;
    /**
     * You can use this API to get folio history for a reservation. <p><strong>OperationId:</strong>getFolioHistory</p>
     * Get folio history
     */
    getFolioHistoryRaw(requestParameters: GetFolioHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioHistoryResponse>>;
    /**
     * You can use this API to get folio history for a reservation. <p><strong>OperationId:</strong>getFolioHistory</p>
     * Get folio history
     */
    getFolioHistory(requestParameters: GetFolioHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioHistoryResponse>;
    /**
     * You can use this API to get folio printers. <p><strong>OperationId:</strong>getFolioPrinters</p>
     * Get folio printers
     */
    getFolioPrintersRaw(requestParameters: GetFolioPrintersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioPrinters>>;
    /**
     * You can use this API to get folio printers. <p><strong>OperationId:</strong>getFolioPrinters</p>
     * Get folio printers
     */
    getFolioPrinters(requestParameters: GetFolioPrintersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioPrinters>;
    /**
     * You can use this API to get folio tax payments information. <p><strong>OperationId:</strong>getFolioTaxPaymentsInfo</p>
     * Get folio tax payments information
     */
    getFolioTaxPaymentsInfoRaw(requestParameters: GetFolioTaxPaymentsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioTaxPaymentsInfo>>;
    /**
     * You can use this API to get folio tax payments information. <p><strong>OperationId:</strong>getFolioTaxPaymentsInfo</p>
     * Get folio tax payments information
     */
    getFolioTaxPaymentsInfo(requestParameters: GetFolioTaxPaymentsInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioTaxPaymentsInfo>;
    /**
     * You can use this API to get Folio Transaction Details. <p><strong>OperationId:</strong>getFolioTransactionDetails</p>
     * Get Folio Transaction Details
     */
    getFolioTransactionDetailsRaw(requestParameters: GetFolioTransactionDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioTransactionDetails>>;
    /**
     * You can use this API to get Folio Transaction Details. <p><strong>OperationId:</strong>getFolioTransactionDetails</p>
     * Get Folio Transaction Details
     */
    getFolioTransactionDetails(requestParameters: GetFolioTransactionDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioTransactionDetails>;
    /**
     * You can use this API to get Folio Type Name. <p><strong>OperationId:</strong>getFolioTypeName</p>
     * Get Folio Type Name
     */
    getFolioTypeNameRaw(requestParameters: GetFolioTypeNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioTypeNameInfo>>;
    /**
     * You can use this API to get Folio Type Name. <p><strong>OperationId:</strong>getFolioTypeName</p>
     * Get Folio Type Name
     */
    getFolioTypeName(requestParameters: GetFolioTypeNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioTypeNameInfo>;
    /**
     * You can use this API to get Folio Types. <p><strong>OperationId:</strong>getFolioTypes</p>
     * Get Folio Types
     */
    getFolioTypesRaw(requestParameters: GetFolioTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioTypesInfo>>;
    /**
     * You can use this API to get Folio Types. <p><strong>OperationId:</strong>getFolioTypes</p>
     * Get Folio Types
     */
    getFolioTypes(requestParameters: GetFolioTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioTypesInfo>;
    /**
     * You can use this API to get Gaming Request Status Information. <p><strong>OperationId:</strong>getGamingRequestStatusInfo</p>
     * Get Gaming Request Status
     */
    getGamingRequestStatusInfoRaw(requestParameters: GetGamingRequestStatusInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GamingRequestStatusInfo>>;
    /**
     * You can use this API to get Gaming Request Status Information. <p><strong>OperationId:</strong>getGamingRequestStatusInfo</p>
     * Get Gaming Request Status
     */
    getGamingRequestStatusInfo(requestParameters: GetGamingRequestStatusInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GamingRequestStatusInfo>;
    /**
     * You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p>
     * Get Guests Transactions
     */
    getGuestsTransactionsRaw(requestParameters: GetGuestsTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestsTransactions>>;
    /**
     * You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p>
     * Get Guests Transactions
     */
    getGuestsTransactions(requestParameters: GetGuestsTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestsTransactions>;
    /**
     * This API is used to fetch the credit card wallet from the specified hotel and profile. <p><strong>OperationId: getHotelCreditCardWallet</strong></p>
     * credit card wallet
     */
    getHotelCreditCardWalletRaw(requestParameters: GetHotelCreditCardWalletRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditCardWallet>>;
    /**
     * This API is used to fetch the credit card wallet from the specified hotel and profile. <p><strong>OperationId: getHotelCreditCardWallet</strong></p>
     * credit card wallet
     */
    getHotelCreditCardWallet(requestParameters: GetHotelCreditCardWalletRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditCardWallet>;
    /**
     * You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>
     * Get Hotel Revenue
     */
    getHotelRevenueRaw(requestParameters: GetHotelRevenueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelRevenueDetails>>;
    /**
     * You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>
     * Get Hotel Revenue
     */
    getHotelRevenue(requestParameters: GetHotelRevenueRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelRevenueDetails>;
    /**
     * You can use this API to fetch matured deposits. <p><strong>OperationId:</strong>getMaturedDeposits</p>
     * Get matured deposits
     */
    getMaturedDepositsRaw(requestParameters: GetMaturedDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MaturedDepositsDetails>>;
    /**
     * You can use this API to fetch matured deposits. <p><strong>OperationId:</strong>getMaturedDeposits</p>
     * Get matured deposits
     */
    getMaturedDeposits(requestParameters: GetMaturedDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MaturedDepositsDetails>;
    /**
     * You can use this API to get post Billing Charges. <p><strong>OperationId:</strong>getPostBillingCharges</p>
     * Get Billing Charges
     */
    getPostBillingChargesRaw(requestParameters: GetPostBillingChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingChargesStatus>>;
    /**
     * You can use this API to get post Billing Charges. <p><strong>OperationId:</strong>getPostBillingCharges</p>
     * Get Billing Charges
     */
    getPostBillingCharges(requestParameters: GetPostBillingChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingChargesStatus>;
    /**
     * You can use this API to get posting activity details. <p><strong>OperationId:</strong>getPostingActivityDetail</p>
     * Get posting activity details
     */
    getPostingActivityDetailRaw(requestParameters: GetPostingActivityDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostingActivityDetail>>;
    /**
     * You can use this API to get posting activity details. <p><strong>OperationId:</strong>getPostingActivityDetail</p>
     * Get posting activity details
     */
    getPostingActivityDetail(requestParameters: GetPostingActivityDetailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostingActivityDetail>;
    /**
     * You can use this API to get posting Summary. <p><strong>OperationId:</strong>getPostingSummary</p>
     * Get Posting Summary
     */
    getPostingSummaryRaw(requestParameters: GetPostingSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostingSummaryList>>;
    /**
     * You can use this API to get posting Summary. <p><strong>OperationId:</strong>getPostingSummary</p>
     * Get Posting Summary
     */
    getPostingSummary(requestParameters: GetPostingSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostingSummaryList>;
    /**
     * You can use this API to get postings For Refresh. <p><strong>OperationId:</strong>getPostingsForRefresh</p>
     * Get Postings For Refresh
     */
    getPostingsForRefreshRaw(requestParameters: GetPostingsForRefreshRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostingsForRefresh>>;
    /**
     * You can use this API to get postings For Refresh. <p><strong>OperationId:</strong>getPostingsForRefresh</p>
     * Get Postings For Refresh
     */
    getPostingsForRefresh(requestParameters: GetPostingsForRefreshRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostingsForRefresh>;
    /**
     * You can use this API to get Receipt History. <p><strong>OperationId:</strong>getReceiptHistory</p>
     * Get Receipt History
     */
    getReceiptHistoryRaw(requestParameters: GetReceiptHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReceiptHistoryResponse>>;
    /**
     * You can use this API to get Receipt History. <p><strong>OperationId:</strong>getReceiptHistory</p>
     * Get Receipt History
     */
    getReceiptHistory(requestParameters: GetReceiptHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReceiptHistoryResponse>;
    /**
     * You can use this API to get Reservation Package Options. <p><strong>OperationId:</strong>getReservationPackageOptions</p>
     * Get Reservation Package Options
     */
    getReservationPackageOptionsRaw(requestParameters: GetReservationPackageOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationPackageOptions>>;
    /**
     * You can use this API to get Reservation Package Options. <p><strong>OperationId:</strong>getReservationPackageOptions</p>
     * Get Reservation Package Options
     */
    getReservationPackageOptions(requestParameters: GetReservationPackageOptionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationPackageOptions>;
    /**
     * You can use this API to get a reservations Revenue Bucket Totals. <p><strong>OperationId:</strong>getReservationRevenueBucketTotals</p>
     * Get Reservations Revenue Bucket Totals
     */
    getReservationRevenueBucketTotalsRaw(requestParameters: GetReservationRevenueBucketTotalsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RevenueBucketTotals>>;
    /**
     * You can use this API to get a reservations Revenue Bucket Totals. <p><strong>OperationId:</strong>getReservationRevenueBucketTotals</p>
     * Get Reservations Revenue Bucket Totals
     */
    getReservationRevenueBucketTotals(requestParameters: GetReservationRevenueBucketTotalsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RevenueBucketTotals>;
    /**
     * You can use this API to get Rounding Difference. <p><strong>OperationId:</strong>getRoundingDifference</p>
     * Get Rounding Difference
     */
    getRoundingDifferenceRaw(requestParameters: GetRoundingDifferenceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoundingDifferenceAmount>>;
    /**
     * You can use this API to get Rounding Difference. <p><strong>OperationId:</strong>getRoundingDifference</p>
     * Get Rounding Difference
     */
    getRoundingDifference(requestParameters: GetRoundingDifferenceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoundingDifferenceAmount>;
    /**
     * You can use this API to retrieve routing instructions for a specified reservation. <p><strong>OperationId:</strong>getRoutingInstructions</p>
     * Get routing instructions
     */
    getRoutingInstructionsRaw(requestParameters: GetRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoutingInstructionsDetails>>;
    /**
     * You can use this API to retrieve routing instructions for a specified reservation. <p><strong>OperationId:</strong>getRoutingInstructions</p>
     * Get routing instructions
     */
    getRoutingInstructions(requestParameters: GetRoutingInstructionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoutingInstructionsDetails>;
    /**
     * You can use this API to get Stored Folio Details. <p><strong>OperationId:</strong>getStoredFolioDetails</p>
     * Get Stored Folio Details
     */
    getStoredFolioDetailsRaw(requestParameters: GetStoredFolioDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StoredFolioDetailsInfo>>;
    /**
     * You can use this API to get Stored Folio Details. <p><strong>OperationId:</strong>getStoredFolioDetails</p>
     * Get Stored Folio Details
     */
    getStoredFolioDetails(requestParameters: GetStoredFolioDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StoredFolioDetailsInfo>;
    /**
     * You can use this API to retrieve a list of Transaction Codes configured for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>
     * Get Transaction Codes
     */
    getTransactionCodesRaw(requestParameters: GetTransactionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransactionCodes>>;
    /**
     * You can use this API to retrieve a list of Transaction Codes configured for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>
     * Get Transaction Codes
     */
    getTransactionCodes(requestParameters: GetTransactionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransactionCodes>;
    /**
     * You can use this API to get Fiscal Printing Details. <p><strong>OperationId:</strong>getValidateFiscalPrintingDetails</p>
     * Get Fiscal Printing Details
     */
    getValidateFiscalPrintingDetailsRaw(requestParameters: GetValidateFiscalPrintingDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FiscalCallStatus>>;
    /**
     * You can use this API to get Fiscal Printing Details. <p><strong>OperationId:</strong>getValidateFiscalPrintingDetails</p>
     * Get Fiscal Printing Details
     */
    getValidateFiscalPrintingDetails(requestParameters: GetValidateFiscalPrintingDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FiscalCallStatus>;
    /**
     * This API is used to fetch the staged transactions for a given reservation. <p><strong>OperationId:</strong>getfetchStagedTransactions</p>
     * Get fetchStagedTransactions
     */
    getfetchStagedTransactionsRaw(requestParameters: GetfetchStagedTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StagedTransactions>>;
    /**
     * This API is used to fetch the staged transactions for a given reservation. <p><strong>OperationId:</strong>getfetchStagedTransactions</p>
     * Get fetchStagedTransactions
     */
    getfetchStagedTransactions(requestParameters: GetfetchStagedTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StagedTransactions>;
    /**
     * You can use this API to get eligibility of Deposit Refund. <p><strong>OperationId:</strong>isDepositRefundEligible</p>
     * Get eligibility of Deposit Refund
     */
    isDepositRefundEligibleRaw(requestParameters: IsDepositRefundEligibleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositRefundEligibleCheck>>;
    /**
     * You can use this API to get eligibility of Deposit Refund. <p><strong>OperationId:</strong>isDepositRefundEligible</p>
     * Get eligibility of Deposit Refund
     */
    isDepositRefundEligible(requestParameters: IsDepositRefundEligibleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositRefundEligibleCheck>;
    /**
     * You can use this API to link reservation package allowance. <p><strong>OperationId:</strong>linkReservationPackageAllowance</p>
     * Link Reservation package allowance
     */
    linkReservationPackageAllowanceRaw(requestParameters: LinkReservationPackageAllowanceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to link reservation package allowance. <p><strong>OperationId:</strong>linkReservationPackageAllowance</p>
     * Link Reservation package allowance
     */
    linkReservationPackageAllowance(requestParameters: LinkReservationPackageAllowanceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Batch Advance Folio. <p><strong>OperationId:</strong>postAdvanceFolio</p>
     * Create Batch Advance Folio
     */
    postAdvanceFolioRaw(requestParameters: PostAdvanceFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Batch Advance Folio. <p><strong>OperationId:</strong>postAdvanceFolio</p>
     * Create Batch Advance Folio
     */
    postAdvanceFolio(requestParameters: PostAdvanceFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create advance Room Charges. <p><strong>OperationId:</strong>postAdvanceRoomCharges</p>
     * Create advance Room Charges
     */
    postAdvanceRoomChargesRaw(requestParameters: PostAdvanceRoomChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdvanceRoomChargesReservationInfo>>;
    /**
     * You can use this API to create advance Room Charges. <p><strong>OperationId:</strong>postAdvanceRoomCharges</p>
     * Create advance Room Charges
     */
    postAdvanceRoomCharges(requestParameters: PostAdvanceRoomChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdvanceRoomChargesReservationInfo>;
    /**
     * You can use this API to create Articles Sale. <p><strong>OperationId:</strong>postArticlesSale</p>
     * Create Articles Sale
     */
    postArticlesSaleRaw(requestParameters: PostArticlesSaleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ArticlesSale>>;
    /**
     * You can use this API to create Articles Sale. <p><strong>OperationId:</strong>postArticlesSale</p>
     * Create Articles Sale
     */
    postArticlesSale(requestParameters: PostArticlesSaleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ArticlesSale>;
    /**
     * You can use this API to create Auto Checkout Reservation Batch. <p><strong>OperationId:</strong>postAutoCheckoutReservations</p>
     * Create Auto Checkout Reservation Batch
     */
    postAutoCheckoutReservationsRaw(requestParameters: PostAutoCheckoutReservationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BatchAutoCheckoutDetails>>;
    /**
     * You can use this API to create Auto Checkout Reservation Batch. <p><strong>OperationId:</strong>postAutoCheckoutReservations</p>
     * Create Auto Checkout Reservation Batch
     */
    postAutoCheckoutReservations(requestParameters: PostAutoCheckoutReservationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BatchAutoCheckoutDetails>;
    /**
     * Creates a new membership award payment transaction. <p><strong>OperationId:</strong>postAwardTransaction</p>
     * Post a membership award payment transaction.
     */
    postAwardTransactionRaw(requestParameters: PostAwardTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Creates a new membership award payment transaction. <p><strong>OperationId:</strong>postAwardTransaction</p>
     * Post a membership award payment transaction.
     */
    postAwardTransaction(requestParameters: PostAwardTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Batch Auto Settlement. <p><strong>OperationId:</strong>postBatchAutoSettlement</p>
     * Create Batch Auto Settlement
     */
    postBatchAutoSettlementRaw(requestParameters: PostBatchAutoSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Batch Auto Settlement. <p><strong>OperationId:</strong>postBatchAutoSettlement</p>
     * Create Batch Auto Settlement
     */
    postBatchAutoSettlement(requestParameters: PostBatchAutoSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Batch CC Settlements. <p><strong>OperationId:</strong>postBatchCCSettlements</p>
     * Create Batch CC Settlements
     */
    postBatchCCSettlementsRaw(requestParameters: PostBatchCCSettlementsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Batch CC Settlements. <p><strong>OperationId:</strong>postBatchCCSettlements</p>
     * Create Batch CC Settlements
     */
    postBatchCCSettlements(requestParameters: PostBatchCCSettlementsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create batch deposits. <p><strong>OperationId:</strong>postBatchDeposit</p>
     * Create batch deposits
     */
    postBatchDepositRaw(requestParameters: PostBatchDepositOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create batch deposits. <p><strong>OperationId:</strong>postBatchDeposit</p>
     * Create batch deposits
     */
    postBatchDeposit(requestParameters: PostBatchDepositOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create new bed tax information for a property. <p><strong>OperationId:</strong>postBedTaxInfo</p>
     * Create bed tax information
     */
    postBedTaxInfoRaw(requestParameters: PostBedTaxInfoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create new bed tax information for a property. <p><strong>OperationId:</strong>postBedTaxInfo</p>
     * Create bed tax information
     */
    postBedTaxInfo(requestParameters: PostBedTaxInfoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to post a charge to a folio window. <p><strong>OperationId:</strong>postBillingCharges</p>
     * Post Charge to a folio
     */
    postBillingChargesRaw(requestParameters: PostBillingChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingChargesDetails>>;
    /**
     * You can use this API to post a charge to a folio window. <p><strong>OperationId:</strong>postBillingCharges</p>
     * Post Charge to a folio
     */
    postBillingCharges(requestParameters: PostBillingChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingChargesDetails>;
    /**
     * You can use this API to create Billing Charges in Batch. <p><strong>OperationId:</strong>postBillingChargesInBatch</p>
     * Create Billing Charges in Batch
     */
    postBillingChargesInBatchRaw(requestParameters: PostBillingChargesInBatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostedBillingChargesInBatch>>;
    /**
     * You can use this API to create Billing Charges in Batch. <p><strong>OperationId:</strong>postBillingChargesInBatch</p>
     * Create Billing Charges in Batch
     */
    postBillingChargesInBatch(requestParameters: PostBillingChargesInBatchOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostedBillingChargesInBatch>;
    /**
     * You can use this API to validate the posting prior to posting the charge to the folio <p><strong>OperationId:</strong>postBillingCheckCharges</p>
     * Pre-validate the Billing Charge
     */
    postBillingCheckChargesRaw(requestParameters: PostBillingCheckChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to validate the posting prior to posting the charge to the folio <p><strong>OperationId:</strong>postBillingCheckCharges</p>
     * Pre-validate the Billing Charge
     */
    postBillingCheckCharges(requestParameters: PostBillingCheckChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Billing Payment on the folio of a Reservation. <p><strong>OperationId:</strong>postBillingPayment</p>
     * Create Billing Payment
     */
    postBillingPaymentRaw(requestParameters: PostBillingPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostedBillingPayment>>;
    /**
     * You can use this API to create Billing Payment on the folio of a Reservation. <p><strong>OperationId:</strong>postBillingPayment</p>
     * Create Billing Payment
     */
    postBillingPayment(requestParameters: PostBillingPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostedBillingPayment>;
    /**
     * You can use this API to create cc Settlement. <p><strong>OperationId:</strong>postCCSettlement</p>
     * Create CreditCard Settlement
     */
    postCCSettlementRaw(requestParameters: PostCCSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create cc Settlement. <p><strong>OperationId:</strong>postCCSettlement</p>
     * Create CreditCard Settlement
     */
    postCCSettlement(requestParameters: PostCCSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API enables you to check out a guest reservation which is in due out status, with options to update the room\'s housekeeping status and set a flag to email the guests folio. <p><strong>OperationId:</strong>postCheckOut</p>
     * Check out a guest
     */
    postCheckOutRaw(requestParameters: PostCheckOutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API enables you to check out a guest reservation which is in due out status, with options to update the room\'s housekeeping status and set a flag to email the guests folio. <p><strong>OperationId:</strong>postCheckOut</p>
     * Check out a guest
     */
    postCheckOut(requestParameters: PostCheckOutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to post complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>postCompRedemptions</p>
     * Operation to post complimentary bucket redemptions for a guest having PTS Membership Type
     */
    postCompRedemptionsRaw(requestParameters: PostCompRedemptionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to post complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>postCompRedemptions</p>
     * Operation to post complimentary bucket redemptions for a guest having PTS Membership Type
     */
    postCompRedemptions(requestParameters: PostCompRedemptionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to submit Comp Transactions. <p><strong>OperationId:</strong>postCompTransaction</p>
     * Submit Comp Transaction
     */
    postCompTransactionRaw(requestParameters: PostCompTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to submit Comp Transactions. <p><strong>OperationId:</strong>postCompTransaction</p>
     * Submit Comp Transaction
     */
    postCompTransaction(requestParameters: PostCompTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Credit Bill. <p><strong>OperationId:</strong>postCreditBill</p>
     * Create Credit Bill
     */
    postCreditBillRaw(requestParameters: PostCreditBillOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostedCreditBill>>;
    /**
     * You can use this API to create Credit Bill. <p><strong>OperationId:</strong>postCreditBill</p>
     * Create Credit Bill
     */
    postCreditBill(requestParameters: PostCreditBillOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostedCreditBill>;
    /**
     * You can use this API to create Credit Limit Overage Payments. <p><strong>OperationId:</strong>postCreditLimitOveragePayments</p>
     * Create Credit Limit Overage Payments
     */
    postCreditLimitOveragePaymentsRaw(requestParameters: PostCreditLimitOveragePaymentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreditLimitOveragePaymentsDetails>>;
    /**
     * You can use this API to create Credit Limit Overage Payments. <p><strong>OperationId:</strong>postCreditLimitOveragePayments</p>
     * Create Credit Limit Overage Payments
     */
    postCreditLimitOveragePayments(requestParameters: PostCreditLimitOveragePaymentsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreditLimitOveragePaymentsDetails>;
    /**
     * Request to submit a job to post the deferred taxes. <p><strong>OperationId:</strong>postDeferredTaxesProcess</p>
     * Request to submit a job to post the deferred taxes.
     */
    postDeferredTaxesProcessRaw(requestParameters: PostDeferredTaxesProcessOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeferredTaxesProcessDetails>>;
    /**
     * Request to submit a job to post the deferred taxes. <p><strong>OperationId:</strong>postDeferredTaxesProcess</p>
     * Request to submit a job to post the deferred taxes.
     */
    postDeferredTaxesProcess(requestParameters: PostDeferredTaxesProcessOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeferredTaxesProcessDetails>;
    /**
     * You can use this API to create Deposit Folio. <p><strong>OperationId:</strong>postDepositFolio</p>
     * Create Deposit Folio
     */
    postDepositFolioRaw(requestParameters: PostDepositFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostedDepositFolio>>;
    /**
     * You can use this API to create Deposit Folio. <p><strong>OperationId:</strong>postDepositFolio</p>
     * Create Deposit Folio
     */
    postDepositFolio(requestParameters: PostDepositFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostedDepositFolio>;
    /**
     * You can use this API to create Deposit Payment. <p><strong>OperationId:</strong>postDepositPayment</p>
     * Create Deposit Payment
     */
    postDepositPaymentRaw(requestParameters: PostDepositPaymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositedPayment>>;
    /**
     * You can use this API to create Deposit Payment. <p><strong>OperationId:</strong>postDepositPayment</p>
     * Create Deposit Payment
     */
    postDepositPayment(requestParameters: PostDepositPaymentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositedPayment>;
    /**
     * You can use this API to create Deposit Payment with external reference. <p><strong>OperationId:</strong>postDepositPaymentByExtId</p>
     * Create Deposit Payment using external reference.
     */
    postDepositPaymentByExtIdRaw(requestParameters: PostDepositPaymentByExtIdOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositedPayment>>;
    /**
     * You can use this API to create Deposit Payment with external reference. <p><strong>OperationId:</strong>postDepositPaymentByExtId</p>
     * Create Deposit Payment using external reference.
     */
    postDepositPaymentByExtId(requestParameters: PostDepositPaymentByExtIdOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositedPayment>;
    /**
     * You can use this API to create FBA Reimbursement. <p><strong>OperationId:</strong>postFBAReimbursement</p>
     * Create FBA Reimbursement
     */
    postFBAReimbursementRaw(requestParameters: PostFBAReimbursementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create FBA Reimbursement. <p><strong>OperationId:</strong>postFBAReimbursement</p>
     * Create FBA Reimbursement
     */
    postFBAReimbursement(requestParameters: PostFBAReimbursementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create FBA Settlement. <p><strong>OperationId:</strong>postFBASettlement</p>
     * Create FBA Settlement
     */
    postFBASettlementRaw(requestParameters: PostFBASettlementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create FBA Settlement. <p><strong>OperationId:</strong>postFBASettlement</p>
     * Create FBA Settlement
     */
    postFBASettlement(requestParameters: PostFBASettlementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Fiscal Invoice. <p><strong>OperationId:</strong>postFiscalCommandInvoice</p>
     * Create Fiscal Invoice
     */
    postFiscalCommandInvoiceRaw(requestParameters: PostFiscalCommandInvoiceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FiscalCommandsResponseInfo>>;
    /**
     * You can use this API to create Fiscal Invoice. <p><strong>OperationId:</strong>postFiscalCommandInvoice</p>
     * Create Fiscal Invoice
     */
    postFiscalCommandInvoice(requestParameters: PostFiscalCommandInvoiceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FiscalCommandsResponseInfo>;
    /**
     * API to generate CHECK OUT payload for a reservation
     * Post fiscal Info
     */
    postFiscalInfoRaw(requestParameters: PostFiscalInfoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * API to generate CHECK OUT payload for a reservation
     * Post fiscal Info
     */
    postFiscalInfo(requestParameters: PostFiscalInfoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Fiscal Invoice.<br><p><strong><mark>This API is deprecated. Please use postFiscalCommandInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>postFiscalInvoice</p>
     * Create Fiscal Invoice
     */
    postFiscalInvoiceRaw(requestParameters: PostFiscalInvoiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Fiscal Invoice.<br><p><strong><mark>This API is deprecated. Please use postFiscalCommandInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>postFiscalInvoice</p>
     * Create Fiscal Invoice
     */
    postFiscalInvoice(requestParameters: PostFiscalInvoiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create a fixed Charge for a reservation. <p><strong>OperationId:</strong>postFixedCharges</p>
     * Create Fixed Charges
     */
    postFixedChargesRaw(requestParameters: PostFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create a fixed Charge for a reservation. <p><strong>OperationId:</strong>postFixedCharges</p>
     * Create Fixed Charges
     */
    postFixedCharges(requestParameters: PostFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Create Foreign Currency Exchange. <p><strong>OperationId:</strong>postForeignCurrencyExchange</p>
     * Create Foreign Currency Exchange
     */
    postForeignCurrencyExchangeRaw(requestParameters: PostForeignCurrencyExchangeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ForeignCurrencyExchangeTransaction>>;
    /**
     * You can use this API to Create Foreign Currency Exchange. <p><strong>OperationId:</strong>postForeignCurrencyExchange</p>
     * Create Foreign Currency Exchange
     */
    postForeignCurrencyExchange(requestParameters: PostForeignCurrencyExchangeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ForeignCurrencyExchangeTransaction>;
    /**
     * This operation is to add guest check details for posted check transactions. <p><strong>OperationId:</strong>postGuestCheckDetails</p>
     * Post Guest Check Details
     */
    postGuestCheckDetailsRaw(requestParameters: PostGuestCheckDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This operation is to add guest check details for posted check transactions. <p><strong>OperationId:</strong>postGuestCheckDetails</p>
     * Post Guest Check Details
     */
    postGuestCheckDetails(requestParameters: PostGuestCheckDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create passer by sale. <p><strong>OperationId:</strong>postPasserBySale</p>
     * Create passer by sale
     */
    postPasserBySaleRaw(requestParameters: PostPasserBySaleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PasserBySale>>;
    /**
     * You can use this API to create passer by sale. <p><strong>OperationId:</strong>postPasserBySale</p>
     * Create passer by sale
     */
    postPasserBySale(requestParameters: PostPasserBySaleOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PasserBySale>;
    /**
     * You can use this API to create Prepaid Cards. <p><strong>OperationId:</strong>postPrepaidCards</p>
     * Create Prepaid Cards
     */
    postPrepaidCardsRaw(requestParameters: PostPrepaidCardsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Prepaid Cards. <p><strong>OperationId:</strong>postPrepaidCards</p>
     * Create Prepaid Cards
     */
    postPrepaidCards(requestParameters: PostPrepaidCardsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create proforma for a specific reservation. <p><strong>OperationId:</strong>postProforma</p>
     * Create proforma
     */
    postProformaRaw(requestParameters: PostProformaOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReservationFolioInformation>>;
    /**
     * You can use this API to create proforma for a specific reservation. <p><strong>OperationId:</strong>postProforma</p>
     * Create proforma
     */
    postProforma(requestParameters: PostProformaOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReservationFolioInformation>;
    /**
     * You can use this API to create rate codes. <p><strong>OperationId:</strong>postRateCode</p>
     * Create rate codes
     */
    postRateCodeRaw(requestParameters: PostRateCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostedRateCode>>;
    /**
     * You can use this API to create rate codes. <p><strong>OperationId:</strong>postRateCode</p>
     * Create rate codes
     */
    postRateCode(requestParameters: PostRateCodeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostedRateCode>;
    /**
     * You can use this API to create reverse payments. <p><strong>OperationId:</strong>postReversePayment</p>
     * Create reverse payments
     */
    postReversePaymentRaw(requestParameters: PostReversePaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create reverse payments. <p><strong>OperationId:</strong>postReversePayment</p>
     * Create reverse payments
     */
    postReversePayment(requestParameters: PostReversePaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to post post Room And Tax For DayUse <p><strong>OperationId:</strong>postRoomAndTaxForDayUse</p>
     * Operation to post room and tax for day use.
     */
    postRoomAndTaxForDayUseRaw(requestParameters: PostRoomAndTaxForDayUseOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to post post Room And Tax For DayUse <p><strong>OperationId:</strong>postRoomAndTaxForDayUse</p>
     * Operation to post room and tax for day use.
     */
    postRoomAndTaxForDayUse(requestParameters: PostRoomAndTaxForDayUseOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create Stored Folio Details. <p><strong>OperationId:</strong>postStoredFolioDetails</p>
     * Create Stored Folio Details
     */
    postStoredFolioDetailsRaw(requestParameters: PostStoredFolioDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create Stored Folio Details. <p><strong>OperationId:</strong>postStoredFolioDetails</p>
     * Create Stored Folio Details
     */
    postStoredFolioDetails(requestParameters: PostStoredFolioDetailsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to post supplemental folio. <p><strong>OperationId:</strong>postSupplementalFolio</p>
     * Post supplemental folio
     */
    postSupplementalFolioRaw(requestParameters: PostSupplementalFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostSupplementalFolioStatus>>;
    /**
     * You can use this API to post supplemental folio. <p><strong>OperationId:</strong>postSupplementalFolio</p>
     * Post supplemental folio
     */
    postSupplementalFolio(requestParameters: PostSupplementalFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostSupplementalFolioStatus>;
    /**
     * You can use this API to create Zero Balance Checkout Reservation Batch. <p><strong>OperationId:</strong>postZeroBalanceCheckoutReservations</p>
     * Create Zero Balance Checkout Reservation Batch
     */
    postZeroBalanceCheckoutReservationsRaw(requestParameters: PostZeroBalanceCheckoutReservationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BatchZeroBalanceCheckoutDetails>>;
    /**
     * You can use this API to create Zero Balance Checkout Reservation Batch. <p><strong>OperationId:</strong>postZeroBalanceCheckoutReservations</p>
     * Create Zero Balance Checkout Reservation Batch
     */
    postZeroBalanceCheckoutReservations(requestParameters: PostZeroBalanceCheckoutReservationsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BatchZeroBalanceCheckoutDetails>;
    /**
     * You can use this API to process fiscal retry status. <p><strong>OperationId:</strong>processFiscalRetry</p>
     * Process Fiscal retry
     */
    processFiscalRetryRaw(requestParameters: ProcessFiscalRetryOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProcessFiscalRetryStatus>>;
    /**
     * You can use this API to process fiscal retry status. <p><strong>OperationId:</strong>processFiscalRetry</p>
     * Process Fiscal retry
     */
    processFiscalRetry(requestParameters: ProcessFiscalRetryOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProcessFiscalRetryStatus>;
    /**
     * You can use this API to Process reservations deposit. <p><strong>OperationId:</strong>processReservationDeposit</p>
     * Process Reservations deposit
     */
    processReservationDepositRaw(requestParameters: ProcessReservationDepositOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Process reservations deposit. <p><strong>OperationId:</strong>processReservationDeposit</p>
     * Process Reservations deposit
     */
    processReservationDeposit(requestParameters: ProcessReservationDepositOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Room Routing Refresh. <p><strong>OperationId:</strong>processRoomRoutingRefresh</p>
     * Process Room Routing Refresh
     */
    processRoomRoutingRefreshRaw(requestParameters: ProcessRoomRoutingRefreshOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Room Routing Refresh. <p><strong>OperationId:</strong>processRoomRoutingRefresh</p>
     * Process Room Routing Refresh
     */
    processRoomRoutingRefresh(requestParameters: ProcessRoomRoutingRefreshOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Update bed tax information for a property. <p><strong>OperationId:</strong>putBedTaxInfo</p>
     * Change bed tax information
     */
    putBedTaxInfoRaw(requestParameters: PutBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Update bed tax information for a property. <p><strong>OperationId:</strong>putBedTaxInfo</p>
     * Change bed tax information
     */
    putBedTaxInfo(requestParameters: PutBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharge</p>
     * Change Billing Charge
     */
    putBillingChargeRaw(requestParameters: PutBillingChargeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingChargeStatus>>;
    /**
     * You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharge</p>
     * Change Billing Charge
     */
    putBillingCharge(requestParameters: PutBillingChargeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingChargeStatus>;
    /**
     * You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharges</p>
     * Change Billing Charges
     */
    putBillingChargesRaw(requestParameters: PutBillingChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PutBillingChargesStatus>>;
    /**
     * You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharges</p>
     * Change Billing Charges
     */
    putBillingCharges(requestParameters: PutBillingChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PutBillingChargesStatus>;
    /**
     * You can use this API to change Cashier Closure. <p><strong>OperationId:</strong>putCashier</p>
     * Close Cashier
     */
    putCashierRaw(requestParameters: PutCashierOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Cashier Closure. <p><strong>OperationId:</strong>putCashier</p>
     * Close Cashier
     */
    putCashier(requestParameters: PutCashierOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Extend cashiers lock. <p><strong>OperationId:</strong>putCashierLock</p>
     * Extend Cashier Lock
     */
    putCashierLockRaw(requestParameters: PutCashierLockOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExtendedCashierLock>>;
    /**
     * You can use this API to Extend cashiers lock. <p><strong>OperationId:</strong>putCashierLock</p>
     * Extend Cashier Lock
     */
    putCashierLock(requestParameters: PutCashierLockOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExtendedCashierLock>;
    /**
     * You can use this API to change early Departure. <p><strong>OperationId:</strong>putForEarlyDeparture</p>
     * Change early Departure
     */
    putForEarlyDepartureRaw(requestParameters: PutForEarlyDepartureOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change early Departure. <p><strong>OperationId:</strong>putForEarlyDeparture</p>
     * Change early Departure
     */
    putForEarlyDeparture(requestParameters: PutForEarlyDepartureOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Payee Tax Number. <p><strong>OperationId:</strong>putPayeeTaxNumber</p>
     * Change Payee Tax Number
     */
    putPayeeTaxNumberRaw(requestParameters: PutPayeeTaxNumberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Payee Tax Number. <p><strong>OperationId:</strong>putPayeeTaxNumber</p>
     * Change Payee Tax Number
     */
    putPayeeTaxNumber(requestParameters: PutPayeeTaxNumberOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change Reservation Deposit Transfer. <p><strong>OperationId:</strong>putReservationDepositTransfer</p>
     * Change Reservation Deposit Transfer.
     */
    putReservationDepositTransferRaw(requestParameters: PutReservationDepositTransferOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to change Reservation Deposit Transfer. <p><strong>OperationId:</strong>putReservationDepositTransfer</p>
     * Change Reservation Deposit Transfer.
     */
    putReservationDepositTransfer(requestParameters: PutReservationDepositTransferOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to add routing instructions to a reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>
     * Create routing instructions
     */
    putRoutingInstructionsRaw(requestParameters: PutRoutingInstructionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreatedRoutingInstructions>>;
    /**
     * You can use this API to add routing instructions to a reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>
     * Create routing instructions
     */
    putRoutingInstructions(requestParameters: PutRoutingInstructionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreatedRoutingInstructions>;
    /**
     * You can use this API to redeem Prepaid Cards <p><strong>OperationId:</strong>redeemPrepaidCards</p>
     * Operation to redeem prepaid cards.
     */
    redeemPrepaidCardsRaw(requestParameters: RedeemPrepaidCardsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RedeemPrepaidCardsStatus>>;
    /**
     * You can use this API to redeem Prepaid Cards <p><strong>OperationId:</strong>redeemPrepaidCards</p>
     * Operation to redeem prepaid cards.
     */
    redeemPrepaidCards(requestParameters: RedeemPrepaidCardsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RedeemPrepaidCardsStatus>;
    /**
     * You can use this API to register Manual Authorization. <p><strong>OperationId:</strong>registerManualAuthorization</p>
     * Register Manual Authorization
     */
    registerManualAuthorizationRaw(requestParameters: RegisterManualAuthorizationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to register Manual Authorization. <p><strong>OperationId:</strong>registerManualAuthorization</p>
     * Register Manual Authorization
     */
    registerManualAuthorization(requestParameters: RegisterManualAuthorizationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to create vault transaction. <p><strong>OperationId:</strong>registerVaultTransaction</p>
     * Register Vault Transaction
     */
    registerVaultTransactionRaw(requestParameters: RegisterVaultTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to create vault transaction. <p><strong>OperationId:</strong>registerVaultTransaction</p>
     * Register Vault Transaction
     */
    registerVaultTransaction(requestParameters: RegisterVaultTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to reinstate Checked Out Reservation. <p><strong>OperationId:</strong>reinstateCheckOut</p>
     * Reinstate Checked Out Reservation
     */
    reinstateCheckOutRaw(requestParameters: ReinstateCheckOutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to reinstate Checked Out Reservation. <p><strong>OperationId:</strong>reinstateCheckOut</p>
     * Reinstate Checked Out Reservation
     */
    reinstateCheckOut(requestParameters: ReinstateCheckOutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Release Cashier Lock. <p><strong>OperationId:</strong>releaseCashierLock</p>
     * Release Cashier Lock
     */
    releaseCashierLockRaw(requestParameters: ReleaseCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Release Cashier Lock. <p><strong>OperationId:</strong>releaseCashierLock</p>
     * Release Cashier Lock
     */
    releaseCashierLock(requestParameters: ReleaseCashierLockRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to reload Prepaid Card. <p><strong>OperationId:</strong>reloadPrepaidCard</p>
     * Operation to reload prepaid card.
     */
    reloadPrepaidCardRaw(requestParameters: ReloadPrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReloadPrepaidCardStatus>>;
    /**
     * You can use this API to reload Prepaid Card. <p><strong>OperationId:</strong>reloadPrepaidCard</p>
     * Operation to reload prepaid card.
     */
    reloadPrepaidCard(requestParameters: ReloadPrepaidCardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReloadPrepaidCardStatus>;
    /**
     * You can use this API to delete bed tax information for a property. <p><strong>OperationId:</strong>removeBedTaxInfo</p>
     * Delete bed tax information
     */
    removeBedTaxInfoRaw(requestParameters: RemoveBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete bed tax information for a property. <p><strong>OperationId:</strong>removeBedTaxInfo</p>
     * Delete bed tax information
     */
    removeBedTaxInfo(requestParameters: RemoveBedTaxInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to remove fixed Charges for a reservation. <p><strong>OperationId:</strong>removeFixedCharges</p>
     * Delete Fixed Charges
     */
    removeFixedChargesRaw(requestParameters: RemoveFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to remove fixed Charges for a reservation. <p><strong>OperationId:</strong>removeFixedCharges</p>
     * Delete Fixed Charges
     */
    removeFixedCharges(requestParameters: RemoveFixedChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to resend the failed supporting documents. <p><strong>OperationId:</strong>resendSupportingDocument</p>
     * Operation to resend the failed supporting documents to fiscal partner.
     */
    resendSupportingDocumentRaw(requestParameters: ResendSupportingDocumentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to resend the failed supporting documents. <p><strong>OperationId:</strong>resendSupportingDocument</p>
     * Operation to resend the failed supporting documents to fiscal partner.
     */
    resendSupportingDocument(requestParameters: ResendSupportingDocumentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to reverse an AR Invoice. <p><strong>OperationId:</strong>reverseARInvoice</p>
     * Reverse AR Invoice
     */
    reverseARInvoiceRaw(requestParameters: ReverseARInvoiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to reverse an AR Invoice. <p><strong>OperationId:</strong>reverseARInvoice</p>
     * Reverse AR Invoice
     */
    reverseARInvoice(requestParameters: ReverseARInvoiceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Reverse certificate postings. <p><strong>OperationId:</strong>reverseCertificatePostings</p>
     * Reverse certificate postings
     */
    reverseCertificatePostingsRaw(requestParameters: ReverseCertificatePostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Reverse certificate postings. <p><strong>OperationId:</strong>reverseCertificatePostings</p>
     * Reverse certificate postings
     */
    reverseCertificatePostings(requestParameters: ReverseCertificatePostingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to reverse complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>reverseCompRedemptions</p>
     * Operation to reverse complimentary bucket redemptions for a guest having PTS Membership Type
     */
    reverseCompRedemptionsRaw(requestParameters: ReverseCompRedemptionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to reverse complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>reverseCompRedemptions</p>
     * Operation to reverse complimentary bucket redemptions for a guest having PTS Membership Type
     */
    reverseCompRedemptions(requestParameters: ReverseCompRedemptionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to delete flexible benefit postings. <p><strong>OperationId:</strong>reverseFlexibleBenefitPosting</p>
     * Delete flexible benefit postings
     */
    reverseFlexibleBenefitPostingRaw(requestParameters: ReverseFlexibleBenefitPostingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete flexible benefit postings. <p><strong>OperationId:</strong>reverseFlexibleBenefitPosting</p>
     * Delete flexible benefit postings
     */
    reverseFlexibleBenefitPosting(requestParameters: ReverseFlexibleBenefitPostingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to change folio tax payments. <p><strong>OperationId:</strong>reverseFolioTaxPayment</p>
     * Change folio tax payments
     */
    reverseFolioTaxPaymentRaw(requestParameters: ReverseFolioTaxPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FolioTaxPaymentReversal>>;
    /**
     * You can use this API to change folio tax payments. <p><strong>OperationId:</strong>reverseFolioTaxPayment</p>
     * Change folio tax payments
     */
    reverseFolioTaxPayment(requestParameters: ReverseFolioTaxPaymentOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FolioTaxPaymentReversal>;
    /**
     * You can use this API to split and transfer transactions. <p><strong>OperationId:</strong>splitAndTransferTransaction</p>
     * Split and transfer transactions
     */
    splitAndTransferTransactionRaw(requestParameters: SplitAndTransferTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to split and transfer transactions. <p><strong>OperationId:</strong>splitAndTransferTransaction</p>
     * Split and transfer transactions
     */
    splitAndTransferTransaction(requestParameters: SplitAndTransferTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Split deposit transaction. <p><strong>OperationId:</strong>splitDepositTransaction</p>
     * Split deposit transaction
     */
    splitDepositTransactionRaw(requestParameters: SplitDepositTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SplitDepositTransactionStatus>>;
    /**
     * You can use this API to Split deposit transaction. <p><strong>OperationId:</strong>splitDepositTransaction</p>
     * Split deposit transaction
     */
    splitDepositTransaction(requestParameters: SplitDepositTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SplitDepositTransactionStatus>;
    /**
     * You can use this API to Split transactions. <p><strong>OperationId:</strong>splitTransaction</p>
     * Split transactions
     */
    splitTransactionRaw(requestParameters: SplitTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Split transactions. <p><strong>OperationId:</strong>splitTransaction</p>
     * Split transactions
     */
    splitTransaction(requestParameters: SplitTransactionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to transfer comp transactions to window <p><strong>OperationId:</strong>transferCompTransactions</p>
     * Transfer comp transactions to window
     */
    transferCompTransactionsRaw(requestParameters: TransferCompTransactionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to transfer comp transactions to window <p><strong>OperationId:</strong>transferCompTransactions</p>
     * Transfer comp transactions to window
     */
    transferCompTransactions(requestParameters: TransferCompTransactionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to transfer Folio to Window. <p><strong>OperationId:</strong>transferFolioToWindow</p>
     * Transfer Folio to Window.
     */
    transferFolioToWindowRaw(requestParameters: TransferFolioToWindowOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to transfer Folio to Window. <p><strong>OperationId:</strong>transferFolioToWindow</p>
     * Transfer Folio to Window.
     */
    transferFolioToWindow(requestParameters: TransferFolioToWindowOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to Transfer Transaction to Reservation. <p><strong>OperationId:</strong>transferTransactionToReservation</p>
     * Transfer Transaction to Reservation
     */
    transferTransactionToReservationRaw(requestParameters: TransferTransactionToReservationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Transfer Transaction to Reservation. <p><strong>OperationId:</strong>transferTransactionToReservation</p>
     * Transfer Transaction to Reservation
     */
    transferTransactionToReservation(requestParameters: TransferTransactionToReservationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to transfer Transaction to Window. <p><strong>OperationId:</strong>transferTransactionToWindow</p>
     * Transfer Transaction to Window
     */
    transferTransactionToWindowRaw(requestParameters: TransferTransactionToWindowOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransferTransactionToWindow>>;
    /**
     * You can use this API to transfer Transaction to Window. <p><strong>OperationId:</strong>transferTransactionToWindow</p>
     * Transfer Transaction to Window
     */
    transferTransactionToWindow(requestParameters: TransferTransactionToWindowOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransferTransactionToWindow>;
    /**
     * You can use this API to Transfer Deposit to Guest Folio. <p><strong>OperationId:</strong>transitionDepositToGuestFolio</p>
     * Transition Deposit to Guest Folio
     */
    transitionDepositToGuestFolioRaw(requestParameters: TransitionDepositToGuestFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to Transfer Deposit to Guest Folio. <p><strong>OperationId:</strong>transitionDepositToGuestFolio</p>
     * Transition Deposit to Guest Folio
     */
    transitionDepositToGuestFolio(requestParameters: TransitionDepositToGuestFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to unlink reservation package allowance. <p><strong>OperationId:</strong>unlinkReservationPackageAllowance</p>
     * Unlink reservation package allowance
     */
    unlinkReservationPackageAllowanceRaw(requestParameters: UnlinkReservationPackageAllowanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to unlink reservation package allowance. <p><strong>OperationId:</strong>unlinkReservationPackageAllowance</p>
     * Unlink reservation package allowance
     */
    unlinkReservationPackageAllowance(requestParameters: UnlinkReservationPackageAllowanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to update fixed Charges for a reservation. <p><strong>OperationId:</strong>updateFixedCharges</p>
     * Updates Fixed Charges
     */
    updateFixedChargesRaw(requestParameters: UpdateFixedChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to update fixed Charges for a reservation. <p><strong>OperationId:</strong>updateFixedCharges</p>
     * Updates Fixed Charges
     */
    updateFixedCharges(requestParameters: UpdateFixedChargesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to validate credit Bill. <p><strong>OperationId:</strong>validateCreditBill</p>
     * Validate Credit Bill
     */
    validateCreditBillRaw(requestParameters: ValidateCreditBillRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ValidatedCreditBill>>;
    /**
     * You can use this API to validate credit Bill. <p><strong>OperationId:</strong>validateCreditBill</p>
     * Validate Credit Bill
     */
    validateCreditBill(requestParameters: ValidateCreditBillRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ValidatedCreditBill>;
    /**
     * You can use this API to validate Deposit Folio. <p><strong>OperationId:</strong>validateDepositFolio</p>
     * Validate Deposit Folio
     */
    validateDepositFolioRaw(requestParameters: ValidateDepositFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DepositedFolioValidate>>;
    /**
     * You can use this API to validate Deposit Folio. <p><strong>OperationId:</strong>validateDepositFolio</p>
     * Validate Deposit Folio
     */
    validateDepositFolio(requestParameters: ValidateDepositFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DepositedFolioValidate>;
    /**
     * You can use this API to validate Transaction Codes. <p><strong>OperationId:</strong>validateTransactionCodes</p>
     * Validate Transaction Codes
     */
    validateTransactionCodesRaw(requestParameters: ValidateTransactionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ValidatedTransactionCode>>;
    /**
     * You can use this API to validate Transaction Codes. <p><strong>OperationId:</strong>validateTransactionCodes</p>
     * Validate Transaction Codes
     */
    validateTransactionCodes(requestParameters: ValidateTransactionCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ValidatedTransactionCode>;
    /**
     * You can use this API to verify early Departure. <p><strong>OperationId:</strong>verifyForEarlyDeparture</p>
     * Verify for early Departure
     */
    verifyForEarlyDepartureRaw(requestParameters: VerifyForEarlyDepartureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EarlyDepartureInfo>>;
    /**
     * You can use this API to verify early Departure. <p><strong>OperationId:</strong>verifyForEarlyDeparture</p>
     * Verify for early Departure
     */
    verifyForEarlyDeparture(requestParameters: VerifyForEarlyDepartureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EarlyDepartureInfo>;
    /**
     * You can use this API to delete (void) Billing Check Charges. <p><strong>OperationId:</strong>voidBillingCheckCharges</p>
     * Delete Billing Check Charges
     */
    voidBillingCheckChargesRaw(requestParameters: VoidBillingCheckChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to delete (void) Billing Check Charges. <p><strong>OperationId:</strong>voidBillingCheckCharges</p>
     * Delete Billing Check Charges
     */
    voidBillingCheckCharges(requestParameters: VoidBillingCheckChargesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to void a folio. <p><strong>OperationId:</strong>voidFolio</p>
     * Void folio
     */
    voidFolioRaw(requestParameters: VoidFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VoidedFolio>>;
    /**
     * You can use this API to void a folio. <p><strong>OperationId:</strong>voidFolio</p>
     * Void folio
     */
    voidFolio(requestParameters: VoidFolioOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VoidedFolio>;
}
/**
 * @export
 */
export declare const GetAdvancePaymentBalanceEventTypeEnum: {
    readonly AdvanceBill: "AdvanceBill";
    readonly Deposit: "Deposit";
    readonly CheckIn: "CheckIn";
};
export type GetAdvancePaymentBalanceEventTypeEnum = typeof GetAdvancePaymentBalanceEventTypeEnum[keyof typeof GetAdvancePaymentBalanceEventTypeEnum];
/**
 * @export
 */
export declare const GetAlertsAlertAreaEnum: {
    readonly CheckIn: "CheckIn";
    readonly CheckOut: "CheckOut";
    readonly Reservation: "Reservation";
    readonly Billing: "Billing";
    readonly InHouse: "InHouse";
};
export type GetAlertsAlertAreaEnum = typeof GetAlertsAlertAreaEnum[keyof typeof GetAlertsAlertAreaEnum];
/**
 * @export
 */
export declare const GetAuthorizationHistoryTransactionTypeEnum: {
    readonly Additional: "Additional";
    readonly ArPayment: "ArPayment";
    readonly Batch: "Batch";
    readonly BatchDeposit: "BatchDeposit";
    readonly BatchDepositRefund: "BatchDepositRefund";
    readonly Billing: "Billing";
    readonly CheckIn: "CheckIn";
    readonly CheckInManualAuth: "CheckInManualAuth";
    readonly Deposit: "Deposit";
    readonly EndOfDay: "EndOfDay";
    readonly EndOfDayDeposit: "EndOfDayDeposit";
    readonly Manual: "Manual";
    readonly Other: "Other";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly PreCheckIn: "PreCheckIn";
    readonly Refund: "Refund";
    readonly Scheduled: "Scheduled";
};
export type GetAuthorizationHistoryTransactionTypeEnum = typeof GetAuthorizationHistoryTransactionTypeEnum[keyof typeof GetAuthorizationHistoryTransactionTypeEnum];
/**
 * @export
 */
export declare const GetBalanceInfoEventEnum: {
    readonly CheckOut: "CheckOut";
    readonly EarlyDeparture: "EarlyDeparture";
    readonly AdvanceBill: "AdvanceBill";
    readonly InterimBill: "InterimBill";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly CreditBill: "CreditBill";
    readonly Deposit: "Deposit";
    readonly DepositRefund: "DepositRefund";
    readonly AutoFolio: "AutoFolio";
    readonly PrepaidCard: "PrepaidCard";
    readonly AutoSettlement: "AutoSettlement";
    readonly InformationFolio: "InformationFolio";
    readonly SupplementalFolio: "SupplementalFolio";
};
export type GetBalanceInfoEventEnum = typeof GetBalanceInfoEventEnum[keyof typeof GetBalanceInfoEventEnum];
/**
 * @export
 */
export declare const GetBalanceInfoFolioStatusEnum: {
    readonly Deposit: "Deposit";
    readonly Void: "Void";
    readonly Ok: "Ok";
    readonly Zero: "Zero";
    readonly Compress: "Compress";
    readonly Converted: "Converted";
    readonly Internal: "Internal";
};
export type GetBalanceInfoFolioStatusEnum = typeof GetBalanceInfoFolioStatusEnum[keyof typeof GetBalanceInfoFolioStatusEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsSourceOfAuthorizationEnum: {
    readonly Additional: "Additional";
    readonly ArPayment: "ArPayment";
    readonly Batch: "Batch";
    readonly BatchDeposit: "BatchDeposit";
    readonly BatchDepositRefund: "BatchDepositRefund";
    readonly Billing: "Billing";
    readonly CheckIn: "CheckIn";
    readonly CheckInManualAuth: "CheckInManualAuth";
    readonly Deposit: "Deposit";
    readonly EndOfDay: "EndOfDay";
    readonly EndOfDayDeposit: "EndOfDayDeposit";
    readonly Manual: "Manual";
    readonly Other: "Other";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly PreCheckIn: "PreCheckIn";
    readonly Refund: "Refund";
    readonly Scheduled: "Scheduled";
};
export type GetCCAuthorizationInstructionsSourceOfAuthorizationEnum = typeof GetCCAuthorizationInstructionsSourceOfAuthorizationEnum[keyof typeof GetCCAuthorizationInstructionsSourceOfAuthorizationEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetCCAuthorizationInstructionsCardOrTokenEnum = typeof GetCCAuthorizationInstructionsCardOrTokenEnum[keyof typeof GetCCAuthorizationInstructionsCardOrTokenEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetCCAuthorizationInstructionsCardTypeEnum = typeof GetCCAuthorizationInstructionsCardTypeEnum[keyof typeof GetCCAuthorizationInstructionsCardTypeEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetCCAuthorizationInstructionsProcessingEnum = typeof GetCCAuthorizationInstructionsProcessingEnum[keyof typeof GetCCAuthorizationInstructionsProcessingEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsEmailFormatEnum: {
    readonly Html: "Html";
    readonly Text: "Text";
};
export type GetCCAuthorizationInstructionsEmailFormatEnum = typeof GetCCAuthorizationInstructionsEmailFormatEnum[keyof typeof GetCCAuthorizationInstructionsEmailFormatEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsByProfileSourceOfAuthorizationEnum: {
    readonly Additional: "Additional";
    readonly ArPayment: "ArPayment";
    readonly Batch: "Batch";
    readonly BatchDeposit: "BatchDeposit";
    readonly BatchDepositRefund: "BatchDepositRefund";
    readonly Billing: "Billing";
    readonly CheckIn: "CheckIn";
    readonly CheckInManualAuth: "CheckInManualAuth";
    readonly Deposit: "Deposit";
    readonly EndOfDay: "EndOfDay";
    readonly EndOfDayDeposit: "EndOfDayDeposit";
    readonly Manual: "Manual";
    readonly Other: "Other";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly PreCheckIn: "PreCheckIn";
    readonly Refund: "Refund";
    readonly Scheduled: "Scheduled";
};
export type GetCCAuthorizationInstructionsByProfileSourceOfAuthorizationEnum = typeof GetCCAuthorizationInstructionsByProfileSourceOfAuthorizationEnum[keyof typeof GetCCAuthorizationInstructionsByProfileSourceOfAuthorizationEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsByProfileCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetCCAuthorizationInstructionsByProfileCardOrTokenEnum = typeof GetCCAuthorizationInstructionsByProfileCardOrTokenEnum[keyof typeof GetCCAuthorizationInstructionsByProfileCardOrTokenEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsByProfileCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetCCAuthorizationInstructionsByProfileCardTypeEnum = typeof GetCCAuthorizationInstructionsByProfileCardTypeEnum[keyof typeof GetCCAuthorizationInstructionsByProfileCardTypeEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsByProfileProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetCCAuthorizationInstructionsByProfileProcessingEnum = typeof GetCCAuthorizationInstructionsByProfileProcessingEnum[keyof typeof GetCCAuthorizationInstructionsByProfileProcessingEnum];
/**
 * @export
 */
export declare const GetCCAuthorizationInstructionsByProfileEmailFormatEnum: {
    readonly Html: "Html";
    readonly Text: "Text";
};
export type GetCCAuthorizationInstructionsByProfileEmailFormatEnum = typeof GetCCAuthorizationInstructionsByProfileEmailFormatEnum[keyof typeof GetCCAuthorizationInstructionsByProfileEmailFormatEnum];
/**
 * @export
 */
export declare const GetCCSurchargeInfoCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetCCSurchargeInfoCardOrTokenEnum = typeof GetCCSurchargeInfoCardOrTokenEnum[keyof typeof GetCCSurchargeInfoCardOrTokenEnum];
/**
 * @export
 */
export declare const GetCCSurchargeInfoCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetCCSurchargeInfoCardTypeEnum = typeof GetCCSurchargeInfoCardTypeEnum[keyof typeof GetCCSurchargeInfoCardTypeEnum];
/**
 * @export
 */
export declare const GetCCSurchargeInfoProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetCCSurchargeInfoProcessingEnum = typeof GetCCSurchargeInfoProcessingEnum[keyof typeof GetCCSurchargeInfoProcessingEnum];
/**
 * @export
 */
export declare const GetCCSurchargeInfoEmailFormatEnum: {
    readonly Html: "Html";
    readonly Text: "Text";
};
export type GetCCSurchargeInfoEmailFormatEnum = typeof GetCCSurchargeInfoEmailFormatEnum[keyof typeof GetCCSurchargeInfoEmailFormatEnum];
/**
 * @export
 */
export declare const GetCashierReportPostingsRequestTypeEnum: {
    readonly Cash: "Cash";
    readonly Check: "Check";
    readonly ForeignCurrency: "ForeignCurrency";
    readonly CreditCard: "CreditCard";
    readonly Miscellaneous: "Miscellaneous";
    readonly ArSettlements: "ArSettlements";
    readonly DepositTransfers: "DepositTransfers";
    readonly Shiftdrop: "Shiftdrop";
};
export type GetCashierReportPostingsRequestTypeEnum = typeof GetCashierReportPostingsRequestTypeEnum[keyof typeof GetCashierReportPostingsRequestTypeEnum];
/**
 * @export
 */
export declare const GetCompRoutingInstructionsResStatusCodeEnum: {
    readonly Reserved: "Reserved";
    readonly Requested: "Requested";
    readonly NoShow: "NoShow";
    readonly Cancelled: "Cancelled";
    readonly InHouse: "InHouse";
    readonly CheckedOut: "CheckedOut";
    readonly Waitlisted: "Waitlisted";
    readonly DueIn: "DueIn";
    readonly DueOut: "DueOut";
    readonly Walkin: "Walkin";
    readonly PendingCheckout: "PendingCheckout";
};
export type GetCompRoutingInstructionsResStatusCodeEnum = typeof GetCompRoutingInstructionsResStatusCodeEnum[keyof typeof GetCompRoutingInstructionsResStatusCodeEnum];
/**
 * @export
 */
export declare const GetCompRoutingInstructionsCompRoutingStatusesEnum: {
    readonly Request: "Request";
    readonly Comp: "Comp";
    readonly Declined: "Declined";
};
export type GetCompRoutingInstructionsCompRoutingStatusesEnum = typeof GetCompRoutingInstructionsCompRoutingStatusesEnum[keyof typeof GetCompRoutingInstructionsCompRoutingStatusesEnum];
/**
 * @export
 */
export declare const GetDepositFolioFetchInstructionsEnum: {
    readonly ProjectedRevenue: "ProjectedRevenue";
};
export type GetDepositFolioFetchInstructionsEnum = typeof GetDepositFolioFetchInstructionsEnum[keyof typeof GetDepositFolioFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetFinancialPostingsCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetFinancialPostingsCardOrTokenEnum = typeof GetFinancialPostingsCardOrTokenEnum[keyof typeof GetFinancialPostingsCardOrTokenEnum];
/**
 * @export
 */
export declare const GetFinancialPostingsCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetFinancialPostingsCardTypeEnum = typeof GetFinancialPostingsCardTypeEnum[keyof typeof GetFinancialPostingsCardTypeEnum];
/**
 * @export
 */
export declare const GetFinancialPostingsProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetFinancialPostingsProcessingEnum = typeof GetFinancialPostingsProcessingEnum[keyof typeof GetFinancialPostingsProcessingEnum];
/**
 * @export
 */
export declare const GetFiscalPrintingDetailsFetchInstructionEnum: {
    readonly Paymentmethod: "Paymentmethod";
    readonly Profile: "Profile";
    readonly Foliotype: "Foliotype";
    readonly Reservation: "Reservation";
};
export type GetFiscalPrintingDetailsFetchInstructionEnum = typeof GetFiscalPrintingDetailsFetchInstructionEnum[keyof typeof GetFiscalPrintingDetailsFetchInstructionEnum];
/**
 * @export
 */
export declare const GetFiscalSupportingDocumentsDocumentTypeEnum: {
    readonly InformationFolio: "InformationFolio";
    readonly ProformaFolio: "ProformaFolio";
};
export type GetFiscalSupportingDocumentsDocumentTypeEnum = typeof GetFiscalSupportingDocumentsDocumentTypeEnum[keyof typeof GetFiscalSupportingDocumentsDocumentTypeEnum];
/**
 * @export
 */
export declare const GetFiscalSupportingDocumentsOrderByEnum: {
    readonly ArrivalDate: "ArrivalDate";
    readonly DepartureDate: "DepartureDate";
    readonly Room: "Room";
    readonly DocumentUpdatedDate: "DocumentUpdatedDate";
};
export type GetFiscalSupportingDocumentsOrderByEnum = typeof GetFiscalSupportingDocumentsOrderByEnum[keyof typeof GetFiscalSupportingDocumentsOrderByEnum];
/**
 * @export
 */
export declare const GetFiscalSupportingDocumentsSortOrderEnum: {
    readonly Asc: "Asc";
    readonly Desc: "Desc";
};
export type GetFiscalSupportingDocumentsSortOrderEnum = typeof GetFiscalSupportingDocumentsSortOrderEnum[keyof typeof GetFiscalSupportingDocumentsSortOrderEnum];
/**
 * @export
 */
export declare const GetFolioFetchInstructionsEnum: {
    readonly Reservation: "Reservation";
    readonly Windowbalances: "Windowbalances";
    readonly Payment: "Payment";
    readonly Payee: "Payee";
    readonly Account: "Account";
    readonly Guestpay: "Guestpay";
    readonly Notifications: "Notifications";
    readonly Transactioncodes: "Transactioncodes";
    readonly Foliohistory: "Foliohistory";
    readonly Totalbalance: "Totalbalance";
    readonly Postings: "Postings";
};
export type GetFolioFetchInstructionsEnum = typeof GetFolioFetchInstructionsEnum[keyof typeof GetFolioFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetFolioGroupTypeEnum: {
    readonly CheckNo: "CheckNo";
    readonly TransactionDate: "TransactionDate";
    readonly TransactionCode: "TransactionCode";
    readonly TransactionType: "TransactionType";
};
export type GetFolioGroupTypeEnum = typeof GetFolioGroupTypeEnum[keyof typeof GetFolioGroupTypeEnum];
/**
 * @export
 */
export declare const GetFolioPrintersEventTypeEnum: {
    readonly CheckOut: "CheckOut";
    readonly EarlyDeparture: "EarlyDeparture";
    readonly AdvanceBill: "AdvanceBill";
    readonly InterimBill: "InterimBill";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly CreditBill: "CreditBill";
    readonly Deposit: "Deposit";
    readonly DepositRefund: "DepositRefund";
    readonly AutoFolio: "AutoFolio";
    readonly PrepaidCard: "PrepaidCard";
    readonly AutoSettlement: "AutoSettlement";
    readonly InformationFolio: "InformationFolio";
    readonly SupplementalFolio: "SupplementalFolio";
};
export type GetFolioPrintersEventTypeEnum = typeof GetFolioPrintersEventTypeEnum[keyof typeof GetFolioPrintersEventTypeEnum];
/**
 * @export
 */
export declare const GetFolioPrintersFiscalFolioInstructionEnum: {
    readonly Retry: "Retry";
    readonly New: "New";
    readonly Void: "Void";
    readonly Offline: "Offline";
};
export type GetFolioPrintersFiscalFolioInstructionEnum = typeof GetFolioPrintersFiscalFolioInstructionEnum[keyof typeof GetFolioPrintersFiscalFolioInstructionEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetFolioTaxPaymentsInfoCardOrTokenEnum = typeof GetFolioTaxPaymentsInfoCardOrTokenEnum[keyof typeof GetFolioTaxPaymentsInfoCardOrTokenEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetFolioTaxPaymentsInfoCardTypeEnum = typeof GetFolioTaxPaymentsInfoCardTypeEnum[keyof typeof GetFolioTaxPaymentsInfoCardTypeEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetFolioTaxPaymentsInfoProcessingEnum = typeof GetFolioTaxPaymentsInfoProcessingEnum[keyof typeof GetFolioTaxPaymentsInfoProcessingEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoEmailFormatEnum: {
    readonly Html: "Html";
    readonly Text: "Text";
};
export type GetFolioTaxPaymentsInfoEmailFormatEnum = typeof GetFolioTaxPaymentsInfoEmailFormatEnum[keyof typeof GetFolioTaxPaymentsInfoEmailFormatEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoPaymentTypeEnum: {
    readonly Deposit: "Deposit";
    readonly FrontOffice: "FrontOffice";
    readonly CreditNote: "CreditNote";
    readonly CityLedger: "CityLedger";
    readonly AccountsReceivables: "AccountsReceivables";
    readonly NonVat: "NonVat";
};
export type GetFolioTaxPaymentsInfoPaymentTypeEnum = typeof GetFolioTaxPaymentsInfoPaymentTypeEnum[keyof typeof GetFolioTaxPaymentsInfoPaymentTypeEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoTaxPaymentTypeEnum: {
    readonly Deposit: "Deposit";
    readonly FrontOffice: "FrontOffice";
    readonly CreditNote: "CreditNote";
    readonly CityLedger: "CityLedger";
    readonly AccountsReceivables: "AccountsReceivables";
    readonly NonVat: "NonVat";
};
export type GetFolioTaxPaymentsInfoTaxPaymentTypeEnum = typeof GetFolioTaxPaymentsInfoTaxPaymentTypeEnum[keyof typeof GetFolioTaxPaymentsInfoTaxPaymentTypeEnum];
/**
 * @export
 */
export declare const GetFolioTaxPaymentsInfoActionEnum: {
    readonly Billing: "Billing";
    readonly Settlefolio: "Settlefolio";
    readonly Deposit: "Deposit";
    readonly Compredemption: "Compredemption";
    readonly Prepaidcardredemption: "Prepaidcardredemption";
    readonly Advancepayment: "Advancepayment";
};
export type GetFolioTaxPaymentsInfoActionEnum = typeof GetFolioTaxPaymentsInfoActionEnum[keyof typeof GetFolioTaxPaymentsInfoActionEnum];
/**
 * @export
 */
export declare const GetFolioTypeNameFolioReportGroupEnum: {
    readonly Guest: "Guest";
    readonly Group: "Group";
    readonly AccountsReceivables: "AccountsReceivables";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly Expense: "Expense";
    readonly CorrectionHeader: "CorrectionHeader";
};
export type GetFolioTypeNameFolioReportGroupEnum = typeof GetFolioTypeNameFolioReportGroupEnum[keyof typeof GetFolioTypeNameFolioReportGroupEnum];
/**
 * @export
 */
export declare const GetGuestsTransactionsCashieringTransactionTypeEnum: {
    readonly Revenue: "Revenue";
    readonly Payment: "Payment";
    readonly Wrapper: "Wrapper";
};
export type GetGuestsTransactionsCashieringTransactionTypeEnum = typeof GetGuestsTransactionsCashieringTransactionTypeEnum[keyof typeof GetGuestsTransactionsCashieringTransactionTypeEnum];
/**
 * @export
 */
export declare const GetGuestsTransactionsPostedTransactionTypeEnum: {
    readonly All: "All";
    readonly Routed: "Routed";
    readonly Direct: "Direct";
    readonly Transferred: "Transferred";
    readonly Payments: "Payments";
    readonly NonBilled: "NonBilled";
};
export type GetGuestsTransactionsPostedTransactionTypeEnum = typeof GetGuestsTransactionsPostedTransactionTypeEnum[keyof typeof GetGuestsTransactionsPostedTransactionTypeEnum];
/**
 * @export
 */
export declare const GetPostBillingChargesOptionEnum: {
    readonly PackageAllowance: "PackageAllowance";
    readonly RoomRouting: "RoomRouting";
    readonly PostingStatus: "PostingStatus";
};
export type GetPostBillingChargesOptionEnum = typeof GetPostBillingChargesOptionEnum[keyof typeof GetPostBillingChargesOptionEnum];
/**
 * @export
 */
export declare const GetPostingSummaryPostingSummaryTypeEnum: {
    readonly Postings: "Postings";
    readonly Adjustments: "Adjustments";
    readonly All: "All";
};
export type GetPostingSummaryPostingSummaryTypeEnum = typeof GetPostingSummaryPostingSummaryTypeEnum[keyof typeof GetPostingSummaryPostingSummaryTypeEnum];
/**
 * @export
 */
export declare const GetPostingsForRefreshColorEnum: {
    readonly Red: "Red";
    readonly DarkRed: "DarkRed";
    readonly Green: "Green";
    readonly DarkGreen: "DarkGreen";
    readonly LightGreen: "LightGreen";
    readonly Orange: "Orange";
    readonly White: "White";
    readonly Yellow: "Yellow";
    readonly DarkYellow: "DarkYellow";
    readonly Purple: "Purple";
    readonly Brown: "Brown";
    readonly Gray: "Gray";
    readonly Aqua: "Aqua";
    readonly Chocolate: "Chocolate";
    readonly Blue: "Blue";
    readonly LightBlue: "LightBlue";
    readonly DarkBlue: "DarkBlue";
    readonly Cyan: "Cyan";
    readonly DarkCyan: "DarkCyan";
    readonly Magenta: "Magenta";
    readonly DarkMagenta: "DarkMagenta";
    readonly Black: "Black";
};
export type GetPostingsForRefreshColorEnum = typeof GetPostingsForRefreshColorEnum[keyof typeof GetPostingsForRefreshColorEnum];
/**
 * @export
 */
export declare const GetRoundingDifferenceEventEnum: {
    readonly CheckOut: "CheckOut";
    readonly EarlyDeparture: "EarlyDeparture";
    readonly AdvanceBill: "AdvanceBill";
    readonly InterimBill: "InterimBill";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly CreditBill: "CreditBill";
    readonly Deposit: "Deposit";
    readonly DepositRefund: "DepositRefund";
    readonly AutoFolio: "AutoFolio";
    readonly PrepaidCard: "PrepaidCard";
    readonly AutoSettlement: "AutoSettlement";
    readonly InformationFolio: "InformationFolio";
    readonly SupplementalFolio: "SupplementalFolio";
};
export type GetRoundingDifferenceEventEnum = typeof GetRoundingDifferenceEventEnum[keyof typeof GetRoundingDifferenceEventEnum];
/**
 * @export
 */
export declare const GetRoundingDifferenceCardOrTokenEnum: {
    readonly CardNumber: "CardNumber";
    readonly Token: "Token";
};
export type GetRoundingDifferenceCardOrTokenEnum = typeof GetRoundingDifferenceCardOrTokenEnum[keyof typeof GetRoundingDifferenceCardOrTokenEnum];
/**
 * @export
 */
export declare const GetRoundingDifferenceCardTypeEnum: {
    readonly Ab: "Ab";
    readonly Am: "Am";
    readonly Ax: "Ax";
    readonly Cb: "Cb";
    readonly Dc: "Dc";
    readonly Ds: "Ds";
    readonly Dt: "Dt";
    readonly Ec: "Ec";
    readonly Er: "Er";
    readonly Jc: "Jc";
    readonly Jl: "Jl";
    readonly Mc: "Mc";
    readonly Nb: "Nb";
    readonly So: "So";
    readonly St: "St";
    readonly Sw: "Sw";
    readonly Va: "Va";
    readonly Xy: "Xy";
    readonly Zz: "Zz";
    readonly Cp: "Cp";
    readonly Cu: "Cu";
};
export type GetRoundingDifferenceCardTypeEnum = typeof GetRoundingDifferenceCardTypeEnum[keyof typeof GetRoundingDifferenceCardTypeEnum];
/**
 * @export
 */
export declare const GetRoundingDifferenceProcessingEnum: {
    readonly Eft: "Eft";
    readonly Manual: "Manual";
};
export type GetRoundingDifferenceProcessingEnum = typeof GetRoundingDifferenceProcessingEnum[keyof typeof GetRoundingDifferenceProcessingEnum];
/**
 * @export
 */
export declare const GetRoundingDifferenceEmailFormatEnum: {
    readonly Html: "Html";
    readonly Text: "Text";
};
export type GetRoundingDifferenceEmailFormatEnum = typeof GetRoundingDifferenceEmailFormatEnum[keyof typeof GetRoundingDifferenceEmailFormatEnum];
/**
 * @export
 */
export declare const GetStoredFolioDetailsFolioStatusEnum: {
    readonly Deposit: "Deposit";
    readonly Void: "Void";
    readonly Ok: "Ok";
    readonly Zero: "Zero";
    readonly Compress: "Compress";
    readonly Converted: "Converted";
    readonly Internal: "Internal";
};
export type GetStoredFolioDetailsFolioStatusEnum = typeof GetStoredFolioDetailsFolioStatusEnum[keyof typeof GetStoredFolioDetailsFolioStatusEnum];
/**
 * @export
 */
export declare const GetTransactionCodesEventEnum: {
    readonly CheckOut: "CheckOut";
    readonly EarlyDeparture: "EarlyDeparture";
    readonly AdvanceBill: "AdvanceBill";
    readonly InterimBill: "InterimBill";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly CreditBill: "CreditBill";
    readonly Deposit: "Deposit";
    readonly DepositRefund: "DepositRefund";
    readonly AutoFolio: "AutoFolio";
    readonly PrepaidCard: "PrepaidCard";
    readonly AutoSettlement: "AutoSettlement";
    readonly InformationFolio: "InformationFolio";
    readonly SupplementalFolio: "SupplementalFolio";
};
export type GetTransactionCodesEventEnum = typeof GetTransactionCodesEventEnum[keyof typeof GetTransactionCodesEventEnum];
/**
 * @export
 */
export declare const GetTransactionCodesFolioStatusEnum: {
    readonly Deposit: "Deposit";
    readonly Void: "Void";
    readonly Ok: "Ok";
    readonly Zero: "Zero";
    readonly Compress: "Compress";
    readonly Converted: "Converted";
    readonly Internal: "Internal";
};
export type GetTransactionCodesFolioStatusEnum = typeof GetTransactionCodesFolioStatusEnum[keyof typeof GetTransactionCodesFolioStatusEnum];
/**
 * @export
 */
export declare const GetTransactionCodesTrxServiceTypeEnum: {
    readonly Services: "Services";
    readonly Goods: "Goods";
};
export type GetTransactionCodesTrxServiceTypeEnum = typeof GetTransactionCodesTrxServiceTypeEnum[keyof typeof GetTransactionCodesTrxServiceTypeEnum];
/**
 * @export
 */
export declare const GetValidateFiscalPrintingDetailsFetchInstructionEnum: {
    readonly Paymentmethod: "Paymentmethod";
    readonly Profile: "Profile";
    readonly Foliotype: "Foliotype";
    readonly Reservation: "Reservation";
};
export type GetValidateFiscalPrintingDetailsFetchInstructionEnum = typeof GetValidateFiscalPrintingDetailsFetchInstructionEnum[keyof typeof GetValidateFiscalPrintingDetailsFetchInstructionEnum];
/**
 * @export
 */
export declare const ValidateTransactionCodesEventEnum: {
    readonly CheckOut: "CheckOut";
    readonly EarlyDeparture: "EarlyDeparture";
    readonly AdvanceBill: "AdvanceBill";
    readonly InterimBill: "InterimBill";
    readonly PasserBy: "PasserBy";
    readonly PostIt: "PostIt";
    readonly CreditBill: "CreditBill";
    readonly Deposit: "Deposit";
    readonly DepositRefund: "DepositRefund";
    readonly AutoFolio: "AutoFolio";
    readonly PrepaidCard: "PrepaidCard";
    readonly AutoSettlement: "AutoSettlement";
    readonly InformationFolio: "InformationFolio";
    readonly SupplementalFolio: "SupplementalFolio";
};
export type ValidateTransactionCodesEventEnum = typeof ValidateTransactionCodesEventEnum[keyof typeof ValidateTransactionCodesEventEnum];
/**
 * @export
 */
export declare const ValidateTransactionCodesFolioStatusEnum: {
    readonly Deposit: "Deposit";
    readonly Void: "Void";
    readonly Ok: "Ok";
    readonly Zero: "Zero";
    readonly Compress: "Compress";
    readonly Converted: "Converted";
    readonly Internal: "Internal";
};
export type ValidateTransactionCodesFolioStatusEnum = typeof ValidateTransactionCodesFolioStatusEnum[keyof typeof ValidateTransactionCodesFolioStatusEnum];
