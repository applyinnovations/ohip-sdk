"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Configuration Service API
 * APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomOwnershipTypeToJSON = exports.RoomOwnershipTypeFromJSONTyped = exports.RoomOwnershipTypeFromJSON = exports.instanceOfRoomOwnershipType = void 0;
const runtime_1 = require("../runtime");
const ProfileNameType_1 = require("./ProfileNameType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the RoomOwnershipType interface.
 */
function instanceOfRoomOwnershipType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomOwnershipType = instanceOfRoomOwnershipType;
function RoomOwnershipTypeFromJSON(json) {
    return RoomOwnershipTypeFromJSONTyped(json, false);
}
exports.RoomOwnershipTypeFromJSON = RoomOwnershipTypeFromJSON;
function RoomOwnershipTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'roomOwnershipId': !(0, runtime_1.exists)(json, 'roomOwnershipId') ? undefined : json['roomOwnershipId'],
        'contractNumber': !(0, runtime_1.exists)(json, 'contractNumber') ? undefined : json['contractNumber'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'roomCategory': !(0, runtime_1.exists)(json, 'roomCategory') ? undefined : json['roomCategory'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['profileId']),
        'profileName': !(0, runtime_1.exists)(json, 'profileName') ? undefined : (0, ProfileNameType_1.ProfileNameTypeFromJSON)(json['profileName']),
        'status': !(0, runtime_1.exists)(json, 'status') ? undefined : json['status'],
        'ownerExclusive': !(0, runtime_1.exists)(json, 'ownerExclusive') ? undefined : json['ownerExclusive'],
    };
}
exports.RoomOwnershipTypeFromJSONTyped = RoomOwnershipTypeFromJSONTyped;
function RoomOwnershipTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'roomOwnershipId': value.roomOwnershipId,
        'contractNumber': value.contractNumber,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'roomId': value.roomId,
        'roomCategory': value.roomCategory,
        'roomType': value.roomType,
        'profileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.profileId),
        'profileName': (0, ProfileNameType_1.ProfileNameTypeToJSON)(value.profileName),
        'status': value.status,
        'ownerExclusive': value.ownerExclusive,
    };
}
exports.RoomOwnershipTypeToJSON = RoomOwnershipTypeToJSON;
