/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Configuration Service API
 * APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomOwnerReferralType } from './RoomOwnerReferralType';
import {
    RoomOwnerReferralTypeFromJSON,
    RoomOwnerReferralTypeFromJSONTyped,
    RoomOwnerReferralTypeToJSON,
} from './RoomOwnerReferralType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface PutRoomOwnerReferralRequest
 */
export interface PutRoomOwnerReferralRequest {
    /**
     * 
     * @type {RoomOwnerReferralType}
     * @memberof PutRoomOwnerReferralRequest
     */
    roomOwnerReferral?: RoomOwnerReferralType;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof PutRoomOwnerReferralRequest
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the PutRoomOwnerReferralRequest interface.
 */
export function instanceOfPutRoomOwnerReferralRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PutRoomOwnerReferralRequestFromJSON(json: any): PutRoomOwnerReferralRequest {
    return PutRoomOwnerReferralRequestFromJSONTyped(json, false);
}

export function PutRoomOwnerReferralRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutRoomOwnerReferralRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomOwnerReferral': !exists(json, 'roomOwnerReferral') ? undefined : RoomOwnerReferralTypeFromJSON(json['roomOwnerReferral']),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function PutRoomOwnerReferralRequestToJSON(value?: PutRoomOwnerReferralRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomOwnerReferral': RoomOwnerReferralTypeToJSON(value.roomOwnerReferral),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

