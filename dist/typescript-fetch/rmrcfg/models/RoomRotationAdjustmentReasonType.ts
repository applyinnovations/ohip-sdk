/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Configuration Service API
 * APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * Contains Common Master configuration detail.
 * @export
 * @interface RoomRotationAdjustmentReasonType
 */
export interface RoomRotationAdjustmentReasonType {
    /**
     * Common Master unique code.
     * @type {string}
     * @memberof RoomRotationAdjustmentReasonType
     */
    code?: string;
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof RoomRotationAdjustmentReasonType
     */
    description?: TranslationTextType2000;
    /**
     * Common Master record sequence number.
     * @type {number}
     * @memberof RoomRotationAdjustmentReasonType
     */
    displayOrder?: number;
}

/**
 * Check if a given object implements the RoomRotationAdjustmentReasonType interface.
 */
export function instanceOfRoomRotationAdjustmentReasonType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomRotationAdjustmentReasonTypeFromJSON(json: any): RoomRotationAdjustmentReasonType {
    return RoomRotationAdjustmentReasonTypeFromJSONTyped(json, false);
}

export function RoomRotationAdjustmentReasonTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomRotationAdjustmentReasonType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : TranslationTextType2000FromJSON(json['description']),
        'displayOrder': !exists(json, 'displayOrder') ? undefined : json['displayOrder'],
    };
}

export function RoomRotationAdjustmentReasonTypeToJSON(value?: RoomRotationAdjustmentReasonType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': TranslationTextType2000ToJSON(value.description),
        'displayOrder': value.displayOrder,
    };
}

