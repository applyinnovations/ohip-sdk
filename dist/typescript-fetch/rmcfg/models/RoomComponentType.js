"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomComponentTypeToJSON = exports.RoomComponentTypeFromJSONTyped = exports.RoomComponentTypeFromJSON = exports.instanceOfRoomComponentType = void 0;
const runtime_1 = require("../runtime");
const RoomRoomType_1 = require("./RoomRoomType");
/**
 * Check if a given object implements the RoomComponentType interface.
 */
function instanceOfRoomComponentType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomComponentType = instanceOfRoomComponentType;
function RoomComponentTypeFromJSON(json) {
    return RoomComponentTypeFromJSONTyped(json, false);
}
exports.RoomComponentTypeFromJSON = RoomComponentTypeFromJSON;
function RoomComponentTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'qty': !(0, runtime_1.exists)(json, 'qty') ? undefined : json['qty'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
        'rooms': !(0, runtime_1.exists)(json, 'rooms') ? undefined : (json['rooms'].map(RoomRoomType_1.RoomRoomTypeFromJSON)),
    };
}
exports.RoomComponentTypeFromJSONTyped = RoomComponentTypeFromJSONTyped;
function RoomComponentTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'qty': value.qty,
        'roomType': value.roomType,
        'rooms': value.rooms === undefined ? undefined : (value.rooms.map(RoomRoomType_1.RoomRoomTypeToJSON)),
    };
}
exports.RoomComponentTypeToJSON = RoomComponentTypeToJSON;
