/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BedTypeInfoType } from './BedTypeInfoType';
import type { BookingChannelMappingType } from './BookingChannelMappingType';
import type { RoomFeatureType } from './RoomFeatureType';
import type { RoomTypeAttributesType } from './RoomTypeAttributesType';
/**
 *
 * @export
 * @interface RoomTypeInfoType
 */
export interface RoomTypeInfoType {
    /**
     * Detail description of the Room Type.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    longDescription?: string;
    /**
     * Name corresponding to a RoomType.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    webName?: string;
    /**
     * URL providing more information about the Room Type.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    webPage?: string;
    /**
     * A recurring element that identifies the room features.
     * @type {Array<RoomFeatureType>}
     * @memberof RoomTypeInfoType
     */
    roomFeatures?: Array<RoomFeatureType>;
    /**
     *
     * @type {RoomTypeAttributesType}
     * @memberof RoomTypeInfoType
     */
    roomTypeAttributes?: RoomTypeAttributesType;
    /**
     * Booking Channels mapping for the Room Type.
     * @type {Array<BookingChannelMappingType>}
     * @memberof RoomTypeInfoType
     */
    bookingChannelMappings?: Array<BookingChannelMappingType>;
    /**
     * Bed type code associated with room.
     * @type {Array<string>}
     * @memberof RoomTypeInfoType
     */
    bedTypeCodes?: Array<string>;
    /**
     *
     * @type {BedTypeInfoType}
     * @memberof RoomTypeInfoType
     */
    bedType?: BedTypeInfoType;
    /**
     *
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    roomType?: string;
    /**
     *
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    hotelId?: string;
    /**
     *
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    roomClass?: string;
    /**
     *
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    description?: string;
    /**
     * Indicates room type is a suite.
     * @type {boolean}
     * @memberof RoomTypeInfoType
     */
    suite?: boolean;
    /**
     * Indicates room type is a Component Room.
     * @type {boolean}
     * @memberof RoomTypeInfoType
     */
    component?: boolean;
    /**
     * Block code.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    invBlockCode?: string;
    /**
     * Represents the room view code like City view, River view, Ocean view etc.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    roomViewCode?: string;
    /**
     * Represents the promotional code.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    promotionCode?: string;
    /**
     * Represents the room qualifier code like Deluxe,Economy,Suite etc.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    roomQualifierCode?: string;
    /**
     * Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.
     * @type {string}
     * @memberof RoomTypeInfoType
     */
    roomQualifierMatchIndicator?: string;
    /**
     * Indicates whether room type is accessible or not.
     * @type {boolean}
     * @memberof RoomTypeInfoType
     */
    accessible?: boolean;
}
/**
 * Check if a given object implements the RoomTypeInfoType interface.
 */
export declare function instanceOfRoomTypeInfoType(value: object): boolean;
export declare function RoomTypeInfoTypeFromJSON(json: any): RoomTypeInfoType;
export declare function RoomTypeInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomTypeInfoType;
export declare function RoomTypeInfoTypeToJSON(value?: RoomTypeInfoType | null): any;
