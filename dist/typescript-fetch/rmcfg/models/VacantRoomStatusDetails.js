"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VacantRoomStatusDetailsToJSON = exports.VacantRoomStatusDetailsFromJSONTyped = exports.VacantRoomStatusDetailsFromJSON = exports.instanceOfVacantRoomStatusDetails = void 0;
const runtime_1 = require("../runtime");
const HousekeepingRoomStatusType_1 = require("./HousekeepingRoomStatusType");
const InstanceLink_1 = require("./InstanceLink");
const WarningType_1 = require("./WarningType");
/**
 * Check if a given object implements the VacantRoomStatusDetails interface.
 */
function instanceOfVacantRoomStatusDetails(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfVacantRoomStatusDetails = instanceOfVacantRoomStatusDetails;
function VacantRoomStatusDetailsFromJSON(json) {
    return VacantRoomStatusDetailsFromJSONTyped(json, false);
}
exports.VacantRoomStatusDetailsFromJSON = VacantRoomStatusDetailsFromJSON;
function VacantRoomStatusDetailsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomTypes': !(0, runtime_1.exists)(json, 'roomTypes') ? undefined : json['roomTypes'],
        'beginDate': !(0, runtime_1.exists)(json, 'beginDate') ? undefined : json['beginDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'numberOfDays': !(0, runtime_1.exists)(json, 'numberOfDays') ? undefined : json['numberOfDays'],
        'houseKeepingRoomStatus': !(0, runtime_1.exists)(json, 'houseKeepingRoomStatus') ? undefined : (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeFromJSON)(json['houseKeepingRoomStatus']),
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (json['links'].map(InstanceLink_1.InstanceLinkFromJSON)),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (json['warnings'].map(WarningType_1.WarningTypeFromJSON)),
    };
}
exports.VacantRoomStatusDetailsFromJSONTyped = VacantRoomStatusDetailsFromJSONTyped;
function VacantRoomStatusDetailsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomTypes': value.roomTypes,
        'beginDate': value.beginDate,
        'endDate': value.endDate,
        'numberOfDays': value.numberOfDays,
        'houseKeepingRoomStatus': (0, HousekeepingRoomStatusType_1.HousekeepingRoomStatusTypeToJSON)(value.houseKeepingRoomStatus),
        'links': value.links === undefined ? undefined : (value.links.map(InstanceLink_1.InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : (value.warnings.map(WarningType_1.WarningTypeToJSON)),
    };
}
exports.VacantRoomStatusDetailsToJSON = VacantRoomStatusDetailsToJSON;
