/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RoomHierarchyTypeType } from './RoomHierarchyTypeType';
/**
 * Room Hierarchy id type for create, change and delete
 * @export
 * @interface RoomHierarchyType
 */
export interface RoomHierarchyType {
    /**
     *
     * @type {RoomHierarchyTypeType}
     * @memberof RoomHierarchyType
     */
    roomHierarchyType?: RoomHierarchyTypeType;
    /**
     * Resort code in which the hierarchy should exist
     * @type {string}
     * @memberof RoomHierarchyType
     */
    hotelId?: string;
    /**
     * From code to process
     * @type {string}
     * @memberof RoomHierarchyType
     */
    fromCode?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof RoomHierarchyType
     */
    toCodes?: Array<string>;
    /**
     * Display Sequence
     * @type {number}
     * @memberof RoomHierarchyType
     */
    displaySequence?: number;
}
/**
 * Check if a given object implements the RoomHierarchyType interface.
 */
export declare function instanceOfRoomHierarchyType(value: object): boolean;
export declare function RoomHierarchyTypeFromJSON(json: any): RoomHierarchyType;
export declare function RoomHierarchyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomHierarchyType;
export declare function RoomHierarchyTypeToJSON(value?: RoomHierarchyType | null): any;
