/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * This type represents the summary of room type attributes.
 * @export
 * @interface RoomTypeSummaryType
 */
export interface RoomTypeSummaryType {
    /**
     * Indicates if room type is accessible.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    accessible?: boolean;
    /**
     * Active date of the room type.
     * @type {string}
     * @memberof RoomTypeSummaryType
     */
    activeDate?: string;
    /**
     * Indicates the room type is inactive or not.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    inactive?: boolean;
    /**
     * Indicates room type is meeting room. This Can be Meeting room flag cannot be unmarked at the property level. Can only be marked for non pseudo room types.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    meetingRoom?: boolean;
    /**
     * Number of rooms for this room type.
     * @type {number}
     * @memberof RoomTypeSummaryType
     */
    numberOfRooms?: number;
    /**
     * Indicates if room type is pseudo.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    pseudo?: boolean;
    /**
     * Room class for the room type code.
     * @type {string}
     * @memberof RoomTypeSummaryType
     */
    roomClass?: string;
    /**
     *
     * @type {string}
     * @memberof RoomTypeSummaryType
     */
    roomType?: string;
    /**
     * Indicates room types sell sequence.
     * @type {number}
     * @memberof RoomTypeSummaryType
     */
    sellSequence?: number;
    /**
     * Indicates if room type is sent to interface.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    sendToInterface?: boolean;
    /**
     * Short Description of room type.
     * @type {string}
     * @memberof RoomTypeSummaryType
     */
    shortDescription?: string;
    /**
     * Indicates room type is a suite.
     * @type {boolean}
     * @memberof RoomTypeSummaryType
     */
    suite?: boolean;
}
/**
 * Check if a given object implements the RoomTypeSummaryType interface.
 */
export declare function instanceOfRoomTypeSummaryType(value: object): boolean;
export declare function RoomTypeSummaryTypeFromJSON(json: any): RoomTypeSummaryType;
export declare function RoomTypeSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomTypeSummaryType;
export declare function RoomTypeSummaryTypeToJSON(value?: RoomTypeSummaryType | null): any;
