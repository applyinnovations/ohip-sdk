"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomTypesTypeToJSON = exports.RoomTypesTypeFromJSONTyped = exports.RoomTypesTypeFromJSON = exports.instanceOfRoomTypesType = void 0;
const runtime_1 = require("../runtime");
const RoomTypeType_1 = require("./RoomTypeType");
/**
 * Check if a given object implements the RoomTypesType interface.
 */
function instanceOfRoomTypesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomTypesType = instanceOfRoomTypesType;
function RoomTypesTypeFromJSON(json) {
    return RoomTypesTypeFromJSONTyped(json, false);
}
exports.RoomTypesTypeFromJSON = RoomTypesTypeFromJSON;
function RoomTypesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : (json['roomType'].map(RoomTypeType_1.RoomTypeTypeFromJSON)),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.RoomTypesTypeFromJSONTyped = RoomTypesTypeFromJSONTyped;
function RoomTypesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'roomType': value.roomType === undefined ? undefined : (value.roomType.map(RoomTypeType_1.RoomTypeTypeToJSON)),
        'hotelId': value.hotelId,
    };
}
exports.RoomTypesTypeToJSON = RoomTypesTypeToJSON;
