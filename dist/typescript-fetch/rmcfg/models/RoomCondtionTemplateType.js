"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomCondtionTemplateTypeToJSON = exports.RoomCondtionTemplateTypeFromJSONTyped = exports.RoomCondtionTemplateTypeFromJSON = exports.instanceOfRoomCondtionTemplateType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the RoomCondtionTemplateType interface.
 */
function instanceOfRoomCondtionTemplateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomCondtionTemplateType = instanceOfRoomCondtionTemplateType;
function RoomCondtionTemplateTypeFromJSON(json) {
    return RoomCondtionTemplateTypeFromJSONTyped(json, false);
}
exports.RoomCondtionTemplateTypeFromJSON = RoomCondtionTemplateTypeFromJSON;
function RoomCondtionTemplateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'displayInRoomAssignment': !(0, runtime_1.exists)(json, 'displayInRoomAssignment') ? undefined : json['displayInRoomAssignment'],
        'comments': !(0, runtime_1.exists)(json, 'comments') ? undefined : json['comments'],
        'displaySeq': !(0, runtime_1.exists)(json, 'displaySeq') ? undefined : json['displaySeq'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
    };
}
exports.RoomCondtionTemplateTypeFromJSONTyped = RoomCondtionTemplateTypeFromJSONTyped;
function RoomCondtionTemplateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'displayInRoomAssignment': value.displayInRoomAssignment,
        'comments': value.comments,
        'displaySeq': value.displaySeq,
        'inactive': value.inactive,
        'code': value.code,
    };
}
exports.RoomCondtionTemplateTypeToJSON = RoomCondtionTemplateTypeToJSON;
