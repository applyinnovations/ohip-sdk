"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomClassTypeToJSON = exports.RoomClassTypeFromJSONTyped = exports.RoomClassTypeFromJSON = exports.instanceOfRoomClassType = void 0;
const runtime_1 = require("../runtime");
const RoomTypesSummaryType_1 = require("./RoomTypesSummaryType");
const TranslationTextType50_1 = require("./TranslationTextType50");
/**
 * Check if a given object implements the RoomClassType interface.
 */
function instanceOfRoomClassType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomClassType = instanceOfRoomClassType;
function RoomClassTypeFromJSON(json) {
    return RoomClassTypeFromJSONTyped(json, false);
}
exports.RoomClassTypeFromJSON = RoomClassTypeFromJSON;
function RoomClassTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType50_1.TranslationTextType50FromJSON)(json['description']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'roomTypes': !(0, runtime_1.exists)(json, 'roomTypes') ? undefined : (0, RoomTypesSummaryType_1.RoomTypesSummaryTypeFromJSON)(json['roomTypes']),
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
    };
}
exports.RoomClassTypeFromJSONTyped = RoomClassTypeFromJSONTyped;
function RoomClassTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'description': (0, TranslationTextType50_1.TranslationTextType50ToJSON)(value.description),
        'hotelId': value.hotelId,
        'inactive': value.inactive,
        'roomTypes': (0, RoomTypesSummaryType_1.RoomTypesSummaryTypeToJSON)(value.roomTypes),
        'sequence': value.sequence,
    };
}
exports.RoomClassTypeToJSON = RoomClassTypeToJSON;
