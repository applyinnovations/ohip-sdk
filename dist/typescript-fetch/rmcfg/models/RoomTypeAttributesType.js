"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoomTypeAttributesTypeToJSON = exports.RoomTypeAttributesTypeFromJSONTyped = exports.RoomTypeAttributesTypeFromJSON = exports.instanceOfRoomTypeAttributesType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the RoomTypeAttributesType interface.
 */
function instanceOfRoomTypeAttributesType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfRoomTypeAttributesType = instanceOfRoomTypeAttributesType;
function RoomTypeAttributesTypeFromJSON(json) {
    return RoomTypeAttributesTypeFromJSONTyped(json, false);
}
exports.RoomTypeAttributesTypeFromJSON = RoomTypeAttributesTypeFromJSON;
function RoomTypeAttributesTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'defaultOccupancy': !(0, runtime_1.exists)(json, 'defaultOccupancy') ? undefined : json['defaultOccupancy'],
        'maximumOccupancy': !(0, runtime_1.exists)(json, 'maximumOccupancy') ? undefined : json['maximumOccupancy'],
        'noOfPhysicalRooms': !(0, runtime_1.exists)(json, 'noOfPhysicalRooms') ? undefined : json['noOfPhysicalRooms'],
        'minimumOccupancy': !(0, runtime_1.exists)(json, 'minimumOccupancy') ? undefined : json['minimumOccupancy'],
        'maximumAdults': !(0, runtime_1.exists)(json, 'maximumAdults') ? undefined : json['maximumAdults'],
        'maximumChildren': !(0, runtime_1.exists)(json, 'maximumChildren') ? undefined : json['maximumChildren'],
    };
}
exports.RoomTypeAttributesTypeFromJSONTyped = RoomTypeAttributesTypeFromJSONTyped;
function RoomTypeAttributesTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'defaultOccupancy': value.defaultOccupancy,
        'maximumOccupancy': value.maximumOccupancy,
        'noOfPhysicalRooms': value.noOfPhysicalRooms,
        'minimumOccupancy': value.minimumOccupancy,
        'maximumAdults': value.maximumAdults,
        'maximumChildren': value.maximumChildren,
    };
}
exports.RoomTypeAttributesTypeToJSON = RoomTypeAttributesTypeToJSON;
