"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigRoomSummaryTypeToJSON = exports.ConfigRoomSummaryTypeFromJSONTyped = exports.ConfigRoomSummaryTypeFromJSON = exports.instanceOfConfigRoomSummaryType = void 0;
const runtime_1 = require("../runtime");
const RatePlanRatingType_1 = require("./RatePlanRatingType");
const RoomComponentsType_1 = require("./RoomComponentsType");
const RoomFeaturesType_1 = require("./RoomFeaturesType");
const RoomRoomsType_1 = require("./RoomRoomsType");
const RoomTypeShortInfoType_1 = require("./RoomTypeShortInfoType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the ConfigRoomSummaryType interface.
 */
function instanceOfConfigRoomSummaryType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfConfigRoomSummaryType = instanceOfConfigRoomSummaryType;
function ConfigRoomSummaryTypeFromJSON(json) {
    return ConfigRoomSummaryTypeFromJSONTyped(json, false);
}
exports.ConfigRoomSummaryTypeFromJSON = ConfigRoomSummaryTypeFromJSON;
function ConfigRoomSummaryTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accessible': !(0, runtime_1.exists)(json, 'accessible') ? undefined : json['accessible'],
        'building': !(0, runtime_1.exists)(json, 'building') ? undefined : json['building'],
        'connectingRooms': !(0, runtime_1.exists)(json, 'connectingRooms') ? undefined : (0, RoomRoomsType_1.RoomRoomsTypeFromJSON)(json['connectingRooms']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'floor': !(0, runtime_1.exists)(json, 'floor') ? undefined : json['floor'],
        'floorDescription': !(0, runtime_1.exists)(json, 'floorDescription') ? undefined : json['floorDescription'],
        'maximumOccupancy': !(0, runtime_1.exists)(json, 'maximumOccupancy') ? undefined : json['maximumOccupancy'],
        'meetingRoom': !(0, runtime_1.exists)(json, 'meetingRoom') ? undefined : json['meetingRoom'],
        'ownerRoom': !(0, runtime_1.exists)(json, 'ownerRoom') ? undefined : json['ownerRoom'],
        'roomAssignmentRating': !(0, runtime_1.exists)(json, 'roomAssignmentRating') ? undefined : (0, RatePlanRatingType_1.RatePlanRatingTypeFromJSON)(json['roomAssignmentRating']),
        'roomComponents': !(0, runtime_1.exists)(json, 'roomComponents') ? undefined : (0, RoomComponentsType_1.RoomComponentsTypeFromJSON)(json['roomComponents']),
        'roomDescription': !(0, runtime_1.exists)(json, 'roomDescription') ? undefined : json['roomDescription'],
        'roomFeatures': !(0, runtime_1.exists)(json, 'roomFeatures') ? undefined : (0, RoomFeaturesType_1.RoomFeaturesTypeFromJSON)(json['roomFeatures']),
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : (0, RoomTypeShortInfoType_1.RoomTypeShortInfoTypeFromJSON)(json['roomType']),
        'sellSequence': !(0, runtime_1.exists)(json, 'sellSequence') ? undefined : json['sellSequence'],
        'smokingPreference': !(0, runtime_1.exists)(json, 'smokingPreference') ? undefined : json['smokingPreference'],
        'smokingPreferenceDescription': !(0, runtime_1.exists)(json, 'smokingPreferenceDescription') ? undefined : json['smokingPreferenceDescription'],
        'squareUnits': !(0, runtime_1.exists)(json, 'squareUnits') ? undefined : json['squareUnits'],
        'squareUnitsMeasurement': !(0, runtime_1.exists)(json, 'squareUnitsMeasurement') ? undefined : json['squareUnitsMeasurement'],
        'unitGradeCode': !(0, runtime_1.exists)(json, 'unitGradeCode') ? undefined : json['unitGradeCode'],
        'unitGradeCodeDescription': !(0, runtime_1.exists)(json, 'unitGradeCodeDescription') ? undefined : json['unitGradeCodeDescription'],
    };
}
exports.ConfigRoomSummaryTypeFromJSONTyped = ConfigRoomSummaryTypeFromJSONTyped;
function ConfigRoomSummaryTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accessible': value.accessible,
        'building': value.building,
        'connectingRooms': (0, RoomRoomsType_1.RoomRoomsTypeToJSON)(value.connectingRooms),
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'floor': value.floor,
        'floorDescription': value.floorDescription,
        'maximumOccupancy': value.maximumOccupancy,
        'meetingRoom': value.meetingRoom,
        'ownerRoom': value.ownerRoom,
        'roomAssignmentRating': (0, RatePlanRatingType_1.RatePlanRatingTypeToJSON)(value.roomAssignmentRating),
        'roomComponents': (0, RoomComponentsType_1.RoomComponentsTypeToJSON)(value.roomComponents),
        'roomDescription': value.roomDescription,
        'roomFeatures': (0, RoomFeaturesType_1.RoomFeaturesTypeToJSON)(value.roomFeatures),
        'roomId': value.roomId,
        'roomType': (0, RoomTypeShortInfoType_1.RoomTypeShortInfoTypeToJSON)(value.roomType),
        'sellSequence': value.sellSequence,
        'smokingPreference': value.smokingPreference,
        'smokingPreferenceDescription': value.smokingPreferenceDescription,
        'squareUnits': value.squareUnits,
        'squareUnitsMeasurement': value.squareUnitsMeasurement,
        'unitGradeCode': value.unitGradeCode,
        'unitGradeCodeDescription': value.unitGradeCodeDescription,
    };
}
exports.ConfigRoomSummaryTypeToJSON = ConfigRoomSummaryTypeToJSON;
