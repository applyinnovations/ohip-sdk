/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BuildingFloorMappingsDetails, BuildingGroupsDetails, BuildingsDetails, ChangeBuildingGroupsRequest, ChangeBuildingsRequest, ChangeFloorsRequest, ChangeHotelRoomMaintenanceReasonsRequest, ChangeHousekeepingAttendantsRequest, ChangeHousekeepingCreditRulesRequest, ChangeHousekeepingRoomSchedulesRequest, ChangeHousekeepingSectionGroupsRequest, ChangeHousekeepingSectionsRequest, ChangeHousekeepingSupplyCodesRequest, ChangeHousekeepingTasksRequest, ChangeOutOfOrderServiceReasonsRequest, ChangeResortRoomConditionRequest, ChangeRoomConditionTemplateRequest, ChangeRoomFeaturesRequest, ChangeRoomGroupsRequest, ChangeRoomHierarchiesRequest, ChangeTemplateFloorsRequest, ChangeTemplateOutOfOrderServiceReasonsRequest, ChangeTemplateRoomFeaturesRequest, ChangeTemplateRoomMaintenanceReasonsRequest, CopyBuildingGroupsRequest, CopyBuildingsRequest, CopyHousekeepingSectionGroupsRequest, CopyHousekeepingSectionsRequest, CopyHousekeepingSupplyCodesRequest, CopyRoomHierarchiesRequest, CopyRoomsRequest, FloorsDetails, GenerateRoomHierarchyRequest, HotelRoomMaintenanceReasonsDetails, HousekeepingAttendantsDetails, HousekeepingCodesDetails, HousekeepingCreditRulesDetails, HousekeepingRoomSchedulesDetails, HousekeepingSectionGroupsDetails, HousekeepingSectionsDetails, HousekeepingTaskSheetRoomsDetails, HousekeepingTasksDetails, OutOfOrderServiceReasonsDetails, PostBuildingGroupsRequest, PostBuildingsRequest, PostFloorsRequest, PostHotelRoomMaintenanceReasonsRequest, PostHousekeepingAttendantsRequest, PostHousekeepingCreditRulesRequest, PostHousekeepingRoomSchedulesRequest, PostHousekeepingSectionGroupsRequest, PostHousekeepingSectionsRequest, PostHousekeepingSupplyCodesRequest, PostHousekeepingTasksRequest, PostOutOfOrderServiceReasonsRequest, PostResortRoomConditionRequest, PostRoomClassRequest, PostRoomClassTemplatesRequest, PostRoomConditionTemplateRequest, PostRoomFeaturesRequest, PostRoomGroupsRequest, PostRoomHierarchiesRequest, PostRoomTypeTemplatesRequest, PostRoomTypesRequest, PostRoomsRequest, PostTemplateFloorsRequest, PostTemplateHousekeepingTasksRequest, PostTemplateOutOfOrderServiceReasonsRequest, PostTemplateRoomFeaturesRequest, PostTemplateRoomMaintenanceReasonsRequest, PutRoomClassRequest, PutRoomClassTemplateRequest, PutRoomTypeTemplatesRequest, PutRoomTypesRequest, PutRoomsRequest, PutTemplateHousekeepingTaskRequest, ResortRoomConditionsDetails, RoomClassTemplatesDetails, RoomClassesDetails, RoomConditionTemplatesDetails, RoomFeaturesDetails, RoomGroupsDetails, RoomHierarchiesDetails, RoomTypeInfoDetails, RoomTypeTemplatesDetails, RoomTypesDetails, RoomsDetails, RoomsSummaryDetails, SetBuildingFloorMappingsRequest, SetHousekeepingTaskSheetRoomsRequest, Status, TemplateFloorsDetails, TemplateHousekeepingTasksDetails, TemplateOutOfOrderServiceReasonsDetails, TemplateRoomFeaturesDetails, TemplateRoomMaintenanceReasonsDetails, ValidateRoomClassInUseRequest } from '../models';
export interface ChangeBuildingGroupsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    buildingGroupsToBeChanged?: ChangeBuildingGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeBuildingsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    buildingsToBeChanged?: ChangeBuildingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeFloorsOperationRequest {
    floorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    floorsToBeChanged?: ChangeFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHotelRoomMaintenanceReasonsOperationRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRoomMaintenanceReasonsToBeChanged?: ChangeHotelRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingAttendantsOperationRequest {
    attendantId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingAttendantsToBeChanged?: ChangeHousekeepingAttendantsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingCreditRulesOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingCreditRulesToBeChanged?: ChangeHousekeepingCreditRulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingRoomSchedulesOperationRequest {
    roomScheduleId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomSchedulesToBeChanged?: ChangeHousekeepingRoomSchedulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingSectionGroupsOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionGroupsToBeChanged?: ChangeHousekeepingSectionGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingSectionsOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionsToBeChanged?: ChangeHousekeepingSectionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingSupplyCodesOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingCodesToBeChanged?: ChangeHousekeepingSupplyCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeHousekeepingTasksOperationRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingTasksToBeChanged?: ChangeHousekeepingTasksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeOutOfOrderServiceReasonsOperationRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    outOfOrderServiceReasonsToBeChanged?: ChangeOutOfOrderServiceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeResortRoomConditionOperationRequest {
    roomConditionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    resortRoomConditionToBeChanged?: ChangeResortRoomConditionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRoomConditionTemplateOperationRequest {
    templateCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomConditionTemplateToBeChanged?: ChangeRoomConditionTemplateRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRoomFeaturesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomFeaturesToBeChanged?: ChangeRoomFeaturesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRoomGroupsOperationRequest {
    rateGroupCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomGroupsToBeChanged?: ChangeRoomGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeRoomHierarchiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomHierarchiesToBeChanged?: ChangeRoomHierarchiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateFloorsOperationRequest {
    templateFloorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateFloorsToBeChanged?: ChangeTemplateFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateOutOfOrderServiceReasonsOperationRequest {
    reasonCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateOutOfOrderServiceReasonsToBeChanged?: ChangeTemplateOutOfOrderServiceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateRoomFeaturesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateRoomFeaturesToBeChanged?: ChangeTemplateRoomFeaturesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ChangeTemplateRoomMaintenanceReasonsOperationRequest {
    reasonCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateRoomMaintenanceReasonsToBeChanged?: ChangeTemplateRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyBuildingGroupsOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyBuildingGroups?: CopyBuildingGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyBuildingsOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyBuildings?: CopyBuildingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyHousekeepingSectionGroupsOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyHousekeepingSectionGroups?: CopyHousekeepingSectionGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyHousekeepingSectionsOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyHousekeepingSections?: CopyHousekeepingSectionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyHousekeepingSupplyCodesOperationRequest {
    sourceHotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyHousekeepingCodes?: CopyHousekeepingSupplyCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyRoomHierarchiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyRoomHierarchies?: CopyRoomHierarchiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface CopyRoomsOperationRequest {
    roomsId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    copyRooms?: CopyRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomClassRequest {
    roomClassId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClass?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomClassTemplateRequest {
    roomClassTemplateId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClass?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomTypeTemplatesRequest {
    roomTypeTemplatesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomTypesRequest {
    roomTypeId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomType?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteRoomsRequest {
    roomsId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    room?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface DeleteTemplateHousekeepingTaskRequest {
    templateId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    forceRemove?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GenerateRoomHierarchyOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomHierarchiesToGenerate?: GenerateRoomHierarchyRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBuildingFloorMappingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    buildingsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBuildingGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    codes?: Array<string>;
    wildCard?: string;
    descriptionWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBuildingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: string;
    codes?: Array<string>;
    wildCard?: string;
    descriptionWildCard?: string;
    buildingGroupCodes?: Array<string>;
    buildingGroupWildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetFloorsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    floorCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHotelRoomMaintenanceReasonsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    limit?: number;
    offset?: number;
    roomMaintenanceReasonCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHouseKeepingSupplyCodesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingAttendantsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    name?: string;
    attendantsCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingCreditRulesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    ruleCodes?: Array<string>;
    ruleType?: GetHousekeepingCreditRulesRuleTypeEnum;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingRoomSchedulesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeCodes?: Array<string>;
    housekeepingRoomScheduleCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingSectionGroupsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    housekeepingSectionGroupsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingSectionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    includeInactive?: boolean;
    housekeepingSectionsCodes?: Array<string>;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingTaskSheetRoomsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    building?: string;
    floor?: string;
    roomType?: string;
    daySection?: string;
    eveningSection?: string;
    fromRoom?: string;
    toRoom?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetHousekeepingTasksRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetOutOfOrderServiceReasonsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    includeInactive?: boolean;
    limit?: number;
    offset?: number;
    reasonCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetResortRoomConditionsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    roomConditionCodes?: Array<string>;
    wildCard?: string;
    inactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomClassTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomClassesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomConditionTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomConditionCodes?: Array<string>;
    wildCard?: string;
    inactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomFeaturesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    codes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomGroupsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    fetchInactive?: boolean;
    codes?: Array<string>;
    wildCard?: string;
    description?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomHierarchiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomHierarchyType?: GetRoomHierarchiesRoomHierarchyTypeEnum;
    hotelIds?: Array<string>;
    fromCode?: string;
    toCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomTypeInfoRequest {
    roomTypeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomTypeTemplatesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeInactive?: boolean;
    physical?: boolean;
    pseudo?: boolean;
    summaryInfo?: boolean;
    roomTypeCodes?: Array<string>;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomTypesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    accessible?: boolean;
    includeInactive?: boolean;
    limit?: number;
    offset?: number;
    physical?: boolean;
    pseudo?: boolean;
    summaryInfo?: boolean;
    roomTypeCodes?: Array<string>;
    roomClassCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomsRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    physical?: boolean;
    pseudo?: boolean;
    roomClassCodes?: Array<string>;
    roomTypeCodes?: Array<string>;
    room?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetRoomsSummaryRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    physical?: boolean;
    pseudo?: boolean;
    hotelId?: string;
    roomClassCodes?: Array<string>;
    roomTypeCodes?: Array<string>;
    roomCodes?: Array<string>;
    wildCard?: string;
    building?: string;
    ratingsCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateFloorsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    floors?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateHousekeepingTasksRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    taskCodes?: Array<string>;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateOutOfOrderServiceReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeInactive?: boolean;
    reasonCodes?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateRoomFeaturesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    codes?: Array<string>;
    wildCard?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetTemplateRoomMaintenanceReasonsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomMaintenanceReasonCodes?: Array<string>;
    wildCard?: string;
    includeInactive?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBuildingGroupsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    buildingGroupsCriteria?: PostBuildingGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostBuildingsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    buildingsCriteria?: PostBuildingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostFloorsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    floorsCriteria?: PostFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHotelRoomMaintenanceReasonsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelRoomMaintenanceReasonsCriteria?: PostHotelRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingAttendantsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingAttendantsCriteria?: PostHousekeepingAttendantsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingCreditRulesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingCreditRulesCriteria?: PostHousekeepingCreditRulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingRoomSchedulesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingRoomSchedulesCriteria?: PostHousekeepingRoomSchedulesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingSectionGroupsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionGroupsCriteria?: PostHousekeepingSectionGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingSectionsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionsCriteria?: PostHousekeepingSectionsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingSupplyCodesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingCodesCriteria?: PostHousekeepingSupplyCodesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostHousekeepingTasksOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingTasksCriteria?: PostHousekeepingTasksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostOutOfOrderServiceReasonsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    outOfOrderServiceReasonsCriteria?: PostOutOfOrderServiceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostResortRoomConditionOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    resortRoomConditionCriteria?: PostResortRoomConditionRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomClassOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClassCriteria?: PostRoomClassRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomClassTemplatesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClassTemplateCriteria?: PostRoomClassTemplatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomConditionTemplateOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomConditionTemplateCriteria?: PostRoomConditionTemplateRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomFeaturesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomFeaturesCriteria?: PostRoomFeaturesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomGroupsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomGroupsCriteria?: PostRoomGroupsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomHierarchiesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomHierarchiesCriteria?: PostRoomHierarchiesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomTypeTemplatesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeTemplatesCriteria?: PostRoomTypeTemplatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomTypesOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypesCriteria?: PostRoomTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomCriteria?: PostRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateFloorsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateFloorsCriteria?: PostTemplateFloorsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateHousekeepingTasksOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateHousekeepingTasksCriteria?: PostTemplateHousekeepingTasksRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateOutOfOrderServiceReasonsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateOutOfOrderServiceReasonsCriteria?: PostTemplateOutOfOrderServiceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateRoomFeaturesOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateRoomFeaturesCriteria?: PostTemplateRoomFeaturesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PostTemplateRoomMaintenanceReasonsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateRoomMaintenanceReasonsCriteria?: PostTemplateRoomMaintenanceReasonsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomClassOperationRequest {
    roomClassId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClassToBeChanged?: PutRoomClassRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomClassTemplateOperationRequest {
    roomClassTemplateId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomClassTemplateToBeChanged?: PutRoomClassTemplateRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomTypeTemplatesOperationRequest {
    roomTypeTemplatesId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypeTemplatesToBeChanged?: PutRoomTypeTemplatesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomTypesOperationRequest {
    roomTypeId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomTypesToBeChanged?: PutRoomTypesRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutRoomsOperationRequest {
    roomsId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomToBeChanged?: PutRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface PutTemplateHousekeepingTaskOperationRequest {
    templateId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    templateHousekeepingTaskToBeChanged?: PutTemplateHousekeepingTaskRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBuildingGroupsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    hotelId?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveBuildingsRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelIds?: Array<string>;
    hotelId?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveFloorsRequest {
    floorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    hotelId?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHotelRoomMaintenanceReasonsRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingAttendantsRequest {
    attendantId?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    inactive?: Array<boolean>;
    name?: Array<string>;
    phoneNo?: Array<string>;
    section?: Array<string>;
    floor?: Array<string>;
    job?: Array<string>;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    appUser?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingCreditRulesRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingRoomSchedulesRequest {
    roomScheduleId?: string;
    roomTypeCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingSectionGroupsRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingSectionGroupsCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingSectionsRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingSupplyCodesRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    housekeepingCodes?: string;
    sequence?: number;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveHousekeepingTasksRequest {
    code?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    forceRemove?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveOutOfOrderServiceReasonsRequest {
    reasonCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveResortRoomConditionRequest {
    roomConditionCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveRoomConditionTemplateRequest {
    templateCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomConditionTemplateCode?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveRoomFeaturesRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    genericHotelParentCodes?: Array<string>;
    genericHotelParentCodesGroup?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveRoomGroupsRequest {
    rateGroupCode?: string;
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomGroupsCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveRoomHierarchiesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    roomHierarchyType?: Set<RemoveRoomHierarchiesRoomHierarchyTypeEnum>;
    hotelId?: Array<string>;
    fromCode?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateFloorsRequest {
    templateFloorsId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateOutOfOrderServiceReasonsRequest {
    reasonCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateRoomFeaturesRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    genericTemplateParentCodes?: Array<string>;
    genericTemplateParentGroups?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface RemoveTemplateRoomMaintenanceReasonsRequest {
    reasonCode?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetBuildingFloorMappingsOperationRequest {
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    setBuildingFloorMappings?: SetBuildingFloorMappingsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface SetHousekeepingTaskSheetRoomsOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    setHousekeepingTaskSheetRooms?: SetHousekeepingTaskSheetRoomsRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface ValidateRoomClassInUseOperationRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    validateRoomClassInUse?: ValidateRoomClassInUseRequest;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class HotelConfigApi extends runtime.BaseAPI {
    /**
     * Use this API to update housekeeping building groups based on buildingGroupsToBeChanged. Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group. <p><strong>OperationId:</strong>changeBuildingGroups</p>
     * Change Housekeeping Building Group
     */
    changeBuildingGroupsRaw(requestParameters: ChangeBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping building groups based on buildingGroupsToBeChanged. Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group. <p><strong>OperationId:</strong>changeBuildingGroups</p>
     * Change Housekeeping Building Group
     */
    changeBuildingGroups(requestParameters: ChangeBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update buildings based on buildingsToBeChanged. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>changeBuildings</p>
     * Change Buildings
     */
    changeBuildingsRaw(requestParameters: ChangeBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update buildings based on buildingsToBeChanged. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>changeBuildings</p>
     * Change Buildings
     */
    changeBuildings(requestParameters: ChangeBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update floors based on floorsId, floorsToBeChanged. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>changeFloors</p>
     * Change floors
     */
    changeFloorsRaw(requestParameters: ChangeFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update floors based on floorsId, floorsToBeChanged. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>changeFloors</p>
     * Change floors
     */
    changeFloors(requestParameters: ChangeFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room maintenance reasons for a specific property based on reasonCode, hotelId, hotelRoomMaintenanceReasonsToBeChanged. Room maintenance codes are the various reasons/categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>
     * Change Hotel Room Maintenance Reasons
     */
    changeHotelRoomMaintenanceReasonsRaw(requestParameters: ChangeHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room maintenance reasons for a specific property based on reasonCode, hotelId, hotelRoomMaintenanceReasonsToBeChanged. Room maintenance codes are the various reasons/categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>
     * Change Hotel Room Maintenance Reasons
     */
    changeHotelRoomMaintenanceReasons(requestParameters: ChangeHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping attendants for a specific property based on attendantId, hotelId, housekeepingAttendantsToBeChanged. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>changeHousekeepingAttendants</p>
     * Change housekeeping attendants configuration
     */
    changeHousekeepingAttendantsRaw(requestParameters: ChangeHousekeepingAttendantsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping attendants for a specific property based on attendantId, hotelId, housekeepingAttendantsToBeChanged. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>changeHousekeepingAttendants</p>
     * Change housekeeping attendants configuration
     */
    changeHousekeepingAttendants(requestParameters: ChangeHousekeepingAttendantsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping credit rules for a specific property based on code, hotelId, housekeepingCreditRulesToBeChanged. Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. <p><strong>OperationId:</strong>changeHousekeepingCreditRules</p>
     * Change Housekeeping Credit Rules
     */
    changeHousekeepingCreditRulesRaw(requestParameters: ChangeHousekeepingCreditRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping credit rules for a specific property based on code, hotelId, housekeepingCreditRulesToBeChanged. Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. <p><strong>OperationId:</strong>changeHousekeepingCreditRules</p>
     * Change Housekeeping Credit Rules
     */
    changeHousekeepingCreditRules(requestParameters: ChangeHousekeepingCreditRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping room schedules for a specific property based on the roomScheduleId. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>
     * Change housekeeping room schedules
     */
    changeHousekeepingRoomSchedulesRaw(requestParameters: ChangeHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping room schedules for a specific property based on the roomScheduleId. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>
     * Change housekeeping room schedules
     */
    changeHousekeepingRoomSchedules(requestParameters: ChangeHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping section groups for a specific property based on code, hotelId, housekeepingSectionGroupsToBeChanged. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>changeHousekeepingSectionGroups</p>
     * Change Housekeeping Section Groups
     */
    changeHousekeepingSectionGroupsRaw(requestParameters: ChangeHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping section groups for a specific property based on code, hotelId, housekeepingSectionGroupsToBeChanged. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>changeHousekeepingSectionGroups</p>
     * Change Housekeeping Section Groups
     */
    changeHousekeepingSectionGroups(requestParameters: ChangeHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping sections for a specific property based on code, hotelId. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>changeHousekeepingSections</p>
     * Change Housekeeping Sections
     */
    changeHousekeepingSectionsRaw(requestParameters: ChangeHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping sections for a specific property based on code, hotelId. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>changeHousekeepingSections</p>
     * Change Housekeeping Sections
     */
    changeHousekeepingSections(requestParameters: ChangeHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping supply codes for a specific property based on code, hotelId, housekeepingCodesToBeChanged. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>changeHousekeepingSupplyCodes</p>
     * Change Housekeeping Codes
     */
    changeHousekeepingSupplyCodesRaw(requestParameters: ChangeHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping supply codes for a specific property based on code, hotelId, housekeepingCodesToBeChanged. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>changeHousekeepingSupplyCodes</p>
     * Change Housekeeping Codes
     */
    changeHousekeepingSupplyCodes(requestParameters: ChangeHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update housekeeping tasks for a specific property based on code, hotelId, housekeepingTasksToBeChanged. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>changeHousekeepingTasks</p>
     * Change Housekeeping Tasks
     */
    changeHousekeepingTasksRaw(requestParameters: ChangeHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update housekeeping tasks for a specific property based on code, hotelId, housekeepingTasksToBeChanged. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>changeHousekeepingTasks</p>
     * Change Housekeeping Tasks
     */
    changeHousekeepingTasks(requestParameters: ChangeHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update out of order service reasons for a specific property based on reasonCode, hotelId, outOfOrderServiceReasonsToBeChanged. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>changeOutOfOrderServiceReasons</p>
     * Change Out Of Order Service Reasons
     */
    changeOutOfOrderServiceReasonsRaw(requestParameters: ChangeOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update out of order service reasons for a specific property based on reasonCode, hotelId, outOfOrderServiceReasonsToBeChanged. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>changeOutOfOrderServiceReasons</p>
     * Change Out Of Order Service Reasons
     */
    changeOutOfOrderServiceReasons(requestParameters: ChangeOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room conditions for a specific property based on roomConditionCode, hotelId, resortRoomConditionToBeChanged. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>changeResortRoomCondition</p>
     * Change room condition configuration
     */
    changeResortRoomConditionRaw(requestParameters: ChangeResortRoomConditionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room conditions for a specific property based on roomConditionCode, hotelId, resortRoomConditionToBeChanged. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>changeResortRoomCondition</p>
     * Change room condition configuration
     */
    changeResortRoomCondition(requestParameters: ChangeResortRoomConditionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room condition templates based on templateCode, roomConditionTemplateToBeChanged. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>changeRoomConditionTemplate</p>
     * Change room condition template
     */
    changeRoomConditionTemplateRaw(requestParameters: ChangeRoomConditionTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room condition templates based on templateCode, roomConditionTemplateToBeChanged. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>changeRoomConditionTemplate</p>
     * Change room condition template
     */
    changeRoomConditionTemplate(requestParameters: ChangeRoomConditionTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room features for a specific property based on hotelId, roomFeaturesToBeChanged. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>changeRoomFeatures</p>
     * Change Hotel Room Features
     */
    changeRoomFeaturesRaw(requestParameters: ChangeRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room features for a specific property based on hotelId, roomFeaturesToBeChanged. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>changeRoomFeatures</p>
     * Change Hotel Room Features
     */
    changeRoomFeatures(requestParameters: ChangeRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room groups for a specific property based on rateGroupCode, hotelId, roomGroupsToBeChanged. <p><strong>OperationId:</strong>changeRoomGroups</p>
     * Change Room Groups
     */
    changeRoomGroupsRaw(requestParameters: ChangeRoomGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room groups for a specific property based on rateGroupCode, hotelId, roomGroupsToBeChanged. <p><strong>OperationId:</strong>changeRoomGroups</p>
     * Change Room Groups
     */
    changeRoomGroups(requestParameters: ChangeRoomGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update Room Hierarchies. <p><strong>OperationId:</strong>changeRoomHierarchies</p>
     * Change Room Hierarchies
     */
    changeRoomHierarchiesRaw(requestParameters: ChangeRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update Room Hierarchies. <p><strong>OperationId:</strong>changeRoomHierarchies</p>
     * Change Room Hierarchies
     */
    changeRoomHierarchies(requestParameters: ChangeRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update template floors based on templateFloorsId, templateFloorsToBeChanged. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>changeTemplateFloors</p>
     * Change template floors
     */
    changeTemplateFloorsRaw(requestParameters: ChangeTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update template floors based on templateFloorsId, templateFloorsToBeChanged. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>changeTemplateFloors</p>
     * Change template floors
     */
    changeTemplateFloors(requestParameters: ChangeTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update out of order service reason templates based on reasonCode, templateOutOfOrderServiceReasonsToBeChanged. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>changeTemplateOutOfOrderServiceReasons</p>
     * Change a template Out Of Order Service Reason Code
     */
    changeTemplateOutOfOrderServiceReasonsRaw(requestParameters: ChangeTemplateOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update out of order service reason templates based on reasonCode, templateOutOfOrderServiceReasonsToBeChanged. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>changeTemplateOutOfOrderServiceReasons</p>
     * Change a template Out Of Order Service Reason Code
     */
    changeTemplateOutOfOrderServiceReasons(requestParameters: ChangeTemplateOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room feature templates based on templateRoomFeaturesToBeChanged. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>changeTemplateRoomFeatures</p>
     * Change template Room Features
     */
    changeTemplateRoomFeaturesRaw(requestParameters: ChangeTemplateRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room feature templates based on templateRoomFeaturesToBeChanged. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>changeTemplateRoomFeatures</p>
     * Change template Room Features
     */
    changeTemplateRoomFeatures(requestParameters: ChangeTemplateRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update room maintenance reason templates based on reasonCode, templateRoomMaintenanceReasonsToBeChanged. Room maintenance codes are the various categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>changeTemplateRoomMaintenanceReasons</p>
     * Change Template Room Maintenance Reasons
     */
    changeTemplateRoomMaintenanceReasonsRaw(requestParameters: ChangeTemplateRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update room maintenance reason templates based on reasonCode, templateRoomMaintenanceReasonsToBeChanged. Room maintenance codes are the various categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>changeTemplateRoomMaintenanceReasons</p>
     * Change Template Room Maintenance Reasons
     */
    changeTemplateRoomMaintenanceReasons(requestParameters: ChangeTemplateRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to copy existing Housekeeping Building Groups from the source property to the target properties. <p><strong>OperationId:</strong>copyBuildingGroups</p>
     * Copy Building Groups
     */
    copyBuildingGroupsRaw(requestParameters: CopyBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to copy existing Housekeeping Building Groups from the source property to the target properties. <p><strong>OperationId:</strong>copyBuildingGroups</p>
     * Copy Building Groups
     */
    copyBuildingGroups(requestParameters: CopyBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy existing Building from source property to target properties. <p><strong>OperationId:</strong>copyBuildings</p>
     *  copy existing Building from source property to target properties
     */
    copyBuildingsRaw(requestParameters: CopyBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy existing Building from source property to target properties. <p><strong>OperationId:</strong>copyBuildings</p>
     *  copy existing Building from source property to target properties
     */
    copyBuildings(requestParameters: CopyBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Housekeeping Section Groups. <p><strong>OperationId:</strong>copyHousekeepingSectionGroups</p>
     *  copy Housekeeping Section Groups
     */
    copyHousekeepingSectionGroupsRaw(requestParameters: CopyHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Housekeeping Section Groups. <p><strong>OperationId:</strong>copyHousekeepingSectionGroups</p>
     *  copy Housekeeping Section Groups
     */
    copyHousekeepingSectionGroups(requestParameters: CopyHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Housekeeping Sections. <p><strong>OperationId:</strong>copyHousekeepingSections</p>
     *  copy Housekeeping Sections
     */
    copyHousekeepingSectionsRaw(requestParameters: CopyHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Housekeeping Sections. <p><strong>OperationId:</strong>copyHousekeepingSections</p>
     *  copy Housekeeping Sections
     */
    copyHousekeepingSections(requestParameters: CopyHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Copy Housekeeping Codes. <p><strong>OperationId:</strong>copyHousekeepingSupplyCodes</p>
     *  copy Housekeeping Codes
     */
    copyHousekeepingSupplyCodesRaw(requestParameters: CopyHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Copy Housekeeping Codes. <p><strong>OperationId:</strong>copyHousekeepingSupplyCodes</p>
     *  copy Housekeeping Codes
     */
    copyHousekeepingSupplyCodes(requestParameters: CopyHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * You can use this API to copy Room Hierarchies. <p><strong>OperationId:</strong>copyRoomHierarchies</p>
     *  copy Room Hierarchies
     */
    copyRoomHierarchiesRaw(requestParameters: CopyRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * You can use this API to copy Room Hierarchies. <p><strong>OperationId:</strong>copyRoomHierarchies</p>
     *  copy Room Hierarchies
     */
    copyRoomHierarchies(requestParameters: CopyRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new rooms based on an existing room. Component rooms are not allowed to be copied. <p><strong>OperationId:</strong>copyRooms</p>
     * Copy Rooms
     */
    copyRoomsRaw(requestParameters: CopyRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new rooms based on an existing room. Component rooms are not allowed to be copied. <p><strong>OperationId:</strong>copyRooms</p>
     * Copy Rooms
     */
    copyRooms(requestParameters: CopyRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete an existing properties Room Class. <p><strong>OperationId:</strong>deleteRoomClass</p>
     * Delete a Room Class
     */
    deleteRoomClassRaw(requestParameters: DeleteRoomClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete an existing properties Room Class. <p><strong>OperationId:</strong>deleteRoomClass</p>
     * Delete a Room Class
     */
    deleteRoomClass(requestParameters: DeleteRoomClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete an existing room class template. <p><strong>OperationId:</strong>deleteRoomClassTemplate</p>
     * Delete Room Class Template
     */
    deleteRoomClassTemplateRaw(requestParameters: DeleteRoomClassTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete an existing room class template. <p><strong>OperationId:</strong>deleteRoomClassTemplate</p>
     * Delete Room Class Template
     */
    deleteRoomClassTemplate(requestParameters: DeleteRoomClassTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>
     * Delete new Room Type templates
     */
    deleteRoomTypeTemplatesRaw(requestParameters: DeleteRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>
     * Delete new Room Type templates
     */
    deleteRoomTypeTemplates(requestParameters: DeleteRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>
     * Delete Room Types
     */
    deleteRoomTypesRaw(requestParameters: DeleteRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>
     * Delete Room Types
     */
    deleteRoomTypes(requestParameters: DeleteRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete an existing room given hotel code and room. <p><strong>OperationId:</strong>deleteRooms</p>
     * Delete an existing room given hotel code and room
     */
    deleteRoomsRaw(requestParameters: DeleteRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete an existing room given hotel code and room. <p><strong>OperationId:</strong>deleteRooms</p>
     * Delete an existing room given hotel code and room
     */
    deleteRooms(requestParameters: DeleteRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete a template Housekeeping Task. <p><strong>OperationId:</strong>deleteTemplateHousekeepingTask</p>
     * Delete a template Housekeeping Task
     */
    deleteTemplateHousekeepingTaskRaw(requestParameters: DeleteTemplateHousekeepingTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete a template Housekeeping Task. <p><strong>OperationId:</strong>deleteTemplateHousekeepingTask</p>
     * Delete a template Housekeeping Task
     */
    deleteTemplateHousekeepingTask(requestParameters: DeleteTemplateHousekeepingTaskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Generate the room hierarchies. <p><strong>OperationId:</strong>generateRoomHierarchy</p>
     * generate the room hierarchies
     */
    generateRoomHierarchyRaw(requestParameters: GenerateRoomHierarchyOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomHierarchiesDetails>>;
    /**
     * Generate the room hierarchies. <p><strong>OperationId:</strong>generateRoomHierarchy</p>
     * generate the room hierarchies
     */
    generateRoomHierarchy(requestParameters: GenerateRoomHierarchyOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomHierarchiesDetails>;
    /**
     * Use this API to get Hotel level floor mappings to buildings. <p><strong>OperationId:</strong>getBuildingFloorMappings</p>
     * Get Hotel level floor mappings to buildings
     */
    getBuildingFloorMappingsRaw(requestParameters: GetBuildingFloorMappingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildingFloorMappingsDetails>>;
    /**
     * Use this API to get Hotel level floor mappings to buildings. <p><strong>OperationId:</strong>getBuildingFloorMappings</p>
     * Get Hotel level floor mappings to buildings
     */
    getBuildingFloorMappings(requestParameters: GetBuildingFloorMappingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildingFloorMappingsDetails>;
    /**
     * Use this API to return housekeeping building groups based on search criteria such as hotelId, codes, wildCard, descriptionWildCard. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>getBuildingGroups</p>
     * Get Housekeeping Building Group info
     */
    getBuildingGroupsRaw(requestParameters: GetBuildingGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildingGroupsDetails>>;
    /**
     * Use this API to return housekeeping building groups based on search criteria such as hotelId, codes, wildCard, descriptionWildCard. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>getBuildingGroups</p>
     * Get Housekeeping Building Group info
     */
    getBuildingGroups(requestParameters: GetBuildingGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildingGroupsDetails>;
    /**
     * Use this API to return buildings based on search criteria such as hotelId, codes, wildCard, descriptionWildCard, buildingGroupCodes, buildingGroupWildCard. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>getBuildings</p>
     * Get Building information
     */
    getBuildingsRaw(requestParameters: GetBuildingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildingsDetails>>;
    /**
     * Use this API to return buildings based on search criteria such as hotelId, codes, wildCard, descriptionWildCard, buildingGroupCodes, buildingGroupWildCard. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>getBuildings</p>
     * Get Building information
     */
    getBuildings(requestParameters: GetBuildingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildingsDetails>;
    /**
     * Use this API to return floors based on search criteria such as hotelIds, floorCodes. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>getFloors</p>
     * Get floors
     */
    getFloorsRaw(requestParameters: GetFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FloorsDetails>>;
    /**
     * Use this API to return floors based on search criteria such as hotelIds, floorCodes. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>getFloors</p>
     * Get floors
     */
    getFloors(requestParameters: GetFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FloorsDetails>;
    /**
     * Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p>
     * Get Hotel Room Maintenance Reasons
     */
    getHotelRoomMaintenanceReasonsRaw(requestParameters: GetHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HotelRoomMaintenanceReasonsDetails>>;
    /**
     * Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p>
     * Get Hotel Room Maintenance Reasons
     */
    getHotelRoomMaintenanceReasons(requestParameters: GetHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HotelRoomMaintenanceReasonsDetails>;
    /**
     * Use this API to return housekeeping supply codes for a specific hotel based on search criteria such as hotelId, codes, wildCard. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>getHouseKeepingSupplyCodes</p>
     * Get Housekeeping Codes
     */
    getHouseKeepingSupplyCodesRaw(requestParameters: GetHouseKeepingSupplyCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingCodesDetails>>;
    /**
     * Use this API to return housekeeping supply codes for a specific hotel based on search criteria such as hotelId, codes, wildCard. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>getHouseKeepingSupplyCodes</p>
     * Get Housekeeping Codes
     */
    getHouseKeepingSupplyCodes(requestParameters: GetHouseKeepingSupplyCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingCodesDetails>;
    /**
     * Use this API to return housekeeping attendants for a specific hotel based on search criteria such as hotelId, name, attendantsCodes, wildCard, includeInactive. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>getHousekeepingAttendants</p>
     * Get Housekeeping Attendants
     */
    getHousekeepingAttendantsRaw(requestParameters: GetHousekeepingAttendantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingAttendantsDetails>>;
    /**
     * Use this API to return housekeeping attendants for a specific hotel based on search criteria such as hotelId, name, attendantsCodes, wildCard, includeInactive. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>getHousekeepingAttendants</p>
     * Get Housekeeping Attendants
     */
    getHousekeepingAttendants(requestParameters: GetHousekeepingAttendantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingAttendantsDetails>;
    /**
     * Use this API to return housekeeping credit rules for a specific hotel based on search criteria such as hotelId, ruleCodes, ruleType, includeInactive. <p> Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways.</p> <p><strong>OperationId:</strong>getHousekeepingCreditRules</p>
     * Get Housekeeping Credit Rules
     */
    getHousekeepingCreditRulesRaw(requestParameters: GetHousekeepingCreditRulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingCreditRulesDetails>>;
    /**
     * Use this API to return housekeeping credit rules for a specific hotel based on search criteria such as hotelId, ruleCodes, ruleType, includeInactive. <p> Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways.</p> <p><strong>OperationId:</strong>getHousekeepingCreditRules</p>
     * Get Housekeeping Credit Rules
     */
    getHousekeepingCreditRules(requestParameters: GetHousekeepingCreditRulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingCreditRulesDetails>;
    /**
     * Use this API to return housekeeping room schedules for a specific hotel based on search criteria such as hotelId, roomTypeCodes, housekeepingRoomScheduleCodes. <p>Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type.</p> <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>
     * Get housekeeping room schedules
     */
    getHousekeepingRoomSchedulesRaw(requestParameters: GetHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingRoomSchedulesDetails>>;
    /**
     * Use this API to return housekeeping room schedules for a specific hotel based on search criteria such as hotelId, roomTypeCodes, housekeepingRoomScheduleCodes. <p>Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type.</p> <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>
     * Get housekeeping room schedules
     */
    getHousekeepingRoomSchedules(requestParameters: GetHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingRoomSchedulesDetails>;
    /**
     * Use this API to return housekeeping section groups for a specific hotel based on search criteria such as hotelId, housekeepingSectionGroupsCodes. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSectionGroups</p>
     * Get Housekeeping Section Groups
     */
    getHousekeepingSectionGroupsRaw(requestParameters: GetHousekeepingSectionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingSectionGroupsDetails>>;
    /**
     * Use this API to return housekeeping section groups for a specific hotel based on search criteria such as hotelId, housekeepingSectionGroupsCodes. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSectionGroups</p>
     * Get Housekeeping Section Groups
     */
    getHousekeepingSectionGroups(requestParameters: GetHousekeepingSectionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingSectionGroupsDetails>;
    /**
     * Use this API to return housekeeping sections for a specific hotel based on search criteria such as hotelId, includeInactive, housekeepingSectionsCodes, description. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSections</p>
     * Get Housekeeping Sections
     */
    getHousekeepingSectionsRaw(requestParameters: GetHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingSectionsDetails>>;
    /**
     * Use this API to return housekeeping sections for a specific hotel based on search criteria such as hotelId, includeInactive, housekeepingSectionsCodes, description. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSections</p>
     * Get Housekeeping Sections
     */
    getHousekeepingSections(requestParameters: GetHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingSectionsDetails>;
    /**
     * Use this API to return information related to housekeeping tasksheet rooms for a specific hotel based on search criteria such as hotelId, building, floor, roomType, daySection, eveningSection, fromRoom, toRoom. Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>getHousekeepingTaskSheetRooms</p>
     * Get information related to housekeeping tasksheet rooms
     */
    getHousekeepingTaskSheetRoomsRaw(requestParameters: GetHousekeepingTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingTaskSheetRoomsDetails>>;
    /**
     * Use this API to return information related to housekeeping tasksheet rooms for a specific hotel based on search criteria such as hotelId, building, floor, roomType, daySection, eveningSection, fromRoom, toRoom. Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>getHousekeepingTaskSheetRooms</p>
     * Get information related to housekeeping tasksheet rooms
     */
    getHousekeepingTaskSheetRooms(requestParameters: GetHousekeepingTaskSheetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingTaskSheetRoomsDetails>;
    /**
     * Use this API to return housekeeping tasks for a specific hotel based on search criteria such as hotelId, taskCodes, wildCard, includeInactive. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>getHousekeepingTasks</p>
     * Get Housekeeping Tasks
     */
    getHousekeepingTasksRaw(requestParameters: GetHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HousekeepingTasksDetails>>;
    /**
     * Use this API to return housekeeping tasks for a specific hotel based on search criteria such as hotelId, taskCodes, wildCard, includeInactive. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>getHousekeepingTasks</p>
     * Get Housekeeping Tasks
     */
    getHousekeepingTasks(requestParameters: GetHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HousekeepingTasksDetails>;
    /**
     * Use this API to return out of order service reasons for a specific hotel based on search criteria such as hotelId, includeInactive, limit offset, reasonCodes. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>getOutOfOrderServiceReasons</p>
     * Get Out Of Order Service Reasons
     */
    getOutOfOrderServiceReasonsRaw(requestParameters: GetOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OutOfOrderServiceReasonsDetails>>;
    /**
     * Use this API to return out of order service reasons for a specific hotel based on search criteria such as hotelId, includeInactive, limit offset, reasonCodes. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>getOutOfOrderServiceReasons</p>
     * Get Out Of Order Service Reasons
     */
    getOutOfOrderServiceReasons(requestParameters: GetOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OutOfOrderServiceReasonsDetails>;
    /**
     * Use this API to get room condition configuration . <p><strong>OperationId:</strong>getResortRoomConditions</p>
     * Get room condition configuration
     */
    getResortRoomConditionsRaw(requestParameters: GetResortRoomConditionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResortRoomConditionsDetails>>;
    /**
     * Use this API to get room condition configuration . <p><strong>OperationId:</strong>getResortRoomConditions</p>
     * Get room condition configuration
     */
    getResortRoomConditions(requestParameters: GetResortRoomConditionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResortRoomConditionsDetails>;
    /**
     * This API gets the room class templates that match the criteria in the request message. <p><strong>OperationId:</strong>getRoomClassTemplates</p>
     * Get Room Class Templates
     */
    getRoomClassTemplatesRaw(requestParameters: GetRoomClassTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomClassTemplatesDetails>>;
    /**
     * This API gets the room class templates that match the criteria in the request message. <p><strong>OperationId:</strong>getRoomClassTemplates</p>
     * Get Room Class Templates
     */
    getRoomClassTemplates(requestParameters: GetRoomClassTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomClassTemplatesDetails>;
    /**
     * Retrieve a list of a properties Room Classes. <p><strong>OperationId:</strong>getRoomClasses</p>
     * Get Room Classes
     */
    getRoomClassesRaw(requestParameters: GetRoomClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomClassesDetails>>;
    /**
     * Retrieve a list of a properties Room Classes. <p><strong>OperationId:</strong>getRoomClasses</p>
     * Get Room Classes
     */
    getRoomClasses(requestParameters: GetRoomClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomClassesDetails>;
    /**
     * Use this API to get room condition templates. <p><strong>OperationId:</strong>getRoomConditionTemplates</p>
     * Get room condition templates
     */
    getRoomConditionTemplatesRaw(requestParameters: GetRoomConditionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomConditionTemplatesDetails>>;
    /**
     * Use this API to get room condition templates. <p><strong>OperationId:</strong>getRoomConditionTemplates</p>
     * Get room condition templates
     */
    getRoomConditionTemplates(requestParameters: GetRoomConditionTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomConditionTemplatesDetails>;
    /**
     * Use this API to return room features for a specific property based on search criteria such as codes, wildCard.<p><strong>OperationId:</strong>getRoomFeatures</p>
     * Get hotel room features
     */
    getRoomFeaturesRaw(requestParameters: GetRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomFeaturesDetails>>;
    /**
     * Use this API to return room features for a specific property based on search criteria such as codes, wildCard.<p><strong>OperationId:</strong>getRoomFeatures</p>
     * Get hotel room features
     */
    getRoomFeatures(requestParameters: GetRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomFeaturesDetails>;
    /**
     * Use this API to get Room Groups. <p><strong>OperationId:</strong>getRoomGroups</p>
     * Get Room Groups
     */
    getRoomGroupsRaw(requestParameters: GetRoomGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomGroupsDetails>>;
    /**
     * Use this API to get Room Groups. <p><strong>OperationId:</strong>getRoomGroups</p>
     * Get Room Groups
     */
    getRoomGroups(requestParameters: GetRoomGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomGroupsDetails>;
    /**
     * Use this API to get Room Hierarchies. <p><strong>OperationId:</strong>getRoomHierarchies</p>
     * Get Room Hierarchies
     */
    getRoomHierarchiesRaw(requestParameters: GetRoomHierarchiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomHierarchiesDetails>>;
    /**
     * Use this API to get Room Hierarchies. <p><strong>OperationId:</strong>getRoomHierarchies</p>
     * Get Room Hierarchies
     */
    getRoomHierarchies(requestParameters: GetRoomHierarchiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomHierarchiesDetails>;
    /**
     * Use this API to get Room Type details of a Property. The search criteria can include a list of Room Types and the  Property (hotelID). <p><strong>OperationId:</strong>getRoomTypeInfo</p>
     * Get Room Type Information
     */
    getRoomTypeInfoRaw(requestParameters: GetRoomTypeInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomTypeInfoDetails>>;
    /**
     * Use this API to get Room Type details of a Property. The search criteria can include a list of Room Types and the  Property (hotelID). <p><strong>OperationId:</strong>getRoomTypeInfo</p>
     * Get Room Type Information
     */
    getRoomTypeInfo(requestParameters: GetRoomTypeInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomTypeInfoDetails>;
    /**
     * This API accepts the room type template request search criteria and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>
     * Get Room Type Templates
     */
    getRoomTypeTemplatesRaw(requestParameters: GetRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomTypeTemplatesDetails>>;
    /**
     * This API accepts the room type template request search criteria and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>
     * Get Room Type Templates
     */
    getRoomTypeTemplates(requestParameters: GetRoomTypeTemplatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomTypeTemplatesDetails>;
    /**
     * Use this API to return room types for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo, etc.<p><strong>OperationId:</strong>getRoomTypes</p>
     * Get hotel room types
     */
    getRoomTypesRaw(requestParameters: GetRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomTypesDetails>>;
    /**
     * Use this API to return room types for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo, etc.<p><strong>OperationId:</strong>getRoomTypes</p>
     * Get hotel room types
     */
    getRoomTypes(requestParameters: GetRoomTypesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomTypesDetails>;
    /**
     * Use this API to return rooms for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>
     * Get hotel rooms
     */
    getRoomsRaw(requestParameters: GetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomsDetails>>;
    /**
     * Use this API to return rooms for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>
     * Get hotel rooms
     */
    getRooms(requestParameters: GetRoomsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomsDetails>;
    /**
     * Use this API to return room summary information based on search criteria such as hotelId, roomClassCodes, roomTypeCodes, roomCodes, wildCard, etc.<p><strong>OperationId:</strong>getRoomsSummary</p>
     * Get room summary
     */
    getRoomsSummaryRaw(requestParameters: GetRoomsSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoomsSummaryDetails>>;
    /**
     * Use this API to return room summary information based on search criteria such as hotelId, roomClassCodes, roomTypeCodes, roomCodes, wildCard, etc.<p><strong>OperationId:</strong>getRoomsSummary</p>
     * Get room summary
     */
    getRoomsSummary(requestParameters: GetRoomsSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoomsSummaryDetails>;
    /**
     * Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>
     * Get template floors
     */
    getTemplateFloorsRaw(requestParameters: GetTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateFloorsDetails>>;
    /**
     * Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>
     * Get template floors
     */
    getTemplateFloors(requestParameters: GetTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateFloorsDetails>;
    /**
     * Use this API to get template Housekeeping Tasks.<p><strong>OperationId:</strong>getTemplateHousekeepingTasks</p>
     * Get Template Housekeeping Tasks
     */
    getTemplateHousekeepingTasksRaw(requestParameters: GetTemplateHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateHousekeepingTasksDetails>>;
    /**
     * Use this API to get template Housekeeping Tasks.<p><strong>OperationId:</strong>getTemplateHousekeepingTasks</p>
     * Get Template Housekeeping Tasks
     */
    getTemplateHousekeepingTasks(requestParameters: GetTemplateHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateHousekeepingTasksDetails>;
    /**
     *  Use this API to get template Out Of Order Service Reasons. <p><strong>OperationId:</strong>getTemplateOutOfOrderServiceReasons</p>
     *  Get template Out Of Order Service Reasons
     */
    getTemplateOutOfOrderServiceReasonsRaw(requestParameters: GetTemplateOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateOutOfOrderServiceReasonsDetails>>;
    /**
     *  Use this API to get template Out Of Order Service Reasons. <p><strong>OperationId:</strong>getTemplateOutOfOrderServiceReasons</p>
     *  Get template Out Of Order Service Reasons
     */
    getTemplateOutOfOrderServiceReasons(requestParameters: GetTemplateOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateOutOfOrderServiceReasonsDetails>;
    /**
     * Use this API to get template Room Features. <p><strong>OperationId:</strong>getTemplateRoomFeatures</p>
     * Get template Room Features
     */
    getTemplateRoomFeaturesRaw(requestParameters: GetTemplateRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateRoomFeaturesDetails>>;
    /**
     * Use this API to get template Room Features. <p><strong>OperationId:</strong>getTemplateRoomFeatures</p>
     * Get template Room Features
     */
    getTemplateRoomFeatures(requestParameters: GetTemplateRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateRoomFeaturesDetails>;
    /**
     * Use this API to get Template Room Maintenance Reasons. <p><strong>OperationId:</strong>getTemplateRoomMaintenanceReasons</p>
     * Get Template Room Maintenance Reasons
     */
    getTemplateRoomMaintenanceReasonsRaw(requestParameters: GetTemplateRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TemplateRoomMaintenanceReasonsDetails>>;
    /**
     * Use this API to get Template Room Maintenance Reasons. <p><strong>OperationId:</strong>getTemplateRoomMaintenanceReasons</p>
     * Get Template Room Maintenance Reasons
     */
    getTemplateRoomMaintenanceReasons(requestParameters: GetTemplateRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TemplateRoomMaintenanceReasonsDetails>;
    /**
     * Use this API to create housekeeping building groups. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>postBuildingGroups</p>
     * Create  Housekeeping Building Group
     */
    postBuildingGroupsRaw(requestParameters: PostBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping building groups. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>postBuildingGroups</p>
     * Create  Housekeeping Building Group
     */
    postBuildingGroups(requestParameters: PostBuildingGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new buildings. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>postBuildings</p>
     * Create new Buildings
     */
    postBuildingsRaw(requestParameters: PostBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new buildings. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>postBuildings</p>
     * Create new Buildings
     */
    postBuildings(requestParameters: PostBuildingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create floors. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>postFloors</p>
     * Create floors
     */
    postFloorsRaw(requestParameters: PostFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create floors. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>postFloors</p>
     * Create floors
     */
    postFloors(requestParameters: PostFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>
     * Create Hotel Room Maintenance Reasons
     */
    postHotelRoomMaintenanceReasonsRaw(requestParameters: PostHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>
     * Create Hotel Room Maintenance Reasons
     */
    postHotelRoomMaintenanceReasons(requestParameters: PostHotelRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping attendants for a specific hotel. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>postHousekeepingAttendants</p>
     * Create new housekeeping attendants configuration
     */
    postHousekeepingAttendantsRaw(requestParameters: PostHousekeepingAttendantsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping attendants for a specific hotel. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>postHousekeepingAttendants</p>
     * Create new housekeeping attendants configuration
     */
    postHousekeepingAttendants(requestParameters: PostHousekeepingAttendantsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping credit rules for a specific hotel. <p>Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. </P> <p><strong>OperationId:</strong>postHousekeepingCreditRules</p>
     * Create Housekeeping Credit Rules
     */
    postHousekeepingCreditRulesRaw(requestParameters: PostHousekeepingCreditRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping credit rules for a specific hotel. <p>Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. </P> <p><strong>OperationId:</strong>postHousekeepingCreditRules</p>
     * Create Housekeeping Credit Rules
     */
    postHousekeepingCreditRules(requestParameters: PostHousekeepingCreditRulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping room schedules for a specific hotel. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>
     * Create housekeeping room schedules
     */
    postHousekeepingRoomSchedulesRaw(requestParameters: PostHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping room schedules for a specific hotel. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>
     * Create housekeeping room schedules
     */
    postHousekeepingRoomSchedules(requestParameters: PostHousekeepingRoomSchedulesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping section groups for a specific hotel. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</P> <p><strong>OperationId:</strong>postHousekeepingSectionGroups</p>
     * Create Housekeeping Section Groups
     */
    postHousekeepingSectionGroupsRaw(requestParameters: PostHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping section groups for a specific hotel. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</P> <p><strong>OperationId:</strong>postHousekeepingSectionGroups</p>
     * Create Housekeeping Section Groups
     */
    postHousekeepingSectionGroups(requestParameters: PostHousekeepingSectionGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping sections for a specific hotel. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>postHousekeepingSections</p>
     * Create Housekeeping Sections
     */
    postHousekeepingSectionsRaw(requestParameters: PostHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping sections for a specific hotel. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>postHousekeepingSections</p>
     * Create Housekeeping Sections
     */
    postHousekeepingSections(requestParameters: PostHousekeepingSectionsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping supply codes for a specific hotel. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>postHousekeepingSupplyCodes</p>
     * Create Housekeeping Codes
     */
    postHousekeepingSupplyCodesRaw(requestParameters: PostHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping supply codes for a specific hotel. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>postHousekeepingSupplyCodes</p>
     * Create Housekeeping Codes
     */
    postHousekeepingSupplyCodes(requestParameters: PostHousekeepingSupplyCodesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create housekeeping tasks for a specific hotel. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>postHousekeepingTasks</p>
     * Create Housekeeping Tasks
     */
    postHousekeepingTasksRaw(requestParameters: PostHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create housekeeping tasks for a specific hotel. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>postHousekeepingTasks</p>
     * Create Housekeeping Tasks
     */
    postHousekeepingTasks(requestParameters: PostHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create out of order service reasons for a specific hotel. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>postOutOfOrderServiceReasons</p>
     * Create Out Of Order Service Reasons
     */
    postOutOfOrderServiceReasonsRaw(requestParameters: PostOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create out of order service reasons for a specific hotel. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>postOutOfOrderServiceReasons</p>
     * Create Out Of Order Service Reasons
     */
    postOutOfOrderServiceReasons(requestParameters: PostOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create room condition configuration . <p><strong>OperationId:</strong>postResortRoomCondition</p>
     * Create room condition configuration
     */
    postResortRoomConditionRaw(requestParameters: PostResortRoomConditionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create room condition configuration . <p><strong>OperationId:</strong>postResortRoomCondition</p>
     * Create room condition configuration
     */
    postResortRoomCondition(requestParameters: PostResortRoomConditionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new hotel level room class. <p><strong>OperationId:</strong>postRoomClass</p>
     * Create Room Class
     */
    postRoomClassRaw(requestParameters: PostRoomClassOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new hotel level room class. <p><strong>OperationId:</strong>postRoomClass</p>
     * Create Room Class
     */
    postRoomClass(requestParameters: PostRoomClassOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to create a new room class template. <p><strong>OperationId:</strong>postRoomClassTemplates</p>
     * Create Room Class Template
     */
    postRoomClassTemplatesRaw(requestParameters: PostRoomClassTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to create a new room class template. <p><strong>OperationId:</strong>postRoomClassTemplates</p>
     * Create Room Class Template
     */
    postRoomClassTemplates(requestParameters: PostRoomClassTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new room condition template. <p><strong>OperationId:</strong>postRoomConditionTemplate</p>
     * Create new room condition template
     */
    postRoomConditionTemplateRaw(requestParameters: PostRoomConditionTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new room condition template. <p><strong>OperationId:</strong>postRoomConditionTemplate</p>
     * Create new room condition template
     */
    postRoomConditionTemplate(requestParameters: PostRoomConditionTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Hotel Room Features. <p><strong>OperationId:</strong>postRoomFeatures</p>
     * Create Hotel Room Features
     */
    postRoomFeaturesRaw(requestParameters: PostRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Hotel Room Features. <p><strong>OperationId:</strong>postRoomFeatures</p>
     * Create Hotel Room Features
     */
    postRoomFeatures(requestParameters: PostRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Room Groups. <p><strong>OperationId:</strong>postRoomGroups</p>
     * Create Room Groups
     */
    postRoomGroupsRaw(requestParameters: PostRoomGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Room Groups. <p><strong>OperationId:</strong>postRoomGroups</p>
     * Create Room Groups
     */
    postRoomGroups(requestParameters: PostRoomGroupsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Room Hierarchies. <p><strong>OperationId:</strong>postRoomHierarchies</p>
     * Create Room Hierarchies
     */
    postRoomHierarchiesRaw(requestParameters: PostRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Room Hierarchies. <p><strong>OperationId:</strong>postRoomHierarchies</p>
     * Create Room Hierarchies
     */
    postRoomHierarchies(requestParameters: PostRoomHierarchiesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to Use this API to create new Room Type templates. <p><strong>OperationId:</strong>postRoomTypeTemplates</p>
     * Create Room Type Templates
     */
    postRoomTypeTemplatesRaw(requestParameters: PostRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to Use this API to create new Room Type templates. <p><strong>OperationId:</strong>postRoomTypeTemplates</p>
     * Create Room Type Templates
     */
    postRoomTypeTemplates(requestParameters: PostRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create new room types for a property. A list of new room types can be passed as part of the request to Use this API to create multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>
     * Create a new room type
     */
    postRoomTypesRaw(requestParameters: PostRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create new room types for a property. A list of new room types can be passed as part of the request to Use this API to create multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>
     * Create a new room type
     */
    postRoomTypes(requestParameters: PostRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a new room for a specific property.<p><strong>OperationId:</strong>postRooms</p>
     * Post a new room
     */
    postRoomsRaw(requestParameters: PostRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a new room for a specific property.<p><strong>OperationId:</strong>postRooms</p>
     * Post a new room
     */
    postRooms(requestParameters: PostRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>
     * Create template floors
     */
    postTemplateFloorsRaw(requestParameters: PostTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>
     * Create template floors
     */
    postTemplateFloors(requestParameters: PostTemplateFloorsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template Housekeeping Tasks. <p><strong>OperationId:</strong>postTemplateHousekeepingTasks</p>
     * Create Template Housekeeping Tasks
     */
    postTemplateHousekeepingTasksRaw(requestParameters: PostTemplateHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template Housekeeping Tasks. <p><strong>OperationId:</strong>postTemplateHousekeepingTasks</p>
     * Create Template Housekeeping Tasks
     */
    postTemplateHousekeepingTasks(requestParameters: PostTemplateHousekeepingTasksOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create a template Out Of Order Service Reason Code. <p><strong>OperationId:</strong>postTemplateOutOfOrderServiceReasons</p>
     * Create a template Out Of Order Service Reason Code
     */
    postTemplateOutOfOrderServiceReasonsRaw(requestParameters: PostTemplateOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create a template Out Of Order Service Reason Code. <p><strong>OperationId:</strong>postTemplateOutOfOrderServiceReasons</p>
     * Create a template Out Of Order Service Reason Code
     */
    postTemplateOutOfOrderServiceReasons(requestParameters: PostTemplateOutOfOrderServiceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create template Room Features. <p><strong>OperationId:</strong>postTemplateRoomFeatures</p>
     * Create template Room Features
     */
    postTemplateRoomFeaturesRaw(requestParameters: PostTemplateRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create template Room Features. <p><strong>OperationId:</strong>postTemplateRoomFeatures</p>
     * Create template Room Features
     */
    postTemplateRoomFeatures(requestParameters: PostTemplateRoomFeaturesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to create Template Room Maintenance Reasons. <p><strong>OperationId:</strong>postTemplateRoomMaintenanceReasons</p>
     * Create Template Room Maintenance Reasons
     */
    postTemplateRoomMaintenanceReasonsRaw(requestParameters: PostTemplateRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to create Template Room Maintenance Reasons. <p><strong>OperationId:</strong>postTemplateRoomMaintenanceReasons</p>
     * Create Template Room Maintenance Reasons
     */
    postTemplateRoomMaintenanceReasons(requestParameters: PostTemplateRoomMaintenanceReasonsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update an existing properties Room Class. <p><strong>OperationId:</strong>putRoomClass</p>
     * Update a Room Class
     */
    putRoomClassRaw(requestParameters: PutRoomClassOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update an existing properties Room Class. <p><strong>OperationId:</strong>putRoomClass</p>
     * Update a Room Class
     */
    putRoomClass(requestParameters: PutRoomClassOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to update an existing room class template. <p><strong>OperationId:</strong>putRoomClassTemplate</p>
     * Change Room Class Template
     */
    putRoomClassTemplateRaw(requestParameters: PutRoomClassTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to update an existing room class template. <p><strong>OperationId:</strong>putRoomClassTemplate</p>
     * Change Room Class Template
     */
    putRoomClassTemplate(requestParameters: PutRoomClassTemplateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * This API is used to update a Room Type template. Use this API to updates can be made concurrently to multiple templates by passing Collection of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>
     * Change Room Type Templates
     */
    putRoomTypeTemplatesRaw(requestParameters: PutRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * This API is used to update a Room Type template. Use this API to updates can be made concurrently to multiple templates by passing Collection of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>
     * Change Room Type Templates
     */
    putRoomTypeTemplates(requestParameters: PutRoomTypeTemplatesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update a Room Type from a property. A list of room types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>
     * Update a Room Type
     */
    putRoomTypesRaw(requestParameters: PutRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update a Room Type from a property. A list of room types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>
     * Update a Room Type
     */
    putRoomTypes(requestParameters: PutRoomTypesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update an existing room. <p><strong>OperationId:</strong>putRooms</p>
     * Change an existing room
     */
    putRoomsRaw(requestParameters: PutRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update an existing room. <p><strong>OperationId:</strong>putRooms</p>
     * Change an existing room
     */
    putRooms(requestParameters: PutRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update a template Housekeeping Task. <p><strong>OperationId:</strong>putTemplateHousekeepingTask</p>
     * Change a template Housekeeping Task
     */
    putTemplateHousekeepingTaskRaw(requestParameters: PutTemplateHousekeepingTaskOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update a template Housekeeping Task. <p><strong>OperationId:</strong>putTemplateHousekeepingTask</p>
     * Change a template Housekeeping Task
     */
    putTemplateHousekeepingTask(requestParameters: PutTemplateHousekeepingTaskOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping building groups based on hotelIds, hotelId. Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group. <p><strong>OperationId:</strong>removeBuildingGroups</p>
     * Delete  Housekeeping Building Group
     */
    removeBuildingGroupsRaw(requestParameters: RemoveBuildingGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping building groups based on hotelIds, hotelId. Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group. <p><strong>OperationId:</strong>removeBuildingGroups</p>
     * Delete  Housekeeping Building Group
     */
    removeBuildingGroups(requestParameters: RemoveBuildingGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete buildings based on hotelIds, hotelId. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>removeBuildings</p>
     * Delete Buildings
     */
    removeBuildingsRaw(requestParameters: RemoveBuildingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete buildings based on hotelIds, hotelId. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>removeBuildings</p>
     * Delete Buildings
     */
    removeBuildings(requestParameters: RemoveBuildingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete floors based on floorsId, hotelId. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>removeFloors</p>
     * Delete floors
     */
    removeFloorsRaw(requestParameters: RemoveFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete floors based on floorsId, hotelId. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>removeFloors</p>
     * Delete floors
     */
    removeFloors(requestParameters: RemoveFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room maintenance reasons for a specific property based on reasonCode, hotelId. Room maintenance codes are the various reasons/categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>
     * Delete Hotel Room Maintenance Reasons
     */
    removeHotelRoomMaintenanceReasonsRaw(requestParameters: RemoveHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room maintenance reasons for a specific property based on reasonCode, hotelId. Room maintenance codes are the various reasons/categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>
     * Delete Hotel Room Maintenance Reasons
     */
    removeHotelRoomMaintenanceReasons(requestParameters: RemoveHotelRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping attendants for a specific property based on attendantId, hotelId, inactive. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>removeHousekeepingAttendants</p>
     * Delete housekeeping attendants configuration
     */
    removeHousekeepingAttendantsRaw(requestParameters: RemoveHousekeepingAttendantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping attendants for a specific property based on attendantId, hotelId, inactive. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>removeHousekeepingAttendants</p>
     * Delete housekeeping attendants configuration
     */
    removeHousekeepingAttendants(requestParameters: RemoveHousekeepingAttendantsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping credit rules for a specific property based on code, hotelId. Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. <p><strong>OperationId:</strong>removeHousekeepingCreditRules</p>
     * Delete Housekeeping Credit Rules
     */
    removeHousekeepingCreditRulesRaw(requestParameters: RemoveHousekeepingCreditRulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping credit rules for a specific property based on code, hotelId. Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. <p><strong>OperationId:</strong>removeHousekeepingCreditRules</p>
     * Delete Housekeeping Credit Rules
     */
    removeHousekeepingCreditRules(requestParameters: RemoveHousekeepingCreditRulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping room schedules for a specific property based on roomScheduleId, roomTypeCode, hotelId. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>
     * Delete housekeeping room schedules
     */
    removeHousekeepingRoomSchedulesRaw(requestParameters: RemoveHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping room schedules for a specific property based on roomScheduleId, roomTypeCode, hotelId. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>
     * Delete housekeeping room schedules
     */
    removeHousekeepingRoomSchedules(requestParameters: RemoveHousekeepingRoomSchedulesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping section groups for a specific property based on hotelId, housekeepingSectionGroupsCode. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>removeHousekeepingSectionGroups</p>
     * Delete Housekeeping Section Groups
     */
    removeHousekeepingSectionGroupsRaw(requestParameters: RemoveHousekeepingSectionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping section groups for a specific property based on hotelId, housekeepingSectionGroupsCode. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>removeHousekeepingSectionGroups</p>
     * Delete Housekeeping Section Groups
     */
    removeHousekeepingSectionGroups(requestParameters: RemoveHousekeepingSectionGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping sections for a specific property based on the code. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>removeHousekeepingSections</p>
     * Delete Housekeeping Sections
     */
    removeHousekeepingSectionsRaw(requestParameters: RemoveHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping sections for a specific property based on the code. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>removeHousekeepingSections</p>
     * Delete Housekeeping Sections
     */
    removeHousekeepingSections(requestParameters: RemoveHousekeepingSectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping supply codes for a specific property based on code, hotelId, housekeepingCodes, sequence. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>removeHousekeepingSupplyCodes</p>
     * Delete Housekeeping Codes
     */
    removeHousekeepingSupplyCodesRaw(requestParameters: RemoveHousekeepingSupplyCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping supply codes for a specific property based on code, hotelId, housekeepingCodes, sequence. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>removeHousekeepingSupplyCodes</p>
     * Delete Housekeeping Codes
     */
    removeHousekeepingSupplyCodes(requestParameters: RemoveHousekeepingSupplyCodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete housekeeping tasks for a specific property based on code, hotelId, forceRemove. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>removeHousekeepingTasks</p>
     * Delete Housekeeping Tasks
     */
    removeHousekeepingTasksRaw(requestParameters: RemoveHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete housekeeping tasks for a specific property based on code, hotelId, forceRemove. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>removeHousekeepingTasks</p>
     * Delete Housekeeping Tasks
     */
    removeHousekeepingTasks(requestParameters: RemoveHousekeepingTasksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete out of order service reasons for a specific property based on reasonCode, hotelId. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>removeOutOfOrderServiceReasons</p>
     * Delete Out Of Order Service Reasons
     */
    removeOutOfOrderServiceReasonsRaw(requestParameters: RemoveOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete out of order service reasons for a specific property based on reasonCode, hotelId. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>removeOutOfOrderServiceReasons</p>
     * Delete Out Of Order Service Reasons
     */
    removeOutOfOrderServiceReasons(requestParameters: RemoveOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room conditions for a specific property based on roomConditionCode, hotelId. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>removeResortRoomCondition</p>
     * Delete room condition configuration
     */
    removeResortRoomConditionRaw(requestParameters: RemoveResortRoomConditionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room conditions for a specific property based on roomConditionCode, hotelId. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>removeResortRoomCondition</p>
     * Delete room condition configuration
     */
    removeResortRoomCondition(requestParameters: RemoveResortRoomConditionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room condition templates based on templateCode, roomConditionTemplateCode. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>removeRoomConditionTemplate</p>
     * Delete room condition template
     */
    removeRoomConditionTemplateRaw(requestParameters: RemoveRoomConditionTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room condition templates based on templateCode, roomConditionTemplateCode. Room condition codes can be assigned to rooms, for example, to designate rooms that are available for show, rooms that are set aside for special housekeeping attention, or rooms that are to be treated differently for any other reason. <p><strong>OperationId:</strong>removeRoomConditionTemplate</p>
     * Delete room condition template
     */
    removeRoomConditionTemplate(requestParameters: RemoveRoomConditionTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room features for a specific property based on hotelId, genericHotelParentCodes, genericHotelParentCodesGroup. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>removeRoomFeatures</p>
     * Delete Hotel Room Features
     */
    removeRoomFeaturesRaw(requestParameters: RemoveRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room features for a specific property based on hotelId, genericHotelParentCodes, genericHotelParentCodesGroup. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>removeRoomFeatures</p>
     * Delete Hotel Room Features
     */
    removeRoomFeatures(requestParameters: RemoveRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room groups for a specific property based on rateGroupCode, hotelId, roomGroupsCode. <p><strong>OperationId:</strong>removeRoomGroups</p>
     * Delete Room Groups
     */
    removeRoomGroupsRaw(requestParameters: RemoveRoomGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room groups for a specific property based on rateGroupCode, hotelId, roomGroupsCode. <p><strong>OperationId:</strong>removeRoomGroups</p>
     * Delete Room Groups
     */
    removeRoomGroups(requestParameters: RemoveRoomGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room hierarchies based on roomHierarchyType. Room type and class hierarchies are available for selection in the upgrade rules configuration. <p><strong>OperationId:</strong>removeRoomHierarchies</p>
     * Delete Room Hierarchies
     */
    removeRoomHierarchiesRaw(requestParameters: RemoveRoomHierarchiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room hierarchies based on roomHierarchyType. Room type and class hierarchies are available for selection in the upgrade rules configuration. <p><strong>OperationId:</strong>removeRoomHierarchies</p>
     * Delete Room Hierarchies
     */
    removeRoomHierarchies(requestParameters: RemoveRoomHierarchiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete template floors based on templateFloorsId. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>removeTemplateFloors</p>
     * Delete template floors
     */
    removeTemplateFloorsRaw(requestParameters: RemoveTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete template floors based on templateFloorsId. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>removeTemplateFloors</p>
     * Delete template floors
     */
    removeTemplateFloors(requestParameters: RemoveTemplateFloorsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete out of order service reason templates based on reasonCode. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>removeTemplateOutOfOrderServiceReasons</p>
     * Delete a template Out Of Order Service Reason Code
     */
    removeTemplateOutOfOrderServiceReasonsRaw(requestParameters: RemoveTemplateOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete out of order service reason templates based on reasonCode. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>removeTemplateOutOfOrderServiceReasons</p>
     * Delete a template Out Of Order Service Reason Code
     */
    removeTemplateOutOfOrderServiceReasons(requestParameters: RemoveTemplateOutOfOrderServiceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room feature templates based on genericTemplateParentCodes, genericTemplateParentGroups. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>removeTemplateRoomFeatures</p>
     * Delete template Room Features
     */
    removeTemplateRoomFeaturesRaw(requestParameters: RemoveTemplateRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room feature templates based on genericTemplateParentCodes, genericTemplateParentGroups. A room feature is a characteristic or attribute of the room such as near or away from an elevator, rooms with accessibility facilities or rooms with a specific view. <p><strong>OperationId:</strong>removeTemplateRoomFeatures</p>
     * Delete template Room Features
     */
    removeTemplateRoomFeatures(requestParameters: RemoveTemplateRoomFeaturesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to delete room maintenance reason templates based on reasonCode. Room maintenance codes are the various categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>removeTemplateRoomMaintenanceReasons</p>
     * Delete Template Room Maintenance Reasons
     */
    removeTemplateRoomMaintenanceReasonsRaw(requestParameters: RemoveTemplateRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to delete room maintenance reason templates based on reasonCode. Room maintenance codes are the various categories of maintenance tasks created for rooms. <p><strong>OperationId:</strong>removeTemplateRoomMaintenanceReasons</p>
     * Delete Template Room Maintenance Reasons
     */
    removeTemplateRoomMaintenanceReasons(requestParameters: RemoveTemplateRoomMaintenanceReasonsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update hotel level floor mappings to buildings based on setBuildingFloorMappings. Floor mapping is used when generating housekeeping task sheets by floor if there is multiple buildings and the same floor exists in each of these buildings; ensuring the housekeeping room attendant doesn\'t have to travel between buildings or floors. <p><strong>OperationId:</strong>setBuildingFloorMappings</p>
     * Set Hotel level floor mappings to buildings
     */
    setBuildingFloorMappingsRaw(requestParameters: SetBuildingFloorMappingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update hotel level floor mappings to buildings based on setBuildingFloorMappings. Floor mapping is used when generating housekeeping task sheets by floor if there is multiple buildings and the same floor exists in each of these buildings; ensuring the housekeeping room attendant doesn\'t have to travel between buildings or floors. <p><strong>OperationId:</strong>setBuildingFloorMappings</p>
     * Set Hotel level floor mappings to buildings
     */
    setBuildingFloorMappings(requestParameters: SetBuildingFloorMappingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to update information related to housekeeping tasksheet rooms for a specific property based on hotelId, setHousekeepingTaskSheetRooms. Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>setHousekeepingTaskSheetRooms</p>
     *  set information related to housekeeping tasksheet rooms
     */
    setHousekeepingTaskSheetRoomsRaw(requestParameters: SetHousekeepingTaskSheetRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to update information related to housekeeping tasksheet rooms for a specific property based on hotelId, setHousekeepingTaskSheetRooms. Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>setHousekeepingTaskSheetRooms</p>
     *  set information related to housekeeping tasksheet rooms
     */
    setHousekeepingTaskSheetRooms(requestParameters: SetHousekeepingTaskSheetRoomsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
    /**
     * Use this API to validate room types room class is currently in use for a specific hotel based on search criteria such as hotelId, validateRoomClassInUse. <p><strong>OperationId:</strong>validateRoomClassInUse</p>
     * Validate room types room class is currently in use
     */
    validateRoomClassInUseRaw(requestParameters: ValidateRoomClassInUseOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>>;
    /**
     * Use this API to validate room types room class is currently in use for a specific hotel based on search criteria such as hotelId, validateRoomClassInUse. <p><strong>OperationId:</strong>validateRoomClassInUse</p>
     * Validate room types room class is currently in use
     */
    validateRoomClassInUse(requestParameters: ValidateRoomClassInUseOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status>;
}
/**
 * @export
 */
export declare const GetHousekeepingCreditRulesRuleTypeEnum: {
    readonly FacilityTask: "FacilityTask";
    readonly Miscellaneous: "Miscellaneous";
    readonly Special: "Special";
    readonly Travelling: "Travelling";
};
export type GetHousekeepingCreditRulesRuleTypeEnum = typeof GetHousekeepingCreditRulesRuleTypeEnum[keyof typeof GetHousekeepingCreditRulesRuleTypeEnum];
/**
 * @export
 */
export declare const GetRoomHierarchiesRoomHierarchyTypeEnum: {
    readonly Type: "Type";
    readonly Class: "Class";
};
export type GetRoomHierarchiesRoomHierarchyTypeEnum = typeof GetRoomHierarchiesRoomHierarchyTypeEnum[keyof typeof GetRoomHierarchiesRoomHierarchyTypeEnum];
/**
 * @export
 */
export declare const RemoveRoomHierarchiesRoomHierarchyTypeEnum: {
    readonly Type: "Type";
    readonly Class: "Class";
};
export type RemoveRoomHierarchiesRoomHierarchyTypeEnum = typeof RemoveRoomHierarchiesRoomHierarchyTypeEnum[keyof typeof RemoveRoomHierarchiesRoomHierarchyTypeEnum];
