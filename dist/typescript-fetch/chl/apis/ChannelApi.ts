/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ChannelRoomMappingsSummary,
  ExceptionDetailType,
} from '../models';
import {
    ChannelRoomMappingsSummaryFromJSON,
    ChannelRoomMappingsSummaryToJSON,
    ExceptionDetailTypeFromJSON,
    ExceptionDetailTypeToJSON,
} from '../models';

export interface GetChannelRoomMappingRequest {
    hotelId?: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    limit?: number;
    offset?: number;
    bookingChannelCodes?: Array<string>;
    roomTypes?: Array<string>;
    channelRoomTypes?: Array<string>;
    includeInactiveMappings?: boolean;
    includeUnmappedRoomTypes?: boolean;
    onlyUnmappedRoomTypes?: boolean;
    xExternalsystem?: string;
    acceptLanguage?: string;
}

/**
 * 
 */
export class ChannelApi extends runtime.BaseAPI {

    /**
     * Use this API to get channel room mapping to OPERA hotel\'s room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>getChannelRoomMapping</p>
     * Gets channel property room mapping
     */
    async getChannelRoomMappingRaw(requestParameters: GetChannelRoomMappingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ChannelRoomMappingsSummary>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        if (requestParameters.bookingChannelCodes) {
            queryParameters['bookingChannelCodes'] = requestParameters.bookingChannelCodes;
        }

        if (requestParameters.roomTypes) {
            queryParameters['roomTypes'] = requestParameters.roomTypes;
        }

        if (requestParameters.channelRoomTypes) {
            queryParameters['channelRoomTypes'] = requestParameters.channelRoomTypes;
        }

        if (requestParameters.includeInactiveMappings !== undefined) {
            queryParameters['includeInactiveMappings'] = requestParameters.includeInactiveMappings;
        }

        if (requestParameters.includeUnmappedRoomTypes !== undefined) {
            queryParameters['includeUnmappedRoomTypes'] = requestParameters.includeUnmappedRoomTypes;
        }

        if (requestParameters.onlyUnmappedRoomTypes !== undefined) {
            queryParameters['onlyUnmappedRoomTypes'] = requestParameters.onlyUnmappedRoomTypes;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.authorization !== undefined && requestParameters.authorization !== null) {
            headerParameters['authorization'] = String(requestParameters.authorization);
        }

        if (requestParameters.xAppKey !== undefined && requestParameters.xAppKey !== null) {
            headerParameters['x-app-key'] = String(requestParameters.xAppKey);
        }

        if (requestParameters.xHotelid !== undefined && requestParameters.xHotelid !== null) {
            headerParameters['x-hotelid'] = String(requestParameters.xHotelid);
        }

        if (requestParameters.xExternalsystem !== undefined && requestParameters.xExternalsystem !== null) {
            headerParameters['x-externalsystem'] = String(requestParameters.xExternalsystem);
        }

        if (requestParameters.acceptLanguage !== undefined && requestParameters.acceptLanguage !== null) {
            headerParameters['Accept-Language'] = String(requestParameters.acceptLanguage);
        }

        const response = await this.request({
            path: `/hotels/{hotelId}/rooms/mapping`.replace(`{${"hotelId"}}`, encodeURIComponent(String(requestParameters.hotelId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ChannelRoomMappingsSummaryFromJSON(jsonValue));
    }

    /**
     * Use this API to get channel room mapping to OPERA hotel\'s room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>getChannelRoomMapping</p>
     * Gets channel property room mapping
     */
    async getChannelRoomMapping(requestParameters: GetChannelRoomMappingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ChannelRoomMappingsSummary> {
        const response = await this.getChannelRoomMappingRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
