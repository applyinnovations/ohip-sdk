"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributionTemplateTypeToJSON = exports.DistributionTemplateTypeFromJSONTyped = exports.DistributionTemplateTypeFromJSON = exports.instanceOfDistributionTemplateType = void 0;
const runtime_1 = require("../runtime");
const DistributionTemplateChannelRateType_1 = require("./DistributionTemplateChannelRateType");
/**
 * Check if a given object implements the DistributionTemplateType interface.
 */
function instanceOfDistributionTemplateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfDistributionTemplateType = instanceOfDistributionTemplateType;
function DistributionTemplateTypeFromJSON(json) {
    return DistributionTemplateTypeFromJSONTyped(json, false);
}
exports.DistributionTemplateTypeFromJSON = DistributionTemplateTypeFromJSON;
function DistributionTemplateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'negotiatedRate': !(0, runtime_1.exists)(json, 'negotiatedRate') ? undefined : json['negotiatedRate'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'displaySequence': !(0, runtime_1.exists)(json, 'displaySequence') ? undefined : json['displaySequence'],
        'channelRates': !(0, runtime_1.exists)(json, 'channelRates') ? undefined : (json['channelRates'].map(DistributionTemplateChannelRateType_1.DistributionTemplateChannelRateTypeFromJSON)),
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
    };
}
exports.DistributionTemplateTypeFromJSONTyped = DistributionTemplateTypeFromJSONTyped;
function DistributionTemplateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'type': value.type,
        'negotiatedRate': value.negotiatedRate,
        'inactive': value.inactive,
        'displaySequence': value.displaySequence,
        'channelRates': value.channelRates === undefined ? undefined : (value.channelRates.map(DistributionTemplateChannelRateType_1.DistributionTemplateChannelRateTypeToJSON)),
        'code': value.code,
    };
}
exports.DistributionTemplateTypeToJSON = DistributionTemplateTypeToJSON;
