"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractRangeInformationTypeToJSON = exports.ContractRangeInformationTypeFromJSONTyped = exports.ContractRangeInformationTypeFromJSON = exports.instanceOfContractRangeInformationType = void 0;
const runtime_1 = require("../runtime");
const ContractTransactionType_1 = require("./ContractTransactionType");
const NumberRangeType_1 = require("./NumberRangeType");
/**
 * Check if a given object implements the ContractRangeInformationType interface.
 */
function instanceOfContractRangeInformationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfContractRangeInformationType = instanceOfContractRangeInformationType;
function ContractRangeInformationTypeFromJSON(json) {
    return ContractRangeInformationTypeFromJSONTyped(json, false);
}
exports.ContractRangeInformationTypeFromJSON = ContractRangeInformationTypeFromJSON;
function ContractRangeInformationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'contractRange': !(0, runtime_1.exists)(json, 'contractRange') ? undefined : (0, NumberRangeType_1.NumberRangeTypeFromJSON)(json['contractRange']),
        'contractTransaction': !(0, runtime_1.exists)(json, 'contractTransaction') ? undefined : (0, ContractTransactionType_1.ContractTransactionTypeFromJSON)(json['contractTransaction']),
        'months': !(0, runtime_1.exists)(json, 'months') ? undefined : json['months'],
        'range': !(0, runtime_1.exists)(json, 'range') ? undefined : json['range'],
    };
}
exports.ContractRangeInformationTypeFromJSONTyped = ContractRangeInformationTypeFromJSONTyped;
function ContractRangeInformationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'contractRange': (0, NumberRangeType_1.NumberRangeTypeToJSON)(value.contractRange),
        'contractTransaction': (0, ContractTransactionType_1.ContractTransactionTypeToJSON)(value.contractTransaction),
        'months': value.months,
        'range': value.range,
    };
}
exports.ContractRangeInformationTypeToJSON = ContractRangeInformationTypeToJSON;
