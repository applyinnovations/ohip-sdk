"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileChannelRateAccessCodeToJSON = exports.ProfileChannelRateAccessCodeFromJSONTyped = exports.ProfileChannelRateAccessCodeFromJSON = exports.instanceOfProfileChannelRateAccessCode = void 0;
const runtime_1 = require("../runtime");
const AccountTypeEnum_1 = require("./AccountTypeEnum");
/**
 * Check if a given object implements the ProfileChannelRateAccessCode interface.
 */
function instanceOfProfileChannelRateAccessCode(value) {
    let isInstance = true;
    isInstance = isInstance && "rateAccessCode" in value;
    isInstance = isInstance && "active" in value;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "accountName" in value;
    return isInstance;
}
exports.instanceOfProfileChannelRateAccessCode = instanceOfProfileChannelRateAccessCode;
function ProfileChannelRateAccessCodeFromJSON(json) {
    return ProfileChannelRateAccessCodeFromJSONTyped(json, false);
}
exports.ProfileChannelRateAccessCodeFromJSON = ProfileChannelRateAccessCodeFromJSON;
function ProfileChannelRateAccessCodeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'rateAccessCode': json['rateAccessCode'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'active': json['active'],
        'accountId': json['accountId'],
        'accountName': json['accountName'],
        'profileAccountType': !(0, runtime_1.exists)(json, 'profileAccountType') ? undefined : (0, AccountTypeEnum_1.AccountTypeEnumFromJSON)(json['profileAccountType']),
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : json['profileId'],
        'oldRateAccessCode': !(0, runtime_1.exists)(json, 'oldRateAccessCode') ? undefined : json['oldRateAccessCode'],
        'oldStartDate': !(0, runtime_1.exists)(json, 'oldStartDate') ? undefined : json['oldStartDate'],
        'oldEndDate': !(0, runtime_1.exists)(json, 'oldEndDate') ? undefined : json['oldEndDate'],
    };
}
exports.ProfileChannelRateAccessCodeFromJSONTyped = ProfileChannelRateAccessCodeFromJSONTyped;
function ProfileChannelRateAccessCodeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'rateAccessCode': value.rateAccessCode,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'active': value.active,
        'accountId': value.accountId,
        'accountName': value.accountName,
        'profileAccountType': (0, AccountTypeEnum_1.AccountTypeEnumToJSON)(value.profileAccountType),
        'profileId': value.profileId,
        'oldRateAccessCode': value.oldRateAccessCode,
        'oldStartDate': value.oldStartDate,
        'oldEndDate': value.oldEndDate,
    };
}
exports.ProfileChannelRateAccessCodeToJSON = ProfileChannelRateAccessCodeToJSON;
