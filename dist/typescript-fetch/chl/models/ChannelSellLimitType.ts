/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChannelSellLimitType
 */
export interface ChannelSellLimitType {
    /**
     * Channel for which this sell limit is applicable.
     * @type {string}
     * @memberof ChannelSellLimitType
     */
    bookingChannelCode?: string;
    /**
     * Date on which this sell limit is applicable.
     * @type {Date}
     * @memberof ChannelSellLimitType
     */
    date?: Date;
    /**
     * Number of rooms that can be sold for this particular sell limit date.
     * @type {number}
     * @memberof ChannelSellLimitType
     */
    numberOfRooms?: number;
}

/**
 * Check if a given object implements the ChannelSellLimitType interface.
 */
export function instanceOfChannelSellLimitType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelSellLimitTypeFromJSON(json: any): ChannelSellLimitType {
    return ChannelSellLimitTypeFromJSONTyped(json, false);
}

export function ChannelSellLimitTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelSellLimitType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'numberOfRooms': !exists(json, 'numberOfRooms') ? undefined : json['numberOfRooms'],
    };
}

export function ChannelSellLimitTypeToJSON(value?: ChannelSellLimitType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingChannelCode': value.bookingChannelCode,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
        'numberOfRooms': value.numberOfRooms,
    };
}

