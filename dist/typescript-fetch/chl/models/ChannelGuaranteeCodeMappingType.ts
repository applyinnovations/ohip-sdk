/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Channel-hotel guarantee code mapping information.
 * @export
 * @interface ChannelGuaranteeCodeMappingType
 */
export interface ChannelGuaranteeCodeMappingType {
    /**
     * Booking channel code of guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    bookingChannelCode?: string;
    /**
     * Channel guarantee code of guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    channelGuaranteeCode?: string;
    /**
     * Guarantee code of guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    guaranteeCode?: string;
    /**
     * Hotel code of guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    hotelId?: string;
    /**
     * Inactive date of guarantee code mapping.
     * @type {Date}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    inactiveDate?: Date;
    /**
     * New channel guarantee code for the existing guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    newChannelGuaranteeCode?: string;
    /**
     * Payment type of guarantee code mapping.
     * @type {string}
     * @memberof ChannelGuaranteeCodeMappingType
     */
    paymentType?: string;
}

/**
 * Check if a given object implements the ChannelGuaranteeCodeMappingType interface.
 */
export function instanceOfChannelGuaranteeCodeMappingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelGuaranteeCodeMappingTypeFromJSON(json: any): ChannelGuaranteeCodeMappingType {
    return ChannelGuaranteeCodeMappingTypeFromJSONTyped(json, false);
}

export function ChannelGuaranteeCodeMappingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelGuaranteeCodeMappingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'channelGuaranteeCode': !exists(json, 'channelGuaranteeCode') ? undefined : json['channelGuaranteeCode'],
        'guaranteeCode': !exists(json, 'guaranteeCode') ? undefined : json['guaranteeCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'inactiveDate': !exists(json, 'inactiveDate') ? undefined : (new Date(json['inactiveDate'])),
        'newChannelGuaranteeCode': !exists(json, 'newChannelGuaranteeCode') ? undefined : json['newChannelGuaranteeCode'],
        'paymentType': !exists(json, 'paymentType') ? undefined : json['paymentType'],
    };
}

export function ChannelGuaranteeCodeMappingTypeToJSON(value?: ChannelGuaranteeCodeMappingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingChannelCode': value.bookingChannelCode,
        'channelGuaranteeCode': value.channelGuaranteeCode,
        'guaranteeCode': value.guaranteeCode,
        'hotelId': value.hotelId,
        'inactiveDate': value.inactiveDate === undefined ? undefined : (value.inactiveDate.toISOString().substr(0,10)),
        'newChannelGuaranteeCode': value.newChannelGuaranteeCode,
        'paymentType': value.paymentType,
    };
}

