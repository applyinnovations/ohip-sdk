"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelRoomMappingDetailsTypeToJSON = exports.ChannelRoomMappingDetailsTypeFromJSONTyped = exports.ChannelRoomMappingDetailsTypeFromJSON = exports.instanceOfChannelRoomMappingDetailsType = void 0;
const runtime_1 = require("../runtime");
const BookingChannelInfoType_1 = require("./BookingChannelInfoType");
const ChannelMappingEnhancedDescriptionType_1 = require("./ChannelMappingEnhancedDescriptionType");
const ChannelRoomMappingDescriptionType_1 = require("./ChannelRoomMappingDescriptionType");
/**
 * Check if a given object implements the ChannelRoomMappingDetailsType interface.
 */
function instanceOfChannelRoomMappingDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelRoomMappingDetailsType = instanceOfChannelRoomMappingDetailsType;
function ChannelRoomMappingDetailsTypeFromJSON(json) {
    return ChannelRoomMappingDetailsTypeFromJSONTyped(json, false);
}
exports.ChannelRoomMappingDetailsTypeFromJSON = ChannelRoomMappingDetailsTypeFromJSON;
function ChannelRoomMappingDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
        'alternateChannelRoomType': !(0, runtime_1.exists)(json, 'alternateChannelRoomType') ? undefined : json['alternateChannelRoomType'],
        'baseAllocation': !(0, runtime_1.exists)(json, 'baseAllocation') ? undefined : json['baseAllocation'],
        'bedTypeCode': !(0, runtime_1.exists)(json, 'bedTypeCode') ? undefined : json['bedTypeCode'],
        'bookingChannelInfo': !(0, runtime_1.exists)(json, 'bookingChannelInfo') ? undefined : (0, BookingChannelInfoType_1.BookingChannelInfoTypeFromJSON)(json['bookingChannelInfo']),
        'channelRateCodes': !(0, runtime_1.exists)(json, 'channelRateCodes') ? undefined : json['channelRateCodes'],
        'channelRoomTypeOrder': !(0, runtime_1.exists)(json, 'channelRoomTypeOrder') ? undefined : json['channelRoomTypeOrder'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, ChannelRoomMappingDescriptionType_1.ChannelRoomMappingDescriptionTypeFromJSON)(json['description']),
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'globalDescription': !(0, runtime_1.exists)(json, 'globalDescription') ? undefined : (0, ChannelMappingEnhancedDescriptionType_1.ChannelMappingEnhancedDescriptionTypeFromJSON)(json['globalDescription']),
        'newBeginDate': !(0, runtime_1.exists)(json, 'newBeginDate') ? undefined : json['newBeginDate'],
        'newChannelRoomType': !(0, runtime_1.exists)(json, 'newChannelRoomType') ? undefined : json['newChannelRoomType'],
        'rateCodes': !(0, runtime_1.exists)(json, 'rateCodes') ? undefined : json['rateCodes'],
        'sellSequence': !(0, runtime_1.exists)(json, 'sellSequence') ? undefined : json['sellSequence'],
    };
}
exports.ChannelRoomMappingDetailsTypeFromJSONTyped = ChannelRoomMappingDetailsTypeFromJSONTyped;
function ChannelRoomMappingDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'active': value.active,
        'alternateChannelRoomType': value.alternateChannelRoomType,
        'baseAllocation': value.baseAllocation,
        'bedTypeCode': value.bedTypeCode,
        'bookingChannelInfo': (0, BookingChannelInfoType_1.BookingChannelInfoTypeToJSON)(value.bookingChannelInfo),
        'channelRateCodes': value.channelRateCodes,
        'channelRoomTypeOrder': value.channelRoomTypeOrder,
        'description': (0, ChannelRoomMappingDescriptionType_1.ChannelRoomMappingDescriptionTypeToJSON)(value.description),
        'endDate': value.endDate,
        'globalDescription': (0, ChannelMappingEnhancedDescriptionType_1.ChannelMappingEnhancedDescriptionTypeToJSON)(value.globalDescription),
        'newBeginDate': value.newBeginDate,
        'newChannelRoomType': value.newChannelRoomType,
        'rateCodes': value.rateCodes,
        'sellSequence': value.sellSequence,
    };
}
exports.ChannelRoomMappingDetailsTypeToJSON = ChannelRoomMappingDetailsTypeToJSON;
