"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TotalPricingElementTypeToJSON = exports.TotalPricingElementTypeFromJSONTyped = exports.TotalPricingElementTypeFromJSON = exports.instanceOfTotalPricingElementType = void 0;
const runtime_1 = require("../runtime");
const ChargeTypeType_1 = require("./ChargeTypeType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const TotalPricingElementIDType_1 = require("./TotalPricingElementIDType");
/**
 * Check if a given object implements the TotalPricingElementType interface.
 */
function instanceOfTotalPricingElementType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfTotalPricingElementType = instanceOfTotalPricingElementType;
function TotalPricingElementTypeFromJSON(json) {
    return TotalPricingElementTypeFromJSONTyped(json, false);
}
exports.TotalPricingElementTypeFromJSON = TotalPricingElementTypeFromJSON;
function TotalPricingElementTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'chargeType': !(0, runtime_1.exists)(json, 'chargeType') ? undefined : (0, ChargeTypeType_1.ChargeTypeTypeFromJSON)(json['chargeType']),
        'editPricingElementId': !(0, runtime_1.exists)(json, 'editPricingElementId') ? undefined : (0, TotalPricingElementIDType_1.TotalPricingElementIDTypeFromJSON)(json['editPricingElementId']),
        'elementCode': !(0, runtime_1.exists)(json, 'elementCode') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['elementCode']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'transaction': !(0, runtime_1.exists)(json, 'transaction') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['transaction']),
    };
}
exports.TotalPricingElementTypeFromJSONTyped = TotalPricingElementTypeFromJSONTyped;
function TotalPricingElementTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'chargeType': (0, ChargeTypeType_1.ChargeTypeTypeToJSON)(value.chargeType),
        'editPricingElementId': (0, TotalPricingElementIDType_1.TotalPricingElementIDTypeToJSON)(value.editPricingElementId),
        'elementCode': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.elementCode),
        'hotelId': value.hotelId,
        'transaction': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.transaction),
    };
}
exports.TotalPricingElementTypeToJSON = TotalPricingElementTypeToJSON;
