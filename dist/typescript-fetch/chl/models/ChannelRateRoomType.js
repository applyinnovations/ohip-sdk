"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelRateRoomTypeToJSON = exports.ChannelRateRoomTypeFromJSONTyped = exports.ChannelRateRoomTypeFromJSON = exports.instanceOfChannelRateRoomType = void 0;
const runtime_1 = require("../runtime");
const ChannelRateRoomDetailType_1 = require("./ChannelRateRoomDetailType");
/**
 * Check if a given object implements the ChannelRateRoomType interface.
 */
function instanceOfChannelRateRoomType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelRateRoomType = instanceOfChannelRateRoomType;
function ChannelRateRoomTypeFromJSON(json) {
    return ChannelRateRoomTypeFromJSONTyped(json, false);
}
exports.ChannelRateRoomTypeFromJSON = ChannelRateRoomTypeFromJSON;
function ChannelRateRoomTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'beginDate': !(0, runtime_1.exists)(json, 'beginDate') ? undefined : (new Date(json['beginDate'])),
        'bookingChannelCode': !(0, runtime_1.exists)(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'channelRatePlanCode': !(0, runtime_1.exists)(json, 'channelRatePlanCode') ? undefined : json['channelRatePlanCode'],
        'channelRateRoomDetail': !(0, runtime_1.exists)(json, 'channelRateRoomDetail') ? undefined : (0, ChannelRateRoomDetailType_1.ChannelRateRoomDetailTypeFromJSON)(json['channelRateRoomDetail']),
        'channelRoomType': !(0, runtime_1.exists)(json, 'channelRoomType') ? undefined : json['channelRoomType'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'inactive': !(0, runtime_1.exists)(json, 'inactive') ? undefined : json['inactive'],
        'ratePlanCode': !(0, runtime_1.exists)(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
    };
}
exports.ChannelRateRoomTypeFromJSONTyped = ChannelRateRoomTypeFromJSONTyped;
function ChannelRateRoomTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'beginDate': value.beginDate === undefined ? undefined : (value.beginDate.toISOString().substring(0, 10)),
        'bookingChannelCode': value.bookingChannelCode,
        'channelRatePlanCode': value.channelRatePlanCode,
        'channelRateRoomDetail': (0, ChannelRateRoomDetailType_1.ChannelRateRoomDetailTypeToJSON)(value.channelRateRoomDetail),
        'channelRoomType': value.channelRoomType,
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString().substring(0, 10)),
        'hotelId': value.hotelId,
        'inactive': value.inactive,
        'ratePlanCode': value.ratePlanCode,
        'roomType': value.roomType,
    };
}
exports.ChannelRateRoomTypeToJSON = ChannelRateRoomTypeToJSON;
