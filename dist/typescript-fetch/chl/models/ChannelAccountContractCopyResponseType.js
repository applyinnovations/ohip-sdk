"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelAccountContractCopyResponseTypeToJSON = exports.ChannelAccountContractCopyResponseTypeFromJSONTyped = exports.ChannelAccountContractCopyResponseTypeFromJSON = exports.instanceOfChannelAccountContractCopyResponseType = void 0;
const runtime_1 = require("../runtime");
const ChannelAccountContractCopyResponseTypeContractResponseInformationInner_1 = require("./ChannelAccountContractCopyResponseTypeContractResponseInformationInner");
const ErrorType_1 = require("./ErrorType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ChannelAccountContractCopyResponseType interface.
 */
function instanceOfChannelAccountContractCopyResponseType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelAccountContractCopyResponseType = instanceOfChannelAccountContractCopyResponseType;
function ChannelAccountContractCopyResponseTypeFromJSON(json) {
    return ChannelAccountContractCopyResponseTypeFromJSONTyped(json, false);
}
exports.ChannelAccountContractCopyResponseTypeFromJSON = ChannelAccountContractCopyResponseTypeFromJSON;
function ChannelAccountContractCopyResponseTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountCode': !(0, runtime_1.exists)(json, 'accountCode') ? undefined : json['accountCode'],
        'accountId': !(0, runtime_1.exists)(json, 'accountId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['accountId']),
        'contractResponseInformation': !(0, runtime_1.exists)(json, 'contractResponseInformation') ? undefined : (json['contractResponseInformation'].map(ChannelAccountContractCopyResponseTypeContractResponseInformationInner_1.ChannelAccountContractCopyResponseTypeContractResponseInformationInnerFromJSON)),
        'errorMessage': !(0, runtime_1.exists)(json, 'errorMessage') ? undefined : (0, ErrorType_1.ErrorTypeFromJSON)(json['errorMessage']),
    };
}
exports.ChannelAccountContractCopyResponseTypeFromJSONTyped = ChannelAccountContractCopyResponseTypeFromJSONTyped;
function ChannelAccountContractCopyResponseTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountCode': value.accountCode,
        'accountId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.accountId),
        'contractResponseInformation': value.contractResponseInformation === undefined ? undefined : (value.contractResponseInformation.map(ChannelAccountContractCopyResponseTypeContractResponseInformationInner_1.ChannelAccountContractCopyResponseTypeContractResponseInformationInnerToJSON)),
        'errorMessage': (0, ErrorType_1.ErrorTypeToJSON)(value.errorMessage),
    };
}
exports.ChannelAccountContractCopyResponseTypeToJSON = ChannelAccountContractCopyResponseTypeToJSON;
