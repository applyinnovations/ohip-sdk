"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelAccountDetailsTypeToJSON = exports.ChannelAccountDetailsTypeFromJSONTyped = exports.ChannelAccountDetailsTypeFromJSON = exports.instanceOfChannelAccountDetailsType = void 0;
const runtime_1 = require("../runtime");
const ChannelAccountTypeType_1 = require("./ChannelAccountTypeType");
/**
 * Check if a given object implements the ChannelAccountDetailsType interface.
 */
function instanceOfChannelAccountDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelAccountDetailsType = instanceOfChannelAccountDetailsType;
function ChannelAccountDetailsTypeFromJSON(json) {
    return ChannelAccountDetailsTypeFromJSONTyped(json, false);
}
exports.ChannelAccountDetailsTypeFromJSON = ChannelAccountDetailsTypeFromJSON;
function ChannelAccountDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountCode': !(0, runtime_1.exists)(json, 'accountCode') ? undefined : json['accountCode'],
        'templateAccountCode': !(0, runtime_1.exists)(json, 'templateAccountCode') ? undefined : json['templateAccountCode'],
        'accountType': !(0, runtime_1.exists)(json, 'accountType') ? undefined : (0, ChannelAccountTypeType_1.ChannelAccountTypeTypeFromJSON)(json['accountType']),
        'accountName': !(0, runtime_1.exists)(json, 'accountName') ? undefined : json['accountName'],
        'contactName': !(0, runtime_1.exists)(json, 'contactName') ? undefined : json['contactName'],
        'eCUNo': !(0, runtime_1.exists)(json, 'eCUNo') ? undefined : json['eCUNo'],
    };
}
exports.ChannelAccountDetailsTypeFromJSONTyped = ChannelAccountDetailsTypeFromJSONTyped;
function ChannelAccountDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountCode': value.accountCode,
        'templateAccountCode': value.templateAccountCode,
        'accountType': (0, ChannelAccountTypeType_1.ChannelAccountTypeTypeToJSON)(value.accountType),
        'accountName': value.accountName,
        'contactName': value.contactName,
        'eCUNo': value.eCUNo,
    };
}
exports.ChannelAccountDetailsTypeToJSON = ChannelAccountDetailsTypeToJSON;
