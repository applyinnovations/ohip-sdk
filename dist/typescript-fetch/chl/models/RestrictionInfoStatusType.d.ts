/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { RestrictionStatusesType } from './RestrictionStatusesType';
/**
 * The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.
 * @export
 * @interface RestrictionInfoStatusType
 */
export interface RestrictionInfoStatusType {
    /**
     * Booking channel code of actual restriction.
     * @type {string}
     * @memberof RestrictionInfoStatusType
     */
    bookingChannelCode?: string;
    /**
     *
     * @type {RestrictionStatusesType}
     * @memberof RestrictionInfoStatusType
     */
    code?: RestrictionStatusesType;
    /**
     * Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS1?: boolean;
    /**
     * Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS2?: boolean;
    /**
     * Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS3?: boolean;
    /**
     * Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS4?: boolean;
    /**
     * Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS5?: boolean;
    /**
     * Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS6?: boolean;
    /**
     * Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.
     * @type {boolean}
     * @memberof RestrictionInfoStatusType
     */
    lOS7?: boolean;
    /**
     * Rate Category of actual restriction.
     * @type {string}
     * @memberof RestrictionInfoStatusType
     */
    rateCategory?: string;
    /**
     * Rate Code of actual restriction.
     * @type {string}
     * @memberof RestrictionInfoStatusType
     */
    rateCode?: string;
    /**
     * Room Class of actual restriction.
     * @type {string}
     * @memberof RestrictionInfoStatusType
     */
    roomClass?: string;
    /**
     * Room Type of actual restriction.
     * @type {string}
     * @memberof RestrictionInfoStatusType
     */
    roomType?: string;
    /**
     * Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.
     * @type {number}
     * @memberof RestrictionInfoStatusType
     */
    unit?: number;
}
/**
 * Check if a given object implements the RestrictionInfoStatusType interface.
 */
export declare function instanceOfRestrictionInfoStatusType(value: object): boolean;
export declare function RestrictionInfoStatusTypeFromJSON(json: any): RestrictionInfoStatusType;
export declare function RestrictionInfoStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestrictionInfoStatusType;
export declare function RestrictionInfoStatusTypeToJSON(value?: RestrictionInfoStatusType | null): any;
