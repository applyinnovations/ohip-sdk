"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelRateMappingDescriptionTypeToJSON = exports.ChannelRateMappingDescriptionTypeFromJSONTyped = exports.ChannelRateMappingDescriptionTypeFromJSON = exports.instanceOfChannelRateMappingDescriptionType = void 0;
const runtime_1 = require("../runtime");
const ChannelRateMappingDescriptionDetailsType_1 = require("./ChannelRateMappingDescriptionDetailsType");
const ChannelRateMappingEnhancedDescriptionType_1 = require("./ChannelRateMappingEnhancedDescriptionType");
const TranslationTextType80_1 = require("./TranslationTextType80");
/**
 * Check if a given object implements the ChannelRateMappingDescriptionType interface.
 */
function instanceOfChannelRateMappingDescriptionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelRateMappingDescriptionType = instanceOfChannelRateMappingDescriptionType;
function ChannelRateMappingDescriptionTypeFromJSON(json) {
    return ChannelRateMappingDescriptionTypeFromJSONTyped(json, false);
}
exports.ChannelRateMappingDescriptionTypeFromJSON = ChannelRateMappingDescriptionTypeFromJSON;
function ChannelRateMappingDescriptionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'customDescription': !(0, runtime_1.exists)(json, 'customDescription') ? undefined : (0, ChannelRateMappingDescriptionDetailsType_1.ChannelRateMappingDescriptionDetailsTypeFromJSON)(json['customDescription']),
        'globalDescription': !(0, runtime_1.exists)(json, 'globalDescription') ? undefined : (0, ChannelRateMappingEnhancedDescriptionType_1.ChannelRateMappingEnhancedDescriptionTypeFromJSON)(json['globalDescription']),
        'rateCodeDescription': !(0, runtime_1.exists)(json, 'rateCodeDescription') ? undefined : (0, ChannelRateMappingDescriptionDetailsType_1.ChannelRateMappingDescriptionDetailsTypeFromJSON)(json['rateCodeDescription']),
        'shortDescription': !(0, runtime_1.exists)(json, 'shortDescription') ? undefined : (0, TranslationTextType80_1.TranslationTextType80FromJSON)(json['shortDescription']),
    };
}
exports.ChannelRateMappingDescriptionTypeFromJSONTyped = ChannelRateMappingDescriptionTypeFromJSONTyped;
function ChannelRateMappingDescriptionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'customDescription': (0, ChannelRateMappingDescriptionDetailsType_1.ChannelRateMappingDescriptionDetailsTypeToJSON)(value.customDescription),
        'globalDescription': (0, ChannelRateMappingEnhancedDescriptionType_1.ChannelRateMappingEnhancedDescriptionTypeToJSON)(value.globalDescription),
        'rateCodeDescription': (0, ChannelRateMappingDescriptionDetailsType_1.ChannelRateMappingDescriptionDetailsTypeToJSON)(value.rateCodeDescription),
        'shortDescription': (0, TranslationTextType80_1.TranslationTextType80ToJSON)(value.shortDescription),
    };
}
exports.ChannelRateMappingDescriptionTypeToJSON = ChannelRateMappingDescriptionTypeToJSON;
