"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HotelCodeMappingInfoTypeToJSON = exports.HotelCodeMappingInfoTypeFromJSONTyped = exports.HotelCodeMappingInfoTypeFromJSON = exports.instanceOfHotelCodeMappingInfoType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the HotelCodeMappingInfoType interface.
 */
function instanceOfHotelCodeMappingInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfHotelCodeMappingInfoType = instanceOfHotelCodeMappingInfoType;
function HotelCodeMappingInfoTypeFromJSON(json) {
    return HotelCodeMappingInfoTypeFromJSONTyped(json, false);
}
exports.HotelCodeMappingInfoTypeFromJSON = HotelCodeMappingInfoTypeFromJSON;
function HotelCodeMappingInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'channelHotelCode': !(0, runtime_1.exists)(json, 'channelHotelCode') ? undefined : json['channelHotelCode'],
    };
}
exports.HotelCodeMappingInfoTypeFromJSONTyped = HotelCodeMappingInfoTypeFromJSONTyped;
function HotelCodeMappingInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'channelHotelCode': value.channelHotelCode,
    };
}
exports.HotelCodeMappingInfoTypeToJSON = HotelCodeMappingInfoTypeToJSON;
