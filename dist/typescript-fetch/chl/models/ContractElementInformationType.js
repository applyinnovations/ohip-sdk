"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractElementInformationTypeToJSON = exports.ContractElementInformationTypeFromJSONTyped = exports.ContractElementInformationTypeFromJSON = exports.instanceOfContractElementInformationType = void 0;
const runtime_1 = require("../runtime");
const ContractFeeTypeType_1 = require("./ContractFeeTypeType");
const ContractPriceFrequencyType_1 = require("./ContractPriceFrequencyType");
const ContractPricingType_1 = require("./ContractPricingType");
const ContractRangeInformationType_1 = require("./ContractRangeInformationType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ContractElementInformationType interface.
 */
function instanceOfContractElementInformationType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfContractElementInformationType = instanceOfContractElementInformationType;
function ContractElementInformationTypeFromJSON(json) {
    return ContractElementInformationTypeFromJSONTyped(json, false);
}
exports.ContractElementInformationTypeFromJSON = ContractElementInformationTypeFromJSON;
function ContractElementInformationTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'contractId': !(0, runtime_1.exists)(json, 'contractId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['contractId']),
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
        'feeType': !(0, runtime_1.exists)(json, 'feeType') ? undefined : (0, ContractFeeTypeType_1.ContractFeeTypeTypeFromJSON)(json['feeType']),
        'bookingChannelType': !(0, runtime_1.exists)(json, 'bookingChannelType') ? undefined : json['bookingChannelType'],
        'bookingChannelCode': !(0, runtime_1.exists)(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'contractPricing': !(0, runtime_1.exists)(json, 'contractPricing') ? undefined : (0, ContractPricingType_1.ContractPricingTypeFromJSON)(json['contractPricing']),
        'contractRangeInformation': !(0, runtime_1.exists)(json, 'contractRangeInformation') ? undefined : (0, ContractRangeInformationType_1.ContractRangeInformationTypeFromJSON)(json['contractRangeInformation']),
        'frequency': !(0, runtime_1.exists)(json, 'frequency') ? undefined : (0, ContractPriceFrequencyType_1.ContractPriceFrequencyTypeFromJSON)(json['frequency']),
        'note': !(0, runtime_1.exists)(json, 'note') ? undefined : json['note'],
    };
}
exports.ContractElementInformationTypeFromJSONTyped = ContractElementInformationTypeFromJSONTyped;
function ContractElementInformationTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'contractId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.contractId),
        'sequence': value.sequence,
        'feeType': (0, ContractFeeTypeType_1.ContractFeeTypeTypeToJSON)(value.feeType),
        'bookingChannelType': value.bookingChannelType,
        'bookingChannelCode': value.bookingChannelCode,
        'contractPricing': (0, ContractPricingType_1.ContractPricingTypeToJSON)(value.contractPricing),
        'contractRangeInformation': (0, ContractRangeInformationType_1.ContractRangeInformationTypeToJSON)(value.contractRangeInformation),
        'frequency': (0, ContractPriceFrequencyType_1.ContractPriceFrequencyTypeToJSON)(value.frequency),
        'note': value.note,
    };
}
exports.ContractElementInformationTypeToJSON = ContractElementInformationTypeToJSON;
