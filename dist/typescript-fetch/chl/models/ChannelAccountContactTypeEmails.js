"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelAccountContactTypeEmailsToJSON = exports.ChannelAccountContactTypeEmailsFromJSONTyped = exports.ChannelAccountContactTypeEmailsFromJSON = exports.instanceOfChannelAccountContactTypeEmails = void 0;
const runtime_1 = require("../runtime");
const EmailInfoType_1 = require("./EmailInfoType");
/**
 * Check if a given object implements the ChannelAccountContactTypeEmails interface.
 */
function instanceOfChannelAccountContactTypeEmails(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelAccountContactTypeEmails = instanceOfChannelAccountContactTypeEmails;
function ChannelAccountContactTypeEmailsFromJSON(json) {
    return ChannelAccountContactTypeEmailsFromJSONTyped(json, false);
}
exports.ChannelAccountContactTypeEmailsFromJSON = ChannelAccountContactTypeEmailsFromJSON;
function ChannelAccountContactTypeEmailsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'emailInfo': !(0, runtime_1.exists)(json, 'emailInfo') ? undefined : (json['emailInfo'].map(EmailInfoType_1.EmailInfoTypeFromJSON)),
        'hasMore': !(0, runtime_1.exists)(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !(0, runtime_1.exists)(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !(0, runtime_1.exists)(json, 'count') ? undefined : json['count'],
    };
}
exports.ChannelAccountContactTypeEmailsFromJSONTyped = ChannelAccountContactTypeEmailsFromJSONTyped;
function ChannelAccountContactTypeEmailsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'emailInfo': value.emailInfo === undefined ? undefined : (value.emailInfo.map(EmailInfoType_1.EmailInfoTypeToJSON)),
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
    };
}
exports.ChannelAccountContactTypeEmailsToJSON = ChannelAccountContactTypeEmailsToJSON;
