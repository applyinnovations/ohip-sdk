"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublishRatePlanTypeToJSON = exports.PublishRatePlanTypeFromJSONTyped = exports.PublishRatePlanTypeFromJSON = exports.instanceOfPublishRatePlanType = void 0;
const runtime_1 = require("../runtime");
const PublishRatePlanTypeChannelCodes_1 = require("./PublishRatePlanTypeChannelCodes");
const PublishRatePlanTypeHotelCodes_1 = require("./PublishRatePlanTypeHotelCodes");
/**
 * Check if a given object implements the PublishRatePlanType interface.
 */
function instanceOfPublishRatePlanType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPublishRatePlanType = instanceOfPublishRatePlanType;
function PublishRatePlanTypeFromJSON(json) {
    return PublishRatePlanTypeFromJSONTyped(json, false);
}
exports.PublishRatePlanTypeFromJSON = PublishRatePlanTypeFromJSON;
function PublishRatePlanTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'beginDate': !(0, runtime_1.exists)(json, 'beginDate') ? undefined : (new Date(json['beginDate'])),
        'channel': !(0, runtime_1.exists)(json, 'channel') ? undefined : json['channel'],
        'channelCodes': !(0, runtime_1.exists)(json, 'channelCodes') ? undefined : (0, PublishRatePlanTypeChannelCodes_1.PublishRatePlanTypeChannelCodesFromJSON)(json['channelCodes']),
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : (new Date(json['endDate'])),
        'hotelCodes': !(0, runtime_1.exists)(json, 'hotelCodes') ? undefined : (0, PublishRatePlanTypeHotelCodes_1.PublishRatePlanTypeHotelCodesFromJSON)(json['hotelCodes']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.PublishRatePlanTypeFromJSONTyped = PublishRatePlanTypeFromJSONTyped;
function PublishRatePlanTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'beginDate': value.beginDate === undefined ? undefined : (value.beginDate.toISOString().substr(0, 10)),
        'channel': value.channel,
        'channelCodes': (0, PublishRatePlanTypeChannelCodes_1.PublishRatePlanTypeChannelCodesToJSON)(value.channelCodes),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString().substr(0, 10)),
        'hotelCodes': (0, PublishRatePlanTypeHotelCodes_1.PublishRatePlanTypeHotelCodesToJSON)(value.hotelCodes),
        'hotelId': value.hotelId,
    };
}
exports.PublishRatePlanTypeToJSON = PublishRatePlanTypeToJSON;
