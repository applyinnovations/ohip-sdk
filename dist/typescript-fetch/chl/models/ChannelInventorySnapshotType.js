"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelInventorySnapshotTypeToJSON = exports.ChannelInventorySnapshotTypeFromJSONTyped = exports.ChannelInventorySnapshotTypeFromJSON = exports.instanceOfChannelInventorySnapshotType = void 0;
const runtime_1 = require("../runtime");
const ChannelInventorySnapshotInventoriesType_1 = require("./ChannelInventorySnapshotInventoriesType");
const ChannelInventorySnapshotMasterInfoType_1 = require("./ChannelInventorySnapshotMasterInfoType");
/**
 * Check if a given object implements the ChannelInventorySnapshotType interface.
 */
function instanceOfChannelInventorySnapshotType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelInventorySnapshotType = instanceOfChannelInventorySnapshotType;
function ChannelInventorySnapshotTypeFromJSON(json) {
    return ChannelInventorySnapshotTypeFromJSONTyped(json, false);
}
exports.ChannelInventorySnapshotTypeFromJSON = ChannelInventorySnapshotTypeFromJSON;
function ChannelInventorySnapshotTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'inventories': !(0, runtime_1.exists)(json, 'inventories') ? undefined : (0, ChannelInventorySnapshotInventoriesType_1.ChannelInventorySnapshotInventoriesTypeFromJSON)(json['inventories']),
        'masterInfo': !(0, runtime_1.exists)(json, 'masterInfo') ? undefined : (0, ChannelInventorySnapshotMasterInfoType_1.ChannelInventorySnapshotMasterInfoTypeFromJSON)(json['masterInfo']),
    };
}
exports.ChannelInventorySnapshotTypeFromJSONTyped = ChannelInventorySnapshotTypeFromJSONTyped;
function ChannelInventorySnapshotTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'inventories': (0, ChannelInventorySnapshotInventoriesType_1.ChannelInventorySnapshotInventoriesTypeToJSON)(value.inventories),
        'masterInfo': (0, ChannelInventorySnapshotMasterInfoType_1.ChannelInventorySnapshotMasterInfoTypeToJSON)(value.masterInfo),
    };
}
exports.ChannelInventorySnapshotTypeToJSON = ChannelInventorySnapshotTypeToJSON;
