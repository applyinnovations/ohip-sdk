"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractPricingTypeToJSON = exports.ContractPricingTypeFromJSONTyped = exports.ContractPricingTypeFromJSON = exports.instanceOfContractPricingType = void 0;
const runtime_1 = require("../runtime");
const ContractPriceType_1 = require("./ContractPriceType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the ContractPricingType interface.
 */
function instanceOfContractPricingType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfContractPricingType = instanceOfContractPricingType;
function ContractPricingTypeFromJSON(json) {
    return ContractPricingTypeFromJSONTyped(json, false);
}
exports.ContractPricingTypeFromJSON = ContractPricingTypeFromJSON;
function ContractPricingTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'price': !(0, runtime_1.exists)(json, 'price') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['price']),
        'pricePer': !(0, runtime_1.exists)(json, 'pricePer') ? undefined : (0, ContractPriceType_1.ContractPriceTypeFromJSON)(json['pricePer']),
    };
}
exports.ContractPricingTypeFromJSONTyped = ContractPricingTypeFromJSONTyped;
function ContractPricingTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'price': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.price),
        'pricePer': (0, ContractPriceType_1.ContractPriceTypeToJSON)(value.pricePer),
    };
}
exports.ContractPricingTypeToJSON = ContractPricingTypeToJSON;
