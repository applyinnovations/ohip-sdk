"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatementDetailsStatisticTypeToJSON = exports.StatementDetailsStatisticTypeFromJSONTyped = exports.StatementDetailsStatisticTypeFromJSON = exports.instanceOfStatementDetailsStatisticType = void 0;
const runtime_1 = require("../runtime");
const ContractFeeTypeType_1 = require("./ContractFeeTypeType");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
/**
 * Check if a given object implements the StatementDetailsStatisticType interface.
 */
function instanceOfStatementDetailsStatisticType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStatementDetailsStatisticType = instanceOfStatementDetailsStatisticType;
function StatementDetailsStatisticTypeFromJSON(json) {
    return StatementDetailsStatisticTypeFromJSONTyped(json, false);
}
exports.StatementDetailsStatisticTypeFromJSON = StatementDetailsStatisticTypeFromJSON;
function StatementDetailsStatisticTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bookingChannelCode': !(0, runtime_1.exists)(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'bookingChannelType': !(0, runtime_1.exists)(json, 'bookingChannelType') ? undefined : json['bookingChannelType'],
        'contractAmount': !(0, runtime_1.exists)(json, 'contractAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['contractAmount']),
        'detailsCount': !(0, runtime_1.exists)(json, 'detailsCount') ? undefined : json['detailsCount'],
        'feeType': !(0, runtime_1.exists)(json, 'feeType') ? undefined : (0, ContractFeeTypeType_1.ContractFeeTypeTypeFromJSON)(json['feeType']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'invoiceAmount': !(0, runtime_1.exists)(json, 'invoiceAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['invoiceAmount']),
    };
}
exports.StatementDetailsStatisticTypeFromJSONTyped = StatementDetailsStatisticTypeFromJSONTyped;
function StatementDetailsStatisticTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bookingChannelCode': value.bookingChannelCode,
        'bookingChannelType': value.bookingChannelType,
        'contractAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.contractAmount),
        'detailsCount': value.detailsCount,
        'feeType': (0, ContractFeeTypeType_1.ContractFeeTypeTypeToJSON)(value.feeType),
        'hotelId': value.hotelId,
        'invoiceAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.invoiceAmount),
    };
}
exports.StatementDetailsStatisticTypeToJSON = StatementDetailsStatisticTypeToJSON;
