"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelRateMappingDescriptionDetailsTypeToJSON = exports.ChannelRateMappingDescriptionDetailsTypeFromJSONTyped = exports.ChannelRateMappingDescriptionDetailsTypeFromJSON = exports.instanceOfChannelRateMappingDescriptionDetailsType = void 0;
const runtime_1 = require("../runtime");
const ChannelRateMappingEnhancedDescriptionType_1 = require("./ChannelRateMappingEnhancedDescriptionType");
const TranslationTextType2000_1 = require("./TranslationTextType2000");
/**
 * Check if a given object implements the ChannelRateMappingDescriptionDetailsType interface.
 */
function instanceOfChannelRateMappingDescriptionDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelRateMappingDescriptionDetailsType = instanceOfChannelRateMappingDescriptionDetailsType;
function ChannelRateMappingDescriptionDetailsTypeFromJSON(json) {
    return ChannelRateMappingDescriptionDetailsTypeFromJSONTyped(json, false);
}
exports.ChannelRateMappingDescriptionDetailsTypeFromJSON = ChannelRateMappingDescriptionDetailsTypeFromJSON;
function ChannelRateMappingDescriptionDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['description']),
        'enhancedDescription': !(0, runtime_1.exists)(json, 'enhancedDescription') ? undefined : (0, ChannelRateMappingEnhancedDescriptionType_1.ChannelRateMappingEnhancedDescriptionTypeFromJSON)(json['enhancedDescription']),
        'hTMLSupportedDescription': !(0, runtime_1.exists)(json, 'hTMLSupportedDescription') ? undefined : (0, TranslationTextType2000_1.TranslationTextType2000FromJSON)(json['hTMLSupportedDescription']),
    };
}
exports.ChannelRateMappingDescriptionDetailsTypeFromJSONTyped = ChannelRateMappingDescriptionDetailsTypeFromJSONTyped;
function ChannelRateMappingDescriptionDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.description),
        'enhancedDescription': (0, ChannelRateMappingEnhancedDescriptionType_1.ChannelRateMappingEnhancedDescriptionTypeToJSON)(value.enhancedDescription),
        'hTMLSupportedDescription': (0, TranslationTextType2000_1.TranslationTextType2000ToJSON)(value.hTMLSupportedDescription),
    };
}
exports.ChannelRateMappingDescriptionDetailsTypeToJSON = ChannelRateMappingDescriptionDetailsTypeToJSON;
