"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProfileChannelRatePlanToJSON = exports.ProfileChannelRatePlanFromJSONTyped = exports.ProfileChannelRatePlanFromJSON = exports.instanceOfProfileChannelRatePlan = void 0;
const runtime_1 = require("../runtime");
const ProfileChannelRateAccessCode_1 = require("./ProfileChannelRateAccessCode");
/**
 * Check if a given object implements the ProfileChannelRatePlan interface.
 */
function instanceOfProfileChannelRatePlan(value) {
    let isInstance = true;
    isInstance = isInstance && "ratePlanCode" in value;
    isInstance = isInstance && "channelRatePlanCode" in value;
    isInstance = isInstance && "channelRateAccessCodes" in value;
    return isInstance;
}
exports.instanceOfProfileChannelRatePlan = instanceOfProfileChannelRatePlan;
function ProfileChannelRatePlanFromJSON(json) {
    return ProfileChannelRatePlanFromJSONTyped(json, false);
}
exports.ProfileChannelRatePlanFromJSON = ProfileChannelRatePlanFromJSON;
function ProfileChannelRatePlanFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'ratePlanCode': json['ratePlanCode'],
        'channelRatePlanCode': json['channelRatePlanCode'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'active': !(0, runtime_1.exists)(json, 'active') ? undefined : json['active'],
        'channelRatePlanOrder': !(0, runtime_1.exists)(json, 'channelRatePlanOrder') ? undefined : json['channelRatePlanOrder'],
        'channelRateAccessCodes': (json['channelRateAccessCodes'].map(ProfileChannelRateAccessCode_1.ProfileChannelRateAccessCodeFromJSON)),
    };
}
exports.ProfileChannelRatePlanFromJSONTyped = ProfileChannelRatePlanFromJSONTyped;
function ProfileChannelRatePlanToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ratePlanCode': value.ratePlanCode,
        'channelRatePlanCode': value.channelRatePlanCode,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'active': value.active,
        'channelRatePlanOrder': value.channelRatePlanOrder,
        'channelRateAccessCodes': (value.channelRateAccessCodes.map(ProfileChannelRateAccessCode_1.ProfileChannelRateAccessCodeToJSON)),
    };
}
exports.ProfileChannelRatePlanToJSON = ProfileChannelRatePlanToJSON;
