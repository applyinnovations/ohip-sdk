"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvailableRoomTypeToJSON = exports.AvailableRoomTypeFromJSONTyped = exports.AvailableRoomTypeFromJSON = exports.instanceOfAvailableRoomType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the AvailableRoomType interface.
 */
function instanceOfAvailableRoomType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAvailableRoomType = instanceOfAvailableRoomType;
function AvailableRoomTypeFromJSON(json) {
    return AvailableRoomTypeFromJSONTyped(json, false);
}
exports.AvailableRoomTypeFromJSON = AvailableRoomTypeFromJSON;
function AvailableRoomTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'channelRoomType': !(0, runtime_1.exists)(json, 'channelRoomType') ? undefined : json['channelRoomType'],
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'rateChangedYN': !(0, runtime_1.exists)(json, 'rateChangedYN') ? undefined : json['rateChangedYN'],
        'roomType': !(0, runtime_1.exists)(json, 'roomType') ? undefined : json['roomType'],
    };
}
exports.AvailableRoomTypeFromJSONTyped = AvailableRoomTypeFromJSONTyped;
function AvailableRoomTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': value.amount,
        'channelRoomType': value.channelRoomType,
        'currencyCode': value.currencyCode,
        'description': value.description,
        'rateChangedYN': value.rateChangedYN,
        'roomType': value.roomType,
    };
}
exports.AvailableRoomTypeToJSON = AvailableRoomTypeToJSON;
