"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelRoomMappingDescriptionDetailsTypeToJSON = exports.ChannelRoomMappingDescriptionDetailsTypeFromJSONTyped = exports.ChannelRoomMappingDescriptionDetailsTypeFromJSON = exports.instanceOfChannelRoomMappingDescriptionDetailsType = void 0;
const runtime_1 = require("../runtime");
const ChannelMappingEnhancedDescriptionType_1 = require("./ChannelMappingEnhancedDescriptionType");
const ChannelRoomMappingHTMLSupportedDescriptionType_1 = require("./ChannelRoomMappingHTMLSupportedDescriptionType");
/**
 * Check if a given object implements the ChannelRoomMappingDescriptionDetailsType interface.
 */
function instanceOfChannelRoomMappingDescriptionDetailsType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelRoomMappingDescriptionDetailsType = instanceOfChannelRoomMappingDescriptionDetailsType;
function ChannelRoomMappingDescriptionDetailsTypeFromJSON(json) {
    return ChannelRoomMappingDescriptionDetailsTypeFromJSONTyped(json, false);
}
exports.ChannelRoomMappingDescriptionDetailsTypeFromJSON = ChannelRoomMappingDescriptionDetailsTypeFromJSON;
function ChannelRoomMappingDescriptionDetailsTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : json['description'],
        'enhancedDescription': !(0, runtime_1.exists)(json, 'enhancedDescription') ? undefined : (0, ChannelMappingEnhancedDescriptionType_1.ChannelMappingEnhancedDescriptionTypeFromJSON)(json['enhancedDescription']),
        'hTMLSupportedDescription': !(0, runtime_1.exists)(json, 'hTMLSupportedDescription') ? undefined : (0, ChannelRoomMappingHTMLSupportedDescriptionType_1.ChannelRoomMappingHTMLSupportedDescriptionTypeFromJSON)(json['hTMLSupportedDescription']),
    };
}
exports.ChannelRoomMappingDescriptionDetailsTypeFromJSONTyped = ChannelRoomMappingDescriptionDetailsTypeFromJSONTyped;
function ChannelRoomMappingDescriptionDetailsTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'description': value.description,
        'enhancedDescription': (0, ChannelMappingEnhancedDescriptionType_1.ChannelMappingEnhancedDescriptionTypeToJSON)(value.enhancedDescription),
        'hTMLSupportedDescription': (0, ChannelRoomMappingHTMLSupportedDescriptionType_1.ChannelRoomMappingHTMLSupportedDescriptionTypeToJSON)(value.hTMLSupportedDescription),
    };
}
exports.ChannelRoomMappingDescriptionDetailsTypeToJSON = ChannelRoomMappingDescriptionDetailsTypeToJSON;
