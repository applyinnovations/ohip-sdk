"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelSellLimitScheduleTypeToJSON = exports.ChannelSellLimitScheduleTypeFromJSONTyped = exports.ChannelSellLimitScheduleTypeFromJSON = exports.instanceOfChannelSellLimitScheduleType = void 0;
const runtime_1 = require("../runtime");
const TimeSpanDaysOfWeekType_1 = require("./TimeSpanDaysOfWeekType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ChannelSellLimitScheduleType interface.
 */
function instanceOfChannelSellLimitScheduleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfChannelSellLimitScheduleType = instanceOfChannelSellLimitScheduleType;
function ChannelSellLimitScheduleTypeFromJSON(json) {
    return ChannelSellLimitScheduleTypeFromJSONTyped(json, false);
}
exports.ChannelSellLimitScheduleTypeFromJSON = ChannelSellLimitScheduleTypeFromJSON;
function ChannelSellLimitScheduleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'bookingChannelCode': !(0, runtime_1.exists)(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'channelRoomType': !(0, runtime_1.exists)(json, 'channelRoomType') ? undefined : json['channelRoomType'],
        'dateRange': !(0, runtime_1.exists)(json, 'dateRange') ? undefined : (0, TimeSpanDaysOfWeekType_1.TimeSpanDaysOfWeekTypeFromJSON)(json['dateRange']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'numberOfRooms': !(0, runtime_1.exists)(json, 'numberOfRooms') ? undefined : json['numberOfRooms'],
        'sellLimitId': !(0, runtime_1.exists)(json, 'sellLimitId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['sellLimitId']),
    };
}
exports.ChannelSellLimitScheduleTypeFromJSONTyped = ChannelSellLimitScheduleTypeFromJSONTyped;
function ChannelSellLimitScheduleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'bookingChannelCode': value.bookingChannelCode,
        'channelRoomType': value.channelRoomType,
        'dateRange': (0, TimeSpanDaysOfWeekType_1.TimeSpanDaysOfWeekTypeToJSON)(value.dateRange),
        'hotelId': value.hotelId,
        'numberOfRooms': value.numberOfRooms,
        'sellLimitId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.sellLimitId),
    };
}
exports.ChannelSellLimitScheduleTypeToJSON = ChannelSellLimitScheduleTypeToJSON;
