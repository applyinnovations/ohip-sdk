/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SystemInfoType } from './SystemInfoType';
import {
    SystemInfoTypeFromJSON,
    SystemInfoTypeFromJSONTyped,
    SystemInfoTypeToJSON,
} from './SystemInfoType';

/**
 * Information about channel rates of a distribution template.
 * @export
 * @interface DistributionTemplateChannelRateType
 */
export interface DistributionTemplateChannelRateType {
    /**
     * Channel Rate Category where distribution template will be distributed to.
     * @type {string}
     * @memberof DistributionTemplateChannelRateType
     */
    channelRateCategory?: string;
    /**
     * Channel Rate Code where distribution template will be distributed to.
     * @type {string}
     * @memberof DistributionTemplateChannelRateType
     */
    channelRateCode?: string;
    /**
     * Channel Rate Level where distribution template will be distributed to.
     * @type {string}
     * @memberof DistributionTemplateChannelRateType
     */
    channelRateLevel?: string;
    /**
     * Rate update flag which will be the default value when rate code is distributed to channels.
     * @type {boolean}
     * @memberof DistributionTemplateChannelRateType
     */
    rateUpdate?: boolean;
    /**
     * Regional Availability flag which will be the default value when rate code is distributed to channels.
     * @type {boolean}
     * @memberof DistributionTemplateChannelRateType
     */
    regionalAvailability?: boolean;
    /**
     * Restriction update flag which will be the default value when rate code is distributed to channels.
     * @type {boolean}
     * @memberof DistributionTemplateChannelRateType
     */
    restrictionUpdate?: boolean;
    /**
     * Return SGA flag which will be the default value when rate code is distributed to channels.
     * @type {boolean}
     * @memberof DistributionTemplateChannelRateType
     */
    returnSGA?: boolean;
    /**
     * 
     * @type {SystemInfoType}
     * @memberof DistributionTemplateChannelRateType
     */
    systemInfo?: SystemInfoType;
}

/**
 * Check if a given object implements the DistributionTemplateChannelRateType interface.
 */
export function instanceOfDistributionTemplateChannelRateType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DistributionTemplateChannelRateTypeFromJSON(json: any): DistributionTemplateChannelRateType {
    return DistributionTemplateChannelRateTypeFromJSONTyped(json, false);
}

export function DistributionTemplateChannelRateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DistributionTemplateChannelRateType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelRateCategory': !exists(json, 'channelRateCategory') ? undefined : json['channelRateCategory'],
        'channelRateCode': !exists(json, 'channelRateCode') ? undefined : json['channelRateCode'],
        'channelRateLevel': !exists(json, 'channelRateLevel') ? undefined : json['channelRateLevel'],
        'rateUpdate': !exists(json, 'rateUpdate') ? undefined : json['rateUpdate'],
        'regionalAvailability': !exists(json, 'regionalAvailability') ? undefined : json['regionalAvailability'],
        'restrictionUpdate': !exists(json, 'restrictionUpdate') ? undefined : json['restrictionUpdate'],
        'returnSGA': !exists(json, 'returnSGA') ? undefined : json['returnSGA'],
        'systemInfo': !exists(json, 'systemInfo') ? undefined : SystemInfoTypeFromJSON(json['systemInfo']),
    };
}

export function DistributionTemplateChannelRateTypeToJSON(value?: DistributionTemplateChannelRateType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelRateCategory': value.channelRateCategory,
        'channelRateCode': value.channelRateCode,
        'channelRateLevel': value.channelRateLevel,
        'rateUpdate': value.rateUpdate,
        'regionalAvailability': value.regionalAvailability,
        'restrictionUpdate': value.restrictionUpdate,
        'returnSGA': value.returnSGA,
        'systemInfo': SystemInfoTypeToJSON(value.systemInfo),
    };
}

