/**
 * OPERA Cloud Price Availability Rate Async API
 * APIs to cater for Price and Rate Availability Asynchronous functionality in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BlockId } from './BlockId';
import type { RestrictionStatusType } from './RestrictionStatusType';
import type { RoomTypeYieldableType } from './RoomTypeYieldableType';
/**
 *
 * @export
 * @interface CreateRestrictionType
 */
export interface CreateRestrictionType {
    /**
     *
     * @type {RestrictionStatusType}
     * @memberof CreateRestrictionType
     */
    restrictionStatus?: RestrictionStatusType;
    /**
     * The rate code for which the restriction will be applied.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    ratePlanCodes?: Array<string>;
    /**
     * The rate class for which the restriction will be applied.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    rateClasses?: Array<string>;
    /**
     * The room class for which the restriction will be applied.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    roomClasses?: Array<string>;
    /**
     * Booking channel.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    bookingChannels?: Array<string>;
    /**
     * The room type for which the restriction will be applied.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    roomTypes?: Array<string>;
    /**
     * The rate category for which the restriction will be applied.
     * @type {Array<string>}
     * @memberof CreateRestrictionType
     */
    ratePlanCategories?: Array<string>;
    /**
     * The season code during which the restrictions are valid.
     * @type {string}
     * @memberof CreateRestrictionType
     */
    seasonCode?: string;
    /**
     *
     * @type {BlockId}
     * @memberof CreateRestrictionType
     */
    blockId?: BlockId;
    /**
     * Booking channel on request.
     * @type {string}
     * @memberof CreateRestrictionType
     */
    bookingChannelOnRequest?: string;
    /**
     * The starting value of the date range.
     * @type {string}
     * @memberof CreateRestrictionType
     */
    dateRangeStart?: string;
    /**
     * The ending value of the date range.
     * @type {string}
     * @memberof CreateRestrictionType
     */
    dateRangeEnd?: string;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    sunday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    monday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    tuesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    wednesday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    thursday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    friday?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateRestrictionType
     */
    saturday?: boolean;
    /**
     *
     * @type {RoomTypeYieldableType}
     * @memberof CreateRestrictionType
     */
    yieldStatus?: RoomTypeYieldableType;
}
/**
 * Check if a given object implements the CreateRestrictionType interface.
 */
export declare function instanceOfCreateRestrictionType(value: object): boolean;
export declare function CreateRestrictionTypeFromJSON(json: any): CreateRestrictionType;
export declare function CreateRestrictionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRestrictionType;
export declare function CreateRestrictionTypeToJSON(value?: CreateRestrictionType | null): any;
