/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtorsâ€™ accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARBalanceType } from './ARBalanceType';
import {
    ARBalanceTypeFromJSON,
    ARBalanceTypeFromJSONTyped,
    ARBalanceTypeToJSON,
} from './ARBalanceType';
import type { ARInvoiceType } from './ARInvoiceType';
import {
    ARInvoiceTypeFromJSON,
    ARInvoiceTypeFromJSONTyped,
    ARInvoiceTypeToJSON,
} from './ARInvoiceType';
import type { ARPaymentType } from './ARPaymentType';
import {
    ARPaymentTypeFromJSON,
    ARPaymentTypeFromJSONTyped,
    ARPaymentTypeToJSON,
} from './ARPaymentType';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * AR Account Invoices Information.
 * @export
 * @interface ARAccountInvoicesPaymentsType
 */
export interface ARAccountInvoicesPaymentsType {
    /**
     * Property where the Account exists.
     * @type {string}
     * @memberof ARAccountInvoicesPaymentsType
     */
    hotelId?: string;
    /**
     * 
     * @type {ProfileId}
     * @memberof ARAccountInvoicesPaymentsType
     */
    profileId?: ProfileId;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARAccountInvoicesPaymentsType
     */
    accountId?: UniqueIDType;
    /**
     * Name of the AR Account.
     * @type {string}
     * @memberof ARAccountInvoicesPaymentsType
     */
    accountName?: string;
    /**
     * The Account Number for the Account.
     * @type {string}
     * @memberof ARAccountInvoicesPaymentsType
     */
    accountNo?: string;
    /**
     * Number of days on which person can make payment.
     * @type {string}
     * @memberof ARAccountInvoicesPaymentsType
     */
    paymentDueDays?: string;
    /**
     * Month End Calculation.
     * @type {boolean}
     * @memberof ARAccountInvoicesPaymentsType
     */
    monthEndCalcYN?: boolean;
    /**
     * 
     * @type {ARBalanceType}
     * @memberof ARAccountInvoicesPaymentsType
     */
    summary?: ARBalanceType;
    /**
     * A collection of AR Invoices.
     * @type {Array<ARInvoiceType>}
     * @memberof ARAccountInvoicesPaymentsType
     */
    invoices?: Array<ARInvoiceType>;
    /**
     * A collection of AR Payments.
     * @type {Array<ARPaymentType>}
     * @memberof ARAccountInvoicesPaymentsType
     */
    payments?: Array<ARPaymentType>;
}

/**
 * Check if a given object implements the ARAccountInvoicesPaymentsType interface.
 */
export function instanceOfARAccountInvoicesPaymentsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARAccountInvoicesPaymentsTypeFromJSON(json: any): ARAccountInvoicesPaymentsType {
    return ARAccountInvoicesPaymentsTypeFromJSONTyped(json, false);
}

export function ARAccountInvoicesPaymentsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAccountInvoicesPaymentsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'accountId': !exists(json, 'accountId') ? undefined : UniqueIDTypeFromJSON(json['accountId']),
        'accountName': !exists(json, 'accountName') ? undefined : json['accountName'],
        'accountNo': !exists(json, 'accountNo') ? undefined : json['accountNo'],
        'paymentDueDays': !exists(json, 'paymentDueDays') ? undefined : json['paymentDueDays'],
        'monthEndCalcYN': !exists(json, 'monthEndCalcYN') ? undefined : json['monthEndCalcYN'],
        'summary': !exists(json, 'summary') ? undefined : ARBalanceTypeFromJSON(json['summary']),
        'invoices': !exists(json, 'invoices') ? undefined : ((json['invoices'] as Array<any>).map(ARInvoiceTypeFromJSON)),
        'payments': !exists(json, 'payments') ? undefined : ((json['payments'] as Array<any>).map(ARPaymentTypeFromJSON)),
    };
}

export function ARAccountInvoicesPaymentsTypeToJSON(value?: ARAccountInvoicesPaymentsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'profileId': ProfileIdToJSON(value.profileId),
        'accountId': UniqueIDTypeToJSON(value.accountId),
        'accountName': value.accountName,
        'accountNo': value.accountNo,
        'paymentDueDays': value.paymentDueDays,
        'monthEndCalcYN': value.monthEndCalcYN,
        'summary': ARBalanceTypeToJSON(value.summary),
        'invoices': value.invoices === undefined ? undefined : ((value.invoices as Array<any>).map(ARInvoiceTypeToJSON)),
        'payments': value.payments === undefined ? undefined : ((value.payments as Array<any>).map(ARPaymentTypeToJSON)),
    };
}

