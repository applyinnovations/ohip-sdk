"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SourceOfSaleTypeToJSON = exports.SourceOfSaleTypeFromJSONTyped = exports.SourceOfSaleTypeFromJSON = exports.instanceOfSourceOfSaleType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SourceOfSaleType interface.
 */
function instanceOfSourceOfSaleType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSourceOfSaleType = instanceOfSourceOfSaleType;
function SourceOfSaleTypeFromJSON(json) {
    return SourceOfSaleTypeFromJSONTyped(json, false);
}
exports.SourceOfSaleTypeFromJSON = SourceOfSaleTypeFromJSON;
function SourceOfSaleTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'sourceType': !(0, runtime_1.exists)(json, 'sourceType') ? undefined : json['sourceType'],
        'sourceCode': !(0, runtime_1.exists)(json, 'sourceCode') ? undefined : json['sourceCode'],
    };
}
exports.SourceOfSaleTypeFromJSONTyped = SourceOfSaleTypeFromJSONTyped;
function SourceOfSaleTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'sourceType': value.sourceType,
        'sourceCode': value.sourceCode,
    };
}
exports.SourceOfSaleTypeToJSON = SourceOfSaleTypeToJSON;
