"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ARAccountCommentCriteriaTypeToJSON = exports.ARAccountCommentCriteriaTypeFromJSONTyped = exports.ARAccountCommentCriteriaTypeFromJSON = exports.instanceOfARAccountCommentCriteriaType = void 0;
const runtime_1 = require("../runtime");
const CommentType_1 = require("./CommentType");
const ProfileId_1 = require("./ProfileId");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ARAccountCommentCriteriaType interface.
 */
function instanceOfARAccountCommentCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfARAccountCommentCriteriaType = instanceOfARAccountCommentCriteriaType;
function ARAccountCommentCriteriaTypeFromJSON(json) {
    return ARAccountCommentCriteriaTypeFromJSONTyped(json, false);
}
exports.ARAccountCommentCriteriaTypeFromJSON = ARAccountCommentCriteriaTypeFromJSON;
function ARAccountCommentCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': !(0, runtime_1.exists)(json, 'accountId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['accountId']),
        'accountNo': !(0, runtime_1.exists)(json, 'accountNo') ? undefined : json['accountNo'],
        'comment': !(0, runtime_1.exists)(json, 'comment') ? undefined : (0, CommentType_1.CommentTypeFromJSON)(json['comment']),
        'createDateTime': !(0, runtime_1.exists)(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !(0, runtime_1.exists)(json, 'creatorId') ? undefined : json['creatorId'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'lastModifierId': !(0, runtime_1.exists)(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lastModifyDateTime': !(0, runtime_1.exists)(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, ProfileId_1.ProfileIdFromJSON)(json['profileId']),
        'purgeDate': !(0, runtime_1.exists)(json, 'purgeDate') ? undefined : (new Date(json['purgeDate'])),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.ARAccountCommentCriteriaTypeFromJSONTyped = ARAccountCommentCriteriaTypeFromJSONTyped;
function ARAccountCommentCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.accountId),
        'accountNo': value.accountNo,
        'comment': (0, CommentType_1.CommentTypeToJSON)(value.comment),
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'hotelId': value.hotelId,
        'id': value.id,
        'lastModifierId': value.lastModifierId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'profileId': (0, ProfileId_1.ProfileIdToJSON)(value.profileId),
        'purgeDate': value.purgeDate === undefined ? undefined : (value.purgeDate.toISOString().substring(0, 10)),
        'type': value.type,
    };
}
exports.ARAccountCommentCriteriaTypeToJSON = ARAccountCommentCriteriaTypeToJSON;
