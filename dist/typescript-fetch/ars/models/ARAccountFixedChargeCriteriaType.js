"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ARAccountFixedChargeCriteriaTypeToJSON = exports.ARAccountFixedChargeCriteriaTypeFromJSONTyped = exports.ARAccountFixedChargeCriteriaTypeFromJSON = exports.instanceOfARAccountFixedChargeCriteriaType = void 0;
const runtime_1 = require("../runtime");
const FixedChargeDetailType_1 = require("./FixedChargeDetailType");
const FixedChargeScheduleType_1 = require("./FixedChargeScheduleType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the ARAccountFixedChargeCriteriaType interface.
 */
function instanceOfARAccountFixedChargeCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfARAccountFixedChargeCriteriaType = instanceOfARAccountFixedChargeCriteriaType;
function ARAccountFixedChargeCriteriaTypeFromJSON(json) {
    return ARAccountFixedChargeCriteriaTypeFromJSONTyped(json, false);
}
exports.ARAccountFixedChargeCriteriaTypeFromJSON = ARAccountFixedChargeCriteriaTypeFromJSON;
function ARAccountFixedChargeCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': !(0, runtime_1.exists)(json, 'accountId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['accountId']),
        'charge': !(0, runtime_1.exists)(json, 'charge') ? undefined : (0, FixedChargeDetailType_1.FixedChargeDetailTypeFromJSON)(json['charge']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'idContext': !(0, runtime_1.exists)(json, 'idContext') ? undefined : json['idContext'],
        'idExtension': !(0, runtime_1.exists)(json, 'idExtension') ? undefined : json['idExtension'],
        'instance': !(0, runtime_1.exists)(json, 'instance') ? undefined : json['instance'],
        'schedule': !(0, runtime_1.exists)(json, 'schedule') ? undefined : (0, FixedChargeScheduleType_1.FixedChargeScheduleTypeFromJSON)(json['schedule']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
    };
}
exports.ARAccountFixedChargeCriteriaTypeFromJSONTyped = ARAccountFixedChargeCriteriaTypeFromJSONTyped;
function ARAccountFixedChargeCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.accountId),
        'charge': (0, FixedChargeDetailType_1.FixedChargeDetailTypeToJSON)(value.charge),
        'hotelId': value.hotelId,
        'id': value.id,
        'idContext': value.idContext,
        'idExtension': value.idExtension,
        'instance': value.instance,
        'schedule': (0, FixedChargeScheduleType_1.FixedChargeScheduleTypeToJSON)(value.schedule),
        'type': value.type,
        'url': value.url,
    };
}
exports.ARAccountFixedChargeCriteriaTypeToJSON = ARAccountFixedChargeCriteriaTypeToJSON;
