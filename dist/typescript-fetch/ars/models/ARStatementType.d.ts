/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ARInvoiceType } from './ARInvoiceType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { StatementType } from './StatementType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Details about an AR Statement.
 * @export
 * @interface ARStatementType
 */
export interface ARStatementType {
    /**
     * Property where the Account belongs.
     * @type {string}
     * @memberof ARStatementType
     */
    hotelId?: string;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ARStatementType
     */
    balance?: CurrencyAmountType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ARStatementType
     */
    accountId?: UniqueIDType;
    /**
     * A collection of AR Invoices.
     * @type {Array<ARInvoiceType>}
     * @memberof ARStatementType
     */
    invoices?: Array<ARInvoiceType>;
    /**
     * Statement Number for the Statement, when the functionality for Numbering is ON.
     * @type {number}
     * @memberof ARStatementType
     */
    statementNo?: number;
    /**
     * Internal Report Sequence Number for the which is used to mark statement invoices
     * @type {number}
     * @memberof ARStatementType
     */
    reportSeqNo?: number;
    /**
     * Flag to indicate if Folios are to be printed along with the Statement.
     * @type {boolean}
     * @memberof ARStatementType
     */
    inclFolios?: boolean;
    /**
     * The Statement Report name which should be used for printing.
     * @type {string}
     * @memberof ARStatementType
     */
    statementName?: string;
    /**
     *
     * @type {StatementType}
     * @memberof ARStatementType
     */
    type?: StatementType;
    /**
     * The Statement Report name which should be used for printing.
     * @type {string}
     * @memberof ARStatementType
     */
    reportFileName?: string;
}
/**
 * Check if a given object implements the ARStatementType interface.
 */
export declare function instanceOfARStatementType(value: object): boolean;
export declare function ARStatementTypeFromJSON(json: any): ARStatementType;
export declare function ARStatementTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARStatementType;
export declare function ARStatementTypeToJSON(value?: ARStatementType | null): any;
