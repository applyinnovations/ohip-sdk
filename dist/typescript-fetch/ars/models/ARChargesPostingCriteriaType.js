"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ARChargesPostingCriteriaTypeToJSON = exports.ARChargesPostingCriteriaTypeFromJSONTyped = exports.ARChargesPostingCriteriaTypeFromJSON = exports.instanceOfARChargesPostingCriteriaType = void 0;
const runtime_1 = require("../runtime");
const ARAccountCriteriaType_1 = require("./ARAccountCriteriaType");
const ARInvoiceType_1 = require("./ARInvoiceType");
const ChargeCriteriaType_1 = require("./ChargeCriteriaType");
/**
 * Check if a given object implements the ARChargesPostingCriteriaType interface.
 */
function instanceOfARChargesPostingCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfARChargesPostingCriteriaType = instanceOfARChargesPostingCriteriaType;
function ARChargesPostingCriteriaTypeFromJSON(json) {
    return ARChargesPostingCriteriaTypeFromJSONTyped(json, false);
}
exports.ARChargesPostingCriteriaTypeFromJSON = ARChargesPostingCriteriaTypeFromJSON;
function ARChargesPostingCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'charges': !(0, runtime_1.exists)(json, 'charges') ? undefined : (json['charges'].map(ChargeCriteriaType_1.ChargeCriteriaTypeFromJSON)),
        'account': !(0, runtime_1.exists)(json, 'account') ? undefined : (0, ARAccountCriteriaType_1.ARAccountCriteriaTypeFromJSON)(json['account']),
        'invoice': !(0, runtime_1.exists)(json, 'invoice') ? undefined : (0, ARInvoiceType_1.ARInvoiceTypeFromJSON)(json['invoice']),
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'overrideCreditHoldCheck': !(0, runtime_1.exists)(json, 'overrideCreditHoldCheck') ? undefined : json['overrideCreditHoldCheck'],
    };
}
exports.ARChargesPostingCriteriaTypeFromJSONTyped = ARChargesPostingCriteriaTypeFromJSONTyped;
function ARChargesPostingCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'charges': value.charges === undefined ? undefined : (value.charges.map(ChargeCriteriaType_1.ChargeCriteriaTypeToJSON)),
        'account': (0, ARAccountCriteriaType_1.ARAccountCriteriaTypeToJSON)(value.account),
        'invoice': (0, ARInvoiceType_1.ARInvoiceTypeToJSON)(value.invoice),
        'cashierId': value.cashierId,
        'overrideCreditHoldCheck': value.overrideCreditHoldCheck,
    };
}
exports.ARChargesPostingCriteriaTypeToJSON = ARChargesPostingCriteriaTypeToJSON;
