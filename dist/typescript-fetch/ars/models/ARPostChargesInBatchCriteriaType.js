"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ARPostChargesInBatchCriteriaTypeToJSON = exports.ARPostChargesInBatchCriteriaTypeFromJSONTyped = exports.ARPostChargesInBatchCriteriaTypeFromJSON = exports.instanceOfARPostChargesInBatchCriteriaType = void 0;
const runtime_1 = require("../runtime");
const ChargeCriteriaType_1 = require("./ChargeCriteriaType");
const UniqueIDListType_1 = require("./UniqueIDListType");
/**
 * Check if a given object implements the ARPostChargesInBatchCriteriaType interface.
 */
function instanceOfARPostChargesInBatchCriteriaType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfARPostChargesInBatchCriteriaType = instanceOfARPostChargesInBatchCriteriaType;
function ARPostChargesInBatchCriteriaTypeFromJSON(json) {
    return ARPostChargesInBatchCriteriaTypeFromJSONTyped(json, false);
}
exports.ARPostChargesInBatchCriteriaTypeFromJSON = ARPostChargesInBatchCriteriaTypeFromJSON;
function ARPostChargesInBatchCriteriaTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountIdList': !(0, runtime_1.exists)(json, 'accountIdList') ? undefined : (0, UniqueIDListType_1.UniqueIDListTypeFromJSON)(json['accountIdList']),
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
        'chargeInfo': !(0, runtime_1.exists)(json, 'chargeInfo') ? undefined : (0, ChargeCriteriaType_1.ChargeCriteriaTypeFromJSON)(json['chargeInfo']),
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
    };
}
exports.ARPostChargesInBatchCriteriaTypeFromJSONTyped = ARPostChargesInBatchCriteriaTypeFromJSONTyped;
function ARPostChargesInBatchCriteriaTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountIdList': (0, UniqueIDListType_1.UniqueIDListTypeToJSON)(value.accountIdList),
        'cashierId': value.cashierId,
        'chargeInfo': (0, ChargeCriteriaType_1.ChargeCriteriaTypeToJSON)(value.chargeInfo),
        'hotelId': value.hotelId,
    };
}
exports.ARPostChargesInBatchCriteriaTypeToJSON = ARPostChargesInBatchCriteriaTypeToJSON;
