/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtorsâ€™ accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAgingType } from './ARAgingType';
import {
    ARAgingTypeFromJSON,
    ARAgingTypeFromJSONTyped,
    ARAgingTypeToJSON,
} from './ARAgingType';
import type { ARBalanceType } from './ARBalanceType';
import {
    ARBalanceTypeFromJSON,
    ARBalanceTypeFromJSONTyped,
    ARBalanceTypeToJSON,
} from './ARBalanceType';

/**
 * Information regarding the aging balances for an account.
 * @export
 * @interface ARAgingInfoType
 */
export interface ARAgingInfoType {
    /**
     * 
     * @type {ARBalanceType}
     * @memberof ARAgingInfoType
     */
    totalOutstanding?: ARBalanceType;
    /**
     * The debit and credit balance per Aging bucket.
     * @type {Array<ARAgingType>}
     * @memberof ARAgingInfoType
     */
    aging?: Array<ARAgingType>;
}

/**
 * Check if a given object implements the ARAgingInfoType interface.
 */
export function instanceOfARAgingInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARAgingInfoTypeFromJSON(json: any): ARAgingInfoType {
    return ARAgingInfoTypeFromJSONTyped(json, false);
}

export function ARAgingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAgingInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalOutstanding': !exists(json, 'totalOutstanding') ? undefined : ARBalanceTypeFromJSON(json['totalOutstanding']),
        'aging': !exists(json, 'aging') ? undefined : ((json['aging'] as Array<any>).map(ARAgingTypeFromJSON)),
    };
}

export function ARAgingInfoTypeToJSON(value?: ARAgingInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalOutstanding': ARBalanceTypeToJSON(value.totalOutstanding),
        'aging': value.aging === undefined ? undefined : ((value.aging as Array<any>).map(ARAgingTypeToJSON)),
    };
}

