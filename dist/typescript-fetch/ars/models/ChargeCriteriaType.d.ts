/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CurrencyAmountType } from './CurrencyAmountType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Criteria information for posting a charge.
 * @export
 * @interface ChargeCriteriaType
 */
export interface ChargeCriteriaType {
    /**
     * Transaction Code to post.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    transactionCode?: string;
    /**
     * Article ID.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    articleCode?: string;
    /**
     *
     * @type {CurrencyAmountType}
     * @memberof ChargeCriteriaType
     */
    price?: CurrencyAmountType;
    /**
     * Quantity to post to the folio.
     * @type {number}
     * @memberof ChargeCriteriaType
     */
    postingQuantity?: number;
    /**
     * User-defined posting reference.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    postingReference?: string;
    /**
     * User-defined posting remark.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    postingRemark?: string;
    /**
     * Indicates the Cheque number.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    checkNumber?: string;
    /**
     * Corrected arrangement code from the package associated to this transaction.
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    arrangementCode?: string;
    /**
     * Apply room routing when making this posting.
     * @type {boolean}
     * @memberof ChargeCriteriaType
     */
    applyRoutingInstructions?: boolean;
    /**
     * Use the applicable package allowance when making this posting.
     * @type {boolean}
     * @memberof ChargeCriteriaType
     */
    usePackageAllowance?: boolean;
    /**
     * True indicates the Transaction Code is allowed to be posted automatically.
     * @type {boolean}
     * @memberof ChargeCriteriaType
     */
    autoPosting?: boolean;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof ChargeCriteriaType
     */
    financialTransactionIdList?: Array<UniqueIDType>;
    /**
     *
     * @type {number}
     * @memberof ChargeCriteriaType
     */
    folioWindowNo?: number;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof ChargeCriteriaType
     */
    cashierId?: number;
    /**
     * POS covers.Api will only accept numeric values for Covers and if decimal values are passed will be ignored and rounded
     * @type {string}
     * @memberof ChargeCriteriaType
     */
    covers?: string;
}
/**
 * Check if a given object implements the ChargeCriteriaType interface.
 */
export declare function instanceOfChargeCriteriaType(value: object): boolean;
export declare function ChargeCriteriaTypeFromJSON(json: any): ChargeCriteriaType;
export declare function ChargeCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeCriteriaType;
export declare function ChargeCriteriaTypeToJSON(value?: ChargeCriteriaType | null): any;
