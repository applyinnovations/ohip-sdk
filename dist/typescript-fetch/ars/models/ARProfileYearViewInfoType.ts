/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARProfileYearViewInfoTypeHotelInner } from './ARProfileYearViewInfoTypeHotelInner';
import {
    ARProfileYearViewInfoTypeHotelInnerFromJSON,
    ARProfileYearViewInfoTypeHotelInnerFromJSONTyped,
    ARProfileYearViewInfoTypeHotelInnerToJSON,
} from './ARProfileYearViewInfoTypeHotelInner';
import type { ARYearViewInfoType } from './ARYearViewInfoType';
import {
    ARYearViewInfoTypeFromJSON,
    ARYearViewInfoTypeFromJSONTyped,
    ARYearViewInfoTypeToJSON,
} from './ARYearViewInfoType';

/**
 * Year View information for a profile. Includes information for the profile for all accounts across properties.
 * @export
 * @interface ARProfileYearViewInfoType
 */
export interface ARProfileYearViewInfoType {
    /**
     * Year View information for the Property, based on the criteria selected.
     * @type {Array<ARProfileYearViewInfoTypeHotelInner>}
     * @memberof ARProfileYearViewInfoType
     */
    hotel?: Array<ARProfileYearViewInfoTypeHotelInner>;
    /**
     * 
     * @type {ARYearViewInfoType}
     * @memberof ARProfileYearViewInfoType
     */
    totalProfileYearView?: ARYearViewInfoType;
}

/**
 * Check if a given object implements the ARProfileYearViewInfoType interface.
 */
export function instanceOfARProfileYearViewInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARProfileYearViewInfoTypeFromJSON(json: any): ARProfileYearViewInfoType {
    return ARProfileYearViewInfoTypeFromJSONTyped(json, false);
}

export function ARProfileYearViewInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARProfileYearViewInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotel': !exists(json, 'hotel') ? undefined : ((json['hotel'] as Array<any>).map(ARProfileYearViewInfoTypeHotelInnerFromJSON)),
        'totalProfileYearView': !exists(json, 'totalProfileYearView') ? undefined : ARYearViewInfoTypeFromJSON(json['totalProfileYearView']),
    };
}

export function ARProfileYearViewInfoTypeToJSON(value?: ARProfileYearViewInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotel': value.hotel === undefined ? undefined : ((value.hotel as Array<any>).map(ARProfileYearViewInfoTypeHotelInnerToJSON)),
        'totalProfileYearView': ARYearViewInfoTypeToJSON(value.totalProfileYearView),
    };
}

