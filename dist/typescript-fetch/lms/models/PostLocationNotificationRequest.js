"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Leisure Management API
 * APIs to cater for external Leisure Management functionality integrated with OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostLocationNotificationRequestToJSON = exports.PostLocationNotificationRequestFromJSONTyped = exports.PostLocationNotificationRequestFromJSON = exports.instanceOfPostLocationNotificationRequest = void 0;
const runtime_1 = require("../runtime");
const DateTimeSpanType_1 = require("./DateTimeSpanType");
const FormattedTextTextType_1 = require("./FormattedTextTextType");
const Links_1 = require("./Links");
const LocationNotificationStatus_1 = require("./LocationNotificationStatus");
const UniqueIDType_1 = require("./UniqueIDType");
const WarningsType_1 = require("./WarningsType");
/**
 * Check if a given object implements the PostLocationNotificationRequest interface.
 */
function instanceOfPostLocationNotificationRequest(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPostLocationNotificationRequest = instanceOfPostLocationNotificationRequest;
function PostLocationNotificationRequestFromJSON(json) {
    return PostLocationNotificationRequestFromJSONTyped(json, false);
}
exports.PostLocationNotificationRequestFromJSON = PostLocationNotificationRequestFromJSON;
function PostLocationNotificationRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityTime': !(0, runtime_1.exists)(json, 'activityTime') ? undefined : (0, DateTimeSpanType_1.DateTimeSpanTypeFromJSON)(json['activityTime']),
        'description': !(0, runtime_1.exists)(json, 'description') ? undefined : (0, FormattedTextTextType_1.FormattedTextTextTypeFromJSON)(json['description']),
        'links': !(0, runtime_1.exists)(json, 'links') ? undefined : (0, Links_1.LinksFromJSON)(json['links']),
        'locationNotificationStatus': !(0, runtime_1.exists)(json, 'locationNotificationStatus') ? undefined : (0, LocationNotificationStatus_1.LocationNotificationStatusFromJSON)(json['locationNotificationStatus']),
        'locationText': !(0, runtime_1.exists)(json, 'locationText') ? undefined : (0, FormattedTextTextType_1.FormattedTextTextTypeFromJSON)(json['locationText']),
        'otherLocationNotificationStatus': !(0, runtime_1.exists)(json, 'otherLocationNotificationStatus') ? undefined : json['otherLocationNotificationStatus'],
        'profileId': !(0, runtime_1.exists)(json, 'profileId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['profileId']),
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationId']),
        'warnings': !(0, runtime_1.exists)(json, 'warnings') ? undefined : (0, WarningsType_1.WarningsTypeFromJSON)(json['warnings']),
    };
}
exports.PostLocationNotificationRequestFromJSONTyped = PostLocationNotificationRequestFromJSONTyped;
function PostLocationNotificationRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityTime': (0, DateTimeSpanType_1.DateTimeSpanTypeToJSON)(value.activityTime),
        'description': (0, FormattedTextTextType_1.FormattedTextTextTypeToJSON)(value.description),
        'links': (0, Links_1.LinksToJSON)(value.links),
        'locationNotificationStatus': (0, LocationNotificationStatus_1.LocationNotificationStatusToJSON)(value.locationNotificationStatus),
        'locationText': (0, FormattedTextTextType_1.FormattedTextTextTypeToJSON)(value.locationText),
        'otherLocationNotificationStatus': value.otherLocationNotificationStatus,
        'profileId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.profileId),
        'reservationId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationId),
        'warnings': (0, WarningsType_1.WarningsTypeToJSON)(value.warnings),
    };
}
exports.PostLocationNotificationRequestToJSON = PostLocationNotificationRequestToJSON;
