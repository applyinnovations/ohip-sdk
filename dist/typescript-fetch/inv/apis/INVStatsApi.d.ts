/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BlockInventoryStatistic, StatisticType } from '../models/index';
export interface GetBlockInventoryStatisticsRequest {
    hotelId: string;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeBlocksWithNoRoom?: boolean;
    includeOverbooking?: boolean;
    includeOpportunities?: boolean;
    includeTentativeInventory?: boolean;
    limit?: number;
    offset?: number;
    endDateRange?: Date;
    startDateRange?: Date;
    blockStatusCodes?: Array<string>;
    originCodes?: Array<string>;
    roomOwnerCodes?: Array<string>;
    blockOwners?: Array<string>;
    summarySortByCode?: GetBlockInventoryStatisticsSummarySortByCodeEnum;
    detailSortByCode?: GetBlockInventoryStatisticsDetailSortByCodeEnum;
    friday?: boolean;
    monday?: boolean;
    saturday?: boolean;
    sunday?: boolean;
    thursday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    fetchInstructions?: Set<GetBlockInventoryStatisticsFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetBlockInventoryStatisticsMultipleHotelIdsRequest {
    hotelIds: Array<string>;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    includeBlocksWithNoRoom?: boolean;
    includeOverbooking?: boolean;
    includeOpportunities?: boolean;
    includeTentativeInventory?: boolean;
    limit?: number;
    offset?: number;
    endDateRange?: Date;
    startDateRange?: Date;
    blockStatusCodes?: Array<string>;
    originCodes?: Array<string>;
    roomOwnerCodes?: Array<string>;
    blockOwners?: Array<string>;
    summarySortByCode?: GetBlockInventoryStatisticsMultipleHotelIdsSummarySortByCodeEnum;
    detailSortByCode?: GetBlockInventoryStatisticsMultipleHotelIdsDetailSortByCodeEnum;
    sunday?: boolean;
    monday?: boolean;
    tuesday?: boolean;
    wednesday?: boolean;
    thursday?: boolean;
    friday?: boolean;
    saturday?: boolean;
    fetchInstructions?: Set<GetBlockInventoryStatisticsMultipleHotelIdsFetchInstructionsEnum>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
export interface GetInventoryStatisticsRequest {
    hotelId: string;
    dateRangeEnd: Date;
    reportCode: GetInventoryStatisticsReportCodeEnum;
    dateRangeStart: Date;
    authorization?: string;
    xAppKey?: string;
    xHotelid?: string;
    parameterName?: Array<GetInventoryStatisticsParameterNameEnum>;
    parameterValue?: Array<string>;
    xExternalsystem?: string;
    acceptLanguage?: string;
}
/**
 *
 */
export declare class INVStatsApi extends runtime.BaseAPI {
    /**
     * Use this API to get block statistics on a per-day basis across a specified date range. The result includes a summary section of rooms booked by status by date, details on deduct and non-deduct rooms booked per day, and Sales Allowance and House Availability figures per day. The details section of the results include block details such as name, block, code, start and end date, owner, and more. It also shows a breakdown of blocked picked-up and available rooms per day per block. The result set is used to feed the GRC (Group Rooms Control) page in the OPERA UI. <p><strong>OperationId:</strong>getBlockInventoryStatistics</p>
     * Get block inventory statistics
     */
    getBlockInventoryStatisticsRaw(requestParameters: GetBlockInventoryStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockInventoryStatistic>>;
    /**
     * Use this API to get block statistics on a per-day basis across a specified date range. The result includes a summary section of rooms booked by status by date, details on deduct and non-deduct rooms booked per day, and Sales Allowance and House Availability figures per day. The details section of the results include block details such as name, block, code, start and end date, owner, and more. It also shows a breakdown of blocked picked-up and available rooms per day per block. The result set is used to feed the GRC (Group Rooms Control) page in the OPERA UI. <p><strong>OperationId:</strong>getBlockInventoryStatistics</p>
     * Get block inventory statistics
     */
    getBlockInventoryStatistics(requestParameters: GetBlockInventoryStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockInventoryStatistic>;
    /**
     * You can use this API to retrieve Block inventory for multiple hotel codes. Narrow down your results using the query parameters available. <p><strong>OperationId:</strong>getBlockInventoryStatisticsMultipleHotelIds</p>
     * Get block inventory statistics for multiple hotel Ids
     */
    getBlockInventoryStatisticsMultipleHotelIdsRaw(requestParameters: GetBlockInventoryStatisticsMultipleHotelIdsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlockInventoryStatistic>>;
    /**
     * You can use this API to retrieve Block inventory for multiple hotel codes. Narrow down your results using the query parameters available. <p><strong>OperationId:</strong>getBlockInventoryStatisticsMultipleHotelIds</p>
     * Get block inventory statistics for multiple hotel Ids
     */
    getBlockInventoryStatisticsMultipleHotelIds(requestParameters: GetBlockInventoryStatisticsMultipleHotelIdsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlockInventoryStatistic>;
    /**
     * Use this API to retrieve the inventory data for a specified hotel. Narrow down your results using the query parameters such as a date range, room type, room class, and/or tentative inventory included. Maximum days limit with a single request is 30 days.<p><strong>OperationId:</strong>getInventoryStatistics</p>
     * Get hotel inventory
     */
    getInventoryStatisticsRaw(requestParameters: GetInventoryStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<StatisticType>>>;
    /**
     * Use this API to retrieve the inventory data for a specified hotel. Narrow down your results using the query parameters such as a date range, room type, room class, and/or tentative inventory included. Maximum days limit with a single request is 30 days.<p><strong>OperationId:</strong>getInventoryStatistics</p>
     * Get hotel inventory
     */
    getInventoryStatistics(requestParameters: GetInventoryStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<StatisticType>>;
}
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsSummarySortByCodeEnum: {
    readonly Status: "Status";
    readonly StatusDescending: "StatusDescending";
    readonly ArrivalDate: "ArrivalDate";
    readonly BlockAccount: "BlockAccount";
    readonly Revenue: "Revenue";
    readonly RoomsOwner: "RoomsOwner";
};
export type GetBlockInventoryStatisticsSummarySortByCodeEnum = typeof GetBlockInventoryStatisticsSummarySortByCodeEnum[keyof typeof GetBlockInventoryStatisticsSummarySortByCodeEnum];
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsDetailSortByCodeEnum: {
    readonly Status: "Status";
    readonly StatusDescending: "StatusDescending";
    readonly ArrivalDate: "ArrivalDate";
    readonly BlockAccount: "BlockAccount";
    readonly Revenue: "Revenue";
    readonly RoomsOwner: "RoomsOwner";
};
export type GetBlockInventoryStatisticsDetailSortByCodeEnum = typeof GetBlockInventoryStatisticsDetailSortByCodeEnum[keyof typeof GetBlockInventoryStatisticsDetailSortByCodeEnum];
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsFetchInstructionsEnum: {
    readonly StatusSummary: "StatusSummary";
    readonly BookingSummary: "BookingSummary";
    readonly ForecastSummary: "ForecastSummary";
    readonly DetailSummary: "DetailSummary";
    readonly RoomSummary: "RoomSummary";
};
export type GetBlockInventoryStatisticsFetchInstructionsEnum = typeof GetBlockInventoryStatisticsFetchInstructionsEnum[keyof typeof GetBlockInventoryStatisticsFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsMultipleHotelIdsSummarySortByCodeEnum: {
    readonly Status: "Status";
    readonly StatusDescending: "StatusDescending";
};
export type GetBlockInventoryStatisticsMultipleHotelIdsSummarySortByCodeEnum = typeof GetBlockInventoryStatisticsMultipleHotelIdsSummarySortByCodeEnum[keyof typeof GetBlockInventoryStatisticsMultipleHotelIdsSummarySortByCodeEnum];
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsMultipleHotelIdsDetailSortByCodeEnum: {
    readonly Status: "Status";
    readonly StatusDescending: "StatusDescending";
    readonly ArrivalDate: "ArrivalDate";
    readonly BlockAccount: "BlockAccount";
    readonly Revenue: "Revenue";
    readonly RoomsOwner: "RoomsOwner";
};
export type GetBlockInventoryStatisticsMultipleHotelIdsDetailSortByCodeEnum = typeof GetBlockInventoryStatisticsMultipleHotelIdsDetailSortByCodeEnum[keyof typeof GetBlockInventoryStatisticsMultipleHotelIdsDetailSortByCodeEnum];
/**
 * @export
 */
export declare const GetBlockInventoryStatisticsMultipleHotelIdsFetchInstructionsEnum: {
    readonly StatusSummary: "StatusSummary";
    readonly BookingSummary: "BookingSummary";
    readonly ForecastSummary: "ForecastSummary";
    readonly DetailSummary: "DetailSummary";
    readonly RoomSummary: "RoomSummary";
};
export type GetBlockInventoryStatisticsMultipleHotelIdsFetchInstructionsEnum = typeof GetBlockInventoryStatisticsMultipleHotelIdsFetchInstructionsEnum[keyof typeof GetBlockInventoryStatisticsMultipleHotelIdsFetchInstructionsEnum];
/**
 * @export
 */
export declare const GetInventoryStatisticsReportCodeEnum: {
    readonly DetailedAvailabiltySummary: "DetailedAvailabiltySummary";
    readonly RoomCalendarStatistics: "RoomCalendarStatistics";
    readonly SellLimitSummary: "SellLimitSummary";
    readonly RoomsAvailabilitySummary: "RoomsAvailabilitySummary";
};
export type GetInventoryStatisticsReportCodeEnum = typeof GetInventoryStatisticsReportCodeEnum[keyof typeof GetInventoryStatisticsReportCodeEnum];
/**
 * @export
 */
export declare const GetInventoryStatisticsParameterNameEnum: {
    readonly CancelledYn: "CancelledYN";
    readonly Channel: "Channel";
    readonly DeductRoomsYn: "DeductRoomsYN";
    readonly GroupBy: "GroupBy";
    readonly HouseArrPersonsYn: "HouseArrPersonsYN";
    readonly HouseArrRoomsYn: "HouseArrRoomsYN";
    readonly HouseAvailPercYn: "HouseAvailPercYN";
    readonly HouseAvailRoomsExcludingOverbookingYn: "HouseAvailRoomsExcludingOverbookingYN";
    readonly HouseAvailRoomsYn: "HouseAvailRoomsYN";
    readonly HouseAvailTenPercYn: "HouseAvailTenPercYN";
    readonly HouseBlkDeductNpuYn: "HouseBlkDeductNpuYN";
    readonly HouseBlkDeductPuYn: "HouseBlkDeductPuYN";
    readonly HouseBlkTentNpuYn: "HouseBlkTentNpuYN";
    readonly HouseBlkTentPuYn: "HouseBlkTentPuYN";
    readonly HouseDayUsePersonYn: "HouseDayUsePersonYN";
    readonly HouseDayUseRoomYn: "HouseDayUseRoomYN";
    readonly HouseDepPersonsYn: "HouseDepPersonsYN";
    readonly HouseDepRoomsYn: "HouseDepRoomsYN";
    readonly HouseInventoryRoomsYn: "HouseInventoryRoomsYN";
    readonly HouseMaxAvailabilityExcludingOverbookingYn: "HouseMaxAvailabilityExcludingOverbookingYN";
    readonly HouseMaxAvailabilityYn: "HouseMaxAvailabilityYN";
    readonly HouseMaxOccupancyYn: "HouseMaxOccupancyYN";
    readonly HouseMinAvailabilityExcludingOverbookingYn: "HouseMinAvailabilityExcludingOverbookingYN";
    readonly HouseMinAvailabilityYn: "HouseMinAvailabilityYN";
    readonly HouseOccPercYn: "HouseOccPercYN";
    readonly HouseOccTenPercYn: "HouseOccTenPercYN";
    readonly HouseOccupancyYn: "HouseOccupancyYN";
    readonly HouseOooyn: "HouseOOOYN";
    readonly HouseOosRoomsYn: "HouseOOSRoomsYN";
    readonly HouseOverBookingYn: "HouseOverBookingYN";
    readonly HousePeopleInHouseYn: "HousePeopleInHouseYN";
    readonly HousePhysicalRoomsYn: "HousePhysicalRoomsYN";
    readonly HouseRoomsSoldYn: "HouseRoomsSoldYN";
    readonly HouseSellLimitYn: "HouseSellLimitYN";
    readonly HouseTentRoomsExcludingOverbookingYn: "HouseTentRoomsExcludingOverbookingYN";
    readonly HouseTentRoomsSoldYn: "HouseTentRoomsSoldYN";
    readonly HouseTentRoomsYn: "HouseTentRoomsYN";
    readonly NonOwnerExclusiveYn: "NonOwnerExclusiveYN";
    readonly OutOfOrderRoomsYn: "OutOfOrderRoomsYN";
    readonly OwnerExclusiveYn: "OwnerExclusiveYN";
    readonly RestrictionsYn: "RestrictionsYN";
    readonly RoomArrPersonsYn: "RoomArrPersonsYN";
    readonly RoomArrRoomsYn: "RoomArrRoomsYN";
    readonly RoomAvailRoomsExcludingOverbookingYn: "RoomAvailRoomsExcludingOverbookingYN";
    readonly RoomAvailRoomsYn: "RoomAvailRoomsYN";
    readonly RoomBlkDeductNpuYn: "RoomBlkDeductNpuYN";
    readonly RoomBlkDeductPuYn: "RoomBlkDeductPuYN";
    readonly RoomBlkTentNpuYn: "RoomBlkTentNpuYN";
    readonly RoomBlkTentPuYn: "RoomBlkTentPuYN";
    readonly RoomCancelledYn: "RoomCancelledYN";
    readonly RoomClassList: "RoomClassList";
    readonly RoomDayUsePersonYn: "RoomDayUsePersonYN";
    readonly RoomDayUseRoomYn: "RoomDayUseRoomYN";
    readonly RoomDepPersonsYn: "RoomDepPersonsYN";
    readonly RoomDepRoomsYn: "RoomDepRoomsYN";
    readonly RoomInventoryRoomsYn: "RoomInventoryRoomsYN";
    readonly RoomMaxAvailabilityExcludingOverbookingYn: "RoomMaxAvailabilityExcludingOverbookingYN";
    readonly RoomMaxAvailabilityYn: "RoomMaxAvailabilityYN";
    readonly RoomMaxOccupancyYn: "RoomMaxOccupancyYN";
    readonly RoomMinAvailabilityExcludingOverbookingYn: "RoomMinAvailabilityExcludingOverbookingYN";
    readonly RoomMinAvailabilityYn: "RoomMinAvailabilityYN";
    readonly RoomOccupancyYn: "RoomOccupancyYN";
    readonly RoomOooyn: "RoomOOOYN";
    readonly RoomOosRoomsYn: "RoomOOSRoomsYN";
    readonly RoomOverBookingYn: "RoomOverBookingYN";
    readonly RoomPeopleInHouseYn: "RoomPeopleInHouseYN";
    readonly RoomPhysicalRoomsYn: "RoomPhysicalRoomsYN";
    readonly RoomRestrictionsYn: "RoomRestrictionsYN";
    readonly RoomRoomsSoldYn: "RoomRoomsSoldYN";
    readonly RoomSellLimitYn: "RoomSellLimitYN";
    readonly RoomTentRoomsExcludingOverbookingYn: "RoomTentRoomsExcludingOverbookingYN";
    readonly RoomTentRoomsYn: "RoomTentRoomsYN";
    readonly RoomTentYn: "RoomTentYN";
    readonly RoomTypeWildCardList: "RoomTypeWildCardList";
};
export type GetInventoryStatisticsParameterNameEnum = typeof GetInventoryStatisticsParameterNameEnum[keyof typeof GetInventoryStatisticsParameterNameEnum];
