"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyStatisticUnitTypeToJSON = exports.PropertyStatisticUnitTypeFromJSONTyped = exports.PropertyStatisticUnitTypeFromJSON = exports.instanceOfPropertyStatisticUnitType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the PropertyStatisticUnitType interface.
 */
function instanceOfPropertyStatisticUnitType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPropertyStatisticUnitType = instanceOfPropertyStatisticUnitType;
function PropertyStatisticUnitTypeFromJSON(json) {
    return PropertyStatisticUnitTypeFromJSONTyped(json, false);
}
exports.PropertyStatisticUnitTypeFromJSON = PropertyStatisticUnitTypeFromJSON;
function PropertyStatisticUnitTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'value': !(0, runtime_1.exists)(json, 'value') ? undefined : json['value'],
    };
}
exports.PropertyStatisticUnitTypeFromJSONTyped = PropertyStatisticUnitTypeFromJSONTyped;
function PropertyStatisticUnitTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'value': value.value,
    };
}
exports.PropertyStatisticUnitTypeToJSON = PropertyStatisticUnitTypeToJSON;
