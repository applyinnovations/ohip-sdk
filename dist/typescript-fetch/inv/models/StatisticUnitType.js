"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatisticUnitTypeToJSON = exports.StatisticUnitTypeFromJSONTyped = exports.StatisticUnitTypeFromJSON = exports.instanceOfStatisticUnitType = void 0;
const runtime_1 = require("../runtime");
const PropertyStatisticUnitType_1 = require("./PropertyStatisticUnitType");
/**
 * Check if a given object implements the StatisticUnitType interface.
 */
function instanceOfStatisticUnitType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfStatisticUnitType = instanceOfStatisticUnitType;
function StatisticUnitTypeFromJSON(json) {
    return StatisticUnitTypeFromJSONTyped(json, false);
}
exports.StatisticUnitTypeFromJSON = StatisticUnitTypeFromJSON;
function StatisticUnitTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'value': !(0, runtime_1.exists)(json, 'value') ? undefined : json['value'],
        'propertyBookingSummaryStatistics': !(0, runtime_1.exists)(json, 'propertyBookingSummaryStatistics') ? undefined : (json['propertyBookingSummaryStatistics'].map(PropertyStatisticUnitType_1.PropertyStatisticUnitTypeFromJSON)),
    };
}
exports.StatisticUnitTypeFromJSONTyped = StatisticUnitTypeFromJSONTyped;
function StatisticUnitTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'value': value.value,
        'propertyBookingSummaryStatistics': value.propertyBookingSummaryStatistics === undefined ? undefined : (value.propertyBookingSummaryStatistics.map(PropertyStatisticUnitType_1.PropertyStatisticUnitTypeToJSON)),
    };
}
exports.StatisticUnitTypeToJSON = StatisticUnitTypeToJSON;
