"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockInventoryStatisticTypeToJSON = exports.BlockInventoryStatisticTypeFromJSONTyped = exports.BlockInventoryStatisticTypeFromJSON = exports.instanceOfBlockInventoryStatisticType = void 0;
const runtime_1 = require("../runtime");
const BlockDetailStatisticType_1 = require("./BlockDetailStatisticType");
const BlockSummaryStatisticType_1 = require("./BlockSummaryStatisticType");
const SellMessagesType_1 = require("./SellMessagesType");
/**
 * Check if a given object implements the BlockInventoryStatisticType interface.
 */
function instanceOfBlockInventoryStatisticType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockInventoryStatisticType = instanceOfBlockInventoryStatisticType;
function BlockInventoryStatisticTypeFromJSON(json) {
    return BlockInventoryStatisticTypeFromJSONTyped(json, false);
}
exports.BlockInventoryStatisticTypeFromJSON = BlockInventoryStatisticTypeFromJSON;
function BlockInventoryStatisticTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockSummaryStatistics': !(0, runtime_1.exists)(json, 'blockSummaryStatistics') ? undefined : (json['blockSummaryStatistics'].map(BlockSummaryStatisticType_1.BlockSummaryStatisticTypeFromJSON)),
        'blockDetailStatistics': !(0, runtime_1.exists)(json, 'blockDetailStatistics') ? undefined : (json['blockDetailStatistics'].map(BlockDetailStatisticType_1.BlockDetailStatisticTypeFromJSON)),
        'sellMessages': !(0, runtime_1.exists)(json, 'sellMessages') ? undefined : (0, SellMessagesType_1.SellMessagesTypeFromJSON)(json['sellMessages']),
    };
}
exports.BlockInventoryStatisticTypeFromJSONTyped = BlockInventoryStatisticTypeFromJSONTyped;
function BlockInventoryStatisticTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'blockSummaryStatistics': value.blockSummaryStatistics === undefined ? undefined : (value.blockSummaryStatistics.map(BlockSummaryStatisticType_1.BlockSummaryStatisticTypeToJSON)),
        'blockDetailStatistics': value.blockDetailStatistics === undefined ? undefined : (value.blockDetailStatistics.map(BlockDetailStatisticType_1.BlockDetailStatisticTypeToJSON)),
        'sellMessages': (0, SellMessagesType_1.SellMessagesTypeToJSON)(value.sellMessages),
    };
}
exports.BlockInventoryStatisticTypeToJSON = BlockInventoryStatisticTypeToJSON;
