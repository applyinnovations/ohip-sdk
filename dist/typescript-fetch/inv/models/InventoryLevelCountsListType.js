"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryLevelCountsListTypeToJSON = exports.InventoryLevelCountsListTypeFromJSONTyped = exports.InventoryLevelCountsListTypeFromJSON = exports.instanceOfInventoryLevelCountsListType = void 0;
const runtime_1 = require("../runtime");
const InventoryCountsType_1 = require("./InventoryCountsType");
/**
 * Check if a given object implements the InventoryLevelCountsListType interface.
 */
function instanceOfInventoryLevelCountsListType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfInventoryLevelCountsListType = instanceOfInventoryLevelCountsListType;
function InventoryLevelCountsListTypeFromJSON(json) {
    return InventoryLevelCountsListTypeFromJSONTyped(json, false);
}
exports.InventoryLevelCountsListTypeFromJSON = InventoryLevelCountsListTypeFromJSON;
function InventoryLevelCountsListTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'inventoryCounts': !(0, runtime_1.exists)(json, 'inventoryCounts') ? undefined : (json['inventoryCounts'].map(InventoryCountsType_1.InventoryCountsTypeFromJSON)),
        'sequence': !(0, runtime_1.exists)(json, 'sequence') ? undefined : json['sequence'],
    };
}
exports.InventoryLevelCountsListTypeFromJSONTyped = InventoryLevelCountsListTypeFromJSONTyped;
function InventoryLevelCountsListTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'inventoryCounts': value.inventoryCounts === undefined ? undefined : (value.inventoryCounts.map(InventoryCountsType_1.InventoryCountsTypeToJSON)),
        'sequence': value.sequence,
    };
}
exports.InventoryLevelCountsListTypeToJSON = InventoryLevelCountsListTypeToJSON;
