"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockInfoTypeToJSON = exports.BlockInfoTypeFromJSONTyped = exports.BlockInfoTypeFromJSON = exports.instanceOfBlockInfoType = void 0;
const runtime_1 = require("../runtime");
const BlockClassificationType_1 = require("./BlockClassificationType");
const BlockNonCompeteType_1 = require("./BlockNonCompeteType");
const BlockRateProtectionType_1 = require("./BlockRateProtectionType");
const CodeDescriptionType_1 = require("./CodeDescriptionType");
const StatusColorType_1 = require("./StatusColorType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the BlockInfoType interface.
 */
function instanceOfBlockInfoType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfBlockInfoType = instanceOfBlockInfoType;
function BlockInfoTypeFromJSON(json) {
    return BlockInfoTypeFromJSONTyped(json, false);
}
exports.BlockInfoTypeFromJSON = BlockInfoTypeFromJSON;
function BlockInfoTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'blockId': !(0, runtime_1.exists)(json, 'blockId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['blockId']),
        'blockName': !(0, runtime_1.exists)(json, 'blockName') ? undefined : json['blockName'],
        'blockCode': !(0, runtime_1.exists)(json, 'blockCode') ? undefined : json['blockCode'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'cutOffDate': !(0, runtime_1.exists)(json, 'cutOffDate') ? undefined : json['cutOffDate'],
        'blockStatus': !(0, runtime_1.exists)(json, 'blockStatus') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['blockStatus']),
        'blockStatusColor': !(0, runtime_1.exists)(json, 'blockStatusColor') ? undefined : (0, StatusColorType_1.StatusColorTypeFromJSON)(json['blockStatusColor']),
        'accountId': !(0, runtime_1.exists)(json, 'accountId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['accountId']),
        'accountName': !(0, runtime_1.exists)(json, 'accountName') ? undefined : json['accountName'],
        'contactId': !(0, runtime_1.exists)(json, 'contactId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['contactId']),
        'contactName': !(0, runtime_1.exists)(json, 'contactName') ? undefined : json['contactName'],
        'roomSalesManager': !(0, runtime_1.exists)(json, 'roomSalesManager') ? undefined : (0, CodeDescriptionType_1.CodeDescriptionTypeFromJSON)(json['roomSalesManager']),
        'currencyCode': !(0, runtime_1.exists)(json, 'currencyCode') ? undefined : json['currencyCode'],
        'averageRoomRate': !(0, runtime_1.exists)(json, 'averageRoomRate') ? undefined : json['averageRoomRate'],
        'conversionCode': !(0, runtime_1.exists)(json, 'conversionCode') ? undefined : json['conversionCode'],
        'rankingCode': !(0, runtime_1.exists)(json, 'rankingCode') ? undefined : json['rankingCode'],
        'guaranteeCode': !(0, runtime_1.exists)(json, 'guaranteeCode') ? undefined : json['guaranteeCode'],
        'rateProtectionDetails': !(0, runtime_1.exists)(json, 'rateProtectionDetails') ? undefined : (0, BlockRateProtectionType_1.BlockRateProtectionTypeFromJSON)(json['rateProtectionDetails']),
        'nonCompeteDetails': !(0, runtime_1.exists)(json, 'nonCompeteDetails') ? undefined : (0, BlockNonCompeteType_1.BlockNonCompeteTypeFromJSON)(json['nonCompeteDetails']),
        'blockClassification': !(0, runtime_1.exists)(json, 'blockClassification') ? undefined : (0, BlockClassificationType_1.BlockClassificationTypeFromJSON)(json['blockClassification']),
    };
}
exports.BlockInfoTypeFromJSONTyped = BlockInfoTypeFromJSONTyped;
function BlockInfoTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'blockId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.blockId),
        'blockName': value.blockName,
        'blockCode': value.blockCode,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'cutOffDate': value.cutOffDate,
        'blockStatus': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.blockStatus),
        'blockStatusColor': (0, StatusColorType_1.StatusColorTypeToJSON)(value.blockStatusColor),
        'accountId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.accountId),
        'accountName': value.accountName,
        'contactId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.contactId),
        'contactName': value.contactName,
        'roomSalesManager': (0, CodeDescriptionType_1.CodeDescriptionTypeToJSON)(value.roomSalesManager),
        'currencyCode': value.currencyCode,
        'averageRoomRate': value.averageRoomRate,
        'conversionCode': value.conversionCode,
        'rankingCode': value.rankingCode,
        'guaranteeCode': value.guaranteeCode,
        'rateProtectionDetails': (0, BlockRateProtectionType_1.BlockRateProtectionTypeToJSON)(value.rateProtectionDetails),
        'nonCompeteDetails': (0, BlockNonCompeteType_1.BlockNonCompeteTypeToJSON)(value.nonCompeteDetails),
        'blockClassification': (0, BlockClassificationType_1.BlockClassificationTypeToJSON)(value.blockClassification),
    };
}
exports.BlockInfoTypeToJSON = BlockInfoTypeToJSON;
