"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockClassificationTypeToJSON = exports.BlockClassificationTypeFromJSONTyped = exports.BlockClassificationTypeFromJSON = exports.BlockClassificationType = void 0;
/**
 * Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.
 * @export
 */
exports.BlockClassificationType = {
    MasterBlock: 'MasterBlock',
    MasterTour: 'MasterTour',
    MasterAllocation: 'MasterAllocation',
    MasterItinerary: 'MasterItinerary',
    LeadMaster: 'LeadMaster',
    RegularBooking: 'RegularBooking',
    SubBlock: 'SubBlock',
    SubTour: 'SubTour',
    FitContract: 'FitContract',
    SubAllocation: 'SubAllocation',
    SubItinerary: 'SubItinerary',
    Lead: 'Lead',
    FitMaster: 'FitMaster',
    Opportunity: 'Opportunity'
};
function BlockClassificationTypeFromJSON(json) {
    return BlockClassificationTypeFromJSONTyped(json, false);
}
exports.BlockClassificationTypeFromJSON = BlockClassificationTypeFromJSON;
function BlockClassificationTypeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.BlockClassificationTypeFromJSONTyped = BlockClassificationTypeFromJSONTyped;
function BlockClassificationTypeToJSON(value) {
    return value;
}
exports.BlockClassificationTypeToJSON = BlockClassificationTypeToJSON;
