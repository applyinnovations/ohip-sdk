/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SellLimitByDateRangeType } from './SellLimitByDateRangeType';
import {
    SellLimitByDateRangeTypeFromJSON,
    SellLimitByDateRangeTypeFromJSONTyped,
    SellLimitByDateRangeTypeToJSON,
} from './SellLimitByDateRangeType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface ChangeSellLimitByDateRangeRequest
 */
export interface ChangeSellLimitByDateRangeRequest {
    /**
     * Contains the sell limits for a given date range to be set.
     * @type {Array<SellLimitByDateRangeType>}
     * @memberof ChangeSellLimitByDateRangeRequest
     */
    sellLimitsByDateRange?: Array<SellLimitByDateRangeType>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof ChangeSellLimitByDateRangeRequest
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the ChangeSellLimitByDateRangeRequest interface.
 */
export function instanceOfChangeSellLimitByDateRangeRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeSellLimitByDateRangeRequestFromJSON(json: any): ChangeSellLimitByDateRangeRequest {
    return ChangeSellLimitByDateRangeRequestFromJSONTyped(json, false);
}

export function ChangeSellLimitByDateRangeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeSellLimitByDateRangeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sellLimitsByDateRange': !exists(json, 'sellLimitsByDateRange') ? undefined : ((json['sellLimitsByDateRange'] as Array<any>).map(SellLimitByDateRangeTypeFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function ChangeSellLimitByDateRangeRequestToJSON(value?: ChangeSellLimitByDateRangeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sellLimitsByDateRange': value.sellLimitsByDateRange === undefined ? undefined : ((value.sellLimitsByDateRange as Array<any>).map(SellLimitByDateRangeTypeToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

