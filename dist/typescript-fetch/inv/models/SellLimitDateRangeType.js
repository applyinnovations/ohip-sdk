"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SellLimitDateRangeTypeToJSON = exports.SellLimitDateRangeTypeFromJSONTyped = exports.SellLimitDateRangeTypeFromJSON = exports.instanceOfSellLimitDateRangeType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SellLimitDateRangeType interface.
 */
function instanceOfSellLimitDateRangeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSellLimitDateRangeType = instanceOfSellLimitDateRangeType;
function SellLimitDateRangeTypeFromJSON(json) {
    return SellLimitDateRangeTypeFromJSONTyped(json, false);
}
exports.SellLimitDateRangeTypeFromJSON = SellLimitDateRangeTypeFromJSON;
function SellLimitDateRangeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'sunday': !(0, runtime_1.exists)(json, 'sunday') ? undefined : json['sunday'],
        'monday': !(0, runtime_1.exists)(json, 'monday') ? undefined : json['monday'],
        'tuesday': !(0, runtime_1.exists)(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !(0, runtime_1.exists)(json, 'wednesday') ? undefined : json['wednesday'],
        'thursday': !(0, runtime_1.exists)(json, 'thursday') ? undefined : json['thursday'],
        'friday': !(0, runtime_1.exists)(json, 'friday') ? undefined : json['friday'],
        'saturday': !(0, runtime_1.exists)(json, 'saturday') ? undefined : json['saturday'],
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'flatOrPercentage': !(0, runtime_1.exists)(json, 'flatOrPercentage') ? undefined : json['flatOrPercentage'],
        'actionType': !(0, runtime_1.exists)(json, 'actionType') ? undefined : json['actionType'],
    };
}
exports.SellLimitDateRangeTypeFromJSONTyped = SellLimitDateRangeTypeFromJSONTyped;
function SellLimitDateRangeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'startDate': value.startDate,
        'endDate': value.endDate,
        'sunday': value.sunday,
        'monday': value.monday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
        'thursday': value.thursday,
        'friday': value.friday,
        'saturday': value.saturday,
        'amount': value.amount,
        'flatOrPercentage': value.flatOrPercentage,
        'actionType': value.actionType,
    };
}
exports.SellLimitDateRangeTypeToJSON = SellLimitDateRangeTypeToJSON;
