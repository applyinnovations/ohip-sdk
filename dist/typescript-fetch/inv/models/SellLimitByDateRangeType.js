"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SellLimitByDateRangeTypeToJSON = exports.SellLimitByDateRangeTypeFromJSONTyped = exports.SellLimitByDateRangeTypeFromJSON = exports.instanceOfSellLimitByDateRangeType = void 0;
const runtime_1 = require("../runtime");
const RoomCodeCategoryType_1 = require("./RoomCodeCategoryType");
const SellLimitDateRangeType_1 = require("./SellLimitDateRangeType");
/**
 * Check if a given object implements the SellLimitByDateRangeType interface.
 */
function instanceOfSellLimitByDateRangeType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSellLimitByDateRangeType = instanceOfSellLimitByDateRangeType;
function SellLimitByDateRangeTypeFromJSON(json) {
    return SellLimitByDateRangeTypeFromJSONTyped(json, false);
}
exports.SellLimitByDateRangeTypeFromJSON = SellLimitByDateRangeTypeFromJSON;
function SellLimitByDateRangeTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'codeCategory': !(0, runtime_1.exists)(json, 'codeCategory') ? undefined : (0, RoomCodeCategoryType_1.RoomCodeCategoryTypeFromJSON)(json['codeCategory']),
        'codeValue': !(0, runtime_1.exists)(json, 'codeValue') ? undefined : json['codeValue'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'sellLimitDateRanges': !(0, runtime_1.exists)(json, 'sellLimitDateRanges') ? undefined : (json['sellLimitDateRanges'].map(SellLimitDateRangeType_1.SellLimitDateRangeTypeFromJSON)),
    };
}
exports.SellLimitByDateRangeTypeFromJSONTyped = SellLimitByDateRangeTypeFromJSONTyped;
function SellLimitByDateRangeTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'codeCategory': (0, RoomCodeCategoryType_1.RoomCodeCategoryTypeToJSON)(value.codeCategory),
        'codeValue': value.codeValue,
        'hotelId': value.hotelId,
        'sellLimitDateRanges': value.sellLimitDateRanges === undefined ? undefined : (value.sellLimitDateRanges.map(SellLimitDateRangeType_1.SellLimitDateRangeTypeToJSON)),
    };
}
exports.SellLimitByDateRangeTypeToJSON = SellLimitByDateRangeTypeToJSON;
