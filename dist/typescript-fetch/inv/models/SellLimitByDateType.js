"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SellLimitByDateTypeToJSON = exports.SellLimitByDateTypeFromJSONTyped = exports.SellLimitByDateTypeFromJSON = exports.instanceOfSellLimitByDateType = void 0;
const runtime_1 = require("../runtime");
const HouseSellLimitType_1 = require("./HouseSellLimitType");
const RoomClassSellLimitType_1 = require("./RoomClassSellLimitType");
const RoomTypeSellLimitType_1 = require("./RoomTypeSellLimitType");
/**
 * Check if a given object implements the SellLimitByDateType interface.
 */
function instanceOfSellLimitByDateType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfSellLimitByDateType = instanceOfSellLimitByDateType;
function SellLimitByDateTypeFromJSON(json) {
    return SellLimitByDateTypeFromJSONTyped(json, false);
}
exports.SellLimitByDateTypeFromJSON = SellLimitByDateTypeFromJSON;
function SellLimitByDateTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'houseSellLimits': !(0, runtime_1.exists)(json, 'houseSellLimits') ? undefined : (json['houseSellLimits'].map(HouseSellLimitType_1.HouseSellLimitTypeFromJSON)),
        'roomClassSellLimits': !(0, runtime_1.exists)(json, 'roomClassSellLimits') ? undefined : (json['roomClassSellLimits'].map(RoomClassSellLimitType_1.RoomClassSellLimitTypeFromJSON)),
        'roomTypeSellLimits': !(0, runtime_1.exists)(json, 'roomTypeSellLimits') ? undefined : (json['roomTypeSellLimits'].map(RoomTypeSellLimitType_1.RoomTypeSellLimitTypeFromJSON)),
    };
}
exports.SellLimitByDateTypeFromJSONTyped = SellLimitByDateTypeFromJSONTyped;
function SellLimitByDateTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'hotelId': value.hotelId,
        'houseSellLimits': value.houseSellLimits === undefined ? undefined : (value.houseSellLimits.map(HouseSellLimitType_1.HouseSellLimitTypeToJSON)),
        'roomClassSellLimits': value.roomClassSellLimits === undefined ? undefined : (value.roomClassSellLimits.map(RoomClassSellLimitType_1.RoomClassSellLimitTypeToJSON)),
        'roomTypeSellLimits': value.roomTypeSellLimits === undefined ? undefined : (value.roomTypeSellLimits.map(RoomTypeSellLimitType_1.RoomTypeSellLimitTypeToJSON)),
    };
}
exports.SellLimitByDateTypeToJSON = SellLimitByDateTypeToJSON;
