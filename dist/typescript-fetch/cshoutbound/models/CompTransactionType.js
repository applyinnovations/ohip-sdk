"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering Outbound API
 * APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompTransactionTypeToJSON = exports.CompTransactionTypeFromJSONTyped = exports.CompTransactionTypeFromJSON = exports.instanceOfCompTransactionType = void 0;
const runtime_1 = require("../runtime");
const CurrencyAmountType_1 = require("./CurrencyAmountType");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CompTransactionType interface.
 */
function instanceOfCompTransactionType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCompTransactionType = instanceOfCompTransactionType;
function CompTransactionTypeFromJSON(json) {
    return CompTransactionTypeFromJSONTyped(json, false);
}
exports.CompTransactionTypeFromJSON = CompTransactionTypeFromJSON;
function CompTransactionTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['amount']),
        'postedAmount': !(0, runtime_1.exists)(json, 'postedAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['postedAmount']),
        'debit': !(0, runtime_1.exists)(json, 'debit') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['debit']),
        'credit': !(0, runtime_1.exists)(json, 'credit') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['credit']),
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'firstName': !(0, runtime_1.exists)(json, 'firstName') ? undefined : json['firstName'],
        'membershipId': !(0, runtime_1.exists)(json, 'membershipId') ? undefined : json['membershipId'],
        'membershipType': !(0, runtime_1.exists)(json, 'membershipType') ? undefined : json['membershipType'],
        'approvalDate': !(0, runtime_1.exists)(json, 'approvalDate') ? undefined : json['approvalDate'],
        'approvalStatus': !(0, runtime_1.exists)(json, 'approvalStatus') ? undefined : json['approvalStatus'],
        'approvalCode': !(0, runtime_1.exists)(json, 'approvalCode') ? undefined : json['approvalCode'],
        'authorizerId': !(0, runtime_1.exists)(json, 'authorizerId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['authorizerId']),
        'guestNameId': !(0, runtime_1.exists)(json, 'guestNameId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['guestNameId']),
        'resvNameId': !(0, runtime_1.exists)(json, 'resvNameId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['resvNameId']),
        'confirmationNo': !(0, runtime_1.exists)(json, 'confirmationNo') ? undefined : json['confirmationNo'],
        'roomId': !(0, runtime_1.exists)(json, 'roomId') ? undefined : json['roomId'],
        'compId': !(0, runtime_1.exists)(json, 'compId') ? undefined : json['compId'],
        'folioNo': !(0, runtime_1.exists)(json, 'folioNo') ? undefined : json['folioNo'],
        'subGroup': !(0, runtime_1.exists)(json, 'subGroup') ? undefined : json['subGroup'],
        'transactionAmount': !(0, runtime_1.exists)(json, 'transactionAmount') ? undefined : (0, CurrencyAmountType_1.CurrencyAmountTypeFromJSON)(json['transactionAmount']),
        'transactionId': !(0, runtime_1.exists)(json, 'transactionId') ? undefined : json['transactionId'],
        'transactionCode': !(0, runtime_1.exists)(json, 'transactionCode') ? undefined : json['transactionCode'],
        'transactionDescription': !(0, runtime_1.exists)(json, 'transactionDescription') ? undefined : json['transactionDescription'],
        'transactionStatus': !(0, runtime_1.exists)(json, 'transactionStatus') ? undefined : json['transactionStatus'],
        'transactionDate': !(0, runtime_1.exists)(json, 'transactionDate') ? undefined : json['transactionDate'],
        'userName': !(0, runtime_1.exists)(json, 'userName') ? undefined : json['userName'],
        'externalUserId': !(0, runtime_1.exists)(json, 'externalUserId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['externalUserId']),
        'cashierId': !(0, runtime_1.exists)(json, 'cashierId') ? undefined : json['cashierId'],
    };
}
exports.CompTransactionTypeFromJSONTyped = CompTransactionTypeFromJSONTyped;
function CompTransactionTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.amount),
        'postedAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.postedAmount),
        'debit': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.debit),
        'credit': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.credit),
        'name': value.name,
        'firstName': value.firstName,
        'membershipId': value.membershipId,
        'membershipType': value.membershipType,
        'approvalDate': value.approvalDate,
        'approvalStatus': value.approvalStatus,
        'approvalCode': value.approvalCode,
        'authorizerId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.authorizerId),
        'guestNameId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.guestNameId),
        'resvNameId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.resvNameId),
        'confirmationNo': value.confirmationNo,
        'roomId': value.roomId,
        'compId': value.compId,
        'folioNo': value.folioNo,
        'subGroup': value.subGroup,
        'transactionAmount': (0, CurrencyAmountType_1.CurrencyAmountTypeToJSON)(value.transactionAmount),
        'transactionId': value.transactionId,
        'transactionCode': value.transactionCode,
        'transactionDescription': value.transactionDescription,
        'transactionStatus': value.transactionStatus,
        'transactionDate': value.transactionDate,
        'userName': value.userName,
        'externalUserId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.externalUserId),
        'cashierId': value.cashierId,
    };
}
exports.CompTransactionTypeToJSON = CompTransactionTypeToJSON;
