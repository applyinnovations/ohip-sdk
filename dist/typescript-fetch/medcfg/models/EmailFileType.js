"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailFileTypeToJSON = exports.EmailFileTypeFromJSONTyped = exports.EmailFileTypeFromJSON = exports.instanceOfEmailFileType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the EmailFileType interface.
 */
function instanceOfEmailFileType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEmailFileType = instanceOfEmailFileType;
function EmailFileTypeFromJSON(json) {
    return EmailFileTypeFromJSONTyped(json, false);
}
exports.EmailFileTypeFromJSON = EmailFileTypeFromJSON;
function EmailFileTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'emailID': !(0, runtime_1.exists)(json, 'emailID') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['emailID']),
        'emailFile': !(0, runtime_1.exists)(json, 'emailFile') ? undefined : json['emailFile'],
        'emailFileName': !(0, runtime_1.exists)(json, 'emailFileName') ? undefined : json['emailFileName'],
    };
}
exports.EmailFileTypeFromJSONTyped = EmailFileTypeFromJSONTyped;
function EmailFileTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'emailID': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.emailID),
        'emailFile': value.emailFile,
        'emailFileName': value.emailFileName,
    };
}
exports.EmailFileTypeToJSON = EmailFileTypeToJSON;
