/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ImageCodeType } from './ImageCodeType';
import type { ImageParameterType } from './ImageParameterType';
import type { ImageStyleType } from './ImageStyleType';
import type { UniqueIDType } from './UniqueIDType';
/**
 * Image upload details
 * @export
 * @interface ImageUploadType
 */
export interface ImageUploadType {
    /**
     *
     * @type {ImageCodeType}
     * @memberof ImageUploadType
     */
    imageCode?: ImageCodeType;
    /**
     * File extension of the Image, e.g. JPG, PNG, BMP, etc.
     * @type {string}
     * @memberof ImageUploadType
     */
    fileExtension?: string;
    /**
     * Collection of image parameters code / value pairs.
     * @type {Array<ImageParameterType>}
     * @memberof ImageUploadType
     */
    imageParameters?: Array<ImageParameterType>;
    /**
     *
     * @type {string}
     * @memberof ImageUploadType
     */
    languageCode?: string;
    /**
     *
     * @type {ImageStyleType}
     * @memberof ImageUploadType
     */
    imageStyle?: ImageStyleType;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ImageUploadType
     */
    linkId?: UniqueIDType;
    /**
     * Description of the image.
     * @type {string}
     * @memberof ImageUploadType
     */
    description?: string;
    /**
     * Image file to upload.
     * @type {string}
     * @memberof ImageUploadType
     */
    image?: string;
    /**
     *
     * @type {UniqueIDType}
     * @memberof ImageUploadType
     */
    imageId?: UniqueIDType;
}
/**
 * Check if a given object implements the ImageUploadType interface.
 */
export declare function instanceOfImageUploadType(value: object): boolean;
export declare function ImageUploadTypeFromJSON(json: any): ImageUploadType;
export declare function ImageUploadTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageUploadType;
export declare function ImageUploadTypeToJSON(value?: ImageUploadType | null): any;
