/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 22.3
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const ImageCodeType = {
    LogoChain: 'LogoChain',
    Logo: 'Logo',
    Profile: 'Profile',
    Nationality: 'Nationality',
    User: 'User',
    ToolbarItemCode: 'ToolbarItemCode',
    Chain: 'Chain',
    MembershipType: 'MembershipType',
    MembershipLevel: 'MembershipLevel',
    Resort: 'Resort',
    RoomTypeChain: 'RoomTypeChain',
    RoomType: 'RoomType',
    RoomNumber: 'RoomNumber',
    OooReasonChain: 'OooReasonChain',
    OooReason: 'OooReason',
    RoomMaintChain: 'RoomMaintChain',
    RoomMaintenance: 'RoomMaintenance',
    RoomMaintIssue: 'RoomMaintIssue',
    FloorPlan: 'FloorPlan',
    SiteLayout: 'SiteLayout',
    Attraction: 'Attraction',
    PropertyMap: 'PropertyMap',
    InvItemChain: 'InvItemChain',
    InvItem: 'InvItem',
    PackageChain: 'PackageChain',
    Package: 'Package',
    Pool: 'Pool',
    RoomConditionChain: 'RoomConditionChain',
    RoomCondition: 'RoomCondition',
    FunctionSpace: 'FunctionSpace',
    FunctionSetupStyle: 'FunctionSetupStyle',
    TrackItTypeChain: 'TrackItTypeChain',
    TrackItType: 'TrackItType',
    Height: 'Height',
    Width: 'Width'
} as const;
export type ImageCodeType = typeof ImageCodeType[keyof typeof ImageCodeType];


export function ImageCodeTypeFromJSON(json: any): ImageCodeType {
    return ImageCodeTypeFromJSONTyped(json, false);
}

export function ImageCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageCodeType {
    return json as ImageCodeType;
}

export function ImageCodeTypeToJSON(value?: ImageCodeType | null): any {
    return value as any;
}

