"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomizedLetterTypeToJSON = exports.CustomizedLetterTypeFromJSONTyped = exports.CustomizedLetterTypeFromJSON = exports.instanceOfCustomizedLetterType = void 0;
const runtime_1 = require("../runtime");
const UniqueIDType_1 = require("./UniqueIDType");
/**
 * Check if a given object implements the CustomizedLetterType interface.
 */
function instanceOfCustomizedLetterType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCustomizedLetterType = instanceOfCustomizedLetterType;
function CustomizedLetterTypeFromJSON(json) {
    return CustomizedLetterTypeFromJSONTyped(json, false);
}
exports.CustomizedLetterTypeFromJSON = CustomizedLetterTypeFromJSON;
function CustomizedLetterTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'customizedLetter': !(0, runtime_1.exists)(json, 'customizedLetter') ? undefined : json['customizedLetter'],
        'hotelId': !(0, runtime_1.exists)(json, 'hotelId') ? undefined : json['hotelId'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'idContext': !(0, runtime_1.exists)(json, 'idContext') ? undefined : json['idContext'],
        'idExtension': !(0, runtime_1.exists)(json, 'idExtension') ? undefined : json['idExtension'],
        'instance': !(0, runtime_1.exists)(json, 'instance') ? undefined : json['instance'],
        'reservationId': !(0, runtime_1.exists)(json, 'reservationId') ? undefined : (0, UniqueIDType_1.UniqueIDTypeFromJSON)(json['reservationId']),
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'url': !(0, runtime_1.exists)(json, 'url') ? undefined : json['url'],
    };
}
exports.CustomizedLetterTypeFromJSONTyped = CustomizedLetterTypeFromJSONTyped;
function CustomizedLetterTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'customizedLetter': value.customizedLetter,
        'hotelId': value.hotelId,
        'id': value.id,
        'idContext': value.idContext,
        'idExtension': value.idExtension,
        'instance': value.instance,
        'reservationId': (0, UniqueIDType_1.UniqueIDTypeToJSON)(value.reservationId),
        'type': value.type,
        'url': value.url,
    };
}
exports.CustomizedLetterTypeToJSON = CustomizedLetterTypeToJSON;
