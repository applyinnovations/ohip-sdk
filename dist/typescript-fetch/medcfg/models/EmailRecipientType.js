"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailRecipientTypeToJSON = exports.EmailRecipientTypeFromJSONTyped = exports.EmailRecipientTypeFromJSON = exports.instanceOfEmailRecipientType = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the EmailRecipientType interface.
 */
function instanceOfEmailRecipientType(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfEmailRecipientType = instanceOfEmailRecipientType;
function EmailRecipientTypeFromJSON(json) {
    return EmailRecipientTypeFromJSONTyped(json, false);
}
exports.EmailRecipientTypeFromJSON = EmailRecipientTypeFromJSON;
function EmailRecipientTypeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'emailAddress': !(0, runtime_1.exists)(json, 'emailAddress') ? undefined : json['emailAddress'],
    };
}
exports.EmailRecipientTypeFromJSONTyped = EmailRecipientTypeFromJSONTyped;
function EmailRecipientTypeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'emailAddress': value.emailAddress,
    };
}
exports.EmailRecipientTypeToJSON = EmailRecipientTypeToJSON;
