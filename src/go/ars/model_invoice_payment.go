/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the InvoicePayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoicePayment{}

// InvoicePayment struct for InvoicePayment
type InvoicePayment struct {
	Details *ARAccountsInvoicesPaymentsType `json:"details,omitempty"`
	Links *Links `json:"links,omitempty"`
	TrxCodesInfo *TrxCodesInfoType `json:"trxCodesInfo,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewInvoicePayment instantiates a new InvoicePayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoicePayment() *InvoicePayment {
	this := InvoicePayment{}
	return &this
}

// NewInvoicePaymentWithDefaults instantiates a new InvoicePayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoicePaymentWithDefaults() *InvoicePayment {
	this := InvoicePayment{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *InvoicePayment) GetDetails() ARAccountsInvoicesPaymentsType {
	if o == nil || IsNil(o.Details) {
		var ret ARAccountsInvoicesPaymentsType
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoicePayment) GetDetailsOk() (*ARAccountsInvoicesPaymentsType, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *InvoicePayment) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given ARAccountsInvoicesPaymentsType and assigns it to the Details field.
func (o *InvoicePayment) SetDetails(v ARAccountsInvoicesPaymentsType) {
	o.Details = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *InvoicePayment) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoicePayment) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *InvoicePayment) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *InvoicePayment) SetLinks(v Links) {
	o.Links = &v
}

// GetTrxCodesInfo returns the TrxCodesInfo field value if set, zero value otherwise.
func (o *InvoicePayment) GetTrxCodesInfo() TrxCodesInfoType {
	if o == nil || IsNil(o.TrxCodesInfo) {
		var ret TrxCodesInfoType
		return ret
	}
	return *o.TrxCodesInfo
}

// GetTrxCodesInfoOk returns a tuple with the TrxCodesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoicePayment) GetTrxCodesInfoOk() (*TrxCodesInfoType, bool) {
	if o == nil || IsNil(o.TrxCodesInfo) {
		return nil, false
	}
	return o.TrxCodesInfo, true
}

// HasTrxCodesInfo returns a boolean if a field has been set.
func (o *InvoicePayment) HasTrxCodesInfo() bool {
	if o != nil && !IsNil(o.TrxCodesInfo) {
		return true
	}

	return false
}

// SetTrxCodesInfo gets a reference to the given TrxCodesInfoType and assigns it to the TrxCodesInfo field.
func (o *InvoicePayment) SetTrxCodesInfo(v TrxCodesInfoType) {
	o.TrxCodesInfo = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *InvoicePayment) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoicePayment) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *InvoicePayment) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *InvoicePayment) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o InvoicePayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoicePayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.TrxCodesInfo) {
		toSerialize["trxCodesInfo"] = o.TrxCodesInfo
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableInvoicePayment struct {
	value *InvoicePayment
	isSet bool
}

func (v NullableInvoicePayment) Get() *InvoicePayment {
	return v.value
}

func (v *NullableInvoicePayment) Set(val *InvoicePayment) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoicePayment) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoicePayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoicePayment(val *InvoicePayment) *NullableInvoicePayment {
	return &NullableInvoicePayment{value: val, isSet: true}
}

func (v NullableInvoicePayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoicePayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


