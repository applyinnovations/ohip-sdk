/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARTransferPostingsCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARTransferPostingsCriteriaType{}

// ARTransferPostingsCriteriaType struct for ARTransferPostingsCriteriaType
type ARTransferPostingsCriteriaType struct {
	FromInvoice *ARTransferPostingsCriteriaTypeFromInvoice `json:"fromInvoice,omitempty"`
	ToInvoice *ARTransferPostingsCriteriaTypeToInvoice `json:"toInvoice,omitempty"`
}

// NewARTransferPostingsCriteriaType instantiates a new ARTransferPostingsCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARTransferPostingsCriteriaType() *ARTransferPostingsCriteriaType {
	this := ARTransferPostingsCriteriaType{}
	return &this
}

// NewARTransferPostingsCriteriaTypeWithDefaults instantiates a new ARTransferPostingsCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARTransferPostingsCriteriaTypeWithDefaults() *ARTransferPostingsCriteriaType {
	this := ARTransferPostingsCriteriaType{}
	return &this
}

// GetFromInvoice returns the FromInvoice field value if set, zero value otherwise.
func (o *ARTransferPostingsCriteriaType) GetFromInvoice() ARTransferPostingsCriteriaTypeFromInvoice {
	if o == nil || IsNil(o.FromInvoice) {
		var ret ARTransferPostingsCriteriaTypeFromInvoice
		return ret
	}
	return *o.FromInvoice
}

// GetFromInvoiceOk returns a tuple with the FromInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARTransferPostingsCriteriaType) GetFromInvoiceOk() (*ARTransferPostingsCriteriaTypeFromInvoice, bool) {
	if o == nil || IsNil(o.FromInvoice) {
		return nil, false
	}
	return o.FromInvoice, true
}

// HasFromInvoice returns a boolean if a field has been set.
func (o *ARTransferPostingsCriteriaType) HasFromInvoice() bool {
	if o != nil && !IsNil(o.FromInvoice) {
		return true
	}

	return false
}

// SetFromInvoice gets a reference to the given ARTransferPostingsCriteriaTypeFromInvoice and assigns it to the FromInvoice field.
func (o *ARTransferPostingsCriteriaType) SetFromInvoice(v ARTransferPostingsCriteriaTypeFromInvoice) {
	o.FromInvoice = &v
}

// GetToInvoice returns the ToInvoice field value if set, zero value otherwise.
func (o *ARTransferPostingsCriteriaType) GetToInvoice() ARTransferPostingsCriteriaTypeToInvoice {
	if o == nil || IsNil(o.ToInvoice) {
		var ret ARTransferPostingsCriteriaTypeToInvoice
		return ret
	}
	return *o.ToInvoice
}

// GetToInvoiceOk returns a tuple with the ToInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARTransferPostingsCriteriaType) GetToInvoiceOk() (*ARTransferPostingsCriteriaTypeToInvoice, bool) {
	if o == nil || IsNil(o.ToInvoice) {
		return nil, false
	}
	return o.ToInvoice, true
}

// HasToInvoice returns a boolean if a field has been set.
func (o *ARTransferPostingsCriteriaType) HasToInvoice() bool {
	if o != nil && !IsNil(o.ToInvoice) {
		return true
	}

	return false
}

// SetToInvoice gets a reference to the given ARTransferPostingsCriteriaTypeToInvoice and assigns it to the ToInvoice field.
func (o *ARTransferPostingsCriteriaType) SetToInvoice(v ARTransferPostingsCriteriaTypeToInvoice) {
	o.ToInvoice = &v
}

func (o ARTransferPostingsCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARTransferPostingsCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromInvoice) {
		toSerialize["fromInvoice"] = o.FromInvoice
	}
	if !IsNil(o.ToInvoice) {
		toSerialize["toInvoice"] = o.ToInvoice
	}
	return toSerialize, nil
}

type NullableARTransferPostingsCriteriaType struct {
	value *ARTransferPostingsCriteriaType
	isSet bool
}

func (v NullableARTransferPostingsCriteriaType) Get() *ARTransferPostingsCriteriaType {
	return v.value
}

func (v *NullableARTransferPostingsCriteriaType) Set(val *ARTransferPostingsCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableARTransferPostingsCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableARTransferPostingsCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARTransferPostingsCriteriaType(val *ARTransferPostingsCriteriaType) *NullableARTransferPostingsCriteriaType {
	return &NullableARTransferPostingsCriteriaType{value: val, isSet: true}
}

func (v NullableARTransferPostingsCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARTransferPostingsCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


