/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARProfileAgingInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARProfileAgingInfoType{}

// ARProfileAgingInfoType Aging information for a profile. Includes information for the profile for all accounts across properties.
type ARProfileAgingInfoType struct {
	// Aging bucket information for the Property, based on the criteria selected.
	Hotel []ARProfileAgingInfoTypeHotelInner `json:"hotel,omitempty"`
	TotalProfileAging *ARAgingInfoType `json:"totalProfileAging,omitempty"`
}

// NewARProfileAgingInfoType instantiates a new ARProfileAgingInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARProfileAgingInfoType() *ARProfileAgingInfoType {
	this := ARProfileAgingInfoType{}
	return &this
}

// NewARProfileAgingInfoTypeWithDefaults instantiates a new ARProfileAgingInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARProfileAgingInfoTypeWithDefaults() *ARProfileAgingInfoType {
	this := ARProfileAgingInfoType{}
	return &this
}

// GetHotel returns the Hotel field value if set, zero value otherwise.
func (o *ARProfileAgingInfoType) GetHotel() []ARProfileAgingInfoTypeHotelInner {
	if o == nil || IsNil(o.Hotel) {
		var ret []ARProfileAgingInfoTypeHotelInner
		return ret
	}
	return o.Hotel
}

// GetHotelOk returns a tuple with the Hotel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARProfileAgingInfoType) GetHotelOk() ([]ARProfileAgingInfoTypeHotelInner, bool) {
	if o == nil || IsNil(o.Hotel) {
		return nil, false
	}
	return o.Hotel, true
}

// HasHotel returns a boolean if a field has been set.
func (o *ARProfileAgingInfoType) HasHotel() bool {
	if o != nil && !IsNil(o.Hotel) {
		return true
	}

	return false
}

// SetHotel gets a reference to the given []ARProfileAgingInfoTypeHotelInner and assigns it to the Hotel field.
func (o *ARProfileAgingInfoType) SetHotel(v []ARProfileAgingInfoTypeHotelInner) {
	o.Hotel = v
}

// GetTotalProfileAging returns the TotalProfileAging field value if set, zero value otherwise.
func (o *ARProfileAgingInfoType) GetTotalProfileAging() ARAgingInfoType {
	if o == nil || IsNil(o.TotalProfileAging) {
		var ret ARAgingInfoType
		return ret
	}
	return *o.TotalProfileAging
}

// GetTotalProfileAgingOk returns a tuple with the TotalProfileAging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARProfileAgingInfoType) GetTotalProfileAgingOk() (*ARAgingInfoType, bool) {
	if o == nil || IsNil(o.TotalProfileAging) {
		return nil, false
	}
	return o.TotalProfileAging, true
}

// HasTotalProfileAging returns a boolean if a field has been set.
func (o *ARProfileAgingInfoType) HasTotalProfileAging() bool {
	if o != nil && !IsNil(o.TotalProfileAging) {
		return true
	}

	return false
}

// SetTotalProfileAging gets a reference to the given ARAgingInfoType and assigns it to the TotalProfileAging field.
func (o *ARProfileAgingInfoType) SetTotalProfileAging(v ARAgingInfoType) {
	o.TotalProfileAging = &v
}

func (o ARProfileAgingInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARProfileAgingInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hotel) {
		toSerialize["hotel"] = o.Hotel
	}
	if !IsNil(o.TotalProfileAging) {
		toSerialize["totalProfileAging"] = o.TotalProfileAging
	}
	return toSerialize, nil
}

type NullableARProfileAgingInfoType struct {
	value *ARProfileAgingInfoType
	isSet bool
}

func (v NullableARProfileAgingInfoType) Get() *ARProfileAgingInfoType {
	return v.value
}

func (v *NullableARProfileAgingInfoType) Set(val *ARProfileAgingInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableARProfileAgingInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableARProfileAgingInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARProfileAgingInfoType(val *ARProfileAgingInfoType) *NullableARProfileAgingInfoType {
	return &NullableARProfileAgingInfoType{value: val, isSet: true}
}

func (v NullableARProfileAgingInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARProfileAgingInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


