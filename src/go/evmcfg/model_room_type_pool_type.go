/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the RoomTypePoolType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomTypePoolType{}

// RoomTypePoolType This type represents complete information of room type pool and Associated Room Type(s).
type RoomTypePoolType struct {
	AssociatedRoomTypes *RoomPoolRoomTypesType `json:"associatedRoomTypes,omitempty"`
	// The description of room pool type.
	Description *string `json:"description,omitempty"`
	// Hotel Code where room pool belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// Room type pool Code.
	RoomTypePoolCode *string `json:"roomTypePoolCode,omitempty"`
	// Sequence for representing room type pool record.
	Sequence *int32 `json:"sequence,omitempty"`
	ShortDescription *TranslationTextType1000 `json:"shortDescription,omitempty"`
}

// NewRoomTypePoolType instantiates a new RoomTypePoolType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomTypePoolType() *RoomTypePoolType {
	this := RoomTypePoolType{}
	return &this
}

// NewRoomTypePoolTypeWithDefaults instantiates a new RoomTypePoolType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomTypePoolTypeWithDefaults() *RoomTypePoolType {
	this := RoomTypePoolType{}
	return &this
}

// GetAssociatedRoomTypes returns the AssociatedRoomTypes field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetAssociatedRoomTypes() RoomPoolRoomTypesType {
	if o == nil || IsNil(o.AssociatedRoomTypes) {
		var ret RoomPoolRoomTypesType
		return ret
	}
	return *o.AssociatedRoomTypes
}

// GetAssociatedRoomTypesOk returns a tuple with the AssociatedRoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetAssociatedRoomTypesOk() (*RoomPoolRoomTypesType, bool) {
	if o == nil || IsNil(o.AssociatedRoomTypes) {
		return nil, false
	}
	return o.AssociatedRoomTypes, true
}

// HasAssociatedRoomTypes returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasAssociatedRoomTypes() bool {
	if o != nil && !IsNil(o.AssociatedRoomTypes) {
		return true
	}

	return false
}

// SetAssociatedRoomTypes gets a reference to the given RoomPoolRoomTypesType and assigns it to the AssociatedRoomTypes field.
func (o *RoomTypePoolType) SetAssociatedRoomTypes(v RoomPoolRoomTypesType) {
	o.AssociatedRoomTypes = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoomTypePoolType) SetDescription(v string) {
	o.Description = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RoomTypePoolType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRoomTypePoolCode returns the RoomTypePoolCode field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetRoomTypePoolCode() string {
	if o == nil || IsNil(o.RoomTypePoolCode) {
		var ret string
		return ret
	}
	return *o.RoomTypePoolCode
}

// GetRoomTypePoolCodeOk returns a tuple with the RoomTypePoolCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetRoomTypePoolCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomTypePoolCode) {
		return nil, false
	}
	return o.RoomTypePoolCode, true
}

// HasRoomTypePoolCode returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasRoomTypePoolCode() bool {
	if o != nil && !IsNil(o.RoomTypePoolCode) {
		return true
	}

	return false
}

// SetRoomTypePoolCode gets a reference to the given string and assigns it to the RoomTypePoolCode field.
func (o *RoomTypePoolType) SetRoomTypePoolCode(v string) {
	o.RoomTypePoolCode = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *RoomTypePoolType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *RoomTypePoolType) GetShortDescription() TranslationTextType1000 {
	if o == nil || IsNil(o.ShortDescription) {
		var ret TranslationTextType1000
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypePoolType) GetShortDescriptionOk() (*TranslationTextType1000, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *RoomTypePoolType) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given TranslationTextType1000 and assigns it to the ShortDescription field.
func (o *RoomTypePoolType) SetShortDescription(v TranslationTextType1000) {
	o.ShortDescription = &v
}

func (o RoomTypePoolType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomTypePoolType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociatedRoomTypes) {
		toSerialize["associatedRoomTypes"] = o.AssociatedRoomTypes
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RoomTypePoolCode) {
		toSerialize["roomTypePoolCode"] = o.RoomTypePoolCode
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	return toSerialize, nil
}

type NullableRoomTypePoolType struct {
	value *RoomTypePoolType
	isSet bool
}

func (v NullableRoomTypePoolType) Get() *RoomTypePoolType {
	return v.value
}

func (v *NullableRoomTypePoolType) Set(val *RoomTypePoolType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomTypePoolType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomTypePoolType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomTypePoolType(val *RoomTypePoolType) *NullableRoomTypePoolType {
	return &NullableRoomTypePoolType{value: val, isSet: true}
}

func (v NullableRoomTypePoolType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomTypePoolType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


