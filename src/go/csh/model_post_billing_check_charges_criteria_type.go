/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the PostBillingCheckChargesCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostBillingCheckChargesCriteriaType{}

// PostBillingCheckChargesCriteriaType Details of the check with line item charges to post to a guest folio.
type PostBillingCheckChargesCriteriaType struct {
	// Cashier Id of the Cashier.
	CashierId *float32 `json:"cashierId,omitempty"`
	CheckId *UniqueIDType `json:"checkId,omitempty"`
	// Indicates the check number.
	CheckNumber *string `json:"checkNumber,omitempty"`
	// Hotel code.
	HotelId *string `json:"hotelId,omitempty"`
	Items *PostBillingCheckChargesItemsCriteriaType `json:"items,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// The date against which charges are posted.
	RevenueDate *string `json:"revenueDate,omitempty"`
}

// NewPostBillingCheckChargesCriteriaType instantiates a new PostBillingCheckChargesCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostBillingCheckChargesCriteriaType() *PostBillingCheckChargesCriteriaType {
	this := PostBillingCheckChargesCriteriaType{}
	return &this
}

// NewPostBillingCheckChargesCriteriaTypeWithDefaults instantiates a new PostBillingCheckChargesCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostBillingCheckChargesCriteriaTypeWithDefaults() *PostBillingCheckChargesCriteriaType {
	this := PostBillingCheckChargesCriteriaType{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *PostBillingCheckChargesCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetCheckId returns the CheckId field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetCheckId() UniqueIDType {
	if o == nil || IsNil(o.CheckId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CheckId
}

// GetCheckIdOk returns a tuple with the CheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetCheckIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CheckId) {
		return nil, false
	}
	return o.CheckId, true
}

// HasCheckId returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasCheckId() bool {
	if o != nil && !IsNil(o.CheckId) {
		return true
	}

	return false
}

// SetCheckId gets a reference to the given UniqueIDType and assigns it to the CheckId field.
func (o *PostBillingCheckChargesCriteriaType) SetCheckId(v UniqueIDType) {
	o.CheckId = &v
}

// GetCheckNumber returns the CheckNumber field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetCheckNumber() string {
	if o == nil || IsNil(o.CheckNumber) {
		var ret string
		return ret
	}
	return *o.CheckNumber
}

// GetCheckNumberOk returns a tuple with the CheckNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetCheckNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNumber) {
		return nil, false
	}
	return o.CheckNumber, true
}

// HasCheckNumber returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasCheckNumber() bool {
	if o != nil && !IsNil(o.CheckNumber) {
		return true
	}

	return false
}

// SetCheckNumber gets a reference to the given string and assigns it to the CheckNumber field.
func (o *PostBillingCheckChargesCriteriaType) SetCheckNumber(v string) {
	o.CheckNumber = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PostBillingCheckChargesCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetItems() PostBillingCheckChargesItemsCriteriaType {
	if o == nil || IsNil(o.Items) {
		var ret PostBillingCheckChargesItemsCriteriaType
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetItemsOk() (*PostBillingCheckChargesItemsCriteriaType, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given PostBillingCheckChargesItemsCriteriaType and assigns it to the Items field.
func (o *PostBillingCheckChargesCriteriaType) SetItems(v PostBillingCheckChargesItemsCriteriaType) {
	o.Items = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *PostBillingCheckChargesCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRevenueDate returns the RevenueDate field value if set, zero value otherwise.
func (o *PostBillingCheckChargesCriteriaType) GetRevenueDate() string {
	if o == nil || IsNil(o.RevenueDate) {
		var ret string
		return ret
	}
	return *o.RevenueDate
}

// GetRevenueDateOk returns a tuple with the RevenueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBillingCheckChargesCriteriaType) GetRevenueDateOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueDate) {
		return nil, false
	}
	return o.RevenueDate, true
}

// HasRevenueDate returns a boolean if a field has been set.
func (o *PostBillingCheckChargesCriteriaType) HasRevenueDate() bool {
	if o != nil && !IsNil(o.RevenueDate) {
		return true
	}

	return false
}

// SetRevenueDate gets a reference to the given string and assigns it to the RevenueDate field.
func (o *PostBillingCheckChargesCriteriaType) SetRevenueDate(v string) {
	o.RevenueDate = &v
}

func (o PostBillingCheckChargesCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostBillingCheckChargesCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.CheckId) {
		toSerialize["checkId"] = o.CheckId
	}
	if !IsNil(o.CheckNumber) {
		toSerialize["checkNumber"] = o.CheckNumber
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.RevenueDate) {
		toSerialize["revenueDate"] = o.RevenueDate
	}
	return toSerialize, nil
}

type NullablePostBillingCheckChargesCriteriaType struct {
	value *PostBillingCheckChargesCriteriaType
	isSet bool
}

func (v NullablePostBillingCheckChargesCriteriaType) Get() *PostBillingCheckChargesCriteriaType {
	return v.value
}

func (v *NullablePostBillingCheckChargesCriteriaType) Set(val *PostBillingCheckChargesCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBillingCheckChargesCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBillingCheckChargesCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBillingCheckChargesCriteriaType(val *PostBillingCheckChargesCriteriaType) *NullablePostBillingCheckChargesCriteriaType {
	return &NullablePostBillingCheckChargesCriteriaType{value: val, isSet: true}
}

func (v NullablePostBillingCheckChargesCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBillingCheckChargesCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


