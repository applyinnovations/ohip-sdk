/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the EarlyDepartureCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EarlyDepartureCriteriaType{}

// EarlyDepartureCriteriaType Criteria type for verifying or changing an Early Departure reservation.
type EarlyDepartureCriteriaType struct {
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	// Indicates if check has to be done for Rate Tiers.
	IgnoreCheckOnTieredRate *bool `json:"ignoreCheckOnTieredRate,omitempty"`
	// Indicates if Rate Restriction check should be overridden.
	IgnoreRateRestriction *bool `json:"ignoreRateRestriction,omitempty"`
	// Indicates if any allowance consumed by the guest for today can be posted to the Guest Folio. If this cannot be done then the Early Departure cannot proceed.
	PostConsumedAllowanceToGuest *bool `json:"postConsumedAllowanceToGuest,omitempty"`
	// Indicates if the early departure penalty should be posted .
	PostEarlyDeparturePenalty *bool `json:"postEarlyDeparturePenalty,omitempty"`
	ReservationIdList *ReservationIdList `json:"reservationIdList,omitempty"`
}

// NewEarlyDepartureCriteriaType instantiates a new EarlyDepartureCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEarlyDepartureCriteriaType() *EarlyDepartureCriteriaType {
	this := EarlyDepartureCriteriaType{}
	return &this
}

// NewEarlyDepartureCriteriaTypeWithDefaults instantiates a new EarlyDepartureCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEarlyDepartureCriteriaTypeWithDefaults() *EarlyDepartureCriteriaType {
	this := EarlyDepartureCriteriaType{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *EarlyDepartureCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *EarlyDepartureCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIgnoreCheckOnTieredRate returns the IgnoreCheckOnTieredRate field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetIgnoreCheckOnTieredRate() bool {
	if o == nil || IsNil(o.IgnoreCheckOnTieredRate) {
		var ret bool
		return ret
	}
	return *o.IgnoreCheckOnTieredRate
}

// GetIgnoreCheckOnTieredRateOk returns a tuple with the IgnoreCheckOnTieredRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetIgnoreCheckOnTieredRateOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreCheckOnTieredRate) {
		return nil, false
	}
	return o.IgnoreCheckOnTieredRate, true
}

// HasIgnoreCheckOnTieredRate returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasIgnoreCheckOnTieredRate() bool {
	if o != nil && !IsNil(o.IgnoreCheckOnTieredRate) {
		return true
	}

	return false
}

// SetIgnoreCheckOnTieredRate gets a reference to the given bool and assigns it to the IgnoreCheckOnTieredRate field.
func (o *EarlyDepartureCriteriaType) SetIgnoreCheckOnTieredRate(v bool) {
	o.IgnoreCheckOnTieredRate = &v
}

// GetIgnoreRateRestriction returns the IgnoreRateRestriction field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetIgnoreRateRestriction() bool {
	if o == nil || IsNil(o.IgnoreRateRestriction) {
		var ret bool
		return ret
	}
	return *o.IgnoreRateRestriction
}

// GetIgnoreRateRestrictionOk returns a tuple with the IgnoreRateRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetIgnoreRateRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreRateRestriction) {
		return nil, false
	}
	return o.IgnoreRateRestriction, true
}

// HasIgnoreRateRestriction returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasIgnoreRateRestriction() bool {
	if o != nil && !IsNil(o.IgnoreRateRestriction) {
		return true
	}

	return false
}

// SetIgnoreRateRestriction gets a reference to the given bool and assigns it to the IgnoreRateRestriction field.
func (o *EarlyDepartureCriteriaType) SetIgnoreRateRestriction(v bool) {
	o.IgnoreRateRestriction = &v
}

// GetPostConsumedAllowanceToGuest returns the PostConsumedAllowanceToGuest field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetPostConsumedAllowanceToGuest() bool {
	if o == nil || IsNil(o.PostConsumedAllowanceToGuest) {
		var ret bool
		return ret
	}
	return *o.PostConsumedAllowanceToGuest
}

// GetPostConsumedAllowanceToGuestOk returns a tuple with the PostConsumedAllowanceToGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetPostConsumedAllowanceToGuestOk() (*bool, bool) {
	if o == nil || IsNil(o.PostConsumedAllowanceToGuest) {
		return nil, false
	}
	return o.PostConsumedAllowanceToGuest, true
}

// HasPostConsumedAllowanceToGuest returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasPostConsumedAllowanceToGuest() bool {
	if o != nil && !IsNil(o.PostConsumedAllowanceToGuest) {
		return true
	}

	return false
}

// SetPostConsumedAllowanceToGuest gets a reference to the given bool and assigns it to the PostConsumedAllowanceToGuest field.
func (o *EarlyDepartureCriteriaType) SetPostConsumedAllowanceToGuest(v bool) {
	o.PostConsumedAllowanceToGuest = &v
}

// GetPostEarlyDeparturePenalty returns the PostEarlyDeparturePenalty field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetPostEarlyDeparturePenalty() bool {
	if o == nil || IsNil(o.PostEarlyDeparturePenalty) {
		var ret bool
		return ret
	}
	return *o.PostEarlyDeparturePenalty
}

// GetPostEarlyDeparturePenaltyOk returns a tuple with the PostEarlyDeparturePenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetPostEarlyDeparturePenaltyOk() (*bool, bool) {
	if o == nil || IsNil(o.PostEarlyDeparturePenalty) {
		return nil, false
	}
	return o.PostEarlyDeparturePenalty, true
}

// HasPostEarlyDeparturePenalty returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasPostEarlyDeparturePenalty() bool {
	if o != nil && !IsNil(o.PostEarlyDeparturePenalty) {
		return true
	}

	return false
}

// SetPostEarlyDeparturePenalty gets a reference to the given bool and assigns it to the PostEarlyDeparturePenalty field.
func (o *EarlyDepartureCriteriaType) SetPostEarlyDeparturePenalty(v bool) {
	o.PostEarlyDeparturePenalty = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *EarlyDepartureCriteriaType) GetReservationIdList() ReservationIdList {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret ReservationIdList
		return ret
	}
	return *o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EarlyDepartureCriteriaType) GetReservationIdListOk() (*ReservationIdList, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *EarlyDepartureCriteriaType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given ReservationIdList and assigns it to the ReservationIdList field.
func (o *EarlyDepartureCriteriaType) SetReservationIdList(v ReservationIdList) {
	o.ReservationIdList = &v
}

func (o EarlyDepartureCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EarlyDepartureCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.IgnoreCheckOnTieredRate) {
		toSerialize["ignoreCheckOnTieredRate"] = o.IgnoreCheckOnTieredRate
	}
	if !IsNil(o.IgnoreRateRestriction) {
		toSerialize["ignoreRateRestriction"] = o.IgnoreRateRestriction
	}
	if !IsNil(o.PostConsumedAllowanceToGuest) {
		toSerialize["postConsumedAllowanceToGuest"] = o.PostConsumedAllowanceToGuest
	}
	if !IsNil(o.PostEarlyDeparturePenalty) {
		toSerialize["postEarlyDeparturePenalty"] = o.PostEarlyDeparturePenalty
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	return toSerialize, nil
}

type NullableEarlyDepartureCriteriaType struct {
	value *EarlyDepartureCriteriaType
	isSet bool
}

func (v NullableEarlyDepartureCriteriaType) Get() *EarlyDepartureCriteriaType {
	return v.value
}

func (v *NullableEarlyDepartureCriteriaType) Set(val *EarlyDepartureCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableEarlyDepartureCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableEarlyDepartureCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEarlyDepartureCriteriaType(val *EarlyDepartureCriteriaType) *NullableEarlyDepartureCriteriaType {
	return &NullableEarlyDepartureCriteriaType{value: val, isSet: true}
}

func (v NullableEarlyDepartureCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEarlyDepartureCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


