/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the FolioWindowType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioWindowType{}

// FolioWindowType A folio window view which holds the set of folios for a reservation.
type FolioWindowType struct {
	// Flag to indicate if an Acknowledgement Receipt is generated for the folio window. Applicable only in the Philippines.
	AckBIRReceiptExists *bool `json:"ackBIRReceiptExists,omitempty"`
	Balance *CurrencyAmountType `json:"balance,omitempty"`
	CompAccountingInfo *CompAccountingType `json:"compAccountingInfo,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
	DebitBalance *CurrencyAmountType `json:"debitBalance,omitempty"`
	DebitPayment *CurrencyAmountType `json:"debitPayment,omitempty"`
	DebitRevenue *CurrencyAmountType `json:"debitRevenue,omitempty"`
	// Flag to notify if the current folio has any postings.
	EmptyFolio *bool `json:"emptyFolio,omitempty"`
	// Flag to notify if the entire window has any postings.
	EmptyWindow *bool `json:"emptyWindow,omitempty"`
	Exchange *FolioWindowExchangeAmounts `json:"exchange,omitempty"`
	FiscalFolioInstruction *FiscalFolioInstruction `json:"fiscalFolioInstruction,omitempty"`
	FiscalResponseType *FiscalResponseType `json:"fiscalResponseType,omitempty"`
	// Contains the folio split posting information.
	FolioSplitInfo []FolioSplitInfoType `json:"folioSplitInfo,omitempty"`
	FolioWindowNo *int32 `json:"folioWindowNo,omitempty"`
	Folios []FolioType `json:"folios,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Internal window ID which is unique to the reservation. This ID can only be used for reference.
	InternalFolioWindowID *string `json:"internalFolioWindowID,omitempty"`
	// Indicates maximum number of records a Web Service should return.
	Limit *int32 `json:"limit,omitempty"`
	// Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.
	OfficialBIRReceiptExists *bool `json:"officialBIRReceiptExists,omitempty"`
	// Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
	Offset *int32 `json:"offset,omitempty"`
	PayeeInfo *PayeeInfoType `json:"payeeInfo,omitempty"`
	Payment *CurrencyAmountType `json:"payment,omitempty"`
	PaymentMethod *ReservationPaymentMethodType `json:"paymentMethod,omitempty"`
	// The receipt number of the transaction, if there is a receipt generated.
	ReceiptNo *float32 `json:"receiptNo,omitempty"`
	Revenue *CurrencyAmountType `json:"revenue,omitempty"`
	ServiceTypeInfo *TransactionServiceTypesType `json:"serviceTypeInfo,omitempty"`
	// This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.
	SimpleFolio *bool `json:"simpleFolio,omitempty"`
	StoredFolioId *UniqueIDType `json:"storedFolioId,omitempty"`
	// Name of the Stored Folio.
	StoredFolioName *string `json:"storedFolioName,omitempty"`
	// Evaluated total page count based on the requested max fetch count.
	TotalPages *int32 `json:"totalPages,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Unique Transaction Identifier.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
	VATOffsetAmount *CurrencyAmountType `json:"vATOffsetAmount,omitempty"`
}

// NewFolioWindowType instantiates a new FolioWindowType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioWindowType() *FolioWindowType {
	this := FolioWindowType{}
	return &this
}

// NewFolioWindowTypeWithDefaults instantiates a new FolioWindowType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioWindowTypeWithDefaults() *FolioWindowType {
	this := FolioWindowType{}
	return &this
}

// GetAckBIRReceiptExists returns the AckBIRReceiptExists field value if set, zero value otherwise.
func (o *FolioWindowType) GetAckBIRReceiptExists() bool {
	if o == nil || IsNil(o.AckBIRReceiptExists) {
		var ret bool
		return ret
	}
	return *o.AckBIRReceiptExists
}

// GetAckBIRReceiptExistsOk returns a tuple with the AckBIRReceiptExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetAckBIRReceiptExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.AckBIRReceiptExists) {
		return nil, false
	}
	return o.AckBIRReceiptExists, true
}

// HasAckBIRReceiptExists returns a boolean if a field has been set.
func (o *FolioWindowType) HasAckBIRReceiptExists() bool {
	if o != nil && !IsNil(o.AckBIRReceiptExists) {
		return true
	}

	return false
}

// SetAckBIRReceiptExists gets a reference to the given bool and assigns it to the AckBIRReceiptExists field.
func (o *FolioWindowType) SetAckBIRReceiptExists(v bool) {
	o.AckBIRReceiptExists = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *FolioWindowType) GetBalance() CurrencyAmountType {
	if o == nil || IsNil(o.Balance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *FolioWindowType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given CurrencyAmountType and assigns it to the Balance field.
func (o *FolioWindowType) SetBalance(v CurrencyAmountType) {
	o.Balance = &v
}

// GetCompAccountingInfo returns the CompAccountingInfo field value if set, zero value otherwise.
func (o *FolioWindowType) GetCompAccountingInfo() CompAccountingType {
	if o == nil || IsNil(o.CompAccountingInfo) {
		var ret CompAccountingType
		return ret
	}
	return *o.CompAccountingInfo
}

// GetCompAccountingInfoOk returns a tuple with the CompAccountingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetCompAccountingInfoOk() (*CompAccountingType, bool) {
	if o == nil || IsNil(o.CompAccountingInfo) {
		return nil, false
	}
	return o.CompAccountingInfo, true
}

// HasCompAccountingInfo returns a boolean if a field has been set.
func (o *FolioWindowType) HasCompAccountingInfo() bool {
	if o != nil && !IsNil(o.CompAccountingInfo) {
		return true
	}

	return false
}

// SetCompAccountingInfo gets a reference to the given CompAccountingType and assigns it to the CompAccountingInfo field.
func (o *FolioWindowType) SetCompAccountingInfo(v CompAccountingType) {
	o.CompAccountingInfo = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *FolioWindowType) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *FolioWindowType) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *FolioWindowType) SetCount(v int32) {
	o.Count = &v
}

// GetDebitBalance returns the DebitBalance field value if set, zero value otherwise.
func (o *FolioWindowType) GetDebitBalance() CurrencyAmountType {
	if o == nil || IsNil(o.DebitBalance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DebitBalance
}

// GetDebitBalanceOk returns a tuple with the DebitBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetDebitBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DebitBalance) {
		return nil, false
	}
	return o.DebitBalance, true
}

// HasDebitBalance returns a boolean if a field has been set.
func (o *FolioWindowType) HasDebitBalance() bool {
	if o != nil && !IsNil(o.DebitBalance) {
		return true
	}

	return false
}

// SetDebitBalance gets a reference to the given CurrencyAmountType and assigns it to the DebitBalance field.
func (o *FolioWindowType) SetDebitBalance(v CurrencyAmountType) {
	o.DebitBalance = &v
}

// GetDebitPayment returns the DebitPayment field value if set, zero value otherwise.
func (o *FolioWindowType) GetDebitPayment() CurrencyAmountType {
	if o == nil || IsNil(o.DebitPayment) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DebitPayment
}

// GetDebitPaymentOk returns a tuple with the DebitPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetDebitPaymentOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DebitPayment) {
		return nil, false
	}
	return o.DebitPayment, true
}

// HasDebitPayment returns a boolean if a field has been set.
func (o *FolioWindowType) HasDebitPayment() bool {
	if o != nil && !IsNil(o.DebitPayment) {
		return true
	}

	return false
}

// SetDebitPayment gets a reference to the given CurrencyAmountType and assigns it to the DebitPayment field.
func (o *FolioWindowType) SetDebitPayment(v CurrencyAmountType) {
	o.DebitPayment = &v
}

// GetDebitRevenue returns the DebitRevenue field value if set, zero value otherwise.
func (o *FolioWindowType) GetDebitRevenue() CurrencyAmountType {
	if o == nil || IsNil(o.DebitRevenue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DebitRevenue
}

// GetDebitRevenueOk returns a tuple with the DebitRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetDebitRevenueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DebitRevenue) {
		return nil, false
	}
	return o.DebitRevenue, true
}

// HasDebitRevenue returns a boolean if a field has been set.
func (o *FolioWindowType) HasDebitRevenue() bool {
	if o != nil && !IsNil(o.DebitRevenue) {
		return true
	}

	return false
}

// SetDebitRevenue gets a reference to the given CurrencyAmountType and assigns it to the DebitRevenue field.
func (o *FolioWindowType) SetDebitRevenue(v CurrencyAmountType) {
	o.DebitRevenue = &v
}

// GetEmptyFolio returns the EmptyFolio field value if set, zero value otherwise.
func (o *FolioWindowType) GetEmptyFolio() bool {
	if o == nil || IsNil(o.EmptyFolio) {
		var ret bool
		return ret
	}
	return *o.EmptyFolio
}

// GetEmptyFolioOk returns a tuple with the EmptyFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetEmptyFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.EmptyFolio) {
		return nil, false
	}
	return o.EmptyFolio, true
}

// HasEmptyFolio returns a boolean if a field has been set.
func (o *FolioWindowType) HasEmptyFolio() bool {
	if o != nil && !IsNil(o.EmptyFolio) {
		return true
	}

	return false
}

// SetEmptyFolio gets a reference to the given bool and assigns it to the EmptyFolio field.
func (o *FolioWindowType) SetEmptyFolio(v bool) {
	o.EmptyFolio = &v
}

// GetEmptyWindow returns the EmptyWindow field value if set, zero value otherwise.
func (o *FolioWindowType) GetEmptyWindow() bool {
	if o == nil || IsNil(o.EmptyWindow) {
		var ret bool
		return ret
	}
	return *o.EmptyWindow
}

// GetEmptyWindowOk returns a tuple with the EmptyWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetEmptyWindowOk() (*bool, bool) {
	if o == nil || IsNil(o.EmptyWindow) {
		return nil, false
	}
	return o.EmptyWindow, true
}

// HasEmptyWindow returns a boolean if a field has been set.
func (o *FolioWindowType) HasEmptyWindow() bool {
	if o != nil && !IsNil(o.EmptyWindow) {
		return true
	}

	return false
}

// SetEmptyWindow gets a reference to the given bool and assigns it to the EmptyWindow field.
func (o *FolioWindowType) SetEmptyWindow(v bool) {
	o.EmptyWindow = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *FolioWindowType) GetExchange() FolioWindowExchangeAmounts {
	if o == nil || IsNil(o.Exchange) {
		var ret FolioWindowExchangeAmounts
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetExchangeOk() (*FolioWindowExchangeAmounts, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *FolioWindowType) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given FolioWindowExchangeAmounts and assigns it to the Exchange field.
func (o *FolioWindowType) SetExchange(v FolioWindowExchangeAmounts) {
	o.Exchange = &v
}

// GetFiscalFolioInstruction returns the FiscalFolioInstruction field value if set, zero value otherwise.
func (o *FolioWindowType) GetFiscalFolioInstruction() FiscalFolioInstruction {
	if o == nil || IsNil(o.FiscalFolioInstruction) {
		var ret FiscalFolioInstruction
		return ret
	}
	return *o.FiscalFolioInstruction
}

// GetFiscalFolioInstructionOk returns a tuple with the FiscalFolioInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetFiscalFolioInstructionOk() (*FiscalFolioInstruction, bool) {
	if o == nil || IsNil(o.FiscalFolioInstruction) {
		return nil, false
	}
	return o.FiscalFolioInstruction, true
}

// HasFiscalFolioInstruction returns a boolean if a field has been set.
func (o *FolioWindowType) HasFiscalFolioInstruction() bool {
	if o != nil && !IsNil(o.FiscalFolioInstruction) {
		return true
	}

	return false
}

// SetFiscalFolioInstruction gets a reference to the given FiscalFolioInstruction and assigns it to the FiscalFolioInstruction field.
func (o *FolioWindowType) SetFiscalFolioInstruction(v FiscalFolioInstruction) {
	o.FiscalFolioInstruction = &v
}

// GetFiscalResponseType returns the FiscalResponseType field value if set, zero value otherwise.
func (o *FolioWindowType) GetFiscalResponseType() FiscalResponseType {
	if o == nil || IsNil(o.FiscalResponseType) {
		var ret FiscalResponseType
		return ret
	}
	return *o.FiscalResponseType
}

// GetFiscalResponseTypeOk returns a tuple with the FiscalResponseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetFiscalResponseTypeOk() (*FiscalResponseType, bool) {
	if o == nil || IsNil(o.FiscalResponseType) {
		return nil, false
	}
	return o.FiscalResponseType, true
}

// HasFiscalResponseType returns a boolean if a field has been set.
func (o *FolioWindowType) HasFiscalResponseType() bool {
	if o != nil && !IsNil(o.FiscalResponseType) {
		return true
	}

	return false
}

// SetFiscalResponseType gets a reference to the given FiscalResponseType and assigns it to the FiscalResponseType field.
func (o *FolioWindowType) SetFiscalResponseType(v FiscalResponseType) {
	o.FiscalResponseType = &v
}

// GetFolioSplitInfo returns the FolioSplitInfo field value if set, zero value otherwise.
func (o *FolioWindowType) GetFolioSplitInfo() []FolioSplitInfoType {
	if o == nil || IsNil(o.FolioSplitInfo) {
		var ret []FolioSplitInfoType
		return ret
	}
	return o.FolioSplitInfo
}

// GetFolioSplitInfoOk returns a tuple with the FolioSplitInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetFolioSplitInfoOk() ([]FolioSplitInfoType, bool) {
	if o == nil || IsNil(o.FolioSplitInfo) {
		return nil, false
	}
	return o.FolioSplitInfo, true
}

// HasFolioSplitInfo returns a boolean if a field has been set.
func (o *FolioWindowType) HasFolioSplitInfo() bool {
	if o != nil && !IsNil(o.FolioSplitInfo) {
		return true
	}

	return false
}

// SetFolioSplitInfo gets a reference to the given []FolioSplitInfoType and assigns it to the FolioSplitInfo field.
func (o *FolioWindowType) SetFolioSplitInfo(v []FolioSplitInfoType) {
	o.FolioSplitInfo = v
}

// GetFolioWindowNo returns the FolioWindowNo field value if set, zero value otherwise.
func (o *FolioWindowType) GetFolioWindowNo() int32 {
	if o == nil || IsNil(o.FolioWindowNo) {
		var ret int32
		return ret
	}
	return *o.FolioWindowNo
}

// GetFolioWindowNoOk returns a tuple with the FolioWindowNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetFolioWindowNoOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioWindowNo) {
		return nil, false
	}
	return o.FolioWindowNo, true
}

// HasFolioWindowNo returns a boolean if a field has been set.
func (o *FolioWindowType) HasFolioWindowNo() bool {
	if o != nil && !IsNil(o.FolioWindowNo) {
		return true
	}

	return false
}

// SetFolioWindowNo gets a reference to the given int32 and assigns it to the FolioWindowNo field.
func (o *FolioWindowType) SetFolioWindowNo(v int32) {
	o.FolioWindowNo = &v
}

// GetFolios returns the Folios field value if set, zero value otherwise.
func (o *FolioWindowType) GetFolios() []FolioType {
	if o == nil || IsNil(o.Folios) {
		var ret []FolioType
		return ret
	}
	return o.Folios
}

// GetFoliosOk returns a tuple with the Folios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetFoliosOk() ([]FolioType, bool) {
	if o == nil || IsNil(o.Folios) {
		return nil, false
	}
	return o.Folios, true
}

// HasFolios returns a boolean if a field has been set.
func (o *FolioWindowType) HasFolios() bool {
	if o != nil && !IsNil(o.Folios) {
		return true
	}

	return false
}

// SetFolios gets a reference to the given []FolioType and assigns it to the Folios field.
func (o *FolioWindowType) SetFolios(v []FolioType) {
	o.Folios = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *FolioWindowType) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *FolioWindowType) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *FolioWindowType) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetInternalFolioWindowID returns the InternalFolioWindowID field value if set, zero value otherwise.
func (o *FolioWindowType) GetInternalFolioWindowID() string {
	if o == nil || IsNil(o.InternalFolioWindowID) {
		var ret string
		return ret
	}
	return *o.InternalFolioWindowID
}

// GetInternalFolioWindowIDOk returns a tuple with the InternalFolioWindowID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetInternalFolioWindowIDOk() (*string, bool) {
	if o == nil || IsNil(o.InternalFolioWindowID) {
		return nil, false
	}
	return o.InternalFolioWindowID, true
}

// HasInternalFolioWindowID returns a boolean if a field has been set.
func (o *FolioWindowType) HasInternalFolioWindowID() bool {
	if o != nil && !IsNil(o.InternalFolioWindowID) {
		return true
	}

	return false
}

// SetInternalFolioWindowID gets a reference to the given string and assigns it to the InternalFolioWindowID field.
func (o *FolioWindowType) SetInternalFolioWindowID(v string) {
	o.InternalFolioWindowID = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *FolioWindowType) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *FolioWindowType) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *FolioWindowType) SetLimit(v int32) {
	o.Limit = &v
}

// GetOfficialBIRReceiptExists returns the OfficialBIRReceiptExists field value if set, zero value otherwise.
func (o *FolioWindowType) GetOfficialBIRReceiptExists() bool {
	if o == nil || IsNil(o.OfficialBIRReceiptExists) {
		var ret bool
		return ret
	}
	return *o.OfficialBIRReceiptExists
}

// GetOfficialBIRReceiptExistsOk returns a tuple with the OfficialBIRReceiptExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetOfficialBIRReceiptExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.OfficialBIRReceiptExists) {
		return nil, false
	}
	return o.OfficialBIRReceiptExists, true
}

// HasOfficialBIRReceiptExists returns a boolean if a field has been set.
func (o *FolioWindowType) HasOfficialBIRReceiptExists() bool {
	if o != nil && !IsNil(o.OfficialBIRReceiptExists) {
		return true
	}

	return false
}

// SetOfficialBIRReceiptExists gets a reference to the given bool and assigns it to the OfficialBIRReceiptExists field.
func (o *FolioWindowType) SetOfficialBIRReceiptExists(v bool) {
	o.OfficialBIRReceiptExists = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *FolioWindowType) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *FolioWindowType) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *FolioWindowType) SetOffset(v int32) {
	o.Offset = &v
}

// GetPayeeInfo returns the PayeeInfo field value if set, zero value otherwise.
func (o *FolioWindowType) GetPayeeInfo() PayeeInfoType {
	if o == nil || IsNil(o.PayeeInfo) {
		var ret PayeeInfoType
		return ret
	}
	return *o.PayeeInfo
}

// GetPayeeInfoOk returns a tuple with the PayeeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetPayeeInfoOk() (*PayeeInfoType, bool) {
	if o == nil || IsNil(o.PayeeInfo) {
		return nil, false
	}
	return o.PayeeInfo, true
}

// HasPayeeInfo returns a boolean if a field has been set.
func (o *FolioWindowType) HasPayeeInfo() bool {
	if o != nil && !IsNil(o.PayeeInfo) {
		return true
	}

	return false
}

// SetPayeeInfo gets a reference to the given PayeeInfoType and assigns it to the PayeeInfo field.
func (o *FolioWindowType) SetPayeeInfo(v PayeeInfoType) {
	o.PayeeInfo = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *FolioWindowType) GetPayment() CurrencyAmountType {
	if o == nil || IsNil(o.Payment) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetPaymentOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *FolioWindowType) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given CurrencyAmountType and assigns it to the Payment field.
func (o *FolioWindowType) SetPayment(v CurrencyAmountType) {
	o.Payment = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *FolioWindowType) GetPaymentMethod() ReservationPaymentMethodType {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret ReservationPaymentMethodType
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetPaymentMethodOk() (*ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *FolioWindowType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given ReservationPaymentMethodType and assigns it to the PaymentMethod field.
func (o *FolioWindowType) SetPaymentMethod(v ReservationPaymentMethodType) {
	o.PaymentMethod = &v
}

// GetReceiptNo returns the ReceiptNo field value if set, zero value otherwise.
func (o *FolioWindowType) GetReceiptNo() float32 {
	if o == nil || IsNil(o.ReceiptNo) {
		var ret float32
		return ret
	}
	return *o.ReceiptNo
}

// GetReceiptNoOk returns a tuple with the ReceiptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetReceiptNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReceiptNo) {
		return nil, false
	}
	return o.ReceiptNo, true
}

// HasReceiptNo returns a boolean if a field has been set.
func (o *FolioWindowType) HasReceiptNo() bool {
	if o != nil && !IsNil(o.ReceiptNo) {
		return true
	}

	return false
}

// SetReceiptNo gets a reference to the given float32 and assigns it to the ReceiptNo field.
func (o *FolioWindowType) SetReceiptNo(v float32) {
	o.ReceiptNo = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *FolioWindowType) GetRevenue() CurrencyAmountType {
	if o == nil || IsNil(o.Revenue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetRevenueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Revenue) {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *FolioWindowType) HasRevenue() bool {
	if o != nil && !IsNil(o.Revenue) {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given CurrencyAmountType and assigns it to the Revenue field.
func (o *FolioWindowType) SetRevenue(v CurrencyAmountType) {
	o.Revenue = &v
}

// GetServiceTypeInfo returns the ServiceTypeInfo field value if set, zero value otherwise.
func (o *FolioWindowType) GetServiceTypeInfo() TransactionServiceTypesType {
	if o == nil || IsNil(o.ServiceTypeInfo) {
		var ret TransactionServiceTypesType
		return ret
	}
	return *o.ServiceTypeInfo
}

// GetServiceTypeInfoOk returns a tuple with the ServiceTypeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetServiceTypeInfoOk() (*TransactionServiceTypesType, bool) {
	if o == nil || IsNil(o.ServiceTypeInfo) {
		return nil, false
	}
	return o.ServiceTypeInfo, true
}

// HasServiceTypeInfo returns a boolean if a field has been set.
func (o *FolioWindowType) HasServiceTypeInfo() bool {
	if o != nil && !IsNil(o.ServiceTypeInfo) {
		return true
	}

	return false
}

// SetServiceTypeInfo gets a reference to the given TransactionServiceTypesType and assigns it to the ServiceTypeInfo field.
func (o *FolioWindowType) SetServiceTypeInfo(v TransactionServiceTypesType) {
	o.ServiceTypeInfo = &v
}

// GetSimpleFolio returns the SimpleFolio field value if set, zero value otherwise.
func (o *FolioWindowType) GetSimpleFolio() bool {
	if o == nil || IsNil(o.SimpleFolio) {
		var ret bool
		return ret
	}
	return *o.SimpleFolio
}

// GetSimpleFolioOk returns a tuple with the SimpleFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetSimpleFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.SimpleFolio) {
		return nil, false
	}
	return o.SimpleFolio, true
}

// HasSimpleFolio returns a boolean if a field has been set.
func (o *FolioWindowType) HasSimpleFolio() bool {
	if o != nil && !IsNil(o.SimpleFolio) {
		return true
	}

	return false
}

// SetSimpleFolio gets a reference to the given bool and assigns it to the SimpleFolio field.
func (o *FolioWindowType) SetSimpleFolio(v bool) {
	o.SimpleFolio = &v
}

// GetStoredFolioId returns the StoredFolioId field value if set, zero value otherwise.
func (o *FolioWindowType) GetStoredFolioId() UniqueIDType {
	if o == nil || IsNil(o.StoredFolioId) {
		var ret UniqueIDType
		return ret
	}
	return *o.StoredFolioId
}

// GetStoredFolioIdOk returns a tuple with the StoredFolioId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetStoredFolioIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.StoredFolioId) {
		return nil, false
	}
	return o.StoredFolioId, true
}

// HasStoredFolioId returns a boolean if a field has been set.
func (o *FolioWindowType) HasStoredFolioId() bool {
	if o != nil && !IsNil(o.StoredFolioId) {
		return true
	}

	return false
}

// SetStoredFolioId gets a reference to the given UniqueIDType and assigns it to the StoredFolioId field.
func (o *FolioWindowType) SetStoredFolioId(v UniqueIDType) {
	o.StoredFolioId = &v
}

// GetStoredFolioName returns the StoredFolioName field value if set, zero value otherwise.
func (o *FolioWindowType) GetStoredFolioName() string {
	if o == nil || IsNil(o.StoredFolioName) {
		var ret string
		return ret
	}
	return *o.StoredFolioName
}

// GetStoredFolioNameOk returns a tuple with the StoredFolioName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetStoredFolioNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoredFolioName) {
		return nil, false
	}
	return o.StoredFolioName, true
}

// HasStoredFolioName returns a boolean if a field has been set.
func (o *FolioWindowType) HasStoredFolioName() bool {
	if o != nil && !IsNil(o.StoredFolioName) {
		return true
	}

	return false
}

// SetStoredFolioName gets a reference to the given string and assigns it to the StoredFolioName field.
func (o *FolioWindowType) SetStoredFolioName(v string) {
	o.StoredFolioName = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *FolioWindowType) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *FolioWindowType) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *FolioWindowType) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *FolioWindowType) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *FolioWindowType) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *FolioWindowType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *FolioWindowType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *FolioWindowType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *FolioWindowType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

// GetVATOffsetAmount returns the VATOffsetAmount field value if set, zero value otherwise.
func (o *FolioWindowType) GetVATOffsetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.VATOffsetAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.VATOffsetAmount
}

// GetVATOffsetAmountOk returns a tuple with the VATOffsetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioWindowType) GetVATOffsetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.VATOffsetAmount) {
		return nil, false
	}
	return o.VATOffsetAmount, true
}

// HasVATOffsetAmount returns a boolean if a field has been set.
func (o *FolioWindowType) HasVATOffsetAmount() bool {
	if o != nil && !IsNil(o.VATOffsetAmount) {
		return true
	}

	return false
}

// SetVATOffsetAmount gets a reference to the given CurrencyAmountType and assigns it to the VATOffsetAmount field.
func (o *FolioWindowType) SetVATOffsetAmount(v CurrencyAmountType) {
	o.VATOffsetAmount = &v
}

func (o FolioWindowType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioWindowType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AckBIRReceiptExists) {
		toSerialize["ackBIRReceiptExists"] = o.AckBIRReceiptExists
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CompAccountingInfo) {
		toSerialize["compAccountingInfo"] = o.CompAccountingInfo
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.DebitBalance) {
		toSerialize["debitBalance"] = o.DebitBalance
	}
	if !IsNil(o.DebitPayment) {
		toSerialize["debitPayment"] = o.DebitPayment
	}
	if !IsNil(o.DebitRevenue) {
		toSerialize["debitRevenue"] = o.DebitRevenue
	}
	if !IsNil(o.EmptyFolio) {
		toSerialize["emptyFolio"] = o.EmptyFolio
	}
	if !IsNil(o.EmptyWindow) {
		toSerialize["emptyWindow"] = o.EmptyWindow
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.FiscalFolioInstruction) {
		toSerialize["fiscalFolioInstruction"] = o.FiscalFolioInstruction
	}
	if !IsNil(o.FiscalResponseType) {
		toSerialize["fiscalResponseType"] = o.FiscalResponseType
	}
	if !IsNil(o.FolioSplitInfo) {
		toSerialize["folioSplitInfo"] = o.FolioSplitInfo
	}
	if !IsNil(o.FolioWindowNo) {
		toSerialize["folioWindowNo"] = o.FolioWindowNo
	}
	if !IsNil(o.Folios) {
		toSerialize["folios"] = o.Folios
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.InternalFolioWindowID) {
		toSerialize["internalFolioWindowID"] = o.InternalFolioWindowID
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.OfficialBIRReceiptExists) {
		toSerialize["officialBIRReceiptExists"] = o.OfficialBIRReceiptExists
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.PayeeInfo) {
		toSerialize["payeeInfo"] = o.PayeeInfo
	}
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.ReceiptNo) {
		toSerialize["receiptNo"] = o.ReceiptNo
	}
	if !IsNil(o.Revenue) {
		toSerialize["revenue"] = o.Revenue
	}
	if !IsNil(o.ServiceTypeInfo) {
		toSerialize["serviceTypeInfo"] = o.ServiceTypeInfo
	}
	if !IsNil(o.SimpleFolio) {
		toSerialize["simpleFolio"] = o.SimpleFolio
	}
	if !IsNil(o.StoredFolioId) {
		toSerialize["storedFolioId"] = o.StoredFolioId
	}
	if !IsNil(o.StoredFolioName) {
		toSerialize["storedFolioName"] = o.StoredFolioName
	}
	if !IsNil(o.TotalPages) {
		toSerialize["totalPages"] = o.TotalPages
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.VATOffsetAmount) {
		toSerialize["vATOffsetAmount"] = o.VATOffsetAmount
	}
	return toSerialize, nil
}

type NullableFolioWindowType struct {
	value *FolioWindowType
	isSet bool
}

func (v NullableFolioWindowType) Get() *FolioWindowType {
	return v.value
}

func (v *NullableFolioWindowType) Set(val *FolioWindowType) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioWindowType) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioWindowType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioWindowType(val *FolioWindowType) *NullableFolioWindowType {
	return &NullableFolioWindowType{value: val, isSet: true}
}

func (v NullableFolioWindowType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioWindowType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


