/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the BatchZeroBalanceCheckoutDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchZeroBalanceCheckoutDetails{}

// BatchZeroBalanceCheckoutDetails Response for batch zero balance check out.
type BatchZeroBalanceCheckoutDetails struct {
	Links *Links `json:"links,omitempty"`
	// Used for Character Strings, length 0 to 40.
	ProcessId *string `json:"processId,omitempty"`
	// Zero balance Reservations count identifier.
	ResvCount *int32 `json:"resvCount,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewBatchZeroBalanceCheckoutDetails instantiates a new BatchZeroBalanceCheckoutDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchZeroBalanceCheckoutDetails() *BatchZeroBalanceCheckoutDetails {
	this := BatchZeroBalanceCheckoutDetails{}
	return &this
}

// NewBatchZeroBalanceCheckoutDetailsWithDefaults instantiates a new BatchZeroBalanceCheckoutDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchZeroBalanceCheckoutDetailsWithDefaults() *BatchZeroBalanceCheckoutDetails {
	this := BatchZeroBalanceCheckoutDetails{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BatchZeroBalanceCheckoutDetails) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchZeroBalanceCheckoutDetails) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BatchZeroBalanceCheckoutDetails) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *BatchZeroBalanceCheckoutDetails) SetLinks(v Links) {
	o.Links = &v
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise.
func (o *BatchZeroBalanceCheckoutDetails) GetProcessId() string {
	if o == nil || IsNil(o.ProcessId) {
		var ret string
		return ret
	}
	return *o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchZeroBalanceCheckoutDetails) GetProcessIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessId) {
		return nil, false
	}
	return o.ProcessId, true
}

// HasProcessId returns a boolean if a field has been set.
func (o *BatchZeroBalanceCheckoutDetails) HasProcessId() bool {
	if o != nil && !IsNil(o.ProcessId) {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given string and assigns it to the ProcessId field.
func (o *BatchZeroBalanceCheckoutDetails) SetProcessId(v string) {
	o.ProcessId = &v
}

// GetResvCount returns the ResvCount field value if set, zero value otherwise.
func (o *BatchZeroBalanceCheckoutDetails) GetResvCount() int32 {
	if o == nil || IsNil(o.ResvCount) {
		var ret int32
		return ret
	}
	return *o.ResvCount
}

// GetResvCountOk returns a tuple with the ResvCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchZeroBalanceCheckoutDetails) GetResvCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ResvCount) {
		return nil, false
	}
	return o.ResvCount, true
}

// HasResvCount returns a boolean if a field has been set.
func (o *BatchZeroBalanceCheckoutDetails) HasResvCount() bool {
	if o != nil && !IsNil(o.ResvCount) {
		return true
	}

	return false
}

// SetResvCount gets a reference to the given int32 and assigns it to the ResvCount field.
func (o *BatchZeroBalanceCheckoutDetails) SetResvCount(v int32) {
	o.ResvCount = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *BatchZeroBalanceCheckoutDetails) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchZeroBalanceCheckoutDetails) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *BatchZeroBalanceCheckoutDetails) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *BatchZeroBalanceCheckoutDetails) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o BatchZeroBalanceCheckoutDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchZeroBalanceCheckoutDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ProcessId) {
		toSerialize["processId"] = o.ProcessId
	}
	if !IsNil(o.ResvCount) {
		toSerialize["resvCount"] = o.ResvCount
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableBatchZeroBalanceCheckoutDetails struct {
	value *BatchZeroBalanceCheckoutDetails
	isSet bool
}

func (v NullableBatchZeroBalanceCheckoutDetails) Get() *BatchZeroBalanceCheckoutDetails {
	return v.value
}

func (v *NullableBatchZeroBalanceCheckoutDetails) Set(val *BatchZeroBalanceCheckoutDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchZeroBalanceCheckoutDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchZeroBalanceCheckoutDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchZeroBalanceCheckoutDetails(val *BatchZeroBalanceCheckoutDetails) *NullableBatchZeroBalanceCheckoutDetails {
	return &NullableBatchZeroBalanceCheckoutDetails{value: val, isSet: true}
}

func (v NullableBatchZeroBalanceCheckoutDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchZeroBalanceCheckoutDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


