/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the DetailPostingTypeMiscellaneousInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailPostingTypeMiscellaneousInfo{}

// DetailPostingTypeMiscellaneousInfo struct for DetailPostingTypeMiscellaneousInfo
type DetailPostingTypeMiscellaneousInfo struct {
	Covers *string `json:"covers,omitempty"`
	CreateDateTime *string `json:"createDateTime,omitempty"`
}

// NewDetailPostingTypeMiscellaneousInfo instantiates a new DetailPostingTypeMiscellaneousInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailPostingTypeMiscellaneousInfo() *DetailPostingTypeMiscellaneousInfo {
	this := DetailPostingTypeMiscellaneousInfo{}
	return &this
}

// NewDetailPostingTypeMiscellaneousInfoWithDefaults instantiates a new DetailPostingTypeMiscellaneousInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailPostingTypeMiscellaneousInfoWithDefaults() *DetailPostingTypeMiscellaneousInfo {
	this := DetailPostingTypeMiscellaneousInfo{}
	return &this
}

// GetCovers returns the Covers field value if set, zero value otherwise.
func (o *DetailPostingTypeMiscellaneousInfo) GetCovers() string {
	if o == nil || IsNil(o.Covers) {
		var ret string
		return ret
	}
	return *o.Covers
}

// GetCoversOk returns a tuple with the Covers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeMiscellaneousInfo) GetCoversOk() (*string, bool) {
	if o == nil || IsNil(o.Covers) {
		return nil, false
	}
	return o.Covers, true
}

// HasCovers returns a boolean if a field has been set.
func (o *DetailPostingTypeMiscellaneousInfo) HasCovers() bool {
	if o != nil && !IsNil(o.Covers) {
		return true
	}

	return false
}

// SetCovers gets a reference to the given string and assigns it to the Covers field.
func (o *DetailPostingTypeMiscellaneousInfo) SetCovers(v string) {
	o.Covers = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *DetailPostingTypeMiscellaneousInfo) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeMiscellaneousInfo) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *DetailPostingTypeMiscellaneousInfo) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *DetailPostingTypeMiscellaneousInfo) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

func (o DetailPostingTypeMiscellaneousInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailPostingTypeMiscellaneousInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Covers) {
		toSerialize["covers"] = o.Covers
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	return toSerialize, nil
}

type NullableDetailPostingTypeMiscellaneousInfo struct {
	value *DetailPostingTypeMiscellaneousInfo
	isSet bool
}

func (v NullableDetailPostingTypeMiscellaneousInfo) Get() *DetailPostingTypeMiscellaneousInfo {
	return v.value
}

func (v *NullableDetailPostingTypeMiscellaneousInfo) Set(val *DetailPostingTypeMiscellaneousInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailPostingTypeMiscellaneousInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailPostingTypeMiscellaneousInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailPostingTypeMiscellaneousInfo(val *DetailPostingTypeMiscellaneousInfo) *NullableDetailPostingTypeMiscellaneousInfo {
	return &NullableDetailPostingTypeMiscellaneousInfo{value: val, isSet: true}
}

func (v NullableDetailPostingTypeMiscellaneousInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailPostingTypeMiscellaneousInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


