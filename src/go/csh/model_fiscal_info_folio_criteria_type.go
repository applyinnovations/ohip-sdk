/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the FiscalInfoFolioCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiscalInfoFolioCriteriaType{}

// FiscalInfoFolioCriteriaType Criteria for calling fiscal Info type folio service
type FiscalInfoFolioCriteriaType struct {
	FolioCommand *FolioCommandType `json:"folioCommand,omitempty"`
	Folios *FolioSummaryType `json:"folios,omitempty"`
	// Property where the Folio History exists.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewFiscalInfoFolioCriteriaType instantiates a new FiscalInfoFolioCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiscalInfoFolioCriteriaType() *FiscalInfoFolioCriteriaType {
	this := FiscalInfoFolioCriteriaType{}
	return &this
}

// NewFiscalInfoFolioCriteriaTypeWithDefaults instantiates a new FiscalInfoFolioCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiscalInfoFolioCriteriaTypeWithDefaults() *FiscalInfoFolioCriteriaType {
	this := FiscalInfoFolioCriteriaType{}
	return &this
}

// GetFolioCommand returns the FolioCommand field value if set, zero value otherwise.
func (o *FiscalInfoFolioCriteriaType) GetFolioCommand() FolioCommandType {
	if o == nil || IsNil(o.FolioCommand) {
		var ret FolioCommandType
		return ret
	}
	return *o.FolioCommand
}

// GetFolioCommandOk returns a tuple with the FolioCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalInfoFolioCriteriaType) GetFolioCommandOk() (*FolioCommandType, bool) {
	if o == nil || IsNil(o.FolioCommand) {
		return nil, false
	}
	return o.FolioCommand, true
}

// HasFolioCommand returns a boolean if a field has been set.
func (o *FiscalInfoFolioCriteriaType) HasFolioCommand() bool {
	if o != nil && !IsNil(o.FolioCommand) {
		return true
	}

	return false
}

// SetFolioCommand gets a reference to the given FolioCommandType and assigns it to the FolioCommand field.
func (o *FiscalInfoFolioCriteriaType) SetFolioCommand(v FolioCommandType) {
	o.FolioCommand = &v
}

// GetFolios returns the Folios field value if set, zero value otherwise.
func (o *FiscalInfoFolioCriteriaType) GetFolios() FolioSummaryType {
	if o == nil || IsNil(o.Folios) {
		var ret FolioSummaryType
		return ret
	}
	return *o.Folios
}

// GetFoliosOk returns a tuple with the Folios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalInfoFolioCriteriaType) GetFoliosOk() (*FolioSummaryType, bool) {
	if o == nil || IsNil(o.Folios) {
		return nil, false
	}
	return o.Folios, true
}

// HasFolios returns a boolean if a field has been set.
func (o *FiscalInfoFolioCriteriaType) HasFolios() bool {
	if o != nil && !IsNil(o.Folios) {
		return true
	}

	return false
}

// SetFolios gets a reference to the given FolioSummaryType and assigns it to the Folios field.
func (o *FiscalInfoFolioCriteriaType) SetFolios(v FolioSummaryType) {
	o.Folios = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *FiscalInfoFolioCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiscalInfoFolioCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *FiscalInfoFolioCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *FiscalInfoFolioCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o FiscalInfoFolioCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiscalInfoFolioCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioCommand) {
		toSerialize["folioCommand"] = o.FolioCommand
	}
	if !IsNil(o.Folios) {
		toSerialize["folios"] = o.Folios
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableFiscalInfoFolioCriteriaType struct {
	value *FiscalInfoFolioCriteriaType
	isSet bool
}

func (v NullableFiscalInfoFolioCriteriaType) Get() *FiscalInfoFolioCriteriaType {
	return v.value
}

func (v *NullableFiscalInfoFolioCriteriaType) Set(val *FiscalInfoFolioCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableFiscalInfoFolioCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableFiscalInfoFolioCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiscalInfoFolioCriteriaType(val *FiscalInfoFolioCriteriaType) *NullableFiscalInfoFolioCriteriaType {
	return &NullableFiscalInfoFolioCriteriaType{value: val, isSet: true}
}

func (v NullableFiscalInfoFolioCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiscalInfoFolioCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


