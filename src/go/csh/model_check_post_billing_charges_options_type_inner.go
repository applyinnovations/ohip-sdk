/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the CheckPostBillingChargesOptionsTypeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckPostBillingChargesOptionsTypeInner{}

// CheckPostBillingChargesOptionsTypeInner struct for CheckPostBillingChargesOptionsTypeInner
type CheckPostBillingChargesOptionsTypeInner struct {
	Consumable *ChargeCriteriaType `json:"consumable,omitempty"`
	// Determines if the package allowance is available to be consumed.
	PackageAllowance *bool `json:"packageAllowance,omitempty"`
	RoomRouting *CheckPostBillingChargesOptionsTypeInnerRoomRouting `json:"roomRouting,omitempty"`
}

// NewCheckPostBillingChargesOptionsTypeInner instantiates a new CheckPostBillingChargesOptionsTypeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckPostBillingChargesOptionsTypeInner() *CheckPostBillingChargesOptionsTypeInner {
	this := CheckPostBillingChargesOptionsTypeInner{}
	return &this
}

// NewCheckPostBillingChargesOptionsTypeInnerWithDefaults instantiates a new CheckPostBillingChargesOptionsTypeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckPostBillingChargesOptionsTypeInnerWithDefaults() *CheckPostBillingChargesOptionsTypeInner {
	this := CheckPostBillingChargesOptionsTypeInner{}
	return &this
}

// GetConsumable returns the Consumable field value if set, zero value otherwise.
func (o *CheckPostBillingChargesOptionsTypeInner) GetConsumable() ChargeCriteriaType {
	if o == nil || IsNil(o.Consumable) {
		var ret ChargeCriteriaType
		return ret
	}
	return *o.Consumable
}

// GetConsumableOk returns a tuple with the Consumable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) GetConsumableOk() (*ChargeCriteriaType, bool) {
	if o == nil || IsNil(o.Consumable) {
		return nil, false
	}
	return o.Consumable, true
}

// HasConsumable returns a boolean if a field has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) HasConsumable() bool {
	if o != nil && !IsNil(o.Consumable) {
		return true
	}

	return false
}

// SetConsumable gets a reference to the given ChargeCriteriaType and assigns it to the Consumable field.
func (o *CheckPostBillingChargesOptionsTypeInner) SetConsumable(v ChargeCriteriaType) {
	o.Consumable = &v
}

// GetPackageAllowance returns the PackageAllowance field value if set, zero value otherwise.
func (o *CheckPostBillingChargesOptionsTypeInner) GetPackageAllowance() bool {
	if o == nil || IsNil(o.PackageAllowance) {
		var ret bool
		return ret
	}
	return *o.PackageAllowance
}

// GetPackageAllowanceOk returns a tuple with the PackageAllowance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) GetPackageAllowanceOk() (*bool, bool) {
	if o == nil || IsNil(o.PackageAllowance) {
		return nil, false
	}
	return o.PackageAllowance, true
}

// HasPackageAllowance returns a boolean if a field has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) HasPackageAllowance() bool {
	if o != nil && !IsNil(o.PackageAllowance) {
		return true
	}

	return false
}

// SetPackageAllowance gets a reference to the given bool and assigns it to the PackageAllowance field.
func (o *CheckPostBillingChargesOptionsTypeInner) SetPackageAllowance(v bool) {
	o.PackageAllowance = &v
}

// GetRoomRouting returns the RoomRouting field value if set, zero value otherwise.
func (o *CheckPostBillingChargesOptionsTypeInner) GetRoomRouting() CheckPostBillingChargesOptionsTypeInnerRoomRouting {
	if o == nil || IsNil(o.RoomRouting) {
		var ret CheckPostBillingChargesOptionsTypeInnerRoomRouting
		return ret
	}
	return *o.RoomRouting
}

// GetRoomRoutingOk returns a tuple with the RoomRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) GetRoomRoutingOk() (*CheckPostBillingChargesOptionsTypeInnerRoomRouting, bool) {
	if o == nil || IsNil(o.RoomRouting) {
		return nil, false
	}
	return o.RoomRouting, true
}

// HasRoomRouting returns a boolean if a field has been set.
func (o *CheckPostBillingChargesOptionsTypeInner) HasRoomRouting() bool {
	if o != nil && !IsNil(o.RoomRouting) {
		return true
	}

	return false
}

// SetRoomRouting gets a reference to the given CheckPostBillingChargesOptionsTypeInnerRoomRouting and assigns it to the RoomRouting field.
func (o *CheckPostBillingChargesOptionsTypeInner) SetRoomRouting(v CheckPostBillingChargesOptionsTypeInnerRoomRouting) {
	o.RoomRouting = &v
}

func (o CheckPostBillingChargesOptionsTypeInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckPostBillingChargesOptionsTypeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Consumable) {
		toSerialize["consumable"] = o.Consumable
	}
	if !IsNil(o.PackageAllowance) {
		toSerialize["packageAllowance"] = o.PackageAllowance
	}
	if !IsNil(o.RoomRouting) {
		toSerialize["roomRouting"] = o.RoomRouting
	}
	return toSerialize, nil
}

type NullableCheckPostBillingChargesOptionsTypeInner struct {
	value *CheckPostBillingChargesOptionsTypeInner
	isSet bool
}

func (v NullableCheckPostBillingChargesOptionsTypeInner) Get() *CheckPostBillingChargesOptionsTypeInner {
	return v.value
}

func (v *NullableCheckPostBillingChargesOptionsTypeInner) Set(val *CheckPostBillingChargesOptionsTypeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckPostBillingChargesOptionsTypeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckPostBillingChargesOptionsTypeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckPostBillingChargesOptionsTypeInner(val *CheckPostBillingChargesOptionsTypeInner) *NullableCheckPostBillingChargesOptionsTypeInner {
	return &NullableCheckPostBillingChargesOptionsTypeInner{value: val, isSet: true}
}

func (v NullableCheckPostBillingChargesOptionsTypeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckPostBillingChargesOptionsTypeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


