/*
OPERA Cloud Cashiering Outbound API

APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cshoutbound

import (
	"encoding/json"
)

// checks if the ReverseCompRedemptionsRS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReverseCompRedemptionsRS{}

// ReverseCompRedemptionsRS Response type of Complimentary Redemptions for reversal
type ReverseCompRedemptionsRS struct {
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewReverseCompRedemptionsRS instantiates a new ReverseCompRedemptionsRS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReverseCompRedemptionsRS() *ReverseCompRedemptionsRS {
	this := ReverseCompRedemptionsRS{}
	return &this
}

// NewReverseCompRedemptionsRSWithDefaults instantiates a new ReverseCompRedemptionsRS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReverseCompRedemptionsRSWithDefaults() *ReverseCompRedemptionsRS {
	this := ReverseCompRedemptionsRS{}
	return &this
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ReverseCompRedemptionsRS) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReverseCompRedemptionsRS) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ReverseCompRedemptionsRS) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *ReverseCompRedemptionsRS) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o ReverseCompRedemptionsRS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReverseCompRedemptionsRS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableReverseCompRedemptionsRS struct {
	value *ReverseCompRedemptionsRS
	isSet bool
}

func (v NullableReverseCompRedemptionsRS) Get() *ReverseCompRedemptionsRS {
	return v.value
}

func (v *NullableReverseCompRedemptionsRS) Set(val *ReverseCompRedemptionsRS) {
	v.value = val
	v.isSet = true
}

func (v NullableReverseCompRedemptionsRS) IsSet() bool {
	return v.isSet
}

func (v *NullableReverseCompRedemptionsRS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReverseCompRedemptionsRS(val *ReverseCompRedemptionsRS) *NullableReverseCompRedemptionsRS {
	return &NullableReverseCompRedemptionsRS{value: val, isSet: true}
}

func (v NullableReverseCompRedemptionsRS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReverseCompRedemptionsRS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


