/*
OPI Token Exchange Service API

Oracle Token Exchange Service Specification<br /><br /> Compatible with OPERA Cloud release 1.0.1.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 1.0.1
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokenexchange

import (
	"encoding/json"
)

// checks if the OpenPaymentTokenExchangeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenPaymentTokenExchangeRequest{}

// OpenPaymentTokenExchangeRequest JSON object containing the card information
type OpenPaymentTokenExchangeRequest struct {
	// Expiration Date, YYMM format
	ExpiryDate string `json:"expiryDate"`
	// Primary Account Number (PAN)
	Pan string `json:"pan"`
}

// NewOpenPaymentTokenExchangeRequest instantiates a new OpenPaymentTokenExchangeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenPaymentTokenExchangeRequest(expiryDate string, pan string) *OpenPaymentTokenExchangeRequest {
	this := OpenPaymentTokenExchangeRequest{}
	this.ExpiryDate = expiryDate
	this.Pan = pan
	return &this
}

// NewOpenPaymentTokenExchangeRequestWithDefaults instantiates a new OpenPaymentTokenExchangeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenPaymentTokenExchangeRequestWithDefaults() *OpenPaymentTokenExchangeRequest {
	this := OpenPaymentTokenExchangeRequest{}
	return &this
}

// GetExpiryDate returns the ExpiryDate field value
func (o *OpenPaymentTokenExchangeRequest) GetExpiryDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiryDate
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value
// and a boolean to check if the value has been set.
func (o *OpenPaymentTokenExchangeRequest) GetExpiryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryDate, true
}

// SetExpiryDate sets field value
func (o *OpenPaymentTokenExchangeRequest) SetExpiryDate(v string) {
	o.ExpiryDate = v
}

// GetPan returns the Pan field value
func (o *OpenPaymentTokenExchangeRequest) GetPan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pan
}

// GetPanOk returns a tuple with the Pan field value
// and a boolean to check if the value has been set.
func (o *OpenPaymentTokenExchangeRequest) GetPanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pan, true
}

// SetPan sets field value
func (o *OpenPaymentTokenExchangeRequest) SetPan(v string) {
	o.Pan = v
}

func (o OpenPaymentTokenExchangeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenPaymentTokenExchangeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["expiryDate"] = o.ExpiryDate
	toSerialize["pan"] = o.Pan
	return toSerialize, nil
}

type NullableOpenPaymentTokenExchangeRequest struct {
	value *OpenPaymentTokenExchangeRequest
	isSet bool
}

func (v NullableOpenPaymentTokenExchangeRequest) Get() *OpenPaymentTokenExchangeRequest {
	return v.value
}

func (v *NullableOpenPaymentTokenExchangeRequest) Set(val *OpenPaymentTokenExchangeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenPaymentTokenExchangeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenPaymentTokenExchangeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenPaymentTokenExchangeRequest(val *OpenPaymentTokenExchangeRequest) *NullableOpenPaymentTokenExchangeRequest {
	return &NullableOpenPaymentTokenExchangeRequest{value: val, isSet: true}
}

func (v NullableOpenPaymentTokenExchangeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenPaymentTokenExchangeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


