/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the RoomGroupsCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomGroupsCriteria{}

// RoomGroupsCriteria Request object for creating Room Groups.
type RoomGroupsCriteria struct {
	Links *Links `json:"links,omitempty"`
	RoomGroups *RoomGroupsType `json:"roomGroups,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewRoomGroupsCriteria instantiates a new RoomGroupsCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomGroupsCriteria() *RoomGroupsCriteria {
	this := RoomGroupsCriteria{}
	return &this
}

// NewRoomGroupsCriteriaWithDefaults instantiates a new RoomGroupsCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomGroupsCriteriaWithDefaults() *RoomGroupsCriteria {
	this := RoomGroupsCriteria{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RoomGroupsCriteria) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGroupsCriteria) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RoomGroupsCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *RoomGroupsCriteria) SetLinks(v Links) {
	o.Links = &v
}

// GetRoomGroups returns the RoomGroups field value if set, zero value otherwise.
func (o *RoomGroupsCriteria) GetRoomGroups() RoomGroupsType {
	if o == nil || IsNil(o.RoomGroups) {
		var ret RoomGroupsType
		return ret
	}
	return *o.RoomGroups
}

// GetRoomGroupsOk returns a tuple with the RoomGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGroupsCriteria) GetRoomGroupsOk() (*RoomGroupsType, bool) {
	if o == nil || IsNil(o.RoomGroups) {
		return nil, false
	}
	return o.RoomGroups, true
}

// HasRoomGroups returns a boolean if a field has been set.
func (o *RoomGroupsCriteria) HasRoomGroups() bool {
	if o != nil && !IsNil(o.RoomGroups) {
		return true
	}

	return false
}

// SetRoomGroups gets a reference to the given RoomGroupsType and assigns it to the RoomGroups field.
func (o *RoomGroupsCriteria) SetRoomGroups(v RoomGroupsType) {
	o.RoomGroups = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *RoomGroupsCriteria) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGroupsCriteria) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *RoomGroupsCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *RoomGroupsCriteria) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o RoomGroupsCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomGroupsCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.RoomGroups) {
		toSerialize["roomGroups"] = o.RoomGroups
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableRoomGroupsCriteria struct {
	value *RoomGroupsCriteria
	isSet bool
}

func (v NullableRoomGroupsCriteria) Get() *RoomGroupsCriteria {
	return v.value
}

func (v *NullableRoomGroupsCriteria) Set(val *RoomGroupsCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomGroupsCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomGroupsCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomGroupsCriteria(val *RoomGroupsCriteria) *NullableRoomGroupsCriteria {
	return &NullableRoomGroupsCriteria{value: val, isSet: true}
}

func (v NullableRoomGroupsCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomGroupsCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


