/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the FloorsCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FloorsCriteria{}

// FloorsCriteria Request object for creating floors at the hotel level.
type FloorsCriteria struct {
	HotelFloors *HotelFloorsType `json:"hotelFloors,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewFloorsCriteria instantiates a new FloorsCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFloorsCriteria() *FloorsCriteria {
	this := FloorsCriteria{}
	return &this
}

// NewFloorsCriteriaWithDefaults instantiates a new FloorsCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFloorsCriteriaWithDefaults() *FloorsCriteria {
	this := FloorsCriteria{}
	return &this
}

// GetHotelFloors returns the HotelFloors field value if set, zero value otherwise.
func (o *FloorsCriteria) GetHotelFloors() HotelFloorsType {
	if o == nil || IsNil(o.HotelFloors) {
		var ret HotelFloorsType
		return ret
	}
	return *o.HotelFloors
}

// GetHotelFloorsOk returns a tuple with the HotelFloors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorsCriteria) GetHotelFloorsOk() (*HotelFloorsType, bool) {
	if o == nil || IsNil(o.HotelFloors) {
		return nil, false
	}
	return o.HotelFloors, true
}

// HasHotelFloors returns a boolean if a field has been set.
func (o *FloorsCriteria) HasHotelFloors() bool {
	if o != nil && !IsNil(o.HotelFloors) {
		return true
	}

	return false
}

// SetHotelFloors gets a reference to the given HotelFloorsType and assigns it to the HotelFloors field.
func (o *FloorsCriteria) SetHotelFloors(v HotelFloorsType) {
	o.HotelFloors = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *FloorsCriteria) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorsCriteria) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *FloorsCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *FloorsCriteria) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *FloorsCriteria) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorsCriteria) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *FloorsCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *FloorsCriteria) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o FloorsCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FloorsCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelFloors) {
		toSerialize["hotelFloors"] = o.HotelFloors
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableFloorsCriteria struct {
	value *FloorsCriteria
	isSet bool
}

func (v NullableFloorsCriteria) Get() *FloorsCriteria {
	return v.value
}

func (v *NullableFloorsCriteria) Set(val *FloorsCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableFloorsCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableFloorsCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFloorsCriteria(val *FloorsCriteria) *NullableFloorsCriteria {
	return &NullableFloorsCriteria{value: val, isSet: true}
}

func (v NullableFloorsCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFloorsCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


