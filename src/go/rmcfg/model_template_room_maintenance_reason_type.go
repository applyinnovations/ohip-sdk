/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the TemplateRoomMaintenanceReasonType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateRoomMaintenanceReasonType{}

// TemplateRoomMaintenanceReasonType Base common structure for Room Maintenance at both hotel and template levels.
type TemplateRoomMaintenanceReasonType struct {
	// Identification code for a particular room maintenance reason.
	Code *string `json:"code,omitempty"`
	// Description of a particular room maintenance reason.
	Description *string `json:"description,omitempty"`
	// Inactive flag for a particular room maintenance reason.
	Inactive *bool `json:"inactive,omitempty"`
	// Indicates the sell sequence for a particular room maintenance reason.
	SellSequence *float32 `json:"sellSequence,omitempty"`
}

// NewTemplateRoomMaintenanceReasonType instantiates a new TemplateRoomMaintenanceReasonType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateRoomMaintenanceReasonType() *TemplateRoomMaintenanceReasonType {
	this := TemplateRoomMaintenanceReasonType{}
	return &this
}

// NewTemplateRoomMaintenanceReasonTypeWithDefaults instantiates a new TemplateRoomMaintenanceReasonType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateRoomMaintenanceReasonTypeWithDefaults() *TemplateRoomMaintenanceReasonType {
	this := TemplateRoomMaintenanceReasonType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TemplateRoomMaintenanceReasonType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomMaintenanceReasonType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TemplateRoomMaintenanceReasonType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TemplateRoomMaintenanceReasonType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateRoomMaintenanceReasonType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomMaintenanceReasonType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateRoomMaintenanceReasonType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateRoomMaintenanceReasonType) SetDescription(v string) {
	o.Description = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *TemplateRoomMaintenanceReasonType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomMaintenanceReasonType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *TemplateRoomMaintenanceReasonType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *TemplateRoomMaintenanceReasonType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetSellSequence returns the SellSequence field value if set, zero value otherwise.
func (o *TemplateRoomMaintenanceReasonType) GetSellSequence() float32 {
	if o == nil || IsNil(o.SellSequence) {
		var ret float32
		return ret
	}
	return *o.SellSequence
}

// GetSellSequenceOk returns a tuple with the SellSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomMaintenanceReasonType) GetSellSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.SellSequence) {
		return nil, false
	}
	return o.SellSequence, true
}

// HasSellSequence returns a boolean if a field has been set.
func (o *TemplateRoomMaintenanceReasonType) HasSellSequence() bool {
	if o != nil && !IsNil(o.SellSequence) {
		return true
	}

	return false
}

// SetSellSequence gets a reference to the given float32 and assigns it to the SellSequence field.
func (o *TemplateRoomMaintenanceReasonType) SetSellSequence(v float32) {
	o.SellSequence = &v
}

func (o TemplateRoomMaintenanceReasonType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateRoomMaintenanceReasonType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.SellSequence) {
		toSerialize["sellSequence"] = o.SellSequence
	}
	return toSerialize, nil
}

type NullableTemplateRoomMaintenanceReasonType struct {
	value *TemplateRoomMaintenanceReasonType
	isSet bool
}

func (v NullableTemplateRoomMaintenanceReasonType) Get() *TemplateRoomMaintenanceReasonType {
	return v.value
}

func (v *NullableTemplateRoomMaintenanceReasonType) Set(val *TemplateRoomMaintenanceReasonType) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateRoomMaintenanceReasonType) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateRoomMaintenanceReasonType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateRoomMaintenanceReasonType(val *TemplateRoomMaintenanceReasonType) *NullableTemplateRoomMaintenanceReasonType {
	return &NullableTemplateRoomMaintenanceReasonType{value: val, isSet: true}
}

func (v NullableTemplateRoomMaintenanceReasonType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateRoomMaintenanceReasonType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


