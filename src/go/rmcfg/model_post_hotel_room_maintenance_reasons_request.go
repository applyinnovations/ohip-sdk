/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the PostHotelRoomMaintenanceReasonsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostHotelRoomMaintenanceReasonsRequest{}

// PostHotelRoomMaintenanceReasonsRequest struct for PostHotelRoomMaintenanceReasonsRequest
type PostHotelRoomMaintenanceReasonsRequest struct {
	HotelRoomMaintenanceReasons *HotelRoomMaintenanceReasonsType `json:"hotelRoomMaintenanceReasons,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostHotelRoomMaintenanceReasonsRequest instantiates a new PostHotelRoomMaintenanceReasonsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostHotelRoomMaintenanceReasonsRequest() *PostHotelRoomMaintenanceReasonsRequest {
	this := PostHotelRoomMaintenanceReasonsRequest{}
	return &this
}

// NewPostHotelRoomMaintenanceReasonsRequestWithDefaults instantiates a new PostHotelRoomMaintenanceReasonsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostHotelRoomMaintenanceReasonsRequestWithDefaults() *PostHotelRoomMaintenanceReasonsRequest {
	this := PostHotelRoomMaintenanceReasonsRequest{}
	return &this
}

// GetHotelRoomMaintenanceReasons returns the HotelRoomMaintenanceReasons field value if set, zero value otherwise.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetHotelRoomMaintenanceReasons() HotelRoomMaintenanceReasonsType {
	if o == nil || IsNil(o.HotelRoomMaintenanceReasons) {
		var ret HotelRoomMaintenanceReasonsType
		return ret
	}
	return *o.HotelRoomMaintenanceReasons
}

// GetHotelRoomMaintenanceReasonsOk returns a tuple with the HotelRoomMaintenanceReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetHotelRoomMaintenanceReasonsOk() (*HotelRoomMaintenanceReasonsType, bool) {
	if o == nil || IsNil(o.HotelRoomMaintenanceReasons) {
		return nil, false
	}
	return o.HotelRoomMaintenanceReasons, true
}

// HasHotelRoomMaintenanceReasons returns a boolean if a field has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) HasHotelRoomMaintenanceReasons() bool {
	if o != nil && !IsNil(o.HotelRoomMaintenanceReasons) {
		return true
	}

	return false
}

// SetHotelRoomMaintenanceReasons gets a reference to the given HotelRoomMaintenanceReasonsType and assigns it to the HotelRoomMaintenanceReasons field.
func (o *PostHotelRoomMaintenanceReasonsRequest) SetHotelRoomMaintenanceReasons(v HotelRoomMaintenanceReasonsType) {
	o.HotelRoomMaintenanceReasons = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostHotelRoomMaintenanceReasonsRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostHotelRoomMaintenanceReasonsRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostHotelRoomMaintenanceReasonsRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostHotelRoomMaintenanceReasonsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostHotelRoomMaintenanceReasonsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelRoomMaintenanceReasons) {
		toSerialize["hotelRoomMaintenanceReasons"] = o.HotelRoomMaintenanceReasons
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostHotelRoomMaintenanceReasonsRequest struct {
	value *PostHotelRoomMaintenanceReasonsRequest
	isSet bool
}

func (v NullablePostHotelRoomMaintenanceReasonsRequest) Get() *PostHotelRoomMaintenanceReasonsRequest {
	return v.value
}

func (v *NullablePostHotelRoomMaintenanceReasonsRequest) Set(val *PostHotelRoomMaintenanceReasonsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostHotelRoomMaintenanceReasonsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostHotelRoomMaintenanceReasonsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostHotelRoomMaintenanceReasonsRequest(val *PostHotelRoomMaintenanceReasonsRequest) *NullablePostHotelRoomMaintenanceReasonsRequest {
	return &NullablePostHotelRoomMaintenanceReasonsRequest{value: val, isSet: true}
}

func (v NullablePostHotelRoomMaintenanceReasonsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostHotelRoomMaintenanceReasonsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


