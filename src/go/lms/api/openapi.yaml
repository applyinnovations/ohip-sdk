openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for external Leisure Management functionality integrated\
    \ with OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br\
    \ /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Leisure Management API
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /lms/v1
tags:
- description: "The Leisure Management module offers a set of APIs to manage the activities\
    \ for a guest like spa, golf, tours etc. The external system can create, change,\
    \ cancel activities and send these updates to OPERA Cloud; either attached the\
    \ activity to the OPERA Cloud Reservation or Profile."
  name: LeisureManagement
- description: "The Leisure Management Configuration module offers a set of operations\
    \ to manage the configuration of activities like Status codes, locations, types\
    \ etc. User can create, change, remove and fetch Status codes, locations, types\
    \ etc."
  name: LeisureManagementConfig
paths:
  /activityLocations:
    get:
      description: Use this API to fetch Activity location codes for a property. <p><strong>OperationId:</strong>getActivityLocations</p>
      operationId: getActivityLocations
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: criteriaCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchActivityLocations'
          description: Response object after fetching the Activity Locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Look up of Activity Locations
      tags:
      - LeisureManagementConfig
    post:
      description: Use this API to create a new Activity location for a property.
        <p><strong>OperationId:</strong>postActivityLocations</p>
      operationId: postActivityLocations
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivityLocations_request'
        description: Request object for creating Activity Locations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Activity Locations
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: createActivityLocations
  /activityLocations/{activityLocationsId}:
    delete:
      description: Use this API to delete an Activity location for a property. <p><strong>OperationId:</strong>deleteActivityLocations</p>
      operationId: deleteActivityLocations
      parameters:
      - description: OPERA Activity locations id
        in: path
        name: activityLocationsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelIds
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Activity Locations
      tags:
      - LeisureManagementConfig
    put:
      description: Use this API to update an existing Activity location Code for a
        property. <p><strong>OperationId:</strong>putActivityLocations</p>
      operationId: putActivityLocations
      parameters:
      - description: OPERA Activity locations id
        in: path
        name: activityLocationsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivityLocations_request'
        description: Request object for changing Activity Locations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeActivityLocationsRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change in Activity Locations
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: changeActivityLocations
  /activityLocations/{activityLocationsId}/copy:
    put:
      description: Use this API to copy an Activity location for a property. <p><strong>OperationId:</strong>copyActivityLocations</p>
      operationId: copyActivityLocations
      parameters:
      - description: OPERA Source Activity locations id
        in: path
        name: activityLocationsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/copyActivityLocations_request'
        description: Request object for copying Activity Locations to hotel(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/copyActivityLocationsRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Activity Locations
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: copyActivityLocations
  /activityStatusCodes:
    get:
      description: Fetch Activity Status Codes that are configured for a property.  <p><strong>OperationId:</strong>getActivityStatusCodes</p>
      operationId: getActivityStatusCodes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: criteriaCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: applicationCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchActivityStatusCodes'
          description: Response object after fetching the Activity Status Codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityStatusCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Activity Status Codes
      tags:
      - LeisureManagementConfig
    post:
      description: Retrieve Activity Status Code that are configured for a property.  Activity
        Status Codes are typically used when an EAS (External Activities Scheduler
        system) interface is connected to OPERA.   <p><strong>OperationId:</strong>postActivityStatusCodes</p>
      operationId: postActivityStatusCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivityStatusCodes_request'
        description: Request object for creating Activity Status Codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Activity Status Code
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: createActivityStatusCodes
  /activityStatusCodes/{activityStatusCodesId}:
    delete:
      description: Remove an Activity Status Code that is configured for a property.  <p><strong>OperationId:</strong>deleteActivityStatusCodes</p>
      operationId: deleteActivityStatusCodes
      parameters:
      - description: OPERA Activity status codes
        in: path
        name: activityStatusCodesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelIds
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Activity Status Code
      tags:
      - LeisureManagementConfig
    put:
      description: Modify an Activity Status Code that is configured for a property.  <p><strong>OperationId:</strong>putActivityStatusCodes</p>
      operationId: putActivityStatusCodes
      parameters:
      - description: OPERA Activity status codes
        in: path
        name: activityStatusCodesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivityStatusCodes_request'
        description: Request object for changing Activity Status Codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeActivityStatusCodesRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Activity Status Code
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: changeActivityStatusCodes
  /activityTypes:
    get:
      description: Retrieve Activity Types that are configured for a property.  Activity
        Types are typically used when an EAS (External Activities Scheduler system)
        interface is connected to OPERA.   <p><strong>OperationId:</strong>getActivityTypes</p>
      operationId: getActivityTypes
      parameters:
      - explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: typeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchActivityTypes'
          description: Response object after fetching the Activity Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Activity Types
      tags:
      - LeisureManagementConfig
    post:
      description: Create a new Activity Type Code for a specific property. <p><strong>OperationId:</strong>postActivityTypes</p>
      operationId: postActivityTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivityTypes_request'
        description: Request object for creating Activity Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Activity Types
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: createActivityTypes
  /activityTypes/{activityTypesId}:
    delete:
      description: Delete an Activity Type Code that is configured for a property.
        <p><strong>OperationId:</strong>deleteActivityTypes</p>
      operationId: deleteActivityTypes
      parameters:
      - description: OPERA Activity types id
        in: path
        name: activityTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel where the code is configured.
        in: query
        name: hotelIds
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Activity Types
      tags:
      - LeisureManagementConfig
    put:
      description: Modify an Activity Type Code that is configured for a property.
        <p><strong>OperationId:</strong>putActivityTypes</p>
      operationId: putActivityTypes
      parameters:
      - description: OPERA Activity types id
        in: path
        name: activityTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivityTypes_request'
        description: Request object for changing Activity Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeActivityTypesRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Activity Types
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: changeActivityTypes
  /activityTypes/{activityTypesId}/copy:
    put:
      description: Copy existing Activity Types from source property to target properties.
        <p><strong>OperationId:</strong>copyActivityTypes</p>
      operationId: copyActivityTypes
      parameters:
      - description: OPERA Activity types id
        in: path
        name: activityTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/copyActivityTypes_request'
        description: Request object for copying Activity Types to hotel(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/copyActivityTypesRS'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Activity Types
      tags:
      - LeisureManagementConfig
      x-codegen-request-body-name: copyActivityTypes
  /hotels/{hotelId}/activityBookings:
    get:
      description: This API will send a response to Look-up of Activity Bookings.
        <p><strong>OperationId:</strong>getActivityBookings</p>
      operationId: getActivityBookings
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: profileIdContext
        schema:
          default: "[\"Opera\"]"
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: profileIdsType
        schema:
          default: "[\"Profile\"]"
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: reservationIdContext
        schema:
          default: "[\"Opera\"]"
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdsType
        schema:
          default: "[\"Reservation\"]"
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: activityIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: activityIdsType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityBookingsDetails'
          description: Message received on an Activity Lookup.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityBookings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Send a response to Look-up of Activity Bookings
      tags:
      - LeisureManagement
  /hotels/{hotelId}/reservations/{reservationId}/activityBookings:
    delete:
      description: This API will send a response to Cancellation of an Activity Booking.
        <p><strong>OperationId:</strong>deleteActivityBooking</p>
      operationId: deleteActivityBooking
      parameters:
      - description: Unique OPERA internal Reservation ID which is used to find any
          reservation in OPERA. This ID is a primary identification of a reservation
          in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: activityId
        required: true
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        example: EXTERNALSYSTEMCODE
        in: query
        name: activityIdType
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Send a response to Cancellation of an Activity Booking
      tags:
      - LeisureManagement
    post:
      description: This API will send a response to Creation of Activity Booking.
        <p><strong>OperationId:</strong>postActivityBooking</p>
      operationId: postActivityBooking
      parameters:
      - description: Unique OPERA internal Reservation ID which is used to find any
          reservation in OPERA. This ID is a primary identification of a reservation
          in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivityBooking_request'
        description: Self-contained Request object that is used when Creating activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Send a response to Creation of Activity Booking
      tags:
      - LeisureManagement
      x-codegen-request-body-name: createActivityBooking
    put:
      description: This API will send a response to a  Change in Activity Booking
        request from external Activity Scheduler system. <p><strong>OperationId:</strong>putActivityBooking</p>
      operationId: putActivityBooking
      parameters:
      - description: Unique OPERA internal Reservation ID which is used to find any
          reservation in OPERA. This ID is a primary identification of a reservation
          in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivityBooking_request'
        description: Self-contained Request object that is used when Updating activities.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityBookingModified'
          description: Self-contained response object that is used when Updating activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Send a response to Change in Activity Booking
      tags:
      - LeisureManagement
      x-codegen-request-body-name: changeActivityBooking
  /hotels/{hotelId}/reservations/{reservationId}/locationNotifications:
    post:
      description: This API will send a response to a Location Notification. <p><strong>OperationId:</strong>postLocationNotification</p>
      operationId: postLocationNotification
      parameters:
      - description: Unique OPERA internal Reservation ID which is used to find any
          reservation in OPERA. This ID is a primary identification of a reservation
          in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postLocationNotification_request'
        description: Generic self-contained request object that is used for Location
          Notification
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Send a response to Location Notification
      tags:
      - LeisureManagement
      x-codegen-request-body-name: locationNotificationToBeCreated
components:
  schemas:
    activityBookingModified:
      properties:
        activityBooking:
          $ref: '#/components/schemas/activityBookingRSType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    activityBookingRQType:
      description: The choice between a reservation header or a profile ID. One or
        the other is required.
      properties:
        activities:
          $ref: '#/components/schemas/activityList'
        hotelId:
          description: This is not required if a Reservation Id is provided
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    activityBookingRSType:
      description: Generic self-contained response object that is used when inserting/
        updating/ canceling activities.
      properties:
        activities:
          $ref: '#/components/schemas/activityList'
      type: object
    activityBookingsDetails:
      properties:
        activityLookUpList:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          type: array
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    activityList:
      description: A collection of Activity objects.
      items:
        $ref: '#/components/schemas/activityList_inner'
      maxItems: 4000
      type: array
    activityLocationType:
      description: Activity Location detail information.
      properties:
        code:
          description: Code for the activity Location.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the Activity Location.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property to which the activity Location belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    activityLocationsType:
      description: Collection of Activity Locations.
      items:
        $ref: '#/components/schemas/activityLocationType'
      maxItems: 4000
      type: array
    activityStatusCodeType:
      description: Activity Status Code detail information.
      properties:
        application:
          description: Used in Application for the activity status code.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code for the activity status code. Cannot be null.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the Activity Status Code. Cannot be null.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property to which the activity status code belongs to. Cannot
            be null.
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        priority:
          description: Priority for the activity status code.
          type: integer
      type: object
    activityStatusCodesType:
      description: Activity Status Codes object.
      items:
        $ref: '#/components/schemas/activityStatusCodeType'
      maxItems: 4000
      type: array
    activityTypeDetailType:
      description: Activity Type detail information.
      properties:
        description:
          description: Description for the Activity Type.
          maxLength: 100
          minLength: 0
          type: string
        hotelId:
          description: Property to which the activity Type belongs to.
          maxLength: 20
          minLength: 0
          type: string
        typeCode:
          description: Type for the activity Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    activityTypesType:
      description: Collection of Activity Types.
      items:
        $ref: '#/components/schemas/activityTypeDetailType'
      maxItems: 4000
      type: array
    addressType:
      description: Provides address information.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
      type: object
    changeActivityBooking:
      properties:
        activityBooking:
          $ref: '#/components/schemas/activityBookingRQType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityLocations:
      description: Request object for changing Activity Locations.
      properties:
        activityLocations:
          $ref: '#/components/schemas/activityLocationsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityLocationsRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          $ref: '#/components/schemas/errorsType'
        links:
          $ref: '#/components/schemas/links'
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityStatusCodes:
      description: Request object for changing Activity Status Codes.
      properties:
        activityStatusCodes:
          $ref: '#/components/schemas/activityStatusCodesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityStatusCodesRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          $ref: '#/components/schemas/errorsType'
        links:
          $ref: '#/components/schemas/links'
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityTypes:
      description: Request object for changing Activity Types.
      properties:
        activityTypes:
          $ref: '#/components/schemas/activityTypesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    changeActivityTypesRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          $ref: '#/components/schemas/errorsType'
        links:
          $ref: '#/components/schemas/links'
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    copyActivityLocations:
      description: Request object for copying Activity Locations to hotel(s).
      properties:
        copyInstructions:
          $ref: '#/components/schemas/copyConfigurationCodesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    copyActivityLocationsRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          $ref: '#/components/schemas/errorsType'
        links:
          $ref: '#/components/schemas/links'
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    copyActivityTypes:
      description: Request object for copying Activity Types to hotel(s).
      properties:
        copyInstructions:
          $ref: '#/components/schemas/copyConfigurationCodesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    copyActivityTypesRS:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        correlationId:
          description: Allow end-to-end correlation of log messages with the corresponding
            Web service message throughout the processing of the Web service message.
          maxLength: 80
          minLength: 0
          type: string
        echoToken:
          description: "A reference for additional message identification, assigned\
            \ by the requesting host system. When a request message includes an echo\
            \ token the corresponding response message MUST include an echo token\
            \ with an identical value."
          maxLength: 128
          minLength: 0
          type: string
        enforceAllowed:
          description: Indicates if the operation supports the ability to force the
            retry request through OPERA services in the case where the external system
            continues to fail.
          type: boolean
        errors:
          $ref: '#/components/schemas/errorsType'
        links:
          $ref: '#/components/schemas/links'
        retryAllowed:
          description: Indicates if the operation supports the ability to retry the
            request.
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        timeStamp:
          description: "Indicates the creation date and time of the message in UTC\
            \ using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ\
            \ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38\
            \ pm UTC becomes 2003-11-20T13:59:38Z)."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        useLocalAllowed:
          description: This attribute carries the user selected confirmation value
            on confirmation popup.
          type: boolean
        version:
          description: "For all Opera versioned messages, the version of the message\
            \ is indicated by a Opera Version value."
          maxLength: 40
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    copyConfigurationCodeType:
      description: Information needed to copy configuration code from one property
        to the other.
      properties:
        code:
          description: Source hotel code from which code is to be copied from.
          maxLength: 20
          minLength: 0
          type: string
        sourceHotelCode:
          description: Code that is to be copied.
          maxLength: 20
          minLength: 0
          type: string
        targetHotelCode:
          description: Property to which configuration code type to be copied to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    copyConfigurationCodesType:
      description: Information needed to copy configuration code from one property
        to the other.
      items:
        $ref: '#/components/schemas/copyConfigurationCodeType'
      maxItems: 4000
      type: array
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    createActivityBooking:
      properties:
        activityBooking:
          $ref: '#/components/schemas/activityBookingRQType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    createActivityLocations:
      description: Request object for creating Activity Locations.
      properties:
        activityLocations:
          $ref: '#/components/schemas/activityLocationsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    createActivityStatusCodes:
      description: Request object for creating Activity Status Codes.
      properties:
        activityStatusCodes:
          $ref: '#/components/schemas/activityStatusCodesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    createActivityTypes:
      description: Request object for creating Activity Types.
      properties:
        activityTypes:
          $ref: '#/components/schemas/activityTypesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        endDateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        startDateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    errorType:
      description: "Standard way to indicate that an error occurred during the processing\
        \ of an message. If the message successfully processes, but there are business\
        \ errors, those errors should be passed in the warning element."
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nodeList:
          description: "An XPath expression that selects all the nodes whose data\
            \ caused this error. Further, this expression should have an additional\
            \ contraint which contains the data of the node. This will provide the\
            \ offending data back to systems that cannot maintain the original message."
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    errorsType:
      description: An error that occurred during the processing of a message.
      items:
        $ref: '#/components/schemas/errorType'
      maxItems: 99
      type: array
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        links:
          $ref: '#/components/schemas/links'
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Detail
      type: object
    fetchActivityBookingsType:
      description: Used in the request message to describe the "filtering Criteria"
        when executing an activity lookup.
      properties:
        activities:
          $ref: '#/components/schemas/activityList'
        address:
          $ref: '#/components/schemas/addressType'
        hotelId:
          description: "Hotel Code, It is used to filter hotel specific children to\
            \ this specific hotel code."
          maxLength: 20
          minLength: 0
          type: string
        personName:
          $ref: '#/components/schemas/personNameType'
        profileId:
          $ref: '#/components/schemas/uniqueIDListType'
      type: object
    fetchActivityLocations:
      description: Response object after fetching the Activity Locations.
      properties:
        activityLocations:
          $ref: '#/components/schemas/activityLocationsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    fetchActivityStatusCodes:
      description: Response object after fetching the Activity Status Codes.
      properties:
        activityStatusCodes:
          $ref: '#/components/schemas/activityStatusCodesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    fetchActivityTypes:
      description: Response object after fetching the Activity Types.
      properties:
        activityTypes:
          $ref: '#/components/schemas/activityTypesType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: Property Value
          type: string
      type: object
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    locationNotificationStatus:
      description: "(Enumeration) There are 3 possible values: SET, CLEAR and OTHER"
      enum:
      - Set
      - Clear
      - Other
      type: string
    locationNotificationToBeCreated:
      properties:
        activityTime:
          $ref: '#/components/schemas/dateTimeSpanType'
        description:
          $ref: '#/components/schemas/formattedTextTextType'
        links:
          $ref: '#/components/schemas/links'
        locationNotificationStatus:
          $ref: '#/components/schemas/locationNotificationStatus'
        locationText:
          $ref: '#/components/schemas/formattedTextTextType'
        otherLocationNotificationStatus:
          maxLength: 2000
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    personNameType:
      description: This provides name information for a person.
      properties:
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        externalSystem:
          description: "When name type is external, indicates the external system\
            \ the name belongs to."
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        salutation:
          description: Salutation of the profile
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    successType:
      description: Returning an empty element of this type indicates the successful
        processing of an message. This is used in conjunction with the Warning Type
        to report any warnings or business errors.
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    postActivityLocations_request:
      allOf:
      - $ref: '#/components/schemas/createActivityLocations'
    putActivityLocations_request:
      allOf:
      - $ref: '#/components/schemas/changeActivityLocations'
    copyActivityLocations_request:
      allOf:
      - $ref: '#/components/schemas/copyActivityLocations'
    postActivityStatusCodes_request:
      allOf:
      - $ref: '#/components/schemas/createActivityStatusCodes'
    putActivityStatusCodes_request:
      allOf:
      - $ref: '#/components/schemas/changeActivityStatusCodes'
    postActivityTypes_request:
      allOf:
      - $ref: '#/components/schemas/createActivityTypes'
    putActivityTypes_request:
      allOf:
      - $ref: '#/components/schemas/changeActivityTypes'
    copyActivityTypes_request:
      allOf:
      - $ref: '#/components/schemas/copyActivityTypes'
    putActivityBooking_request:
      allOf:
      - $ref: '#/components/schemas/changeActivityBooking'
    postActivityBooking_request:
      allOf:
      - $ref: '#/components/schemas/createActivityBooking'
    postLocationNotification_request:
      allOf:
      - $ref: '#/components/schemas/locationNotificationToBeCreated'
    activityList_inner_deposit:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        collectedBy:
          enum:
          - Vendor
          - Agent
          - Other
          type: string
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    activityList_inner:
      description: Represents a single instance of a scheduled activity.
      properties:
        activityIds:
          $ref: '#/components/schemas/uniqueIDListType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        deposit:
          $ref: '#/components/schemas/activityList_inner_deposit'
        description:
          description: Description of the activity
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        duration:
          $ref: '#/components/schemas/dateTimeSpanType'
        extensions:
          description: Vendor extensions to the activity record.
          items:
            type: string
          maxItems: 4000
          type: array
        groupCode:
          description: Any Block code associated with the activity if its a Group
            booking.
          type: string
        inactiveDate:
          description: The Date by which the activity is deemed Cancelled/Deleted.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        link:
          description: When true indicates that activity link only needs to be inserted
            or deleted for this record.
          type: boolean
        location:
          description: "The Location where the activity takes place. Eg: Salon"
          type: string
        name:
          description: Name of the people for whom the activity is scheduled. Can
            be more than one but should be equal to the number of persons
          items:
            maxLength: 200
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        note:
          description: Any additional notes or comments regarding the scheduled activity.
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        numberOfPersons:
          description: The total number of the people for whom the activity is scheduled.
            Can be more than one but should be equal to the number of persons
          type: integer
        participants:
          description: The names of the participants.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 4000
          type: array
        status:
          description: "Activity reservation status. Typical examples are RESERVED,\
            \ BOOKED, CANCELLED, and TENTATIVE."
          type: string
        statusDescription:
          description: "Activity reservation status description. Typical examples\
            \ are RESERVED, BOOKED, CANCELLED, and TENTATIVE."
          type: string
        timeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        type:
          description: "The Type of the activity. Eg: SPA, Golf etc."
          type: string
        uRLLink:
          description: The URL link to launch the Activity Reservation System to view
            or edit full details of this activity.
          type: string
      type: object
x-original-swagger-version: "2.0"
