/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRateLevelsRateLevels type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRateLevelsRateLevels{}

// ChannelRateLevelsRateLevels channel rate levels to be created.
type ChannelRateLevelsRateLevels struct {
	// Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	// Channel rate level details.
	RateLevel []SystemRateLevelType `json:"rateLevel,omitempty"`
}

// NewChannelRateLevelsRateLevels instantiates a new ChannelRateLevelsRateLevels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRateLevelsRateLevels() *ChannelRateLevelsRateLevels {
	this := ChannelRateLevelsRateLevels{}
	return &this
}

// NewChannelRateLevelsRateLevelsWithDefaults instantiates a new ChannelRateLevelsRateLevels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRateLevelsRateLevelsWithDefaults() *ChannelRateLevelsRateLevels {
	this := ChannelRateLevelsRateLevels{}
	return &this
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *ChannelRateLevelsRateLevels) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateLevelsRateLevels) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *ChannelRateLevelsRateLevels) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *ChannelRateLevelsRateLevels) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetRateLevel returns the RateLevel field value if set, zero value otherwise.
func (o *ChannelRateLevelsRateLevels) GetRateLevel() []SystemRateLevelType {
	if o == nil || IsNil(o.RateLevel) {
		var ret []SystemRateLevelType
		return ret
	}
	return o.RateLevel
}

// GetRateLevelOk returns a tuple with the RateLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateLevelsRateLevels) GetRateLevelOk() ([]SystemRateLevelType, bool) {
	if o == nil || IsNil(o.RateLevel) {
		return nil, false
	}
	return o.RateLevel, true
}

// HasRateLevel returns a boolean if a field has been set.
func (o *ChannelRateLevelsRateLevels) HasRateLevel() bool {
	if o != nil && !IsNil(o.RateLevel) {
		return true
	}

	return false
}

// SetRateLevel gets a reference to the given []SystemRateLevelType and assigns it to the RateLevel field.
func (o *ChannelRateLevelsRateLevels) SetRateLevel(v []SystemRateLevelType) {
	o.RateLevel = v
}

func (o ChannelRateLevelsRateLevels) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRateLevelsRateLevels) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.RateLevel) {
		toSerialize["rateLevel"] = o.RateLevel
	}
	return toSerialize, nil
}

type NullableChannelRateLevelsRateLevels struct {
	value *ChannelRateLevelsRateLevels
	isSet bool
}

func (v NullableChannelRateLevelsRateLevels) Get() *ChannelRateLevelsRateLevels {
	return v.value
}

func (v *NullableChannelRateLevelsRateLevels) Set(val *ChannelRateLevelsRateLevels) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRateLevelsRateLevels) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRateLevelsRateLevels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRateLevelsRateLevels(val *ChannelRateLevelsRateLevels) *NullableChannelRateLevelsRateLevels {
	return &NullableChannelRateLevelsRateLevels{value: val, isSet: true}
}

func (v NullableChannelRateLevelsRateLevels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRateLevelsRateLevels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


