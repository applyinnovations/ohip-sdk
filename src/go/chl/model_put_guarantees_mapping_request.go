/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the PutGuaranteesMappingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutGuaranteesMappingRequest{}

// PutGuaranteesMappingRequest struct for PutGuaranteesMappingRequest
type PutGuaranteesMappingRequest struct {
	Guarantees *GuaranteesMappingType `json:"guarantees,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPutGuaranteesMappingRequest instantiates a new PutGuaranteesMappingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutGuaranteesMappingRequest() *PutGuaranteesMappingRequest {
	this := PutGuaranteesMappingRequest{}
	return &this
}

// NewPutGuaranteesMappingRequestWithDefaults instantiates a new PutGuaranteesMappingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutGuaranteesMappingRequestWithDefaults() *PutGuaranteesMappingRequest {
	this := PutGuaranteesMappingRequest{}
	return &this
}

// GetGuarantees returns the Guarantees field value if set, zero value otherwise.
func (o *PutGuaranteesMappingRequest) GetGuarantees() GuaranteesMappingType {
	if o == nil || IsNil(o.Guarantees) {
		var ret GuaranteesMappingType
		return ret
	}
	return *o.Guarantees
}

// GetGuaranteesOk returns a tuple with the Guarantees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutGuaranteesMappingRequest) GetGuaranteesOk() (*GuaranteesMappingType, bool) {
	if o == nil || IsNil(o.Guarantees) {
		return nil, false
	}
	return o.Guarantees, true
}

// HasGuarantees returns a boolean if a field has been set.
func (o *PutGuaranteesMappingRequest) HasGuarantees() bool {
	if o != nil && !IsNil(o.Guarantees) {
		return true
	}

	return false
}

// SetGuarantees gets a reference to the given GuaranteesMappingType and assigns it to the Guarantees field.
func (o *PutGuaranteesMappingRequest) SetGuarantees(v GuaranteesMappingType) {
	o.Guarantees = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PutGuaranteesMappingRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutGuaranteesMappingRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PutGuaranteesMappingRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PutGuaranteesMappingRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutGuaranteesMappingRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutGuaranteesMappingRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutGuaranteesMappingRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PutGuaranteesMappingRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PutGuaranteesMappingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutGuaranteesMappingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Guarantees) {
		toSerialize["guarantees"] = o.Guarantees
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutGuaranteesMappingRequest struct {
	value *PutGuaranteesMappingRequest
	isSet bool
}

func (v NullablePutGuaranteesMappingRequest) Get() *PutGuaranteesMappingRequest {
	return v.value
}

func (v *NullablePutGuaranteesMappingRequest) Set(val *PutGuaranteesMappingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutGuaranteesMappingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutGuaranteesMappingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutGuaranteesMappingRequest(val *PutGuaranteesMappingRequest) *NullablePutGuaranteesMappingRequest {
	return &NullablePutGuaranteesMappingRequest{value: val, isSet: true}
}

func (v NullablePutGuaranteesMappingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutGuaranteesMappingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


