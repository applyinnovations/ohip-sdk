/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the PublishRatePlanTypeChannelCodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublishRatePlanTypeChannelCodes{}

// PublishRatePlanTypeChannelCodes The selected Channel Rate Codes for update.
type PublishRatePlanTypeChannelCodes struct {
	ChannelRatePlanCodes *CodeListType `json:"channelRatePlanCodes,omitempty"`
	ChannelRoomTypes *CodeListType `json:"channelRoomTypes,omitempty"`
}

// NewPublishRatePlanTypeChannelCodes instantiates a new PublishRatePlanTypeChannelCodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishRatePlanTypeChannelCodes() *PublishRatePlanTypeChannelCodes {
	this := PublishRatePlanTypeChannelCodes{}
	return &this
}

// NewPublishRatePlanTypeChannelCodesWithDefaults instantiates a new PublishRatePlanTypeChannelCodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishRatePlanTypeChannelCodesWithDefaults() *PublishRatePlanTypeChannelCodes {
	this := PublishRatePlanTypeChannelCodes{}
	return &this
}

// GetChannelRatePlanCodes returns the ChannelRatePlanCodes field value if set, zero value otherwise.
func (o *PublishRatePlanTypeChannelCodes) GetChannelRatePlanCodes() CodeListType {
	if o == nil || IsNil(o.ChannelRatePlanCodes) {
		var ret CodeListType
		return ret
	}
	return *o.ChannelRatePlanCodes
}

// GetChannelRatePlanCodesOk returns a tuple with the ChannelRatePlanCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanTypeChannelCodes) GetChannelRatePlanCodesOk() (*CodeListType, bool) {
	if o == nil || IsNil(o.ChannelRatePlanCodes) {
		return nil, false
	}
	return o.ChannelRatePlanCodes, true
}

// HasChannelRatePlanCodes returns a boolean if a field has been set.
func (o *PublishRatePlanTypeChannelCodes) HasChannelRatePlanCodes() bool {
	if o != nil && !IsNil(o.ChannelRatePlanCodes) {
		return true
	}

	return false
}

// SetChannelRatePlanCodes gets a reference to the given CodeListType and assigns it to the ChannelRatePlanCodes field.
func (o *PublishRatePlanTypeChannelCodes) SetChannelRatePlanCodes(v CodeListType) {
	o.ChannelRatePlanCodes = &v
}

// GetChannelRoomTypes returns the ChannelRoomTypes field value if set, zero value otherwise.
func (o *PublishRatePlanTypeChannelCodes) GetChannelRoomTypes() CodeListType {
	if o == nil || IsNil(o.ChannelRoomTypes) {
		var ret CodeListType
		return ret
	}
	return *o.ChannelRoomTypes
}

// GetChannelRoomTypesOk returns a tuple with the ChannelRoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanTypeChannelCodes) GetChannelRoomTypesOk() (*CodeListType, bool) {
	if o == nil || IsNil(o.ChannelRoomTypes) {
		return nil, false
	}
	return o.ChannelRoomTypes, true
}

// HasChannelRoomTypes returns a boolean if a field has been set.
func (o *PublishRatePlanTypeChannelCodes) HasChannelRoomTypes() bool {
	if o != nil && !IsNil(o.ChannelRoomTypes) {
		return true
	}

	return false
}

// SetChannelRoomTypes gets a reference to the given CodeListType and assigns it to the ChannelRoomTypes field.
func (o *PublishRatePlanTypeChannelCodes) SetChannelRoomTypes(v CodeListType) {
	o.ChannelRoomTypes = &v
}

func (o PublishRatePlanTypeChannelCodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublishRatePlanTypeChannelCodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelRatePlanCodes) {
		toSerialize["channelRatePlanCodes"] = o.ChannelRatePlanCodes
	}
	if !IsNil(o.ChannelRoomTypes) {
		toSerialize["channelRoomTypes"] = o.ChannelRoomTypes
	}
	return toSerialize, nil
}

type NullablePublishRatePlanTypeChannelCodes struct {
	value *PublishRatePlanTypeChannelCodes
	isSet bool
}

func (v NullablePublishRatePlanTypeChannelCodes) Get() *PublishRatePlanTypeChannelCodes {
	return v.value
}

func (v *NullablePublishRatePlanTypeChannelCodes) Set(val *PublishRatePlanTypeChannelCodes) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishRatePlanTypeChannelCodes) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishRatePlanTypeChannelCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishRatePlanTypeChannelCodes(val *PublishRatePlanTypeChannelCodes) *NullablePublishRatePlanTypeChannelCodes {
	return &NullablePublishRatePlanTypeChannelCodes{value: val, isSet: true}
}

func (v NullablePublishRatePlanTypeChannelCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishRatePlanTypeChannelCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


