/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the DistributionTemplateType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributionTemplateType{}

// DistributionTemplateType Information about a distribution template.
type DistributionTemplateType struct {
	ChannelRates *DistributionTemplateChannelRatesType `json:"channelRates,omitempty"`
	// Uniquely identifies the distribution template.
	Code *string `json:"code,omitempty"`
	// Description of the distribution template.
	Description *string `json:"description,omitempty"`
	// Display sequence of the distribution template.
	DisplaySequence *int32 `json:"displaySequence,omitempty"`
	// Flag that indicates whether distribution template is inactive or not.
	Inactive *bool `json:"inactive,omitempty"`
	// Overrides availability of configuring negotiated rates given Channel is flagged as negotiated.
	NegotiatedRate *bool `json:"negotiatedRate,omitempty"`
	// Classification or grouping of the distribution template.
	Type *string `json:"type,omitempty"`
}

// NewDistributionTemplateType instantiates a new DistributionTemplateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributionTemplateType() *DistributionTemplateType {
	this := DistributionTemplateType{}
	return &this
}

// NewDistributionTemplateTypeWithDefaults instantiates a new DistributionTemplateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributionTemplateTypeWithDefaults() *DistributionTemplateType {
	this := DistributionTemplateType{}
	return &this
}

// GetChannelRates returns the ChannelRates field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetChannelRates() DistributionTemplateChannelRatesType {
	if o == nil || IsNil(o.ChannelRates) {
		var ret DistributionTemplateChannelRatesType
		return ret
	}
	return *o.ChannelRates
}

// GetChannelRatesOk returns a tuple with the ChannelRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetChannelRatesOk() (*DistributionTemplateChannelRatesType, bool) {
	if o == nil || IsNil(o.ChannelRates) {
		return nil, false
	}
	return o.ChannelRates, true
}

// HasChannelRates returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasChannelRates() bool {
	if o != nil && !IsNil(o.ChannelRates) {
		return true
	}

	return false
}

// SetChannelRates gets a reference to the given DistributionTemplateChannelRatesType and assigns it to the ChannelRates field.
func (o *DistributionTemplateType) SetChannelRates(v DistributionTemplateChannelRatesType) {
	o.ChannelRates = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DistributionTemplateType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DistributionTemplateType) SetDescription(v string) {
	o.Description = &v
}

// GetDisplaySequence returns the DisplaySequence field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetDisplaySequence() int32 {
	if o == nil || IsNil(o.DisplaySequence) {
		var ret int32
		return ret
	}
	return *o.DisplaySequence
}

// GetDisplaySequenceOk returns a tuple with the DisplaySequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetDisplaySequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplaySequence) {
		return nil, false
	}
	return o.DisplaySequence, true
}

// HasDisplaySequence returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasDisplaySequence() bool {
	if o != nil && !IsNil(o.DisplaySequence) {
		return true
	}

	return false
}

// SetDisplaySequence gets a reference to the given int32 and assigns it to the DisplaySequence field.
func (o *DistributionTemplateType) SetDisplaySequence(v int32) {
	o.DisplaySequence = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *DistributionTemplateType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetNegotiatedRate returns the NegotiatedRate field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetNegotiatedRate() bool {
	if o == nil || IsNil(o.NegotiatedRate) {
		var ret bool
		return ret
	}
	return *o.NegotiatedRate
}

// GetNegotiatedRateOk returns a tuple with the NegotiatedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetNegotiatedRateOk() (*bool, bool) {
	if o == nil || IsNil(o.NegotiatedRate) {
		return nil, false
	}
	return o.NegotiatedRate, true
}

// HasNegotiatedRate returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasNegotiatedRate() bool {
	if o != nil && !IsNil(o.NegotiatedRate) {
		return true
	}

	return false
}

// SetNegotiatedRate gets a reference to the given bool and assigns it to the NegotiatedRate field.
func (o *DistributionTemplateType) SetNegotiatedRate(v bool) {
	o.NegotiatedRate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DistributionTemplateType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributionTemplateType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DistributionTemplateType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DistributionTemplateType) SetType(v string) {
	o.Type = &v
}

func (o DistributionTemplateType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributionTemplateType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelRates) {
		toSerialize["channelRates"] = o.ChannelRates
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplaySequence) {
		toSerialize["displaySequence"] = o.DisplaySequence
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.NegotiatedRate) {
		toSerialize["negotiatedRate"] = o.NegotiatedRate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDistributionTemplateType struct {
	value *DistributionTemplateType
	isSet bool
}

func (v NullableDistributionTemplateType) Get() *DistributionTemplateType {
	return v.value
}

func (v *NullableDistributionTemplateType) Set(val *DistributionTemplateType) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributionTemplateType) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributionTemplateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributionTemplateType(val *DistributionTemplateType) *NullableDistributionTemplateType {
	return &NullableDistributionTemplateType{value: val, isSet: true}
}

func (v NullableDistributionTemplateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributionTemplateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


