/*
OPERA Cloud Availability Extension API

APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2.0.0
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parext

import (
	"encoding/json"
)

// checks if the MultiRoomRateAvailabilityResponseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiRoomRateAvailabilityResponseType{}

// MultiRoomRateAvailabilityResponseType Response object for multi room rate availability.
type MultiRoomRateAvailabilityResponseType struct {
	HotelAvailability []MultiRoomRateAvailabilityType `json:"hotelAvailability,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewMultiRoomRateAvailabilityResponseType instantiates a new MultiRoomRateAvailabilityResponseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiRoomRateAvailabilityResponseType() *MultiRoomRateAvailabilityResponseType {
	this := MultiRoomRateAvailabilityResponseType{}
	return &this
}

// NewMultiRoomRateAvailabilityResponseTypeWithDefaults instantiates a new MultiRoomRateAvailabilityResponseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiRoomRateAvailabilityResponseTypeWithDefaults() *MultiRoomRateAvailabilityResponseType {
	this := MultiRoomRateAvailabilityResponseType{}
	return &this
}

// GetHotelAvailability returns the HotelAvailability field value if set, zero value otherwise.
func (o *MultiRoomRateAvailabilityResponseType) GetHotelAvailability() []MultiRoomRateAvailabilityType {
	if o == nil || IsNil(o.HotelAvailability) {
		var ret []MultiRoomRateAvailabilityType
		return ret
	}
	return o.HotelAvailability
}

// GetHotelAvailabilityOk returns a tuple with the HotelAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiRoomRateAvailabilityResponseType) GetHotelAvailabilityOk() ([]MultiRoomRateAvailabilityType, bool) {
	if o == nil || IsNil(o.HotelAvailability) {
		return nil, false
	}
	return o.HotelAvailability, true
}

// HasHotelAvailability returns a boolean if a field has been set.
func (o *MultiRoomRateAvailabilityResponseType) HasHotelAvailability() bool {
	if o != nil && !IsNil(o.HotelAvailability) {
		return true
	}

	return false
}

// SetHotelAvailability gets a reference to the given []MultiRoomRateAvailabilityType and assigns it to the HotelAvailability field.
func (o *MultiRoomRateAvailabilityResponseType) SetHotelAvailability(v []MultiRoomRateAvailabilityType) {
	o.HotelAvailability = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *MultiRoomRateAvailabilityResponseType) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiRoomRateAvailabilityResponseType) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *MultiRoomRateAvailabilityResponseType) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *MultiRoomRateAvailabilityResponseType) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o MultiRoomRateAvailabilityResponseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiRoomRateAvailabilityResponseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelAvailability) {
		toSerialize["hotelAvailability"] = o.HotelAvailability
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableMultiRoomRateAvailabilityResponseType struct {
	value *MultiRoomRateAvailabilityResponseType
	isSet bool
}

func (v NullableMultiRoomRateAvailabilityResponseType) Get() *MultiRoomRateAvailabilityResponseType {
	return v.value
}

func (v *NullableMultiRoomRateAvailabilityResponseType) Set(val *MultiRoomRateAvailabilityResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiRoomRateAvailabilityResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiRoomRateAvailabilityResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiRoomRateAvailabilityResponseType(val *MultiRoomRateAvailabilityResponseType) *NullableMultiRoomRateAvailabilityResponseType {
	return &NullableMultiRoomRateAvailabilityResponseType{value: val, isSet: true}
}

func (v NullableMultiRoomRateAvailabilityResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiRoomRateAvailabilityResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


