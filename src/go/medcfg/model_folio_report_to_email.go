/*
OPERA Cloud Content Service

Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package medcfg

import (
	"encoding/json"
)

// checks if the FolioReportToEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioReportToEmail{}

// FolioReportToEmail Request to generate and email a folio report.
type FolioReportToEmail struct {
	EmailRecipients *EmailRecipientsType `json:"emailRecipients,omitempty"`
	FolioInfo *FolioReportCriteriaType `json:"folioInfo,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewFolioReportToEmail instantiates a new FolioReportToEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioReportToEmail() *FolioReportToEmail {
	this := FolioReportToEmail{}
	return &this
}

// NewFolioReportToEmailWithDefaults instantiates a new FolioReportToEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioReportToEmailWithDefaults() *FolioReportToEmail {
	this := FolioReportToEmail{}
	return &this
}

// GetEmailRecipients returns the EmailRecipients field value if set, zero value otherwise.
func (o *FolioReportToEmail) GetEmailRecipients() EmailRecipientsType {
	if o == nil || IsNil(o.EmailRecipients) {
		var ret EmailRecipientsType
		return ret
	}
	return *o.EmailRecipients
}

// GetEmailRecipientsOk returns a tuple with the EmailRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioReportToEmail) GetEmailRecipientsOk() (*EmailRecipientsType, bool) {
	if o == nil || IsNil(o.EmailRecipients) {
		return nil, false
	}
	return o.EmailRecipients, true
}

// HasEmailRecipients returns a boolean if a field has been set.
func (o *FolioReportToEmail) HasEmailRecipients() bool {
	if o != nil && !IsNil(o.EmailRecipients) {
		return true
	}

	return false
}

// SetEmailRecipients gets a reference to the given EmailRecipientsType and assigns it to the EmailRecipients field.
func (o *FolioReportToEmail) SetEmailRecipients(v EmailRecipientsType) {
	o.EmailRecipients = &v
}

// GetFolioInfo returns the FolioInfo field value if set, zero value otherwise.
func (o *FolioReportToEmail) GetFolioInfo() FolioReportCriteriaType {
	if o == nil || IsNil(o.FolioInfo) {
		var ret FolioReportCriteriaType
		return ret
	}
	return *o.FolioInfo
}

// GetFolioInfoOk returns a tuple with the FolioInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioReportToEmail) GetFolioInfoOk() (*FolioReportCriteriaType, bool) {
	if o == nil || IsNil(o.FolioInfo) {
		return nil, false
	}
	return o.FolioInfo, true
}

// HasFolioInfo returns a boolean if a field has been set.
func (o *FolioReportToEmail) HasFolioInfo() bool {
	if o != nil && !IsNil(o.FolioInfo) {
		return true
	}

	return false
}

// SetFolioInfo gets a reference to the given FolioReportCriteriaType and assigns it to the FolioInfo field.
func (o *FolioReportToEmail) SetFolioInfo(v FolioReportCriteriaType) {
	o.FolioInfo = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *FolioReportToEmail) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioReportToEmail) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *FolioReportToEmail) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *FolioReportToEmail) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *FolioReportToEmail) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioReportToEmail) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *FolioReportToEmail) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *FolioReportToEmail) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o FolioReportToEmail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioReportToEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailRecipients) {
		toSerialize["emailRecipients"] = o.EmailRecipients
	}
	if !IsNil(o.FolioInfo) {
		toSerialize["folioInfo"] = o.FolioInfo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableFolioReportToEmail struct {
	value *FolioReportToEmail
	isSet bool
}

func (v NullableFolioReportToEmail) Get() *FolioReportToEmail {
	return v.value
}

func (v *NullableFolioReportToEmail) Set(val *FolioReportToEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioReportToEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioReportToEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioReportToEmail(val *FolioReportToEmail) *NullableFolioReportToEmail {
	return &NullableFolioReportToEmail{value: val, isSet: true}
}

func (v NullableFolioReportToEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioReportToEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


