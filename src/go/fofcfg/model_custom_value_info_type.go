/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomValueInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomValueInfoType{}

// CustomValueInfoType Value information for a CUSTOM segment code. Holds total and monthly Value information.
type CustomValueInfoType struct {
	// Value information for each month for CUSTOM segment code.
	MonthlyValueInfo []MonthlyValueInfoType `json:"monthlyValueInfo,omitempty"`
	// Total Value for CUSTOM segment code.
	TotalValue *float32 `json:"totalValue,omitempty"`
}

// NewCustomValueInfoType instantiates a new CustomValueInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomValueInfoType() *CustomValueInfoType {
	this := CustomValueInfoType{}
	return &this
}

// NewCustomValueInfoTypeWithDefaults instantiates a new CustomValueInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomValueInfoTypeWithDefaults() *CustomValueInfoType {
	this := CustomValueInfoType{}
	return &this
}

// GetMonthlyValueInfo returns the MonthlyValueInfo field value if set, zero value otherwise.
func (o *CustomValueInfoType) GetMonthlyValueInfo() []MonthlyValueInfoType {
	if o == nil || IsNil(o.MonthlyValueInfo) {
		var ret []MonthlyValueInfoType
		return ret
	}
	return o.MonthlyValueInfo
}

// GetMonthlyValueInfoOk returns a tuple with the MonthlyValueInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomValueInfoType) GetMonthlyValueInfoOk() ([]MonthlyValueInfoType, bool) {
	if o == nil || IsNil(o.MonthlyValueInfo) {
		return nil, false
	}
	return o.MonthlyValueInfo, true
}

// HasMonthlyValueInfo returns a boolean if a field has been set.
func (o *CustomValueInfoType) HasMonthlyValueInfo() bool {
	if o != nil && !IsNil(o.MonthlyValueInfo) {
		return true
	}

	return false
}

// SetMonthlyValueInfo gets a reference to the given []MonthlyValueInfoType and assigns it to the MonthlyValueInfo field.
func (o *CustomValueInfoType) SetMonthlyValueInfo(v []MonthlyValueInfoType) {
	o.MonthlyValueInfo = v
}

// GetTotalValue returns the TotalValue field value if set, zero value otherwise.
func (o *CustomValueInfoType) GetTotalValue() float32 {
	if o == nil || IsNil(o.TotalValue) {
		var ret float32
		return ret
	}
	return *o.TotalValue
}

// GetTotalValueOk returns a tuple with the TotalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomValueInfoType) GetTotalValueOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalValue) {
		return nil, false
	}
	return o.TotalValue, true
}

// HasTotalValue returns a boolean if a field has been set.
func (o *CustomValueInfoType) HasTotalValue() bool {
	if o != nil && !IsNil(o.TotalValue) {
		return true
	}

	return false
}

// SetTotalValue gets a reference to the given float32 and assigns it to the TotalValue field.
func (o *CustomValueInfoType) SetTotalValue(v float32) {
	o.TotalValue = &v
}

func (o CustomValueInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomValueInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MonthlyValueInfo) {
		toSerialize["monthlyValueInfo"] = o.MonthlyValueInfo
	}
	if !IsNil(o.TotalValue) {
		toSerialize["totalValue"] = o.TotalValue
	}
	return toSerialize, nil
}

type NullableCustomValueInfoType struct {
	value *CustomValueInfoType
	isSet bool
}

func (v NullableCustomValueInfoType) Get() *CustomValueInfoType {
	return v.value
}

func (v *NullableCustomValueInfoType) Set(val *CustomValueInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomValueInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomValueInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomValueInfoType(val *CustomValueInfoType) *NullableCustomValueInfoType {
	return &NullableCustomValueInfoType{value: val, isSet: true}
}

func (v NullableCustomValueInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomValueInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


