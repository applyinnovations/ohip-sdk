/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the InterfaceCustomDataInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceCustomDataInfoType{}

// InterfaceCustomDataInfoType This type holds the custom data of a hotel interface.
type InterfaceCustomDataInfoType struct {
	// Specifies whether the details have to be exported as XML. If true, then the details are exported as XML else details are exported as text.
	ExportAsXml *bool `json:"exportAsXml,omitempty"`
	// Specifies whether the Doorcard field details have to be included in the XML Export. If true, Doorcard field details will be included in the XML Export else details will not be included. This field is available only when the Export as XML field is selected.
	IncludeDoorcardField *bool `json:"includeDoorcardField,omitempty"`
	InterfaceCustomDataDetails *InterfaceCustomDataDetailsType `json:"interfaceCustomDataDetails,omitempty"`
}

// NewInterfaceCustomDataInfoType instantiates a new InterfaceCustomDataInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceCustomDataInfoType() *InterfaceCustomDataInfoType {
	this := InterfaceCustomDataInfoType{}
	return &this
}

// NewInterfaceCustomDataInfoTypeWithDefaults instantiates a new InterfaceCustomDataInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceCustomDataInfoTypeWithDefaults() *InterfaceCustomDataInfoType {
	this := InterfaceCustomDataInfoType{}
	return &this
}

// GetExportAsXml returns the ExportAsXml field value if set, zero value otherwise.
func (o *InterfaceCustomDataInfoType) GetExportAsXml() bool {
	if o == nil || IsNil(o.ExportAsXml) {
		var ret bool
		return ret
	}
	return *o.ExportAsXml
}

// GetExportAsXmlOk returns a tuple with the ExportAsXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCustomDataInfoType) GetExportAsXmlOk() (*bool, bool) {
	if o == nil || IsNil(o.ExportAsXml) {
		return nil, false
	}
	return o.ExportAsXml, true
}

// HasExportAsXml returns a boolean if a field has been set.
func (o *InterfaceCustomDataInfoType) HasExportAsXml() bool {
	if o != nil && !IsNil(o.ExportAsXml) {
		return true
	}

	return false
}

// SetExportAsXml gets a reference to the given bool and assigns it to the ExportAsXml field.
func (o *InterfaceCustomDataInfoType) SetExportAsXml(v bool) {
	o.ExportAsXml = &v
}

// GetIncludeDoorcardField returns the IncludeDoorcardField field value if set, zero value otherwise.
func (o *InterfaceCustomDataInfoType) GetIncludeDoorcardField() bool {
	if o == nil || IsNil(o.IncludeDoorcardField) {
		var ret bool
		return ret
	}
	return *o.IncludeDoorcardField
}

// GetIncludeDoorcardFieldOk returns a tuple with the IncludeDoorcardField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCustomDataInfoType) GetIncludeDoorcardFieldOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeDoorcardField) {
		return nil, false
	}
	return o.IncludeDoorcardField, true
}

// HasIncludeDoorcardField returns a boolean if a field has been set.
func (o *InterfaceCustomDataInfoType) HasIncludeDoorcardField() bool {
	if o != nil && !IsNil(o.IncludeDoorcardField) {
		return true
	}

	return false
}

// SetIncludeDoorcardField gets a reference to the given bool and assigns it to the IncludeDoorcardField field.
func (o *InterfaceCustomDataInfoType) SetIncludeDoorcardField(v bool) {
	o.IncludeDoorcardField = &v
}

// GetInterfaceCustomDataDetails returns the InterfaceCustomDataDetails field value if set, zero value otherwise.
func (o *InterfaceCustomDataInfoType) GetInterfaceCustomDataDetails() InterfaceCustomDataDetailsType {
	if o == nil || IsNil(o.InterfaceCustomDataDetails) {
		var ret InterfaceCustomDataDetailsType
		return ret
	}
	return *o.InterfaceCustomDataDetails
}

// GetInterfaceCustomDataDetailsOk returns a tuple with the InterfaceCustomDataDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceCustomDataInfoType) GetInterfaceCustomDataDetailsOk() (*InterfaceCustomDataDetailsType, bool) {
	if o == nil || IsNil(o.InterfaceCustomDataDetails) {
		return nil, false
	}
	return o.InterfaceCustomDataDetails, true
}

// HasInterfaceCustomDataDetails returns a boolean if a field has been set.
func (o *InterfaceCustomDataInfoType) HasInterfaceCustomDataDetails() bool {
	if o != nil && !IsNil(o.InterfaceCustomDataDetails) {
		return true
	}

	return false
}

// SetInterfaceCustomDataDetails gets a reference to the given InterfaceCustomDataDetailsType and assigns it to the InterfaceCustomDataDetails field.
func (o *InterfaceCustomDataInfoType) SetInterfaceCustomDataDetails(v InterfaceCustomDataDetailsType) {
	o.InterfaceCustomDataDetails = &v
}

func (o InterfaceCustomDataInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceCustomDataInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportAsXml) {
		toSerialize["exportAsXml"] = o.ExportAsXml
	}
	if !IsNil(o.IncludeDoorcardField) {
		toSerialize["includeDoorcardField"] = o.IncludeDoorcardField
	}
	if !IsNil(o.InterfaceCustomDataDetails) {
		toSerialize["interfaceCustomDataDetails"] = o.InterfaceCustomDataDetails
	}
	return toSerialize, nil
}

type NullableInterfaceCustomDataInfoType struct {
	value *InterfaceCustomDataInfoType
	isSet bool
}

func (v NullableInterfaceCustomDataInfoType) Get() *InterfaceCustomDataInfoType {
	return v.value
}

func (v *NullableInterfaceCustomDataInfoType) Set(val *InterfaceCustomDataInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceCustomDataInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceCustomDataInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceCustomDataInfoType(val *InterfaceCustomDataInfoType) *NullableInterfaceCustomDataInfoType {
	return &NullableInterfaceCustomDataInfoType{value: val, isSet: true}
}

func (v NullableInterfaceCustomDataInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceCustomDataInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


