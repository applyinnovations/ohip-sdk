/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the BudgetForecastCustomInfoBaseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BudgetForecastCustomInfoBaseType{}

// BudgetForecastCustomInfoBaseType Budget Forecast information for budget Custom codes.
type BudgetForecastCustomInfoBaseType struct {
	// Budget Forecast information for Custom segment code .
	CustomCodeInformation []CustomCodeInformationBaseType `json:"customCodeInformation,omitempty"`
	// Flag to indicate if values information has to be included.
	CustomValue *bool `json:"customValue,omitempty"`
}

// NewBudgetForecastCustomInfoBaseType instantiates a new BudgetForecastCustomInfoBaseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetForecastCustomInfoBaseType() *BudgetForecastCustomInfoBaseType {
	this := BudgetForecastCustomInfoBaseType{}
	return &this
}

// NewBudgetForecastCustomInfoBaseTypeWithDefaults instantiates a new BudgetForecastCustomInfoBaseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetForecastCustomInfoBaseTypeWithDefaults() *BudgetForecastCustomInfoBaseType {
	this := BudgetForecastCustomInfoBaseType{}
	return &this
}

// GetCustomCodeInformation returns the CustomCodeInformation field value if set, zero value otherwise.
func (o *BudgetForecastCustomInfoBaseType) GetCustomCodeInformation() []CustomCodeInformationBaseType {
	if o == nil || IsNil(o.CustomCodeInformation) {
		var ret []CustomCodeInformationBaseType
		return ret
	}
	return o.CustomCodeInformation
}

// GetCustomCodeInformationOk returns a tuple with the CustomCodeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastCustomInfoBaseType) GetCustomCodeInformationOk() ([]CustomCodeInformationBaseType, bool) {
	if o == nil || IsNil(o.CustomCodeInformation) {
		return nil, false
	}
	return o.CustomCodeInformation, true
}

// HasCustomCodeInformation returns a boolean if a field has been set.
func (o *BudgetForecastCustomInfoBaseType) HasCustomCodeInformation() bool {
	if o != nil && !IsNil(o.CustomCodeInformation) {
		return true
	}

	return false
}

// SetCustomCodeInformation gets a reference to the given []CustomCodeInformationBaseType and assigns it to the CustomCodeInformation field.
func (o *BudgetForecastCustomInfoBaseType) SetCustomCodeInformation(v []CustomCodeInformationBaseType) {
	o.CustomCodeInformation = v
}

// GetCustomValue returns the CustomValue field value if set, zero value otherwise.
func (o *BudgetForecastCustomInfoBaseType) GetCustomValue() bool {
	if o == nil || IsNil(o.CustomValue) {
		var ret bool
		return ret
	}
	return *o.CustomValue
}

// GetCustomValueOk returns a tuple with the CustomValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetForecastCustomInfoBaseType) GetCustomValueOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomValue) {
		return nil, false
	}
	return o.CustomValue, true
}

// HasCustomValue returns a boolean if a field has been set.
func (o *BudgetForecastCustomInfoBaseType) HasCustomValue() bool {
	if o != nil && !IsNil(o.CustomValue) {
		return true
	}

	return false
}

// SetCustomValue gets a reference to the given bool and assigns it to the CustomValue field.
func (o *BudgetForecastCustomInfoBaseType) SetCustomValue(v bool) {
	o.CustomValue = &v
}

func (o BudgetForecastCustomInfoBaseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BudgetForecastCustomInfoBaseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomCodeInformation) {
		toSerialize["customCodeInformation"] = o.CustomCodeInformation
	}
	if !IsNil(o.CustomValue) {
		toSerialize["customValue"] = o.CustomValue
	}
	return toSerialize, nil
}

type NullableBudgetForecastCustomInfoBaseType struct {
	value *BudgetForecastCustomInfoBaseType
	isSet bool
}

func (v NullableBudgetForecastCustomInfoBaseType) Get() *BudgetForecastCustomInfoBaseType {
	return v.value
}

func (v *NullableBudgetForecastCustomInfoBaseType) Set(val *BudgetForecastCustomInfoBaseType) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetForecastCustomInfoBaseType) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetForecastCustomInfoBaseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetForecastCustomInfoBaseType(val *BudgetForecastCustomInfoBaseType) *NullableBudgetForecastCustomInfoBaseType {
	return &NullableBudgetForecastCustomInfoBaseType{value: val, isSet: true}
}

func (v NullableBudgetForecastCustomInfoBaseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetForecastCustomInfoBaseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


