/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the CustomChargeExemptionsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomChargeExemptionsConfig{}

// CustomChargeExemptionsConfig Response object for fetching Custom Charge Exemptions.
type CustomChargeExemptionsConfig struct {
	CustomChargeExemptionsConfig *CustomChargeExemptionsConfigType `json:"customChargeExemptionsConfig,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewCustomChargeExemptionsConfig instantiates a new CustomChargeExemptionsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomChargeExemptionsConfig() *CustomChargeExemptionsConfig {
	this := CustomChargeExemptionsConfig{}
	return &this
}

// NewCustomChargeExemptionsConfigWithDefaults instantiates a new CustomChargeExemptionsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomChargeExemptionsConfigWithDefaults() *CustomChargeExemptionsConfig {
	this := CustomChargeExemptionsConfig{}
	return &this
}

// GetCustomChargeExemptionsConfig returns the CustomChargeExemptionsConfig field value if set, zero value otherwise.
func (o *CustomChargeExemptionsConfig) GetCustomChargeExemptionsConfig() CustomChargeExemptionsConfigType {
	if o == nil || IsNil(o.CustomChargeExemptionsConfig) {
		var ret CustomChargeExemptionsConfigType
		return ret
	}
	return *o.CustomChargeExemptionsConfig
}

// GetCustomChargeExemptionsConfigOk returns a tuple with the CustomChargeExemptionsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeExemptionsConfig) GetCustomChargeExemptionsConfigOk() (*CustomChargeExemptionsConfigType, bool) {
	if o == nil || IsNil(o.CustomChargeExemptionsConfig) {
		return nil, false
	}
	return o.CustomChargeExemptionsConfig, true
}

// HasCustomChargeExemptionsConfig returns a boolean if a field has been set.
func (o *CustomChargeExemptionsConfig) HasCustomChargeExemptionsConfig() bool {
	if o != nil && !IsNil(o.CustomChargeExemptionsConfig) {
		return true
	}

	return false
}

// SetCustomChargeExemptionsConfig gets a reference to the given CustomChargeExemptionsConfigType and assigns it to the CustomChargeExemptionsConfig field.
func (o *CustomChargeExemptionsConfig) SetCustomChargeExemptionsConfig(v CustomChargeExemptionsConfigType) {
	o.CustomChargeExemptionsConfig = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CustomChargeExemptionsConfig) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeExemptionsConfig) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CustomChargeExemptionsConfig) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *CustomChargeExemptionsConfig) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CustomChargeExemptionsConfig) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomChargeExemptionsConfig) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CustomChargeExemptionsConfig) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *CustomChargeExemptionsConfig) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o CustomChargeExemptionsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomChargeExemptionsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomChargeExemptionsConfig) {
		toSerialize["customChargeExemptionsConfig"] = o.CustomChargeExemptionsConfig
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCustomChargeExemptionsConfig struct {
	value *CustomChargeExemptionsConfig
	isSet bool
}

func (v NullableCustomChargeExemptionsConfig) Get() *CustomChargeExemptionsConfig {
	return v.value
}

func (v *NullableCustomChargeExemptionsConfig) Set(val *CustomChargeExemptionsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomChargeExemptionsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomChargeExemptionsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomChargeExemptionsConfig(val *CustomChargeExemptionsConfig) *NullableCustomChargeExemptionsConfig {
	return &NullableCustomChargeExemptionsConfig{value: val, isSet: true}
}

func (v NullableCustomChargeExemptionsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomChargeExemptionsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


