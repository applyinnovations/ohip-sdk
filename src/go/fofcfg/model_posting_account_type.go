/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the PostingAccountType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostingAccountType{}

// PostingAccountType struct for PostingAccountType
type PostingAccountType struct {
	// Account of posting accounts in transaction codes setup.
	Account *string `json:"account,omitempty"`
	// Account description of posting accounts in transaction codes setup.
	AccountDescription *string `json:"accountDescription,omitempty"`
	// Auto balance flag of postings setup.
	AutoBalance *bool `json:"autoBalance,omitempty"`
	// Description of posting accounts in transaction codes setup.
	Description *string `json:"description,omitempty"`
	// Internal ID to reference the records.
	Id *float32 `json:"id,omitempty"`
	// Payment method of posting accounts in transaction codes setup.
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Sales outlet of posting accounts in transaction codes setup.
	SalesOutlet *string `json:"salesOutlet,omitempty"`
	// Transaction code of posting accounts in transaction codes setup.
	TransactionCode *string `json:"transactionCode,omitempty"`
}

// NewPostingAccountType instantiates a new PostingAccountType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostingAccountType() *PostingAccountType {
	this := PostingAccountType{}
	return &this
}

// NewPostingAccountTypeWithDefaults instantiates a new PostingAccountType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostingAccountTypeWithDefaults() *PostingAccountType {
	this := PostingAccountType{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *PostingAccountType) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *PostingAccountType) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *PostingAccountType) SetAccount(v string) {
	o.Account = &v
}

// GetAccountDescription returns the AccountDescription field value if set, zero value otherwise.
func (o *PostingAccountType) GetAccountDescription() string {
	if o == nil || IsNil(o.AccountDescription) {
		var ret string
		return ret
	}
	return *o.AccountDescription
}

// GetAccountDescriptionOk returns a tuple with the AccountDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetAccountDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.AccountDescription) {
		return nil, false
	}
	return o.AccountDescription, true
}

// HasAccountDescription returns a boolean if a field has been set.
func (o *PostingAccountType) HasAccountDescription() bool {
	if o != nil && !IsNil(o.AccountDescription) {
		return true
	}

	return false
}

// SetAccountDescription gets a reference to the given string and assigns it to the AccountDescription field.
func (o *PostingAccountType) SetAccountDescription(v string) {
	o.AccountDescription = &v
}

// GetAutoBalance returns the AutoBalance field value if set, zero value otherwise.
func (o *PostingAccountType) GetAutoBalance() bool {
	if o == nil || IsNil(o.AutoBalance) {
		var ret bool
		return ret
	}
	return *o.AutoBalance
}

// GetAutoBalanceOk returns a tuple with the AutoBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetAutoBalanceOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoBalance) {
		return nil, false
	}
	return o.AutoBalance, true
}

// HasAutoBalance returns a boolean if a field has been set.
func (o *PostingAccountType) HasAutoBalance() bool {
	if o != nil && !IsNil(o.AutoBalance) {
		return true
	}

	return false
}

// SetAutoBalance gets a reference to the given bool and assigns it to the AutoBalance field.
func (o *PostingAccountType) SetAutoBalance(v bool) {
	o.AutoBalance = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostingAccountType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PostingAccountType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostingAccountType) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostingAccountType) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostingAccountType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *PostingAccountType) SetId(v float32) {
	o.Id = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *PostingAccountType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *PostingAccountType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *PostingAccountType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetSalesOutlet returns the SalesOutlet field value if set, zero value otherwise.
func (o *PostingAccountType) GetSalesOutlet() string {
	if o == nil || IsNil(o.SalesOutlet) {
		var ret string
		return ret
	}
	return *o.SalesOutlet
}

// GetSalesOutletOk returns a tuple with the SalesOutlet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetSalesOutletOk() (*string, bool) {
	if o == nil || IsNil(o.SalesOutlet) {
		return nil, false
	}
	return o.SalesOutlet, true
}

// HasSalesOutlet returns a boolean if a field has been set.
func (o *PostingAccountType) HasSalesOutlet() bool {
	if o != nil && !IsNil(o.SalesOutlet) {
		return true
	}

	return false
}

// SetSalesOutlet gets a reference to the given string and assigns it to the SalesOutlet field.
func (o *PostingAccountType) SetSalesOutlet(v string) {
	o.SalesOutlet = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *PostingAccountType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostingAccountType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *PostingAccountType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *PostingAccountType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

func (o PostingAccountType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostingAccountType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.AccountDescription) {
		toSerialize["accountDescription"] = o.AccountDescription
	}
	if !IsNil(o.AutoBalance) {
		toSerialize["autoBalance"] = o.AutoBalance
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.SalesOutlet) {
		toSerialize["salesOutlet"] = o.SalesOutlet
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	return toSerialize, nil
}

type NullablePostingAccountType struct {
	value *PostingAccountType
	isSet bool
}

func (v NullablePostingAccountType) Get() *PostingAccountType {
	return v.value
}

func (v *NullablePostingAccountType) Set(val *PostingAccountType) {
	v.value = val
	v.isSet = true
}

func (v NullablePostingAccountType) IsSet() bool {
	return v.isSet
}

func (v *NullablePostingAccountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostingAccountType(val *PostingAccountType) *NullablePostingAccountType {
	return &NullablePostingAccountType{value: val, isSet: true}
}

func (v NullablePostingAccountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostingAccountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


