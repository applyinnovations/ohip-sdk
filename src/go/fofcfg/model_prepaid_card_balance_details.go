/*
OPERA Cloud Front Desk Configuration API

APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fofcfg

import (
	"encoding/json"
)

// checks if the PrepaidCardBalanceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrepaidCardBalanceDetails{}

// PrepaidCardBalanceDetails Response for fetch Prepaid card balance operation
type PrepaidCardBalanceDetails struct {
	Links *Links `json:"links,omitempty"`
	PrepaidCardDetails *PrepaidCardInfoType `json:"prepaidCardDetails,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPrepaidCardBalanceDetails instantiates a new PrepaidCardBalanceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepaidCardBalanceDetails() *PrepaidCardBalanceDetails {
	this := PrepaidCardBalanceDetails{}
	return &this
}

// NewPrepaidCardBalanceDetailsWithDefaults instantiates a new PrepaidCardBalanceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepaidCardBalanceDetailsWithDefaults() *PrepaidCardBalanceDetails {
	this := PrepaidCardBalanceDetails{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PrepaidCardBalanceDetails) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepaidCardBalanceDetails) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PrepaidCardBalanceDetails) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PrepaidCardBalanceDetails) SetLinks(v Links) {
	o.Links = &v
}

// GetPrepaidCardDetails returns the PrepaidCardDetails field value if set, zero value otherwise.
func (o *PrepaidCardBalanceDetails) GetPrepaidCardDetails() PrepaidCardInfoType {
	if o == nil || IsNil(o.PrepaidCardDetails) {
		var ret PrepaidCardInfoType
		return ret
	}
	return *o.PrepaidCardDetails
}

// GetPrepaidCardDetailsOk returns a tuple with the PrepaidCardDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepaidCardBalanceDetails) GetPrepaidCardDetailsOk() (*PrepaidCardInfoType, bool) {
	if o == nil || IsNil(o.PrepaidCardDetails) {
		return nil, false
	}
	return o.PrepaidCardDetails, true
}

// HasPrepaidCardDetails returns a boolean if a field has been set.
func (o *PrepaidCardBalanceDetails) HasPrepaidCardDetails() bool {
	if o != nil && !IsNil(o.PrepaidCardDetails) {
		return true
	}

	return false
}

// SetPrepaidCardDetails gets a reference to the given PrepaidCardInfoType and assigns it to the PrepaidCardDetails field.
func (o *PrepaidCardBalanceDetails) SetPrepaidCardDetails(v PrepaidCardInfoType) {
	o.PrepaidCardDetails = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PrepaidCardBalanceDetails) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepaidCardBalanceDetails) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PrepaidCardBalanceDetails) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PrepaidCardBalanceDetails) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PrepaidCardBalanceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrepaidCardBalanceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.PrepaidCardDetails) {
		toSerialize["prepaidCardDetails"] = o.PrepaidCardDetails
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePrepaidCardBalanceDetails struct {
	value *PrepaidCardBalanceDetails
	isSet bool
}

func (v NullablePrepaidCardBalanceDetails) Get() *PrepaidCardBalanceDetails {
	return v.value
}

func (v *NullablePrepaidCardBalanceDetails) Set(val *PrepaidCardBalanceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepaidCardBalanceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepaidCardBalanceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepaidCardBalanceDetails(val *PrepaidCardBalanceDetails) *NullablePrepaidCardBalanceDetails {
	return &NullablePrepaidCardBalanceDetails{value: val, isSet: true}
}

func (v NullablePrepaidCardBalanceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepaidCardBalanceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


