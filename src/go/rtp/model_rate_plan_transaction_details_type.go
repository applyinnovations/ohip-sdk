/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the RatePlanTransactionDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RatePlanTransactionDetailsType{}

// RatePlanTransactionDetailsType struct for RatePlanTransactionDetailsType
type RatePlanTransactionDetailsType struct {
	AdvancedPostingRhythms *RatePlanAdvancedPostingRhythmsType `json:"advancedPostingRhythms,omitempty"`
	// Currency code used by the rate plan.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	ExchangePosting *ExchangePostingType `json:"exchangePosting,omitempty"`
	FolioText *TranslationTextType2000 `json:"folioText,omitempty"`
	// Package Transaction code used by the rate plan.
	PackageTransactionCode *string `json:"packageTransactionCode,omitempty"`
	PostingRhythm *RatePlanPostingRhythmType `json:"postingRhythm,omitempty"`
	// Is tax included in the rate plan?
	RateIncludesTax *bool `json:"rateIncludesTax,omitempty"`
	RoomTransactionCodes *RatePlanRoomTransactionCodesType `json:"roomTransactionCodes,omitempty"`
	// Transaction code used by the rate plan.
	TransactionCode *string `json:"transactionCode,omitempty"`
}

// NewRatePlanTransactionDetailsType instantiates a new RatePlanTransactionDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatePlanTransactionDetailsType() *RatePlanTransactionDetailsType {
	this := RatePlanTransactionDetailsType{}
	return &this
}

// NewRatePlanTransactionDetailsTypeWithDefaults instantiates a new RatePlanTransactionDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatePlanTransactionDetailsTypeWithDefaults() *RatePlanTransactionDetailsType {
	this := RatePlanTransactionDetailsType{}
	return &this
}

// GetAdvancedPostingRhythms returns the AdvancedPostingRhythms field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetAdvancedPostingRhythms() RatePlanAdvancedPostingRhythmsType {
	if o == nil || IsNil(o.AdvancedPostingRhythms) {
		var ret RatePlanAdvancedPostingRhythmsType
		return ret
	}
	return *o.AdvancedPostingRhythms
}

// GetAdvancedPostingRhythmsOk returns a tuple with the AdvancedPostingRhythms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetAdvancedPostingRhythmsOk() (*RatePlanAdvancedPostingRhythmsType, bool) {
	if o == nil || IsNil(o.AdvancedPostingRhythms) {
		return nil, false
	}
	return o.AdvancedPostingRhythms, true
}

// HasAdvancedPostingRhythms returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasAdvancedPostingRhythms() bool {
	if o != nil && !IsNil(o.AdvancedPostingRhythms) {
		return true
	}

	return false
}

// SetAdvancedPostingRhythms gets a reference to the given RatePlanAdvancedPostingRhythmsType and assigns it to the AdvancedPostingRhythms field.
func (o *RatePlanTransactionDetailsType) SetAdvancedPostingRhythms(v RatePlanAdvancedPostingRhythmsType) {
	o.AdvancedPostingRhythms = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *RatePlanTransactionDetailsType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetExchangePosting returns the ExchangePosting field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetExchangePosting() ExchangePostingType {
	if o == nil || IsNil(o.ExchangePosting) {
		var ret ExchangePostingType
		return ret
	}
	return *o.ExchangePosting
}

// GetExchangePostingOk returns a tuple with the ExchangePosting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetExchangePostingOk() (*ExchangePostingType, bool) {
	if o == nil || IsNil(o.ExchangePosting) {
		return nil, false
	}
	return o.ExchangePosting, true
}

// HasExchangePosting returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasExchangePosting() bool {
	if o != nil && !IsNil(o.ExchangePosting) {
		return true
	}

	return false
}

// SetExchangePosting gets a reference to the given ExchangePostingType and assigns it to the ExchangePosting field.
func (o *RatePlanTransactionDetailsType) SetExchangePosting(v ExchangePostingType) {
	o.ExchangePosting = &v
}

// GetFolioText returns the FolioText field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetFolioText() TranslationTextType2000 {
	if o == nil || IsNil(o.FolioText) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.FolioText
}

// GetFolioTextOk returns a tuple with the FolioText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetFolioTextOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.FolioText) {
		return nil, false
	}
	return o.FolioText, true
}

// HasFolioText returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasFolioText() bool {
	if o != nil && !IsNil(o.FolioText) {
		return true
	}

	return false
}

// SetFolioText gets a reference to the given TranslationTextType2000 and assigns it to the FolioText field.
func (o *RatePlanTransactionDetailsType) SetFolioText(v TranslationTextType2000) {
	o.FolioText = &v
}

// GetPackageTransactionCode returns the PackageTransactionCode field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetPackageTransactionCode() string {
	if o == nil || IsNil(o.PackageTransactionCode) {
		var ret string
		return ret
	}
	return *o.PackageTransactionCode
}

// GetPackageTransactionCodeOk returns a tuple with the PackageTransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetPackageTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PackageTransactionCode) {
		return nil, false
	}
	return o.PackageTransactionCode, true
}

// HasPackageTransactionCode returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasPackageTransactionCode() bool {
	if o != nil && !IsNil(o.PackageTransactionCode) {
		return true
	}

	return false
}

// SetPackageTransactionCode gets a reference to the given string and assigns it to the PackageTransactionCode field.
func (o *RatePlanTransactionDetailsType) SetPackageTransactionCode(v string) {
	o.PackageTransactionCode = &v
}

// GetPostingRhythm returns the PostingRhythm field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetPostingRhythm() RatePlanPostingRhythmType {
	if o == nil || IsNil(o.PostingRhythm) {
		var ret RatePlanPostingRhythmType
		return ret
	}
	return *o.PostingRhythm
}

// GetPostingRhythmOk returns a tuple with the PostingRhythm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetPostingRhythmOk() (*RatePlanPostingRhythmType, bool) {
	if o == nil || IsNil(o.PostingRhythm) {
		return nil, false
	}
	return o.PostingRhythm, true
}

// HasPostingRhythm returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasPostingRhythm() bool {
	if o != nil && !IsNil(o.PostingRhythm) {
		return true
	}

	return false
}

// SetPostingRhythm gets a reference to the given RatePlanPostingRhythmType and assigns it to the PostingRhythm field.
func (o *RatePlanTransactionDetailsType) SetPostingRhythm(v RatePlanPostingRhythmType) {
	o.PostingRhythm = &v
}

// GetRateIncludesTax returns the RateIncludesTax field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetRateIncludesTax() bool {
	if o == nil || IsNil(o.RateIncludesTax) {
		var ret bool
		return ret
	}
	return *o.RateIncludesTax
}

// GetRateIncludesTaxOk returns a tuple with the RateIncludesTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetRateIncludesTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.RateIncludesTax) {
		return nil, false
	}
	return o.RateIncludesTax, true
}

// HasRateIncludesTax returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasRateIncludesTax() bool {
	if o != nil && !IsNil(o.RateIncludesTax) {
		return true
	}

	return false
}

// SetRateIncludesTax gets a reference to the given bool and assigns it to the RateIncludesTax field.
func (o *RatePlanTransactionDetailsType) SetRateIncludesTax(v bool) {
	o.RateIncludesTax = &v
}

// GetRoomTransactionCodes returns the RoomTransactionCodes field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetRoomTransactionCodes() RatePlanRoomTransactionCodesType {
	if o == nil || IsNil(o.RoomTransactionCodes) {
		var ret RatePlanRoomTransactionCodesType
		return ret
	}
	return *o.RoomTransactionCodes
}

// GetRoomTransactionCodesOk returns a tuple with the RoomTransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetRoomTransactionCodesOk() (*RatePlanRoomTransactionCodesType, bool) {
	if o == nil || IsNil(o.RoomTransactionCodes) {
		return nil, false
	}
	return o.RoomTransactionCodes, true
}

// HasRoomTransactionCodes returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasRoomTransactionCodes() bool {
	if o != nil && !IsNil(o.RoomTransactionCodes) {
		return true
	}

	return false
}

// SetRoomTransactionCodes gets a reference to the given RatePlanRoomTransactionCodesType and assigns it to the RoomTransactionCodes field.
func (o *RatePlanTransactionDetailsType) SetRoomTransactionCodes(v RatePlanRoomTransactionCodesType) {
	o.RoomTransactionCodes = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *RatePlanTransactionDetailsType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanTransactionDetailsType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *RatePlanTransactionDetailsType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *RatePlanTransactionDetailsType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

func (o RatePlanTransactionDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RatePlanTransactionDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvancedPostingRhythms) {
		toSerialize["advancedPostingRhythms"] = o.AdvancedPostingRhythms
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.ExchangePosting) {
		toSerialize["exchangePosting"] = o.ExchangePosting
	}
	if !IsNil(o.FolioText) {
		toSerialize["folioText"] = o.FolioText
	}
	if !IsNil(o.PackageTransactionCode) {
		toSerialize["packageTransactionCode"] = o.PackageTransactionCode
	}
	if !IsNil(o.PostingRhythm) {
		toSerialize["postingRhythm"] = o.PostingRhythm
	}
	if !IsNil(o.RateIncludesTax) {
		toSerialize["rateIncludesTax"] = o.RateIncludesTax
	}
	if !IsNil(o.RoomTransactionCodes) {
		toSerialize["roomTransactionCodes"] = o.RoomTransactionCodes
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	return toSerialize, nil
}

type NullableRatePlanTransactionDetailsType struct {
	value *RatePlanTransactionDetailsType
	isSet bool
}

func (v NullableRatePlanTransactionDetailsType) Get() *RatePlanTransactionDetailsType {
	return v.value
}

func (v *NullableRatePlanTransactionDetailsType) Set(val *RatePlanTransactionDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRatePlanTransactionDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRatePlanTransactionDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatePlanTransactionDetailsType(val *RatePlanTransactionDetailsType) *NullableRatePlanTransactionDetailsType {
	return &NullableRatePlanTransactionDetailsType{value: val, isSet: true}
}

func (v NullableRatePlanTransactionDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatePlanTransactionDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


