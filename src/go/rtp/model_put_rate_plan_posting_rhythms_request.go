/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the PutRatePlanPostingRhythmsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutRatePlanPostingRhythmsRequest{}

// PutRatePlanPostingRhythmsRequest struct for PutRatePlanPostingRhythmsRequest
type PutRatePlanPostingRhythmsRequest struct {
	Links *Links `json:"links,omitempty"`
	PostingRhythms *RatePlanAdvancedPostingRhythmsType `json:"postingRhythms,omitempty"`
	RatePlan *GenericHotelCodeCodeType `json:"ratePlan,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPutRatePlanPostingRhythmsRequest instantiates a new PutRatePlanPostingRhythmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutRatePlanPostingRhythmsRequest() *PutRatePlanPostingRhythmsRequest {
	this := PutRatePlanPostingRhythmsRequest{}
	return &this
}

// NewPutRatePlanPostingRhythmsRequestWithDefaults instantiates a new PutRatePlanPostingRhythmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutRatePlanPostingRhythmsRequestWithDefaults() *PutRatePlanPostingRhythmsRequest {
	this := PutRatePlanPostingRhythmsRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PutRatePlanPostingRhythmsRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRatePlanPostingRhythmsRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PutRatePlanPostingRhythmsRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PutRatePlanPostingRhythmsRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetPostingRhythms returns the PostingRhythms field value if set, zero value otherwise.
func (o *PutRatePlanPostingRhythmsRequest) GetPostingRhythms() RatePlanAdvancedPostingRhythmsType {
	if o == nil || IsNil(o.PostingRhythms) {
		var ret RatePlanAdvancedPostingRhythmsType
		return ret
	}
	return *o.PostingRhythms
}

// GetPostingRhythmsOk returns a tuple with the PostingRhythms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRatePlanPostingRhythmsRequest) GetPostingRhythmsOk() (*RatePlanAdvancedPostingRhythmsType, bool) {
	if o == nil || IsNil(o.PostingRhythms) {
		return nil, false
	}
	return o.PostingRhythms, true
}

// HasPostingRhythms returns a boolean if a field has been set.
func (o *PutRatePlanPostingRhythmsRequest) HasPostingRhythms() bool {
	if o != nil && !IsNil(o.PostingRhythms) {
		return true
	}

	return false
}

// SetPostingRhythms gets a reference to the given RatePlanAdvancedPostingRhythmsType and assigns it to the PostingRhythms field.
func (o *PutRatePlanPostingRhythmsRequest) SetPostingRhythms(v RatePlanAdvancedPostingRhythmsType) {
	o.PostingRhythms = &v
}

// GetRatePlan returns the RatePlan field value if set, zero value otherwise.
func (o *PutRatePlanPostingRhythmsRequest) GetRatePlan() GenericHotelCodeCodeType {
	if o == nil || IsNil(o.RatePlan) {
		var ret GenericHotelCodeCodeType
		return ret
	}
	return *o.RatePlan
}

// GetRatePlanOk returns a tuple with the RatePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRatePlanPostingRhythmsRequest) GetRatePlanOk() (*GenericHotelCodeCodeType, bool) {
	if o == nil || IsNil(o.RatePlan) {
		return nil, false
	}
	return o.RatePlan, true
}

// HasRatePlan returns a boolean if a field has been set.
func (o *PutRatePlanPostingRhythmsRequest) HasRatePlan() bool {
	if o != nil && !IsNil(o.RatePlan) {
		return true
	}

	return false
}

// SetRatePlan gets a reference to the given GenericHotelCodeCodeType and assigns it to the RatePlan field.
func (o *PutRatePlanPostingRhythmsRequest) SetRatePlan(v GenericHotelCodeCodeType) {
	o.RatePlan = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutRatePlanPostingRhythmsRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRatePlanPostingRhythmsRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutRatePlanPostingRhythmsRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PutRatePlanPostingRhythmsRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PutRatePlanPostingRhythmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutRatePlanPostingRhythmsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.PostingRhythms) {
		toSerialize["postingRhythms"] = o.PostingRhythms
	}
	if !IsNil(o.RatePlan) {
		toSerialize["ratePlan"] = o.RatePlan
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutRatePlanPostingRhythmsRequest struct {
	value *PutRatePlanPostingRhythmsRequest
	isSet bool
}

func (v NullablePutRatePlanPostingRhythmsRequest) Get() *PutRatePlanPostingRhythmsRequest {
	return v.value
}

func (v *NullablePutRatePlanPostingRhythmsRequest) Set(val *PutRatePlanPostingRhythmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutRatePlanPostingRhythmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutRatePlanPostingRhythmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutRatePlanPostingRhythmsRequest(val *PutRatePlanPostingRhythmsRequest) *NullablePutRatePlanPostingRhythmsRequest {
	return &NullablePutRatePlanPostingRhythmsRequest{value: val, isSet: true}
}

func (v NullablePutRatePlanPostingRhythmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutRatePlanPostingRhythmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


