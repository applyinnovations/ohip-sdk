/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the MassRateChangeCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassRateChangeCriteriaType{}

// MassRateChangeCriteriaType Container for mass rate update operation.
type MassRateChangeCriteriaType struct {
	AmountType *PercentageOrFlatType `json:"amountType,omitempty"`
	BaseType *BaseType `json:"baseType,omitempty"`
	Calculation *AmountOrOffsetType `json:"calculation,omitempty"`
	DateRange *TimeSpanDaysOfWeekType `json:"dateRange,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	RateAmounts *RateAmountsType `json:"rateAmounts,omitempty"`
	RateCodes *RateCodesListType `json:"rateCodes,omitempty"`
	RoomTypes *RoomTypeListType `json:"roomTypes,omitempty"`
	Rounding *RatePlanRoundingType `json:"rounding,omitempty"`
	Type *RatePlanScheduleType `json:"type,omitempty"`
}

// NewMassRateChangeCriteriaType instantiates a new MassRateChangeCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassRateChangeCriteriaType() *MassRateChangeCriteriaType {
	this := MassRateChangeCriteriaType{}
	return &this
}

// NewMassRateChangeCriteriaTypeWithDefaults instantiates a new MassRateChangeCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassRateChangeCriteriaTypeWithDefaults() *MassRateChangeCriteriaType {
	this := MassRateChangeCriteriaType{}
	return &this
}

// GetAmountType returns the AmountType field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetAmountType() PercentageOrFlatType {
	if o == nil || IsNil(o.AmountType) {
		var ret PercentageOrFlatType
		return ret
	}
	return *o.AmountType
}

// GetAmountTypeOk returns a tuple with the AmountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetAmountTypeOk() (*PercentageOrFlatType, bool) {
	if o == nil || IsNil(o.AmountType) {
		return nil, false
	}
	return o.AmountType, true
}

// HasAmountType returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasAmountType() bool {
	if o != nil && !IsNil(o.AmountType) {
		return true
	}

	return false
}

// SetAmountType gets a reference to the given PercentageOrFlatType and assigns it to the AmountType field.
func (o *MassRateChangeCriteriaType) SetAmountType(v PercentageOrFlatType) {
	o.AmountType = &v
}

// GetBaseType returns the BaseType field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetBaseType() BaseType {
	if o == nil || IsNil(o.BaseType) {
		var ret BaseType
		return ret
	}
	return *o.BaseType
}

// GetBaseTypeOk returns a tuple with the BaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetBaseTypeOk() (*BaseType, bool) {
	if o == nil || IsNil(o.BaseType) {
		return nil, false
	}
	return o.BaseType, true
}

// HasBaseType returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasBaseType() bool {
	if o != nil && !IsNil(o.BaseType) {
		return true
	}

	return false
}

// SetBaseType gets a reference to the given BaseType and assigns it to the BaseType field.
func (o *MassRateChangeCriteriaType) SetBaseType(v BaseType) {
	o.BaseType = &v
}

// GetCalculation returns the Calculation field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetCalculation() AmountOrOffsetType {
	if o == nil || IsNil(o.Calculation) {
		var ret AmountOrOffsetType
		return ret
	}
	return *o.Calculation
}

// GetCalculationOk returns a tuple with the Calculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetCalculationOk() (*AmountOrOffsetType, bool) {
	if o == nil || IsNil(o.Calculation) {
		return nil, false
	}
	return o.Calculation, true
}

// HasCalculation returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasCalculation() bool {
	if o != nil && !IsNil(o.Calculation) {
		return true
	}

	return false
}

// SetCalculation gets a reference to the given AmountOrOffsetType and assigns it to the Calculation field.
func (o *MassRateChangeCriteriaType) SetCalculation(v AmountOrOffsetType) {
	o.Calculation = &v
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetDateRange() TimeSpanDaysOfWeekType {
	if o == nil || IsNil(o.DateRange) {
		var ret TimeSpanDaysOfWeekType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetDateRangeOk() (*TimeSpanDaysOfWeekType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given TimeSpanDaysOfWeekType and assigns it to the DateRange field.
func (o *MassRateChangeCriteriaType) SetDateRange(v TimeSpanDaysOfWeekType) {
	o.DateRange = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MassRateChangeCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRateAmounts returns the RateAmounts field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetRateAmounts() RateAmountsType {
	if o == nil || IsNil(o.RateAmounts) {
		var ret RateAmountsType
		return ret
	}
	return *o.RateAmounts
}

// GetRateAmountsOk returns a tuple with the RateAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetRateAmountsOk() (*RateAmountsType, bool) {
	if o == nil || IsNil(o.RateAmounts) {
		return nil, false
	}
	return o.RateAmounts, true
}

// HasRateAmounts returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasRateAmounts() bool {
	if o != nil && !IsNil(o.RateAmounts) {
		return true
	}

	return false
}

// SetRateAmounts gets a reference to the given RateAmountsType and assigns it to the RateAmounts field.
func (o *MassRateChangeCriteriaType) SetRateAmounts(v RateAmountsType) {
	o.RateAmounts = &v
}

// GetRateCodes returns the RateCodes field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetRateCodes() RateCodesListType {
	if o == nil || IsNil(o.RateCodes) {
		var ret RateCodesListType
		return ret
	}
	return *o.RateCodes
}

// GetRateCodesOk returns a tuple with the RateCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetRateCodesOk() (*RateCodesListType, bool) {
	if o == nil || IsNil(o.RateCodes) {
		return nil, false
	}
	return o.RateCodes, true
}

// HasRateCodes returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasRateCodes() bool {
	if o != nil && !IsNil(o.RateCodes) {
		return true
	}

	return false
}

// SetRateCodes gets a reference to the given RateCodesListType and assigns it to the RateCodes field.
func (o *MassRateChangeCriteriaType) SetRateCodes(v RateCodesListType) {
	o.RateCodes = &v
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetRoomTypes() RoomTypeListType {
	if o == nil || IsNil(o.RoomTypes) {
		var ret RoomTypeListType
		return ret
	}
	return *o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetRoomTypesOk() (*RoomTypeListType, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given RoomTypeListType and assigns it to the RoomTypes field.
func (o *MassRateChangeCriteriaType) SetRoomTypes(v RoomTypeListType) {
	o.RoomTypes = &v
}

// GetRounding returns the Rounding field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetRounding() RatePlanRoundingType {
	if o == nil || IsNil(o.Rounding) {
		var ret RatePlanRoundingType
		return ret
	}
	return *o.Rounding
}

// GetRoundingOk returns a tuple with the Rounding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetRoundingOk() (*RatePlanRoundingType, bool) {
	if o == nil || IsNil(o.Rounding) {
		return nil, false
	}
	return o.Rounding, true
}

// HasRounding returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasRounding() bool {
	if o != nil && !IsNil(o.Rounding) {
		return true
	}

	return false
}

// SetRounding gets a reference to the given RatePlanRoundingType and assigns it to the Rounding field.
func (o *MassRateChangeCriteriaType) SetRounding(v RatePlanRoundingType) {
	o.Rounding = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MassRateChangeCriteriaType) GetType() RatePlanScheduleType {
	if o == nil || IsNil(o.Type) {
		var ret RatePlanScheduleType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeCriteriaType) GetTypeOk() (*RatePlanScheduleType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MassRateChangeCriteriaType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given RatePlanScheduleType and assigns it to the Type field.
func (o *MassRateChangeCriteriaType) SetType(v RatePlanScheduleType) {
	o.Type = &v
}

func (o MassRateChangeCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassRateChangeCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountType) {
		toSerialize["amountType"] = o.AmountType
	}
	if !IsNil(o.BaseType) {
		toSerialize["baseType"] = o.BaseType
	}
	if !IsNil(o.Calculation) {
		toSerialize["calculation"] = o.Calculation
	}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RateAmounts) {
		toSerialize["rateAmounts"] = o.RateAmounts
	}
	if !IsNil(o.RateCodes) {
		toSerialize["rateCodes"] = o.RateCodes
	}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	if !IsNil(o.Rounding) {
		toSerialize["rounding"] = o.Rounding
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableMassRateChangeCriteriaType struct {
	value *MassRateChangeCriteriaType
	isSet bool
}

func (v NullableMassRateChangeCriteriaType) Get() *MassRateChangeCriteriaType {
	return v.value
}

func (v *NullableMassRateChangeCriteriaType) Set(val *MassRateChangeCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableMassRateChangeCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableMassRateChangeCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassRateChangeCriteriaType(val *MassRateChangeCriteriaType) *NullableMassRateChangeCriteriaType {
	return &NullableMassRateChangeCriteriaType{value: val, isSet: true}
}

func (v NullableMassRateChangeCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassRateChangeCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


