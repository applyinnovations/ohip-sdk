/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the MassRateChangeDetailLogType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MassRateChangeDetailLogType{}

// MassRateChangeDetailLogType struct for MassRateChangeDetailLogType
type MassRateChangeDetailLogType struct {
	// Message details.
	Description *string `json:"description,omitempty"`
	// Rate Code.
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	Status *MassRateChangeRecordStatusType `json:"status,omitempty"`
}

// NewMassRateChangeDetailLogType instantiates a new MassRateChangeDetailLogType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMassRateChangeDetailLogType() *MassRateChangeDetailLogType {
	this := MassRateChangeDetailLogType{}
	return &this
}

// NewMassRateChangeDetailLogTypeWithDefaults instantiates a new MassRateChangeDetailLogType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMassRateChangeDetailLogTypeWithDefaults() *MassRateChangeDetailLogType {
	this := MassRateChangeDetailLogType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MassRateChangeDetailLogType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeDetailLogType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MassRateChangeDetailLogType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MassRateChangeDetailLogType) SetDescription(v string) {
	o.Description = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *MassRateChangeDetailLogType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeDetailLogType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *MassRateChangeDetailLogType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *MassRateChangeDetailLogType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MassRateChangeDetailLogType) GetStatus() MassRateChangeRecordStatusType {
	if o == nil || IsNil(o.Status) {
		var ret MassRateChangeRecordStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MassRateChangeDetailLogType) GetStatusOk() (*MassRateChangeRecordStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MassRateChangeDetailLogType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MassRateChangeRecordStatusType and assigns it to the Status field.
func (o *MassRateChangeDetailLogType) SetStatus(v MassRateChangeRecordStatusType) {
	o.Status = &v
}

func (o MassRateChangeDetailLogType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MassRateChangeDetailLogType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableMassRateChangeDetailLogType struct {
	value *MassRateChangeDetailLogType
	isSet bool
}

func (v NullableMassRateChangeDetailLogType) Get() *MassRateChangeDetailLogType {
	return v.value
}

func (v *NullableMassRateChangeDetailLogType) Set(val *MassRateChangeDetailLogType) {
	v.value = val
	v.isSet = true
}

func (v NullableMassRateChangeDetailLogType) IsSet() bool {
	return v.isSet
}

func (v *NullableMassRateChangeDetailLogType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMassRateChangeDetailLogType(val *MassRateChangeDetailLogType) *NullableMassRateChangeDetailLogType {
	return &NullableMassRateChangeDetailLogType{value: val, isSet: true}
}

func (v NullableMassRateChangeDetailLogType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMassRateChangeDetailLogType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


