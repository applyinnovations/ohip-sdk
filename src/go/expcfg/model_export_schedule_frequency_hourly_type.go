/*
OPERA Cloud Export Configuration API

APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package expcfg

import (
	"encoding/json"
)

// checks if the ExportScheduleFrequencyHourlyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportScheduleFrequencyHourlyType{}

// ExportScheduleFrequencyHourlyType If specified then export is scheduled to run at hourly intervals
type ExportScheduleFrequencyHourlyType struct {
	// Interval at which export needs to be scheduled
	Interval *int32 `json:"interval,omitempty"`
}

// NewExportScheduleFrequencyHourlyType instantiates a new ExportScheduleFrequencyHourlyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportScheduleFrequencyHourlyType() *ExportScheduleFrequencyHourlyType {
	this := ExportScheduleFrequencyHourlyType{}
	return &this
}

// NewExportScheduleFrequencyHourlyTypeWithDefaults instantiates a new ExportScheduleFrequencyHourlyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportScheduleFrequencyHourlyTypeWithDefaults() *ExportScheduleFrequencyHourlyType {
	this := ExportScheduleFrequencyHourlyType{}
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ExportScheduleFrequencyHourlyType) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportScheduleFrequencyHourlyType) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ExportScheduleFrequencyHourlyType) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *ExportScheduleFrequencyHourlyType) SetInterval(v int32) {
	o.Interval = &v
}

func (o ExportScheduleFrequencyHourlyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportScheduleFrequencyHourlyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	return toSerialize, nil
}

type NullableExportScheduleFrequencyHourlyType struct {
	value *ExportScheduleFrequencyHourlyType
	isSet bool
}

func (v NullableExportScheduleFrequencyHourlyType) Get() *ExportScheduleFrequencyHourlyType {
	return v.value
}

func (v *NullableExportScheduleFrequencyHourlyType) Set(val *ExportScheduleFrequencyHourlyType) {
	v.value = val
	v.isSet = true
}

func (v NullableExportScheduleFrequencyHourlyType) IsSet() bool {
	return v.isSet
}

func (v *NullableExportScheduleFrequencyHourlyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportScheduleFrequencyHourlyType(val *ExportScheduleFrequencyHourlyType) *NullableExportScheduleFrequencyHourlyType {
	return &NullableExportScheduleFrequencyHourlyType{value: val, isSet: true}
}

func (v NullableExportScheduleFrequencyHourlyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportScheduleFrequencyHourlyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


