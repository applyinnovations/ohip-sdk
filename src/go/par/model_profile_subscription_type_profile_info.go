/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the ProfileSubscriptionTypeProfileInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileSubscriptionTypeProfileInfo{}

// ProfileSubscriptionTypeProfileInfo This provides name information for a person.
type ProfileSubscriptionTypeProfileInfo struct {
	// Full display Name.
	FullName *string `json:"fullName,omitempty"`
	// Given name, first name or names.
	GivenName *string `json:"givenName,omitempty"`
	// The middle name of the person name.
	MiddleName *string `json:"middleName,omitempty"`
	// Family name, last name or Company Name.
	Name *string `json:"name,omitempty"`
	// Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)
	NamePrefix *string `json:"namePrefix,omitempty"`
	// Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)
	NameSuffix *string `json:"nameSuffix,omitempty"`
	// Degree or honors (e.g., Ph.D., M.D.)
	NameTitle *string `json:"nameTitle,omitempty"`
	NameType *PersonNameTypeType `json:"nameType,omitempty"`
	ProfileType *ProfileTypeType `json:"profileType,omitempty"`
}

// NewProfileSubscriptionTypeProfileInfo instantiates a new ProfileSubscriptionTypeProfileInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileSubscriptionTypeProfileInfo() *ProfileSubscriptionTypeProfileInfo {
	this := ProfileSubscriptionTypeProfileInfo{}
	return &this
}

// NewProfileSubscriptionTypeProfileInfoWithDefaults instantiates a new ProfileSubscriptionTypeProfileInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileSubscriptionTypeProfileInfoWithDefaults() *ProfileSubscriptionTypeProfileInfo {
	this := ProfileSubscriptionTypeProfileInfo{}
	return &this
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ProfileSubscriptionTypeProfileInfo) SetFullName(v string) {
	o.FullName = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *ProfileSubscriptionTypeProfileInfo) SetGivenName(v string) {
	o.GivenName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *ProfileSubscriptionTypeProfileInfo) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProfileSubscriptionTypeProfileInfo) SetName(v string) {
	o.Name = &v
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetNamePrefix() string {
	if o == nil || IsNil(o.NamePrefix) {
		var ret string
		return ret
	}
	return *o.NamePrefix
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetNamePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.NamePrefix) {
		return nil, false
	}
	return o.NamePrefix, true
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasNamePrefix() bool {
	if o != nil && !IsNil(o.NamePrefix) {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given string and assigns it to the NamePrefix field.
func (o *ProfileSubscriptionTypeProfileInfo) SetNamePrefix(v string) {
	o.NamePrefix = &v
}

// GetNameSuffix returns the NameSuffix field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameSuffix() string {
	if o == nil || IsNil(o.NameSuffix) {
		var ret string
		return ret
	}
	return *o.NameSuffix
}

// GetNameSuffixOk returns a tuple with the NameSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.NameSuffix) {
		return nil, false
	}
	return o.NameSuffix, true
}

// HasNameSuffix returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasNameSuffix() bool {
	if o != nil && !IsNil(o.NameSuffix) {
		return true
	}

	return false
}

// SetNameSuffix gets a reference to the given string and assigns it to the NameSuffix field.
func (o *ProfileSubscriptionTypeProfileInfo) SetNameSuffix(v string) {
	o.NameSuffix = &v
}

// GetNameTitle returns the NameTitle field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameTitle() string {
	if o == nil || IsNil(o.NameTitle) {
		var ret string
		return ret
	}
	return *o.NameTitle
}

// GetNameTitleOk returns a tuple with the NameTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameTitleOk() (*string, bool) {
	if o == nil || IsNil(o.NameTitle) {
		return nil, false
	}
	return o.NameTitle, true
}

// HasNameTitle returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasNameTitle() bool {
	if o != nil && !IsNil(o.NameTitle) {
		return true
	}

	return false
}

// SetNameTitle gets a reference to the given string and assigns it to the NameTitle field.
func (o *ProfileSubscriptionTypeProfileInfo) SetNameTitle(v string) {
	o.NameTitle = &v
}

// GetNameType returns the NameType field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameType() PersonNameTypeType {
	if o == nil || IsNil(o.NameType) {
		var ret PersonNameTypeType
		return ret
	}
	return *o.NameType
}

// GetNameTypeOk returns a tuple with the NameType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetNameTypeOk() (*PersonNameTypeType, bool) {
	if o == nil || IsNil(o.NameType) {
		return nil, false
	}
	return o.NameType, true
}

// HasNameType returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasNameType() bool {
	if o != nil && !IsNil(o.NameType) {
		return true
	}

	return false
}

// SetNameType gets a reference to the given PersonNameTypeType and assigns it to the NameType field.
func (o *ProfileSubscriptionTypeProfileInfo) SetNameType(v PersonNameTypeType) {
	o.NameType = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ProfileSubscriptionTypeProfileInfo) GetProfileType() ProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret ProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSubscriptionTypeProfileInfo) GetProfileTypeOk() (*ProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ProfileSubscriptionTypeProfileInfo) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given ProfileTypeType and assigns it to the ProfileType field.
func (o *ProfileSubscriptionTypeProfileInfo) SetProfileType(v ProfileTypeType) {
	o.ProfileType = &v
}

func (o ProfileSubscriptionTypeProfileInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileSubscriptionTypeProfileInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NamePrefix) {
		toSerialize["namePrefix"] = o.NamePrefix
	}
	if !IsNil(o.NameSuffix) {
		toSerialize["nameSuffix"] = o.NameSuffix
	}
	if !IsNil(o.NameTitle) {
		toSerialize["nameTitle"] = o.NameTitle
	}
	if !IsNil(o.NameType) {
		toSerialize["nameType"] = o.NameType
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	return toSerialize, nil
}

type NullableProfileSubscriptionTypeProfileInfo struct {
	value *ProfileSubscriptionTypeProfileInfo
	isSet bool
}

func (v NullableProfileSubscriptionTypeProfileInfo) Get() *ProfileSubscriptionTypeProfileInfo {
	return v.value
}

func (v *NullableProfileSubscriptionTypeProfileInfo) Set(val *ProfileSubscriptionTypeProfileInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileSubscriptionTypeProfileInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileSubscriptionTypeProfileInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileSubscriptionTypeProfileInfo(val *ProfileSubscriptionTypeProfileInfo) *NullableProfileSubscriptionTypeProfileInfo {
	return &NullableProfileSubscriptionTypeProfileInfo{value: val, isSet: true}
}

func (v NullableProfileSubscriptionTypeProfileInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileSubscriptionTypeProfileInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


