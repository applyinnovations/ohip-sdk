/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationsInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationsInformationType{}

// ReservationsInformationType Reservations Information.
type ReservationsInformationType struct {
	// Total number of adults.
	Adults *int32 `json:"adults,omitempty"`
	// Indicates if the reservation has performed an Advance Check In.
	AdvancedCheckedIn *bool `json:"advancedCheckedIn,omitempty"`
	// Total share amount.
	Amount *float32 `json:"amount,omitempty"`
	// Arrival Time of reservation.
	ArrivalTime *string `json:"arrivalTime,omitempty"`
	// Balance.
	Balance *float32 `json:"balance,omitempty"`
	// Unique identifiers for Blocks. Eg: BlockId, BlockCode
	BlockIdList []DistinctIDType `json:"blockIdList,omitempty"`
	// Booked Room Type.
	BookedRoomType *string `json:"bookedRoomType,omitempty"`
	// Number of children.
	Children *int32 `json:"children,omitempty"`
	CompanyDetails *CompanyDetails `json:"companyDetails,omitempty"`
	// Computed reservation status.
	ComputedReservationStatus *string `json:"computedReservationStatus,omitempty"`
	// Internal User ID used to create reservation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Currency code.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Departure Time of reservation.
	DepartureTime *string `json:"departureTime,omitempty"`
	ExternalReferences *ExternalReferencesType `json:"externalReferences,omitempty"`
	GroupDetails *GroupDetails `json:"groupDetails,omitempty"`
	// Reservation guarantee code.
	GuaranteeCode *string `json:"guaranteeCode,omitempty"`
	GuestDetails *GuestDetails `json:"guestDetails,omitempty"`
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	// Internal User ID used to update the reservation details.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Party code.
	LinkCode *string `json:"linkCode,omitempty"`
	// Market code of the reservation.
	MarketCode *string `json:"marketCode,omitempty"`
	MembershipDetails *MembershipDetails `json:"membershipDetails,omitempty"`
	// Number of Nights
	Nights *int32 `json:"nights,omitempty"`
	// Number of rooms.
	NoOfRooms *int32 `json:"noOfRooms,omitempty"`
	// Channel used to create the reservation.
	OriginCode *string `json:"originCode,omitempty"`
	// Payment method used for the reservation.
	PaymentType *string `json:"paymentType,omitempty"`
	// Indicates whether the reservation is pre-registered for internet check-in or not.
	PreRegistered *bool `json:"preRegistered,omitempty"`
	// Promotion Code for the Reservation.
	PromotionCode *string `json:"promotionCode,omitempty"`
	// Rate code used for the reservation.
	RateCode *string `json:"rateCode,omitempty"`
	// Registration card number.
	RegistrationCardNumber *string `json:"registrationCardNumber,omitempty"`
	ReservationDates *ReservationDates `json:"reservationDates,omitempty"`
	// Unique identifiers for both internal and external systems Eg: ReservationId, ConfirmationNumber, CancellationNumber, ExternalReferenceNumber etc
	ReservationIdList []DistinctIDType `json:"reservationIdList,omitempty"`
	// Reservation status.
	ReservationStatus *string `json:"reservationStatus,omitempty"`
	// Room Number.
	RoomId *string `json:"roomId,omitempty"`
	// Room Type.
	RoomType *string `json:"roomType,omitempty"`
	// Indicates if the reservation is shared or not.
	Shared *bool `json:"shared,omitempty"`
	// Source of the created reservation.
	SourceCode *string `json:"sourceCode,omitempty"`
	TravelAgentDetails *TravelAgentDetails `json:"travelAgentDetails,omitempty"`
	// VIP Status.
	VipStatus *string `json:"vipStatus,omitempty"`
}

// NewReservationsInformationType instantiates a new ReservationsInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationsInformationType() *ReservationsInformationType {
	this := ReservationsInformationType{}
	return &this
}

// NewReservationsInformationTypeWithDefaults instantiates a new ReservationsInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationsInformationTypeWithDefaults() *ReservationsInformationType {
	this := ReservationsInformationType{}
	return &this
}

// GetAdults returns the Adults field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetAdults() int32 {
	if o == nil || IsNil(o.Adults) {
		var ret int32
		return ret
	}
	return *o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetAdultsOk() (*int32, bool) {
	if o == nil || IsNil(o.Adults) {
		return nil, false
	}
	return o.Adults, true
}

// HasAdults returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasAdults() bool {
	if o != nil && !IsNil(o.Adults) {
		return true
	}

	return false
}

// SetAdults gets a reference to the given int32 and assigns it to the Adults field.
func (o *ReservationsInformationType) SetAdults(v int32) {
	o.Adults = &v
}

// GetAdvancedCheckedIn returns the AdvancedCheckedIn field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetAdvancedCheckedIn() bool {
	if o == nil || IsNil(o.AdvancedCheckedIn) {
		var ret bool
		return ret
	}
	return *o.AdvancedCheckedIn
}

// GetAdvancedCheckedInOk returns a tuple with the AdvancedCheckedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetAdvancedCheckedInOk() (*bool, bool) {
	if o == nil || IsNil(o.AdvancedCheckedIn) {
		return nil, false
	}
	return o.AdvancedCheckedIn, true
}

// HasAdvancedCheckedIn returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasAdvancedCheckedIn() bool {
	if o != nil && !IsNil(o.AdvancedCheckedIn) {
		return true
	}

	return false
}

// SetAdvancedCheckedIn gets a reference to the given bool and assigns it to the AdvancedCheckedIn field.
func (o *ReservationsInformationType) SetAdvancedCheckedIn(v bool) {
	o.AdvancedCheckedIn = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *ReservationsInformationType) SetAmount(v float32) {
	o.Amount = &v
}

// GetArrivalTime returns the ArrivalTime field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetArrivalTime() string {
	if o == nil || IsNil(o.ArrivalTime) {
		var ret string
		return ret
	}
	return *o.ArrivalTime
}

// GetArrivalTimeOk returns a tuple with the ArrivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetArrivalTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalTime) {
		return nil, false
	}
	return o.ArrivalTime, true
}

// HasArrivalTime returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasArrivalTime() bool {
	if o != nil && !IsNil(o.ArrivalTime) {
		return true
	}

	return false
}

// SetArrivalTime gets a reference to the given string and assigns it to the ArrivalTime field.
func (o *ReservationsInformationType) SetArrivalTime(v string) {
	o.ArrivalTime = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetBalance() float32 {
	if o == nil || IsNil(o.Balance) {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *ReservationsInformationType) SetBalance(v float32) {
	o.Balance = &v
}

// GetBlockIdList returns the BlockIdList field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetBlockIdList() []DistinctIDType {
	if o == nil || IsNil(o.BlockIdList) {
		var ret []DistinctIDType
		return ret
	}
	return o.BlockIdList
}

// GetBlockIdListOk returns a tuple with the BlockIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetBlockIdListOk() ([]DistinctIDType, bool) {
	if o == nil || IsNil(o.BlockIdList) {
		return nil, false
	}
	return o.BlockIdList, true
}

// HasBlockIdList returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasBlockIdList() bool {
	if o != nil && !IsNil(o.BlockIdList) {
		return true
	}

	return false
}

// SetBlockIdList gets a reference to the given []DistinctIDType and assigns it to the BlockIdList field.
func (o *ReservationsInformationType) SetBlockIdList(v []DistinctIDType) {
	o.BlockIdList = v
}

// GetBookedRoomType returns the BookedRoomType field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetBookedRoomType() string {
	if o == nil || IsNil(o.BookedRoomType) {
		var ret string
		return ret
	}
	return *o.BookedRoomType
}

// GetBookedRoomTypeOk returns a tuple with the BookedRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetBookedRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BookedRoomType) {
		return nil, false
	}
	return o.BookedRoomType, true
}

// HasBookedRoomType returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasBookedRoomType() bool {
	if o != nil && !IsNil(o.BookedRoomType) {
		return true
	}

	return false
}

// SetBookedRoomType gets a reference to the given string and assigns it to the BookedRoomType field.
func (o *ReservationsInformationType) SetBookedRoomType(v string) {
	o.BookedRoomType = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetChildren() int32 {
	if o == nil || IsNil(o.Children) {
		var ret int32
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetChildrenOk() (*int32, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given int32 and assigns it to the Children field.
func (o *ReservationsInformationType) SetChildren(v int32) {
	o.Children = &v
}

// GetCompanyDetails returns the CompanyDetails field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetCompanyDetails() CompanyDetails {
	if o == nil || IsNil(o.CompanyDetails) {
		var ret CompanyDetails
		return ret
	}
	return *o.CompanyDetails
}

// GetCompanyDetailsOk returns a tuple with the CompanyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetCompanyDetailsOk() (*CompanyDetails, bool) {
	if o == nil || IsNil(o.CompanyDetails) {
		return nil, false
	}
	return o.CompanyDetails, true
}

// HasCompanyDetails returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasCompanyDetails() bool {
	if o != nil && !IsNil(o.CompanyDetails) {
		return true
	}

	return false
}

// SetCompanyDetails gets a reference to the given CompanyDetails and assigns it to the CompanyDetails field.
func (o *ReservationsInformationType) SetCompanyDetails(v CompanyDetails) {
	o.CompanyDetails = &v
}

// GetComputedReservationStatus returns the ComputedReservationStatus field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetComputedReservationStatus() string {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		var ret string
		return ret
	}
	return *o.ComputedReservationStatus
}

// GetComputedReservationStatusOk returns a tuple with the ComputedReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetComputedReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		return nil, false
	}
	return o.ComputedReservationStatus, true
}

// HasComputedReservationStatus returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasComputedReservationStatus() bool {
	if o != nil && !IsNil(o.ComputedReservationStatus) {
		return true
	}

	return false
}

// SetComputedReservationStatus gets a reference to the given string and assigns it to the ComputedReservationStatus field.
func (o *ReservationsInformationType) SetComputedReservationStatus(v string) {
	o.ComputedReservationStatus = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ReservationsInformationType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *ReservationsInformationType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDepartureTime returns the DepartureTime field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetDepartureTime() string {
	if o == nil || IsNil(o.DepartureTime) {
		var ret string
		return ret
	}
	return *o.DepartureTime
}

// GetDepartureTimeOk returns a tuple with the DepartureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetDepartureTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureTime) {
		return nil, false
	}
	return o.DepartureTime, true
}

// HasDepartureTime returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasDepartureTime() bool {
	if o != nil && !IsNil(o.DepartureTime) {
		return true
	}

	return false
}

// SetDepartureTime gets a reference to the given string and assigns it to the DepartureTime field.
func (o *ReservationsInformationType) SetDepartureTime(v string) {
	o.DepartureTime = &v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetExternalReferences() ExternalReferencesType {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret ExternalReferencesType
		return ret
	}
	return *o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetExternalReferencesOk() (*ExternalReferencesType, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given ExternalReferencesType and assigns it to the ExternalReferences field.
func (o *ReservationsInformationType) SetExternalReferences(v ExternalReferencesType) {
	o.ExternalReferences = &v
}

// GetGroupDetails returns the GroupDetails field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetGroupDetails() GroupDetails {
	if o == nil || IsNil(o.GroupDetails) {
		var ret GroupDetails
		return ret
	}
	return *o.GroupDetails
}

// GetGroupDetailsOk returns a tuple with the GroupDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetGroupDetailsOk() (*GroupDetails, bool) {
	if o == nil || IsNil(o.GroupDetails) {
		return nil, false
	}
	return o.GroupDetails, true
}

// HasGroupDetails returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasGroupDetails() bool {
	if o != nil && !IsNil(o.GroupDetails) {
		return true
	}

	return false
}

// SetGroupDetails gets a reference to the given GroupDetails and assigns it to the GroupDetails field.
func (o *ReservationsInformationType) SetGroupDetails(v GroupDetails) {
	o.GroupDetails = &v
}

// GetGuaranteeCode returns the GuaranteeCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetGuaranteeCode() string {
	if o == nil || IsNil(o.GuaranteeCode) {
		var ret string
		return ret
	}
	return *o.GuaranteeCode
}

// GetGuaranteeCodeOk returns a tuple with the GuaranteeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetGuaranteeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GuaranteeCode) {
		return nil, false
	}
	return o.GuaranteeCode, true
}

// HasGuaranteeCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasGuaranteeCode() bool {
	if o != nil && !IsNil(o.GuaranteeCode) {
		return true
	}

	return false
}

// SetGuaranteeCode gets a reference to the given string and assigns it to the GuaranteeCode field.
func (o *ReservationsInformationType) SetGuaranteeCode(v string) {
	o.GuaranteeCode = &v
}

// GetGuestDetails returns the GuestDetails field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetGuestDetails() GuestDetails {
	if o == nil || IsNil(o.GuestDetails) {
		var ret GuestDetails
		return ret
	}
	return *o.GuestDetails
}

// GetGuestDetailsOk returns a tuple with the GuestDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetGuestDetailsOk() (*GuestDetails, bool) {
	if o == nil || IsNil(o.GuestDetails) {
		return nil, false
	}
	return o.GuestDetails, true
}

// HasGuestDetails returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasGuestDetails() bool {
	if o != nil && !IsNil(o.GuestDetails) {
		return true
	}

	return false
}

// SetGuestDetails gets a reference to the given GuestDetails and assigns it to the GuestDetails field.
func (o *ReservationsInformationType) SetGuestDetails(v GuestDetails) {
	o.GuestDetails = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ReservationsInformationType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *ReservationsInformationType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLinkCode returns the LinkCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetLinkCode() string {
	if o == nil || IsNil(o.LinkCode) {
		var ret string
		return ret
	}
	return *o.LinkCode
}

// GetLinkCodeOk returns a tuple with the LinkCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetLinkCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LinkCode) {
		return nil, false
	}
	return o.LinkCode, true
}

// HasLinkCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasLinkCode() bool {
	if o != nil && !IsNil(o.LinkCode) {
		return true
	}

	return false
}

// SetLinkCode gets a reference to the given string and assigns it to the LinkCode field.
func (o *ReservationsInformationType) SetLinkCode(v string) {
	o.LinkCode = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *ReservationsInformationType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetMembershipDetails returns the MembershipDetails field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetMembershipDetails() MembershipDetails {
	if o == nil || IsNil(o.MembershipDetails) {
		var ret MembershipDetails
		return ret
	}
	return *o.MembershipDetails
}

// GetMembershipDetailsOk returns a tuple with the MembershipDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetMembershipDetailsOk() (*MembershipDetails, bool) {
	if o == nil || IsNil(o.MembershipDetails) {
		return nil, false
	}
	return o.MembershipDetails, true
}

// HasMembershipDetails returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasMembershipDetails() bool {
	if o != nil && !IsNil(o.MembershipDetails) {
		return true
	}

	return false
}

// SetMembershipDetails gets a reference to the given MembershipDetails and assigns it to the MembershipDetails field.
func (o *ReservationsInformationType) SetMembershipDetails(v MembershipDetails) {
	o.MembershipDetails = &v
}

// GetNights returns the Nights field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetNights() int32 {
	if o == nil || IsNil(o.Nights) {
		var ret int32
		return ret
	}
	return *o.Nights
}

// GetNightsOk returns a tuple with the Nights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.Nights) {
		return nil, false
	}
	return o.Nights, true
}

// HasNights returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasNights() bool {
	if o != nil && !IsNil(o.Nights) {
		return true
	}

	return false
}

// SetNights gets a reference to the given int32 and assigns it to the Nights field.
func (o *ReservationsInformationType) SetNights(v int32) {
	o.Nights = &v
}

// GetNoOfRooms returns the NoOfRooms field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetNoOfRooms() int32 {
	if o == nil || IsNil(o.NoOfRooms) {
		var ret int32
		return ret
	}
	return *o.NoOfRooms
}

// GetNoOfRoomsOk returns a tuple with the NoOfRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetNoOfRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfRooms) {
		return nil, false
	}
	return o.NoOfRooms, true
}

// HasNoOfRooms returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasNoOfRooms() bool {
	if o != nil && !IsNil(o.NoOfRooms) {
		return true
	}

	return false
}

// SetNoOfRooms gets a reference to the given int32 and assigns it to the NoOfRooms field.
func (o *ReservationsInformationType) SetNoOfRooms(v int32) {
	o.NoOfRooms = &v
}

// GetOriginCode returns the OriginCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetOriginCode() string {
	if o == nil || IsNil(o.OriginCode) {
		var ret string
		return ret
	}
	return *o.OriginCode
}

// GetOriginCodeOk returns a tuple with the OriginCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetOriginCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OriginCode) {
		return nil, false
	}
	return o.OriginCode, true
}

// HasOriginCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasOriginCode() bool {
	if o != nil && !IsNil(o.OriginCode) {
		return true
	}

	return false
}

// SetOriginCode gets a reference to the given string and assigns it to the OriginCode field.
func (o *ReservationsInformationType) SetOriginCode(v string) {
	o.OriginCode = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetPaymentType() string {
	if o == nil || IsNil(o.PaymentType) {
		var ret string
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetPaymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentType) {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasPaymentType() bool {
	if o != nil && !IsNil(o.PaymentType) {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given string and assigns it to the PaymentType field.
func (o *ReservationsInformationType) SetPaymentType(v string) {
	o.PaymentType = &v
}

// GetPreRegistered returns the PreRegistered field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetPreRegistered() bool {
	if o == nil || IsNil(o.PreRegistered) {
		var ret bool
		return ret
	}
	return *o.PreRegistered
}

// GetPreRegisteredOk returns a tuple with the PreRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetPreRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.PreRegistered) {
		return nil, false
	}
	return o.PreRegistered, true
}

// HasPreRegistered returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasPreRegistered() bool {
	if o != nil && !IsNil(o.PreRegistered) {
		return true
	}

	return false
}

// SetPreRegistered gets a reference to the given bool and assigns it to the PreRegistered field.
func (o *ReservationsInformationType) SetPreRegistered(v bool) {
	o.PreRegistered = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *ReservationsInformationType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetRateCode() string {
	if o == nil || IsNil(o.RateCode) {
		var ret string
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given string and assigns it to the RateCode field.
func (o *ReservationsInformationType) SetRateCode(v string) {
	o.RateCode = &v
}

// GetRegistrationCardNumber returns the RegistrationCardNumber field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetRegistrationCardNumber() string {
	if o == nil || IsNil(o.RegistrationCardNumber) {
		var ret string
		return ret
	}
	return *o.RegistrationCardNumber
}

// GetRegistrationCardNumberOk returns a tuple with the RegistrationCardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetRegistrationCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationCardNumber) {
		return nil, false
	}
	return o.RegistrationCardNumber, true
}

// HasRegistrationCardNumber returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasRegistrationCardNumber() bool {
	if o != nil && !IsNil(o.RegistrationCardNumber) {
		return true
	}

	return false
}

// SetRegistrationCardNumber gets a reference to the given string and assigns it to the RegistrationCardNumber field.
func (o *ReservationsInformationType) SetRegistrationCardNumber(v string) {
	o.RegistrationCardNumber = &v
}

// GetReservationDates returns the ReservationDates field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetReservationDates() ReservationDates {
	if o == nil || IsNil(o.ReservationDates) {
		var ret ReservationDates
		return ret
	}
	return *o.ReservationDates
}

// GetReservationDatesOk returns a tuple with the ReservationDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetReservationDatesOk() (*ReservationDates, bool) {
	if o == nil || IsNil(o.ReservationDates) {
		return nil, false
	}
	return o.ReservationDates, true
}

// HasReservationDates returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasReservationDates() bool {
	if o != nil && !IsNil(o.ReservationDates) {
		return true
	}

	return false
}

// SetReservationDates gets a reference to the given ReservationDates and assigns it to the ReservationDates field.
func (o *ReservationsInformationType) SetReservationDates(v ReservationDates) {
	o.ReservationDates = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetReservationIdList() []DistinctIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []DistinctIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetReservationIdListOk() ([]DistinctIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []DistinctIDType and assigns it to the ReservationIdList field.
func (o *ReservationsInformationType) SetReservationIdList(v []DistinctIDType) {
	o.ReservationIdList = v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetReservationStatus() string {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret string
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given string and assigns it to the ReservationStatus field.
func (o *ReservationsInformationType) SetReservationStatus(v string) {
	o.ReservationStatus = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ReservationsInformationType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *ReservationsInformationType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *ReservationsInformationType) SetShared(v bool) {
	o.Shared = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *ReservationsInformationType) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetTravelAgentDetails returns the TravelAgentDetails field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetTravelAgentDetails() TravelAgentDetails {
	if o == nil || IsNil(o.TravelAgentDetails) {
		var ret TravelAgentDetails
		return ret
	}
	return *o.TravelAgentDetails
}

// GetTravelAgentDetailsOk returns a tuple with the TravelAgentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetTravelAgentDetailsOk() (*TravelAgentDetails, bool) {
	if o == nil || IsNil(o.TravelAgentDetails) {
		return nil, false
	}
	return o.TravelAgentDetails, true
}

// HasTravelAgentDetails returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasTravelAgentDetails() bool {
	if o != nil && !IsNil(o.TravelAgentDetails) {
		return true
	}

	return false
}

// SetTravelAgentDetails gets a reference to the given TravelAgentDetails and assigns it to the TravelAgentDetails field.
func (o *ReservationsInformationType) SetTravelAgentDetails(v TravelAgentDetails) {
	o.TravelAgentDetails = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *ReservationsInformationType) GetVipStatus() string {
	if o == nil || IsNil(o.VipStatus) {
		var ret string
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInformationType) GetVipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *ReservationsInformationType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given string and assigns it to the VipStatus field.
func (o *ReservationsInformationType) SetVipStatus(v string) {
	o.VipStatus = &v
}

func (o ReservationsInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationsInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adults) {
		toSerialize["adults"] = o.Adults
	}
	if !IsNil(o.AdvancedCheckedIn) {
		toSerialize["advancedCheckedIn"] = o.AdvancedCheckedIn
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ArrivalTime) {
		toSerialize["arrivalTime"] = o.ArrivalTime
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.BlockIdList) {
		toSerialize["blockIdList"] = o.BlockIdList
	}
	if !IsNil(o.BookedRoomType) {
		toSerialize["bookedRoomType"] = o.BookedRoomType
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.CompanyDetails) {
		toSerialize["companyDetails"] = o.CompanyDetails
	}
	if !IsNil(o.ComputedReservationStatus) {
		toSerialize["computedReservationStatus"] = o.ComputedReservationStatus
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.DepartureTime) {
		toSerialize["departureTime"] = o.DepartureTime
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.GroupDetails) {
		toSerialize["groupDetails"] = o.GroupDetails
	}
	if !IsNil(o.GuaranteeCode) {
		toSerialize["guaranteeCode"] = o.GuaranteeCode
	}
	if !IsNil(o.GuestDetails) {
		toSerialize["guestDetails"] = o.GuestDetails
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LinkCode) {
		toSerialize["linkCode"] = o.LinkCode
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.MembershipDetails) {
		toSerialize["membershipDetails"] = o.MembershipDetails
	}
	if !IsNil(o.Nights) {
		toSerialize["nights"] = o.Nights
	}
	if !IsNil(o.NoOfRooms) {
		toSerialize["noOfRooms"] = o.NoOfRooms
	}
	if !IsNil(o.OriginCode) {
		toSerialize["originCode"] = o.OriginCode
	}
	if !IsNil(o.PaymentType) {
		toSerialize["paymentType"] = o.PaymentType
	}
	if !IsNil(o.PreRegistered) {
		toSerialize["preRegistered"] = o.PreRegistered
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.RegistrationCardNumber) {
		toSerialize["registrationCardNumber"] = o.RegistrationCardNumber
	}
	if !IsNil(o.ReservationDates) {
		toSerialize["reservationDates"] = o.ReservationDates
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.TravelAgentDetails) {
		toSerialize["travelAgentDetails"] = o.TravelAgentDetails
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	return toSerialize, nil
}

type NullableReservationsInformationType struct {
	value *ReservationsInformationType
	isSet bool
}

func (v NullableReservationsInformationType) Get() *ReservationsInformationType {
	return v.value
}

func (v *NullableReservationsInformationType) Set(val *ReservationsInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationsInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationsInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationsInformationType(val *ReservationsInformationType) *NullableReservationsInformationType {
	return &NullableReservationsInformationType{value: val, isSet: true}
}

func (v NullableReservationsInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationsInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


