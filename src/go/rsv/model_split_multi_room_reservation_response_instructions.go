/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the SplitMultiRoomReservationResponseInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SplitMultiRoomReservationResponseInstructions{}

// SplitMultiRoomReservationResponseInstructions Response instruction for the operation.
type SplitMultiRoomReservationResponseInstructions struct {
	// If set to TRUE, response will have the list of linked reservations.
	FetchLinkedReservations *bool `json:"fetchLinkedReservations,omitempty"`
	// If set to TRUE, response will have the list of unique identifiers of the reservations that were created.
	FetchNewReservationIDs *bool `json:"fetchNewReservationIDs,omitempty"`
}

// NewSplitMultiRoomReservationResponseInstructions instantiates a new SplitMultiRoomReservationResponseInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplitMultiRoomReservationResponseInstructions() *SplitMultiRoomReservationResponseInstructions {
	this := SplitMultiRoomReservationResponseInstructions{}
	return &this
}

// NewSplitMultiRoomReservationResponseInstructionsWithDefaults instantiates a new SplitMultiRoomReservationResponseInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplitMultiRoomReservationResponseInstructionsWithDefaults() *SplitMultiRoomReservationResponseInstructions {
	this := SplitMultiRoomReservationResponseInstructions{}
	return &this
}

// GetFetchLinkedReservations returns the FetchLinkedReservations field value if set, zero value otherwise.
func (o *SplitMultiRoomReservationResponseInstructions) GetFetchLinkedReservations() bool {
	if o == nil || IsNil(o.FetchLinkedReservations) {
		var ret bool
		return ret
	}
	return *o.FetchLinkedReservations
}

// GetFetchLinkedReservationsOk returns a tuple with the FetchLinkedReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplitMultiRoomReservationResponseInstructions) GetFetchLinkedReservationsOk() (*bool, bool) {
	if o == nil || IsNil(o.FetchLinkedReservations) {
		return nil, false
	}
	return o.FetchLinkedReservations, true
}

// HasFetchLinkedReservations returns a boolean if a field has been set.
func (o *SplitMultiRoomReservationResponseInstructions) HasFetchLinkedReservations() bool {
	if o != nil && !IsNil(o.FetchLinkedReservations) {
		return true
	}

	return false
}

// SetFetchLinkedReservations gets a reference to the given bool and assigns it to the FetchLinkedReservations field.
func (o *SplitMultiRoomReservationResponseInstructions) SetFetchLinkedReservations(v bool) {
	o.FetchLinkedReservations = &v
}

// GetFetchNewReservationIDs returns the FetchNewReservationIDs field value if set, zero value otherwise.
func (o *SplitMultiRoomReservationResponseInstructions) GetFetchNewReservationIDs() bool {
	if o == nil || IsNil(o.FetchNewReservationIDs) {
		var ret bool
		return ret
	}
	return *o.FetchNewReservationIDs
}

// GetFetchNewReservationIDsOk returns a tuple with the FetchNewReservationIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplitMultiRoomReservationResponseInstructions) GetFetchNewReservationIDsOk() (*bool, bool) {
	if o == nil || IsNil(o.FetchNewReservationIDs) {
		return nil, false
	}
	return o.FetchNewReservationIDs, true
}

// HasFetchNewReservationIDs returns a boolean if a field has been set.
func (o *SplitMultiRoomReservationResponseInstructions) HasFetchNewReservationIDs() bool {
	if o != nil && !IsNil(o.FetchNewReservationIDs) {
		return true
	}

	return false
}

// SetFetchNewReservationIDs gets a reference to the given bool and assigns it to the FetchNewReservationIDs field.
func (o *SplitMultiRoomReservationResponseInstructions) SetFetchNewReservationIDs(v bool) {
	o.FetchNewReservationIDs = &v
}

func (o SplitMultiRoomReservationResponseInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SplitMultiRoomReservationResponseInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FetchLinkedReservations) {
		toSerialize["fetchLinkedReservations"] = o.FetchLinkedReservations
	}
	if !IsNil(o.FetchNewReservationIDs) {
		toSerialize["fetchNewReservationIDs"] = o.FetchNewReservationIDs
	}
	return toSerialize, nil
}

type NullableSplitMultiRoomReservationResponseInstructions struct {
	value *SplitMultiRoomReservationResponseInstructions
	isSet bool
}

func (v NullableSplitMultiRoomReservationResponseInstructions) Get() *SplitMultiRoomReservationResponseInstructions {
	return v.value
}

func (v *NullableSplitMultiRoomReservationResponseInstructions) Set(val *SplitMultiRoomReservationResponseInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableSplitMultiRoomReservationResponseInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableSplitMultiRoomReservationResponseInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplitMultiRoomReservationResponseInstructions(val *SplitMultiRoomReservationResponseInstructions) *NullableSplitMultiRoomReservationResponseInstructions {
	return &NullableSplitMultiRoomReservationResponseInstructions{value: val, isSet: true}
}

func (v NullableSplitMultiRoomReservationResponseInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplitMultiRoomReservationResponseInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


