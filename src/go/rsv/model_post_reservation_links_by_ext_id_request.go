/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the PostReservationLinksByExtIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostReservationLinksByExtIdRequest{}

// PostReservationLinksByExtIdRequest struct for PostReservationLinksByExtIdRequest
type PostReservationLinksByExtIdRequest struct {
	LinkToReservationId *UniqueIDType `json:"linkToReservationId,omitempty"`
	Links *Links `json:"links,omitempty"`
	ReservationIdList *ReservationIdList `json:"reservationIdList,omitempty"`
	ResponseInstruction *LinkReservationsCriteriaResponseInstruction `json:"responseInstruction,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostReservationLinksByExtIdRequest instantiates a new PostReservationLinksByExtIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostReservationLinksByExtIdRequest() *PostReservationLinksByExtIdRequest {
	this := PostReservationLinksByExtIdRequest{}
	return &this
}

// NewPostReservationLinksByExtIdRequestWithDefaults instantiates a new PostReservationLinksByExtIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostReservationLinksByExtIdRequestWithDefaults() *PostReservationLinksByExtIdRequest {
	this := PostReservationLinksByExtIdRequest{}
	return &this
}

// GetLinkToReservationId returns the LinkToReservationId field value if set, zero value otherwise.
func (o *PostReservationLinksByExtIdRequest) GetLinkToReservationId() UniqueIDType {
	if o == nil || IsNil(o.LinkToReservationId) {
		var ret UniqueIDType
		return ret
	}
	return *o.LinkToReservationId
}

// GetLinkToReservationIdOk returns a tuple with the LinkToReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostReservationLinksByExtIdRequest) GetLinkToReservationIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.LinkToReservationId) {
		return nil, false
	}
	return o.LinkToReservationId, true
}

// HasLinkToReservationId returns a boolean if a field has been set.
func (o *PostReservationLinksByExtIdRequest) HasLinkToReservationId() bool {
	if o != nil && !IsNil(o.LinkToReservationId) {
		return true
	}

	return false
}

// SetLinkToReservationId gets a reference to the given UniqueIDType and assigns it to the LinkToReservationId field.
func (o *PostReservationLinksByExtIdRequest) SetLinkToReservationId(v UniqueIDType) {
	o.LinkToReservationId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostReservationLinksByExtIdRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostReservationLinksByExtIdRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostReservationLinksByExtIdRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostReservationLinksByExtIdRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *PostReservationLinksByExtIdRequest) GetReservationIdList() ReservationIdList {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret ReservationIdList
		return ret
	}
	return *o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostReservationLinksByExtIdRequest) GetReservationIdListOk() (*ReservationIdList, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *PostReservationLinksByExtIdRequest) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given ReservationIdList and assigns it to the ReservationIdList field.
func (o *PostReservationLinksByExtIdRequest) SetReservationIdList(v ReservationIdList) {
	o.ReservationIdList = &v
}

// GetResponseInstruction returns the ResponseInstruction field value if set, zero value otherwise.
func (o *PostReservationLinksByExtIdRequest) GetResponseInstruction() LinkReservationsCriteriaResponseInstruction {
	if o == nil || IsNil(o.ResponseInstruction) {
		var ret LinkReservationsCriteriaResponseInstruction
		return ret
	}
	return *o.ResponseInstruction
}

// GetResponseInstructionOk returns a tuple with the ResponseInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostReservationLinksByExtIdRequest) GetResponseInstructionOk() (*LinkReservationsCriteriaResponseInstruction, bool) {
	if o == nil || IsNil(o.ResponseInstruction) {
		return nil, false
	}
	return o.ResponseInstruction, true
}

// HasResponseInstruction returns a boolean if a field has been set.
func (o *PostReservationLinksByExtIdRequest) HasResponseInstruction() bool {
	if o != nil && !IsNil(o.ResponseInstruction) {
		return true
	}

	return false
}

// SetResponseInstruction gets a reference to the given LinkReservationsCriteriaResponseInstruction and assigns it to the ResponseInstruction field.
func (o *PostReservationLinksByExtIdRequest) SetResponseInstruction(v LinkReservationsCriteriaResponseInstruction) {
	o.ResponseInstruction = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostReservationLinksByExtIdRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostReservationLinksByExtIdRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostReservationLinksByExtIdRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostReservationLinksByExtIdRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostReservationLinksByExtIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostReservationLinksByExtIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkToReservationId) {
		toSerialize["linkToReservationId"] = o.LinkToReservationId
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ResponseInstruction) {
		toSerialize["responseInstruction"] = o.ResponseInstruction
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostReservationLinksByExtIdRequest struct {
	value *PostReservationLinksByExtIdRequest
	isSet bool
}

func (v NullablePostReservationLinksByExtIdRequest) Get() *PostReservationLinksByExtIdRequest {
	return v.value
}

func (v *NullablePostReservationLinksByExtIdRequest) Set(val *PostReservationLinksByExtIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostReservationLinksByExtIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostReservationLinksByExtIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostReservationLinksByExtIdRequest(val *PostReservationLinksByExtIdRequest) *NullablePostReservationLinksByExtIdRequest {
	return &NullablePostReservationLinksByExtIdRequest{value: val, isSet: true}
}

func (v NullablePostReservationLinksByExtIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostReservationLinksByExtIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


