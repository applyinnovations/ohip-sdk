/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the PreCheckInDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreCheckInDetailsType{}

// PreCheckInDetailsType Type describing the different details regarding a pre-registered reservation.
type PreCheckInDetailsType struct {
	// Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
	AllowMobileViewFolio *bool `json:"allowMobileViewFolio,omitempty"`
	Arrival *ReservationArrivalInfoType `json:"arrival,omitempty"`
	ArrivalTransport *TransportInfoType `json:"arrivalTransport,omitempty"`
	// Currency code preferred by guest.
	GuestPreferredCurrency *string `json:"guestPreferredCurrency,omitempty"`
	ReservationPaymentMethods *ReservationPaymentMethodsType `json:"reservationPaymentMethods,omitempty"`
	// Room Number to be assigned to the reservation.
	RoomId *string `json:"roomId,omitempty"`
}

// NewPreCheckInDetailsType instantiates a new PreCheckInDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreCheckInDetailsType() *PreCheckInDetailsType {
	this := PreCheckInDetailsType{}
	return &this
}

// NewPreCheckInDetailsTypeWithDefaults instantiates a new PreCheckInDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreCheckInDetailsTypeWithDefaults() *PreCheckInDetailsType {
	this := PreCheckInDetailsType{}
	return &this
}

// GetAllowMobileViewFolio returns the AllowMobileViewFolio field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetAllowMobileViewFolio() bool {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		var ret bool
		return ret
	}
	return *o.AllowMobileViewFolio
}

// GetAllowMobileViewFolioOk returns a tuple with the AllowMobileViewFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetAllowMobileViewFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		return nil, false
	}
	return o.AllowMobileViewFolio, true
}

// HasAllowMobileViewFolio returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasAllowMobileViewFolio() bool {
	if o != nil && !IsNil(o.AllowMobileViewFolio) {
		return true
	}

	return false
}

// SetAllowMobileViewFolio gets a reference to the given bool and assigns it to the AllowMobileViewFolio field.
func (o *PreCheckInDetailsType) SetAllowMobileViewFolio(v bool) {
	o.AllowMobileViewFolio = &v
}

// GetArrival returns the Arrival field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetArrival() ReservationArrivalInfoType {
	if o == nil || IsNil(o.Arrival) {
		var ret ReservationArrivalInfoType
		return ret
	}
	return *o.Arrival
}

// GetArrivalOk returns a tuple with the Arrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetArrivalOk() (*ReservationArrivalInfoType, bool) {
	if o == nil || IsNil(o.Arrival) {
		return nil, false
	}
	return o.Arrival, true
}

// HasArrival returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasArrival() bool {
	if o != nil && !IsNil(o.Arrival) {
		return true
	}

	return false
}

// SetArrival gets a reference to the given ReservationArrivalInfoType and assigns it to the Arrival field.
func (o *PreCheckInDetailsType) SetArrival(v ReservationArrivalInfoType) {
	o.Arrival = &v
}

// GetArrivalTransport returns the ArrivalTransport field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetArrivalTransport() TransportInfoType {
	if o == nil || IsNil(o.ArrivalTransport) {
		var ret TransportInfoType
		return ret
	}
	return *o.ArrivalTransport
}

// GetArrivalTransportOk returns a tuple with the ArrivalTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetArrivalTransportOk() (*TransportInfoType, bool) {
	if o == nil || IsNil(o.ArrivalTransport) {
		return nil, false
	}
	return o.ArrivalTransport, true
}

// HasArrivalTransport returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasArrivalTransport() bool {
	if o != nil && !IsNil(o.ArrivalTransport) {
		return true
	}

	return false
}

// SetArrivalTransport gets a reference to the given TransportInfoType and assigns it to the ArrivalTransport field.
func (o *PreCheckInDetailsType) SetArrivalTransport(v TransportInfoType) {
	o.ArrivalTransport = &v
}

// GetGuestPreferredCurrency returns the GuestPreferredCurrency field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetGuestPreferredCurrency() string {
	if o == nil || IsNil(o.GuestPreferredCurrency) {
		var ret string
		return ret
	}
	return *o.GuestPreferredCurrency
}

// GetGuestPreferredCurrencyOk returns a tuple with the GuestPreferredCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetGuestPreferredCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.GuestPreferredCurrency) {
		return nil, false
	}
	return o.GuestPreferredCurrency, true
}

// HasGuestPreferredCurrency returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasGuestPreferredCurrency() bool {
	if o != nil && !IsNil(o.GuestPreferredCurrency) {
		return true
	}

	return false
}

// SetGuestPreferredCurrency gets a reference to the given string and assigns it to the GuestPreferredCurrency field.
func (o *PreCheckInDetailsType) SetGuestPreferredCurrency(v string) {
	o.GuestPreferredCurrency = &v
}

// GetReservationPaymentMethods returns the ReservationPaymentMethods field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetReservationPaymentMethods() ReservationPaymentMethodsType {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		var ret ReservationPaymentMethodsType
		return ret
	}
	return *o.ReservationPaymentMethods
}

// GetReservationPaymentMethodsOk returns a tuple with the ReservationPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetReservationPaymentMethodsOk() (*ReservationPaymentMethodsType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		return nil, false
	}
	return o.ReservationPaymentMethods, true
}

// HasReservationPaymentMethods returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasReservationPaymentMethods() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethods) {
		return true
	}

	return false
}

// SetReservationPaymentMethods gets a reference to the given ReservationPaymentMethodsType and assigns it to the ReservationPaymentMethods field.
func (o *PreCheckInDetailsType) SetReservationPaymentMethods(v ReservationPaymentMethodsType) {
	o.ReservationPaymentMethods = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *PreCheckInDetailsType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInDetailsType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *PreCheckInDetailsType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *PreCheckInDetailsType) SetRoomId(v string) {
	o.RoomId = &v
}

func (o PreCheckInDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreCheckInDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowMobileViewFolio) {
		toSerialize["allowMobileViewFolio"] = o.AllowMobileViewFolio
	}
	if !IsNil(o.Arrival) {
		toSerialize["arrival"] = o.Arrival
	}
	if !IsNil(o.ArrivalTransport) {
		toSerialize["arrivalTransport"] = o.ArrivalTransport
	}
	if !IsNil(o.GuestPreferredCurrency) {
		toSerialize["guestPreferredCurrency"] = o.GuestPreferredCurrency
	}
	if !IsNil(o.ReservationPaymentMethods) {
		toSerialize["reservationPaymentMethods"] = o.ReservationPaymentMethods
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	return toSerialize, nil
}

type NullablePreCheckInDetailsType struct {
	value *PreCheckInDetailsType
	isSet bool
}

func (v NullablePreCheckInDetailsType) Get() *PreCheckInDetailsType {
	return v.value
}

func (v *NullablePreCheckInDetailsType) Set(val *PreCheckInDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullablePreCheckInDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullablePreCheckInDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreCheckInDetailsType(val *PreCheckInDetailsType) *NullablePreCheckInDetailsType {
	return &NullablePreCheckInDetailsType{value: val, isSet: true}
}

func (v NullablePreCheckInDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreCheckInDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


