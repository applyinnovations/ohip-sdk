/*
OPERA Cloud Reservation Asynchronous API

APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvasync

import (
	"encoding/json"
)

// checks if the ReservationsDailySummarySearchType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationsDailySummarySearchType{}

// ReservationsDailySummarySearchType struct for ReservationsDailySummarySearchType
type ReservationsDailySummarySearchType struct {
	// The Hotel Code for which the reservation search will be performed.
	HotelId *string `json:"hotelId,omitempty"`
	LastModifiedDate *LastModifiedDateType `json:"lastModifiedDate,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
}

// NewReservationsDailySummarySearchType instantiates a new ReservationsDailySummarySearchType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationsDailySummarySearchType() *ReservationsDailySummarySearchType {
	this := ReservationsDailySummarySearchType{}
	return &this
}

// NewReservationsDailySummarySearchTypeWithDefaults instantiates a new ReservationsDailySummarySearchType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationsDailySummarySearchTypeWithDefaults() *ReservationsDailySummarySearchType {
	this := ReservationsDailySummarySearchType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ReservationsDailySummarySearchType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsDailySummarySearchType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ReservationsDailySummarySearchType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ReservationsDailySummarySearchType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ReservationsDailySummarySearchType) GetLastModifiedDate() LastModifiedDateType {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret LastModifiedDateType
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsDailySummarySearchType) GetLastModifiedDateOk() (*LastModifiedDateType, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ReservationsDailySummarySearchType) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given LastModifiedDateType and assigns it to the LastModifiedDate field.
func (o *ReservationsDailySummarySearchType) SetLastModifiedDate(v LastModifiedDateType) {
	o.LastModifiedDate = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *ReservationsDailySummarySearchType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsDailySummarySearchType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *ReservationsDailySummarySearchType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *ReservationsDailySummarySearchType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

func (o ReservationsDailySummarySearchType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationsDailySummarySearchType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	return toSerialize, nil
}

type NullableReservationsDailySummarySearchType struct {
	value *ReservationsDailySummarySearchType
	isSet bool
}

func (v NullableReservationsDailySummarySearchType) Get() *ReservationsDailySummarySearchType {
	return v.value
}

func (v *NullableReservationsDailySummarySearchType) Set(val *ReservationsDailySummarySearchType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationsDailySummarySearchType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationsDailySummarySearchType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationsDailySummarySearchType(val *ReservationsDailySummarySearchType) *NullableReservationsDailySummarySearchType {
	return &NullableReservationsDailySummarySearchType{value: val, isSet: true}
}

func (v NullableReservationsDailySummarySearchType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationsDailySummarySearchType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


