/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the MergeTaskSheetCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergeTaskSheetCriteriaType{}

// MergeTaskSheetCriteriaType Criteria to merge task sheets.
type MergeTaskSheetCriteriaType struct {
	// Source task sequence number of the task sheet.
	FromTaskSeqNo *int32 `json:"fromTaskSeqNo,omitempty"`
	// Break out id of the task sheet.
	HkBreakOutId *int32 `json:"hkBreakOutId,omitempty"`
	// Property code which the task sheets belong.
	HotelId *string `json:"hotelId,omitempty"`
	// Destination task sequence number of the task sheet.
	ToTaskSeqNo *int32 `json:"toTaskSeqNo,omitempty"`
}

// NewMergeTaskSheetCriteriaType instantiates a new MergeTaskSheetCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeTaskSheetCriteriaType() *MergeTaskSheetCriteriaType {
	this := MergeTaskSheetCriteriaType{}
	return &this
}

// NewMergeTaskSheetCriteriaTypeWithDefaults instantiates a new MergeTaskSheetCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeTaskSheetCriteriaTypeWithDefaults() *MergeTaskSheetCriteriaType {
	this := MergeTaskSheetCriteriaType{}
	return &this
}

// GetFromTaskSeqNo returns the FromTaskSeqNo field value if set, zero value otherwise.
func (o *MergeTaskSheetCriteriaType) GetFromTaskSeqNo() int32 {
	if o == nil || IsNil(o.FromTaskSeqNo) {
		var ret int32
		return ret
	}
	return *o.FromTaskSeqNo
}

// GetFromTaskSeqNoOk returns a tuple with the FromTaskSeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeTaskSheetCriteriaType) GetFromTaskSeqNoOk() (*int32, bool) {
	if o == nil || IsNil(o.FromTaskSeqNo) {
		return nil, false
	}
	return o.FromTaskSeqNo, true
}

// HasFromTaskSeqNo returns a boolean if a field has been set.
func (o *MergeTaskSheetCriteriaType) HasFromTaskSeqNo() bool {
	if o != nil && !IsNil(o.FromTaskSeqNo) {
		return true
	}

	return false
}

// SetFromTaskSeqNo gets a reference to the given int32 and assigns it to the FromTaskSeqNo field.
func (o *MergeTaskSheetCriteriaType) SetFromTaskSeqNo(v int32) {
	o.FromTaskSeqNo = &v
}

// GetHkBreakOutId returns the HkBreakOutId field value if set, zero value otherwise.
func (o *MergeTaskSheetCriteriaType) GetHkBreakOutId() int32 {
	if o == nil || IsNil(o.HkBreakOutId) {
		var ret int32
		return ret
	}
	return *o.HkBreakOutId
}

// GetHkBreakOutIdOk returns a tuple with the HkBreakOutId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeTaskSheetCriteriaType) GetHkBreakOutIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HkBreakOutId) {
		return nil, false
	}
	return o.HkBreakOutId, true
}

// HasHkBreakOutId returns a boolean if a field has been set.
func (o *MergeTaskSheetCriteriaType) HasHkBreakOutId() bool {
	if o != nil && !IsNil(o.HkBreakOutId) {
		return true
	}

	return false
}

// SetHkBreakOutId gets a reference to the given int32 and assigns it to the HkBreakOutId field.
func (o *MergeTaskSheetCriteriaType) SetHkBreakOutId(v int32) {
	o.HkBreakOutId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MergeTaskSheetCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeTaskSheetCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MergeTaskSheetCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MergeTaskSheetCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetToTaskSeqNo returns the ToTaskSeqNo field value if set, zero value otherwise.
func (o *MergeTaskSheetCriteriaType) GetToTaskSeqNo() int32 {
	if o == nil || IsNil(o.ToTaskSeqNo) {
		var ret int32
		return ret
	}
	return *o.ToTaskSeqNo
}

// GetToTaskSeqNoOk returns a tuple with the ToTaskSeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeTaskSheetCriteriaType) GetToTaskSeqNoOk() (*int32, bool) {
	if o == nil || IsNil(o.ToTaskSeqNo) {
		return nil, false
	}
	return o.ToTaskSeqNo, true
}

// HasToTaskSeqNo returns a boolean if a field has been set.
func (o *MergeTaskSheetCriteriaType) HasToTaskSeqNo() bool {
	if o != nil && !IsNil(o.ToTaskSeqNo) {
		return true
	}

	return false
}

// SetToTaskSeqNo gets a reference to the given int32 and assigns it to the ToTaskSeqNo field.
func (o *MergeTaskSheetCriteriaType) SetToTaskSeqNo(v int32) {
	o.ToTaskSeqNo = &v
}

func (o MergeTaskSheetCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeTaskSheetCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromTaskSeqNo) {
		toSerialize["fromTaskSeqNo"] = o.FromTaskSeqNo
	}
	if !IsNil(o.HkBreakOutId) {
		toSerialize["hkBreakOutId"] = o.HkBreakOutId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ToTaskSeqNo) {
		toSerialize["toTaskSeqNo"] = o.ToTaskSeqNo
	}
	return toSerialize, nil
}

type NullableMergeTaskSheetCriteriaType struct {
	value *MergeTaskSheetCriteriaType
	isSet bool
}

func (v NullableMergeTaskSheetCriteriaType) Get() *MergeTaskSheetCriteriaType {
	return v.value
}

func (v *NullableMergeTaskSheetCriteriaType) Set(val *MergeTaskSheetCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeTaskSheetCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeTaskSheetCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeTaskSheetCriteriaType(val *MergeTaskSheetCriteriaType) *NullableMergeTaskSheetCriteriaType {
	return &NullableMergeTaskSheetCriteriaType{value: val, isSet: true}
}

func (v NullableMergeTaskSheetCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeTaskSheetCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


