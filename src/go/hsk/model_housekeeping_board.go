/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the HousekeepingBoard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HousekeepingBoard{}

// HousekeepingBoard struct for HousekeepingBoard
type HousekeepingBoard struct {
	HousekeepingRoomInfo *HousekeepingBoardHousekeepingRoomInfo `json:"housekeepingRoomInfo,omitempty"`
	// Collection of Housekeeping Room Status Information.
	HousekeepingRoomStatusInfoList []HousekeepingRoomStatusInfo `json:"housekeepingRoomStatusInfoList,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewHousekeepingBoard instantiates a new HousekeepingBoard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHousekeepingBoard() *HousekeepingBoard {
	this := HousekeepingBoard{}
	return &this
}

// NewHousekeepingBoardWithDefaults instantiates a new HousekeepingBoard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHousekeepingBoardWithDefaults() *HousekeepingBoard {
	this := HousekeepingBoard{}
	return &this
}

// GetHousekeepingRoomInfo returns the HousekeepingRoomInfo field value if set, zero value otherwise.
func (o *HousekeepingBoard) GetHousekeepingRoomInfo() HousekeepingBoardHousekeepingRoomInfo {
	if o == nil || IsNil(o.HousekeepingRoomInfo) {
		var ret HousekeepingBoardHousekeepingRoomInfo
		return ret
	}
	return *o.HousekeepingRoomInfo
}

// GetHousekeepingRoomInfoOk returns a tuple with the HousekeepingRoomInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingBoard) GetHousekeepingRoomInfoOk() (*HousekeepingBoardHousekeepingRoomInfo, bool) {
	if o == nil || IsNil(o.HousekeepingRoomInfo) {
		return nil, false
	}
	return o.HousekeepingRoomInfo, true
}

// HasHousekeepingRoomInfo returns a boolean if a field has been set.
func (o *HousekeepingBoard) HasHousekeepingRoomInfo() bool {
	if o != nil && !IsNil(o.HousekeepingRoomInfo) {
		return true
	}

	return false
}

// SetHousekeepingRoomInfo gets a reference to the given HousekeepingBoardHousekeepingRoomInfo and assigns it to the HousekeepingRoomInfo field.
func (o *HousekeepingBoard) SetHousekeepingRoomInfo(v HousekeepingBoardHousekeepingRoomInfo) {
	o.HousekeepingRoomInfo = &v
}

// GetHousekeepingRoomStatusInfoList returns the HousekeepingRoomStatusInfoList field value if set, zero value otherwise.
func (o *HousekeepingBoard) GetHousekeepingRoomStatusInfoList() []HousekeepingRoomStatusInfo {
	if o == nil || IsNil(o.HousekeepingRoomStatusInfoList) {
		var ret []HousekeepingRoomStatusInfo
		return ret
	}
	return o.HousekeepingRoomStatusInfoList
}

// GetHousekeepingRoomStatusInfoListOk returns a tuple with the HousekeepingRoomStatusInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingBoard) GetHousekeepingRoomStatusInfoListOk() ([]HousekeepingRoomStatusInfo, bool) {
	if o == nil || IsNil(o.HousekeepingRoomStatusInfoList) {
		return nil, false
	}
	return o.HousekeepingRoomStatusInfoList, true
}

// HasHousekeepingRoomStatusInfoList returns a boolean if a field has been set.
func (o *HousekeepingBoard) HasHousekeepingRoomStatusInfoList() bool {
	if o != nil && !IsNil(o.HousekeepingRoomStatusInfoList) {
		return true
	}

	return false
}

// SetHousekeepingRoomStatusInfoList gets a reference to the given []HousekeepingRoomStatusInfo and assigns it to the HousekeepingRoomStatusInfoList field.
func (o *HousekeepingBoard) SetHousekeepingRoomStatusInfoList(v []HousekeepingRoomStatusInfo) {
	o.HousekeepingRoomStatusInfoList = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *HousekeepingBoard) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingBoard) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *HousekeepingBoard) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *HousekeepingBoard) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *HousekeepingBoard) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingBoard) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *HousekeepingBoard) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *HousekeepingBoard) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o HousekeepingBoard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HousekeepingBoard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HousekeepingRoomInfo) {
		toSerialize["housekeepingRoomInfo"] = o.HousekeepingRoomInfo
	}
	if !IsNil(o.HousekeepingRoomStatusInfoList) {
		toSerialize["housekeepingRoomStatusInfoList"] = o.HousekeepingRoomStatusInfoList
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableHousekeepingBoard struct {
	value *HousekeepingBoard
	isSet bool
}

func (v NullableHousekeepingBoard) Get() *HousekeepingBoard {
	return v.value
}

func (v *NullableHousekeepingBoard) Set(val *HousekeepingBoard) {
	v.value = val
	v.isSet = true
}

func (v NullableHousekeepingBoard) IsSet() bool {
	return v.isSet
}

func (v *NullableHousekeepingBoard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHousekeepingBoard(val *HousekeepingBoard) *NullableHousekeepingBoard {
	return &NullableHousekeepingBoard{value: val, isSet: true}
}

func (v NullableHousekeepingBoard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHousekeepingBoard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


