/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ServiceTaskRoomType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceTaskRoomType{}

// ServiceTaskRoomType Criteria for servicing a task room.
type ServiceTaskRoomType struct {
	// The allotted minutes for completing the task.
	AllottedMinutes *float32 `json:"allottedMinutes,omitempty"`
	// The Attendant ID who is currently servicing the room.
	Attendant *string `json:"attendant,omitempty"`
	FrontOfficeStatus *FrontOfficeRoomStatusType `json:"frontOfficeStatus,omitempty"`
	// Property where the task sheet exists.
	HotelId *string `json:"hotelId,omitempty"`
	HousekeepingRoomStatus *HousekeepingRoomStatusType `json:"housekeepingRoomStatus,omitempty"`
	// The room number to service.
	RoomId *string `json:"roomId,omitempty"`
	// The task code for the current room which is to be done.
	RoomTaskCode *string `json:"roomTaskCode,omitempty"`
	// The Task Sheet number where the room exists.
	SheetNumber *int32 `json:"sheetNumber,omitempty"`
	TaskCodes *CodeListType `json:"taskCodes,omitempty"`
	// Date for which the task sheet was created. By default this would be the current business date.
	TaskDate *string `json:"taskDate,omitempty"`
}

// NewServiceTaskRoomType instantiates a new ServiceTaskRoomType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceTaskRoomType() *ServiceTaskRoomType {
	this := ServiceTaskRoomType{}
	return &this
}

// NewServiceTaskRoomTypeWithDefaults instantiates a new ServiceTaskRoomType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTaskRoomTypeWithDefaults() *ServiceTaskRoomType {
	this := ServiceTaskRoomType{}
	return &this
}

// GetAllottedMinutes returns the AllottedMinutes field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetAllottedMinutes() float32 {
	if o == nil || IsNil(o.AllottedMinutes) {
		var ret float32
		return ret
	}
	return *o.AllottedMinutes
}

// GetAllottedMinutesOk returns a tuple with the AllottedMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetAllottedMinutesOk() (*float32, bool) {
	if o == nil || IsNil(o.AllottedMinutes) {
		return nil, false
	}
	return o.AllottedMinutes, true
}

// HasAllottedMinutes returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasAllottedMinutes() bool {
	if o != nil && !IsNil(o.AllottedMinutes) {
		return true
	}

	return false
}

// SetAllottedMinutes gets a reference to the given float32 and assigns it to the AllottedMinutes field.
func (o *ServiceTaskRoomType) SetAllottedMinutes(v float32) {
	o.AllottedMinutes = &v
}

// GetAttendant returns the Attendant field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetAttendant() string {
	if o == nil || IsNil(o.Attendant) {
		var ret string
		return ret
	}
	return *o.Attendant
}

// GetAttendantOk returns a tuple with the Attendant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetAttendantOk() (*string, bool) {
	if o == nil || IsNil(o.Attendant) {
		return nil, false
	}
	return o.Attendant, true
}

// HasAttendant returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasAttendant() bool {
	if o != nil && !IsNil(o.Attendant) {
		return true
	}

	return false
}

// SetAttendant gets a reference to the given string and assigns it to the Attendant field.
func (o *ServiceTaskRoomType) SetAttendant(v string) {
	o.Attendant = &v
}

// GetFrontOfficeStatus returns the FrontOfficeStatus field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetFrontOfficeStatus() FrontOfficeRoomStatusType {
	if o == nil || IsNil(o.FrontOfficeStatus) {
		var ret FrontOfficeRoomStatusType
		return ret
	}
	return *o.FrontOfficeStatus
}

// GetFrontOfficeStatusOk returns a tuple with the FrontOfficeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetFrontOfficeStatusOk() (*FrontOfficeRoomStatusType, bool) {
	if o == nil || IsNil(o.FrontOfficeStatus) {
		return nil, false
	}
	return o.FrontOfficeStatus, true
}

// HasFrontOfficeStatus returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasFrontOfficeStatus() bool {
	if o != nil && !IsNil(o.FrontOfficeStatus) {
		return true
	}

	return false
}

// SetFrontOfficeStatus gets a reference to the given FrontOfficeRoomStatusType and assigns it to the FrontOfficeStatus field.
func (o *ServiceTaskRoomType) SetFrontOfficeStatus(v FrontOfficeRoomStatusType) {
	o.FrontOfficeStatus = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ServiceTaskRoomType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetHousekeepingRoomStatus returns the HousekeepingRoomStatus field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetHousekeepingRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.HousekeepingRoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.HousekeepingRoomStatus
}

// GetHousekeepingRoomStatusOk returns a tuple with the HousekeepingRoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetHousekeepingRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.HousekeepingRoomStatus) {
		return nil, false
	}
	return o.HousekeepingRoomStatus, true
}

// HasHousekeepingRoomStatus returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasHousekeepingRoomStatus() bool {
	if o != nil && !IsNil(o.HousekeepingRoomStatus) {
		return true
	}

	return false
}

// SetHousekeepingRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the HousekeepingRoomStatus field.
func (o *ServiceTaskRoomType) SetHousekeepingRoomStatus(v HousekeepingRoomStatusType) {
	o.HousekeepingRoomStatus = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ServiceTaskRoomType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomTaskCode returns the RoomTaskCode field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetRoomTaskCode() string {
	if o == nil || IsNil(o.RoomTaskCode) {
		var ret string
		return ret
	}
	return *o.RoomTaskCode
}

// GetRoomTaskCodeOk returns a tuple with the RoomTaskCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetRoomTaskCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomTaskCode) {
		return nil, false
	}
	return o.RoomTaskCode, true
}

// HasRoomTaskCode returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasRoomTaskCode() bool {
	if o != nil && !IsNil(o.RoomTaskCode) {
		return true
	}

	return false
}

// SetRoomTaskCode gets a reference to the given string and assigns it to the RoomTaskCode field.
func (o *ServiceTaskRoomType) SetRoomTaskCode(v string) {
	o.RoomTaskCode = &v
}

// GetSheetNumber returns the SheetNumber field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetSheetNumber() int32 {
	if o == nil || IsNil(o.SheetNumber) {
		var ret int32
		return ret
	}
	return *o.SheetNumber
}

// GetSheetNumberOk returns a tuple with the SheetNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetSheetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SheetNumber) {
		return nil, false
	}
	return o.SheetNumber, true
}

// HasSheetNumber returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasSheetNumber() bool {
	if o != nil && !IsNil(o.SheetNumber) {
		return true
	}

	return false
}

// SetSheetNumber gets a reference to the given int32 and assigns it to the SheetNumber field.
func (o *ServiceTaskRoomType) SetSheetNumber(v int32) {
	o.SheetNumber = &v
}

// GetTaskCodes returns the TaskCodes field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetTaskCodes() CodeListType {
	if o == nil || IsNil(o.TaskCodes) {
		var ret CodeListType
		return ret
	}
	return *o.TaskCodes
}

// GetTaskCodesOk returns a tuple with the TaskCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetTaskCodesOk() (*CodeListType, bool) {
	if o == nil || IsNil(o.TaskCodes) {
		return nil, false
	}
	return o.TaskCodes, true
}

// HasTaskCodes returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasTaskCodes() bool {
	if o != nil && !IsNil(o.TaskCodes) {
		return true
	}

	return false
}

// SetTaskCodes gets a reference to the given CodeListType and assigns it to the TaskCodes field.
func (o *ServiceTaskRoomType) SetTaskCodes(v CodeListType) {
	o.TaskCodes = &v
}

// GetTaskDate returns the TaskDate field value if set, zero value otherwise.
func (o *ServiceTaskRoomType) GetTaskDate() string {
	if o == nil || IsNil(o.TaskDate) {
		var ret string
		return ret
	}
	return *o.TaskDate
}

// GetTaskDateOk returns a tuple with the TaskDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTaskRoomType) GetTaskDateOk() (*string, bool) {
	if o == nil || IsNil(o.TaskDate) {
		return nil, false
	}
	return o.TaskDate, true
}

// HasTaskDate returns a boolean if a field has been set.
func (o *ServiceTaskRoomType) HasTaskDate() bool {
	if o != nil && !IsNil(o.TaskDate) {
		return true
	}

	return false
}

// SetTaskDate gets a reference to the given string and assigns it to the TaskDate field.
func (o *ServiceTaskRoomType) SetTaskDate(v string) {
	o.TaskDate = &v
}

func (o ServiceTaskRoomType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceTaskRoomType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllottedMinutes) {
		toSerialize["allottedMinutes"] = o.AllottedMinutes
	}
	if !IsNil(o.Attendant) {
		toSerialize["attendant"] = o.Attendant
	}
	if !IsNil(o.FrontOfficeStatus) {
		toSerialize["frontOfficeStatus"] = o.FrontOfficeStatus
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.HousekeepingRoomStatus) {
		toSerialize["housekeepingRoomStatus"] = o.HousekeepingRoomStatus
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomTaskCode) {
		toSerialize["roomTaskCode"] = o.RoomTaskCode
	}
	if !IsNil(o.SheetNumber) {
		toSerialize["sheetNumber"] = o.SheetNumber
	}
	if !IsNil(o.TaskCodes) {
		toSerialize["taskCodes"] = o.TaskCodes
	}
	if !IsNil(o.TaskDate) {
		toSerialize["taskDate"] = o.TaskDate
	}
	return toSerialize, nil
}

type NullableServiceTaskRoomType struct {
	value *ServiceTaskRoomType
	isSet bool
}

func (v NullableServiceTaskRoomType) Get() *ServiceTaskRoomType {
	return v.value
}

func (v *NullableServiceTaskRoomType) Set(val *ServiceTaskRoomType) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTaskRoomType) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTaskRoomType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTaskRoomType(val *ServiceTaskRoomType) *NullableServiceTaskRoomType {
	return &NullableServiceTaskRoomType{value: val, isSet: true}
}

func (v NullableServiceTaskRoomType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTaskRoomType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


