/*
OPERA Cloud Block Reservation Asynchronous API

APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkasync

import (
	"encoding/json"
)

// checks if the Criteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Criteria{}

// Criteria Request object for fetching block allocation summary asynchronously.
type Criteria struct {
	EndDate *string `json:"endDate,omitempty"`
	EndLastModifiedDate *string `json:"endLastModifiedDate,omitempty"`
	OccupancyDate *string `json:"occupancyDate,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	StartLastModifiedDate *string `json:"startLastModifiedDate,omitempty"`
}

// NewCriteria instantiates a new Criteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCriteria() *Criteria {
	this := Criteria{}
	return &this
}

// NewCriteriaWithDefaults instantiates a new Criteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCriteriaWithDefaults() *Criteria {
	this := Criteria{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *Criteria) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Criteria) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *Criteria) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *Criteria) SetEndDate(v string) {
	o.EndDate = &v
}

// GetEndLastModifiedDate returns the EndLastModifiedDate field value if set, zero value otherwise.
func (o *Criteria) GetEndLastModifiedDate() string {
	if o == nil || IsNil(o.EndLastModifiedDate) {
		var ret string
		return ret
	}
	return *o.EndLastModifiedDate
}

// GetEndLastModifiedDateOk returns a tuple with the EndLastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Criteria) GetEndLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndLastModifiedDate) {
		return nil, false
	}
	return o.EndLastModifiedDate, true
}

// HasEndLastModifiedDate returns a boolean if a field has been set.
func (o *Criteria) HasEndLastModifiedDate() bool {
	if o != nil && !IsNil(o.EndLastModifiedDate) {
		return true
	}

	return false
}

// SetEndLastModifiedDate gets a reference to the given string and assigns it to the EndLastModifiedDate field.
func (o *Criteria) SetEndLastModifiedDate(v string) {
	o.EndLastModifiedDate = &v
}

// GetOccupancyDate returns the OccupancyDate field value if set, zero value otherwise.
func (o *Criteria) GetOccupancyDate() string {
	if o == nil || IsNil(o.OccupancyDate) {
		var ret string
		return ret
	}
	return *o.OccupancyDate
}

// GetOccupancyDateOk returns a tuple with the OccupancyDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Criteria) GetOccupancyDateOk() (*string, bool) {
	if o == nil || IsNil(o.OccupancyDate) {
		return nil, false
	}
	return o.OccupancyDate, true
}

// HasOccupancyDate returns a boolean if a field has been set.
func (o *Criteria) HasOccupancyDate() bool {
	if o != nil && !IsNil(o.OccupancyDate) {
		return true
	}

	return false
}

// SetOccupancyDate gets a reference to the given string and assigns it to the OccupancyDate field.
func (o *Criteria) SetOccupancyDate(v string) {
	o.OccupancyDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *Criteria) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Criteria) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *Criteria) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *Criteria) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStartLastModifiedDate returns the StartLastModifiedDate field value if set, zero value otherwise.
func (o *Criteria) GetStartLastModifiedDate() string {
	if o == nil || IsNil(o.StartLastModifiedDate) {
		var ret string
		return ret
	}
	return *o.StartLastModifiedDate
}

// GetStartLastModifiedDateOk returns a tuple with the StartLastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Criteria) GetStartLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartLastModifiedDate) {
		return nil, false
	}
	return o.StartLastModifiedDate, true
}

// HasStartLastModifiedDate returns a boolean if a field has been set.
func (o *Criteria) HasStartLastModifiedDate() bool {
	if o != nil && !IsNil(o.StartLastModifiedDate) {
		return true
	}

	return false
}

// SetStartLastModifiedDate gets a reference to the given string and assigns it to the StartLastModifiedDate field.
func (o *Criteria) SetStartLastModifiedDate(v string) {
	o.StartLastModifiedDate = &v
}

func (o Criteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Criteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.EndLastModifiedDate) {
		toSerialize["endLastModifiedDate"] = o.EndLastModifiedDate
	}
	if !IsNil(o.OccupancyDate) {
		toSerialize["occupancyDate"] = o.OccupancyDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.StartLastModifiedDate) {
		toSerialize["startLastModifiedDate"] = o.StartLastModifiedDate
	}
	return toSerialize, nil
}

type NullableCriteria struct {
	value *Criteria
	isSet bool
}

func (v NullableCriteria) Get() *Criteria {
	return v.value
}

func (v *NullableCriteria) Set(val *Criteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCriteria(val *Criteria) *NullableCriteria {
	return &NullableCriteria{value: val, isSet: true}
}

func (v NullableCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


