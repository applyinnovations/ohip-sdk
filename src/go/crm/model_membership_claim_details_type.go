/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipClaimDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipClaimDetailsType{}

// MembershipClaimDetailsType Detailed information of a claim.
type MembershipClaimDetailsType struct {
	ActivityLog *ClaimActivityLogListType `json:"activityLog,omitempty"`
	ApprovalStatus *ClaimApprovalStatusType `json:"approvalStatus,omitempty"`
	// More information related to call that help to resolve the claim..
	CallerInformation *string `json:"callerInformation,omitempty"`
	// Name of the person placing the claim. This name may be different from the name on the membership card.
	CallerName *string `json:"callerName,omitempty"`
	// Date the claim was made.
	ClaimDate *string `json:"claimDate,omitempty"`
	ClaimNo *UniqueIDType `json:"claimNo,omitempty"`
	ClaimPoints *ClaimAdjustmentPointsType `json:"claimPoints,omitempty"`
	// Status of the claim.(Open, Closed, Pending Review, Waiting for Manager, etc.)
	ClaimStatus *string `json:"claimStatus,omitempty"`
	// Type of user-definable claim such as New Card, Stay, etc.
	ClaimType *string `json:"claimType,omitempty"`
	// If the status is closed, the date the claim was closed.
	CloseDate *string `json:"closeDate,omitempty"`
	// Additional comments or steps taken to resolve the claim..
	Comments *string `json:"comments,omitempty"`
	Membership *ClaimMembershipType `json:"membership,omitempty"`
	// Origin of the membership claim. User definable values like Email, Fax, Phone Call, etc.
	Origin *string `json:"origin,omitempty"`
	// User who is assigned to handle this claim.
	Owner *string `json:"owner,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
	RecordType *ClaimRecordType `json:"recordType,omitempty"`
	// The date, if any, by which a response to the caller was promised.
	ReplyBy *string `json:"replyBy,omitempty"`
	Reservation *ClaimReservationInfoType `json:"reservation,omitempty"`
	Source *ClaimSourceType `json:"source,omitempty"`
	// User who entered this claim.
	Submitter *string `json:"submitter,omitempty"`
}

// NewMembershipClaimDetailsType instantiates a new MembershipClaimDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipClaimDetailsType() *MembershipClaimDetailsType {
	this := MembershipClaimDetailsType{}
	return &this
}

// NewMembershipClaimDetailsTypeWithDefaults instantiates a new MembershipClaimDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipClaimDetailsTypeWithDefaults() *MembershipClaimDetailsType {
	this := MembershipClaimDetailsType{}
	return &this
}

// GetActivityLog returns the ActivityLog field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetActivityLog() ClaimActivityLogListType {
	if o == nil || IsNil(o.ActivityLog) {
		var ret ClaimActivityLogListType
		return ret
	}
	return *o.ActivityLog
}

// GetActivityLogOk returns a tuple with the ActivityLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetActivityLogOk() (*ClaimActivityLogListType, bool) {
	if o == nil || IsNil(o.ActivityLog) {
		return nil, false
	}
	return o.ActivityLog, true
}

// HasActivityLog returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasActivityLog() bool {
	if o != nil && !IsNil(o.ActivityLog) {
		return true
	}

	return false
}

// SetActivityLog gets a reference to the given ClaimActivityLogListType and assigns it to the ActivityLog field.
func (o *MembershipClaimDetailsType) SetActivityLog(v ClaimActivityLogListType) {
	o.ActivityLog = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetApprovalStatus() ClaimApprovalStatusType {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret ClaimApprovalStatusType
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetApprovalStatusOk() (*ClaimApprovalStatusType, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given ClaimApprovalStatusType and assigns it to the ApprovalStatus field.
func (o *MembershipClaimDetailsType) SetApprovalStatus(v ClaimApprovalStatusType) {
	o.ApprovalStatus = &v
}

// GetCallerInformation returns the CallerInformation field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetCallerInformation() string {
	if o == nil || IsNil(o.CallerInformation) {
		var ret string
		return ret
	}
	return *o.CallerInformation
}

// GetCallerInformationOk returns a tuple with the CallerInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetCallerInformationOk() (*string, bool) {
	if o == nil || IsNil(o.CallerInformation) {
		return nil, false
	}
	return o.CallerInformation, true
}

// HasCallerInformation returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasCallerInformation() bool {
	if o != nil && !IsNil(o.CallerInformation) {
		return true
	}

	return false
}

// SetCallerInformation gets a reference to the given string and assigns it to the CallerInformation field.
func (o *MembershipClaimDetailsType) SetCallerInformation(v string) {
	o.CallerInformation = &v
}

// GetCallerName returns the CallerName field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetCallerName() string {
	if o == nil || IsNil(o.CallerName) {
		var ret string
		return ret
	}
	return *o.CallerName
}

// GetCallerNameOk returns a tuple with the CallerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetCallerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CallerName) {
		return nil, false
	}
	return o.CallerName, true
}

// HasCallerName returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasCallerName() bool {
	if o != nil && !IsNil(o.CallerName) {
		return true
	}

	return false
}

// SetCallerName gets a reference to the given string and assigns it to the CallerName field.
func (o *MembershipClaimDetailsType) SetCallerName(v string) {
	o.CallerName = &v
}

// GetClaimDate returns the ClaimDate field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetClaimDate() string {
	if o == nil || IsNil(o.ClaimDate) {
		var ret string
		return ret
	}
	return *o.ClaimDate
}

// GetClaimDateOk returns a tuple with the ClaimDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetClaimDateOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimDate) {
		return nil, false
	}
	return o.ClaimDate, true
}

// HasClaimDate returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasClaimDate() bool {
	if o != nil && !IsNil(o.ClaimDate) {
		return true
	}

	return false
}

// SetClaimDate gets a reference to the given string and assigns it to the ClaimDate field.
func (o *MembershipClaimDetailsType) SetClaimDate(v string) {
	o.ClaimDate = &v
}

// GetClaimNo returns the ClaimNo field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetClaimNo() UniqueIDType {
	if o == nil || IsNil(o.ClaimNo) {
		var ret UniqueIDType
		return ret
	}
	return *o.ClaimNo
}

// GetClaimNoOk returns a tuple with the ClaimNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetClaimNoOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ClaimNo) {
		return nil, false
	}
	return o.ClaimNo, true
}

// HasClaimNo returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasClaimNo() bool {
	if o != nil && !IsNil(o.ClaimNo) {
		return true
	}

	return false
}

// SetClaimNo gets a reference to the given UniqueIDType and assigns it to the ClaimNo field.
func (o *MembershipClaimDetailsType) SetClaimNo(v UniqueIDType) {
	o.ClaimNo = &v
}

// GetClaimPoints returns the ClaimPoints field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetClaimPoints() ClaimAdjustmentPointsType {
	if o == nil || IsNil(o.ClaimPoints) {
		var ret ClaimAdjustmentPointsType
		return ret
	}
	return *o.ClaimPoints
}

// GetClaimPointsOk returns a tuple with the ClaimPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetClaimPointsOk() (*ClaimAdjustmentPointsType, bool) {
	if o == nil || IsNil(o.ClaimPoints) {
		return nil, false
	}
	return o.ClaimPoints, true
}

// HasClaimPoints returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasClaimPoints() bool {
	if o != nil && !IsNil(o.ClaimPoints) {
		return true
	}

	return false
}

// SetClaimPoints gets a reference to the given ClaimAdjustmentPointsType and assigns it to the ClaimPoints field.
func (o *MembershipClaimDetailsType) SetClaimPoints(v ClaimAdjustmentPointsType) {
	o.ClaimPoints = &v
}

// GetClaimStatus returns the ClaimStatus field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetClaimStatus() string {
	if o == nil || IsNil(o.ClaimStatus) {
		var ret string
		return ret
	}
	return *o.ClaimStatus
}

// GetClaimStatusOk returns a tuple with the ClaimStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetClaimStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimStatus) {
		return nil, false
	}
	return o.ClaimStatus, true
}

// HasClaimStatus returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasClaimStatus() bool {
	if o != nil && !IsNil(o.ClaimStatus) {
		return true
	}

	return false
}

// SetClaimStatus gets a reference to the given string and assigns it to the ClaimStatus field.
func (o *MembershipClaimDetailsType) SetClaimStatus(v string) {
	o.ClaimStatus = &v
}

// GetClaimType returns the ClaimType field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetClaimType() string {
	if o == nil || IsNil(o.ClaimType) {
		var ret string
		return ret
	}
	return *o.ClaimType
}

// GetClaimTypeOk returns a tuple with the ClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetClaimTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimType) {
		return nil, false
	}
	return o.ClaimType, true
}

// HasClaimType returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasClaimType() bool {
	if o != nil && !IsNil(o.ClaimType) {
		return true
	}

	return false
}

// SetClaimType gets a reference to the given string and assigns it to the ClaimType field.
func (o *MembershipClaimDetailsType) SetClaimType(v string) {
	o.ClaimType = &v
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetCloseDate() string {
	if o == nil || IsNil(o.CloseDate) {
		var ret string
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CloseDate) {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasCloseDate() bool {
	if o != nil && !IsNil(o.CloseDate) {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given string and assigns it to the CloseDate field.
func (o *MembershipClaimDetailsType) SetCloseDate(v string) {
	o.CloseDate = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *MembershipClaimDetailsType) SetComments(v string) {
	o.Comments = &v
}

// GetMembership returns the Membership field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetMembership() ClaimMembershipType {
	if o == nil || IsNil(o.Membership) {
		var ret ClaimMembershipType
		return ret
	}
	return *o.Membership
}

// GetMembershipOk returns a tuple with the Membership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetMembershipOk() (*ClaimMembershipType, bool) {
	if o == nil || IsNil(o.Membership) {
		return nil, false
	}
	return o.Membership, true
}

// HasMembership returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasMembership() bool {
	if o != nil && !IsNil(o.Membership) {
		return true
	}

	return false
}

// SetMembership gets a reference to the given ClaimMembershipType and assigns it to the Membership field.
func (o *MembershipClaimDetailsType) SetMembership(v ClaimMembershipType) {
	o.Membership = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *MembershipClaimDetailsType) SetOrigin(v string) {
	o.Origin = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *MembershipClaimDetailsType) SetOwner(v string) {
	o.Owner = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *MembershipClaimDetailsType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetRecordType() ClaimRecordType {
	if o == nil || IsNil(o.RecordType) {
		var ret ClaimRecordType
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetRecordTypeOk() (*ClaimRecordType, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given ClaimRecordType and assigns it to the RecordType field.
func (o *MembershipClaimDetailsType) SetRecordType(v ClaimRecordType) {
	o.RecordType = &v
}

// GetReplyBy returns the ReplyBy field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetReplyBy() string {
	if o == nil || IsNil(o.ReplyBy) {
		var ret string
		return ret
	}
	return *o.ReplyBy
}

// GetReplyByOk returns a tuple with the ReplyBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetReplyByOk() (*string, bool) {
	if o == nil || IsNil(o.ReplyBy) {
		return nil, false
	}
	return o.ReplyBy, true
}

// HasReplyBy returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasReplyBy() bool {
	if o != nil && !IsNil(o.ReplyBy) {
		return true
	}

	return false
}

// SetReplyBy gets a reference to the given string and assigns it to the ReplyBy field.
func (o *MembershipClaimDetailsType) SetReplyBy(v string) {
	o.ReplyBy = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetReservation() ClaimReservationInfoType {
	if o == nil || IsNil(o.Reservation) {
		var ret ClaimReservationInfoType
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetReservationOk() (*ClaimReservationInfoType, bool) {
	if o == nil || IsNil(o.Reservation) {
		return nil, false
	}
	return o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasReservation() bool {
	if o != nil && !IsNil(o.Reservation) {
		return true
	}

	return false
}

// SetReservation gets a reference to the given ClaimReservationInfoType and assigns it to the Reservation field.
func (o *MembershipClaimDetailsType) SetReservation(v ClaimReservationInfoType) {
	o.Reservation = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetSource() ClaimSourceType {
	if o == nil || IsNil(o.Source) {
		var ret ClaimSourceType
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetSourceOk() (*ClaimSourceType, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ClaimSourceType and assigns it to the Source field.
func (o *MembershipClaimDetailsType) SetSource(v ClaimSourceType) {
	o.Source = &v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *MembershipClaimDetailsType) GetSubmitter() string {
	if o == nil || IsNil(o.Submitter) {
		var ret string
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipClaimDetailsType) GetSubmitterOk() (*string, bool) {
	if o == nil || IsNil(o.Submitter) {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *MembershipClaimDetailsType) HasSubmitter() bool {
	if o != nil && !IsNil(o.Submitter) {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given string and assigns it to the Submitter field.
func (o *MembershipClaimDetailsType) SetSubmitter(v string) {
	o.Submitter = &v
}

func (o MembershipClaimDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipClaimDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityLog) {
		toSerialize["activityLog"] = o.ActivityLog
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.CallerInformation) {
		toSerialize["callerInformation"] = o.CallerInformation
	}
	if !IsNil(o.CallerName) {
		toSerialize["callerName"] = o.CallerName
	}
	if !IsNil(o.ClaimDate) {
		toSerialize["claimDate"] = o.ClaimDate
	}
	if !IsNil(o.ClaimNo) {
		toSerialize["claimNo"] = o.ClaimNo
	}
	if !IsNil(o.ClaimPoints) {
		toSerialize["claimPoints"] = o.ClaimPoints
	}
	if !IsNil(o.ClaimStatus) {
		toSerialize["claimStatus"] = o.ClaimStatus
	}
	if !IsNil(o.ClaimType) {
		toSerialize["claimType"] = o.ClaimType
	}
	if !IsNil(o.CloseDate) {
		toSerialize["closeDate"] = o.CloseDate
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Membership) {
		toSerialize["membership"] = o.Membership
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.RecordType) {
		toSerialize["recordType"] = o.RecordType
	}
	if !IsNil(o.ReplyBy) {
		toSerialize["replyBy"] = o.ReplyBy
	}
	if !IsNil(o.Reservation) {
		toSerialize["reservation"] = o.Reservation
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Submitter) {
		toSerialize["submitter"] = o.Submitter
	}
	return toSerialize, nil
}

type NullableMembershipClaimDetailsType struct {
	value *MembershipClaimDetailsType
	isSet bool
}

func (v NullableMembershipClaimDetailsType) Get() *MembershipClaimDetailsType {
	return v.value
}

func (v *NullableMembershipClaimDetailsType) Set(val *MembershipClaimDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipClaimDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipClaimDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipClaimDetailsType(val *MembershipClaimDetailsType) *NullableMembershipClaimDetailsType {
	return &NullableMembershipClaimDetailsType{value: val, isSet: true}
}

func (v NullableMembershipClaimDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipClaimDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


