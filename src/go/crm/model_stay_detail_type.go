/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StayDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayDetailType{}

// StayDetailType The Reservation class contains the current reservation being created or altered.
type StayDetailType struct {
	AccessRestriction *ResAccessRestrictionType `json:"accessRestriction,omitempty"`
	AdvanceCheckIn *AdvanceCheckInType `json:"advanceCheckIn,omitempty"`
	// Allotment Code for stay record.
	AllotmentCode *string `json:"allotmentCode,omitempty"`
	// Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.
	AllowMobileCheckout *bool `json:"allowMobileCheckout,omitempty"`
	// Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
	AllowMobileViewFolio *bool `json:"allowMobileViewFolio,omitempty"`
	AllowedActions *ReservationAllowedActionsType `json:"allowedActions,omitempty"`
	AttachedProfiles *ResAttachedProfileListType `json:"attachedProfiles,omitempty"`
	// Booked arrival date of the stay record.
	BookedArrivalDate *string `json:"bookedArrivalDate,omitempty"`
	// Booked departure date of the stay record.
	BookedDepartureDate *string `json:"bookedDepartureDate,omitempty"`
	// Indicate the category of room originally booked.
	BookedRoomType *string `json:"bookedRoomType,omitempty"`
	// Booking date of the stay record.
	BookingDate *string `json:"bookingDate,omitempty"`
	// Cancellation date of the stay record.
	CancellationDate *string `json:"cancellationDate,omitempty"`
	CancellationInfo *ReservationInfoTypeCancellationInfo `json:"cancellationInfo,omitempty"`
	// Number of cancelled room nights.
	CancelledRoomNights *int32 `json:"cancelledRoomNights,omitempty"`
	Cashiering *ResCashieringType `json:"cashiering,omitempty"`
	// Indicate channel for stay.
	ChannelCode *string `json:"channelCode,omitempty"`
	CommissionPayoutTo *CommissionPayoutToType `json:"commissionPayoutTo,omitempty"`
	// Indicates the profile stay record is complimentaray.
	Complimentaray *bool `json:"complimentaray,omitempty"`
	ComputedReservationStatus *PMSResStatusType `json:"computedReservationStatus,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	Deposit *ReservationDepositType `json:"deposit,omitempty"`
	// Color setting of the reservation.
	DisplayColor *string `json:"displayColor,omitempty"`
	// Exchange Rate.
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
	ExpectedServiceTime *string `json:"expectedServiceTime,omitempty"`
	// Currency code preferred by guest.
	GuestPreferredCurrency *string `json:"guestPreferredCurrency,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	// Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.
	HotelInterfaceStatusList []ReservationInterfaceStatusType `json:"hotelInterfaceStatusList,omitempty"`
	HotelName *string `json:"hotelName,omitempty"`
	Housekeeping *ResHousekeepingType `json:"housekeeping,omitempty"`
	// Number of keys created for the reservation.
	KeyCount *int32 `json:"keyCount,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Last Privacy Prompt Date
	LastPrivacyPromptDate *string `json:"lastPrivacyPromptDate,omitempty"`
	MobileNotifications *ResMobileNotificationsType `json:"mobileNotifications,omitempty"`
	// Number of no show room nights.
	NoShowRoomNights *int32 `json:"noShowRoomNights,omitempty"`
	// Returns true when reservation has an open folio.
	OpenFolio *bool `json:"openFolio,omitempty"`
	// Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.
	OptedForCommunication *bool `json:"optedForCommunication,omitempty"`
	// Payment Method.
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Defines if the reservation is pre-registered or not.
	PreRegistered *bool `json:"preRegistered,omitempty"`
	// Indicates whether the guest was the primary sharer or not.
	PrimarySharer *bool `json:"primarySharer,omitempty"`
	// Promotion code associated with the stay.
	PromotionCode *string `json:"promotionCode,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
	Queue *ReservationQueueInformationType `json:"queue,omitempty"`
	ReservationCommunication *ResCommunicationType `json:"reservationCommunication,omitempty"`
	ReservationFolioWindows *ReservationFolioWindowsType `json:"reservationFolioWindows,omitempty"`
	ReservationGuest *ResGuestInfoType `json:"reservationGuest,omitempty"`
	ReservationIdList *ReservationIdList `json:"reservationIdList,omitempty"`
	ReservationIndicators *IndicatorsType `json:"reservationIndicators,omitempty"`
	ReservationPaymentMethod *ReservationPaymentMethodType `json:"reservationPaymentMethod,omitempty"`
	// Indicates the profile stay record reservation source code.
	ReservationSourceCode *string `json:"reservationSourceCode,omitempty"`
	// Indicates the profile stay record reservation source Type.
	ReservationSourceType *string `json:"reservationSourceType,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	RevenuesAndBalances *ResRevenueBalanceType `json:"revenuesAndBalances,omitempty"`
	RoomStatus *HousekeepingRoomStatusType `json:"roomStatus,omitempty"`
	RoomStay *StayInfoType `json:"roomStay,omitempty"`
	// Boolean True if this reservation is reserving rooms. False if it is only reserving services.
	RoomStayReservation *bool `json:"roomStayReservation,omitempty"`
	SearchMatches *SearchMatchesType `json:"searchMatches,omitempty"`
	// Indicates the share Number for Stay if reservation was a share.
	ShareNumber *string `json:"shareNumber,omitempty"`
	SharedGuests *ResSharedGuestListType `json:"sharedGuests,omitempty"`
	SourceOfSale *SourceOfSaleType `json:"sourceOfSale,omitempty"`
	// Set of reservation preferences which belongs to the Specials group.
	Specials *string `json:"specials,omitempty"`
	StayRecordId *UniqueIDType `json:"stayRecordId,omitempty"`
	TaxType *TaxTypeType `json:"taxType,omitempty"`
	// Travel Agent reference number for stay record.
	TravelAgentReferenceId *string `json:"travelAgentReferenceId,omitempty"`
	TurndownInfo *ReservationTurndownInfoType `json:"turndownInfo,omitempty"`
	Waitlist *WaitlistResType `json:"waitlist,omitempty"`
	// When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.
	WalkInIndicator *bool `json:"walkInIndicator,omitempty"`
	// This flag will determine wheather the reservation is eligible for Welcome Offer or not.
	WelcomeOffer *bool `json:"welcomeOffer,omitempty"`
}

// NewStayDetailType instantiates a new StayDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayDetailType() *StayDetailType {
	this := StayDetailType{}
	return &this
}

// NewStayDetailTypeWithDefaults instantiates a new StayDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayDetailTypeWithDefaults() *StayDetailType {
	this := StayDetailType{}
	return &this
}

// GetAccessRestriction returns the AccessRestriction field value if set, zero value otherwise.
func (o *StayDetailType) GetAccessRestriction() ResAccessRestrictionType {
	if o == nil || IsNil(o.AccessRestriction) {
		var ret ResAccessRestrictionType
		return ret
	}
	return *o.AccessRestriction
}

// GetAccessRestrictionOk returns a tuple with the AccessRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAccessRestrictionOk() (*ResAccessRestrictionType, bool) {
	if o == nil || IsNil(o.AccessRestriction) {
		return nil, false
	}
	return o.AccessRestriction, true
}

// HasAccessRestriction returns a boolean if a field has been set.
func (o *StayDetailType) HasAccessRestriction() bool {
	if o != nil && !IsNil(o.AccessRestriction) {
		return true
	}

	return false
}

// SetAccessRestriction gets a reference to the given ResAccessRestrictionType and assigns it to the AccessRestriction field.
func (o *StayDetailType) SetAccessRestriction(v ResAccessRestrictionType) {
	o.AccessRestriction = &v
}

// GetAdvanceCheckIn returns the AdvanceCheckIn field value if set, zero value otherwise.
func (o *StayDetailType) GetAdvanceCheckIn() AdvanceCheckInType {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		var ret AdvanceCheckInType
		return ret
	}
	return *o.AdvanceCheckIn
}

// GetAdvanceCheckInOk returns a tuple with the AdvanceCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAdvanceCheckInOk() (*AdvanceCheckInType, bool) {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		return nil, false
	}
	return o.AdvanceCheckIn, true
}

// HasAdvanceCheckIn returns a boolean if a field has been set.
func (o *StayDetailType) HasAdvanceCheckIn() bool {
	if o != nil && !IsNil(o.AdvanceCheckIn) {
		return true
	}

	return false
}

// SetAdvanceCheckIn gets a reference to the given AdvanceCheckInType and assigns it to the AdvanceCheckIn field.
func (o *StayDetailType) SetAdvanceCheckIn(v AdvanceCheckInType) {
	o.AdvanceCheckIn = &v
}

// GetAllotmentCode returns the AllotmentCode field value if set, zero value otherwise.
func (o *StayDetailType) GetAllotmentCode() string {
	if o == nil || IsNil(o.AllotmentCode) {
		var ret string
		return ret
	}
	return *o.AllotmentCode
}

// GetAllotmentCodeOk returns a tuple with the AllotmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAllotmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AllotmentCode) {
		return nil, false
	}
	return o.AllotmentCode, true
}

// HasAllotmentCode returns a boolean if a field has been set.
func (o *StayDetailType) HasAllotmentCode() bool {
	if o != nil && !IsNil(o.AllotmentCode) {
		return true
	}

	return false
}

// SetAllotmentCode gets a reference to the given string and assigns it to the AllotmentCode field.
func (o *StayDetailType) SetAllotmentCode(v string) {
	o.AllotmentCode = &v
}

// GetAllowMobileCheckout returns the AllowMobileCheckout field value if set, zero value otherwise.
func (o *StayDetailType) GetAllowMobileCheckout() bool {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		var ret bool
		return ret
	}
	return *o.AllowMobileCheckout
}

// GetAllowMobileCheckoutOk returns a tuple with the AllowMobileCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAllowMobileCheckoutOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		return nil, false
	}
	return o.AllowMobileCheckout, true
}

// HasAllowMobileCheckout returns a boolean if a field has been set.
func (o *StayDetailType) HasAllowMobileCheckout() bool {
	if o != nil && !IsNil(o.AllowMobileCheckout) {
		return true
	}

	return false
}

// SetAllowMobileCheckout gets a reference to the given bool and assigns it to the AllowMobileCheckout field.
func (o *StayDetailType) SetAllowMobileCheckout(v bool) {
	o.AllowMobileCheckout = &v
}

// GetAllowMobileViewFolio returns the AllowMobileViewFolio field value if set, zero value otherwise.
func (o *StayDetailType) GetAllowMobileViewFolio() bool {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		var ret bool
		return ret
	}
	return *o.AllowMobileViewFolio
}

// GetAllowMobileViewFolioOk returns a tuple with the AllowMobileViewFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAllowMobileViewFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		return nil, false
	}
	return o.AllowMobileViewFolio, true
}

// HasAllowMobileViewFolio returns a boolean if a field has been set.
func (o *StayDetailType) HasAllowMobileViewFolio() bool {
	if o != nil && !IsNil(o.AllowMobileViewFolio) {
		return true
	}

	return false
}

// SetAllowMobileViewFolio gets a reference to the given bool and assigns it to the AllowMobileViewFolio field.
func (o *StayDetailType) SetAllowMobileViewFolio(v bool) {
	o.AllowMobileViewFolio = &v
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *StayDetailType) GetAllowedActions() ReservationAllowedActionsType {
	if o == nil || IsNil(o.AllowedActions) {
		var ret ReservationAllowedActionsType
		return ret
	}
	return *o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAllowedActionsOk() (*ReservationAllowedActionsType, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *StayDetailType) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given ReservationAllowedActionsType and assigns it to the AllowedActions field.
func (o *StayDetailType) SetAllowedActions(v ReservationAllowedActionsType) {
	o.AllowedActions = &v
}

// GetAttachedProfiles returns the AttachedProfiles field value if set, zero value otherwise.
func (o *StayDetailType) GetAttachedProfiles() ResAttachedProfileListType {
	if o == nil || IsNil(o.AttachedProfiles) {
		var ret ResAttachedProfileListType
		return ret
	}
	return *o.AttachedProfiles
}

// GetAttachedProfilesOk returns a tuple with the AttachedProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetAttachedProfilesOk() (*ResAttachedProfileListType, bool) {
	if o == nil || IsNil(o.AttachedProfiles) {
		return nil, false
	}
	return o.AttachedProfiles, true
}

// HasAttachedProfiles returns a boolean if a field has been set.
func (o *StayDetailType) HasAttachedProfiles() bool {
	if o != nil && !IsNil(o.AttachedProfiles) {
		return true
	}

	return false
}

// SetAttachedProfiles gets a reference to the given ResAttachedProfileListType and assigns it to the AttachedProfiles field.
func (o *StayDetailType) SetAttachedProfiles(v ResAttachedProfileListType) {
	o.AttachedProfiles = &v
}

// GetBookedArrivalDate returns the BookedArrivalDate field value if set, zero value otherwise.
func (o *StayDetailType) GetBookedArrivalDate() string {
	if o == nil || IsNil(o.BookedArrivalDate) {
		var ret string
		return ret
	}
	return *o.BookedArrivalDate
}

// GetBookedArrivalDateOk returns a tuple with the BookedArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetBookedArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.BookedArrivalDate) {
		return nil, false
	}
	return o.BookedArrivalDate, true
}

// HasBookedArrivalDate returns a boolean if a field has been set.
func (o *StayDetailType) HasBookedArrivalDate() bool {
	if o != nil && !IsNil(o.BookedArrivalDate) {
		return true
	}

	return false
}

// SetBookedArrivalDate gets a reference to the given string and assigns it to the BookedArrivalDate field.
func (o *StayDetailType) SetBookedArrivalDate(v string) {
	o.BookedArrivalDate = &v
}

// GetBookedDepartureDate returns the BookedDepartureDate field value if set, zero value otherwise.
func (o *StayDetailType) GetBookedDepartureDate() string {
	if o == nil || IsNil(o.BookedDepartureDate) {
		var ret string
		return ret
	}
	return *o.BookedDepartureDate
}

// GetBookedDepartureDateOk returns a tuple with the BookedDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetBookedDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.BookedDepartureDate) {
		return nil, false
	}
	return o.BookedDepartureDate, true
}

// HasBookedDepartureDate returns a boolean if a field has been set.
func (o *StayDetailType) HasBookedDepartureDate() bool {
	if o != nil && !IsNil(o.BookedDepartureDate) {
		return true
	}

	return false
}

// SetBookedDepartureDate gets a reference to the given string and assigns it to the BookedDepartureDate field.
func (o *StayDetailType) SetBookedDepartureDate(v string) {
	o.BookedDepartureDate = &v
}

// GetBookedRoomType returns the BookedRoomType field value if set, zero value otherwise.
func (o *StayDetailType) GetBookedRoomType() string {
	if o == nil || IsNil(o.BookedRoomType) {
		var ret string
		return ret
	}
	return *o.BookedRoomType
}

// GetBookedRoomTypeOk returns a tuple with the BookedRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetBookedRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BookedRoomType) {
		return nil, false
	}
	return o.BookedRoomType, true
}

// HasBookedRoomType returns a boolean if a field has been set.
func (o *StayDetailType) HasBookedRoomType() bool {
	if o != nil && !IsNil(o.BookedRoomType) {
		return true
	}

	return false
}

// SetBookedRoomType gets a reference to the given string and assigns it to the BookedRoomType field.
func (o *StayDetailType) SetBookedRoomType(v string) {
	o.BookedRoomType = &v
}

// GetBookingDate returns the BookingDate field value if set, zero value otherwise.
func (o *StayDetailType) GetBookingDate() string {
	if o == nil || IsNil(o.BookingDate) {
		var ret string
		return ret
	}
	return *o.BookingDate
}

// GetBookingDateOk returns a tuple with the BookingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetBookingDateOk() (*string, bool) {
	if o == nil || IsNil(o.BookingDate) {
		return nil, false
	}
	return o.BookingDate, true
}

// HasBookingDate returns a boolean if a field has been set.
func (o *StayDetailType) HasBookingDate() bool {
	if o != nil && !IsNil(o.BookingDate) {
		return true
	}

	return false
}

// SetBookingDate gets a reference to the given string and assigns it to the BookingDate field.
func (o *StayDetailType) SetBookingDate(v string) {
	o.BookingDate = &v
}

// GetCancellationDate returns the CancellationDate field value if set, zero value otherwise.
func (o *StayDetailType) GetCancellationDate() string {
	if o == nil || IsNil(o.CancellationDate) {
		var ret string
		return ret
	}
	return *o.CancellationDate
}

// GetCancellationDateOk returns a tuple with the CancellationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCancellationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationDate) {
		return nil, false
	}
	return o.CancellationDate, true
}

// HasCancellationDate returns a boolean if a field has been set.
func (o *StayDetailType) HasCancellationDate() bool {
	if o != nil && !IsNil(o.CancellationDate) {
		return true
	}

	return false
}

// SetCancellationDate gets a reference to the given string and assigns it to the CancellationDate field.
func (o *StayDetailType) SetCancellationDate(v string) {
	o.CancellationDate = &v
}

// GetCancellationInfo returns the CancellationInfo field value if set, zero value otherwise.
func (o *StayDetailType) GetCancellationInfo() ReservationInfoTypeCancellationInfo {
	if o == nil || IsNil(o.CancellationInfo) {
		var ret ReservationInfoTypeCancellationInfo
		return ret
	}
	return *o.CancellationInfo
}

// GetCancellationInfoOk returns a tuple with the CancellationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCancellationInfoOk() (*ReservationInfoTypeCancellationInfo, bool) {
	if o == nil || IsNil(o.CancellationInfo) {
		return nil, false
	}
	return o.CancellationInfo, true
}

// HasCancellationInfo returns a boolean if a field has been set.
func (o *StayDetailType) HasCancellationInfo() bool {
	if o != nil && !IsNil(o.CancellationInfo) {
		return true
	}

	return false
}

// SetCancellationInfo gets a reference to the given ReservationInfoTypeCancellationInfo and assigns it to the CancellationInfo field.
func (o *StayDetailType) SetCancellationInfo(v ReservationInfoTypeCancellationInfo) {
	o.CancellationInfo = &v
}

// GetCancelledRoomNights returns the CancelledRoomNights field value if set, zero value otherwise.
func (o *StayDetailType) GetCancelledRoomNights() int32 {
	if o == nil || IsNil(o.CancelledRoomNights) {
		var ret int32
		return ret
	}
	return *o.CancelledRoomNights
}

// GetCancelledRoomNightsOk returns a tuple with the CancelledRoomNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCancelledRoomNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelledRoomNights) {
		return nil, false
	}
	return o.CancelledRoomNights, true
}

// HasCancelledRoomNights returns a boolean if a field has been set.
func (o *StayDetailType) HasCancelledRoomNights() bool {
	if o != nil && !IsNil(o.CancelledRoomNights) {
		return true
	}

	return false
}

// SetCancelledRoomNights gets a reference to the given int32 and assigns it to the CancelledRoomNights field.
func (o *StayDetailType) SetCancelledRoomNights(v int32) {
	o.CancelledRoomNights = &v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *StayDetailType) GetCashiering() ResCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ResCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCashieringOk() (*ResCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *StayDetailType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ResCashieringType and assigns it to the Cashiering field.
func (o *StayDetailType) SetCashiering(v ResCashieringType) {
	o.Cashiering = &v
}

// GetChannelCode returns the ChannelCode field value if set, zero value otherwise.
func (o *StayDetailType) GetChannelCode() string {
	if o == nil || IsNil(o.ChannelCode) {
		var ret string
		return ret
	}
	return *o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelCode) {
		return nil, false
	}
	return o.ChannelCode, true
}

// HasChannelCode returns a boolean if a field has been set.
func (o *StayDetailType) HasChannelCode() bool {
	if o != nil && !IsNil(o.ChannelCode) {
		return true
	}

	return false
}

// SetChannelCode gets a reference to the given string and assigns it to the ChannelCode field.
func (o *StayDetailType) SetChannelCode(v string) {
	o.ChannelCode = &v
}

// GetCommissionPayoutTo returns the CommissionPayoutTo field value if set, zero value otherwise.
func (o *StayDetailType) GetCommissionPayoutTo() CommissionPayoutToType {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		var ret CommissionPayoutToType
		return ret
	}
	return *o.CommissionPayoutTo
}

// GetCommissionPayoutToOk returns a tuple with the CommissionPayoutTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCommissionPayoutToOk() (*CommissionPayoutToType, bool) {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		return nil, false
	}
	return o.CommissionPayoutTo, true
}

// HasCommissionPayoutTo returns a boolean if a field has been set.
func (o *StayDetailType) HasCommissionPayoutTo() bool {
	if o != nil && !IsNil(o.CommissionPayoutTo) {
		return true
	}

	return false
}

// SetCommissionPayoutTo gets a reference to the given CommissionPayoutToType and assigns it to the CommissionPayoutTo field.
func (o *StayDetailType) SetCommissionPayoutTo(v CommissionPayoutToType) {
	o.CommissionPayoutTo = &v
}

// GetComplimentaray returns the Complimentaray field value if set, zero value otherwise.
func (o *StayDetailType) GetComplimentaray() bool {
	if o == nil || IsNil(o.Complimentaray) {
		var ret bool
		return ret
	}
	return *o.Complimentaray
}

// GetComplimentarayOk returns a tuple with the Complimentaray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetComplimentarayOk() (*bool, bool) {
	if o == nil || IsNil(o.Complimentaray) {
		return nil, false
	}
	return o.Complimentaray, true
}

// HasComplimentaray returns a boolean if a field has been set.
func (o *StayDetailType) HasComplimentaray() bool {
	if o != nil && !IsNil(o.Complimentaray) {
		return true
	}

	return false
}

// SetComplimentaray gets a reference to the given bool and assigns it to the Complimentaray field.
func (o *StayDetailType) SetComplimentaray(v bool) {
	o.Complimentaray = &v
}

// GetComputedReservationStatus returns the ComputedReservationStatus field value if set, zero value otherwise.
func (o *StayDetailType) GetComputedReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ComputedReservationStatus
}

// GetComputedReservationStatusOk returns a tuple with the ComputedReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetComputedReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		return nil, false
	}
	return o.ComputedReservationStatus, true
}

// HasComputedReservationStatus returns a boolean if a field has been set.
func (o *StayDetailType) HasComputedReservationStatus() bool {
	if o != nil && !IsNil(o.ComputedReservationStatus) {
		return true
	}

	return false
}

// SetComputedReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ComputedReservationStatus field.
func (o *StayDetailType) SetComputedReservationStatus(v PMSResStatusType) {
	o.ComputedReservationStatus = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *StayDetailType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *StayDetailType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *StayDetailType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *StayDetailType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *StayDetailType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *StayDetailType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *StayDetailType) GetDeposit() ReservationDepositType {
	if o == nil || IsNil(o.Deposit) {
		var ret ReservationDepositType
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetDepositOk() (*ReservationDepositType, bool) {
	if o == nil || IsNil(o.Deposit) {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *StayDetailType) HasDeposit() bool {
	if o != nil && !IsNil(o.Deposit) {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given ReservationDepositType and assigns it to the Deposit field.
func (o *StayDetailType) SetDeposit(v ReservationDepositType) {
	o.Deposit = &v
}

// GetDisplayColor returns the DisplayColor field value if set, zero value otherwise.
func (o *StayDetailType) GetDisplayColor() string {
	if o == nil || IsNil(o.DisplayColor) {
		var ret string
		return ret
	}
	return *o.DisplayColor
}

// GetDisplayColorOk returns a tuple with the DisplayColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetDisplayColorOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayColor) {
		return nil, false
	}
	return o.DisplayColor, true
}

// HasDisplayColor returns a boolean if a field has been set.
func (o *StayDetailType) HasDisplayColor() bool {
	if o != nil && !IsNil(o.DisplayColor) {
		return true
	}

	return false
}

// SetDisplayColor gets a reference to the given string and assigns it to the DisplayColor field.
func (o *StayDetailType) SetDisplayColor(v string) {
	o.DisplayColor = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *StayDetailType) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *StayDetailType) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *StayDetailType) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetExpectedServiceTime returns the ExpectedServiceTime field value if set, zero value otherwise.
func (o *StayDetailType) GetExpectedServiceTime() string {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		var ret string
		return ret
	}
	return *o.ExpectedServiceTime
}

// GetExpectedServiceTimeOk returns a tuple with the ExpectedServiceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetExpectedServiceTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		return nil, false
	}
	return o.ExpectedServiceTime, true
}

// HasExpectedServiceTime returns a boolean if a field has been set.
func (o *StayDetailType) HasExpectedServiceTime() bool {
	if o != nil && !IsNil(o.ExpectedServiceTime) {
		return true
	}

	return false
}

// SetExpectedServiceTime gets a reference to the given string and assigns it to the ExpectedServiceTime field.
func (o *StayDetailType) SetExpectedServiceTime(v string) {
	o.ExpectedServiceTime = &v
}

// GetGuestPreferredCurrency returns the GuestPreferredCurrency field value if set, zero value otherwise.
func (o *StayDetailType) GetGuestPreferredCurrency() string {
	if o == nil || IsNil(o.GuestPreferredCurrency) {
		var ret string
		return ret
	}
	return *o.GuestPreferredCurrency
}

// GetGuestPreferredCurrencyOk returns a tuple with the GuestPreferredCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetGuestPreferredCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.GuestPreferredCurrency) {
		return nil, false
	}
	return o.GuestPreferredCurrency, true
}

// HasGuestPreferredCurrency returns a boolean if a field has been set.
func (o *StayDetailType) HasGuestPreferredCurrency() bool {
	if o != nil && !IsNil(o.GuestPreferredCurrency) {
		return true
	}

	return false
}

// SetGuestPreferredCurrency gets a reference to the given string and assigns it to the GuestPreferredCurrency field.
func (o *StayDetailType) SetGuestPreferredCurrency(v string) {
	o.GuestPreferredCurrency = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StayDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StayDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StayDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetHotelInterfaceStatusList returns the HotelInterfaceStatusList field value if set, zero value otherwise.
func (o *StayDetailType) GetHotelInterfaceStatusList() []ReservationInterfaceStatusType {
	if o == nil || IsNil(o.HotelInterfaceStatusList) {
		var ret []ReservationInterfaceStatusType
		return ret
	}
	return o.HotelInterfaceStatusList
}

// GetHotelInterfaceStatusListOk returns a tuple with the HotelInterfaceStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetHotelInterfaceStatusListOk() ([]ReservationInterfaceStatusType, bool) {
	if o == nil || IsNil(o.HotelInterfaceStatusList) {
		return nil, false
	}
	return o.HotelInterfaceStatusList, true
}

// HasHotelInterfaceStatusList returns a boolean if a field has been set.
func (o *StayDetailType) HasHotelInterfaceStatusList() bool {
	if o != nil && !IsNil(o.HotelInterfaceStatusList) {
		return true
	}

	return false
}

// SetHotelInterfaceStatusList gets a reference to the given []ReservationInterfaceStatusType and assigns it to the HotelInterfaceStatusList field.
func (o *StayDetailType) SetHotelInterfaceStatusList(v []ReservationInterfaceStatusType) {
	o.HotelInterfaceStatusList = v
}

// GetHotelName returns the HotelName field value if set, zero value otherwise.
func (o *StayDetailType) GetHotelName() string {
	if o == nil || IsNil(o.HotelName) {
		var ret string
		return ret
	}
	return *o.HotelName
}

// GetHotelNameOk returns a tuple with the HotelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetHotelNameOk() (*string, bool) {
	if o == nil || IsNil(o.HotelName) {
		return nil, false
	}
	return o.HotelName, true
}

// HasHotelName returns a boolean if a field has been set.
func (o *StayDetailType) HasHotelName() bool {
	if o != nil && !IsNil(o.HotelName) {
		return true
	}

	return false
}

// SetHotelName gets a reference to the given string and assigns it to the HotelName field.
func (o *StayDetailType) SetHotelName(v string) {
	o.HotelName = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *StayDetailType) GetHousekeeping() ResHousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret ResHousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetHousekeepingOk() (*ResHousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *StayDetailType) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given ResHousekeepingType and assigns it to the Housekeeping field.
func (o *StayDetailType) SetHousekeeping(v ResHousekeepingType) {
	o.Housekeeping = &v
}

// GetKeyCount returns the KeyCount field value if set, zero value otherwise.
func (o *StayDetailType) GetKeyCount() int32 {
	if o == nil || IsNil(o.KeyCount) {
		var ret int32
		return ret
	}
	return *o.KeyCount
}

// GetKeyCountOk returns a tuple with the KeyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetKeyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.KeyCount) {
		return nil, false
	}
	return o.KeyCount, true
}

// HasKeyCount returns a boolean if a field has been set.
func (o *StayDetailType) HasKeyCount() bool {
	if o != nil && !IsNil(o.KeyCount) {
		return true
	}

	return false
}

// SetKeyCount gets a reference to the given int32 and assigns it to the KeyCount field.
func (o *StayDetailType) SetKeyCount(v int32) {
	o.KeyCount = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *StayDetailType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *StayDetailType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *StayDetailType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *StayDetailType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *StayDetailType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *StayDetailType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastPrivacyPromptDate returns the LastPrivacyPromptDate field value if set, zero value otherwise.
func (o *StayDetailType) GetLastPrivacyPromptDate() string {
	if o == nil || IsNil(o.LastPrivacyPromptDate) {
		var ret string
		return ret
	}
	return *o.LastPrivacyPromptDate
}

// GetLastPrivacyPromptDateOk returns a tuple with the LastPrivacyPromptDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetLastPrivacyPromptDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastPrivacyPromptDate) {
		return nil, false
	}
	return o.LastPrivacyPromptDate, true
}

// HasLastPrivacyPromptDate returns a boolean if a field has been set.
func (o *StayDetailType) HasLastPrivacyPromptDate() bool {
	if o != nil && !IsNil(o.LastPrivacyPromptDate) {
		return true
	}

	return false
}

// SetLastPrivacyPromptDate gets a reference to the given string and assigns it to the LastPrivacyPromptDate field.
func (o *StayDetailType) SetLastPrivacyPromptDate(v string) {
	o.LastPrivacyPromptDate = &v
}

// GetMobileNotifications returns the MobileNotifications field value if set, zero value otherwise.
func (o *StayDetailType) GetMobileNotifications() ResMobileNotificationsType {
	if o == nil || IsNil(o.MobileNotifications) {
		var ret ResMobileNotificationsType
		return ret
	}
	return *o.MobileNotifications
}

// GetMobileNotificationsOk returns a tuple with the MobileNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetMobileNotificationsOk() (*ResMobileNotificationsType, bool) {
	if o == nil || IsNil(o.MobileNotifications) {
		return nil, false
	}
	return o.MobileNotifications, true
}

// HasMobileNotifications returns a boolean if a field has been set.
func (o *StayDetailType) HasMobileNotifications() bool {
	if o != nil && !IsNil(o.MobileNotifications) {
		return true
	}

	return false
}

// SetMobileNotifications gets a reference to the given ResMobileNotificationsType and assigns it to the MobileNotifications field.
func (o *StayDetailType) SetMobileNotifications(v ResMobileNotificationsType) {
	o.MobileNotifications = &v
}

// GetNoShowRoomNights returns the NoShowRoomNights field value if set, zero value otherwise.
func (o *StayDetailType) GetNoShowRoomNights() int32 {
	if o == nil || IsNil(o.NoShowRoomNights) {
		var ret int32
		return ret
	}
	return *o.NoShowRoomNights
}

// GetNoShowRoomNightsOk returns a tuple with the NoShowRoomNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetNoShowRoomNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoShowRoomNights) {
		return nil, false
	}
	return o.NoShowRoomNights, true
}

// HasNoShowRoomNights returns a boolean if a field has been set.
func (o *StayDetailType) HasNoShowRoomNights() bool {
	if o != nil && !IsNil(o.NoShowRoomNights) {
		return true
	}

	return false
}

// SetNoShowRoomNights gets a reference to the given int32 and assigns it to the NoShowRoomNights field.
func (o *StayDetailType) SetNoShowRoomNights(v int32) {
	o.NoShowRoomNights = &v
}

// GetOpenFolio returns the OpenFolio field value if set, zero value otherwise.
func (o *StayDetailType) GetOpenFolio() bool {
	if o == nil || IsNil(o.OpenFolio) {
		var ret bool
		return ret
	}
	return *o.OpenFolio
}

// GetOpenFolioOk returns a tuple with the OpenFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetOpenFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenFolio) {
		return nil, false
	}
	return o.OpenFolio, true
}

// HasOpenFolio returns a boolean if a field has been set.
func (o *StayDetailType) HasOpenFolio() bool {
	if o != nil && !IsNil(o.OpenFolio) {
		return true
	}

	return false
}

// SetOpenFolio gets a reference to the given bool and assigns it to the OpenFolio field.
func (o *StayDetailType) SetOpenFolio(v bool) {
	o.OpenFolio = &v
}

// GetOptedForCommunication returns the OptedForCommunication field value if set, zero value otherwise.
func (o *StayDetailType) GetOptedForCommunication() bool {
	if o == nil || IsNil(o.OptedForCommunication) {
		var ret bool
		return ret
	}
	return *o.OptedForCommunication
}

// GetOptedForCommunicationOk returns a tuple with the OptedForCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetOptedForCommunicationOk() (*bool, bool) {
	if o == nil || IsNil(o.OptedForCommunication) {
		return nil, false
	}
	return o.OptedForCommunication, true
}

// HasOptedForCommunication returns a boolean if a field has been set.
func (o *StayDetailType) HasOptedForCommunication() bool {
	if o != nil && !IsNil(o.OptedForCommunication) {
		return true
	}

	return false
}

// SetOptedForCommunication gets a reference to the given bool and assigns it to the OptedForCommunication field.
func (o *StayDetailType) SetOptedForCommunication(v bool) {
	o.OptedForCommunication = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *StayDetailType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *StayDetailType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *StayDetailType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPreRegistered returns the PreRegistered field value if set, zero value otherwise.
func (o *StayDetailType) GetPreRegistered() bool {
	if o == nil || IsNil(o.PreRegistered) {
		var ret bool
		return ret
	}
	return *o.PreRegistered
}

// GetPreRegisteredOk returns a tuple with the PreRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetPreRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.PreRegistered) {
		return nil, false
	}
	return o.PreRegistered, true
}

// HasPreRegistered returns a boolean if a field has been set.
func (o *StayDetailType) HasPreRegistered() bool {
	if o != nil && !IsNil(o.PreRegistered) {
		return true
	}

	return false
}

// SetPreRegistered gets a reference to the given bool and assigns it to the PreRegistered field.
func (o *StayDetailType) SetPreRegistered(v bool) {
	o.PreRegistered = &v
}

// GetPrimarySharer returns the PrimarySharer field value if set, zero value otherwise.
func (o *StayDetailType) GetPrimarySharer() bool {
	if o == nil || IsNil(o.PrimarySharer) {
		var ret bool
		return ret
	}
	return *o.PrimarySharer
}

// GetPrimarySharerOk returns a tuple with the PrimarySharer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetPrimarySharerOk() (*bool, bool) {
	if o == nil || IsNil(o.PrimarySharer) {
		return nil, false
	}
	return o.PrimarySharer, true
}

// HasPrimarySharer returns a boolean if a field has been set.
func (o *StayDetailType) HasPrimarySharer() bool {
	if o != nil && !IsNil(o.PrimarySharer) {
		return true
	}

	return false
}

// SetPrimarySharer gets a reference to the given bool and assigns it to the PrimarySharer field.
func (o *StayDetailType) SetPrimarySharer(v bool) {
	o.PrimarySharer = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *StayDetailType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *StayDetailType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *StayDetailType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *StayDetailType) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *StayDetailType) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *StayDetailType) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *StayDetailType) GetQueue() ReservationQueueInformationType {
	if o == nil || IsNil(o.Queue) {
		var ret ReservationQueueInformationType
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetQueueOk() (*ReservationQueueInformationType, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *StayDetailType) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given ReservationQueueInformationType and assigns it to the Queue field.
func (o *StayDetailType) SetQueue(v ReservationQueueInformationType) {
	o.Queue = &v
}

// GetReservationCommunication returns the ReservationCommunication field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationCommunication() ResCommunicationType {
	if o == nil || IsNil(o.ReservationCommunication) {
		var ret ResCommunicationType
		return ret
	}
	return *o.ReservationCommunication
}

// GetReservationCommunicationOk returns a tuple with the ReservationCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationCommunicationOk() (*ResCommunicationType, bool) {
	if o == nil || IsNil(o.ReservationCommunication) {
		return nil, false
	}
	return o.ReservationCommunication, true
}

// HasReservationCommunication returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationCommunication() bool {
	if o != nil && !IsNil(o.ReservationCommunication) {
		return true
	}

	return false
}

// SetReservationCommunication gets a reference to the given ResCommunicationType and assigns it to the ReservationCommunication field.
func (o *StayDetailType) SetReservationCommunication(v ResCommunicationType) {
	o.ReservationCommunication = &v
}

// GetReservationFolioWindows returns the ReservationFolioWindows field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationFolioWindows() ReservationFolioWindowsType {
	if o == nil || IsNil(o.ReservationFolioWindows) {
		var ret ReservationFolioWindowsType
		return ret
	}
	return *o.ReservationFolioWindows
}

// GetReservationFolioWindowsOk returns a tuple with the ReservationFolioWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationFolioWindowsOk() (*ReservationFolioWindowsType, bool) {
	if o == nil || IsNil(o.ReservationFolioWindows) {
		return nil, false
	}
	return o.ReservationFolioWindows, true
}

// HasReservationFolioWindows returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationFolioWindows() bool {
	if o != nil && !IsNil(o.ReservationFolioWindows) {
		return true
	}

	return false
}

// SetReservationFolioWindows gets a reference to the given ReservationFolioWindowsType and assigns it to the ReservationFolioWindows field.
func (o *StayDetailType) SetReservationFolioWindows(v ReservationFolioWindowsType) {
	o.ReservationFolioWindows = &v
}

// GetReservationGuest returns the ReservationGuest field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationGuest() ResGuestInfoType {
	if o == nil || IsNil(o.ReservationGuest) {
		var ret ResGuestInfoType
		return ret
	}
	return *o.ReservationGuest
}

// GetReservationGuestOk returns a tuple with the ReservationGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationGuestOk() (*ResGuestInfoType, bool) {
	if o == nil || IsNil(o.ReservationGuest) {
		return nil, false
	}
	return o.ReservationGuest, true
}

// HasReservationGuest returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationGuest() bool {
	if o != nil && !IsNil(o.ReservationGuest) {
		return true
	}

	return false
}

// SetReservationGuest gets a reference to the given ResGuestInfoType and assigns it to the ReservationGuest field.
func (o *StayDetailType) SetReservationGuest(v ResGuestInfoType) {
	o.ReservationGuest = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationIdList() ReservationIdList {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret ReservationIdList
		return ret
	}
	return *o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationIdListOk() (*ReservationIdList, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given ReservationIdList and assigns it to the ReservationIdList field.
func (o *StayDetailType) SetReservationIdList(v ReservationIdList) {
	o.ReservationIdList = &v
}

// GetReservationIndicators returns the ReservationIndicators field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationIndicators() IndicatorsType {
	if o == nil || IsNil(o.ReservationIndicators) {
		var ret IndicatorsType
		return ret
	}
	return *o.ReservationIndicators
}

// GetReservationIndicatorsOk returns a tuple with the ReservationIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationIndicatorsOk() (*IndicatorsType, bool) {
	if o == nil || IsNil(o.ReservationIndicators) {
		return nil, false
	}
	return o.ReservationIndicators, true
}

// HasReservationIndicators returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationIndicators() bool {
	if o != nil && !IsNil(o.ReservationIndicators) {
		return true
	}

	return false
}

// SetReservationIndicators gets a reference to the given IndicatorsType and assigns it to the ReservationIndicators field.
func (o *StayDetailType) SetReservationIndicators(v IndicatorsType) {
	o.ReservationIndicators = &v
}

// GetReservationPaymentMethod returns the ReservationPaymentMethod field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationPaymentMethod() ReservationPaymentMethodType {
	if o == nil || IsNil(o.ReservationPaymentMethod) {
		var ret ReservationPaymentMethodType
		return ret
	}
	return *o.ReservationPaymentMethod
}

// GetReservationPaymentMethodOk returns a tuple with the ReservationPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationPaymentMethodOk() (*ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethod) {
		return nil, false
	}
	return o.ReservationPaymentMethod, true
}

// HasReservationPaymentMethod returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationPaymentMethod() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethod) {
		return true
	}

	return false
}

// SetReservationPaymentMethod gets a reference to the given ReservationPaymentMethodType and assigns it to the ReservationPaymentMethod field.
func (o *StayDetailType) SetReservationPaymentMethod(v ReservationPaymentMethodType) {
	o.ReservationPaymentMethod = &v
}

// GetReservationSourceCode returns the ReservationSourceCode field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationSourceCode() string {
	if o == nil || IsNil(o.ReservationSourceCode) {
		var ret string
		return ret
	}
	return *o.ReservationSourceCode
}

// GetReservationSourceCodeOk returns a tuple with the ReservationSourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationSourceCode) {
		return nil, false
	}
	return o.ReservationSourceCode, true
}

// HasReservationSourceCode returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationSourceCode() bool {
	if o != nil && !IsNil(o.ReservationSourceCode) {
		return true
	}

	return false
}

// SetReservationSourceCode gets a reference to the given string and assigns it to the ReservationSourceCode field.
func (o *StayDetailType) SetReservationSourceCode(v string) {
	o.ReservationSourceCode = &v
}

// GetReservationSourceType returns the ReservationSourceType field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationSourceType() string {
	if o == nil || IsNil(o.ReservationSourceType) {
		var ret string
		return ret
	}
	return *o.ReservationSourceType
}

// GetReservationSourceTypeOk returns a tuple with the ReservationSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationSourceType) {
		return nil, false
	}
	return o.ReservationSourceType, true
}

// HasReservationSourceType returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationSourceType() bool {
	if o != nil && !IsNil(o.ReservationSourceType) {
		return true
	}

	return false
}

// SetReservationSourceType gets a reference to the given string and assigns it to the ReservationSourceType field.
func (o *StayDetailType) SetReservationSourceType(v string) {
	o.ReservationSourceType = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *StayDetailType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *StayDetailType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *StayDetailType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetRevenuesAndBalances returns the RevenuesAndBalances field value if set, zero value otherwise.
func (o *StayDetailType) GetRevenuesAndBalances() ResRevenueBalanceType {
	if o == nil || IsNil(o.RevenuesAndBalances) {
		var ret ResRevenueBalanceType
		return ret
	}
	return *o.RevenuesAndBalances
}

// GetRevenuesAndBalancesOk returns a tuple with the RevenuesAndBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetRevenuesAndBalancesOk() (*ResRevenueBalanceType, bool) {
	if o == nil || IsNil(o.RevenuesAndBalances) {
		return nil, false
	}
	return o.RevenuesAndBalances, true
}

// HasRevenuesAndBalances returns a boolean if a field has been set.
func (o *StayDetailType) HasRevenuesAndBalances() bool {
	if o != nil && !IsNil(o.RevenuesAndBalances) {
		return true
	}

	return false
}

// SetRevenuesAndBalances gets a reference to the given ResRevenueBalanceType and assigns it to the RevenuesAndBalances field.
func (o *StayDetailType) SetRevenuesAndBalances(v ResRevenueBalanceType) {
	o.RevenuesAndBalances = &v
}

// GetRoomStatus returns the RoomStatus field value if set, zero value otherwise.
func (o *StayDetailType) GetRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.RoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.RoomStatus
}

// GetRoomStatusOk returns a tuple with the RoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.RoomStatus) {
		return nil, false
	}
	return o.RoomStatus, true
}

// HasRoomStatus returns a boolean if a field has been set.
func (o *StayDetailType) HasRoomStatus() bool {
	if o != nil && !IsNil(o.RoomStatus) {
		return true
	}

	return false
}

// SetRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the RoomStatus field.
func (o *StayDetailType) SetRoomStatus(v HousekeepingRoomStatusType) {
	o.RoomStatus = &v
}

// GetRoomStay returns the RoomStay field value if set, zero value otherwise.
func (o *StayDetailType) GetRoomStay() StayInfoType {
	if o == nil || IsNil(o.RoomStay) {
		var ret StayInfoType
		return ret
	}
	return *o.RoomStay
}

// GetRoomStayOk returns a tuple with the RoomStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetRoomStayOk() (*StayInfoType, bool) {
	if o == nil || IsNil(o.RoomStay) {
		return nil, false
	}
	return o.RoomStay, true
}

// HasRoomStay returns a boolean if a field has been set.
func (o *StayDetailType) HasRoomStay() bool {
	if o != nil && !IsNil(o.RoomStay) {
		return true
	}

	return false
}

// SetRoomStay gets a reference to the given StayInfoType and assigns it to the RoomStay field.
func (o *StayDetailType) SetRoomStay(v StayInfoType) {
	o.RoomStay = &v
}

// GetRoomStayReservation returns the RoomStayReservation field value if set, zero value otherwise.
func (o *StayDetailType) GetRoomStayReservation() bool {
	if o == nil || IsNil(o.RoomStayReservation) {
		var ret bool
		return ret
	}
	return *o.RoomStayReservation
}

// GetRoomStayReservationOk returns a tuple with the RoomStayReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetRoomStayReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomStayReservation) {
		return nil, false
	}
	return o.RoomStayReservation, true
}

// HasRoomStayReservation returns a boolean if a field has been set.
func (o *StayDetailType) HasRoomStayReservation() bool {
	if o != nil && !IsNil(o.RoomStayReservation) {
		return true
	}

	return false
}

// SetRoomStayReservation gets a reference to the given bool and assigns it to the RoomStayReservation field.
func (o *StayDetailType) SetRoomStayReservation(v bool) {
	o.RoomStayReservation = &v
}

// GetSearchMatches returns the SearchMatches field value if set, zero value otherwise.
func (o *StayDetailType) GetSearchMatches() SearchMatchesType {
	if o == nil || IsNil(o.SearchMatches) {
		var ret SearchMatchesType
		return ret
	}
	return *o.SearchMatches
}

// GetSearchMatchesOk returns a tuple with the SearchMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetSearchMatchesOk() (*SearchMatchesType, bool) {
	if o == nil || IsNil(o.SearchMatches) {
		return nil, false
	}
	return o.SearchMatches, true
}

// HasSearchMatches returns a boolean if a field has been set.
func (o *StayDetailType) HasSearchMatches() bool {
	if o != nil && !IsNil(o.SearchMatches) {
		return true
	}

	return false
}

// SetSearchMatches gets a reference to the given SearchMatchesType and assigns it to the SearchMatches field.
func (o *StayDetailType) SetSearchMatches(v SearchMatchesType) {
	o.SearchMatches = &v
}

// GetShareNumber returns the ShareNumber field value if set, zero value otherwise.
func (o *StayDetailType) GetShareNumber() string {
	if o == nil || IsNil(o.ShareNumber) {
		var ret string
		return ret
	}
	return *o.ShareNumber
}

// GetShareNumberOk returns a tuple with the ShareNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetShareNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ShareNumber) {
		return nil, false
	}
	return o.ShareNumber, true
}

// HasShareNumber returns a boolean if a field has been set.
func (o *StayDetailType) HasShareNumber() bool {
	if o != nil && !IsNil(o.ShareNumber) {
		return true
	}

	return false
}

// SetShareNumber gets a reference to the given string and assigns it to the ShareNumber field.
func (o *StayDetailType) SetShareNumber(v string) {
	o.ShareNumber = &v
}

// GetSharedGuests returns the SharedGuests field value if set, zero value otherwise.
func (o *StayDetailType) GetSharedGuests() ResSharedGuestListType {
	if o == nil || IsNil(o.SharedGuests) {
		var ret ResSharedGuestListType
		return ret
	}
	return *o.SharedGuests
}

// GetSharedGuestsOk returns a tuple with the SharedGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetSharedGuestsOk() (*ResSharedGuestListType, bool) {
	if o == nil || IsNil(o.SharedGuests) {
		return nil, false
	}
	return o.SharedGuests, true
}

// HasSharedGuests returns a boolean if a field has been set.
func (o *StayDetailType) HasSharedGuests() bool {
	if o != nil && !IsNil(o.SharedGuests) {
		return true
	}

	return false
}

// SetSharedGuests gets a reference to the given ResSharedGuestListType and assigns it to the SharedGuests field.
func (o *StayDetailType) SetSharedGuests(v ResSharedGuestListType) {
	o.SharedGuests = &v
}

// GetSourceOfSale returns the SourceOfSale field value if set, zero value otherwise.
func (o *StayDetailType) GetSourceOfSale() SourceOfSaleType {
	if o == nil || IsNil(o.SourceOfSale) {
		var ret SourceOfSaleType
		return ret
	}
	return *o.SourceOfSale
}

// GetSourceOfSaleOk returns a tuple with the SourceOfSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetSourceOfSaleOk() (*SourceOfSaleType, bool) {
	if o == nil || IsNil(o.SourceOfSale) {
		return nil, false
	}
	return o.SourceOfSale, true
}

// HasSourceOfSale returns a boolean if a field has been set.
func (o *StayDetailType) HasSourceOfSale() bool {
	if o != nil && !IsNil(o.SourceOfSale) {
		return true
	}

	return false
}

// SetSourceOfSale gets a reference to the given SourceOfSaleType and assigns it to the SourceOfSale field.
func (o *StayDetailType) SetSourceOfSale(v SourceOfSaleType) {
	o.SourceOfSale = &v
}

// GetSpecials returns the Specials field value if set, zero value otherwise.
func (o *StayDetailType) GetSpecials() string {
	if o == nil || IsNil(o.Specials) {
		var ret string
		return ret
	}
	return *o.Specials
}

// GetSpecialsOk returns a tuple with the Specials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetSpecialsOk() (*string, bool) {
	if o == nil || IsNil(o.Specials) {
		return nil, false
	}
	return o.Specials, true
}

// HasSpecials returns a boolean if a field has been set.
func (o *StayDetailType) HasSpecials() bool {
	if o != nil && !IsNil(o.Specials) {
		return true
	}

	return false
}

// SetSpecials gets a reference to the given string and assigns it to the Specials field.
func (o *StayDetailType) SetSpecials(v string) {
	o.Specials = &v
}

// GetStayRecordId returns the StayRecordId field value if set, zero value otherwise.
func (o *StayDetailType) GetStayRecordId() UniqueIDType {
	if o == nil || IsNil(o.StayRecordId) {
		var ret UniqueIDType
		return ret
	}
	return *o.StayRecordId
}

// GetStayRecordIdOk returns a tuple with the StayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetStayRecordIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.StayRecordId) {
		return nil, false
	}
	return o.StayRecordId, true
}

// HasStayRecordId returns a boolean if a field has been set.
func (o *StayDetailType) HasStayRecordId() bool {
	if o != nil && !IsNil(o.StayRecordId) {
		return true
	}

	return false
}

// SetStayRecordId gets a reference to the given UniqueIDType and assigns it to the StayRecordId field.
func (o *StayDetailType) SetStayRecordId(v UniqueIDType) {
	o.StayRecordId = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *StayDetailType) GetTaxType() TaxTypeType {
	if o == nil || IsNil(o.TaxType) {
		var ret TaxTypeType
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetTaxTypeOk() (*TaxTypeType, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *StayDetailType) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given TaxTypeType and assigns it to the TaxType field.
func (o *StayDetailType) SetTaxType(v TaxTypeType) {
	o.TaxType = &v
}

// GetTravelAgentReferenceId returns the TravelAgentReferenceId field value if set, zero value otherwise.
func (o *StayDetailType) GetTravelAgentReferenceId() string {
	if o == nil || IsNil(o.TravelAgentReferenceId) {
		var ret string
		return ret
	}
	return *o.TravelAgentReferenceId
}

// GetTravelAgentReferenceIdOk returns a tuple with the TravelAgentReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetTravelAgentReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.TravelAgentReferenceId) {
		return nil, false
	}
	return o.TravelAgentReferenceId, true
}

// HasTravelAgentReferenceId returns a boolean if a field has been set.
func (o *StayDetailType) HasTravelAgentReferenceId() bool {
	if o != nil && !IsNil(o.TravelAgentReferenceId) {
		return true
	}

	return false
}

// SetTravelAgentReferenceId gets a reference to the given string and assigns it to the TravelAgentReferenceId field.
func (o *StayDetailType) SetTravelAgentReferenceId(v string) {
	o.TravelAgentReferenceId = &v
}

// GetTurndownInfo returns the TurndownInfo field value if set, zero value otherwise.
func (o *StayDetailType) GetTurndownInfo() ReservationTurndownInfoType {
	if o == nil || IsNil(o.TurndownInfo) {
		var ret ReservationTurndownInfoType
		return ret
	}
	return *o.TurndownInfo
}

// GetTurndownInfoOk returns a tuple with the TurndownInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetTurndownInfoOk() (*ReservationTurndownInfoType, bool) {
	if o == nil || IsNil(o.TurndownInfo) {
		return nil, false
	}
	return o.TurndownInfo, true
}

// HasTurndownInfo returns a boolean if a field has been set.
func (o *StayDetailType) HasTurndownInfo() bool {
	if o != nil && !IsNil(o.TurndownInfo) {
		return true
	}

	return false
}

// SetTurndownInfo gets a reference to the given ReservationTurndownInfoType and assigns it to the TurndownInfo field.
func (o *StayDetailType) SetTurndownInfo(v ReservationTurndownInfoType) {
	o.TurndownInfo = &v
}

// GetWaitlist returns the Waitlist field value if set, zero value otherwise.
func (o *StayDetailType) GetWaitlist() WaitlistResType {
	if o == nil || IsNil(o.Waitlist) {
		var ret WaitlistResType
		return ret
	}
	return *o.Waitlist
}

// GetWaitlistOk returns a tuple with the Waitlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetWaitlistOk() (*WaitlistResType, bool) {
	if o == nil || IsNil(o.Waitlist) {
		return nil, false
	}
	return o.Waitlist, true
}

// HasWaitlist returns a boolean if a field has been set.
func (o *StayDetailType) HasWaitlist() bool {
	if o != nil && !IsNil(o.Waitlist) {
		return true
	}

	return false
}

// SetWaitlist gets a reference to the given WaitlistResType and assigns it to the Waitlist field.
func (o *StayDetailType) SetWaitlist(v WaitlistResType) {
	o.Waitlist = &v
}

// GetWalkInIndicator returns the WalkInIndicator field value if set, zero value otherwise.
func (o *StayDetailType) GetWalkInIndicator() bool {
	if o == nil || IsNil(o.WalkInIndicator) {
		var ret bool
		return ret
	}
	return *o.WalkInIndicator
}

// GetWalkInIndicatorOk returns a tuple with the WalkInIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetWalkInIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.WalkInIndicator) {
		return nil, false
	}
	return o.WalkInIndicator, true
}

// HasWalkInIndicator returns a boolean if a field has been set.
func (o *StayDetailType) HasWalkInIndicator() bool {
	if o != nil && !IsNil(o.WalkInIndicator) {
		return true
	}

	return false
}

// SetWalkInIndicator gets a reference to the given bool and assigns it to the WalkInIndicator field.
func (o *StayDetailType) SetWalkInIndicator(v bool) {
	o.WalkInIndicator = &v
}

// GetWelcomeOffer returns the WelcomeOffer field value if set, zero value otherwise.
func (o *StayDetailType) GetWelcomeOffer() bool {
	if o == nil || IsNil(o.WelcomeOffer) {
		var ret bool
		return ret
	}
	return *o.WelcomeOffer
}

// GetWelcomeOfferOk returns a tuple with the WelcomeOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayDetailType) GetWelcomeOfferOk() (*bool, bool) {
	if o == nil || IsNil(o.WelcomeOffer) {
		return nil, false
	}
	return o.WelcomeOffer, true
}

// HasWelcomeOffer returns a boolean if a field has been set.
func (o *StayDetailType) HasWelcomeOffer() bool {
	if o != nil && !IsNil(o.WelcomeOffer) {
		return true
	}

	return false
}

// SetWelcomeOffer gets a reference to the given bool and assigns it to the WelcomeOffer field.
func (o *StayDetailType) SetWelcomeOffer(v bool) {
	o.WelcomeOffer = &v
}

func (o StayDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessRestriction) {
		toSerialize["accessRestriction"] = o.AccessRestriction
	}
	if !IsNil(o.AdvanceCheckIn) {
		toSerialize["advanceCheckIn"] = o.AdvanceCheckIn
	}
	if !IsNil(o.AllotmentCode) {
		toSerialize["allotmentCode"] = o.AllotmentCode
	}
	if !IsNil(o.AllowMobileCheckout) {
		toSerialize["allowMobileCheckout"] = o.AllowMobileCheckout
	}
	if !IsNil(o.AllowMobileViewFolio) {
		toSerialize["allowMobileViewFolio"] = o.AllowMobileViewFolio
	}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowedActions"] = o.AllowedActions
	}
	if !IsNil(o.AttachedProfiles) {
		toSerialize["attachedProfiles"] = o.AttachedProfiles
	}
	if !IsNil(o.BookedArrivalDate) {
		toSerialize["bookedArrivalDate"] = o.BookedArrivalDate
	}
	if !IsNil(o.BookedDepartureDate) {
		toSerialize["bookedDepartureDate"] = o.BookedDepartureDate
	}
	if !IsNil(o.BookedRoomType) {
		toSerialize["bookedRoomType"] = o.BookedRoomType
	}
	if !IsNil(o.BookingDate) {
		toSerialize["bookingDate"] = o.BookingDate
	}
	if !IsNil(o.CancellationDate) {
		toSerialize["cancellationDate"] = o.CancellationDate
	}
	if !IsNil(o.CancellationInfo) {
		toSerialize["cancellationInfo"] = o.CancellationInfo
	}
	if !IsNil(o.CancelledRoomNights) {
		toSerialize["cancelledRoomNights"] = o.CancelledRoomNights
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.ChannelCode) {
		toSerialize["channelCode"] = o.ChannelCode
	}
	if !IsNil(o.CommissionPayoutTo) {
		toSerialize["commissionPayoutTo"] = o.CommissionPayoutTo
	}
	if !IsNil(o.Complimentaray) {
		toSerialize["complimentaray"] = o.Complimentaray
	}
	if !IsNil(o.ComputedReservationStatus) {
		toSerialize["computedReservationStatus"] = o.ComputedReservationStatus
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Deposit) {
		toSerialize["deposit"] = o.Deposit
	}
	if !IsNil(o.DisplayColor) {
		toSerialize["displayColor"] = o.DisplayColor
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.ExpectedServiceTime) {
		toSerialize["expectedServiceTime"] = o.ExpectedServiceTime
	}
	if !IsNil(o.GuestPreferredCurrency) {
		toSerialize["guestPreferredCurrency"] = o.GuestPreferredCurrency
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.HotelInterfaceStatusList) {
		toSerialize["hotelInterfaceStatusList"] = o.HotelInterfaceStatusList
	}
	if !IsNil(o.HotelName) {
		toSerialize["hotelName"] = o.HotelName
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.KeyCount) {
		toSerialize["keyCount"] = o.KeyCount
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastPrivacyPromptDate) {
		toSerialize["lastPrivacyPromptDate"] = o.LastPrivacyPromptDate
	}
	if !IsNil(o.MobileNotifications) {
		toSerialize["mobileNotifications"] = o.MobileNotifications
	}
	if !IsNil(o.NoShowRoomNights) {
		toSerialize["noShowRoomNights"] = o.NoShowRoomNights
	}
	if !IsNil(o.OpenFolio) {
		toSerialize["openFolio"] = o.OpenFolio
	}
	if !IsNil(o.OptedForCommunication) {
		toSerialize["optedForCommunication"] = o.OptedForCommunication
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PreRegistered) {
		toSerialize["preRegistered"] = o.PreRegistered
	}
	if !IsNil(o.PrimarySharer) {
		toSerialize["primarySharer"] = o.PrimarySharer
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	if !IsNil(o.ReservationCommunication) {
		toSerialize["reservationCommunication"] = o.ReservationCommunication
	}
	if !IsNil(o.ReservationFolioWindows) {
		toSerialize["reservationFolioWindows"] = o.ReservationFolioWindows
	}
	if !IsNil(o.ReservationGuest) {
		toSerialize["reservationGuest"] = o.ReservationGuest
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ReservationIndicators) {
		toSerialize["reservationIndicators"] = o.ReservationIndicators
	}
	if !IsNil(o.ReservationPaymentMethod) {
		toSerialize["reservationPaymentMethod"] = o.ReservationPaymentMethod
	}
	if !IsNil(o.ReservationSourceCode) {
		toSerialize["reservationSourceCode"] = o.ReservationSourceCode
	}
	if !IsNil(o.ReservationSourceType) {
		toSerialize["reservationSourceType"] = o.ReservationSourceType
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RevenuesAndBalances) {
		toSerialize["revenuesAndBalances"] = o.RevenuesAndBalances
	}
	if !IsNil(o.RoomStatus) {
		toSerialize["roomStatus"] = o.RoomStatus
	}
	if !IsNil(o.RoomStay) {
		toSerialize["roomStay"] = o.RoomStay
	}
	if !IsNil(o.RoomStayReservation) {
		toSerialize["roomStayReservation"] = o.RoomStayReservation
	}
	if !IsNil(o.SearchMatches) {
		toSerialize["searchMatches"] = o.SearchMatches
	}
	if !IsNil(o.ShareNumber) {
		toSerialize["shareNumber"] = o.ShareNumber
	}
	if !IsNil(o.SharedGuests) {
		toSerialize["sharedGuests"] = o.SharedGuests
	}
	if !IsNil(o.SourceOfSale) {
		toSerialize["sourceOfSale"] = o.SourceOfSale
	}
	if !IsNil(o.Specials) {
		toSerialize["specials"] = o.Specials
	}
	if !IsNil(o.StayRecordId) {
		toSerialize["stayRecordId"] = o.StayRecordId
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TravelAgentReferenceId) {
		toSerialize["travelAgentReferenceId"] = o.TravelAgentReferenceId
	}
	if !IsNil(o.TurndownInfo) {
		toSerialize["turndownInfo"] = o.TurndownInfo
	}
	if !IsNil(o.Waitlist) {
		toSerialize["waitlist"] = o.Waitlist
	}
	if !IsNil(o.WalkInIndicator) {
		toSerialize["walkInIndicator"] = o.WalkInIndicator
	}
	if !IsNil(o.WelcomeOffer) {
		toSerialize["welcomeOffer"] = o.WelcomeOffer
	}
	return toSerialize, nil
}

type NullableStayDetailType struct {
	value *StayDetailType
	isSet bool
}

func (v NullableStayDetailType) Get() *StayDetailType {
	return v.value
}

func (v *NullableStayDetailType) Set(val *StayDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayDetailType(val *StayDetailType) *NullableStayDetailType {
	return &NullableStayDetailType{value: val, isSet: true}
}

func (v NullableStayDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


