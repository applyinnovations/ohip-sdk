/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StagedProfileSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileSummaryType{}

// StagedProfileSummaryType Basic information about staged profile.
type StagedProfileSummaryType struct {
	Country *CountryNameType `json:"country,omitempty"`
	// Hotel code associated with the staged profile.
	HotelId *string `json:"hotelId,omitempty"`
	// The date on which the staged profile has been received.
	ImportDate *string `json:"importDate,omitempty"`
	ProfileIdList *UniqueIDListType `json:"profileIdList,omitempty"`
	ProfileName *ProfileNameType `json:"profileName,omitempty"`
	// Type of the staged profile.
	ProfileType *string `json:"profileType,omitempty"`
	// The region of the staged profile.
	Region *string `json:"region,omitempty"`
	StageStatus *StagedProfileStatus `json:"stageStatus,omitempty"`
}

// NewStagedProfileSummaryType instantiates a new StagedProfileSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileSummaryType() *StagedProfileSummaryType {
	this := StagedProfileSummaryType{}
	return &this
}

// NewStagedProfileSummaryTypeWithDefaults instantiates a new StagedProfileSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileSummaryTypeWithDefaults() *StagedProfileSummaryType {
	this := StagedProfileSummaryType{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetCountry() CountryNameType {
	if o == nil || IsNil(o.Country) {
		var ret CountryNameType
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetCountryOk() (*CountryNameType, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given CountryNameType and assigns it to the Country field.
func (o *StagedProfileSummaryType) SetCountry(v CountryNameType) {
	o.Country = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StagedProfileSummaryType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetImportDate returns the ImportDate field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetImportDate() string {
	if o == nil || IsNil(o.ImportDate) {
		var ret string
		return ret
	}
	return *o.ImportDate
}

// GetImportDateOk returns a tuple with the ImportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetImportDateOk() (*string, bool) {
	if o == nil || IsNil(o.ImportDate) {
		return nil, false
	}
	return o.ImportDate, true
}

// HasImportDate returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasImportDate() bool {
	if o != nil && !IsNil(o.ImportDate) {
		return true
	}

	return false
}

// SetImportDate gets a reference to the given string and assigns it to the ImportDate field.
func (o *StagedProfileSummaryType) SetImportDate(v string) {
	o.ImportDate = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetProfileIdList() UniqueIDListType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret UniqueIDListType
		return ret
	}
	return *o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetProfileIdListOk() (*UniqueIDListType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given UniqueIDListType and assigns it to the ProfileIdList field.
func (o *StagedProfileSummaryType) SetProfileIdList(v UniqueIDListType) {
	o.ProfileIdList = &v
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetProfileName() ProfileNameType {
	if o == nil || IsNil(o.ProfileName) {
		var ret ProfileNameType
		return ret
	}
	return *o.ProfileName
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetProfileNameOk() (*ProfileNameType, bool) {
	if o == nil || IsNil(o.ProfileName) {
		return nil, false
	}
	return o.ProfileName, true
}

// HasProfileName returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasProfileName() bool {
	if o != nil && !IsNil(o.ProfileName) {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given ProfileNameType and assigns it to the ProfileName field.
func (o *StagedProfileSummaryType) SetProfileName(v ProfileNameType) {
	o.ProfileName = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetProfileType() string {
	if o == nil || IsNil(o.ProfileType) {
		var ret string
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetProfileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given string and assigns it to the ProfileType field.
func (o *StagedProfileSummaryType) SetProfileType(v string) {
	o.ProfileType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *StagedProfileSummaryType) SetRegion(v string) {
	o.Region = &v
}

// GetStageStatus returns the StageStatus field value if set, zero value otherwise.
func (o *StagedProfileSummaryType) GetStageStatus() StagedProfileStatus {
	if o == nil || IsNil(o.StageStatus) {
		var ret StagedProfileStatus
		return ret
	}
	return *o.StageStatus
}

// GetStageStatusOk returns a tuple with the StageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileSummaryType) GetStageStatusOk() (*StagedProfileStatus, bool) {
	if o == nil || IsNil(o.StageStatus) {
		return nil, false
	}
	return o.StageStatus, true
}

// HasStageStatus returns a boolean if a field has been set.
func (o *StagedProfileSummaryType) HasStageStatus() bool {
	if o != nil && !IsNil(o.StageStatus) {
		return true
	}

	return false
}

// SetStageStatus gets a reference to the given StagedProfileStatus and assigns it to the StageStatus field.
func (o *StagedProfileSummaryType) SetStageStatus(v StagedProfileStatus) {
	o.StageStatus = &v
}

func (o StagedProfileSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ImportDate) {
		toSerialize["importDate"] = o.ImportDate
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.ProfileName) {
		toSerialize["profileName"] = o.ProfileName
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.StageStatus) {
		toSerialize["stageStatus"] = o.StageStatus
	}
	return toSerialize, nil
}

type NullableStagedProfileSummaryType struct {
	value *StagedProfileSummaryType
	isSet bool
}

func (v NullableStagedProfileSummaryType) Get() *StagedProfileSummaryType {
	return v.value
}

func (v *NullableStagedProfileSummaryType) Set(val *StagedProfileSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileSummaryType(val *StagedProfileSummaryType) *NullableStagedProfileSummaryType {
	return &NullableStagedProfileSummaryType{value: val, isSet: true}
}

func (v NullableStagedProfileSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


