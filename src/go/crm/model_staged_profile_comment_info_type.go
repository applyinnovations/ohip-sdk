/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StagedProfileCommentInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileCommentInfoType{}

// StagedProfileCommentInfoType Comment related to the profile/reservation.
type StagedProfileCommentInfoType struct {
	Comment *CommentType `json:"comment,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// The error in a user defined field in a staged profile with an invalid status.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	Id *string `json:"id,omitempty"`
	// Indicates comment inactive date.
	InActiveDate *string `json:"inActiveDate,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// The line number of the comment.
	LineNo *int32 `json:"lineNo,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// A reference to the type of object defined by the UniqueID element.
	Type *string `json:"type,omitempty"`
	// Indicates whether the comment information is valid.
	Valid *bool `json:"valid,omitempty"`
}

// NewStagedProfileCommentInfoType instantiates a new StagedProfileCommentInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileCommentInfoType() *StagedProfileCommentInfoType {
	this := StagedProfileCommentInfoType{}
	return &this
}

// NewStagedProfileCommentInfoTypeWithDefaults instantiates a new StagedProfileCommentInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileCommentInfoTypeWithDefaults() *StagedProfileCommentInfoType {
	this := StagedProfileCommentInfoType{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetComment() CommentType {
	if o == nil || IsNil(o.Comment) {
		var ret CommentType
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetCommentOk() (*CommentType, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given CommentType and assigns it to the Comment field.
func (o *StagedProfileCommentInfoType) SetComment(v CommentType) {
	o.Comment = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *StagedProfileCommentInfoType) SetCount(v int32) {
	o.Count = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *StagedProfileCommentInfoType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *StagedProfileCommentInfoType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *StagedProfileCommentInfoType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *StagedProfileCommentInfoType) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StagedProfileCommentInfoType) SetId(v string) {
	o.Id = &v
}

// GetInActiveDate returns the InActiveDate field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetInActiveDate() string {
	if o == nil || IsNil(o.InActiveDate) {
		var ret string
		return ret
	}
	return *o.InActiveDate
}

// GetInActiveDateOk returns a tuple with the InActiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetInActiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InActiveDate) {
		return nil, false
	}
	return o.InActiveDate, true
}

// HasInActiveDate returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasInActiveDate() bool {
	if o != nil && !IsNil(o.InActiveDate) {
		return true
	}

	return false
}

// SetInActiveDate gets a reference to the given string and assigns it to the InActiveDate field.
func (o *StagedProfileCommentInfoType) SetInActiveDate(v string) {
	o.InActiveDate = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *StagedProfileCommentInfoType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *StagedProfileCommentInfoType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLineNo returns the LineNo field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetLineNo() int32 {
	if o == nil || IsNil(o.LineNo) {
		var ret int32
		return ret
	}
	return *o.LineNo
}

// GetLineNoOk returns a tuple with the LineNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetLineNoOk() (*int32, bool) {
	if o == nil || IsNil(o.LineNo) {
		return nil, false
	}
	return o.LineNo, true
}

// HasLineNo returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasLineNo() bool {
	if o != nil && !IsNil(o.LineNo) {
		return true
	}

	return false
}

// SetLineNo gets a reference to the given int32 and assigns it to the LineNo field.
func (o *StagedProfileCommentInfoType) SetLineNo(v int32) {
	o.LineNo = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *StagedProfileCommentInfoType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StagedProfileCommentInfoType) SetType(v string) {
	o.Type = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *StagedProfileCommentInfoType) GetValid() bool {
	if o == nil || IsNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileCommentInfoType) GetValidOk() (*bool, bool) {
	if o == nil || IsNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *StagedProfileCommentInfoType) HasValid() bool {
	if o != nil && !IsNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *StagedProfileCommentInfoType) SetValid(v bool) {
	o.Valid = &v
}

func (o StagedProfileCommentInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileCommentInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InActiveDate) {
		toSerialize["inActiveDate"] = o.InActiveDate
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LineNo) {
		toSerialize["lineNo"] = o.LineNo
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	return toSerialize, nil
}

type NullableStagedProfileCommentInfoType struct {
	value *StagedProfileCommentInfoType
	isSet bool
}

func (v NullableStagedProfileCommentInfoType) Get() *StagedProfileCommentInfoType {
	return v.value
}

func (v *NullableStagedProfileCommentInfoType) Set(val *StagedProfileCommentInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileCommentInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileCommentInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileCommentInfoType(val *StagedProfileCommentInfoType) *NullableStagedProfileCommentInfoType {
	return &NullableStagedProfileCommentInfoType{value: val, isSet: true}
}

func (v NullableStagedProfileCommentInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileCommentInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


