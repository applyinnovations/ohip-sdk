/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the RevenueStatisticsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevenueStatisticsSummaryType{}

// RevenueStatisticsSummaryType Summary of the revenue for a year
type RevenueStatisticsSummaryType struct {
	RevenueBucketsSummary *RevenueBucketListType `json:"revenueBucketsSummary,omitempty"`
	RevenueDetails *RevenueStatisticsDetailListType `json:"revenueDetails,omitempty"`
	// Year of the revenue.
	Year *string `json:"year,omitempty"`
}

// NewRevenueStatisticsSummaryType instantiates a new RevenueStatisticsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevenueStatisticsSummaryType() *RevenueStatisticsSummaryType {
	this := RevenueStatisticsSummaryType{}
	return &this
}

// NewRevenueStatisticsSummaryTypeWithDefaults instantiates a new RevenueStatisticsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevenueStatisticsSummaryTypeWithDefaults() *RevenueStatisticsSummaryType {
	this := RevenueStatisticsSummaryType{}
	return &this
}

// GetRevenueBucketsSummary returns the RevenueBucketsSummary field value if set, zero value otherwise.
func (o *RevenueStatisticsSummaryType) GetRevenueBucketsSummary() RevenueBucketListType {
	if o == nil || IsNil(o.RevenueBucketsSummary) {
		var ret RevenueBucketListType
		return ret
	}
	return *o.RevenueBucketsSummary
}

// GetRevenueBucketsSummaryOk returns a tuple with the RevenueBucketsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsSummaryType) GetRevenueBucketsSummaryOk() (*RevenueBucketListType, bool) {
	if o == nil || IsNil(o.RevenueBucketsSummary) {
		return nil, false
	}
	return o.RevenueBucketsSummary, true
}

// HasRevenueBucketsSummary returns a boolean if a field has been set.
func (o *RevenueStatisticsSummaryType) HasRevenueBucketsSummary() bool {
	if o != nil && !IsNil(o.RevenueBucketsSummary) {
		return true
	}

	return false
}

// SetRevenueBucketsSummary gets a reference to the given RevenueBucketListType and assigns it to the RevenueBucketsSummary field.
func (o *RevenueStatisticsSummaryType) SetRevenueBucketsSummary(v RevenueBucketListType) {
	o.RevenueBucketsSummary = &v
}

// GetRevenueDetails returns the RevenueDetails field value if set, zero value otherwise.
func (o *RevenueStatisticsSummaryType) GetRevenueDetails() RevenueStatisticsDetailListType {
	if o == nil || IsNil(o.RevenueDetails) {
		var ret RevenueStatisticsDetailListType
		return ret
	}
	return *o.RevenueDetails
}

// GetRevenueDetailsOk returns a tuple with the RevenueDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsSummaryType) GetRevenueDetailsOk() (*RevenueStatisticsDetailListType, bool) {
	if o == nil || IsNil(o.RevenueDetails) {
		return nil, false
	}
	return o.RevenueDetails, true
}

// HasRevenueDetails returns a boolean if a field has been set.
func (o *RevenueStatisticsSummaryType) HasRevenueDetails() bool {
	if o != nil && !IsNil(o.RevenueDetails) {
		return true
	}

	return false
}

// SetRevenueDetails gets a reference to the given RevenueStatisticsDetailListType and assigns it to the RevenueDetails field.
func (o *RevenueStatisticsSummaryType) SetRevenueDetails(v RevenueStatisticsDetailListType) {
	o.RevenueDetails = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *RevenueStatisticsSummaryType) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsSummaryType) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *RevenueStatisticsSummaryType) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *RevenueStatisticsSummaryType) SetYear(v string) {
	o.Year = &v
}

func (o RevenueStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevenueStatisticsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RevenueBucketsSummary) {
		toSerialize["revenueBucketsSummary"] = o.RevenueBucketsSummary
	}
	if !IsNil(o.RevenueDetails) {
		toSerialize["revenueDetails"] = o.RevenueDetails
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableRevenueStatisticsSummaryType struct {
	value *RevenueStatisticsSummaryType
	isSet bool
}

func (v NullableRevenueStatisticsSummaryType) Get() *RevenueStatisticsSummaryType {
	return v.value
}

func (v *NullableRevenueStatisticsSummaryType) Set(val *RevenueStatisticsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableRevenueStatisticsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableRevenueStatisticsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevenueStatisticsSummaryType(val *RevenueStatisticsSummaryType) *NullableRevenueStatisticsSummaryType {
	return &NullableRevenueStatisticsSummaryType{value: val, isSet: true}
}

func (v NullableRevenueStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevenueStatisticsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


