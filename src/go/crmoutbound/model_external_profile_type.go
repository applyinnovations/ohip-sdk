/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the ExternalProfileType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalProfileType{}

// ExternalProfileType Type provides the detailed information about the profile.
type ExternalProfileType struct {
	ProfileIdList *ProfileIdList `json:"profileIdList,omitempty"`
	Profile *ProfileType `json:"profile,omitempty"`
	Incidents *IncidentsType `json:"incidents,omitempty"`
	// Guest Status for the Profile.
	GuestStatus *string `json:"guestStatus,omitempty"`
}

// NewExternalProfileType instantiates a new ExternalProfileType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalProfileType() *ExternalProfileType {
	this := ExternalProfileType{}
	return &this
}

// NewExternalProfileTypeWithDefaults instantiates a new ExternalProfileType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalProfileTypeWithDefaults() *ExternalProfileType {
	this := ExternalProfileType{}
	return &this
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *ExternalProfileType) GetProfileIdList() ProfileIdList {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret ProfileIdList
		return ret
	}
	return *o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfileType) GetProfileIdListOk() (*ProfileIdList, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *ExternalProfileType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given ProfileIdList and assigns it to the ProfileIdList field.
func (o *ExternalProfileType) SetProfileIdList(v ProfileIdList) {
	o.ProfileIdList = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ExternalProfileType) GetProfile() ProfileType {
	if o == nil || IsNil(o.Profile) {
		var ret ProfileType
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfileType) GetProfileOk() (*ProfileType, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ExternalProfileType) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given ProfileType and assigns it to the Profile field.
func (o *ExternalProfileType) SetProfile(v ProfileType) {
	o.Profile = &v
}

// GetIncidents returns the Incidents field value if set, zero value otherwise.
func (o *ExternalProfileType) GetIncidents() IncidentsType {
	if o == nil || IsNil(o.Incidents) {
		var ret IncidentsType
		return ret
	}
	return *o.Incidents
}

// GetIncidentsOk returns a tuple with the Incidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfileType) GetIncidentsOk() (*IncidentsType, bool) {
	if o == nil || IsNil(o.Incidents) {
		return nil, false
	}
	return o.Incidents, true
}

// HasIncidents returns a boolean if a field has been set.
func (o *ExternalProfileType) HasIncidents() bool {
	if o != nil && !IsNil(o.Incidents) {
		return true
	}

	return false
}

// SetIncidents gets a reference to the given IncidentsType and assigns it to the Incidents field.
func (o *ExternalProfileType) SetIncidents(v IncidentsType) {
	o.Incidents = &v
}

// GetGuestStatus returns the GuestStatus field value if set, zero value otherwise.
func (o *ExternalProfileType) GetGuestStatus() string {
	if o == nil || IsNil(o.GuestStatus) {
		var ret string
		return ret
	}
	return *o.GuestStatus
}

// GetGuestStatusOk returns a tuple with the GuestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfileType) GetGuestStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GuestStatus) {
		return nil, false
	}
	return o.GuestStatus, true
}

// HasGuestStatus returns a boolean if a field has been set.
func (o *ExternalProfileType) HasGuestStatus() bool {
	if o != nil && !IsNil(o.GuestStatus) {
		return true
	}

	return false
}

// SetGuestStatus gets a reference to the given string and assigns it to the GuestStatus field.
func (o *ExternalProfileType) SetGuestStatus(v string) {
	o.GuestStatus = &v
}

func (o ExternalProfileType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalProfileType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Incidents) {
		toSerialize["incidents"] = o.Incidents
	}
	if !IsNil(o.GuestStatus) {
		toSerialize["guestStatus"] = o.GuestStatus
	}
	return toSerialize, nil
}

type NullableExternalProfileType struct {
	value *ExternalProfileType
	isSet bool
}

func (v NullableExternalProfileType) Get() *ExternalProfileType {
	return v.value
}

func (v *NullableExternalProfileType) Set(val *ExternalProfileType) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalProfileType) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalProfileType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalProfileType(val *ExternalProfileType) *NullableExternalProfileType {
	return &NullableExternalProfileType{value: val, isSet: true}
}

func (v NullableExternalProfileType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalProfileType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


