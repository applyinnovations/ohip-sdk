/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StayStatisticsDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayStatisticsDetailType{}

// StayStatisticsDetailType Contains stay statistics detail information
type StayStatisticsDetailType struct {
	StayDetail *StayDetailType `json:"stayDetail,omitempty"`
	Revenue *StayStatisticsRevenueType `json:"revenue,omitempty"`
	Year *string `json:"year,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
}

// NewStayStatisticsDetailType instantiates a new StayStatisticsDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayStatisticsDetailType() *StayStatisticsDetailType {
	this := StayStatisticsDetailType{}
	return &this
}

// NewStayStatisticsDetailTypeWithDefaults instantiates a new StayStatisticsDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayStatisticsDetailTypeWithDefaults() *StayStatisticsDetailType {
	this := StayStatisticsDetailType{}
	return &this
}

// GetStayDetail returns the StayDetail field value if set, zero value otherwise.
func (o *StayStatisticsDetailType) GetStayDetail() StayDetailType {
	if o == nil || IsNil(o.StayDetail) {
		var ret StayDetailType
		return ret
	}
	return *o.StayDetail
}

// GetStayDetailOk returns a tuple with the StayDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsDetailType) GetStayDetailOk() (*StayDetailType, bool) {
	if o == nil || IsNil(o.StayDetail) {
		return nil, false
	}
	return o.StayDetail, true
}

// HasStayDetail returns a boolean if a field has been set.
func (o *StayStatisticsDetailType) HasStayDetail() bool {
	if o != nil && !IsNil(o.StayDetail) {
		return true
	}

	return false
}

// SetStayDetail gets a reference to the given StayDetailType and assigns it to the StayDetail field.
func (o *StayStatisticsDetailType) SetStayDetail(v StayDetailType) {
	o.StayDetail = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *StayStatisticsDetailType) GetRevenue() StayStatisticsRevenueType {
	if o == nil || IsNil(o.Revenue) {
		var ret StayStatisticsRevenueType
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsDetailType) GetRevenueOk() (*StayStatisticsRevenueType, bool) {
	if o == nil || IsNil(o.Revenue) {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *StayStatisticsDetailType) HasRevenue() bool {
	if o != nil && !IsNil(o.Revenue) {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given StayStatisticsRevenueType and assigns it to the Revenue field.
func (o *StayStatisticsDetailType) SetRevenue(v StayStatisticsRevenueType) {
	o.Revenue = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *StayStatisticsDetailType) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsDetailType) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *StayStatisticsDetailType) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *StayStatisticsDetailType) SetYear(v string) {
	o.Year = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StayStatisticsDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StayStatisticsDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StayStatisticsDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o StayStatisticsDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayStatisticsDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StayDetail) {
		toSerialize["stayDetail"] = o.StayDetail
	}
	if !IsNil(o.Revenue) {
		toSerialize["revenue"] = o.Revenue
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableStayStatisticsDetailType struct {
	value *StayStatisticsDetailType
	isSet bool
}

func (v NullableStayStatisticsDetailType) Get() *StayStatisticsDetailType {
	return v.value
}

func (v *NullableStayStatisticsDetailType) Set(val *StayStatisticsDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayStatisticsDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayStatisticsDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayStatisticsDetailType(val *StayStatisticsDetailType) *NullableStayStatisticsDetailType {
	return &NullableStayStatisticsDetailType{value: val, isSet: true}
}

func (v NullableStayStatisticsDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayStatisticsDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


