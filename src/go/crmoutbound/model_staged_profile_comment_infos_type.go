/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StagedProfileCommentInfosType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileCommentInfosType{}

// StagedProfileCommentInfosType List of Notes for the customer.
type StagedProfileCommentInfosType struct {
	Items []StagedProfileCommentInfoType
}

// NewStagedProfileCommentInfosType instantiates a new StagedProfileCommentInfosType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileCommentInfosType() *StagedProfileCommentInfosType {
	this := StagedProfileCommentInfosType{}
	return &this
}

// NewStagedProfileCommentInfosTypeWithDefaults instantiates a new StagedProfileCommentInfosType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileCommentInfosTypeWithDefaults() *StagedProfileCommentInfosType {
	this := StagedProfileCommentInfosType{}
	return &this
}

func (o StagedProfileCommentInfosType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileCommentInfosType) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *StagedProfileCommentInfosType) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableStagedProfileCommentInfosType struct {
	value StagedProfileCommentInfosType
	isSet bool
}

func (v NullableStagedProfileCommentInfosType) Get() StagedProfileCommentInfosType {
	return v.value
}

func (v *NullableStagedProfileCommentInfosType) Set(val StagedProfileCommentInfosType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileCommentInfosType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileCommentInfosType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileCommentInfosType(val StagedProfileCommentInfosType) *NullableStagedProfileCommentInfosType {
	return &NullableStagedProfileCommentInfosType{value: val, isSet: true}
}

func (v NullableStagedProfileCommentInfosType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileCommentInfosType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


