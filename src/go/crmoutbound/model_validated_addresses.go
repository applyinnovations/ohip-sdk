/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the ValidatedAddresses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidatedAddresses{}

// ValidatedAddresses Response object for fetching Addresses from external system.
type ValidatedAddresses struct {
	AddressValidationsInfo *AddressValidationsType `json:"addressValidationsInfo,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewValidatedAddresses instantiates a new ValidatedAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedAddresses() *ValidatedAddresses {
	this := ValidatedAddresses{}
	return &this
}

// NewValidatedAddressesWithDefaults instantiates a new ValidatedAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedAddressesWithDefaults() *ValidatedAddresses {
	this := ValidatedAddresses{}
	return &this
}

// GetAddressValidationsInfo returns the AddressValidationsInfo field value if set, zero value otherwise.
func (o *ValidatedAddresses) GetAddressValidationsInfo() AddressValidationsType {
	if o == nil || IsNil(o.AddressValidationsInfo) {
		var ret AddressValidationsType
		return ret
	}
	return *o.AddressValidationsInfo
}

// GetAddressValidationsInfoOk returns a tuple with the AddressValidationsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAddresses) GetAddressValidationsInfoOk() (*AddressValidationsType, bool) {
	if o == nil || IsNil(o.AddressValidationsInfo) {
		return nil, false
	}
	return o.AddressValidationsInfo, true
}

// HasAddressValidationsInfo returns a boolean if a field has been set.
func (o *ValidatedAddresses) HasAddressValidationsInfo() bool {
	if o != nil && !IsNil(o.AddressValidationsInfo) {
		return true
	}

	return false
}

// SetAddressValidationsInfo gets a reference to the given AddressValidationsType and assigns it to the AddressValidationsInfo field.
func (o *ValidatedAddresses) SetAddressValidationsInfo(v AddressValidationsType) {
	o.AddressValidationsInfo = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ValidatedAddresses) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAddresses) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ValidatedAddresses) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *ValidatedAddresses) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ValidatedAddresses) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAddresses) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ValidatedAddresses) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *ValidatedAddresses) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o ValidatedAddresses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidatedAddresses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressValidationsInfo) {
		toSerialize["addressValidationsInfo"] = o.AddressValidationsInfo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableValidatedAddresses struct {
	value *ValidatedAddresses
	isSet bool
}

func (v NullableValidatedAddresses) Get() *ValidatedAddresses {
	return v.value
}

func (v *NullableValidatedAddresses) Set(val *ValidatedAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedAddresses(val *ValidatedAddresses) *NullableValidatedAddresses {
	return &NullableValidatedAddresses{value: val, isSet: true}
}

func (v NullableValidatedAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


