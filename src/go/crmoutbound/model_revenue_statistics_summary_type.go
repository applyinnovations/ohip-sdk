/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the RevenueStatisticsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevenueStatisticsSummaryType{}

// RevenueStatisticsSummaryType Summary of the revenue for a year
type RevenueStatisticsSummaryType struct {
	RevenueDetails *RevenueStatisticsDetailListType `json:"revenueDetails,omitempty"`
	// Year of the revenue.
	Year *string `json:"year,omitempty"`
}

// NewRevenueStatisticsSummaryType instantiates a new RevenueStatisticsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevenueStatisticsSummaryType() *RevenueStatisticsSummaryType {
	this := RevenueStatisticsSummaryType{}
	return &this
}

// NewRevenueStatisticsSummaryTypeWithDefaults instantiates a new RevenueStatisticsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevenueStatisticsSummaryTypeWithDefaults() *RevenueStatisticsSummaryType {
	this := RevenueStatisticsSummaryType{}
	return &this
}

// GetRevenueDetails returns the RevenueDetails field value if set, zero value otherwise.
func (o *RevenueStatisticsSummaryType) GetRevenueDetails() RevenueStatisticsDetailListType {
	if o == nil || IsNil(o.RevenueDetails) {
		var ret RevenueStatisticsDetailListType
		return ret
	}
	return *o.RevenueDetails
}

// GetRevenueDetailsOk returns a tuple with the RevenueDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsSummaryType) GetRevenueDetailsOk() (*RevenueStatisticsDetailListType, bool) {
	if o == nil || IsNil(o.RevenueDetails) {
		return nil, false
	}
	return o.RevenueDetails, true
}

// HasRevenueDetails returns a boolean if a field has been set.
func (o *RevenueStatisticsSummaryType) HasRevenueDetails() bool {
	if o != nil && !IsNil(o.RevenueDetails) {
		return true
	}

	return false
}

// SetRevenueDetails gets a reference to the given RevenueStatisticsDetailListType and assigns it to the RevenueDetails field.
func (o *RevenueStatisticsSummaryType) SetRevenueDetails(v RevenueStatisticsDetailListType) {
	o.RevenueDetails = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *RevenueStatisticsSummaryType) GetYear() string {
	if o == nil || IsNil(o.Year) {
		var ret string
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueStatisticsSummaryType) GetYearOk() (*string, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *RevenueStatisticsSummaryType) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given string and assigns it to the Year field.
func (o *RevenueStatisticsSummaryType) SetYear(v string) {
	o.Year = &v
}

func (o RevenueStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevenueStatisticsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RevenueDetails) {
		toSerialize["revenueDetails"] = o.RevenueDetails
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableRevenueStatisticsSummaryType struct {
	value *RevenueStatisticsSummaryType
	isSet bool
}

func (v NullableRevenueStatisticsSummaryType) Get() *RevenueStatisticsSummaryType {
	return v.value
}

func (v *NullableRevenueStatisticsSummaryType) Set(val *RevenueStatisticsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableRevenueStatisticsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableRevenueStatisticsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevenueStatisticsSummaryType(val *RevenueStatisticsSummaryType) *NullableRevenueStatisticsSummaryType {
	return &NullableRevenueStatisticsSummaryType{value: val, isSet: true}
}

func (v NullableRevenueStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevenueStatisticsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


