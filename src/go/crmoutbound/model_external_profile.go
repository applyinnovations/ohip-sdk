/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the ExternalProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalProfile{}

// ExternalProfile Response object for fetching profile from external CRM System. This object contains profile details, preferences and incidents.
type ExternalProfile struct {
	ProfileInfo *ExternalProfileType `json:"profileInfo,omitempty"`
	Links *Links `json:"links,omitempty"`
}

// NewExternalProfile instantiates a new ExternalProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalProfile() *ExternalProfile {
	this := ExternalProfile{}
	return &this
}

// NewExternalProfileWithDefaults instantiates a new ExternalProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalProfileWithDefaults() *ExternalProfile {
	this := ExternalProfile{}
	return &this
}

// GetProfileInfo returns the ProfileInfo field value if set, zero value otherwise.
func (o *ExternalProfile) GetProfileInfo() ExternalProfileType {
	if o == nil || IsNil(o.ProfileInfo) {
		var ret ExternalProfileType
		return ret
	}
	return *o.ProfileInfo
}

// GetProfileInfoOk returns a tuple with the ProfileInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfile) GetProfileInfoOk() (*ExternalProfileType, bool) {
	if o == nil || IsNil(o.ProfileInfo) {
		return nil, false
	}
	return o.ProfileInfo, true
}

// HasProfileInfo returns a boolean if a field has been set.
func (o *ExternalProfile) HasProfileInfo() bool {
	if o != nil && !IsNil(o.ProfileInfo) {
		return true
	}

	return false
}

// SetProfileInfo gets a reference to the given ExternalProfileType and assigns it to the ProfileInfo field.
func (o *ExternalProfile) SetProfileInfo(v ExternalProfileType) {
	o.ProfileInfo = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ExternalProfile) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalProfile) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ExternalProfile) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *ExternalProfile) SetLinks(v Links) {
	o.Links = &v
}

func (o ExternalProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileInfo) {
		toSerialize["profileInfo"] = o.ProfileInfo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableExternalProfile struct {
	value *ExternalProfile
	isSet bool
}

func (v NullableExternalProfile) Get() *ExternalProfile {
	return v.value
}

func (v *NullableExternalProfile) Set(val *ExternalProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalProfile(val *ExternalProfile) *NullableExternalProfile {
	return &NullableExternalProfile{value: val, isSet: true}
}

func (v NullableExternalProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


