/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the SuspendedProfileMatchStatType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedProfileMatchStatType{}

// SuspendedProfileMatchStatType Type which represents suspended profile match statistics information.
type SuspendedProfileMatchStatType struct {
	// Suspended profile which associated with a Hotel code.
	MatchCriteria *string `json:"matchCriteria,omitempty"`
	// Indicates number of profiles that have met the threshold limit (eg: Upper, Middle and lower)
	ThresholdPoints *float32 `json:"thresholdPoints,omitempty"`
	// Indicates threshold level(eg: Upper, Middle and lower)
	Threshold *string `json:"threshold,omitempty"`
	ProfileType *ProfileTypeType `json:"profileType,omitempty"`
}

// NewSuspendedProfileMatchStatType instantiates a new SuspendedProfileMatchStatType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedProfileMatchStatType() *SuspendedProfileMatchStatType {
	this := SuspendedProfileMatchStatType{}
	return &this
}

// NewSuspendedProfileMatchStatTypeWithDefaults instantiates a new SuspendedProfileMatchStatType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedProfileMatchStatTypeWithDefaults() *SuspendedProfileMatchStatType {
	this := SuspendedProfileMatchStatType{}
	return &this
}

// GetMatchCriteria returns the MatchCriteria field value if set, zero value otherwise.
func (o *SuspendedProfileMatchStatType) GetMatchCriteria() string {
	if o == nil || IsNil(o.MatchCriteria) {
		var ret string
		return ret
	}
	return *o.MatchCriteria
}

// GetMatchCriteriaOk returns a tuple with the MatchCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedProfileMatchStatType) GetMatchCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.MatchCriteria) {
		return nil, false
	}
	return o.MatchCriteria, true
}

// HasMatchCriteria returns a boolean if a field has been set.
func (o *SuspendedProfileMatchStatType) HasMatchCriteria() bool {
	if o != nil && !IsNil(o.MatchCriteria) {
		return true
	}

	return false
}

// SetMatchCriteria gets a reference to the given string and assigns it to the MatchCriteria field.
func (o *SuspendedProfileMatchStatType) SetMatchCriteria(v string) {
	o.MatchCriteria = &v
}

// GetThresholdPoints returns the ThresholdPoints field value if set, zero value otherwise.
func (o *SuspendedProfileMatchStatType) GetThresholdPoints() float32 {
	if o == nil || IsNil(o.ThresholdPoints) {
		var ret float32
		return ret
	}
	return *o.ThresholdPoints
}

// GetThresholdPointsOk returns a tuple with the ThresholdPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedProfileMatchStatType) GetThresholdPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ThresholdPoints) {
		return nil, false
	}
	return o.ThresholdPoints, true
}

// HasThresholdPoints returns a boolean if a field has been set.
func (o *SuspendedProfileMatchStatType) HasThresholdPoints() bool {
	if o != nil && !IsNil(o.ThresholdPoints) {
		return true
	}

	return false
}

// SetThresholdPoints gets a reference to the given float32 and assigns it to the ThresholdPoints field.
func (o *SuspendedProfileMatchStatType) SetThresholdPoints(v float32) {
	o.ThresholdPoints = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *SuspendedProfileMatchStatType) GetThreshold() string {
	if o == nil || IsNil(o.Threshold) {
		var ret string
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedProfileMatchStatType) GetThresholdOk() (*string, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *SuspendedProfileMatchStatType) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given string and assigns it to the Threshold field.
func (o *SuspendedProfileMatchStatType) SetThreshold(v string) {
	o.Threshold = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *SuspendedProfileMatchStatType) GetProfileType() ProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret ProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedProfileMatchStatType) GetProfileTypeOk() (*ProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *SuspendedProfileMatchStatType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given ProfileTypeType and assigns it to the ProfileType field.
func (o *SuspendedProfileMatchStatType) SetProfileType(v ProfileTypeType) {
	o.ProfileType = &v
}

func (o SuspendedProfileMatchStatType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedProfileMatchStatType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchCriteria) {
		toSerialize["matchCriteria"] = o.MatchCriteria
	}
	if !IsNil(o.ThresholdPoints) {
		toSerialize["thresholdPoints"] = o.ThresholdPoints
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	return toSerialize, nil
}

type NullableSuspendedProfileMatchStatType struct {
	value *SuspendedProfileMatchStatType
	isSet bool
}

func (v NullableSuspendedProfileMatchStatType) Get() *SuspendedProfileMatchStatType {
	return v.value
}

func (v *NullableSuspendedProfileMatchStatType) Set(val *SuspendedProfileMatchStatType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedProfileMatchStatType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedProfileMatchStatType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedProfileMatchStatType(val *SuspendedProfileMatchStatType) *NullableSuspendedProfileMatchStatType {
	return &NullableSuspendedProfileMatchStatType{value: val, isSet: true}
}

func (v NullableSuspendedProfileMatchStatType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedProfileMatchStatType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


