/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the AddressValidationInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressValidationInfoType{}

// AddressValidationInfoType struct for AddressValidationInfoType
type AddressValidationInfoType struct {
	// The suggestion that should be presented to the user as a possible match to their input.
	AddressText *string `json:"addressText,omitempty"`
	// The ID of the address recieved as part of an address search validation.
	ExternalAddressId *string `json:"externalAddressId,omitempty"`
	// If the Type is 'Address' then the Id can be passed to the Retrieve service. Any other Id should be passed as the Container to a further Find request to get more results.
	AddressType *string `json:"addressType,omitempty"`
}

// NewAddressValidationInfoType instantiates a new AddressValidationInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressValidationInfoType() *AddressValidationInfoType {
	this := AddressValidationInfoType{}
	return &this
}

// NewAddressValidationInfoTypeWithDefaults instantiates a new AddressValidationInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressValidationInfoTypeWithDefaults() *AddressValidationInfoType {
	this := AddressValidationInfoType{}
	return &this
}

// GetAddressText returns the AddressText field value if set, zero value otherwise.
func (o *AddressValidationInfoType) GetAddressText() string {
	if o == nil || IsNil(o.AddressText) {
		var ret string
		return ret
	}
	return *o.AddressText
}

// GetAddressTextOk returns a tuple with the AddressText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressValidationInfoType) GetAddressTextOk() (*string, bool) {
	if o == nil || IsNil(o.AddressText) {
		return nil, false
	}
	return o.AddressText, true
}

// HasAddressText returns a boolean if a field has been set.
func (o *AddressValidationInfoType) HasAddressText() bool {
	if o != nil && !IsNil(o.AddressText) {
		return true
	}

	return false
}

// SetAddressText gets a reference to the given string and assigns it to the AddressText field.
func (o *AddressValidationInfoType) SetAddressText(v string) {
	o.AddressText = &v
}

// GetExternalAddressId returns the ExternalAddressId field value if set, zero value otherwise.
func (o *AddressValidationInfoType) GetExternalAddressId() string {
	if o == nil || IsNil(o.ExternalAddressId) {
		var ret string
		return ret
	}
	return *o.ExternalAddressId
}

// GetExternalAddressIdOk returns a tuple with the ExternalAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressValidationInfoType) GetExternalAddressIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalAddressId) {
		return nil, false
	}
	return o.ExternalAddressId, true
}

// HasExternalAddressId returns a boolean if a field has been set.
func (o *AddressValidationInfoType) HasExternalAddressId() bool {
	if o != nil && !IsNil(o.ExternalAddressId) {
		return true
	}

	return false
}

// SetExternalAddressId gets a reference to the given string and assigns it to the ExternalAddressId field.
func (o *AddressValidationInfoType) SetExternalAddressId(v string) {
	o.ExternalAddressId = &v
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *AddressValidationInfoType) GetAddressType() string {
	if o == nil || IsNil(o.AddressType) {
		var ret string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressValidationInfoType) GetAddressTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AddressType) {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *AddressValidationInfoType) HasAddressType() bool {
	if o != nil && !IsNil(o.AddressType) {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given string and assigns it to the AddressType field.
func (o *AddressValidationInfoType) SetAddressType(v string) {
	o.AddressType = &v
}

func (o AddressValidationInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressValidationInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressText) {
		toSerialize["addressText"] = o.AddressText
	}
	if !IsNil(o.ExternalAddressId) {
		toSerialize["externalAddressId"] = o.ExternalAddressId
	}
	if !IsNil(o.AddressType) {
		toSerialize["addressType"] = o.AddressType
	}
	return toSerialize, nil
}

type NullableAddressValidationInfoType struct {
	value *AddressValidationInfoType
	isSet bool
}

func (v NullableAddressValidationInfoType) Get() *AddressValidationInfoType {
	return v.value
}

func (v *NullableAddressValidationInfoType) Set(val *AddressValidationInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressValidationInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressValidationInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressValidationInfoType(val *AddressValidationInfoType) *NullableAddressValidationInfoType {
	return &NullableAddressValidationInfoType{value: val, isSet: true}
}

func (v NullableAddressValidationInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressValidationInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


