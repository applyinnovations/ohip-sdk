/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StayInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayInfoType{}

// StayInfoType Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.
type StayInfoType struct {
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	DepartureDate *string `json:"departureDate,omitempty"`
	OriginalTimeSpan *TimeSpanType `json:"originalTimeSpan,omitempty"`
	ExpectedTimes *ResExpectedTimesType `json:"expectedTimes,omitempty"`
	// A collection of Guest Counts associated with Room Stay.
	AdultCount *int32 `json:"adultCount,omitempty"`
	// A collection of Child Counts associated with Room Stay.
	ChildCount *int32 `json:"childCount,omitempty"`
	// Room class code
	RoomClass *string `json:"roomClass,omitempty"`
	// Room type code
	RoomType *string `json:"roomType,omitempty"`
	// Room Id
	NumberOfRooms *int32 `json:"numberOfRooms,omitempty"`
	// Room Id
	RoomNumber *string `json:"roomNumber,omitempty"`
	// Rate plan code
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	RateAmount *CurrencyAmountType `json:"rateAmount,omitempty"`
	Points *PointsType `json:"points,omitempty"`
	// Whether this rate should be suppressed from view
	RateSuppressed *bool `json:"rateSuppressed,omitempty"`
	ReservationBlock *ReservationBlockType `json:"reservationBlock,omitempty"`
	// Booking channel code
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	// Party code
	PartyCode *string `json:"partyCode,omitempty"`
	// True if the rate is a fixed rate, otherwise false
	FixedRate *bool `json:"fixedRate,omitempty"`
	TotalAmount *CurrencyAmountType `json:"totalAmount,omitempty"`
	Guarantee *ResGuaranteeType `json:"guarantee,omitempty"`
	Promotion *PromotionType `json:"promotion,omitempty"`
	// Market code
	MarketCode *string `json:"marketCode,omitempty"`
	// Source of business
	SourceOfBusiness *string `json:"sourceOfBusiness,omitempty"`
	// Description of the source of business.
	SourceOfBusinessDescription *string `json:"sourceOfBusinessDescription,omitempty"`
	Balance *CurrencyAmountType `json:"balance,omitempty"`
	CompBalance *CurrencyAmountType `json:"compBalance,omitempty"`
	// Room type code that was charged
	RoomTypeCharged *string `json:"roomTypeCharged,omitempty"`
	DepositPayments *CurrencyAmountType `json:"depositPayments,omitempty"`
	GuestServiceStatus *GuestHousekeepingServiceRequestType `json:"guestServiceStatus,omitempty"`
	// Indicates that this reservation is scheduled for automated check out.
	ScheduledCheckoutTime *string `json:"scheduledCheckoutTime,omitempty"`
	// When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.
	RoomNumberLocked *bool `json:"roomNumberLocked,omitempty"`
	// True indicates as pseudo room type. This is usually used for a posting master reservation.
	PseudoRoom *bool `json:"pseudoRoom,omitempty"`
}

// NewStayInfoType instantiates a new StayInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayInfoType() *StayInfoType {
	this := StayInfoType{}
	return &this
}

// NewStayInfoTypeWithDefaults instantiates a new StayInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayInfoTypeWithDefaults() *StayInfoType {
	this := StayInfoType{}
	return &this
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *StayInfoType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *StayInfoType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *StayInfoType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *StayInfoType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *StayInfoType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *StayInfoType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetOriginalTimeSpan returns the OriginalTimeSpan field value if set, zero value otherwise.
func (o *StayInfoType) GetOriginalTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.OriginalTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.OriginalTimeSpan
}

// GetOriginalTimeSpanOk returns a tuple with the OriginalTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetOriginalTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.OriginalTimeSpan) {
		return nil, false
	}
	return o.OriginalTimeSpan, true
}

// HasOriginalTimeSpan returns a boolean if a field has been set.
func (o *StayInfoType) HasOriginalTimeSpan() bool {
	if o != nil && !IsNil(o.OriginalTimeSpan) {
		return true
	}

	return false
}

// SetOriginalTimeSpan gets a reference to the given TimeSpanType and assigns it to the OriginalTimeSpan field.
func (o *StayInfoType) SetOriginalTimeSpan(v TimeSpanType) {
	o.OriginalTimeSpan = &v
}

// GetExpectedTimes returns the ExpectedTimes field value if set, zero value otherwise.
func (o *StayInfoType) GetExpectedTimes() ResExpectedTimesType {
	if o == nil || IsNil(o.ExpectedTimes) {
		var ret ResExpectedTimesType
		return ret
	}
	return *o.ExpectedTimes
}

// GetExpectedTimesOk returns a tuple with the ExpectedTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetExpectedTimesOk() (*ResExpectedTimesType, bool) {
	if o == nil || IsNil(o.ExpectedTimes) {
		return nil, false
	}
	return o.ExpectedTimes, true
}

// HasExpectedTimes returns a boolean if a field has been set.
func (o *StayInfoType) HasExpectedTimes() bool {
	if o != nil && !IsNil(o.ExpectedTimes) {
		return true
	}

	return false
}

// SetExpectedTimes gets a reference to the given ResExpectedTimesType and assigns it to the ExpectedTimes field.
func (o *StayInfoType) SetExpectedTimes(v ResExpectedTimesType) {
	o.ExpectedTimes = &v
}

// GetAdultCount returns the AdultCount field value if set, zero value otherwise.
func (o *StayInfoType) GetAdultCount() int32 {
	if o == nil || IsNil(o.AdultCount) {
		var ret int32
		return ret
	}
	return *o.AdultCount
}

// GetAdultCountOk returns a tuple with the AdultCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetAdultCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AdultCount) {
		return nil, false
	}
	return o.AdultCount, true
}

// HasAdultCount returns a boolean if a field has been set.
func (o *StayInfoType) HasAdultCount() bool {
	if o != nil && !IsNil(o.AdultCount) {
		return true
	}

	return false
}

// SetAdultCount gets a reference to the given int32 and assigns it to the AdultCount field.
func (o *StayInfoType) SetAdultCount(v int32) {
	o.AdultCount = &v
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise.
func (o *StayInfoType) GetChildCount() int32 {
	if o == nil || IsNil(o.ChildCount) {
		var ret int32
		return ret
	}
	return *o.ChildCount
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetChildCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ChildCount) {
		return nil, false
	}
	return o.ChildCount, true
}

// HasChildCount returns a boolean if a field has been set.
func (o *StayInfoType) HasChildCount() bool {
	if o != nil && !IsNil(o.ChildCount) {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given int32 and assigns it to the ChildCount field.
func (o *StayInfoType) SetChildCount(v int32) {
	o.ChildCount = &v
}

// GetRoomClass returns the RoomClass field value if set, zero value otherwise.
func (o *StayInfoType) GetRoomClass() string {
	if o == nil || IsNil(o.RoomClass) {
		var ret string
		return ret
	}
	return *o.RoomClass
}

// GetRoomClassOk returns a tuple with the RoomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRoomClassOk() (*string, bool) {
	if o == nil || IsNil(o.RoomClass) {
		return nil, false
	}
	return o.RoomClass, true
}

// HasRoomClass returns a boolean if a field has been set.
func (o *StayInfoType) HasRoomClass() bool {
	if o != nil && !IsNil(o.RoomClass) {
		return true
	}

	return false
}

// SetRoomClass gets a reference to the given string and assigns it to the RoomClass field.
func (o *StayInfoType) SetRoomClass(v string) {
	o.RoomClass = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *StayInfoType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *StayInfoType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *StayInfoType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetNumberOfRooms returns the NumberOfRooms field value if set, zero value otherwise.
func (o *StayInfoType) GetNumberOfRooms() int32 {
	if o == nil || IsNil(o.NumberOfRooms) {
		var ret int32
		return ret
	}
	return *o.NumberOfRooms
}

// GetNumberOfRoomsOk returns a tuple with the NumberOfRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetNumberOfRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfRooms) {
		return nil, false
	}
	return o.NumberOfRooms, true
}

// HasNumberOfRooms returns a boolean if a field has been set.
func (o *StayInfoType) HasNumberOfRooms() bool {
	if o != nil && !IsNil(o.NumberOfRooms) {
		return true
	}

	return false
}

// SetNumberOfRooms gets a reference to the given int32 and assigns it to the NumberOfRooms field.
func (o *StayInfoType) SetNumberOfRooms(v int32) {
	o.NumberOfRooms = &v
}

// GetRoomNumber returns the RoomNumber field value if set, zero value otherwise.
func (o *StayInfoType) GetRoomNumber() string {
	if o == nil || IsNil(o.RoomNumber) {
		var ret string
		return ret
	}
	return *o.RoomNumber
}

// GetRoomNumberOk returns a tuple with the RoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoomNumber) {
		return nil, false
	}
	return o.RoomNumber, true
}

// HasRoomNumber returns a boolean if a field has been set.
func (o *StayInfoType) HasRoomNumber() bool {
	if o != nil && !IsNil(o.RoomNumber) {
		return true
	}

	return false
}

// SetRoomNumber gets a reference to the given string and assigns it to the RoomNumber field.
func (o *StayInfoType) SetRoomNumber(v string) {
	o.RoomNumber = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *StayInfoType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *StayInfoType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *StayInfoType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetRateAmount returns the RateAmount field value if set, zero value otherwise.
func (o *StayInfoType) GetRateAmount() CurrencyAmountType {
	if o == nil || IsNil(o.RateAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.RateAmount
}

// GetRateAmountOk returns a tuple with the RateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRateAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.RateAmount) {
		return nil, false
	}
	return o.RateAmount, true
}

// HasRateAmount returns a boolean if a field has been set.
func (o *StayInfoType) HasRateAmount() bool {
	if o != nil && !IsNil(o.RateAmount) {
		return true
	}

	return false
}

// SetRateAmount gets a reference to the given CurrencyAmountType and assigns it to the RateAmount field.
func (o *StayInfoType) SetRateAmount(v CurrencyAmountType) {
	o.RateAmount = &v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *StayInfoType) GetPoints() PointsType {
	if o == nil || IsNil(o.Points) {
		var ret PointsType
		return ret
	}
	return *o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetPointsOk() (*PointsType, bool) {
	if o == nil || IsNil(o.Points) {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *StayInfoType) HasPoints() bool {
	if o != nil && !IsNil(o.Points) {
		return true
	}

	return false
}

// SetPoints gets a reference to the given PointsType and assigns it to the Points field.
func (o *StayInfoType) SetPoints(v PointsType) {
	o.Points = &v
}

// GetRateSuppressed returns the RateSuppressed field value if set, zero value otherwise.
func (o *StayInfoType) GetRateSuppressed() bool {
	if o == nil || IsNil(o.RateSuppressed) {
		var ret bool
		return ret
	}
	return *o.RateSuppressed
}

// GetRateSuppressedOk returns a tuple with the RateSuppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRateSuppressedOk() (*bool, bool) {
	if o == nil || IsNil(o.RateSuppressed) {
		return nil, false
	}
	return o.RateSuppressed, true
}

// HasRateSuppressed returns a boolean if a field has been set.
func (o *StayInfoType) HasRateSuppressed() bool {
	if o != nil && !IsNil(o.RateSuppressed) {
		return true
	}

	return false
}

// SetRateSuppressed gets a reference to the given bool and assigns it to the RateSuppressed field.
func (o *StayInfoType) SetRateSuppressed(v bool) {
	o.RateSuppressed = &v
}

// GetReservationBlock returns the ReservationBlock field value if set, zero value otherwise.
func (o *StayInfoType) GetReservationBlock() ReservationBlockType {
	if o == nil || IsNil(o.ReservationBlock) {
		var ret ReservationBlockType
		return ret
	}
	return *o.ReservationBlock
}

// GetReservationBlockOk returns a tuple with the ReservationBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetReservationBlockOk() (*ReservationBlockType, bool) {
	if o == nil || IsNil(o.ReservationBlock) {
		return nil, false
	}
	return o.ReservationBlock, true
}

// HasReservationBlock returns a boolean if a field has been set.
func (o *StayInfoType) HasReservationBlock() bool {
	if o != nil && !IsNil(o.ReservationBlock) {
		return true
	}

	return false
}

// SetReservationBlock gets a reference to the given ReservationBlockType and assigns it to the ReservationBlock field.
func (o *StayInfoType) SetReservationBlock(v ReservationBlockType) {
	o.ReservationBlock = &v
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *StayInfoType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *StayInfoType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *StayInfoType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetPartyCode returns the PartyCode field value if set, zero value otherwise.
func (o *StayInfoType) GetPartyCode() string {
	if o == nil || IsNil(o.PartyCode) {
		var ret string
		return ret
	}
	return *o.PartyCode
}

// GetPartyCodeOk returns a tuple with the PartyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetPartyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PartyCode) {
		return nil, false
	}
	return o.PartyCode, true
}

// HasPartyCode returns a boolean if a field has been set.
func (o *StayInfoType) HasPartyCode() bool {
	if o != nil && !IsNil(o.PartyCode) {
		return true
	}

	return false
}

// SetPartyCode gets a reference to the given string and assigns it to the PartyCode field.
func (o *StayInfoType) SetPartyCode(v string) {
	o.PartyCode = &v
}

// GetFixedRate returns the FixedRate field value if set, zero value otherwise.
func (o *StayInfoType) GetFixedRate() bool {
	if o == nil || IsNil(o.FixedRate) {
		var ret bool
		return ret
	}
	return *o.FixedRate
}

// GetFixedRateOk returns a tuple with the FixedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetFixedRateOk() (*bool, bool) {
	if o == nil || IsNil(o.FixedRate) {
		return nil, false
	}
	return o.FixedRate, true
}

// HasFixedRate returns a boolean if a field has been set.
func (o *StayInfoType) HasFixedRate() bool {
	if o != nil && !IsNil(o.FixedRate) {
		return true
	}

	return false
}

// SetFixedRate gets a reference to the given bool and assigns it to the FixedRate field.
func (o *StayInfoType) SetFixedRate(v bool) {
	o.FixedRate = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *StayInfoType) GetTotalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.TotalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetTotalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *StayInfoType) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given CurrencyAmountType and assigns it to the TotalAmount field.
func (o *StayInfoType) SetTotalAmount(v CurrencyAmountType) {
	o.TotalAmount = &v
}

// GetGuarantee returns the Guarantee field value if set, zero value otherwise.
func (o *StayInfoType) GetGuarantee() ResGuaranteeType {
	if o == nil || IsNil(o.Guarantee) {
		var ret ResGuaranteeType
		return ret
	}
	return *o.Guarantee
}

// GetGuaranteeOk returns a tuple with the Guarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetGuaranteeOk() (*ResGuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantee) {
		return nil, false
	}
	return o.Guarantee, true
}

// HasGuarantee returns a boolean if a field has been set.
func (o *StayInfoType) HasGuarantee() bool {
	if o != nil && !IsNil(o.Guarantee) {
		return true
	}

	return false
}

// SetGuarantee gets a reference to the given ResGuaranteeType and assigns it to the Guarantee field.
func (o *StayInfoType) SetGuarantee(v ResGuaranteeType) {
	o.Guarantee = &v
}

// GetPromotion returns the Promotion field value if set, zero value otherwise.
func (o *StayInfoType) GetPromotion() PromotionType {
	if o == nil || IsNil(o.Promotion) {
		var ret PromotionType
		return ret
	}
	return *o.Promotion
}

// GetPromotionOk returns a tuple with the Promotion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetPromotionOk() (*PromotionType, bool) {
	if o == nil || IsNil(o.Promotion) {
		return nil, false
	}
	return o.Promotion, true
}

// HasPromotion returns a boolean if a field has been set.
func (o *StayInfoType) HasPromotion() bool {
	if o != nil && !IsNil(o.Promotion) {
		return true
	}

	return false
}

// SetPromotion gets a reference to the given PromotionType and assigns it to the Promotion field.
func (o *StayInfoType) SetPromotion(v PromotionType) {
	o.Promotion = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *StayInfoType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *StayInfoType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *StayInfoType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetSourceOfBusiness returns the SourceOfBusiness field value if set, zero value otherwise.
func (o *StayInfoType) GetSourceOfBusiness() string {
	if o == nil || IsNil(o.SourceOfBusiness) {
		var ret string
		return ret
	}
	return *o.SourceOfBusiness
}

// GetSourceOfBusinessOk returns a tuple with the SourceOfBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetSourceOfBusinessOk() (*string, bool) {
	if o == nil || IsNil(o.SourceOfBusiness) {
		return nil, false
	}
	return o.SourceOfBusiness, true
}

// HasSourceOfBusiness returns a boolean if a field has been set.
func (o *StayInfoType) HasSourceOfBusiness() bool {
	if o != nil && !IsNil(o.SourceOfBusiness) {
		return true
	}

	return false
}

// SetSourceOfBusiness gets a reference to the given string and assigns it to the SourceOfBusiness field.
func (o *StayInfoType) SetSourceOfBusiness(v string) {
	o.SourceOfBusiness = &v
}

// GetSourceOfBusinessDescription returns the SourceOfBusinessDescription field value if set, zero value otherwise.
func (o *StayInfoType) GetSourceOfBusinessDescription() string {
	if o == nil || IsNil(o.SourceOfBusinessDescription) {
		var ret string
		return ret
	}
	return *o.SourceOfBusinessDescription
}

// GetSourceOfBusinessDescriptionOk returns a tuple with the SourceOfBusinessDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetSourceOfBusinessDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceOfBusinessDescription) {
		return nil, false
	}
	return o.SourceOfBusinessDescription, true
}

// HasSourceOfBusinessDescription returns a boolean if a field has been set.
func (o *StayInfoType) HasSourceOfBusinessDescription() bool {
	if o != nil && !IsNil(o.SourceOfBusinessDescription) {
		return true
	}

	return false
}

// SetSourceOfBusinessDescription gets a reference to the given string and assigns it to the SourceOfBusinessDescription field.
func (o *StayInfoType) SetSourceOfBusinessDescription(v string) {
	o.SourceOfBusinessDescription = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *StayInfoType) GetBalance() CurrencyAmountType {
	if o == nil || IsNil(o.Balance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *StayInfoType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given CurrencyAmountType and assigns it to the Balance field.
func (o *StayInfoType) SetBalance(v CurrencyAmountType) {
	o.Balance = &v
}

// GetCompBalance returns the CompBalance field value if set, zero value otherwise.
func (o *StayInfoType) GetCompBalance() CurrencyAmountType {
	if o == nil || IsNil(o.CompBalance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CompBalance
}

// GetCompBalanceOk returns a tuple with the CompBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetCompBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CompBalance) {
		return nil, false
	}
	return o.CompBalance, true
}

// HasCompBalance returns a boolean if a field has been set.
func (o *StayInfoType) HasCompBalance() bool {
	if o != nil && !IsNil(o.CompBalance) {
		return true
	}

	return false
}

// SetCompBalance gets a reference to the given CurrencyAmountType and assigns it to the CompBalance field.
func (o *StayInfoType) SetCompBalance(v CurrencyAmountType) {
	o.CompBalance = &v
}

// GetRoomTypeCharged returns the RoomTypeCharged field value if set, zero value otherwise.
func (o *StayInfoType) GetRoomTypeCharged() string {
	if o == nil || IsNil(o.RoomTypeCharged) {
		var ret string
		return ret
	}
	return *o.RoomTypeCharged
}

// GetRoomTypeChargedOk returns a tuple with the RoomTypeCharged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRoomTypeChargedOk() (*string, bool) {
	if o == nil || IsNil(o.RoomTypeCharged) {
		return nil, false
	}
	return o.RoomTypeCharged, true
}

// HasRoomTypeCharged returns a boolean if a field has been set.
func (o *StayInfoType) HasRoomTypeCharged() bool {
	if o != nil && !IsNil(o.RoomTypeCharged) {
		return true
	}

	return false
}

// SetRoomTypeCharged gets a reference to the given string and assigns it to the RoomTypeCharged field.
func (o *StayInfoType) SetRoomTypeCharged(v string) {
	o.RoomTypeCharged = &v
}

// GetDepositPayments returns the DepositPayments field value if set, zero value otherwise.
func (o *StayInfoType) GetDepositPayments() CurrencyAmountType {
	if o == nil || IsNil(o.DepositPayments) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DepositPayments
}

// GetDepositPaymentsOk returns a tuple with the DepositPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetDepositPaymentsOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DepositPayments) {
		return nil, false
	}
	return o.DepositPayments, true
}

// HasDepositPayments returns a boolean if a field has been set.
func (o *StayInfoType) HasDepositPayments() bool {
	if o != nil && !IsNil(o.DepositPayments) {
		return true
	}

	return false
}

// SetDepositPayments gets a reference to the given CurrencyAmountType and assigns it to the DepositPayments field.
func (o *StayInfoType) SetDepositPayments(v CurrencyAmountType) {
	o.DepositPayments = &v
}

// GetGuestServiceStatus returns the GuestServiceStatus field value if set, zero value otherwise.
func (o *StayInfoType) GetGuestServiceStatus() GuestHousekeepingServiceRequestType {
	if o == nil || IsNil(o.GuestServiceStatus) {
		var ret GuestHousekeepingServiceRequestType
		return ret
	}
	return *o.GuestServiceStatus
}

// GetGuestServiceStatusOk returns a tuple with the GuestServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetGuestServiceStatusOk() (*GuestHousekeepingServiceRequestType, bool) {
	if o == nil || IsNil(o.GuestServiceStatus) {
		return nil, false
	}
	return o.GuestServiceStatus, true
}

// HasGuestServiceStatus returns a boolean if a field has been set.
func (o *StayInfoType) HasGuestServiceStatus() bool {
	if o != nil && !IsNil(o.GuestServiceStatus) {
		return true
	}

	return false
}

// SetGuestServiceStatus gets a reference to the given GuestHousekeepingServiceRequestType and assigns it to the GuestServiceStatus field.
func (o *StayInfoType) SetGuestServiceStatus(v GuestHousekeepingServiceRequestType) {
	o.GuestServiceStatus = &v
}

// GetScheduledCheckoutTime returns the ScheduledCheckoutTime field value if set, zero value otherwise.
func (o *StayInfoType) GetScheduledCheckoutTime() string {
	if o == nil || IsNil(o.ScheduledCheckoutTime) {
		var ret string
		return ret
	}
	return *o.ScheduledCheckoutTime
}

// GetScheduledCheckoutTimeOk returns a tuple with the ScheduledCheckoutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetScheduledCheckoutTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledCheckoutTime) {
		return nil, false
	}
	return o.ScheduledCheckoutTime, true
}

// HasScheduledCheckoutTime returns a boolean if a field has been set.
func (o *StayInfoType) HasScheduledCheckoutTime() bool {
	if o != nil && !IsNil(o.ScheduledCheckoutTime) {
		return true
	}

	return false
}

// SetScheduledCheckoutTime gets a reference to the given string and assigns it to the ScheduledCheckoutTime field.
func (o *StayInfoType) SetScheduledCheckoutTime(v string) {
	o.ScheduledCheckoutTime = &v
}

// GetRoomNumberLocked returns the RoomNumberLocked field value if set, zero value otherwise.
func (o *StayInfoType) GetRoomNumberLocked() bool {
	if o == nil || IsNil(o.RoomNumberLocked) {
		var ret bool
		return ret
	}
	return *o.RoomNumberLocked
}

// GetRoomNumberLockedOk returns a tuple with the RoomNumberLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetRoomNumberLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomNumberLocked) {
		return nil, false
	}
	return o.RoomNumberLocked, true
}

// HasRoomNumberLocked returns a boolean if a field has been set.
func (o *StayInfoType) HasRoomNumberLocked() bool {
	if o != nil && !IsNil(o.RoomNumberLocked) {
		return true
	}

	return false
}

// SetRoomNumberLocked gets a reference to the given bool and assigns it to the RoomNumberLocked field.
func (o *StayInfoType) SetRoomNumberLocked(v bool) {
	o.RoomNumberLocked = &v
}

// GetPseudoRoom returns the PseudoRoom field value if set, zero value otherwise.
func (o *StayInfoType) GetPseudoRoom() bool {
	if o == nil || IsNil(o.PseudoRoom) {
		var ret bool
		return ret
	}
	return *o.PseudoRoom
}

// GetPseudoRoomOk returns a tuple with the PseudoRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayInfoType) GetPseudoRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.PseudoRoom) {
		return nil, false
	}
	return o.PseudoRoom, true
}

// HasPseudoRoom returns a boolean if a field has been set.
func (o *StayInfoType) HasPseudoRoom() bool {
	if o != nil && !IsNil(o.PseudoRoom) {
		return true
	}

	return false
}

// SetPseudoRoom gets a reference to the given bool and assigns it to the PseudoRoom field.
func (o *StayInfoType) SetPseudoRoom(v bool) {
	o.PseudoRoom = &v
}

func (o StayInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.OriginalTimeSpan) {
		toSerialize["originalTimeSpan"] = o.OriginalTimeSpan
	}
	if !IsNil(o.ExpectedTimes) {
		toSerialize["expectedTimes"] = o.ExpectedTimes
	}
	if !IsNil(o.AdultCount) {
		toSerialize["adultCount"] = o.AdultCount
	}
	if !IsNil(o.ChildCount) {
		toSerialize["childCount"] = o.ChildCount
	}
	if !IsNil(o.RoomClass) {
		toSerialize["roomClass"] = o.RoomClass
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.NumberOfRooms) {
		toSerialize["numberOfRooms"] = o.NumberOfRooms
	}
	if !IsNil(o.RoomNumber) {
		toSerialize["roomNumber"] = o.RoomNumber
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.RateAmount) {
		toSerialize["rateAmount"] = o.RateAmount
	}
	if !IsNil(o.Points) {
		toSerialize["points"] = o.Points
	}
	if !IsNil(o.RateSuppressed) {
		toSerialize["rateSuppressed"] = o.RateSuppressed
	}
	if !IsNil(o.ReservationBlock) {
		toSerialize["reservationBlock"] = o.ReservationBlock
	}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.PartyCode) {
		toSerialize["partyCode"] = o.PartyCode
	}
	if !IsNil(o.FixedRate) {
		toSerialize["fixedRate"] = o.FixedRate
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.Guarantee) {
		toSerialize["guarantee"] = o.Guarantee
	}
	if !IsNil(o.Promotion) {
		toSerialize["promotion"] = o.Promotion
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.SourceOfBusiness) {
		toSerialize["sourceOfBusiness"] = o.SourceOfBusiness
	}
	if !IsNil(o.SourceOfBusinessDescription) {
		toSerialize["sourceOfBusinessDescription"] = o.SourceOfBusinessDescription
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CompBalance) {
		toSerialize["compBalance"] = o.CompBalance
	}
	if !IsNil(o.RoomTypeCharged) {
		toSerialize["roomTypeCharged"] = o.RoomTypeCharged
	}
	if !IsNil(o.DepositPayments) {
		toSerialize["depositPayments"] = o.DepositPayments
	}
	if !IsNil(o.GuestServiceStatus) {
		toSerialize["guestServiceStatus"] = o.GuestServiceStatus
	}
	if !IsNil(o.ScheduledCheckoutTime) {
		toSerialize["scheduledCheckoutTime"] = o.ScheduledCheckoutTime
	}
	if !IsNil(o.RoomNumberLocked) {
		toSerialize["roomNumberLocked"] = o.RoomNumberLocked
	}
	if !IsNil(o.PseudoRoom) {
		toSerialize["pseudoRoom"] = o.PseudoRoom
	}
	return toSerialize, nil
}

type NullableStayInfoType struct {
	value *StayInfoType
	isSet bool
}

func (v NullableStayInfoType) Get() *StayInfoType {
	return v.value
}

func (v *NullableStayInfoType) Set(val *StayInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayInfoType(val *StayInfoType) *NullableStayInfoType {
	return &NullableStayInfoType{value: val, isSet: true}
}

func (v NullableStayInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


