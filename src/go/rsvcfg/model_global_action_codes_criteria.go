/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the GlobalActionCodesCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalActionCodesCriteria{}

// GlobalActionCodesCriteria Request object for creating Global Action Codes.
type GlobalActionCodesCriteria struct {
	GlobalActionCodes *GlobalActionCodesType `json:"globalActionCodes,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewGlobalActionCodesCriteria instantiates a new GlobalActionCodesCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalActionCodesCriteria() *GlobalActionCodesCriteria {
	this := GlobalActionCodesCriteria{}
	return &this
}

// NewGlobalActionCodesCriteriaWithDefaults instantiates a new GlobalActionCodesCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalActionCodesCriteriaWithDefaults() *GlobalActionCodesCriteria {
	this := GlobalActionCodesCriteria{}
	return &this
}

// GetGlobalActionCodes returns the GlobalActionCodes field value if set, zero value otherwise.
func (o *GlobalActionCodesCriteria) GetGlobalActionCodes() GlobalActionCodesType {
	if o == nil || IsNil(o.GlobalActionCodes) {
		var ret GlobalActionCodesType
		return ret
	}
	return *o.GlobalActionCodes
}

// GetGlobalActionCodesOk returns a tuple with the GlobalActionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalActionCodesCriteria) GetGlobalActionCodesOk() (*GlobalActionCodesType, bool) {
	if o == nil || IsNil(o.GlobalActionCodes) {
		return nil, false
	}
	return o.GlobalActionCodes, true
}

// HasGlobalActionCodes returns a boolean if a field has been set.
func (o *GlobalActionCodesCriteria) HasGlobalActionCodes() bool {
	if o != nil && !IsNil(o.GlobalActionCodes) {
		return true
	}

	return false
}

// SetGlobalActionCodes gets a reference to the given GlobalActionCodesType and assigns it to the GlobalActionCodes field.
func (o *GlobalActionCodesCriteria) SetGlobalActionCodes(v GlobalActionCodesType) {
	o.GlobalActionCodes = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GlobalActionCodesCriteria) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalActionCodesCriteria) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GlobalActionCodesCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *GlobalActionCodesCriteria) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *GlobalActionCodesCriteria) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalActionCodesCriteria) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *GlobalActionCodesCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *GlobalActionCodesCriteria) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o GlobalActionCodesCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalActionCodesCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalActionCodes) {
		toSerialize["globalActionCodes"] = o.GlobalActionCodes
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableGlobalActionCodesCriteria struct {
	value *GlobalActionCodesCriteria
	isSet bool
}

func (v NullableGlobalActionCodesCriteria) Get() *GlobalActionCodesCriteria {
	return v.value
}

func (v *NullableGlobalActionCodesCriteria) Set(val *GlobalActionCodesCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalActionCodesCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalActionCodesCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalActionCodesCriteria(val *GlobalActionCodesCriteria) *NullableGlobalActionCodesCriteria {
	return &NullableGlobalActionCodesCriteria{value: val, isSet: true}
}

func (v NullableGlobalActionCodesCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalActionCodesCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


