/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the GuaranteeConfigType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuaranteeConfigType{}

// GuaranteeConfigType Specifies Guarantee Code attributes.
type GuaranteeConfigType struct {
	// Description of the Guarantee Code.
	Description *string `json:"description,omitempty"`
	// Code assigned to the Guarantee.
	GuaranteeCode *string `json:"guaranteeCode,omitempty"`
	// Indicates the reservation type is inactive or not.
	Inactive *bool `json:"inactive,omitempty"`
	// Represents the late arrival time.
	LateArrival *string `json:"lateArrival,omitempty"`
	MassCancellation *GuaranteeConfigTypeMassCancellation `json:"massCancellation,omitempty"`
	// If true indicates this Guarantee Code is used only to hold the inventory during reservation process.
	OnHold *bool `json:"onHold,omitempty"`
	// Display Order sequence.
	OrderSequence *float32 `json:"orderSequence,omitempty"`
	PaymentTypes *PaymentTypesType `json:"paymentTypes,omitempty"`
	Requirements *GuaranteeRequirementsType `json:"requirements,omitempty"`
	// If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.
	ReserveInventory *bool `json:"reserveInventory,omitempty"`
	ShortDescription *TranslationTextType80 `json:"shortDescription,omitempty"`
}

// NewGuaranteeConfigType instantiates a new GuaranteeConfigType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuaranteeConfigType() *GuaranteeConfigType {
	this := GuaranteeConfigType{}
	return &this
}

// NewGuaranteeConfigTypeWithDefaults instantiates a new GuaranteeConfigType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuaranteeConfigTypeWithDefaults() *GuaranteeConfigType {
	this := GuaranteeConfigType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GuaranteeConfigType) SetDescription(v string) {
	o.Description = &v
}

// GetGuaranteeCode returns the GuaranteeCode field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetGuaranteeCode() string {
	if o == nil || IsNil(o.GuaranteeCode) {
		var ret string
		return ret
	}
	return *o.GuaranteeCode
}

// GetGuaranteeCodeOk returns a tuple with the GuaranteeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetGuaranteeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GuaranteeCode) {
		return nil, false
	}
	return o.GuaranteeCode, true
}

// HasGuaranteeCode returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasGuaranteeCode() bool {
	if o != nil && !IsNil(o.GuaranteeCode) {
		return true
	}

	return false
}

// SetGuaranteeCode gets a reference to the given string and assigns it to the GuaranteeCode field.
func (o *GuaranteeConfigType) SetGuaranteeCode(v string) {
	o.GuaranteeCode = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *GuaranteeConfigType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetLateArrival returns the LateArrival field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetLateArrival() string {
	if o == nil || IsNil(o.LateArrival) {
		var ret string
		return ret
	}
	return *o.LateArrival
}

// GetLateArrivalOk returns a tuple with the LateArrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetLateArrivalOk() (*string, bool) {
	if o == nil || IsNil(o.LateArrival) {
		return nil, false
	}
	return o.LateArrival, true
}

// HasLateArrival returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasLateArrival() bool {
	if o != nil && !IsNil(o.LateArrival) {
		return true
	}

	return false
}

// SetLateArrival gets a reference to the given string and assigns it to the LateArrival field.
func (o *GuaranteeConfigType) SetLateArrival(v string) {
	o.LateArrival = &v
}

// GetMassCancellation returns the MassCancellation field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetMassCancellation() GuaranteeConfigTypeMassCancellation {
	if o == nil || IsNil(o.MassCancellation) {
		var ret GuaranteeConfigTypeMassCancellation
		return ret
	}
	return *o.MassCancellation
}

// GetMassCancellationOk returns a tuple with the MassCancellation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetMassCancellationOk() (*GuaranteeConfigTypeMassCancellation, bool) {
	if o == nil || IsNil(o.MassCancellation) {
		return nil, false
	}
	return o.MassCancellation, true
}

// HasMassCancellation returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasMassCancellation() bool {
	if o != nil && !IsNil(o.MassCancellation) {
		return true
	}

	return false
}

// SetMassCancellation gets a reference to the given GuaranteeConfigTypeMassCancellation and assigns it to the MassCancellation field.
func (o *GuaranteeConfigType) SetMassCancellation(v GuaranteeConfigTypeMassCancellation) {
	o.MassCancellation = &v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetOnHold() bool {
	if o == nil || IsNil(o.OnHold) {
		var ret bool
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetOnHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given bool and assigns it to the OnHold field.
func (o *GuaranteeConfigType) SetOnHold(v bool) {
	o.OnHold = &v
}

// GetOrderSequence returns the OrderSequence field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetOrderSequence() float32 {
	if o == nil || IsNil(o.OrderSequence) {
		var ret float32
		return ret
	}
	return *o.OrderSequence
}

// GetOrderSequenceOk returns a tuple with the OrderSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetOrderSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderSequence) {
		return nil, false
	}
	return o.OrderSequence, true
}

// HasOrderSequence returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasOrderSequence() bool {
	if o != nil && !IsNil(o.OrderSequence) {
		return true
	}

	return false
}

// SetOrderSequence gets a reference to the given float32 and assigns it to the OrderSequence field.
func (o *GuaranteeConfigType) SetOrderSequence(v float32) {
	o.OrderSequence = &v
}

// GetPaymentTypes returns the PaymentTypes field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetPaymentTypes() PaymentTypesType {
	if o == nil || IsNil(o.PaymentTypes) {
		var ret PaymentTypesType
		return ret
	}
	return *o.PaymentTypes
}

// GetPaymentTypesOk returns a tuple with the PaymentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetPaymentTypesOk() (*PaymentTypesType, bool) {
	if o == nil || IsNil(o.PaymentTypes) {
		return nil, false
	}
	return o.PaymentTypes, true
}

// HasPaymentTypes returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasPaymentTypes() bool {
	if o != nil && !IsNil(o.PaymentTypes) {
		return true
	}

	return false
}

// SetPaymentTypes gets a reference to the given PaymentTypesType and assigns it to the PaymentTypes field.
func (o *GuaranteeConfigType) SetPaymentTypes(v PaymentTypesType) {
	o.PaymentTypes = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetRequirements() GuaranteeRequirementsType {
	if o == nil || IsNil(o.Requirements) {
		var ret GuaranteeRequirementsType
		return ret
	}
	return *o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetRequirementsOk() (*GuaranteeRequirementsType, bool) {
	if o == nil || IsNil(o.Requirements) {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasRequirements() bool {
	if o != nil && !IsNil(o.Requirements) {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given GuaranteeRequirementsType and assigns it to the Requirements field.
func (o *GuaranteeConfigType) SetRequirements(v GuaranteeRequirementsType) {
	o.Requirements = &v
}

// GetReserveInventory returns the ReserveInventory field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetReserveInventory() bool {
	if o == nil || IsNil(o.ReserveInventory) {
		var ret bool
		return ret
	}
	return *o.ReserveInventory
}

// GetReserveInventoryOk returns a tuple with the ReserveInventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetReserveInventoryOk() (*bool, bool) {
	if o == nil || IsNil(o.ReserveInventory) {
		return nil, false
	}
	return o.ReserveInventory, true
}

// HasReserveInventory returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasReserveInventory() bool {
	if o != nil && !IsNil(o.ReserveInventory) {
		return true
	}

	return false
}

// SetReserveInventory gets a reference to the given bool and assigns it to the ReserveInventory field.
func (o *GuaranteeConfigType) SetReserveInventory(v bool) {
	o.ReserveInventory = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *GuaranteeConfigType) GetShortDescription() TranslationTextType80 {
	if o == nil || IsNil(o.ShortDescription) {
		var ret TranslationTextType80
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeConfigType) GetShortDescriptionOk() (*TranslationTextType80, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *GuaranteeConfigType) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given TranslationTextType80 and assigns it to the ShortDescription field.
func (o *GuaranteeConfigType) SetShortDescription(v TranslationTextType80) {
	o.ShortDescription = &v
}

func (o GuaranteeConfigType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuaranteeConfigType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GuaranteeCode) {
		toSerialize["guaranteeCode"] = o.GuaranteeCode
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.LateArrival) {
		toSerialize["lateArrival"] = o.LateArrival
	}
	if !IsNil(o.MassCancellation) {
		toSerialize["massCancellation"] = o.MassCancellation
	}
	if !IsNil(o.OnHold) {
		toSerialize["onHold"] = o.OnHold
	}
	if !IsNil(o.OrderSequence) {
		toSerialize["orderSequence"] = o.OrderSequence
	}
	if !IsNil(o.PaymentTypes) {
		toSerialize["paymentTypes"] = o.PaymentTypes
	}
	if !IsNil(o.Requirements) {
		toSerialize["requirements"] = o.Requirements
	}
	if !IsNil(o.ReserveInventory) {
		toSerialize["reserveInventory"] = o.ReserveInventory
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	return toSerialize, nil
}

type NullableGuaranteeConfigType struct {
	value *GuaranteeConfigType
	isSet bool
}

func (v NullableGuaranteeConfigType) Get() *GuaranteeConfigType {
	return v.value
}

func (v *NullableGuaranteeConfigType) Set(val *GuaranteeConfigType) {
	v.value = val
	v.isSet = true
}

func (v NullableGuaranteeConfigType) IsSet() bool {
	return v.isSet
}

func (v *NullableGuaranteeConfigType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuaranteeConfigType(val *GuaranteeConfigType) *NullableGuaranteeConfigType {
	return &NullableGuaranteeConfigType{value: val, isSet: true}
}

func (v NullableGuaranteeConfigType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuaranteeConfigType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


