/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the PutBookingTypesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBookingTypesRequest{}

// PutBookingTypesRequest struct for PutBookingTypesRequest
type PutBookingTypesRequest struct {
	BookingTypes *BookingTypesType `json:"bookingTypes,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPutBookingTypesRequest instantiates a new PutBookingTypesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBookingTypesRequest() *PutBookingTypesRequest {
	this := PutBookingTypesRequest{}
	return &this
}

// NewPutBookingTypesRequestWithDefaults instantiates a new PutBookingTypesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBookingTypesRequestWithDefaults() *PutBookingTypesRequest {
	this := PutBookingTypesRequest{}
	return &this
}

// GetBookingTypes returns the BookingTypes field value if set, zero value otherwise.
func (o *PutBookingTypesRequest) GetBookingTypes() BookingTypesType {
	if o == nil || IsNil(o.BookingTypes) {
		var ret BookingTypesType
		return ret
	}
	return *o.BookingTypes
}

// GetBookingTypesOk returns a tuple with the BookingTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBookingTypesRequest) GetBookingTypesOk() (*BookingTypesType, bool) {
	if o == nil || IsNil(o.BookingTypes) {
		return nil, false
	}
	return o.BookingTypes, true
}

// HasBookingTypes returns a boolean if a field has been set.
func (o *PutBookingTypesRequest) HasBookingTypes() bool {
	if o != nil && !IsNil(o.BookingTypes) {
		return true
	}

	return false
}

// SetBookingTypes gets a reference to the given BookingTypesType and assigns it to the BookingTypes field.
func (o *PutBookingTypesRequest) SetBookingTypes(v BookingTypesType) {
	o.BookingTypes = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PutBookingTypesRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBookingTypesRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PutBookingTypesRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PutBookingTypesRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutBookingTypesRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBookingTypesRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutBookingTypesRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PutBookingTypesRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PutBookingTypesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBookingTypesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingTypes) {
		toSerialize["bookingTypes"] = o.BookingTypes
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutBookingTypesRequest struct {
	value *PutBookingTypesRequest
	isSet bool
}

func (v NullablePutBookingTypesRequest) Get() *PutBookingTypesRequest {
	return v.value
}

func (v *NullablePutBookingTypesRequest) Set(val *PutBookingTypesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBookingTypesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBookingTypesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBookingTypesRequest(val *PutBookingTypesRequest) *NullablePutBookingTypesRequest {
	return &NullablePutBookingTypesRequest{value: val, isSet: true}
}

func (v NullablePutBookingTypesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBookingTypesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


