/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the PostBlockConversionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostBlockConversionsRequest{}

// PostBlockConversionsRequest struct for PostBlockConversionsRequest
type PostBlockConversionsRequest struct {
	BlockConversions *BlockConversionsType `json:"blockConversions,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostBlockConversionsRequest instantiates a new PostBlockConversionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostBlockConversionsRequest() *PostBlockConversionsRequest {
	this := PostBlockConversionsRequest{}
	return &this
}

// NewPostBlockConversionsRequestWithDefaults instantiates a new PostBlockConversionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostBlockConversionsRequestWithDefaults() *PostBlockConversionsRequest {
	this := PostBlockConversionsRequest{}
	return &this
}

// GetBlockConversions returns the BlockConversions field value if set, zero value otherwise.
func (o *PostBlockConversionsRequest) GetBlockConversions() BlockConversionsType {
	if o == nil || IsNil(o.BlockConversions) {
		var ret BlockConversionsType
		return ret
	}
	return *o.BlockConversions
}

// GetBlockConversionsOk returns a tuple with the BlockConversions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBlockConversionsRequest) GetBlockConversionsOk() (*BlockConversionsType, bool) {
	if o == nil || IsNil(o.BlockConversions) {
		return nil, false
	}
	return o.BlockConversions, true
}

// HasBlockConversions returns a boolean if a field has been set.
func (o *PostBlockConversionsRequest) HasBlockConversions() bool {
	if o != nil && !IsNil(o.BlockConversions) {
		return true
	}

	return false
}

// SetBlockConversions gets a reference to the given BlockConversionsType and assigns it to the BlockConversions field.
func (o *PostBlockConversionsRequest) SetBlockConversions(v BlockConversionsType) {
	o.BlockConversions = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostBlockConversionsRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBlockConversionsRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostBlockConversionsRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostBlockConversionsRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostBlockConversionsRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBlockConversionsRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostBlockConversionsRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostBlockConversionsRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostBlockConversionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostBlockConversionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockConversions) {
		toSerialize["blockConversions"] = o.BlockConversions
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostBlockConversionsRequest struct {
	value *PostBlockConversionsRequest
	isSet bool
}

func (v NullablePostBlockConversionsRequest) Get() *PostBlockConversionsRequest {
	return v.value
}

func (v *NullablePostBlockConversionsRequest) Set(val *PostBlockConversionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBlockConversionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBlockConversionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBlockConversionsRequest(val *PostBlockConversionsRequest) *NullablePostBlockConversionsRequest {
	return &NullablePostBlockConversionsRequest{value: val, isSet: true}
}

func (v NullablePostBlockConversionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBlockConversionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


