/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the HotelTurnAwayCodesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelTurnAwayCodesType{}

// HotelTurnAwayCodesType Turnaway code details for hotels.
type HotelTurnAwayCodesType struct {
	Items []HotelTurnAwayCodeType
}

// NewHotelTurnAwayCodesType instantiates a new HotelTurnAwayCodesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelTurnAwayCodesType() *HotelTurnAwayCodesType {
	this := HotelTurnAwayCodesType{}
	return &this
}

// NewHotelTurnAwayCodesTypeWithDefaults instantiates a new HotelTurnAwayCodesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelTurnAwayCodesTypeWithDefaults() *HotelTurnAwayCodesType {
	this := HotelTurnAwayCodesType{}
	return &this
}

func (o HotelTurnAwayCodesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelTurnAwayCodesType) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *HotelTurnAwayCodesType) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableHotelTurnAwayCodesType struct {
	value HotelTurnAwayCodesType
	isSet bool
}

func (v NullableHotelTurnAwayCodesType) Get() HotelTurnAwayCodesType {
	return v.value
}

func (v *NullableHotelTurnAwayCodesType) Set(val HotelTurnAwayCodesType) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelTurnAwayCodesType) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelTurnAwayCodesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelTurnAwayCodesType(val HotelTurnAwayCodesType) *NullableHotelTurnAwayCodesType {
	return &NullableHotelTurnAwayCodesType{value: val, isSet: true}
}

func (v NullableHotelTurnAwayCodesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelTurnAwayCodesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


