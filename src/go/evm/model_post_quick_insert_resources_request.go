/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the PostQuickInsertResourcesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostQuickInsertResourcesRequest{}

// PostQuickInsertResourcesRequest struct for PostQuickInsertResourcesRequest
type PostQuickInsertResourcesRequest struct {
	QuickInsertResourceListInfo []QuickInsertResourceListType `json:"quickInsertResourceListInfo,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostQuickInsertResourcesRequest instantiates a new PostQuickInsertResourcesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostQuickInsertResourcesRequest() *PostQuickInsertResourcesRequest {
	this := PostQuickInsertResourcesRequest{}
	return &this
}

// NewPostQuickInsertResourcesRequestWithDefaults instantiates a new PostQuickInsertResourcesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostQuickInsertResourcesRequestWithDefaults() *PostQuickInsertResourcesRequest {
	this := PostQuickInsertResourcesRequest{}
	return &this
}

// GetQuickInsertResourceListInfo returns the QuickInsertResourceListInfo field value if set, zero value otherwise.
func (o *PostQuickInsertResourcesRequest) GetQuickInsertResourceListInfo() []QuickInsertResourceListType {
	if o == nil || IsNil(o.QuickInsertResourceListInfo) {
		var ret []QuickInsertResourceListType
		return ret
	}
	return o.QuickInsertResourceListInfo
}

// GetQuickInsertResourceListInfoOk returns a tuple with the QuickInsertResourceListInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostQuickInsertResourcesRequest) GetQuickInsertResourceListInfoOk() ([]QuickInsertResourceListType, bool) {
	if o == nil || IsNil(o.QuickInsertResourceListInfo) {
		return nil, false
	}
	return o.QuickInsertResourceListInfo, true
}

// HasQuickInsertResourceListInfo returns a boolean if a field has been set.
func (o *PostQuickInsertResourcesRequest) HasQuickInsertResourceListInfo() bool {
	if o != nil && !IsNil(o.QuickInsertResourceListInfo) {
		return true
	}

	return false
}

// SetQuickInsertResourceListInfo gets a reference to the given []QuickInsertResourceListType and assigns it to the QuickInsertResourceListInfo field.
func (o *PostQuickInsertResourcesRequest) SetQuickInsertResourceListInfo(v []QuickInsertResourceListType) {
	o.QuickInsertResourceListInfo = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostQuickInsertResourcesRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostQuickInsertResourcesRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostQuickInsertResourcesRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostQuickInsertResourcesRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostQuickInsertResourcesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostQuickInsertResourcesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuickInsertResourceListInfo) {
		toSerialize["quickInsertResourceListInfo"] = o.QuickInsertResourceListInfo
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostQuickInsertResourcesRequest struct {
	value *PostQuickInsertResourcesRequest
	isSet bool
}

func (v NullablePostQuickInsertResourcesRequest) Get() *PostQuickInsertResourcesRequest {
	return v.value
}

func (v *NullablePostQuickInsertResourcesRequest) Set(val *PostQuickInsertResourcesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostQuickInsertResourcesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostQuickInsertResourcesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostQuickInsertResourcesRequest(val *PostQuickInsertResourcesRequest) *NullablePostQuickInsertResourcesRequest {
	return &NullablePostQuickInsertResourcesRequest{value: val, isSet: true}
}

func (v NullablePostQuickInsertResourcesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostQuickInsertResourcesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


