openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Price and Rate Availability Asynchronous functionality\
    \ in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br\
    \ /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Price Availability Rate Async API
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /par/async/v1
tags:
- description: The Availability Asynchronous module provides capability for an external
    system to retrieve availability related data using an asynchronous approach.
  name: AvailabilityAsync
paths:
  /externalSystems/{extSystemCode}/hotels/{hotelId}/restrictions:
    post:
      description: A user can send various restrictions to OPERA by specifying restriction
        details in the request. <p><strong>OperationId:</strong>postRestrictionsProcess</p>
      operationId: postRestrictionsProcess
      parameters:
      - description: Unique ID of the hotel in OPERA
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique code of the external system
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/restrictions'
        description: Request for configuring restrictions.
        required: true
      responses:
        "202":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/links'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create restrictions in OPERA Cloud.
      tags:
      - AvailabilityAsync
      x-interaction:
      - async-polling
      x-codegen-request-body-name: restrictions
  /externalSystems/{extSystemCode}/hotels/{hotelId}/restrictions/{requestId}:
    get:
      description: Use this to check whether the restrictions sent have been processed.
        <p><strong>OperationId:</strong>getRestrictions</p>
      operationId: getRestrictions
      parameters:
      - description: Unique ID of Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique code of the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID to fetch status of created restrictions.
        in: path
        name: requestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/restrictionsStatus'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get status for created restrictions.
      tags:
      - AvailabilityAsync
    head:
      description: Use this to check whether the restrictions sent have been processed.
        <p><strong>OperationId:</strong>getRestrictionsProcessStatus</p>
      operationId: getRestrictionsProcessStatus
      parameters:
      - description: Unique ID to fetch status of created restrictions.
        in: path
        name: requestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique code of the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of Hotel in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Response for status of scheduled asynchronous process.
          headers:
            Status:
              description: Status of the requested process.
              schema:
                enum:
                - Processing
                - Invalid
                type: string
            Cache-Control:
              description: number of seconds to wait before polling again.
              schema:
                type: string
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "201":
          content: {}
          description: Response for status of scheduled asynchronous process.
          headers:
            Status:
              description: Status of the requested process.
              schema:
                enum:
                - Completed
                type: string
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource once the status of process
                run is Complete.
              schema:
                type: string
        "400":
          content: {}
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "500":
          content: {}
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check status of Restrictions
      tags:
      - AvailabilityAsync
components:
  schemas:
    blockId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    createRestrictionType:
      properties:
        blockId:
          $ref: '#/components/schemas/blockId'
        bookingChannelOnRequest:
          description: Booking channel on request.
          maxLength: 1
          minLength: 0
          type: string
        bookingChannels:
          description: Booking channel.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        dateRangeEnd:
          description: The ending value of the date range.
          format: date
          type: string
        dateRangeStart:
          description: The starting value of the date range.
          format: date
          type: string
        friday:
          type: boolean
        monday:
          type: boolean
        rateClasses:
          description: The rate class for which the restriction will be applied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        ratePlanCategories:
          description: The rate category for which the restriction will be applied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        ratePlanCodes:
          description: The rate code for which the restriction will be applied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        restrictionStatus:
          $ref: '#/components/schemas/restrictionStatusType'
        roomClasses:
          description: The room class for which the restriction will be applied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        roomTypes:
          description: The room type for which the restriction will be applied.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        saturday:
          type: boolean
        seasonCode:
          description: The season code during which the restrictions are valid.
          maxLength: 20
          minLength: 0
          type: string
        sunday:
          type: boolean
        thursday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        yieldStatus:
          $ref: '#/components/schemas/roomTypeYieldableType'
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      title: Error Instance Details
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        links:
          $ref: '#/components/schemas/links'
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      title: Error Detail
      type: object
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    restrictionStatusType:
      description: The RestrictionStatusType is used to indicate the type of restriction
        applied. An enumerated restriction type is defined in the attribute group.
      properties:
        code:
          $ref: '#/components/schemas/restrictionStatusesType'
        lengthOfStay1:
          description: Indicates Length of Stay 1 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay2:
          description: Indicates Length of Stay 2 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay3:
          description: Indicates Length of Stay 3 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay4:
          description: Indicates Length of Stay 4 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay5:
          description: Indicates Length of Stay 5 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay6:
          description: Indicates Length of Stay 6 is not available. Defines restriction
            in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        lengthOfStay7:
          description: Indicates Length of Stay 7 or more is not available. Defines
            restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
          type: boolean
        unit:
          description: "Defines restriction in conjunction with Restriction Code.\
            \ Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough,\
            \ MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking."
          type: integer
      type: object
    restrictionStatusesType:
      enum:
      - Closed
      - ClosedForArrival
      - ClosedForDeparture
      - MinimumStayThrough
      - MaximumStayThrough
      - MinimumLengthOfStay
      - MaximumLengthOfStay
      - LengthOfStayNotAvailable
      - MinimumAdvanceBooking
      - MaximumAdvanceBooking
      - Open
      - OpenForArrival
      - OpenForDeparture
      type: string
    restrictions:
      description: Request for configuring restrictions.
      properties:
        links:
          $ref: '#/components/schemas/links'
        restrictions:
          $ref: '#/components/schemas/restrictionsType'
      type: object
    restrictionsStatus:
      description: Response for created restrictions status.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    restrictionsType:
      description: Collection of restrictions to be configured.
      items:
        $ref: '#/components/schemas/createRestrictionType'
      maxItems: 1000
      type: array
    roomTypeYieldableType:
      description: Simple type for Yieldable or Non Yieldable
      enum:
      - Yieldable
      - NonYieldable
      type: string
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
x-original-swagger-version: "2.0"
