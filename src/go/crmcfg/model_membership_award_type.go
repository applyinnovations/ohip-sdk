/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipAwardType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipAwardType{}

// MembershipAwardType Values by which membership award is uniquely identied.
type MembershipAwardType struct {
	// Indicates if award consumtion is tracked by the system. If value is Y, then system keeps track of availability of award after it is issued.
	AutoConsume *bool `json:"autoConsume,omitempty"`
	AwardBasedOn *MembershipAwardBasedOnType `json:"awardBasedOn,omitempty"`
	// Membership Award Code.
	AwardCode *string `json:"awardCode,omitempty"`
	AwardDetails *MembershipAwardDetailsType `json:"awardDetails,omitempty"`
	// Number of awards to be given.
	AwardQuantity *int32 `json:"awardQuantity,omitempty"`
	// The billing group that represents a billing rule schedule for the membership award.
	BillingGroup *string `json:"billingGroup,omitempty"`
	DateRange *DateRangeType `json:"dateRange,omitempty"`
	// Display sequence of Award.
	DisplaySequence *float32 `json:"displaySequence,omitempty"`
	FinancialTransactionInfo *MembershipAwardFinancialTransactionInfoType `json:"financialTransactionInfo,omitempty"`
	// Force verification whether Rate or Product for the Award is valid at reservation.
	ForceVerification *bool `json:"forceVerification,omitempty"`
	// Inactive flag for Membership Award. The award record cannot be deleted.
	Inactive *bool `json:"inactive,omitempty"`
	// Detailed description and specification of the Award.
	LongDescription *string `json:"longDescription,omitempty"`
	// Membership level required for eligibility to receive this award. Other membership levels are not eligible for this award.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Membership type for which awards are defined.
	MembershipType *string `json:"membershipType,omitempty"`
	OtherInfo *MembershipAwardOtherInfoType `json:"otherInfo,omitempty"`
	ProductInfo *MembershipAwardProductInfoType `json:"productInfo,omitempty"`
	RateInfo *MembershipAwardRateInfoType `json:"rateInfo,omitempty"`
	// Rule Schedule applied to this Award.
	RuleScheduleCode *string `json:"ruleScheduleCode,omitempty"`
	// Short description of Award.
	ShortDescription *string `json:"shortDescription,omitempty"`
	UpgradeInfo *MembershipAwardUpgradeInfoType `json:"upgradeInfo,omitempty"`
}

// NewMembershipAwardType instantiates a new MembershipAwardType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipAwardType() *MembershipAwardType {
	this := MembershipAwardType{}
	return &this
}

// NewMembershipAwardTypeWithDefaults instantiates a new MembershipAwardType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipAwardTypeWithDefaults() *MembershipAwardType {
	this := MembershipAwardType{}
	return &this
}

// GetAutoConsume returns the AutoConsume field value if set, zero value otherwise.
func (o *MembershipAwardType) GetAutoConsume() bool {
	if o == nil || IsNil(o.AutoConsume) {
		var ret bool
		return ret
	}
	return *o.AutoConsume
}

// GetAutoConsumeOk returns a tuple with the AutoConsume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetAutoConsumeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoConsume) {
		return nil, false
	}
	return o.AutoConsume, true
}

// HasAutoConsume returns a boolean if a field has been set.
func (o *MembershipAwardType) HasAutoConsume() bool {
	if o != nil && !IsNil(o.AutoConsume) {
		return true
	}

	return false
}

// SetAutoConsume gets a reference to the given bool and assigns it to the AutoConsume field.
func (o *MembershipAwardType) SetAutoConsume(v bool) {
	o.AutoConsume = &v
}

// GetAwardBasedOn returns the AwardBasedOn field value if set, zero value otherwise.
func (o *MembershipAwardType) GetAwardBasedOn() MembershipAwardBasedOnType {
	if o == nil || IsNil(o.AwardBasedOn) {
		var ret MembershipAwardBasedOnType
		return ret
	}
	return *o.AwardBasedOn
}

// GetAwardBasedOnOk returns a tuple with the AwardBasedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetAwardBasedOnOk() (*MembershipAwardBasedOnType, bool) {
	if o == nil || IsNil(o.AwardBasedOn) {
		return nil, false
	}
	return o.AwardBasedOn, true
}

// HasAwardBasedOn returns a boolean if a field has been set.
func (o *MembershipAwardType) HasAwardBasedOn() bool {
	if o != nil && !IsNil(o.AwardBasedOn) {
		return true
	}

	return false
}

// SetAwardBasedOn gets a reference to the given MembershipAwardBasedOnType and assigns it to the AwardBasedOn field.
func (o *MembershipAwardType) SetAwardBasedOn(v MembershipAwardBasedOnType) {
	o.AwardBasedOn = &v
}

// GetAwardCode returns the AwardCode field value if set, zero value otherwise.
func (o *MembershipAwardType) GetAwardCode() string {
	if o == nil || IsNil(o.AwardCode) {
		var ret string
		return ret
	}
	return *o.AwardCode
}

// GetAwardCodeOk returns a tuple with the AwardCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetAwardCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AwardCode) {
		return nil, false
	}
	return o.AwardCode, true
}

// HasAwardCode returns a boolean if a field has been set.
func (o *MembershipAwardType) HasAwardCode() bool {
	if o != nil && !IsNil(o.AwardCode) {
		return true
	}

	return false
}

// SetAwardCode gets a reference to the given string and assigns it to the AwardCode field.
func (o *MembershipAwardType) SetAwardCode(v string) {
	o.AwardCode = &v
}

// GetAwardDetails returns the AwardDetails field value if set, zero value otherwise.
func (o *MembershipAwardType) GetAwardDetails() MembershipAwardDetailsType {
	if o == nil || IsNil(o.AwardDetails) {
		var ret MembershipAwardDetailsType
		return ret
	}
	return *o.AwardDetails
}

// GetAwardDetailsOk returns a tuple with the AwardDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetAwardDetailsOk() (*MembershipAwardDetailsType, bool) {
	if o == nil || IsNil(o.AwardDetails) {
		return nil, false
	}
	return o.AwardDetails, true
}

// HasAwardDetails returns a boolean if a field has been set.
func (o *MembershipAwardType) HasAwardDetails() bool {
	if o != nil && !IsNil(o.AwardDetails) {
		return true
	}

	return false
}

// SetAwardDetails gets a reference to the given MembershipAwardDetailsType and assigns it to the AwardDetails field.
func (o *MembershipAwardType) SetAwardDetails(v MembershipAwardDetailsType) {
	o.AwardDetails = &v
}

// GetAwardQuantity returns the AwardQuantity field value if set, zero value otherwise.
func (o *MembershipAwardType) GetAwardQuantity() int32 {
	if o == nil || IsNil(o.AwardQuantity) {
		var ret int32
		return ret
	}
	return *o.AwardQuantity
}

// GetAwardQuantityOk returns a tuple with the AwardQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetAwardQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardQuantity) {
		return nil, false
	}
	return o.AwardQuantity, true
}

// HasAwardQuantity returns a boolean if a field has been set.
func (o *MembershipAwardType) HasAwardQuantity() bool {
	if o != nil && !IsNil(o.AwardQuantity) {
		return true
	}

	return false
}

// SetAwardQuantity gets a reference to the given int32 and assigns it to the AwardQuantity field.
func (o *MembershipAwardType) SetAwardQuantity(v int32) {
	o.AwardQuantity = &v
}

// GetBillingGroup returns the BillingGroup field value if set, zero value otherwise.
func (o *MembershipAwardType) GetBillingGroup() string {
	if o == nil || IsNil(o.BillingGroup) {
		var ret string
		return ret
	}
	return *o.BillingGroup
}

// GetBillingGroupOk returns a tuple with the BillingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetBillingGroupOk() (*string, bool) {
	if o == nil || IsNil(o.BillingGroup) {
		return nil, false
	}
	return o.BillingGroup, true
}

// HasBillingGroup returns a boolean if a field has been set.
func (o *MembershipAwardType) HasBillingGroup() bool {
	if o != nil && !IsNil(o.BillingGroup) {
		return true
	}

	return false
}

// SetBillingGroup gets a reference to the given string and assigns it to the BillingGroup field.
func (o *MembershipAwardType) SetBillingGroup(v string) {
	o.BillingGroup = &v
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *MembershipAwardType) GetDateRange() DateRangeType {
	if o == nil || IsNil(o.DateRange) {
		var ret DateRangeType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetDateRangeOk() (*DateRangeType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *MembershipAwardType) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given DateRangeType and assigns it to the DateRange field.
func (o *MembershipAwardType) SetDateRange(v DateRangeType) {
	o.DateRange = &v
}

// GetDisplaySequence returns the DisplaySequence field value if set, zero value otherwise.
func (o *MembershipAwardType) GetDisplaySequence() float32 {
	if o == nil || IsNil(o.DisplaySequence) {
		var ret float32
		return ret
	}
	return *o.DisplaySequence
}

// GetDisplaySequenceOk returns a tuple with the DisplaySequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetDisplaySequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplaySequence) {
		return nil, false
	}
	return o.DisplaySequence, true
}

// HasDisplaySequence returns a boolean if a field has been set.
func (o *MembershipAwardType) HasDisplaySequence() bool {
	if o != nil && !IsNil(o.DisplaySequence) {
		return true
	}

	return false
}

// SetDisplaySequence gets a reference to the given float32 and assigns it to the DisplaySequence field.
func (o *MembershipAwardType) SetDisplaySequence(v float32) {
	o.DisplaySequence = &v
}

// GetFinancialTransactionInfo returns the FinancialTransactionInfo field value if set, zero value otherwise.
func (o *MembershipAwardType) GetFinancialTransactionInfo() MembershipAwardFinancialTransactionInfoType {
	if o == nil || IsNil(o.FinancialTransactionInfo) {
		var ret MembershipAwardFinancialTransactionInfoType
		return ret
	}
	return *o.FinancialTransactionInfo
}

// GetFinancialTransactionInfoOk returns a tuple with the FinancialTransactionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetFinancialTransactionInfoOk() (*MembershipAwardFinancialTransactionInfoType, bool) {
	if o == nil || IsNil(o.FinancialTransactionInfo) {
		return nil, false
	}
	return o.FinancialTransactionInfo, true
}

// HasFinancialTransactionInfo returns a boolean if a field has been set.
func (o *MembershipAwardType) HasFinancialTransactionInfo() bool {
	if o != nil && !IsNil(o.FinancialTransactionInfo) {
		return true
	}

	return false
}

// SetFinancialTransactionInfo gets a reference to the given MembershipAwardFinancialTransactionInfoType and assigns it to the FinancialTransactionInfo field.
func (o *MembershipAwardType) SetFinancialTransactionInfo(v MembershipAwardFinancialTransactionInfoType) {
	o.FinancialTransactionInfo = &v
}

// GetForceVerification returns the ForceVerification field value if set, zero value otherwise.
func (o *MembershipAwardType) GetForceVerification() bool {
	if o == nil || IsNil(o.ForceVerification) {
		var ret bool
		return ret
	}
	return *o.ForceVerification
}

// GetForceVerificationOk returns a tuple with the ForceVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetForceVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceVerification) {
		return nil, false
	}
	return o.ForceVerification, true
}

// HasForceVerification returns a boolean if a field has been set.
func (o *MembershipAwardType) HasForceVerification() bool {
	if o != nil && !IsNil(o.ForceVerification) {
		return true
	}

	return false
}

// SetForceVerification gets a reference to the given bool and assigns it to the ForceVerification field.
func (o *MembershipAwardType) SetForceVerification(v bool) {
	o.ForceVerification = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *MembershipAwardType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *MembershipAwardType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *MembershipAwardType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetLongDescription returns the LongDescription field value if set, zero value otherwise.
func (o *MembershipAwardType) GetLongDescription() string {
	if o == nil || IsNil(o.LongDescription) {
		var ret string
		return ret
	}
	return *o.LongDescription
}

// GetLongDescriptionOk returns a tuple with the LongDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetLongDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.LongDescription) {
		return nil, false
	}
	return o.LongDescription, true
}

// HasLongDescription returns a boolean if a field has been set.
func (o *MembershipAwardType) HasLongDescription() bool {
	if o != nil && !IsNil(o.LongDescription) {
		return true
	}

	return false
}

// SetLongDescription gets a reference to the given string and assigns it to the LongDescription field.
func (o *MembershipAwardType) SetLongDescription(v string) {
	o.LongDescription = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *MembershipAwardType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *MembershipAwardType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *MembershipAwardType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *MembershipAwardType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *MembershipAwardType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *MembershipAwardType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetOtherInfo returns the OtherInfo field value if set, zero value otherwise.
func (o *MembershipAwardType) GetOtherInfo() MembershipAwardOtherInfoType {
	if o == nil || IsNil(o.OtherInfo) {
		var ret MembershipAwardOtherInfoType
		return ret
	}
	return *o.OtherInfo
}

// GetOtherInfoOk returns a tuple with the OtherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetOtherInfoOk() (*MembershipAwardOtherInfoType, bool) {
	if o == nil || IsNil(o.OtherInfo) {
		return nil, false
	}
	return o.OtherInfo, true
}

// HasOtherInfo returns a boolean if a field has been set.
func (o *MembershipAwardType) HasOtherInfo() bool {
	if o != nil && !IsNil(o.OtherInfo) {
		return true
	}

	return false
}

// SetOtherInfo gets a reference to the given MembershipAwardOtherInfoType and assigns it to the OtherInfo field.
func (o *MembershipAwardType) SetOtherInfo(v MembershipAwardOtherInfoType) {
	o.OtherInfo = &v
}

// GetProductInfo returns the ProductInfo field value if set, zero value otherwise.
func (o *MembershipAwardType) GetProductInfo() MembershipAwardProductInfoType {
	if o == nil || IsNil(o.ProductInfo) {
		var ret MembershipAwardProductInfoType
		return ret
	}
	return *o.ProductInfo
}

// GetProductInfoOk returns a tuple with the ProductInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetProductInfoOk() (*MembershipAwardProductInfoType, bool) {
	if o == nil || IsNil(o.ProductInfo) {
		return nil, false
	}
	return o.ProductInfo, true
}

// HasProductInfo returns a boolean if a field has been set.
func (o *MembershipAwardType) HasProductInfo() bool {
	if o != nil && !IsNil(o.ProductInfo) {
		return true
	}

	return false
}

// SetProductInfo gets a reference to the given MembershipAwardProductInfoType and assigns it to the ProductInfo field.
func (o *MembershipAwardType) SetProductInfo(v MembershipAwardProductInfoType) {
	o.ProductInfo = &v
}

// GetRateInfo returns the RateInfo field value if set, zero value otherwise.
func (o *MembershipAwardType) GetRateInfo() MembershipAwardRateInfoType {
	if o == nil || IsNil(o.RateInfo) {
		var ret MembershipAwardRateInfoType
		return ret
	}
	return *o.RateInfo
}

// GetRateInfoOk returns a tuple with the RateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetRateInfoOk() (*MembershipAwardRateInfoType, bool) {
	if o == nil || IsNil(o.RateInfo) {
		return nil, false
	}
	return o.RateInfo, true
}

// HasRateInfo returns a boolean if a field has been set.
func (o *MembershipAwardType) HasRateInfo() bool {
	if o != nil && !IsNil(o.RateInfo) {
		return true
	}

	return false
}

// SetRateInfo gets a reference to the given MembershipAwardRateInfoType and assigns it to the RateInfo field.
func (o *MembershipAwardType) SetRateInfo(v MembershipAwardRateInfoType) {
	o.RateInfo = &v
}

// GetRuleScheduleCode returns the RuleScheduleCode field value if set, zero value otherwise.
func (o *MembershipAwardType) GetRuleScheduleCode() string {
	if o == nil || IsNil(o.RuleScheduleCode) {
		var ret string
		return ret
	}
	return *o.RuleScheduleCode
}

// GetRuleScheduleCodeOk returns a tuple with the RuleScheduleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetRuleScheduleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleScheduleCode) {
		return nil, false
	}
	return o.RuleScheduleCode, true
}

// HasRuleScheduleCode returns a boolean if a field has been set.
func (o *MembershipAwardType) HasRuleScheduleCode() bool {
	if o != nil && !IsNil(o.RuleScheduleCode) {
		return true
	}

	return false
}

// SetRuleScheduleCode gets a reference to the given string and assigns it to the RuleScheduleCode field.
func (o *MembershipAwardType) SetRuleScheduleCode(v string) {
	o.RuleScheduleCode = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *MembershipAwardType) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *MembershipAwardType) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *MembershipAwardType) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetUpgradeInfo returns the UpgradeInfo field value if set, zero value otherwise.
func (o *MembershipAwardType) GetUpgradeInfo() MembershipAwardUpgradeInfoType {
	if o == nil || IsNil(o.UpgradeInfo) {
		var ret MembershipAwardUpgradeInfoType
		return ret
	}
	return *o.UpgradeInfo
}

// GetUpgradeInfoOk returns a tuple with the UpgradeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardType) GetUpgradeInfoOk() (*MembershipAwardUpgradeInfoType, bool) {
	if o == nil || IsNil(o.UpgradeInfo) {
		return nil, false
	}
	return o.UpgradeInfo, true
}

// HasUpgradeInfo returns a boolean if a field has been set.
func (o *MembershipAwardType) HasUpgradeInfo() bool {
	if o != nil && !IsNil(o.UpgradeInfo) {
		return true
	}

	return false
}

// SetUpgradeInfo gets a reference to the given MembershipAwardUpgradeInfoType and assigns it to the UpgradeInfo field.
func (o *MembershipAwardType) SetUpgradeInfo(v MembershipAwardUpgradeInfoType) {
	o.UpgradeInfo = &v
}

func (o MembershipAwardType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipAwardType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoConsume) {
		toSerialize["autoConsume"] = o.AutoConsume
	}
	if !IsNil(o.AwardBasedOn) {
		toSerialize["awardBasedOn"] = o.AwardBasedOn
	}
	if !IsNil(o.AwardCode) {
		toSerialize["awardCode"] = o.AwardCode
	}
	if !IsNil(o.AwardDetails) {
		toSerialize["awardDetails"] = o.AwardDetails
	}
	if !IsNil(o.AwardQuantity) {
		toSerialize["awardQuantity"] = o.AwardQuantity
	}
	if !IsNil(o.BillingGroup) {
		toSerialize["billingGroup"] = o.BillingGroup
	}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.DisplaySequence) {
		toSerialize["displaySequence"] = o.DisplaySequence
	}
	if !IsNil(o.FinancialTransactionInfo) {
		toSerialize["financialTransactionInfo"] = o.FinancialTransactionInfo
	}
	if !IsNil(o.ForceVerification) {
		toSerialize["forceVerification"] = o.ForceVerification
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.LongDescription) {
		toSerialize["longDescription"] = o.LongDescription
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.OtherInfo) {
		toSerialize["otherInfo"] = o.OtherInfo
	}
	if !IsNil(o.ProductInfo) {
		toSerialize["productInfo"] = o.ProductInfo
	}
	if !IsNil(o.RateInfo) {
		toSerialize["rateInfo"] = o.RateInfo
	}
	if !IsNil(o.RuleScheduleCode) {
		toSerialize["ruleScheduleCode"] = o.RuleScheduleCode
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if !IsNil(o.UpgradeInfo) {
		toSerialize["upgradeInfo"] = o.UpgradeInfo
	}
	return toSerialize, nil
}

type NullableMembershipAwardType struct {
	value *MembershipAwardType
	isSet bool
}

func (v NullableMembershipAwardType) Get() *MembershipAwardType {
	return v.value
}

func (v *NullableMembershipAwardType) Set(val *MembershipAwardType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipAwardType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipAwardType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipAwardType(val *MembershipAwardType) *NullableMembershipAwardType {
	return &NullableMembershipAwardType{value: val, isSet: true}
}

func (v NullableMembershipAwardType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipAwardType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


